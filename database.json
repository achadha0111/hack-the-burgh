[{"level_0":0,"hack_vector":[[0.1520391256,-0.1020016819,-0.0290756337,0.0436319187,-0.0147603322,0.1289782375,0.2019076645,-0.0230068639,-0.0267167836,-0.0125873461,0.0182128809,-0.0745487139,0.1454567611,-0.0695597231,0.063654229,-0.0043752943,0.1981794685,-0.024033241,0.0469645225,0.1216913313,-0.2470261455,0.0317855254,-0.0451539755,-0.0003448601,0.1111294925,-0.037183959,-0.0289566908,-0.1629829854,-0.0293634869,-0.0902937427,0.0728418082,-0.1101843938,0.0258282851,-0.0744193941,-0.0195494723,-0.0123104081,0.1196236759,-0.1419688314,-0.0618705414,-0.0095929205,0.050638333,-0.1247170419,-0.1438140273,-0.0267113373,0.0694504157,-0.0542542376,0.0107254963,-0.0902986154,-0.0131570539,-0.2084007114,-0.144983381,0.0134447748,-0.1120914221,0.0246867891,-0.2123735696,0.1482452154,-0.1407969445,-0.0352803655,0.0387698971,-0.1108625233,-0.0773801208,0.0297700223,0.0840470865,0.0437072143,0.1135303229,0.0201630369,-0.1001076475,-0.1211892962,0.0205911417,0.0239573009,0.0609330088,-0.0465456396,0.0205943361,-0.1163009033,0.0314307362,-0.1289453357,0.1797360182,-0.0020457567,0.0045650434,-0.1365489215,0.1182252541,0.1558528841,0.0444653742,0.1602002084,0.0977967754,0.2031849325,-0.0945940465,-0.0419254862,-0.0286389384,-0.0829871371,-0.1445198953,0.0616494492,0.0917447731,-0.0420424938,-0.0079946779,0.0215363298,-0.1615988165,0.2352001965,0.0173453651,-0.0636459664]],"hackathon_name":"ChariTech","index":0,"project_description":"A Java application to explore the strengths and weaknesses of the slate2learn centres individually and as a whole.The idea of building a data dashboard whoch would be used to target weak areas and reproduce best practice in order to help people learn better in developing countries.We use the simple idea of the size of circles indicating how well a centre is performing for a given metric. We have made the interface very simple where you can choose to nalyse centres individually or together and then will see a dashboard of various metrics for them averaged over the last month. By clicking on a metric you can see its breakdown over several months.We mde this a java applet so that it can run on any platform and used JavaFX to create the GUICollaborating over GitHub for the first time caused many issues in the beginning. We also had trouble designing a GUI and data analysis algorithms before the processing of inputs was complete.We are proud to hve (hopefully) created something which works and provides meaningful information to the user. We hope that the practices used in most of our design are scalable and could be built upon easily to create a nice finished product.We learned how to collaborate over github and also to split work up as a team and communicate with eachother by defining the interfaces between each section before we started the actual code.We hope that this project will be a basis that can be worked on and developed further in the future. We feel that our simple interface is a good idea as it is very visual and makes it easy to judge how well a centre is performing.ChariTechI worked on backend data readingI worked on the front end displayJacobMoxham\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 17, 2017 01:53 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"slate2learn Table 9","project_tags":["java","json"],"project_url":"https:\/\/devpost.com\/software\/slate2learn","keywords":"idea,simple,used,centre,learn,performing,create,proud,see,metric,data,built,github,learned,dashboard,gui,also,well,hope,interface"},{"level_0":1,"hack_vector":[[0.1619172543,-0.1108473167,-0.0199028533,0.0490179025,-0.01645872,0.1372398734,0.1946645379,-0.0367923602,-0.036968939,-0.0013099442,0.0094450647,-0.0701198876,0.1555915326,-0.0751288384,0.0626223981,-0.0010843643,0.2011315078,-0.0086653689,0.0540754162,0.1067205593,-0.2275378108,0.041225221,-0.0540259741,-0.0070752827,0.1338406801,-0.0375410207,-0.0372313969,-0.1769778728,-0.0287657939,-0.0777640268,0.075562343,-0.1175008342,0.0435743742,-0.0796330571,-0.0335971937,-0.0060869474,0.1296849102,-0.1372145116,-0.0511573479,-0.0018427469,0.0493954755,-0.1372939497,-0.163591519,-0.0158864036,0.0412631407,-0.0475804657,0.016590314,-0.0840600282,-0.0147710955,-0.2031251639,-0.1397242695,0.0230883174,-0.1184226498,0.0215987898,-0.1933433861,0.1552100331,-0.1505718678,-0.0044155237,0.0221115053,-0.0798113123,-0.065691404,0.030964734,0.0745569319,0.05028053,0.114504464,0.005492812,-0.1015404165,-0.1279408932,0.0118335877,0.0209260043,0.0744659752,-0.0430882573,0.0141473319,-0.1288962364,0.0297641903,-0.1117702946,0.1961099058,0.0059403307,0.0221315585,-0.1353776902,0.1235918105,0.1517254114,0.0595614426,0.1501156241,0.1198573336,0.1989867836,-0.1013391092,-0.0256529227,-0.0055974242,-0.0888845772,-0.1298260093,0.0671557859,0.0917194784,-0.034429796,0.0131627191,-0.0145753007,-0.1449198425,0.227735132,0.0314278416,-0.071354866]],"hackathon_name":"ChariTech","index":1,"project_description":"A data driven dashboard for the Slate2Learn PlatformWe were inspired by the pitch in the morning briefing. The project seemed perfect for our wide-ranging and typically incompatible programming abilities.The dashboard: it displays data. Well, hopefully, it will display data before the deadline- currently, it displays a series of empty boxes.There is a login page which lets you log in. We also have a PHP API to get data metrics using Javascript.Well.. Carlos decided that Javascript libraries were off limits. So he started the process of coding graphs and maps from scratch... David was a champ and did all the PHP. Tristram was also a champ and did HTML and CSS. Henry used MySQL and Java to compute metrics from the data.I sat there for most of the day trying to help. And I did.. sometimes.Carlos. Just use a library.The sidebar is probably the best part of the project. The other stuff comes in at a close second.Carlos learnt that Javascript libraries are helpful. Everyone else learnt that Carlos should use libraries.Future implementations could include machine learning. Perhaps also some graphs.ChariTechI designed the sidebar.And I made a neural network.But it doesn't workAfter working out the different data pages I whipped up some SQL queries to serve some tasty KPIs. Then I attacked the data head on using Java to decypher the time logs into some more informative data. I also provided some top quality snacks and, of course, made use of Excel.I designed the frontend except for the sidebar, as well as combined the different modules that other team members worked on.Ben Curnow\n          posted an update\n\n          \n            \u2014\n            \n\n                Mar 17, 2017 04:53 PM EDTProject code can be found at https:\/\/drive.google.com\/open?id=0BzhhWdt8_gbhaTNobDlCMEduWW8Log in\n      or\n      sign up for Devpost\n      to join the conversation.Ben Curnow\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 17, 2017 02:00 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Slate2Learn Dashboard Table 8","project_tags":["php","javascript","html","html5","css3","css","java","python","mysql","phpmyadmin","stack-overflow","c","machine-learning"],"project_url":"https:\/\/devpost.com\/software\/slate2learn-dashboard-tbnxwq","keywords":"data,carlos,javascript,also,libraries,dashboard,use,php,well,graphs,learnt,metrics,champ,project,displays,wide,future,empty,everyone,henry"},{"level_0":2,"hack_vector":[[0.1687288731,-0.1234300211,-0.027933443,0.0690187812,-0.0349076316,0.1466281116,0.1993086934,-0.0274500158,-0.03144053,0.0194510557,0.0084725488,-0.040725328,0.1562425941,-0.068547599,0.0696551874,0.0055128592,0.2053269446,0.0084542809,0.0482287779,0.0940702707,-0.2381584197,0.0261222497,-0.0454307459,-0.0137834055,0.1392435431,-0.0199114438,-0.037568327,-0.1850517392,-0.0067730621,-0.0722996816,0.0694201589,-0.1225240007,0.0324848332,-0.0856585652,-0.042414736,-0.0035023107,0.1174343005,-0.1435459107,-0.0618813299,0.0146593433,0.040398851,-0.1356864274,-0.1484585255,-0.0182317775,0.0367338546,-0.0399377532,0.0165945236,-0.0662491694,-0.009303649,-0.1954303831,-0.1216717735,-0.0003494742,-0.1218672544,0.0024969918,-0.1746338457,0.1562967896,-0.1443120688,0.0076376852,0.0261822678,-0.0598079003,-0.0618465357,0.0328479446,0.080085896,0.062708728,0.1161570475,-0.0020310809,-0.1082050949,-0.1262743473,0.0183073897,0.0087684644,0.0701413155,-0.0394220874,0.0125608761,-0.1272726208,0.0005428431,-0.1294973195,0.2004154921,0.0140262516,0.0324831456,-0.1434825361,0.1319419295,0.1615084559,0.0527201891,0.1549812555,0.1241589934,0.2079286426,-0.1034855396,0.0063865962,0.0011680172,-0.0931981057,-0.1295902878,0.079323329,0.0852783844,-0.0169925354,0.0371842384,-0.0162153114,-0.1302256733,0.2188740075,0.045653142,-0.0643304437]],"hackathon_name":"ChariTech","index":2,"project_description":"Dashboard which allows visualisation of real time generated data. Business, Management and Learning Metrics availableWe think it is a really good cause and an opportunity to improve while doing something useful.Analyse data generated by Slate2Learn tablets such as learners' id, session times, incomes etc. and provide easy to comprehend plots both for maintaining and enhancing the learning system.Using computer magic.The data was poorly formatted.How to import CSV files into SQL\nGot more Django experienceAdd more graphs and dataChariTechDid a lot of python work and chartsAdrian Slatineanu\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 17, 2017 02:06 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Slate2Learn Dashboard Table 6","project_tags":["python","django"],"project_url":"https:\/\/devpost.com\/software\/slate2learn-ycjbdr","keywords":"data,learn,slate,using,easy,graphs,got,good,generated,formatted,files,experience,etc,enhancing,django,import,dashboard,csv,computer,comprehend"},{"level_0":3,"hack_vector":[[0.1653354466,-0.1472907364,-0.0156014524,0.0753085092,-0.0374498218,0.1470873207,0.2012403309,-0.0572474711,-0.0285913106,0.0070919129,0.0184991378,-0.0066536278,0.1488507241,-0.0697144493,0.0654763281,0.0325769298,0.2300864756,0.0094399443,0.0388582125,0.0986795053,-0.2207553685,0.0337512866,-0.0539465956,-0.0383456685,0.1492947191,-0.0168328341,-0.0346740186,-0.1994713992,0.0026440071,-0.0636270791,0.0558863729,-0.1257992983,0.0547585897,-0.07981278,-0.0500197895,0.0020534256,0.1201733276,-0.1263895929,-0.0495180972,0.0396181718,0.0339124538,-0.1489509046,-0.1585023701,-0.0232006758,-0.0086878147,-0.0421041511,0.0264444984,-0.0433893465,-0.0172216538,-0.1888910681,-0.0911016986,0.0039439569,-0.1203652546,-0.0198934078,-0.1272156686,0.1519218385,-0.1509623826,0.0386086181,-0.0060494547,-0.0203011315,-0.0491678193,0.0449352339,0.0742504895,0.0726024508,0.1169986799,-0.0287328213,-0.1301023215,-0.1421193182,0.0173347536,0.0022182218,0.0585788451,-0.0345985815,0.0202581268,-0.1416488141,-0.0260197651,-0.1058141068,0.2114901692,0.0094801746,0.056969244,-0.1441238075,0.1462282389,0.1644468904,0.0514654405,0.1539349705,0.135836795,0.1802052259,-0.1301427931,0.0311210733,0.0127840191,-0.1036150679,-0.115501672,0.0898572728,0.0719283149,-0.0048726206,0.065457277,-0.0571377315,-0.1036399156,0.1885532439,0.0689693764,-0.0626746416]],"hackathon_name":"ChariTech","index":3,"project_description":"PCA and simple NNClassifying fingerprints to help identification**Classifying fingerprint images into five categories: A, L, R, T and WWith Python libraries from sklearnHigh variance and long running timePreprocessing images, deploying built-in PCA and Neural Network methods with parameterization to classify images.Some machine learning techniques and image processing skillsFiner parameterization.ChariTechGraph abstraction and information  compressionQiaochu Jiang\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 17, 2017 03:18 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Fingerprints Classification From Table 4","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/fingerprints-classification","keywords":"images,fingerprints,built,classifying,parameterization,variance,image,identification,high,help,five,fingerprint,learned,finer,deploying,classify,classification,challenges,categories,inspiration"},{"level_0":4,"hack_vector":[[0.1572888196,-0.1477650404,0.0090960097,0.0765447915,-0.0485413447,0.1549359113,0.185747534,-0.046047207,-0.0392919816,-0.0086188093,-0.0106034335,0.0208664071,0.1411125809,-0.0737084001,0.0052699125,0.0814871714,0.2533602715,0.0295610968,0.0478679463,0.1033179387,-0.2003312558,0.0115377903,-0.0488713197,-0.0467200764,0.1841527969,-0.0173480883,-0.0751803517,-0.1722449362,0.0366225615,-0.0791518539,0.023556849,-0.1014108285,0.0676315576,-0.0481338613,-0.0344426781,0.0131102633,0.1497102082,-0.1149671525,-0.0004363977,0.0778685063,0.0461545065,-0.1575996131,-0.1827735752,-0.0369249806,-0.0362772159,-0.0520325936,0.0340700261,-0.0134296874,-0.0084201368,-0.1773480475,-0.034596689,0.0344501957,-0.1171418056,-0.0430531688,-0.1122028008,0.158929199,-0.1603558958,0.0683775917,-0.0136627257,0.0306926519,-0.0210544225,0.0438008271,0.0518102758,0.0860808417,0.137103498,-0.0398146547,-0.1351865679,-0.1766040921,0.0122465184,0.0078571532,0.0753803402,-0.0308637526,-0.0067236717,-0.1405263096,-0.0566692948,-0.0724630132,0.1877386421,0.0180285517,0.0824926272,-0.1434304565,0.1128880233,0.1586725414,0.0249076635,0.1338074505,0.1524545252,0.1622167826,-0.1528874338,0.0504244342,0.0091794049,-0.1154839694,-0.0969280675,0.1007148772,0.0380327739,0.0149688879,0.0852857903,-0.0780917704,-0.0748353004,0.1593155116,0.1022302583,-0.0432678163]],"hackathon_name":"ChariTech","index":4,"project_description":"We've improved the efficiency of fingerprint lookup by predicting the type of each fingerprint using machine learningThe log in token for our Jupyter server is einsteinlyChariTecheinsteinly\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 17, 2017 03:29 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Fingerprint Classification Table 11","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/fingerprint-classification-3jofzq","keywords":"model,test,add,import,train,results,raw,size,activation,conv,np,relu,dropout,print,types,pickle,str,maxpooling,batch,keras"},{"level_0":5,"hack_vector":[[0.1647138149,-0.1503376067,0.0015389313,0.080346249,-0.0450921655,0.1600002497,0.1855349988,-0.0435659289,-0.0380121209,-0.0050379429,-0.0107506914,0.0114766452,0.1409255117,-0.0645330474,0.0257915463,0.0626196861,0.2410037071,0.0455782153,0.0462497659,0.0917769223,-0.2069197446,0.0113269566,-0.0505051352,-0.0570647232,0.1654134393,-0.0214547962,-0.0655178428,-0.1866148263,0.0263827797,-0.0701099634,0.0402163975,-0.1086274162,0.0595626198,-0.0558384396,-0.0490349308,0.0152811566,0.1373773664,-0.1172419041,-0.0155366799,0.0867231041,0.0398269482,-0.1533021331,-0.1727773845,-0.0364210606,-0.0282961205,-0.0606471375,0.034488447,-0.0157845356,-0.0124471085,-0.1849613935,-0.0471555032,0.0125864483,-0.120149605,-0.0460380353,-0.099940531,0.1683173329,-0.1557115763,0.0699525923,-0.0101668425,0.0298095755,-0.0324844085,0.0390344858,0.0462308638,0.0901287571,0.1368246824,-0.0430265553,-0.1371460259,-0.1652161777,0.0134206424,-0.0054099741,0.0658698156,-0.0327660814,-0.0053305416,-0.1389047652,-0.0611193441,-0.0882615224,0.2060143203,0.0207317043,0.0873335153,-0.1410886943,0.1262711436,0.1576700807,0.0241946243,0.1282826513,0.1525579244,0.1734515727,-0.1375880539,0.0600864515,0.0128056807,-0.1118124425,-0.0973229408,0.0985902324,0.0392279066,-0.0017230433,0.0791017488,-0.0757831931,-0.0787969902,0.165355891,0.0951579511,-0.0481574126]],"hackathon_name":"ChariTech","index":5,"project_description":"Using greyscale gradient image processing for finger print classificationThe Simprints taskClassifies finger prints into 5 criteriaUsing pythonExtracting the relevant feature data from the imageIt does better than randomWe learned about neural networksChariTechKatie Spimpolo\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 17, 2017 03:28 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Table 4: Finger Print Classification for Simprints","project_tags":["python","numpy"],"project_url":"https:\/\/devpost.com\/software\/finger-print-classification","keywords":"image,labels,file,num,def,test,grid,images,vals,return,np,predictions,data,training,size,get,nn,import,name,len"},{"level_0":6,"hack_vector":[[0.1610600501,-0.1302865297,-0.0123042837,0.0573927015,-0.029086059,0.1364581585,0.2047098279,-0.0339197926,-0.0414607897,0.001919199,0.0036159593,-0.0198028237,0.1448887885,-0.0748547539,0.0411397517,0.0425401777,0.2258865833,-0.0014085111,0.0420380086,0.1167472824,-0.2292585969,0.0221783537,-0.0480168127,-0.0289057139,0.1636505723,-0.0282354355,-0.0515274219,-0.1837820709,0.0064418279,-0.0681547746,0.0412793122,-0.1145095378,0.0538206957,-0.066960223,-0.0417475328,-0.0002561945,0.1282986552,-0.126940459,-0.035541486,0.0406443216,0.0418138318,-0.1449850947,-0.1617086828,-0.030302247,0.0066782995,-0.0576652288,0.0231583994,-0.0536731407,0.0012065342,-0.1910786927,-0.0838984475,0.0112092672,-0.1255458444,-0.0046277251,-0.1493711472,0.1767849177,-0.1626521945,0.0374273881,-0.0029171614,-0.0376495607,-0.0480838269,0.0388136916,0.0654326677,0.0769465417,0.1315625012,-0.0167877469,-0.1280603856,-0.1543290019,0.022418661,0.005385974,0.0712286308,-0.0360121764,0.0033246556,-0.1362498552,-0.0077119851,-0.1055582091,0.1982088834,-0.0032621964,0.0553676374,-0.1370773911,0.1276669949,0.1594090015,0.048724968,0.1431607902,0.1414473504,0.1813273728,-0.1290319264,0.0123126069,0.0090573421,-0.1012770683,-0.1326459646,0.0815189257,0.0750896558,-0.0139739346,0.0478274114,-0.0496818498,-0.1223606244,0.191958189,0.0719993785,-0.0558251552]],"hackathon_name":"ChariTech","index":6,"project_description":"We use supervised classification algorithm. The images of the fingerprints are reduced in dimension using PCAThe need for formal identification in countries were it is almost non-existentIt classifies recorded fingerprints to make comparisson quickerUsing python and its machine learning librariesBugs in the code, memory limitsStrengthening the team bondsImage processing and machine learningImprovement of the algorithm using neural networksYou should run training.py from command prompt for our file to workChariTechdskott\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 17, 2017 03:34 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Fingerprint Classification, table 12","project_tags":["python","machine-learning"],"project_url":"https:\/\/devpost.com\/software\/fingerprint-classification","keywords":"learning,machine,using,almost,file,inspiration,improvement,algorithm,important,image,identification,formal,fingerprints,fingerprint,existent,bonds,learned,comparisson,command,code"},{"level_0":7,"hack_vector":[[0.1272918135,-0.1463578939,-0.0111264512,0.0494159609,-0.0400819071,0.1579669118,0.2041319311,-0.0371825434,-0.0142050171,-0.0378279202,0.014714947,-0.0085675428,0.1290999055,-0.0865810588,0.0283693876,0.0641276166,0.2614116669,0.0219907258,0.0443279147,0.1117120385,-0.226308018,0.0180040225,-0.0438685492,-0.0535269417,0.1388626099,-0.0289403889,-0.0565073304,-0.1829840541,0.0049913004,-0.0907059088,0.0419784151,-0.1096490175,0.0472030975,-0.059424594,-0.0280199703,-0.0081869839,0.1361840069,-0.1293311566,-0.0168171879,0.0431856625,0.039466206,-0.1434756517,-0.180967927,-0.0517185032,0.0186154824,-0.0626617223,0.0357501656,-0.012339741,-0.0288779922,-0.2124196887,-0.078161262,0.031525813,-0.1079159379,-0.0486814529,-0.1665669382,0.1603104025,-0.1451308578,0.0201195702,0.0166069046,-0.0310553983,-0.045381289,0.0326576158,0.0622214898,0.0722944066,0.1198325232,-0.0064543439,-0.1129717529,-0.1562978476,0.0351262055,0.0116312299,0.0600787438,-0.0449894778,0.0171126369,-0.1296572983,-0.0357092358,-0.0994010419,0.1653404832,0.0082580792,0.0609293245,-0.1521933377,0.1185965613,0.1747331768,0.020934388,0.1766895503,0.1222384274,0.1845415831,-0.1381130815,-0.0009270327,-0.0215551965,-0.1015510336,-0.1254735589,0.0814407989,0.0576482341,-0.0166678075,0.0388438888,-0.0379652865,-0.1161866635,0.1776582003,0.0639261529,-0.0608019903]],"hackathon_name":"ChariTech","index":7,"project_description":"We have created a portal for people to view where their donations have gone to.Welcome page 3Welcome pageLogin pageWelcome page 2About pageGoogle maps showing where your nets have been deployedWe have created a web interface for donors to see where their money has gone, and motivate them to donate more.This is for the Against Malaria Foundation.ChariTechSkeleton of the front endWayne Soo Wah Ming\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 17, 2017 03:43 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Table 7: Web App for Against Malaria Foundation","project_tags":["node.js","html"],"project_url":"https:\/\/devpost.com\/software\/web-app-for-against-malaria-foundation","keywords":"web,see,motivate,money,malaria,interface,gone,foundation,donors,donate,created"},{"level_0":8,"hack_vector":[[0.1548876911,-0.1114494056,-0.0318355076,0.0501203761,-0.0233639143,0.1187529638,0.1964986473,-0.011455304,-0.0151101407,-0.0210012142,0.0078853713,-0.0656218454,0.1557738483,-0.0648518354,0.0798364207,-0.0092779137,0.1837560683,-0.0156010324,0.0510037057,0.1273019314,-0.246331498,0.0144516798,-0.0567162558,-0.0033469531,0.1146823689,-0.0270407777,-0.0347428583,-0.1503961384,-0.0203578323,-0.0899912938,0.0477491021,-0.108646661,0.0235679615,-0.0708311275,-0.0152254123,-0.0123400232,0.1087781116,-0.1469997317,-0.0804769322,-0.0037273266,0.0508124791,-0.1156372353,-0.1314857006,-0.0225360841,0.0513714738,-0.0693839118,0.0161631145,-0.0907280669,-0.0153822573,-0.1956557333,-0.1603758931,0.0098738344,-0.1202536672,0.0175873619,-0.1933623254,0.1701153815,-0.1265109926,-0.0305312537,0.0346331373,-0.1088861749,-0.0812423229,0.0388877615,0.0717044175,0.0526478887,0.103742063,0.0276866853,-0.110182561,-0.1249632761,0.0008371245,0.0147797866,0.0594024472,-0.0410259105,0.0133623369,-0.1226824746,0.036540024,-0.1121458337,0.199107632,-0.0012905652,-0.0110984826,-0.1424525529,0.1101282388,0.1563247144,0.0567779429,0.1344272643,0.1060147956,0.2125019133,-0.0863975361,-0.0346633531,-0.012780684,-0.0750616193,-0.1410259902,0.066750966,0.1076035798,-0.0323769599,0.0114946375,-0.0059697088,-0.1723506302,0.261212945,0.011658676,-0.0676494315]],"hackathon_name":"ChariTech","index":8,"project_description":"We find fingerprintsWe chose to help simprints by classifying fingerprints automatically to reduce search times.Our idea was to use machine learning to infer from the training data how to fit images of fingerprints into 5 separate categories.We used sci-kit learn in python 2.7Individual pixels are not the best input to a machine learning algorithm, ideally there would be lots of preprocessing and dimensionality reduction, but we didn't have the time or expertise to do this.Learning very quickly and coming up with a program that uses a library we had never used before, in a language some of us had never used beforeThat things are still very complicated even with a library  - it won't do everything for youImprove the accuracy of our algorithm somehow (we have done a bit of research into general machine learning techniques but not implemented them yet). We would like to reduce the run-time of our learning algorithm so that we can run it on the whole data set instead of just a small subset.ChariTechSimon Crane\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 17, 2017 01:57 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Fingerprint Finders Table 3","project_tags":["python","numpy"],"project_url":"https:\/\/devpost.com\/software\/fingerprint-finders","keywords":"learning,algorithm,used,machine,run,data,fingerprints,would,library,time,reduce,never,fit,general,help,idea,implemented,ideally,images,improve"},{"level_0":9,"hack_vector":[[0.1482888311,-0.1478972137,0.008569845,0.09591043,-0.0560408197,0.1585369855,0.1780178547,-0.0565165095,-0.0448820479,-0.0173243843,-0.0003310188,0.053659793,0.1243585423,-0.0799524188,0.0084788352,0.0694224834,0.2591363192,0.0418465286,0.0550956428,0.0747360811,-0.1760159582,0.0082243672,-0.0539949909,-0.066877,0.1701279879,-0.0103661753,-0.0724373236,-0.1881347746,0.0319397077,-0.0619404651,0.0230693836,-0.1040847152,0.0789627731,-0.050282266,-0.0445629954,0.022966288,0.1497459561,-0.0896421522,0.0040347953,0.1003926545,0.0532536022,-0.1505820155,-0.183800146,-0.0304586943,-0.0608651675,-0.0426256843,0.0455302112,-0.0032558129,-0.0174938496,-0.1783377975,-0.0082239015,0.0288740601,-0.1059948131,-0.0571843423,-0.0792681277,0.1436237097,-0.1611664593,0.0915638655,-0.0268260483,0.0643975139,-0.0035366747,0.0392869823,0.0490931757,0.07962621,0.144665271,-0.0582680441,-0.1385754496,-0.1706144959,0.0147290779,-0.0023869516,0.0607793257,-0.0274514593,-0.013592774,-0.1492042542,-0.0742490962,-0.0697350949,0.1936000139,0.0286418349,0.1117546409,-0.145264104,0.1233320609,0.1529900283,0.022524558,0.1386080831,0.158723861,0.150640741,-0.150711447,0.07242392,0.0222292654,-0.1264621913,-0.0849541351,0.1064537615,0.0251680296,0.0234780386,0.0984086841,-0.1042295098,-0.0496266857,0.1267376542,0.1154431254,-0.0380218811]],"hackathon_name":"ChariTech","index":9,"project_description":"A convolutional neural network-driven approach to fingerprint classificationBuilt for https:\/\/github.com\/SimPrints\/ChariTech\/tree\/master\/fingerprintClassificationChariTechvarkor\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 17, 2017 03:49 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Fingerprint Classification: Table 8","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/fingerprint-classification-table-8","keywords":"tree,simprints,master,https,github,fingerprintclassification,com,charitech,built"},{"level_0":10,"hack_vector":[[0.1465316117,-0.1049692109,-0.0352799632,0.0304675009,-0.0213370752,0.1254466027,0.1866534501,-0.0241077859,-0.0109015573,-0.038558051,0.0129139014,-0.0748854131,0.1341733783,-0.0588936843,0.0575349852,0.0079660835,0.2139776498,-0.0030273632,0.0341844447,0.1397786289,-0.2545311749,0.0132865859,-0.0425710604,-0.0080376817,0.100237146,-0.0260537863,-0.0259875823,-0.1587738842,-0.029218208,-0.1170139015,0.053026855,-0.119440496,0.0228269119,-0.0691488236,0.0017071263,-0.0390203446,0.1086955518,-0.1528337449,-0.0668767691,-0.0150308274,0.0487719513,-0.1119882762,-0.1446254998,-0.0380567163,0.063148506,-0.0777152404,0.0136851724,-0.0759861991,-0.0288528856,-0.2141703814,-0.1435692906,0.0130237117,-0.0945151523,-0.0040451754,-0.207172066,0.1650916338,-0.1155528948,-0.0378011465,0.0376975685,-0.1138896048,-0.0757476762,0.0240608174,0.0707925707,0.0377573222,0.1004992127,0.0338143073,-0.1082976609,-0.1305181682,0.0264911186,0.0320413969,0.0699962899,-0.0445436202,0.0210162923,-0.1197576374,0.0281387828,-0.12060754,0.1702081412,0.0066554314,0.0073126904,-0.1281102747,0.1062531993,0.1603301913,0.0408079289,0.163115412,0.1077479795,0.19779028,-0.1014855355,-0.0514621176,-0.0444701202,-0.0668506622,-0.1342072934,0.0658774674,0.1028967053,-0.0522833131,-0.0196852069,0.0115777161,-0.1645060778,0.2505123913,0.0033002682,-0.0760079548]],"hackathon_name":"ChariTech","index":10,"project_description":"Charity at your fingertipsFlick!You move to a new city to study and chase your dreams of success. In year 2 you build the next Big Thing and move to California. You are a busy boy\/girl, but you want to give to the less fortunate as well. How do you keep up with the changing landscape of altruism around you? You use ChariFlicks, of course. It simplifies the process of giving as far as a simple flick to the right. Just tell ChariFlicks where you are and how you would like to help, and you will be matched to the charity of your dreams.We worked hard, fuelled by KitKats and diet coke.\"We are still running into them\", as MP points out, upon being asked. In the beginning the problems mainly had to do with conversion. The idea is, in order to build an altruism dating application, you need a lot of data about the potential matches. So we downloaded the entire database of registered charities in the UK since 1961. Just to mention, they are over 500 000. Before coming up with a way of processing them, we had to extract the information from a format we had never seen before. But perhaps most importantly, THERE IS A LOT OF DATA, and not enough CPU...Our webpage is very pretty (in Professional, we are good at design!). Also we built a scraper to find the postcode of a geographical location.Don't let the databases guy (jrth2) leave early!!!After a few technical tweaks? Making people happier.ChariTechI ate the most food and wrote the description.I worked on the design and frontend of the websiteBoyko Vodenicharski\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 17, 2017 03:50 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"\"ChariFlicks\", Table 14","project_tags":["json","mongodb","java","css","sql","html","azure"],"project_url":"https:\/\/devpost.com\/software\/chariflicks","keywords":"chariflicks,build,data,next,move,lot,built,dreams,altruism,guy,good,early,enough,entire,extract,importantly,far,find,flick,format"},{"level_0":11,"hack_vector":[[0.1560849696,-0.1217315793,-0.0176957846,0.0358118899,-0.0095362281,0.1267514378,0.205784291,-0.0273059402,-0.0401142761,-0.0102275815,0.005868244,-0.0645136163,0.1423617154,-0.0639594123,0.0363226309,0.0199995358,0.2189920545,-0.0072075818,0.0455400608,0.1339094788,-0.2459199578,0.035698507,-0.0396803059,0.0013047485,0.1417449564,-0.0314070061,-0.0451423638,-0.177322939,-0.0147355879,-0.0945042297,0.0734979659,-0.1222051159,0.0334365591,-0.0708022639,-0.0171694048,-0.0288458057,0.1179954037,-0.1442371756,-0.039342314,-0.0142232701,0.0512793325,-0.1508069485,-0.1624421775,-0.0433722362,0.0607164092,-0.0520290062,0.0029576642,-0.0703929588,-0.0126326792,-0.2057203352,-0.1178532094,0.0234996434,-0.1096464545,0.0172366016,-0.21045506,0.1686463058,-0.1485478431,-0.0268909745,0.0322117358,-0.0957440212,-0.0689905435,0.0263827108,0.0715277866,0.0401573628,0.1098773852,0.0207925644,-0.1070605144,-0.1347373426,0.0322212912,0.0336801708,0.0776770785,-0.0480229557,0.0274176076,-0.1141029894,0.0098249214,-0.1181333214,0.1619446129,-0.0058735865,0.0339787975,-0.1170224398,0.1078800857,0.1386120319,0.0426515155,0.1606610417,0.109747611,0.1994001865,-0.1117972732,-0.0412984267,-0.0324824974,-0.078281492,-0.1267534792,0.0684703737,0.0794759914,-0.0439191721,-0.0148583259,0.0069456277,-0.1548696905,0.2137947828,0.0263527706,-0.0617754981]],"hackathon_name":"ChariTech","index":11,"project_description":"Interactive fun and educational game on material scienceIn order to tackle the first challenge of the Madanyu charity we developed a concept for an interactive game about material science. Since none of the group members has sophisticated coding skills we focused on creating the concept for the game and the visualisation via MS Powerpoint.\nThe aim is to have an exciting storyline combined with theory and challenges about properties, structures, processing and performance of materials. Scores are given at various points of the game as an incentive to get the right answers on the first attempt. Results can be shared with a community of friends and other players worldwide. Finally, the main challenge will be answering questions against the \u201cBoss\u201d to save the princess. Characters can be chosen and customised at the beginning of the game.In the powerpoint you can see, how the game could look like. We have also included one of the challenges, which consists of a card game around the topic of processing.ChariTechMarkus Fink\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 17, 2017 03:59 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Team13","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/team13","keywords":"game,concept,powerpoint,challenges,challenge,first,processing,get,friends,focused,could,given,group,finally,exciting,developed,customised,incentive,creating,worldwide"},{"level_0":12,"hack_vector":[[0.1310335696,-0.1028927341,-0.0333454311,0.0275433548,-0.0165191591,0.1229640543,0.2007010132,-0.0295361411,-0.0140341939,-0.0422660559,0.018563062,-0.0644384027,0.1373006254,-0.062136706,0.0533066541,0.0179348122,0.2255624086,-0.0066123549,0.0324701369,0.1465908736,-0.2445666343,0.0228314195,-0.0375945009,-0.0170006789,0.1037631929,-0.027913494,-0.0257150866,-0.172465533,-0.030849129,-0.1077451631,0.0612639189,-0.1198431477,0.0293182898,-0.0678142905,-0.0070477277,-0.0292392988,0.1141965613,-0.1421554983,-0.0481369607,-0.0043771849,0.0466950722,-0.120354943,-0.1492227912,-0.0500205979,0.0679227859,-0.0843443498,0.0193238389,-0.0667400509,-0.0366712697,-0.2266080528,-0.1339838058,0.0075666639,-0.0966490209,-0.0136430683,-0.2011523396,0.1697135121,-0.1269349158,-0.0428776518,0.038019117,-0.113415055,-0.0773126483,0.0174803082,0.0701249689,0.0420459397,0.1077856347,0.0270691402,-0.1026661322,-0.1298659444,0.0405671634,0.0206777044,0.0589060225,-0.0553935245,0.0207665637,-0.1076085195,0.0207193885,-0.1187764257,0.1686185449,-0.0053791059,0.0197029896,-0.1345822811,0.1075442806,0.1631378829,0.0351941437,0.1695759147,0.0969343409,0.1952479035,-0.1093483567,-0.0507515408,-0.0391947329,-0.0745413005,-0.1472643018,0.0600353591,0.0867716148,-0.0421669334,-0.0311150625,0.0115431156,-0.1661901027,0.2251303196,0.0106939869,-0.0732488483]],"hackathon_name":"StudentHack V","index":12,"project_description":"Race other taxi's for fares in cities around the worldIn gameother playerphone 2customerplayer_winphone 1phone win220 glitchThis game allows for users to race agains other users, they will race to pick up a customer somewhere in the city. The first person to reach the customer wins.Players have to stay on\/close to roads, go too far away and your car will stop and you will have to reverse back to the road!When a somebody wins, all players are relocated to a new city, and the game starts again!You can learn how to get around the city as you play.To create the application we have used mainly JS, for the Maps we have used Mapbox, and sockets we have used pubnub, the server is wrote is node.js using express.Allowing for the car to only drive on the road was quite tricky, after hours of reading the mapbox docs we found that we can customise the map styles allowing to add layers such as roads and buildings, so when everything you can drive on eg motorway, bridge etc.. inherits for roads, so we use this to make sure the player is on a road, when playing it was very hard to stay on the road, so we added a bit off offset to the left, right and front, so aslong as the road was in 30px of either way you are okay ti drive.Multiplayer, this took some time to think about how we wanted this to work, allowing user to see where all the other players are really brings the game to life.if something can go wrong, it will, multiple times. over, and over again.Mobile with tilt control. \n(Then all consoles)StudentHack VShared the load 50\/50Jamie Tregilgas\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 01:36 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Taxi Racer: City Edition","project_tags":["javascript","node.js","pubnub"],"project_url":"https:\/\/devpost.com\/software\/taxi-racer-city-edition","keywords":"road,city,players,game,allowing,drive,used,roads,car,js,go,race,customer,stay,mapbox,users,wins,hours,far,first"},{"level_0":13,"hack_vector":[[0.1418490708,-0.1070601195,-0.0317768343,0.0447424948,-0.0170365181,0.1329998821,0.2052377313,-0.0273695309,-0.0236881133,-0.0050406293,0.0155437542,-0.0547339991,0.1391537488,-0.0676908419,0.0710562766,-0.0033532057,0.2064590752,-0.0109523572,0.0492357798,0.1232728884,-0.2529906332,0.0381140374,-0.0321126357,-0.015781071,0.1090650409,-0.026745379,-0.0278944671,-0.1798539311,-0.0154653164,-0.0851808265,0.0690423548,-0.126489222,0.0300737284,-0.0812427253,-0.02257392,-0.0249821115,0.1119251773,-0.144803673,-0.0605709255,-0.0060384711,0.0439215302,-0.1428295374,-0.1506900638,-0.0414197259,0.0626941696,-0.0431415513,0.0056201988,-0.08295203,-0.0175570007,-0.2064135373,-0.138275519,0.012000571,-0.1111916527,0.0078881234,-0.2051448971,0.1591710299,-0.1359675378,-0.0212392863,0.0356391035,-0.0964508355,-0.0772879124,0.0222716294,0.0813364238,0.0458657183,0.1066640913,0.0174653567,-0.0968323871,-0.1238173544,0.0401095264,0.0294062607,0.0666319802,-0.0486819446,0.025108071,-0.1207021102,0.0225741509,-0.1368546486,0.1710032523,0.0059870533,0.0136901364,-0.1308725923,0.1253385246,0.154880926,0.0573840477,0.1704275608,0.1083857939,0.2062311321,-0.0913562849,-0.033852078,-0.0163562894,-0.0710184947,-0.1464283317,0.0579625182,0.0994269624,-0.0476188548,-0.0030618317,0.0130803958,-0.1542096138,0.2131492496,0.0127247209,-0.0653585792]],"hackathon_name":"StudentHack V","index":13,"project_description":"Making Mortgages easier for both Barclays and for the customerThe idea sparked off by the utilization of chatbot technology in order to make mortgage advisers virtual for the initial screening process, giving information to applications without having to go for a face-to-face meeting at a bank (for example, when considering multiple properties).  Once a quote is agreed upon, a single-click button will allow the customers to reach customer service, along with a quote being logged to Barclay's servers, streamlining the application process.Additionally, the user's selections and profiles could be saved and utilized to display a range of useful nearby services such as relocation companies and interior designers, who are again, at a one-button click away from scheduling appointments. If desired, companies could promote themselves via subscriptions to appear higher on this listDelivers a quote on mortgage interest based on algorithms involving the loan amount, payback time, deposit, job stability and income of the client. Allows for one-click appointment schedules with Barclays customer service and shows a list of nearby services to the supplied post code.Android studio, eclipse, and lots of paper for algorithm calculationsMy computer died, and then went through the resurrection. My phone cracked in the bathroom, despite being 2 weeks old. Also, the importance of not using third party chatbot API (due to this being a corporate project) meant that the chatbot had to be simulated by hand.But hey, at least's it is finishedPulling this stunt off in such a short time with my teammatesBanking is a highly regulated sector, meaning data is often not available to developers, resulting in us\nlearning a lot about mortgages.\nHow to simulate chatbots in android.\nIntuitive UXNetworking! Linking to Barclay's servers and third party APIStudentHack VAll android implementation, chatbomt implementation, some engine advice.First time using Java, helping the team on whatever i could, calculations engine...Java + Calculations. Plus got really interested in learning Android Development.Engine implementation, calculation algorithm, testing. Used Java for all mentioned parts.Yijie Xu\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:18 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MortgageMe!","project_tags":["java","android-studio","xml"],"project_url":"https:\/\/devpost.com\/software\/mortgageme","keywords":"chatbot,click,quote,list,could,service,servers,button,customer,barclay,process,party,one,nearby,face,mortgage,services,companies,android,time"},{"level_0":14,"hack_vector":[[0.1561244428,-0.1194898337,-0.0192051511,0.0548852608,-0.0270537548,0.1497317851,0.195783183,-0.0431202166,-0.0207997281,-0.0145561509,0.0241953563,-0.0428064317,0.1487226635,-0.0614547841,0.0584639907,0.0024595375,0.2188558877,0.0000336869,0.0447489284,0.1224967837,-0.237499088,0.0260997321,-0.0343414843,-0.0106866788,0.1375083327,-0.0305212773,-0.0244290456,-0.1854951382,-0.0214296412,-0.0882445797,0.0726241767,-0.1155910864,0.0330472142,-0.0752680823,-0.0138372425,-0.0212489814,0.1198707297,-0.1302587986,-0.056300234,-0.0021238038,0.0594696514,-0.1390079409,-0.1467167288,-0.0356861874,0.0374271385,-0.035752669,0.0113767534,-0.0576836728,-0.0213818569,-0.204182595,-0.1275673658,0.0191614926,-0.1169499978,-0.0047297366,-0.1998131126,0.1568738073,-0.1339671761,-0.0049425648,0.0291913506,-0.0784258321,-0.0602500215,0.0253609866,0.0700221956,0.0412840806,0.1138700619,0.0178210754,-0.1067839339,-0.138529852,0.0198147949,0.0178106055,0.0603220314,-0.0367048569,0.0363408849,-0.1242902502,0.0085430555,-0.1159370169,0.184919402,-0.0060643973,0.0163514148,-0.1356698871,0.1158407182,0.164002791,0.0398476981,0.1746480763,0.1217900142,0.2044697106,-0.1028388068,-0.0223596729,-0.0202469695,-0.0706188157,-0.1303864866,0.0823133588,0.0848504826,-0.0336936601,0.0086290948,-0.0107952561,-0.1382986158,0.2377939522,0.023995921,-0.0617568009]],"hackathon_name":"StudentHack V","index":14,"project_description":"The Virtual Drum enables you to experience an unreal music tactile sensation,It turns your screen into living studioShow our products to other people,so we can got useful feedback from users to improve our user experienceShow our products to other people,so we can got useful feedback from users to improve our user experienceOur team members, from left to right: Ziyuan Chen, Yangguang Li, Liang Huang, Boyin YangGroup DisicussionTestingTestingTestingWhat do you do when music games start becoming stale? \nCreate something entirely new and addicting! \nThat's why we invented the Virtual DrumFeel the drum using Ultrahaptics tactile technology\nOculus to boost Visual experience \nBe more attentive, focused, and perceptive.\nIt is really simple and relaxing, reduces stress and depressionLeapMotion  detects your hands movements\nWhen you do the left press \/ right press, Ultrahaptics reacts with tactile feedback\nOculus delivers sound-beat and vision effects\nDevelop the music game by using Unity.Achieved our initial goal and developed a perfective prototype in 36 hours. \nEffective team work and precise workload distribution.Teamwork\uff0c Unity development, C# programming, VR developmentStudentHack VC++ ,Sound processing,Audition\nStatistics Analysis\nUpdate Project Log\nUser FeedbackI worked for the unity visualization and helped with integrate leap motion and ultrahaptics part.I worked for the sensing of hand pressing and corresponding logics in UnityI work for extracting time stamp of music and sensing of hand pressing.Liang Huang\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:53 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Virtual Drum","project_tags":["unity","c#","oculus","leap-motion"],"project_url":"https:\/\/devpost.com\/software\/virtual-drum","keywords":null},{"level_0":15,"hack_vector":[[0.1608188152,-0.1142752022,-0.0313124135,0.0458880737,-0.027489325,0.1272222996,0.1990899146,-0.0248134825,-0.0111782365,-0.0336842351,0.0127552189,-0.0541574173,0.1413616538,-0.0534138568,0.0623051338,-0.0079045333,0.1985181272,-0.0096562887,0.043981716,0.1441810429,-0.2487151474,0.0120802345,-0.0383281186,0.0021927489,0.1203306392,-0.0267895591,-0.0253249612,-0.1594623923,-0.0291048139,-0.1126300246,0.0564030148,-0.1054410338,0.0211282894,-0.0689125657,-0.0001484752,-0.0218861215,0.1113869175,-0.1488818526,-0.0740099549,-0.0036401453,0.0558368862,-0.1123943925,-0.1220071465,-0.0392996892,0.0575267561,-0.0773467943,0.0161857773,-0.081106104,-0.0273125526,-0.2158310711,-0.1554493904,0.0204270035,-0.1127191857,-0.0057051037,-0.2058214843,0.1645318121,-0.1217437088,-0.0421186574,0.0407064967,-0.1083063334,-0.0764716789,0.0287910905,0.061044313,0.0359235108,0.1052984372,0.0308588501,-0.115842551,-0.1205125526,0.0075962301,0.0152745089,0.0536612459,-0.0407006629,0.0176721103,-0.1171206832,0.0249189381,-0.1102724895,0.1803138554,-0.0076887426,0.0010458577,-0.1463456452,0.0959892347,0.1562779099,0.030535724,0.1563485414,0.1088879928,0.2083963752,-0.0931236595,-0.0405529104,-0.0387459546,-0.0684776977,-0.1373382062,0.074148491,0.0929296538,-0.0299258623,-0.0185623206,0.0041643078,-0.1684638262,0.2493622005,0.0043706745,-0.061641667]],"hackathon_name":"StudentHack V","index":15,"project_description":"Your maze, your hissIts inspired by the age old popular Snake Game we have played since the Nokia 'not-breaking' phone age.So this project will use Project Tango to detect the surroundings and create a maze of the room for the player. So its his maze. Also, he will be the snake while playing so its his hiss. Food will be placed along his way. He has to eat it and any collision with the room furniture or walls will be a crash.We built it using Unity and having C# codes in it. We decided on this idea yesterday after looking at an idea which didn't work out so we were unable to complete it.We faced A LOT OF CHALLENGES. We generally write down all situations beforehand and detect how to overcome them. How to detect the furniture? How to differentiate it from furniture? How will the snake position be relative to camera? We HAVE NEVER USED UNITY OR GOOGLE TANGO. Plus, no time.We feel we came up with an innovative idea and had the urge to learn something new. We learned both the new languages as much as we could. We faced certain challenges in the beginning but we didn't give up.We learnt that that there is so much to learn! We learnt Unity and snake game functioning.There can be loads of additions such as jumping food, bouncing furniture etc.StudentHack VStuti Sethi\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 06:16 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SnakeMaze","project_tags":["c#","unity","c","augmented-reality","project-tango"],"project_url":"https:\/\/devpost.com\/software\/snakemaze","keywords":"furniture,snake,detect,idea,unity,challenges,maze,faced,project,food,room,new,game,learnt,tango,built,learned,learn,age,much"},{"level_0":16,"hack_vector":[[0.155967474,-0.1583332717,0.0102519235,0.0767516866,-0.0445971563,0.1637566984,0.181255281,-0.063295573,-0.0321111307,-0.032029409,0.003663575,0.0247576758,0.1284579933,-0.0738976672,0.0165574029,0.068461962,0.2606607974,0.0335288532,0.0634022132,0.0874236599,-0.1962005496,0.0158636998,-0.0543660522,-0.0618141927,0.1544460505,-0.0111658946,-0.070644781,-0.1733587682,0.0298870932,-0.0938568339,0.019832788,-0.1128894165,0.0688198507,-0.0583607815,-0.0353169255,-0.0016627982,0.1407133341,-0.1144855917,-0.019259192,0.0716138855,0.054681804,-0.1457594782,-0.1782306433,-0.0373573825,-0.0424498245,-0.0571723059,0.0422769748,-0.0078117913,-0.0214519203,-0.1784130931,-0.0444086418,0.0438460112,-0.1148555502,-0.0516536608,-0.1060909629,0.1589575261,-0.1541949809,0.0599185638,-0.0051058317,0.028998889,-0.0303364694,0.0472300574,0.0523913987,0.0857294351,0.1310314387,-0.0299316626,-0.150821358,-0.1759969592,0.0044758501,0.0154874986,0.0760658383,-0.0278931893,-0.004958963,-0.1546182483,-0.0615491085,-0.0643474087,0.1982305944,0.0374521129,0.0916050896,-0.1427506804,0.1151974425,0.1546929032,0.0212329682,0.1281387955,0.1656952053,0.1563734263,-0.1474675238,0.0451177992,0.0034750036,-0.1064351797,-0.0870060623,0.1028700396,0.0480583832,0.0106435725,0.0824159831,-0.0919843018,-0.0769746155,0.1605068296,0.0895399079,-0.0498475656]],"hackathon_name":"StudentHack V","index":16,"project_description":"Mercury purple velvety dreamsTerminatorMimics the nightmare visions of our favourite evil robot from the futureOvernightSleep deprivationNot falling asleepDon't have a second serving of gyrosTANGO5000 = T5000 + Google TangoStudentHack VHoria Porav\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 04:17 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"T5000","project_tags":["microsoft-hololens","azure","c#","unity"],"project_url":"https:\/\/devpost.com\/software\/t5000","keywords":"tango,visions,inspiration,asleep,built,challenges,deprivation,evil,falling,favourite,future,google,gyros,learned,terminator,mimics,next,nightmare,overnight,proud"},{"level_0":17,"hack_vector":[[0.132062152,-0.1133918315,-0.0114006074,0.0578252673,-0.0351554938,0.1486253738,0.2067792565,-0.0409157425,-0.0145553006,-0.0346793756,0.0152832698,-0.0304092485,0.133381784,-0.0726532191,0.0407056324,0.0343144648,0.2473374009,0.0177227855,0.0424275398,0.1181745082,-0.2236959338,0.037229687,-0.0425152481,-0.0436549522,0.1205227077,-0.0126653602,-0.0418826342,-0.1897703558,-0.0069991848,-0.0961783603,0.0495276637,-0.1103442982,0.0610767826,-0.0828096867,-0.0144107798,-0.0170775019,0.1398455203,-0.133876726,-0.0434483364,0.0253624506,0.039539475,-0.1525655985,-0.1600584388,-0.0490543358,0.0288169999,-0.0577429831,0.0236910153,-0.042651806,-0.027942786,-0.20882532,-0.1115354896,0.023029469,-0.1061313301,-0.0310413372,-0.166355744,0.1501823217,-0.1405353993,-0.0014706578,0.0369606838,-0.0651904717,-0.0547760986,0.0243312735,0.0835595801,0.0488898568,0.1149155498,-0.0037159545,-0.1166261509,-0.1457472146,0.0355061516,0.0311147179,0.0583475903,-0.0523531623,0.0129069248,-0.1357253194,-0.0177239757,-0.1214626431,0.1791158766,0.0102929408,0.0452816859,-0.1543212086,0.1158532351,0.1624954641,0.0435595661,0.1731994152,0.1192298606,0.1777102202,-0.1276771277,-0.0078451382,-0.0181186944,-0.1055434719,-0.1380295753,0.0755636767,0.0733499378,-0.0201850738,0.0261494461,-0.0237219073,-0.1384381354,0.2034762949,0.0429549441,-0.069693476]],"hackathon_name":"StudentHack V","index":17,"project_description":"futuristic door managementFor when you're not home, but still need to get the door. Autodoor is a futuristic door bell system which uses facial recognition and matrix to provide full control over the door without needing you to be present. Autodoor can automatically open the door for people who have been added to the trusted list.Autodoor implements an RFID reader, an LCD screen and a camera with facial recognition for identifying individuals.Hardware used:Software:Languages:StudentHack VMatrix and backendI help with the idea and built the android app.Michael Telatynski\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:56 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AutoDoor","project_tags":["matrix","node.js","arduino","python","android"],"project_url":"https:\/\/devpost.com\/software\/autodoor","keywords":"door,autodoor,matrix,rfid,pi,facial,reader,recognition,raspberry,screen,camera,futuristic,ips,individuals,implements,identifying,home,hardware,get,arduino"},{"level_0":18,"hack_vector":[[0.1534986198,-0.1531579643,-0.018653797,0.0463358164,-0.013305204,0.1424850971,0.2169493288,-0.0470395833,-0.0257280003,-0.0307706725,0.0046382868,-0.0298694242,0.137244001,-0.0666576177,0.024661392,0.0304749086,0.2415989488,-0.0088900067,0.0374158323,0.1275624186,-0.2492834628,0.0326173492,-0.0309681408,-0.0136169642,0.1500186771,-0.0297877993,-0.0453764871,-0.1750098467,-0.0196241252,-0.1104776412,0.0713251084,-0.1240547076,0.0410208628,-0.0596101917,-0.021044502,-0.0365575999,0.115487583,-0.1352477968,-0.0264367666,-0.0016053496,0.0668567717,-0.1464534402,-0.1528735459,-0.0592714436,0.0360438563,-0.0609407425,0.0056551499,-0.044084698,-0.0333390012,-0.2080715895,-0.0939828902,0.0322309621,-0.1002837196,-0.0100543303,-0.1930717528,0.1557617933,-0.1575200409,-0.0318936519,0.0123118619,-0.063334249,-0.0631877258,0.0333804004,0.0609910861,0.0271147229,0.1103217155,0.0130454022,-0.125082165,-0.1352628469,0.0296228621,0.0367775634,0.0603766963,-0.045382373,0.0305522233,-0.1133377403,-0.0118325977,-0.0976572782,0.1619932801,-0.000487705,0.0330296345,-0.1351957619,0.1068379357,0.154314965,0.0170411691,0.1768047363,0.1189780757,0.2069539279,-0.1166881099,-0.0133893471,-0.0281114317,-0.074667953,-0.1111290008,0.0857588053,0.0655249953,-0.017883556,-0.0141513264,-0.0074320114,-0.1468872726,0.2048107833,0.0352551639,-0.0505622923]],"hackathon_name":"StudentHack V","index":18,"project_description":"A 3D Vr hunting game coupled with a 2d gameWe Wanted to create a party game and VR is also mega cool. The problem is that VR headsets are expensive and most group of friends have zero or oneOne player plays in VR as the Minotaur and has to kill the other players who play in a 2D maze. A Big game of hide and seek, the Minotaur can see the soul of the other players trough walls (but they all have the same color so he doesn't know who is who)Unity\nGoJson for Unity\nAnimation\nSleepReal time Maze + Position Server (in Golang)StudentHack VI did the Unity 3D and 2D GameJustin Glibert\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 04:52 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Project Minos","project_tags":["unity","go"],"project_url":"https:\/\/devpost.com\/software\/project-minos","keywords":null},{"level_0":19,"hack_vector":[[0.1391253918,-0.099784404,-0.0227601994,0.0259762164,-0.0111483065,0.122582145,0.2010523826,-0.0195310954,-0.0250672251,-0.0048477445,0.0077827326,-0.0753019378,0.1365639418,-0.0743905008,0.0608684793,0.0010108373,0.2020732313,-0.0182712264,0.05202296,0.127489537,-0.2453594059,0.0363786928,-0.0454889536,-0.0062422487,0.1147189587,-0.0314734206,-0.0368406102,-0.1615916044,-0.0135610979,-0.1058949903,0.0596897565,-0.124885805,0.0291771051,-0.0800974444,-0.0168010239,-0.0230412465,0.1170637161,-0.1477719992,-0.0553467274,-0.0172120742,0.0480221324,-0.1322721988,-0.1477841586,-0.0355624892,0.0710352808,-0.0548622869,0.010651256,-0.0844176337,-0.0140090669,-0.2005435824,-0.1500216424,0.0309993569,-0.1139716804,0.0227041598,-0.2135315239,0.1575424969,-0.1388219744,-0.0342943929,0.0378843732,-0.1068400592,-0.0732759237,0.0225893315,0.0758117065,0.0485235378,0.1070777103,0.0202879068,-0.0915410817,-0.1254948527,0.0270508956,0.0282744225,0.0772755072,-0.0530305542,0.0176052395,-0.117876932,0.0442536175,-0.1223216057,0.1677267104,0.0117917107,0.0043134904,-0.1354058683,0.1175959036,0.1500362456,0.0584914573,0.1589724123,0.1102198139,0.2040096074,-0.0937081724,-0.0502338074,-0.0197369084,-0.0688708946,-0.1438492388,0.0493062474,0.1087990999,-0.0389302894,-0.0128512522,0.0106013557,-0.1696226895,0.2295795828,0.0056384737,-0.074108094]],"hackathon_name":"StudentHack V","index":19,"project_description":"An inovative way of saving money using your purchase historyWe all know the feeling when we trust a store or an online shop and we buy all the products we need from there, not caring about the competitors. At the same time, some of the products that we usually buy have a large addition to the original price. Therefore the idea of this application came as a solution!SaveIt analyses last purchases of a customer and based on that information it provides a cheaper market alternative for each product that did not have the most advantageous price. Our application compares prices for the same product from different online resources, it offers statistics of the money that could have been saved by buying products from a different store.First of all, our website and static files have been running on a node.js server and have been built in HTML, CSS and angular.js.\nSecondly, the database was created using PostgreSQL, as well as having a restful API built in SpringBoot.\nFinally, We have also used price API.The majority of the challenges came from the back-end part, the most relevant one is the asynchronous management of restful API request. It runs as a job so it needs to be queried frequently in order to fetch the response. Furthermore, this has made the front-end templates harder to render giving us no choice other than improvising a caching system focussed around our database.3500 lines of working code.It was a great challenge as it was the first time for us to use SpringBoot. The level of abstractification is really high wich makes it really complicated to debug. A large amount of time was allocated to the implementation of the logger.Several features can be added in the future, they are related to studying the transaction behaviour of the customer in order to offer suggestions for related products regarding their needs.StudentHack VAnca Cristian\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:54 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SaveIt","project_tags":["bootstrap","java","postgresql","angular.js","maven","node.js","tomcat"],"project_url":"https:\/\/devpost.com\/software\/saveit","keywords":"products,time,built,price,api,buy,saveit,needs,came,restful,challenges,springboot,end,related,online,order,different,database,customer,product"},{"level_0":20,"hack_vector":[[0.1435985267,-0.1050245985,-0.0113099841,0.0361101963,-0.0196626149,0.1377297491,0.2164497674,-0.0382134765,-0.0368850082,0.0038614273,0.0111646345,-0.0594278276,0.131749332,-0.068317011,0.0602587126,0.0335394554,0.223796472,0.0064251516,0.0364924967,0.1227809563,-0.2287677526,0.0514272861,-0.0526003689,-0.0287977159,0.1193145141,-0.0128494082,-0.0416294597,-0.193251282,-0.0166838393,-0.0882514939,0.0682630241,-0.1305988133,0.0454076789,-0.0927554592,-0.0219100546,-0.0165054258,0.1251256466,-0.1372129172,-0.0441291481,0.0051185121,0.0286812633,-0.1591814607,-0.151305452,-0.0386993736,0.0462894849,-0.053291738,0.0163972583,-0.065568544,-0.0241488591,-0.2068452537,-0.1122286022,0.0165300425,-0.1126836613,0.0055385898,-0.1710430235,0.160209015,-0.1494321823,0.0073307478,0.0216665082,-0.0874457583,-0.0551233068,0.0224912371,0.0816217959,0.0628934428,0.1145399362,-0.0016536223,-0.1118145436,-0.1326940805,0.0414233953,0.0196655858,0.0730379149,-0.0540190861,0.0262088999,-0.1271973699,0.0174366981,-0.1360156685,0.1695712656,0.0061225775,0.0426245742,-0.1384160817,0.1313302517,0.1550922245,0.0744760185,0.1571156681,0.1196993738,0.1817696244,-0.1211444661,-0.0339331105,-0.0014967067,-0.0963842273,-0.1510727257,0.0582717322,0.0981548429,-0.0433752425,0.0074115796,-0.0049016024,-0.1385051459,0.194116205,0.0230027903,-0.0654571429]],"hackathon_name":"StudentHack V","index":20,"project_description":"Text Mining and Semi-Supervised Ensemble Learning to detect harassment in SMSWe used two publicly available datasets:link: http:\/\/chatcoder.com\/DataDownloadA user signs up, and then sends an SMS using Twilio API. When the server receives the text, its classified and forwarded to the intended recipient.A D3 graph accompanies the hack that visualises the user messages and updates the colours (red\/green) to show if a person has committed harassment.We are using an SVM and an LLDA (Labelled Latent Dirichlet Allocation).For the SVM we are using a Bag-of-Words model.For the LLDA, we using Google's list of banned words as labels. When we get a new message we get the topic distribution for the message, and classify the message as harassment based on the sum of the topic distributions.Improving the accuracy for the model. We discovered that ensemble learning had the best results after continuously testing with 10-KStratified Fold.StudentHack VIzz Abudaka\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 04:48 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HackHarassment","project_tags":["python","django","scikit-learn","nltk","twilio","d3.js"],"project_url":"https:\/\/devpost.com\/software\/hackharrassment","keywords":"using,message,labeled,svm,words,get,llda,model,datasets,cyberbullying,harassment,accuracy,user,topic,hack,group,accomplishments,green,graph,google"},{"level_0":21,"hack_vector":[[0.1280868053,-0.0780118555,-0.034550067,0.0357023329,-0.0151915103,0.1150962487,0.2103429884,-0.0110694151,-0.0366156921,-0.0010023214,0.0151908528,-0.0785513446,0.1409021467,-0.0715346262,0.0743916929,-0.0104085552,0.189730525,-0.0194156561,0.0380584262,0.1350272149,-0.2384841889,0.0370295085,-0.0428479314,-0.0016608379,0.1071119756,-0.0182541478,-0.0321473591,-0.1672813445,-0.0228957459,-0.0824709833,0.066602692,-0.1191259846,0.0212700758,-0.0761202276,-0.0079136351,-0.0122419829,0.1119399071,-0.139919892,-0.0636586547,-0.0220620763,0.044797644,-0.1392223239,-0.1405946612,-0.0235311463,0.0783917531,-0.0431202576,0.0042499565,-0.0969750211,-0.0101324674,-0.2054729611,-0.1506213248,0.0136237871,-0.1038761064,0.0350238457,-0.2148121595,0.1570237428,-0.1354311109,-0.029954005,0.0369099528,-0.1336102039,-0.0763241872,0.0297008231,0.0848784298,0.0427120738,0.1078923792,0.0252603162,-0.0816199481,-0.1194221973,0.0374148265,0.0205344241,0.0578009486,-0.0443914048,0.0271441489,-0.1090366617,0.0508549698,-0.1371528506,0.1600730568,-0.0089477571,-0.0004064177,-0.1265410334,0.1217761189,0.1525173634,0.0819826648,0.1615549177,0.0925291032,0.2075174302,-0.0868933648,-0.056847062,-0.0207400788,-0.0757956803,-0.1583184153,0.0494540371,0.112533547,-0.0494194068,-0.0119989142,0.0297370311,-0.1779692918,0.2371077091,-0.00268403,-0.0660690814]],"hackathon_name":"StudentHack V","index":21,"project_description":"Artistic journey of the inwards experience of mental health issues, aiming to raise awareness and understanding.Main menuAnxiety sceneAnxiety sceneDepression sceneWe wanted to spread awareness of mental health issues and provide a better understanding of the problems that are faced by sufferers, including those who suffer as a result of harassment. We wanted to recreate the experience of having to deal with anxiety and depression by making use of the technology available to us.The interactive experience uses a MySQL database to send heart rate data from an iOS app to a web page using a PHP API. The heart rate is then called from a Unity script which changes the user experience in real-time.We used Unity and C# as a game engine, and connected the PC app to an iOS app that we made. We made use of an algorithm we found online which allows us to measure the user's heart rate in real-time using a technique involving the torch and camera. The heart rate is sent to a MySQL database, and the data is then sent to a web page using our own PHP API. Changes in heart rate are automatically detected by Unity, where a script keeps a constant connection between the interactive experience and the database.Initially, our plan was to use a MUSE headband - which unfortunately was not available to us. We also intended for the experience to be in VR, however we were unable to rent any of the hardware for the project. We adapted our ideas to make them work with the equipment available to us. The most challenging problem that we had was to keep an open connection between the database and Unity, as the script was making a call to the database once each frame (about 60 calls per second). We managed to reduce the number of calls made and to keep the connection open for the duration of the experience.We are very proud of being able to put together a good range of functioning and high-level technology in order to create a smooth synergistic experience. Using the user's heart rate to evaluate how the experience should change was challenging but was extremely rewarding to watch. Seeing a user place their finger on an iPhone camera and watch the experience change accordingly was a good feeling. We're also proud of being able to produce the idea to a degree we are happy with despite not being able to access the technology we initially wanted.We learned how to connect a web page to a Unity script and apply changes in real-time according to the data gathered. And we learned that you can measure your heart rate by scanning your fingertip on your phone's camera! We've learned a lot of valuable things like managing API calls per minute, managing frame-rate in Unity, and manipulating an environment at run-time.Discussing with one of the mentors we decided that there are a few future applications of STORM. One would be to refine the experience in order to assist those suffering from mental health issues express themselves to those who have not. Another possible application would be to expand our database in order to collect information based on age, height and weight with the intention of performing some kind of metadata analysis.StudentHack VI worked on the Unity project, including the scripts, the user interface and the interactions.iOS Heart Rate Monitor App \/ PHP API + DatabaseAlessia Nigretti\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 04:04 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"STORM","project_tags":["unity","c#","mysql","php","json","objective-c"],"project_url":"https:\/\/devpost.com\/software\/storm","keywords":"experience,rate,heart,unity,database,script,us,user,using,learned,time,data,proud,technology,page,order,made,able,api,available"},{"level_0":22,"hack_vector":[[0.1215555966,-0.0964450389,-0.0196504723,0.0330817401,-0.0212975387,0.1268776655,0.2138071656,-0.0186543744,-0.0285841376,-0.0139324972,0.0111881262,-0.0614957288,0.1357095391,-0.0736308098,0.0497990102,0.0346113816,0.2361799926,-0.0004455852,0.0351828448,0.1343621612,-0.2328512371,0.0473058671,-0.0402907431,-0.0301891509,0.113182053,-0.0244097859,-0.0394002683,-0.1899236739,-0.0140634738,-0.0837591514,0.0644437596,-0.1210383549,0.042187009,-0.0791111737,-0.0197835807,-0.0014664162,0.1254690289,-0.1315476298,-0.0346193016,0.0080541968,0.0254436415,-0.1579506546,-0.1607086658,-0.048125118,0.0550349988,-0.0664321557,0.0139147788,-0.0639846176,-0.0193196386,-0.2140274197,-0.1207893863,0.0064813369,-0.1058497205,-0.0089811357,-0.1847365946,0.151898548,-0.1511788368,-0.0149519853,0.0308443084,-0.0976274908,-0.0662705675,0.0330690257,0.0805966631,0.0585670918,0.1115317494,-0.0008112038,-0.0959814563,-0.141029492,0.0477785431,0.0140144676,0.0585227758,-0.0618846826,0.0259307753,-0.1081551686,0.0118557885,-0.1398611218,0.1637504399,-0.00794838,0.0390453413,-0.1427134275,0.1264796853,0.1632435024,0.0599812046,0.1757141799,0.0987435728,0.1829791367,-0.1191387028,-0.0287815854,-0.0134152509,-0.1037500873,-0.1534559429,0.0582076162,0.0756406263,-0.0366533548,0.003778192,0.0056505185,-0.1556304246,0.1970587224,0.0310751405,-0.0728139654]],"hackathon_name":"StudentHack V","index":22,"project_description":"Replacing traditional authentication method by using device fingerprinting for seamless login experience for customerloginFormTo improve the login process for bank customers by enabling seamless re-logins and avoiding long, unnecessary questions.It uses 25 different device metrics to generate an unique identity for a logged in user.We used client side javascript to get various device metrics ranging from the fonts and plugins installed on the browser to creating an image on the canvas and hashing that. Additionally, we used screen sizes and in total 25 different measurements to generate an identity for each device that logs in the system. This information is then stored in the database. When the user logs in to the system, their email and password is then used to retrieve that identity and compare their current identity to the model we've built up in the past.If the match is below a certain threshold, the user should be asked to answer all the traditional questions or perform 2 -factor authentication. However, if its a match, then the aforementioned processes can be skipped to enable a better login experience.StudentHack VGisi Musa\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:47 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Login authentication via device fingerprinting","project_tags":["javascript","html","html5","css","node.js","express.js","jquery","bootstrap"],"project_url":"https:\/\/devpost.com\/software\/login-authentication-via-device-fingerprinting","keywords":"device,user,metrics,identity,login,generate,used,match,information,javascript,displaying,questions,logs,current,improve,built,models,system,browser,model"},{"level_0":23,"hack_vector":[[0.1534597129,-0.1323974729,-0.0087327231,0.0626602918,-0.022686718,0.1472493708,0.213630408,-0.0525217615,-0.0598647483,-0.0006407328,0.0050538364,-0.0199350938,0.1498150229,-0.0750877932,0.0329622515,0.0255731605,0.2348293364,-0.0010165033,0.0484462157,0.1162580401,-0.2196493,0.0458991565,-0.0433416963,-0.0213715937,0.1686716229,-0.0227677356,-0.0521887355,-0.1882570833,-0.0108186929,-0.0808345303,0.0676807761,-0.1246877834,0.0581664965,-0.0696429834,-0.035237778,-0.0158899501,0.1389556378,-0.1141821668,-0.0285492409,0.0279693864,0.0687126666,-0.1624970734,-0.1691167504,-0.0357916951,0.01220401,-0.0277116913,0.0151283192,-0.0552319624,-0.0128656272,-0.1877195239,-0.0758995786,0.0247558914,-0.1173724383,0.0059250258,-0.1655635834,0.1523666382,-0.175357163,0.0266734194,0.0076215835,-0.0437412113,-0.0443742275,0.0375412963,0.0678343698,0.0506828837,0.1296156943,-0.0127983773,-0.1291378289,-0.1524699032,0.026704777,0.0232761465,0.0649886206,-0.0380798616,0.015596142,-0.1311656237,-0.0133436844,-0.1075135991,0.1840604395,-0.0019409209,0.0640650466,-0.1269662827,0.1238366216,0.144877702,0.0524853915,0.1560284495,0.143369928,0.1818337142,-0.1248126179,0.0095325867,-0.0003439098,-0.0962148234,-0.1165836826,0.0837788284,0.0686310604,-0.0202017911,0.0322910286,-0.0359377153,-0.1282986403,0.186119318,0.0619047508,-0.0416987501]],"hackathon_name":"StudentHack V","index":23,"project_description":"smart fast paced hardware gameWe were inspired by robotics and innovative motion tracking technology, blurring the lines between the virtual and physical realms. A physical manifestation of The Force.It is a simple game with complex governing principles. The aim is to steer the ball around the obstacles into the hole. The ultrasonic array provides responsive haptic feedback to the user.We used c++, Arduino, and various hardware components from Leap Motion and Ultrahaptics.StudentHack VFrancesco Fumagalli\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 06:40 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"A-Maze-Ball","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/a-maze-ball-jmf6ba","keywords":"motion,ball,physical,virtual,force,inspiration,innovative,hole,hardware,haptic,governing,game,feedback,leap,components,complex,challenges,built,blurring,array"},{"level_0":24,"hack_vector":[[0.1359656453,-0.1022085696,-0.0249023046,0.0430950932,-0.0207944047,0.128455475,0.2107582241,-0.0337632522,-0.0399874374,0.0098926695,0.0033749223,-0.0616301149,0.1461179405,-0.0801308602,0.0599165335,0.0108531071,0.2153680921,-0.0100771589,0.0408041924,0.1149325147,-0.236697793,0.0503213815,-0.0383533724,-0.0157070011,0.1230199262,-0.0203453917,-0.0401427448,-0.1796370894,-0.0152134271,-0.0749406219,0.0677506998,-0.1328162104,0.0385813713,-0.0821184143,-0.0337888561,-0.0172877479,0.1241780743,-0.139143154,-0.0495541282,-0.0033856151,0.0377636813,-0.1552928388,-0.1558735967,-0.0240959898,0.0596533157,-0.0373865515,0.0078297062,-0.0821788386,-0.0167229529,-0.203389287,-0.1275166273,0.0117278351,-0.1061865687,0.0142955864,-0.1957380772,0.1518891156,-0.1488112211,-0.0067692786,0.0204144139,-0.0853974298,-0.0623139217,0.0272165705,0.0864048153,0.0485585444,0.1139401272,0.001779545,-0.0908323303,-0.1272314787,0.0433855206,0.0260819513,0.0723935291,-0.0527545735,0.0253354851,-0.1263067424,0.0233532805,-0.1333280802,0.1725363433,0.0054115518,0.0227533635,-0.13105914,0.1435004175,0.1549113095,0.0759013817,0.1688461155,0.1069498584,0.1943894625,-0.1034929231,-0.0260862969,-0.0011474446,-0.0912382305,-0.1463453472,0.0538068414,0.0975783542,-0.0395131707,0.0112927714,0.0021916248,-0.1493177712,0.2105652243,0.0267620347,-0.0671100318]],"hackathon_name":"StudentHack V","index":24,"project_description":"Our project captures a user's brainwaves during a video conversation, enriching the experience for both sides,LogoEmpathy is difficult even in an ideal situation. Often we misunderstand what reaction our words caused in a friend or family member. This is also a particularly sensitive area for those undergoing therapy or the professionals treating them. Allowing to sense stimulation through a remote medium aims to reduce the stigma around therapy, while allowing a professional to access detailed diagnostic brain information. Video chat support allows for an added personal touch and to utilize classical therapeutic techniques.The project implements video chat via Twilio and uses a Muse headband to sense one user (the patient)'s brainwaves, while recording audio from the side of the other (the mental health professional). After the conclusion of a conversation a breakdown of short phrases, which caused the largest stimulation or surpression of brainwave activity.The clients are built in JavaScript and Swift, while the two servers are built in Node.JS and Python with Flask. One server handles data storage and connection, while the other analyzes the brainwave reading and speech data.Text to speech is a particularly difficult problem and cutting audio into multiple small pieces was difficult to implement in a straightforward way. Synchronizing data flow between client and server was also a specific challenge.Succeeding in implementing experimental technology into a potentially useful hack.An array of different technologies and the potential therapeutic uses of a Muse headband.Investigate academically the usefulness of brainwave-sensing technology in mental healthStudentHack VI worked on the node server and web  front end. It was my task to make other components communicate and display the resoults on the pageAndon Andonov\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:55 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"BuzzWords","project_tags":["python","node.js","flask","muse","swift"],"project_url":"https:\/\/devpost.com\/software\/buzzwords-9upa8w","keywords":"brainwave,built,data,difficult,headband,one,video,sense,server,professional,chat,speech,stimulation,caused,uses,health,particularly,audio,muse,technology"},{"level_0":25,"hack_vector":[[0.1541772634,-0.105243206,-0.0387064591,0.0407688729,-0.0327827595,0.1422337592,0.2010615021,-0.0348957293,-0.0178632624,-0.0053917589,0.0103243366,-0.0644387007,0.1332948357,-0.0680273995,0.0785877481,0.0108031686,0.2090386897,0.0036148864,0.0397778712,0.1134836748,-0.2422635108,0.0176202226,-0.0482257418,-0.0220605507,0.1019482911,-0.0162868705,-0.0226267148,-0.1742822081,-0.0182504971,-0.089442499,0.0580566339,-0.1198886484,0.0263992213,-0.0914183706,-0.0295966286,-0.020382816,0.111061424,-0.1435572207,-0.0712298378,0.0079374854,0.0461387523,-0.1240037605,-0.1473768055,-0.0236692,0.0644662827,-0.05397062,0.017274918,-0.0724529549,-0.0273104571,-0.2112988234,-0.1393933445,0.0052921576,-0.1057224646,-0.0086163767,-0.1804134995,0.167254135,-0.1215270832,-0.006614978,0.0186917782,-0.0775026083,-0.0635039508,0.0194041748,0.078887552,0.0493464842,0.1195071116,-0.0000725626,-0.1091121659,-0.1242182106,0.0334769003,0.0167979244,0.0649505928,-0.0392693803,0.0104415491,-0.1373726577,0.0111524034,-0.1262515783,0.1886432171,0.0172991399,0.0076849065,-0.1346348375,0.1349526793,0.1630952805,0.0624970794,0.1673671901,0.1127685532,0.2079137564,-0.0883403718,-0.0127701871,-0.0081800809,-0.0741395131,-0.1394695342,0.0668529347,0.1089894623,-0.0390386321,0.0057581235,-0.0016650446,-0.1421878189,0.2437080145,0.0114093199,-0.0724493638]],"hackathon_name":"StudentHack V","index":25,"project_description":"a relatively clever health nut botwe're lazy and lonely people so we wanted to build a chatbot that will keep count of our meals and gym seshsnaturally processes your sentences to look for meals, and calculates relevant information about the food, including its calories and nutritional content. It'll help you keep count of your gains too.Node.js with a ton of API's.Messenger's API is a bit of a pain, alongside finding and messing around with the API's to make it work the way we want it to.this bot has more banter than us :(Natural language processing is very difficult and there are a lot of nuances involved with dealing with sentence structures.1v1 Siri 360 noscopeStudentHack VWorked on connecting to the old food api, displaying the facebook messages nicely, and getting google natural language parsing to work nicely.Thien Nguyen\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 04:48 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Pepper Potts","project_tags":["natural-language-processing"],"project_url":"https:\/\/devpost.com\/software\/pepper-potts","keywords":"api,count,meals,keep,work,information,gains,gym,help,including,involved,inspiration,finding,js,language,lazy,food,dealing,difficult,lonely"},{"level_0":26,"hack_vector":[[0.1531538516,-0.1030592099,-0.0274818353,0.0432639569,-0.0247235633,0.1367813349,0.1906238943,-0.0313261934,-0.0235927887,0.0018898429,0.011933187,-0.0834757239,0.1467987746,-0.064497292,0.0818679258,-0.0018555353,0.194772169,-0.0035889379,0.0477663614,0.1102712899,-0.243286714,0.0260040257,-0.0515540317,-0.0044220695,0.1149392799,-0.0238166824,-0.0260160286,-0.174126938,-0.0233053528,-0.0825161636,0.0714347214,-0.1208056137,0.0177281294,-0.0839379281,-0.0205453392,-0.0129874237,0.110451296,-0.1501181871,-0.0667910725,-0.0082290927,0.041591011,-0.1324931085,-0.1490673423,-0.0236271974,0.0522143245,-0.0529348403,0.0072100936,-0.0825063884,-0.015452479,-0.2076443881,-0.1514420807,0.0143016912,-0.1104341894,0.0150723513,-0.2079650909,0.166282475,-0.1327562481,-0.0128020467,0.0256671365,-0.099396117,-0.0729251504,0.0260567442,0.0758206248,0.0571781509,0.1083828881,0.0211947113,-0.0973638222,-0.1241697371,0.017926665,0.0146918045,0.0692231059,-0.042709358,0.0254988968,-0.1210502982,0.0373246036,-0.1228754446,0.1843244284,0.0047945203,0.006819251,-0.1307930052,0.1248505563,0.1555064321,0.0686728582,0.1538981348,0.1054203883,0.2086162567,-0.0899047852,-0.0338765867,-0.0152437212,-0.0694637373,-0.1256865561,0.061956089,0.1052516177,-0.0484594554,0.0023285153,0.0106676677,-0.1522165537,0.242756471,0.0041332771,-0.0735147372]],"hackathon_name":"StudentHack V","index":26,"project_description":"Google data on your screen!Humans today don\u2019t wonder, they wonder-then-Google. As a result, the accumulation of Google searches over a period of time acts as a reliable proxy for one\u2019s state of mind, curiosities, ambitions, and fears included. We wanted to take a step closer towards awareness and use this data to analyse the self.We've seen that Google has a lot of data about each and everyone of us, so we decided to transform that data into something which everyone can see. Our project takes your data from Google and shows you some charts for Youtube and Google searches.We used AngularJS for the front-end, with Amcharts for displaying the data. The backend is powered by ASP.NET and some of the data computation is done in python.Bringing the C# and Python code together was a bit tricky, but we decided to do it so to maximize the potential of every team member.Actually finishing something, after lots of bad ideas and brainstorming.More about the data stored by Google, we consolidated our teamwork and toned our coding skills.Integration with Facebook data, more intelligence for suggesting new things you should try, based on relations with friends, etc.StudentHack VBogdan Ioan Neagu\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:29 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Search4Self","project_tags":["asp.net","angular.js","python","c#"],"project_url":"https:\/\/devpost.com\/software\/search4self","keywords":"data,google,wonder,something,searches,decided,python,self,everyone,youtube,every,displaying,done,end,etc,facebook,fears,finishing,friends,front"},{"level_0":27,"hack_vector":[[0.1456256062,-0.0995786414,-0.0318316892,0.0667098239,-0.0310546923,0.1553556025,0.2050445825,-0.0462450534,-0.0258739926,-0.0138965668,0.0020005568,-0.0424102247,0.1412678808,-0.0649199635,0.0623836815,0.0162922796,0.2261884362,0.0158014409,0.0369445942,0.1075118408,-0.2240598798,0.026665967,-0.0530567542,-0.0268783513,0.1235980392,-0.0187600553,-0.0441591889,-0.1910400987,-0.0288531631,-0.071895279,0.0696905628,-0.1196765006,0.0512068979,-0.0815149099,-0.0423270762,0.0020516342,0.1297975332,-0.1214055568,-0.0390948653,0.0346153229,0.0462774746,-0.1425712258,-0.1652700603,-0.0202801563,0.0380271301,-0.0506351292,0.0251535103,-0.0632452816,-0.0329269469,-0.2186957896,-0.1092663705,0.0063560461,-0.1001450717,-0.0130452411,-0.1601784527,0.1566579938,-0.1448814869,0.0189805292,0.0099173859,-0.0548241995,-0.0617448501,0.0263453927,0.0763097778,0.0378461182,0.1276000589,-0.0140127465,-0.1115691438,-0.1350043267,0.0382326245,0.0178460032,0.0598639399,-0.0383092798,0.0096621532,-0.1423636228,-0.0124893356,-0.1060428694,0.2027704269,0.0119192516,0.0344507545,-0.1455693841,0.126988247,0.1622907668,0.0632762238,0.1597328931,0.1203037128,0.1937907636,-0.1042086929,0.002551669,0.0047107595,-0.1078677401,-0.1500335038,0.0732673779,0.0851282999,-0.0210411586,0.0219765026,-0.0253667533,-0.1247759983,0.2215117812,0.0410702042,-0.0666788742]],"hackathon_name":"StudentHack V","index":27,"project_description":"Use Natural language processing to make sentences sound like the Joseph Ducreux memeWanting to Use NLP and a Thesaurus API I found long agoUsing twilio, you send +441290211282 an SMS message with a sentence with a simple sentence stucture, it will respond with a dumb sounding sentence akin to the memeA lot of tinkering with python, flask and the nltkHow to host a public facing server on my computer to process the incoming messagesLearning server hosting, what flask was, what ngork was.\nAccomplishing my visionEverything~Memes, more memesStudentHack VRohan\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 11, 2017 09:24 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"The Joseph Ducreux Fancifier","project_tags":["python","natural-language-processing","twilio","flask"],"project_url":"https:\/\/devpost.com\/software\/the-joseph-ducreux-fancifier","keywords":"sentence,memes,server,flask,fancifier,long,learning,learned,joseph,inspiration,incoming,hosting,host,found,everything,facing,meme,dumb,ducreux,computer"},{"level_0":28,"hack_vector":[[0.1759787351,-0.1493397057,-0.0215271637,0.0790584832,-0.0328289047,0.1586292535,0.1957216412,-0.0650040582,-0.0315723829,0.0122785503,0.0135947783,-0.0011299431,0.1512901336,-0.0742172971,0.0512766428,0.007008797,0.2220279574,0.005317382,0.0529910065,0.0983855277,-0.2293602526,0.0197182149,-0.0529190339,-0.0145891933,0.1771575958,-0.0163193736,-0.0451897569,-0.1875243485,0.0051814304,-0.0741478056,0.0579913706,-0.1426710337,0.0511214174,-0.0690507293,-0.044272013,-0.0107145188,0.121857278,-0.126304552,-0.0458093956,0.0277549438,0.0569777787,-0.1388956606,-0.1503237784,-0.0244478509,-0.0057092588,-0.0350886397,0.0188492537,-0.0424232893,-0.0275288019,-0.1874479055,-0.0876060948,0.0120765148,-0.1216150597,-0.0040966743,-0.1454178542,0.1541559398,-0.150626719,0.0304047689,-0.0138823381,-0.0174638834,-0.0395672098,0.0329116136,0.0667183623,0.0626637712,0.1176456437,-0.0154870357,-0.1340732127,-0.1388506293,0.0137086045,0.0163424648,0.0690029413,-0.0309052337,0.0318550281,-0.1435171515,-0.0145297544,-0.0997680798,0.2052547932,0.0174114797,0.0493472368,-0.1381607801,0.1318642944,0.1536283493,0.0450159609,0.1593615413,0.1442551911,0.1895186752,-0.1204594001,0.0150734065,0.00485262,-0.0861120969,-0.108437635,0.0903406814,0.0848051384,-0.0065678055,0.0605465733,-0.0607364662,-0.1003094539,0.1998298317,0.0615513511,-0.0566861853]],"hackathon_name":"StudentHack V","index":28,"project_description":"Multipurpose modular robotA SSH controlled rover, capable of executing various function.Apart from intel-edision and motors we built it from code and transistors upGetting a battery, laser cutting files, right sizes for parts, lot of wires, learning new electronics, learning new code.Runs through SSH, or Wifi, real time control ...H bridges, Intel Edison, node.js, 3d modelling in autocad inventor, stepper motors, driversdata collections, room scanning and mapping, autonomyStudentHack VValters J\u0113kabs Zakrevskis\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 06:19 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ROVER","project_tags":["c","javascript","intel-edison","electronic-merchant-systems","project-tango"],"project_url":"https:\/\/devpost.com\/software\/rover-lgx7t1","keywords":"built,rover,new,intel,motors,learning,ssh,code,edision,wires,edison,data,electronics,executing,files,function,drivers,control,cutting,controlled"},{"level_0":29,"hack_vector":[[0.1417107582,-0.0928523242,-0.0299662147,0.0414760821,-0.0159146283,0.1384316236,0.2053095847,-0.0297872517,-0.0287825968,-0.0175899211,0.0072199106,-0.0788780823,0.1359395236,-0.0719999596,0.0554730929,0.0071794386,0.2182443887,-0.0002848429,0.0333309993,0.1293371171,-0.2358042598,0.0373711511,-0.0392281488,-0.015810376,0.1189392507,-0.0227808841,-0.0351230688,-0.180514276,-0.0331695005,-0.0878638476,0.0683921874,-0.1206737608,0.0359111726,-0.087909162,-0.0266681165,-0.013991164,0.1249495,-0.1371500045,-0.0540830046,-0.0003162824,0.0420406759,-0.1359275877,-0.1511023492,-0.0296073258,0.0662020743,-0.0607062206,0.0097002694,-0.0752461776,-0.0228887144,-0.2198463976,-0.1359827667,0.0176327433,-0.0997579843,0.0061687981,-0.1892216206,0.1657104045,-0.136038512,-0.0177376438,0.023670027,-0.1041183397,-0.0706070513,0.0236676764,0.0782754347,0.0466693528,0.1148350835,0.0130027747,-0.0992110074,-0.1235128343,0.0323097743,0.024308797,0.0641169325,-0.0458439961,0.0221644863,-0.118998386,0.0268363059,-0.1173177287,0.1777597964,-0.0078098308,0.0182537436,-0.1365301609,0.1244970486,0.1560850292,0.066004023,0.1643950194,0.0993732437,0.1941885799,-0.0941320434,-0.0440644808,-0.0148460902,-0.0808776766,-0.1514817327,0.0513539799,0.0913333967,-0.0454901867,-0.0049664527,0.0110416897,-0.1546875536,0.2297813147,0.0157193057,-0.0748411044]],"hackathon_name":"StudentHack V","index":29,"project_description":"The Shazam of video gamesDo you ever wonder what game a stranger play ? Just like Shazam goal for music, we don't often know all video games. Without bother the person, you known already what he play. Take a picture and the application do the job for you.It all started for the studenthack V. The idea came originally from Anthony who is interested in big data and image processing\/analysis. His intentions were to ease the communication and the search for the name of the games.We built the application using Xamarin and openCV to process the photos captured with the phone. The picture is upload via POST request to a server. The server use IncandescentAPI to do reverse image search and gives json file containing url of lookalike pictures in the web. Keywords are learned from the latter. Name is discovered.Find an API for reverse image search.Finishing the application.We learned to split our work equally and work while being (very) tired \nWe also learned to use better the technologies involved in this project (Xamarin, python, Flask, openCV, Google APIs, Neural Networks, ...)WaDaGame is basically just a proof of concept for video games application but it can actually also be used for many other fields.\nDatabases already exists but what we need is a way to use all the available informations to get a unified and relevent feed of infomation.StudentHack VI worked on the Android app and the screen segmentation process.gloubsi\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 06:06 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"WaDaGame","project_tags":["xamarin","c#","python","opencv","android"],"project_url":"https:\/\/devpost.com\/software\/wadagame-zunosm","keywords":"image,learned,search,application,keywords,game,reverse,picture,use,games,video,name,built,phone,opencv,play,incandescentapi,work,server,xamarin"},{"level_0":30,"hack_vector":[[0.1572889984,-0.1347319931,-0.0046380572,0.0703658089,-0.0330541357,0.1515271068,0.207002461,-0.045513466,-0.0338566154,-0.0057059871,0.0097483126,-0.0151211694,0.1534764916,-0.0726965517,0.0432499573,0.0231469385,0.233360216,0.0079458263,0.0523180403,0.1108643711,-0.2351134121,0.0267904345,-0.0423286147,-0.0333280303,0.1546505392,-0.031752117,-0.0433628224,-0.1953472644,-0.0027706169,-0.0763763487,0.0607978776,-0.1141084507,0.0494417325,-0.0716512352,-0.0414321758,-0.0093527809,0.1300034523,-0.1290868372,-0.0395215638,0.035803929,0.0583253205,-0.1474917382,-0.1547913998,-0.0438820086,0.0130680036,-0.0419945009,0.0245077349,-0.0499792658,-0.0187736265,-0.1929116547,-0.0930589214,0.0181240719,-0.1295345128,-0.0142205255,-0.1606103182,0.1609579623,-0.1628620625,0.0227864143,0.0101258494,-0.0365673043,-0.0509616882,0.0291234683,0.0627174377,0.0565111749,0.1286091506,-0.008904282,-0.119982399,-0.1471355408,0.0165777821,0.0087173115,0.0587377138,-0.0428530425,0.0152528891,-0.1381719112,-0.0181916542,-0.106618017,0.1934691668,0.0030805392,0.0482893921,-0.1426893622,0.1248248816,0.1584342569,0.0351049677,0.1492931694,0.1361993402,0.1980519742,-0.1167407632,0.0233928636,-0.0023062509,-0.0864370167,-0.1203009039,0.0913182795,0.0566236153,-0.0111714136,0.0302989352,-0.0386377685,-0.1170761362,0.1917634904,0.0635026768,-0.0461219251]],"hackathon_name":"StudentHack V","index":30,"project_description":"Communication is more than meets the eye.Telehaptix uses cutting-edge haptics technology based on ultrasounds in order to make online content more accessible to people with impaired vision. This version prototype converts English(or any other Latin alphabet text) into tactile feedback, using the Morse code. We chose this code due to hardware specifications, as hand motion proprioceptors(motion receptors) in the hand are much more sensitive to dynamic motion.Tactile feedback has a high risk of confusion, so balancing output speed and accuracy was quite provoking.StudentHack VNick Serea\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 06:06 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Telehaptix","project_tags":["c++","html5"],"project_url":"https:\/\/devpost.com\/software\/telehaptix","keywords":"motion,tactile,hand,code,feedback,vision,due,inspiration,impaired,high,hardware,haptics,english,edge,dynamic,cutting,make,converts,content,confusion"},{"level_0":31,"hack_vector":[[0.1560819745,-0.1395230591,-0.0211766046,0.0581132583,-0.0344898179,0.1406098455,0.1788511276,-0.0524709448,-0.0113378903,-0.0342203528,0.0027974939,-0.0162950456,0.1444615722,-0.060759943,0.0430551134,0.0182457846,0.2183622718,0.0097836582,0.0553080328,0.1146837249,-0.2284287363,0.02416935,-0.0442687273,-0.0225444641,0.1331563443,-0.0309423711,-0.0442124121,-0.168083638,-0.0183293764,-0.0965834633,0.0413972102,-0.1163393706,0.0515438765,-0.0699949488,-0.0254092179,-0.0302930605,0.1320543289,-0.1364900619,-0.0550922491,0.0250984393,0.0630130172,-0.132855162,-0.1567102373,-0.0391035303,0.0108589483,-0.0598267019,0.0364524573,-0.0539904423,-0.0367892049,-0.1998722106,-0.1230479404,0.030929219,-0.1203862876,-0.0209369045,-0.1804478765,0.1579212397,-0.1347054392,0.0030150265,0.0277626291,-0.0412307903,-0.0636388585,0.0233623683,0.0540993139,0.0423362814,0.1096710414,0.0064427932,-0.129197076,-0.143682763,0.007776299,0.0212356392,0.0740765855,-0.0480856858,0.0073772413,-0.1445756853,-0.0079429783,-0.0912563354,0.204011783,0.0147122834,0.0331797637,-0.1487124562,0.104420051,0.16140531,0.0254949778,0.1593846381,0.1499143094,0.1958867013,-0.116184622,-0.0021981965,-0.0024963471,-0.0853319466,-0.1211452559,0.0913513452,0.0869951099,-0.0149222314,0.0254010167,-0.0611544587,-0.1352297664,0.2343596518,0.0417095721,-0.0641081482]],"hackathon_name":"StudentHack V","index":31,"project_description":"It flippin' flips bottles!The lack of 100% accurate bottle flipping in my lifeIt flips bottles with 100% repeatability (if it doesn't work the fault is yours)Laser cut plywood, 3D printed sensor mount, assemble, copy Arduino Sweep example, profitThey told me the plywood was 5 mm thick, but it was 6. I had to do some additional filing and swearing1) Always have a caliper handy\n2) Never share all your knowledge\n3)I have received an offer from US government to include it in the next generation of military dronesStudentHack VCiro Cursio\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:58 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"FLIPPOBOT L","project_tags":["arduino","blender"],"project_url":"https:\/\/devpost.com\/software\/flippobot-l","keywords":null},{"level_0":32,"hack_vector":[[0.1291330606,-0.0940065309,-0.0321414322,0.0668726265,-0.0259518512,0.143610999,0.2100538909,-0.0254465416,-0.0425999649,-0.0100050922,0.0238647219,-0.0505929105,0.1469689161,-0.0731684119,0.0590333752,0.0119917663,0.2196701467,-0.0076413495,0.0381458886,0.1245693043,-0.235615477,0.0248897262,-0.0382459834,-0.0133522339,0.1180805117,-0.0156733505,-0.0492629856,-0.1805756241,-0.0104037309,-0.0739064962,0.0814584866,-0.1073469371,0.0223848335,-0.062316563,-0.0221761763,-0.0024171791,0.1220207587,-0.1264027357,-0.0331138074,0.0091643995,0.0600674003,-0.137526378,-0.1632627249,-0.0234367028,0.0635451302,-0.0346961133,0.0111173559,-0.06849318,-0.0096588079,-0.2221227735,-0.1084399223,0.0150637031,-0.0933307707,0.0145000555,-0.2064411491,0.156946674,-0.1428126544,-0.0097227925,0.0241910871,-0.0923989266,-0.0556664877,0.0304769129,0.0910365954,0.0449680127,0.1317871213,0.0056326734,-0.0821452439,-0.1320113391,0.0445722379,0.0174189694,0.0473420396,-0.0233558062,0.0170208476,-0.1173031926,-0.0046972008,-0.117162995,0.1741718054,-0.0042251721,0.0141581539,-0.1408848017,0.1206946895,0.1648747921,0.0507053398,0.1753874719,0.10675437,0.2130569369,-0.1049399078,-0.0349582322,-0.028941717,-0.0974487215,-0.1582831591,0.0667048544,0.0940131545,-0.0246874243,0.0039120778,0.0169938337,-0.1485641003,0.2195259035,0.0296024997,-0.057759136]],"hackathon_name":"StudentHack V","index":32,"project_description":"A fast way to organise treasure hunts around the city, using a mobile application and an interactive website!We wanted to build a web application to make people enjoy travelingIt provides an application for users to receive riddles and to complete checkpoints and a web application for organizers to plan their game.With a lot of caffeine. And of course with patience for every bug that stood in our way.Designing a database to synchronize with the web app and the mobile one.We managed to provide a nice interface.Learning to use javascript and ssh better. Learning to use firebase. Further knowledge in developing websitesmore functionalities, of course, we are thinking about maybe prizes and a method of speaking with a virtual bot as the main interaction of the user with a game.StudentHack VDaniel Savu\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:59 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hunter","project_tags":["firebase","javascript","css","html5","google-maps"],"project_url":"https:\/\/devpost.com\/software\/hunter","keywords":"web,application,learning,course,use,game,inspiration,firebase,functionalities,hunter,interface,interaction,enjoy,javascript,knowledge,learned,lot,every,websites,developing"},{"level_0":33,"hack_vector":[[0.1374078691,-0.0981580168,-0.023256287,0.0390972644,-0.0208960678,0.1291775405,0.2099926472,-0.0287976749,-0.0276007373,-0.0116598792,0.0081409877,-0.0654650927,0.1410154104,-0.0680409744,0.0592962652,0.0147611815,0.2198820412,-0.0042912872,0.0404686444,0.136282891,-0.2359791249,0.0411454588,-0.0464969575,-0.0184466522,0.1202581301,-0.0183542408,-0.0369614623,-0.1814406216,-0.0277812369,-0.0926750153,0.0614643544,-0.1269935369,0.0413498729,-0.0852797627,-0.0175815523,-0.0081399214,0.1210564673,-0.1350665092,-0.0495367832,0.0061990274,0.0383385979,-0.1495806873,-0.1603313833,-0.0434793308,0.056141071,-0.061949648,0.0092123142,-0.0820192695,-0.0255306009,-0.2100607902,-0.1346402317,0.0111513119,-0.1060520932,-0.0034881111,-0.1904016286,0.1598952264,-0.1445274949,-0.021709282,0.0309839863,-0.099695228,-0.0690139607,0.02500562,0.0769791752,0.0481354222,0.1094871759,0.0103472183,-0.1068962663,-0.1307154596,0.0406668484,0.024314994,0.0662104264,-0.0581832901,0.017526241,-0.1148975715,0.0251716971,-0.122750774,0.1701763421,-0.0018461475,0.0226018578,-0.1372358799,0.1213968769,0.1571505964,0.0721074939,0.1612863243,0.0979693234,0.1916701794,-0.101946041,-0.0339030437,-0.0056400723,-0.0884844959,-0.1429465562,0.0510811545,0.091903761,-0.034792114,-0.0067890887,0.0026654953,-0.1643352509,0.212686494,0.018180728,-0.0722340867]],"hackathon_name":"StudentHack V","index":33,"project_description":"Enhanced security with drone surveillance over private propertiesPeople with large properties had to deal with their security by using very expensive surveillance systems or pay guards to take regular tours. There must be a better way!It is an autonomous drone that follows a specified path on request or at regular intervals and returns at the start point. During the travel, the drone streams video from the front camera and the software on the server uses OpenCV to detect if there are persons present.We used the Parrot AR Drone API to make the drone follow a fixed path and return at the start point. OpenCV was used to detect the presence of people in the video stream.We tried integrating with Twillio to be able to start the surveillance on request by sending a text message and receive status updates as text messages. This cannot be easily done since the server needs to be connected both to the drone and the internet and we also needed a external IP to get Twillio requests.Also, limited testing time with the drone was a very big challenge for the control software!StudentHack VPaul Gafton\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 06:00 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"DrOwnage","project_tags":["c++",".net","opencv","ar.drone"],"project_url":"https:\/\/devpost.com\/software\/drownage-34feng","keywords":null},{"level_0":34,"hack_vector":[[0.1256913096,-0.0852943137,-0.0251619834,0.0387530215,-0.0207838807,0.1388387382,0.1902045012,-0.0307505261,-0.0079272287,-0.0287696104,0.0274575558,-0.0731395856,0.1422221065,-0.0602000505,0.0610307045,-0.0049995794,0.2194930464,0.001723121,0.0436842293,0.1268465072,-0.2407047451,0.0321973525,-0.042632442,-0.0076112384,0.1070308909,-0.027288653,-0.0242823921,-0.1809086204,-0.0321583487,-0.101147376,0.0735534877,-0.1167616695,0.0301850103,-0.085099481,0.0028360416,-0.0284635164,0.1167606339,-0.1379640102,-0.0593387298,-0.0226218533,0.0440374874,-0.1340379417,-0.146944508,-0.0396971405,0.0643620044,-0.0539612286,0.0100812837,-0.0701618344,-0.0326577276,-0.2104579061,-0.1444702446,0.0112702055,-0.0977059975,-0.0020164296,-0.218064338,0.1529239714,-0.1275437623,-0.0365244187,0.054435201,-0.1192196831,-0.0728565678,0.0149119357,0.082862258,0.0292094778,0.0976772904,0.0365868025,-0.0914721861,-0.1375057846,0.0339475162,0.0339149311,0.0687169656,-0.0535673909,0.0390748158,-0.117058821,0.023348473,-0.1323528737,0.1701747775,-0.0034473978,0.0128551014,-0.1311884075,0.1030477956,0.1512041092,0.0508658178,0.1717812121,0.0977265909,0.1946258098,-0.1045744643,-0.0559492446,-0.0415915437,-0.068575114,-0.1426839828,0.0614306293,0.0889231786,-0.0522285961,-0.0149563719,0.0178036597,-0.1556176096,0.2404771447,0.0019637006,-0.0791223422]],"hackathon_name":"StudentHack V","index":34,"project_description":"A musical lock!Home ScreenCreate or play a melody!Recording a melodyView your melodiesWe thought of what inventive type of password an end user would enjoy to use... Something that is common to every person, but each one is (mostly) unique.Music!Everyone likes music. We came up with the idea of playing your favourite tune to unlock your phone.You can select an instrument and record your tune by tapping on the on screen keys. You can save many passwords\/melodies. Only your melody can get you through your lock screen! Ideally, you could set up any of these passwords for any app, and we would integrate many different types of instruments.We started off with a few core objects and one screen. As the requirements expanded over time we created more screens and fleshed out said objects with concrete code such as creating file IO.We had an idea to get past the lock screen by playing an actual instrument next to your phone. This would've been super secure because you would have needed to go home to play your grand piano! Or you could set up a simpler instrument that you can 'fake' anywhere such as a drum - unlocking it through a series of claps. Unfortunately recognising sound waves was too complex to invoke for this hack. We would've liked to add more instruments too.Getting the keys to play notes through a library we found on github that plays midi notes of different pitches depending on your input. Reading the musical key presses and saving them into a file on your phone.Better understanding of how to integrate libraries and how to use android studio - especially regarding setting the layout relative to other elements.More instruments!!StudentHack VResponsible for the design and most of the layout. Wrote the logic which handles the states set by the buttons.I mostly worked on the password manager which allows the different pages to interact with the stored passwords.Did the lock screen and set up some objectsWrote the class that interacts with the midi synthesizer, helped Ned implement lock screen on our app. Helped with source control problems.Lauren Weston\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:59 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Xylockphone","project_tags":["android-studio","java","xml","midi.js"],"project_url":"https:\/\/devpost.com\/software\/xylockphone","keywords":"would,screen,instrument,phone,instruments,objects,one,set,different,passwords,many,next,play,playing,keys,file,notes,could,idea,tune"},{"level_0":35,"hack_vector":[[0.1389220506,-0.0987945572,-0.0183131546,0.0398275889,-0.0332861505,0.152508229,0.2062278837,-0.0343869291,-0.008392687,-0.0309412386,-0.0032399858,-0.0401822254,0.1174215674,-0.0705769435,0.0394676365,0.0387840196,0.2505560517,0.0253307912,0.0454549417,0.1178393364,-0.2325331867,0.0243879613,-0.041617848,-0.0406699553,0.1239868328,-0.0086143771,-0.0426974371,-0.1792459339,-0.0064343647,-0.1036630571,0.0410622396,-0.1221817806,0.0547988713,-0.0848001167,-0.0180218332,-0.0181974638,0.1342143863,-0.1348605454,-0.0409950614,0.0269116741,0.0395745151,-0.159022063,-0.1626406163,-0.0583981238,0.0377397425,-0.0681067929,0.0154787386,-0.0454261228,-0.0290395282,-0.2049086839,-0.1065804958,0.0211752672,-0.1008760706,-0.030721318,-0.1757376641,0.1640485674,-0.1481683254,-0.0017412032,0.0235364735,-0.060656108,-0.0576061308,0.0138799101,0.0787289441,0.0394155309,0.1179409847,-0.0077866623,-0.1214603856,-0.1547630727,0.0477940589,0.046792917,0.0731221437,-0.0587372668,0.0055395151,-0.1314409524,-0.0082461294,-0.1223356202,0.1665716767,0.0194827598,0.0426093042,-0.1466581225,0.1076255217,0.1570211649,0.0535053872,0.1750031561,0.1140375584,0.1844768077,-0.1252592653,-0.001088575,-0.0069540725,-0.0948287398,-0.1325459182,0.070261009,0.0761497989,-0.0260031745,0.0106087234,-0.0065188208,-0.1313525736,0.2060339749,0.0356603265,-0.0730869025]],"hackathon_name":"StudentHack V","index":35,"project_description":"A smart doorbell that not only puts you in a face to face video call with your guest, but allow door control.Hi-Riot is a smart doorbell built on top of the Matrix API. It contains a web camera for seeing who is at your door, and the ability to lock and unlock your door through the Riot messenger. It also has an alarm feature in case the person at your door is not friendly.Future features for the doorbell could include facial recognition for identifying the visitor.StudentHack VBen Elo\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:56 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hi-Riot","project_tags":["javascript","css","html"],"project_url":"https:\/\/devpost.com\/software\/hi-riot-7cy9zl","keywords":"door,riot,doorbell,web,friendly,alarm,also,api,built,camera,case,contains,could,facial,feature,features,future,visitor,hi,identifying"},{"level_0":36,"hack_vector":[[0.1570159346,-0.1054200605,-0.0196415018,0.0457694419,0.0003131142,0.1396645159,0.2113273144,-0.0359717421,-0.0325713195,0.0096616372,0.0230172686,-0.0795494467,0.1454273313,-0.0830163956,0.0714794397,-0.010879484,0.2047438025,-0.0194417406,0.048700884,0.1167648509,-0.2436484545,0.0509125218,-0.0477260686,-0.0029305676,0.129295662,-0.0333441719,-0.0291271247,-0.1876774132,-0.0265911426,-0.0772055015,0.0873485953,-0.1219317466,0.0374318771,-0.0995748118,-0.0358483717,-0.0155441584,0.1120253652,-0.1430363804,-0.0539939143,-0.0217134468,0.0439905375,-0.1393024325,-0.1502543688,-0.0177514888,0.0744120628,-0.0246827919,0.0053536268,-0.086983256,-0.0185851865,-0.2055828422,-0.1445697397,0.0223356597,-0.1150573343,0.0319749899,-0.196908623,0.1473681629,-0.140341714,-0.0174264461,0.0218777582,-0.104627803,-0.0631489679,0.0291927643,0.0929316804,0.0447740667,0.1117174178,0.0108718397,-0.0923715159,-0.1083625257,0.0237557627,0.026094757,0.0683268234,-0.037839707,0.0310025532,-0.1229162067,0.03559912,-0.1214785948,0.1757346392,0.0015533062,0.0056018545,-0.1294106096,0.1351329535,0.1475962847,0.0667825267,0.1574103236,0.0956794322,0.2055604309,-0.0809432417,-0.0389079414,-0.0169640668,-0.0674368218,-0.142814666,0.0548699535,0.0974694565,-0.035428945,-0.0010057705,0.0136036156,-0.141894266,0.2104024887,0.0097020883,-0.0640688241]],"hackathon_name":"StudentHack V","index":36,"project_description":"Guess Go GainWe wanted a fun and easy to use travel related party game application.A two player web based application where both players must guess the allocated point of interest of the other player. This is done through a chat without using any of the words in the place name! Points are added for every correct answer to a scoreboard. We even cleverly educate people by teaching them how to use latitude and longitude!We used javascript; primarily through node.js utilising npm modules such as socket.io, express, nodemon and sass. The Google Places API was used to fetch data about the points of interest.Utilising the Google Places API to integrate well with the Socket.io system that was already in place required some thought.Full implementation of a full chat protocol and deployment of a multi user working application. Also, working efficiently as a team and collaborating well throughout the duration of the project.Choosing technologies that none of us were previously familiar with ensured that we gained the most out of the project; not only learning how one would produce such an app, but also implementation using new technology tools.Accounts API for permanent user leaderboard. Add levels. Also including better checking of answers and even possibility to answer questions using location (by going there) to gain bonus points!StudentHack VI worked on initialising the node project and maintaining the structure, including npm and package.json files. I also worked on sass implementation and front end development including routing and referencing with express.jsUnderlying chat support and keyword filteringMayank Gupta\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:58 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"PlaceIt","project_tags":["node.js","express.js","heroku","sass","google-places","javascript","socket.io"],"project_url":"https:\/\/devpost.com\/software\/placeit-egfu6k","keywords":"points,using,application,also,api,project,working,places,place,even,full,chat,socket,google,implementation,player,answer,use,io,used"},{"level_0":37,"hack_vector":[[0.1625263095,-0.0987423882,-0.0257536694,0.0454347283,-0.0040544798,0.1387182027,0.2122935057,-0.0412481464,-0.0454810821,0.0064637377,0.0125893736,-0.0810872316,0.1429572105,-0.0663083419,0.0613154136,-0.0035083273,0.2006621063,-0.0209078081,0.0467597097,0.1270452291,-0.2346047163,0.0524420626,-0.0443876572,0.003578939,0.1390814632,-0.0277249776,-0.0305849854,-0.1853152961,-0.0417596847,-0.0758074,0.0901339799,-0.1263868809,0.0424741842,-0.0892458856,-0.0320175365,-0.0130580552,0.1196345538,-0.129085511,-0.0491452999,-0.0133455703,0.0560442135,-0.1477167308,-0.1552384943,-0.0294182673,0.0557245128,-0.0410965048,-0.0006026016,-0.0899766609,-0.0110496879,-0.2045092583,-0.1272608787,0.0142989,-0.1147475019,0.0364617668,-0.1993533075,0.1549311131,-0.1668038666,-0.0126794223,0.0216287263,-0.1046950445,-0.0716530606,0.0284249615,0.0802490935,0.0394062065,0.1155298352,0.0116303926,-0.1043223888,-0.1220577136,0.0288155209,0.0295064356,0.0705046058,-0.044498723,0.0229012165,-0.1164912581,0.0354483835,-0.1152712554,0.1789631844,-0.012434856,0.0210118536,-0.1259012669,0.1130963191,0.1368897855,0.0705649555,0.1543124467,0.1047651619,0.1934826672,-0.0953035057,-0.0390940458,-0.0051497812,-0.0767681748,-0.1394551247,0.0597566254,0.0909472853,-0.04159474,-0.0126792714,0.0118690301,-0.1473286003,0.2131309658,0.0172567219,-0.0593383983]],"hackathon_name":"StudentHack V","index":37,"project_description":"Remotes are for the aged, the cranky and the noobsWe are sick of using remote controllers in the era of smartphones.Using the LEAP MOTION SENSOR, we use human gestures to control a Parrot AR Drone.We used the PS_Drone api and the LeapMotion API to program it in pythonCommunication between the LEAP and the computer, and between the computer and the drone is really toughWe accomplished in making the drone fly using basic motions, manipulating the vertical speed, yaw, roll and pitch of the drone's orientation and movements.We learned how to use API effectively, as this is our first hackathon as a team, it was really hard at the beginning, but then we adapted and managed to finished our basic features.This project is a pathway to the future, where drones, cars, and VR can be more adaptive using hand gestures, and even body gestures.StudentHack VI worked on the main Python classes, and with Shashwat and Abhishek on the initial Java classes.I contributed in the algorithmic change of data when it is transferred from the leap motion output to drone input. I looked a bit at MQTT as a possibility for small message exchange and helped in some debugging of the final code.i worked on the hand motion recognition system using leap motion to recognize different hand gestures and calibrate them to be used for inputs to the drone so that the drone can be controlled using those valuesHelped in debugging and raeding the input values of leapMotionkhoa698\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:55 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"LeapMotion Drone","project_tags":["python","leap-motion"],"project_url":"https:\/\/devpost.com\/software\/leapmotion-drone","keywords":"drone,using,api,gestures,leapmotion,learned,leap,basic,computer,use,really,finished,era,even,features,hand,first,future,effectively,hackathon"},{"level_0":38,"hack_vector":[[0.1538623571,-0.1138367876,-0.0115228463,0.0709159821,-0.0351653397,0.1526002735,0.2050000131,-0.0479204766,-0.0374287628,-0.0187986922,0.0065329219,-0.0236324221,0.1466859281,-0.0852995887,0.043004863,0.0345037766,0.2549399436,0.0113134943,0.0347760804,0.1190710142,-0.206320405,0.0253380593,-0.0511863492,-0.03093547,0.157381773,-0.0056363414,-0.046514418,-0.1878955662,-0.0088332007,-0.0714213625,0.0443946458,-0.118824929,0.057040032,-0.0801003575,-0.0478121154,0.0000481444,0.1399920583,-0.1208087057,-0.0318758301,0.0408567376,0.0463860109,-0.1305538416,-0.1741032749,-0.0145437932,0.0219922941,-0.0566387028,0.0267808884,-0.0460353903,-0.028614236,-0.2183353156,-0.0758058205,0.0129001671,-0.1011111438,-0.0192567725,-0.1277326047,0.1629711092,-0.1453220844,0.0260341801,-0.0081707323,-0.0359413363,-0.0410177819,0.0300815236,0.0815289617,0.0565954857,0.1392460912,-0.0318272188,-0.1204465628,-0.1486138254,0.0349541716,0.0121514499,0.0599810667,-0.0319895819,0.0022253119,-0.1393066198,-0.0264982954,-0.0905269161,0.2019197196,0.0105940318,0.0578712672,-0.141606614,0.1371228248,0.1612256765,0.0544755757,0.1520967185,0.1248035207,0.1771807224,-0.1256918758,0.0057328786,0.001209295,-0.1103799865,-0.1394239962,0.076271221,0.0752380192,-0.0001403141,0.0427179709,-0.0467782207,-0.1079966426,0.1988812983,0.0665922314,-0.0612196513]],"hackathon_name":"StudentHack V","index":38,"project_description":"Play pokemon cards against alexaPokemon, Top Trumps and wanting to learn alexaReads out the stats of a randomly generated pokemon cardUsing node.js and the services amazon provides to develop for the alexa so lambda and aws)Getting the alexa to workGetting the alexa to workBetter use of node jsMore cards, battle other peopleStudentHack VLuca\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:58 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Alexa Pokemon Card Generator","project_tags":["node.js","alexa"],"project_url":"https:\/\/devpost.com\/software\/alexa-pokemon-card-generator","keywords":"alexa,pokemon,work,card,getting,node,js,built,better,lambda,challenges,develop,generated,battle,generator,aws,amazon,inspiration,cards,learn"},{"level_0":39,"hack_vector":[[0.1499629468,-0.1046804413,-0.0278405175,0.0504569151,-0.0344808549,0.1429009736,0.1823692173,-0.0366307832,-0.0088938354,-0.0243892781,0.0093928678,-0.054250665,0.1453124285,-0.0643708184,0.0550353527,0.0141618159,0.2236146182,-0.0037042631,0.0372533053,0.1293481886,-0.2407885641,0.0131963016,-0.0471974239,-0.005420954,0.1309668571,-0.0245120786,-0.034539897,-0.163685292,-0.0166685972,-0.0997144952,0.0551584959,-0.1102048457,0.0341799073,-0.074353762,-0.0126311285,-0.017583536,0.1263450831,-0.1436864883,-0.0541404933,0.0056619775,0.0540731102,-0.1232030466,-0.1522625089,-0.0301110335,0.0445054956,-0.0578876473,0.0182177555,-0.0675218999,-0.0196014419,-0.2127531171,-0.1376918405,0.0271038171,-0.108163245,-0.0109944399,-0.1998341084,0.1647263616,-0.1241576672,-0.0153847001,0.0263318308,-0.0801119283,-0.0600848459,0.0177217107,0.0711744055,0.0426958427,0.113925077,0.0103225056,-0.1057820022,-0.1421568096,0.0232684687,0.0229360666,0.0664190799,-0.035726022,0.0151102133,-0.130703181,0.00860117,-0.1045539528,0.1924228668,0.0035859644,0.0053417664,-0.1382678747,0.1055421531,0.1642104238,0.0395019129,0.1646175981,0.1194460094,0.2013056278,-0.1036663428,-0.0248164739,-0.0244918,-0.0784032568,-0.1282594204,0.0739999712,0.0952358246,-0.0239592064,0.0078238454,-0.0099927606,-0.1444729716,0.2535627186,0.0253451969,-0.072299391]],"hackathon_name":"StudentHack V","index":39,"project_description":"The app that attacks your schedule!We're all busy students, we wanted to never forget something important again!You give us all your contact and social media details and set a reminder...we do the restGet ready to be buried in an avalanche of notifications!With lots of coding and little sleepWe had lots of faff with making a server and then wrestled with way too many APIs, but made it in the end!We built a thing that actually works!!APIs be crazyAdd all of the platforms until it's literally impossible to avoid your reminders (unless you sleep through everything)StudentHack VI added support for multiple APIs and was the primary developer of the last minute desktop client \u2282(\u2580\u00af\u2580\u2282).Aleena Baig\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:12 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Bomb Scheduler - Reminder App","project_tags":["python","java"],"project_url":"https:\/\/devpost.com\/software\/bomb-scheduler-remind-app","keywords":"lots,reminder,apis,built,sleep,inspiration,impossible,important,give,get,forget,faff,everything,end,details,crazy,coding,contact,literally,challenges"},{"level_0":40,"hack_vector":[[0.1455261707,-0.0923959985,-0.0114738708,0.0291498918,-0.0115507096,0.1203043982,0.2216587067,-0.0177418906,-0.0372202285,0.0171316992,0.0112215178,-0.0651528314,0.1319581866,-0.0785304382,0.0658474937,0.0171960667,0.1999724954,-0.0206956603,0.0474553034,0.1274877936,-0.2436674386,0.0473951362,-0.0477510579,-0.018687252,0.1207845882,-0.0272423737,-0.030291805,-0.1855904162,-0.0108982297,-0.0847049952,0.0543253943,-0.1164805442,0.0403306894,-0.1035778224,-0.0204799324,-0.0088624181,0.1120688915,-0.1445391476,-0.0623602606,0.0002602421,0.031687554,-0.156701833,-0.1466487497,-0.0346072875,0.0684271157,-0.045755811,0.006863276,-0.0930854455,-0.0089682518,-0.196652323,-0.134844169,0.0148469424,-0.1234133393,0.0216845293,-0.1916520894,0.1570270807,-0.1538134068,-0.0119318971,0.028778499,-0.1034008339,-0.0641582236,0.0265897904,0.0827450305,0.0577194765,0.1223292202,0.0000356723,-0.1094292477,-0.1251307577,0.0402188636,0.0190099068,0.0724196136,-0.059157569,0.0076223281,-0.1265378296,0.0357641466,-0.1434985101,0.1651398391,0.0042832657,0.0231640022,-0.1328788698,0.1339014024,0.1485847384,0.080929026,0.1470860243,0.1037413254,0.1970273703,-0.0943947881,-0.0190029107,-0.0005104922,-0.0845365673,-0.1505704671,0.0490606688,0.0956560224,-0.0371956378,-0.0026166772,0.0092631811,-0.1605781019,0.1966448575,0.0181469657,-0.0581129082]],"hackathon_name":"StudentHack V","index":40,"project_description":"A google chrome browser extension that analyses the tone of comments and posts and blocks those that are harassment.The Addon in UseThe siteHarassment blocker was created as part of the #HackHarassment program, with the intention of preventing or reducing online harassment.The program uses an IBM Watson API designed to analyse the tone of an provided message. By using this API, our program takes messages, posts, and comments online and is able to return a Boolean value based on the different emotional levels of the text - either the post is suitable or it should be blocked. This was achieved by using a Python Flask back-end to carry out this function, and a java-script google chrome extension client-side to allow access in the browser.The primary challenge was accurately identifying the posts that were suitable as opposed to the posts that were classified as harassment and so should be blocked. This was achieved using a comparison of the results given by IBM Watson's Tone analyser, results are given as different levels of emotions in the provided text - for example Fear or Anger. By comparing the positive emotions to the negative ones, we were able to identify which posts were harassment and which were not with a reasonable level of accuracy.In the process we have become experienced with the creation of Google Chrome Extensions as well as the difficulties of identifying negative content online.To futher the harassment blocker project, ideas would include implementation in other browsers, and most importantly, development of our own algorithms to identify harassment rather than reliance on a outside API. This for instance would be extremely interesting to implement using Machine Learning in the future.StudentHack VDavid Chambers\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:56 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Harassment Blocker","project_tags":["html5","css","python","flask","jquery","json"],"project_url":"https:\/\/devpost.com\/software\/harassment-blocker-vj8fsi","keywords":"harassment,using,posts,api,program,online,achieved,blocked,blocker,chrome,different,given,google,ibm,identify,identifying,levels,negative,emotions,would"},{"level_0":41,"hack_vector":[[0.1380122453,-0.0797583982,-0.0282147676,0.0324607007,-0.0192059018,0.1247515082,0.1977142394,-0.0100789256,-0.0362663642,-0.0065064956,0.0178777333,-0.0878436938,0.1332053393,-0.0744125694,0.0707705542,0.0156263672,0.2031886429,-0.0024245395,0.035757076,0.1335427612,-0.2315856218,0.024626391,-0.0541534461,-0.0217488315,0.1051906645,-0.0241154321,-0.0327877812,-0.1872999221,-0.0315090641,-0.0841507837,0.0614639707,-0.1075129211,0.0270071942,-0.0941943079,-0.0165192913,0.0064322306,0.108608298,-0.1402512938,-0.0599121191,0.0091305096,0.0307884645,-0.1298185289,-0.1541984379,-0.0207457952,0.0720412433,-0.0748341978,0.0162948705,-0.0811357498,-0.0185357127,-0.2323285341,-0.1447393447,0.0094316425,-0.0990264639,0.0040789214,-0.1888704747,0.1701953113,-0.1293807626,-0.0087095872,0.0259779636,-0.1156158373,-0.065854162,0.0278947279,0.0696300119,0.0677726492,0.1219790429,0.0081863059,-0.0970616713,-0.1235408261,0.0308894422,-0.0065585384,0.0621578097,-0.0481304973,0.0081244549,-0.1104080305,0.0430421978,-0.1205292568,0.1793778539,-0.0085766288,0.0214903224,-0.1389126778,0.1290837526,0.1588657945,0.0795234814,0.1536384672,0.0921190679,0.2052974254,-0.0900291502,-0.0449565165,-0.0158481281,-0.0781009644,-0.1558005512,0.0479260013,0.0987699851,-0.0510699265,-0.0136640538,0.0116256196,-0.1609109342,0.2291806787,0.0094047226,-0.0796295032]],"hackathon_name":"StudentHack V","index":41,"project_description":"Disrupting the airline industry by finding the cheapest intercontinental flights when traveling abroadWebsite LogoGoogle Maps API Interface DisplayWhen coming to the U.K. from the US for this hackathon, we found it surprisingly difficult to find cheap tickets. We theorized that if you could find the absolute cheapest flight from any city in the US to any city in Europe, you could connect with budget airlines for cheap.Our website takes as input the user location, final destination, and their travel dates to find the main intercontinental flight. Currently, only North America and the EU are implemented.We wrote a program in Python and used Flask (Python Microframework) to interact with and feed data to the skyscanner API, as well as display the information using an integrated Google Maps API. Built simple website using HTML and CSS. This is how we get our price information and overall display.The greatest challenge was figuring out how to get the API to return the information we wanted and how to give it the information it needed to do that. We also had formatting issues with the website we built for the project.We are most proud of creating the Python algorithm that drives this program. No other service does exactly what we do and we're excited to have done something new.We learned how to interface the API for the least amount of data possible and parse it for the desired results. Also learned better uses for Python, like how tuples worked, and how to interface skyscanner API.We hope to implement connecting flights within continents to give users the absolute cheapest price. We would also like to implement the rest of the world and polish up the website.StudentHack Vianaroberts\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:31 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Smart Flights","project_tags":["html","python","flask","css","google-maps"],"project_url":"https:\/\/devpost.com\/software\/smart-flights","keywords":"api,python,website,information,find,learned,also,built,proud,program,price,display,like,absolute,interface,skyscanner,flight,flights,implement,get"},{"level_0":42,"hack_vector":[[0.1378569454,-0.0813695788,-0.040204946,0.0370244235,-0.0194720719,0.1311020255,0.2152049989,-0.0197281595,-0.023104094,-0.013004859,0.0026493873,-0.076534383,0.13776353,-0.0703760684,0.0709231421,-0.0071390904,0.2013424337,-0.0065440014,0.0433501154,0.1337843835,-0.2358251959,0.0386938304,-0.0409114547,-0.0147135137,0.1110109761,-0.0168888588,-0.0342148319,-0.1681423932,-0.0221195128,-0.0857461691,0.0604562424,-0.1350122243,0.0273947641,-0.0790926218,-0.0144148069,-0.007866201,0.1236119568,-0.1358939856,-0.0674185529,-0.005327113,0.0442269742,-0.1454100013,-0.1408656538,-0.0306825954,0.0699966475,-0.0552772582,0.0049096267,-0.085286811,-0.0210744534,-0.205356732,-0.1498056799,0.0128956279,-0.1036423966,0.0149363363,-0.1967019737,0.1522863805,-0.1360116303,-0.0278469175,0.0309926067,-0.1159702614,-0.0814863667,0.0291443523,0.0787418038,0.0451872833,0.1129533276,0.01698808,-0.090418838,-0.1221133396,0.0377881229,0.0245317873,0.0665654913,-0.0554475263,0.0277922787,-0.1176593602,0.0401270129,-0.1316264272,0.1655898839,-0.0016232673,0.0013423492,-0.1351833194,0.120508343,0.1485849768,0.0825253054,0.1648738086,0.0873260573,0.1925052106,-0.0908152983,-0.0468683653,-0.0085789124,-0.0827394202,-0.156111151,0.0428524092,0.1047784984,-0.0466907062,0.0022774898,0.0221736357,-0.1671109349,0.2399565578,-0.0020088325,-0.0724381804]],"hackathon_name":"StudentHack V","index":42,"project_description":"Ringing the bell on the door of success.It was the challenge that most grabbed our attention. We really thought we could learn a lot from completing this project.There is a webcam live feed that takes a snapshot when the door bell rings. It detects the face of person or multiple persons with the click of a button, and sends the detected image to the \"owner\" via email.We started with a raw javascript webcam script that accessed the video tag of HTML5. In order to capture stills we had to change focus to angularJS to create our own webcam tag. In order to get around security problems of writing to disc\nthis webcam module must be hosted on a HTTP Server, we will be using python SimpleHTTPServer. Upon capturing a still, the image is sent to our own python server that we coded to accept a base64 string representation of an image. This is the medium through which we needed to send our image. Our server decodes the image and writes to disc. Our next python script takes said image from file store and uses the openCV API to detect any faces. If multiple faces are detected a separate image file is created for each. Finally we have a script that sends the cropped image to a user(person whose door this is) via email.Never used angularJS and the openCV before so the syntax was challenging to get our heads around at first. We also learned a lot about VirtualBox settings as that presented enough of a challenge on its own!It works! Just to leave the weekend with a working product is awesome.Using APIs. Introduction to writing our own server. Manipulating mail clients. Time management.Implementing face recognition so  that the doorbell recognises friends and relatives and can report who they are. Use the Messenger API instead of sending emails.StudentHack VEfe Can Ulusoy\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:53 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Face Detecting Doorbell","project_tags":["python","javascript","css","html5","angular.js"],"project_url":"https:\/\/devpost.com\/software\/face-detect-doorbell","keywords":"image,server,webcam,python,script,face,opencv,order,person,sends,file,faces,challenge,detect,detected,disc,door,doorbell,email,next"},{"level_0":43,"hack_vector":[[0.1449584216,-0.1010571569,-0.021641897,0.0518341735,-0.0127858855,0.1507765204,0.2049708962,-0.0406129472,-0.0436806045,0.0169872995,0.0137042915,-0.080590874,0.1499696076,-0.0688782111,0.0652226657,-0.0030538165,0.2148897797,0.0064183176,0.0447686054,0.104646489,-0.2254137248,0.0559342839,-0.0561745651,-0.0020889516,0.1478228718,-0.0233191699,-0.0417540111,-0.2041198611,-0.0360026434,-0.0605222173,0.0989015251,-0.1413018554,0.0375235565,-0.0910349339,-0.0400214158,-0.0072997324,0.1181367561,-0.122705698,-0.0400279798,-0.0179437604,0.0416936576,-0.1607563496,-0.168435812,-0.0235662088,0.0395096317,-0.0310984123,-0.0008446289,-0.0714969039,-0.0200667568,-0.195940271,-0.1133170575,0.0127194962,-0.1043111086,0.0319832824,-0.185247615,0.1540289372,-0.1619891971,0.0060097235,0.0133589851,-0.0882717371,-0.0685935244,0.0303595774,0.0811007395,0.0449409299,0.1057384759,0.0111327562,-0.0939742327,-0.1388081461,0.0333639309,0.0254409742,0.0757999122,-0.0468059666,0.0462616868,-0.1182198897,0.0268083867,-0.1170978993,0.1820315868,-0.0075412183,0.0422078222,-0.1178515777,0.1273684949,0.1387687474,0.0887522995,0.1524968594,0.1085919663,0.1967872083,-0.1005082354,-0.0371191278,0.0004801707,-0.0740046278,-0.1271457672,0.064715445,0.0836828947,-0.0526005514,0.0096298009,-0.0009579893,-0.1358079165,0.2185867727,0.0200284161,-0.0762265101]],"hackathon_name":"StudentHack V","index":43,"project_description":"#dj #air #music #vibrationDriven by love for music and innovation, we discovered Ultrahaptics, which makes your DJ experience real.It scans the moves of your hands, computes them and synthesizes an audio file in real time, while sending vibrations to towards each hand.The hand gestures are computed in C++ and the music is modified with a Pure Data.Using CMake, finding a sound editor API, youtube API, connecting C++ to JS.Have a working prototype, learned about Pure Data and used a state-of-the-art device.Ultrahaptics API, JS, Pure Data, more C++.More complex DJ features, hand gestures and different vibrations, based on the qualities of the sound.StudentHack VI worked on the CMake configuration, some of the C++ code for Ultrahaptics,  researched the use of Youtube API.I worked on the C++ code to generate multiple points on the array and also in Pure Data to make changes to the audio files based on the input from the Leap Motion.Ana Gabriela Pandrea\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:53 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Haptics DJ","project_tags":["c++","leap-motion"],"project_url":"https:\/\/devpost.com\/software\/haptic-dj","keywords":"pure,hand,api,dj,data,sound,js,learned,music,real,gestures,vibrations,ultrahaptics,cmake,complex,file,features,experience,editor,art"},{"level_0":44,"hack_vector":[[0.1553006172,-0.0901614651,-0.022819601,0.0402170271,-0.0198118575,0.1368039697,0.2038080692,-0.0232771263,-0.023775056,-0.0094232978,0.0072477479,-0.0653928667,0.1373140365,-0.0534679107,0.0694328099,0.0001188692,0.1935297102,-0.0014095921,0.0434363298,0.1298703104,-0.2397021353,0.0202259459,-0.0433658808,-0.0166749097,0.119612433,-0.0241000857,-0.0305185858,-0.1782750338,-0.0198807344,-0.0972480848,0.069490768,-0.1098920181,0.0253105816,-0.0852109194,-0.0135129718,-0.0119594811,0.1145360842,-0.1428314149,-0.0627986118,0.0033236083,0.0480302013,-0.135276407,-0.1296999753,-0.0333672948,0.0610832646,-0.0562920086,0.006921622,-0.0844005868,-0.0175363347,-0.210227564,-0.1461413801,0.0196921732,-0.1146646142,0.0103565175,-0.1982247382,0.1732775718,-0.1341280788,-0.0159990769,0.0350816846,-0.1042614579,-0.0736720264,0.0158633254,0.070328936,0.0499230362,0.1237231642,0.0181416497,-0.1074886248,-0.1298924834,0.0240323432,0.0196723267,0.0663222298,-0.0471701585,0.0129800877,-0.1243961379,0.0276579093,-0.122917749,0.1806486994,-0.0020172943,0.0047080847,-0.142739445,0.1095343307,0.1492446512,0.0609471463,0.1482969075,0.1111754104,0.2126625776,-0.0896878019,-0.0330345035,-0.0141254431,-0.0701226816,-0.1531274766,0.0612208806,0.0994329527,-0.0410492793,-0.0172849912,0.0148130972,-0.1558668315,0.2364013493,0.0037749265,-0.0649417266]],"hackathon_name":"StudentHack V","index":44,"project_description":"A new vision for ManchesterWe really love Artificial Intelligence and all that comes with it, therefore bettering the world using these as tools was the next obvious stepWe are building the future of baking. Transactions made easy. Just snap a picture of the receiver and we will send them the money for you.We started with the Microsoft Cognitive Services for the Face Detection. With the data we got from that, we would train our Convolutional Neural Network and further use it to recognize both the sender and the receiver.At first, we started with a Deep Neural Network but soon we run into problems. We wanted to use it as it provided us with an easy way to deploy as we did not need to trouble ourselves with the feature selection. We ended up training our Convolutional Neural Network based on the features mined from the Microsoft API.The face recognition runs better than expected at even small training data. We believe the execution will only improve as the sets will grow.We learned that great things can be accomplished just by starting with a dream and 36 hours.Lunch.StudentHack VTrett Stefan-Michael\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:45 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Vision4Manchester","project_tags":["python","flask"],"project_url":"https:\/\/devpost.com\/software\/vision4manchester","keywords":"network,neural,learned,easy,microsoft,face,receiver,use,training,next,data,convolutional,started,first,feature,features,great,future,got,execution"},{"level_0":45,"hack_vector":[[0.1595889628,-0.1308699995,-0.0415936373,0.0616555847,-0.0370620415,0.149317041,0.1920526773,-0.0429408327,-0.014286668,-0.029437108,0.0076921424,-0.0346309729,0.1363122612,-0.0693203807,0.0500228517,0.0220810883,0.2199846804,0.0134324105,0.0320202745,0.1221053004,-0.2400257736,-0.0017549891,-0.0455747023,-0.023533294,0.1369438916,-0.0160118043,-0.0358075202,-0.1734133512,-0.0160033926,-0.0910985991,0.0474324711,-0.1248267069,0.0339994915,-0.062921837,-0.0226625241,-0.0161776729,0.11733675,-0.1469340175,-0.0530434065,0.0391073301,0.0569493286,-0.1214116216,-0.1615435183,-0.0252977349,0.0305411387,-0.0691419616,0.0256794319,-0.0529293269,-0.0408091396,-0.2268975228,-0.1197335348,0.0077952263,-0.097835049,-0.0322921723,-0.1726442873,0.1712450981,-0.1228802428,0.0043046004,0.0031911517,-0.0556062721,-0.0564735569,0.0285810344,0.0604252331,0.0526313893,0.1267004311,0.0033072594,-0.1240135059,-0.1321059763,0.0260420032,0.0105401194,0.0583894812,-0.0343287662,0.0116931405,-0.1355207264,-0.0050013494,-0.0937682763,0.1955725104,0.0128095616,0.0259641465,-0.1399010569,0.128021881,0.1695187241,0.0390390716,0.1666639,0.1170063093,0.2025590688,-0.1048583984,-0.0042321067,-0.0185454804,-0.0795314237,-0.1190165505,0.0795882791,0.0885452479,-0.0293285027,0.020274654,-0.0296908841,-0.1287977248,0.2341833115,0.0333194509,-0.0610409863]],"hackathon_name":"StudentHack V","index":45,"project_description":"Snooping for memes, at the city sight scenesWe like to travel and we're passionate about memesTreasure hunt game in a city where you get rewarded with memes everytime you finish a challengeUsing Vlad's blood, sweat and tearsAll of them... Literally anything you can come acrossThe project is working to a good degree and we learned a lot from itHow to work with google maps API and twilio and javascript and node.js. Learned how to solve problems after running into virtually every problem we could have run intoIt's snooping timeStudentHack VMala Sadik\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:44 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MemeSnooper","project_tags":["firebase","javascript","html5","jquery","twilio"],"project_url":"https:\/\/devpost.com\/software\/memesnooper","keywords":"learned,memes,working,everytime,js,javascript,inspiration,hunt,google,good,get,game,finish,every,literally,degree,could,come,city,challenges"},{"level_0":46,"hack_vector":[[0.1514582932,-0.1569727659,0.001889853,0.0919915363,-0.0465620421,0.1622938365,0.179711476,-0.0547081754,-0.0329584032,-0.0250732359,-0.012721505,0.0405702889,0.1230407357,-0.0751020461,-0.0078312308,0.0752272606,0.2583054006,0.0309386142,0.0456569679,0.0825446472,-0.1988621652,0.0027155571,-0.0431687906,-0.0450375155,0.1897517741,-0.0112193124,-0.0725483075,-0.1794809401,0.0253562704,-0.0815038681,0.0331754759,-0.1029369086,0.0791692212,-0.0445865057,-0.0372235104,0.0071250447,0.1429279298,-0.103445217,0.0088428212,0.0886939168,0.0634939894,-0.1506250799,-0.1783770025,-0.0420836173,-0.0500077344,-0.0464647859,0.0358475745,-0.0014720635,-0.0231707972,-0.1852050424,-0.0150463134,0.035809081,-0.1047204509,-0.0548389778,-0.1069843322,0.1406036317,-0.1694766134,0.064299956,-0.0218029637,0.0506384969,-0.0165735241,0.0446422771,0.0448203199,0.0552503653,0.1429406255,-0.0453672446,-0.15018785,-0.1746084541,0.0155902645,0.0148836728,0.0614978299,-0.029468447,-0.0060909055,-0.1452024877,-0.071363695,-0.0595829226,0.1862782389,0.0249525942,0.0997627378,-0.1464608461,0.1045262143,0.1555370986,0.0085681388,0.1484984457,0.1529375762,0.1611995101,-0.1456934065,0.0802142546,0.0019158856,-0.1166651174,-0.0704506263,0.1184739396,0.0199772213,0.0253084637,0.0780425593,-0.0806420371,-0.06757579,0.1482824683,0.1114896312,-0.0330142863]],"hackathon_name":"StudentHack V","index":46,"project_description":"A University RPG where you survive a year in Computer ScienceInspired by Stick RPGUsing Unity and C#StudentHack VSean Lewis\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:46 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"UNISIM","project_tags":["unity","c#"],"project_url":"https:\/\/devpost.com\/software\/unisim","keywords":"using,unity,unisim,stick,rpg,ran,proud,next,learned,inspired,inspiration,challenges,built,accomplishments"},{"level_0":47,"hack_vector":[[0.1578347683,-0.0752293393,-0.0291562658,0.0524224229,-0.00567031,0.1539665163,0.2140337229,-0.0553072058,-0.0362118334,0.0234492384,0.0279811677,-0.0737776607,0.1392257661,-0.0756989196,0.0706799552,-0.0194175933,0.2016550153,-0.0150387697,0.053038042,0.1119690835,-0.2282567322,0.0522407442,-0.0604406297,-0.000719981,0.1167886257,-0.0261634216,-0.0323616825,-0.1963383257,-0.0344447047,-0.0633910149,0.0888323113,-0.1228010729,0.0429063328,-0.1076755077,-0.0428476706,0.0012933144,0.1188070402,-0.1222057864,-0.0552182533,-0.011090613,0.045739267,-0.1313165575,-0.1528550088,-0.008551986,0.068444483,-0.0260216631,0.0054062959,-0.0908164531,-0.0188585632,-0.2103258222,-0.1377370059,0.0191611852,-0.1134336665,0.045373667,-0.1820909828,0.135524258,-0.1436282545,-0.0057585821,0.0210601501,-0.0958174393,-0.061786104,0.0192273911,0.1034127027,0.0447953753,0.1141663045,-0.0006927347,-0.0907856897,-0.1103430167,0.0285772793,0.0237472318,0.0608410574,-0.0338074453,0.0288361553,-0.1277971119,0.0345889442,-0.127892971,0.1965756416,0.00444568,0.0187897179,-0.1331871152,0.1378006339,0.1393406093,0.0817858949,0.1588512808,0.106567286,0.2062301189,-0.0742312521,-0.0454423316,-0.0026626766,-0.07328026,-0.1551051289,0.0459074043,0.1054228544,-0.039194271,0.0049665156,0.0101905242,-0.1343140602,0.2127789557,0.0131658409,-0.0749588013]],"hackathon_name":"StudentHack V","index":47,"project_description":"Offline computational knowledge engine powered by WolframAlphaThe team started off with the idea of using the Twilio API to implement a bot of sorts, over telephony network (SMS)In its current state, Askii is capable of utilising the WolframAlpha computational knowledge engine to query for you, and respond within a short time (also some limited reddit usage)Python for the majority of manipulation: listener server; reading input, passing to, and receiving from the WolframAlpha API, as well as processing for SMS output\nTwilio for telephony interface\nAndroid app to attempt to use different types of responseQuery responses from WolframAlpha are variable in length, metadata, and content, therefore interpreting these was challenging in its complexity\nHandling of encoded unicode charactersSuccessfully reading and replying to SMS, impossible without the Twilio API (huge help!)\nAndroid app as we had little prior experience with the development environment and implementationWeb is hard!\nHTML parsing, GET & POST requests using Python, SMS handling in Android, git \/ GitHubMultiple web service capable - wikipedia \/ reddit \/ IFFFT\n(as long as you can code it, you can have it!)\nEasy plugin integrationStudentHack VPython interface with WolframAlpha API, parsing and returning query responses; some Android Studio styling and behaviourI worked on the android app development. I learned how it would read a message and send it as a SMS to a phone number.I worked on the Twilio interaction with the server and writing some of the backend for the python server. I learned  lots on using python with GET and POST requests and scraping web pages for content.Joao Maio\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:46 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Askii","project_tags":["python","twilio","java"],"project_url":"https:\/\/devpost.com\/software\/askii2","keywords":"sms,wolframalpha,android,api,twilio,python,telephony,reddit,capable,query,handling,using,askii,app,web,reading,idea,hard,help,html"},{"level_0":48,"hack_vector":[[0.1578365713,-0.113267161,-0.0294845682,0.0468182079,-0.0094240345,0.1391510963,0.1942245513,-0.0327433981,-0.0282760207,-0.0048283241,0.0167691428,-0.0749688447,0.1480050087,-0.0631612614,0.0574760027,-0.0002512478,0.2057878524,-0.0126402359,0.0377555266,0.1262161583,-0.2482459694,0.0340450853,-0.0406623594,0.007108687,0.1386260986,-0.0373167321,-0.0336608589,-0.1831750274,-0.0354760475,-0.0908034593,0.0925589725,-0.1203972623,0.0276029687,-0.076594606,-0.0211130101,-0.0257891007,0.1125074774,-0.137850374,-0.0440963097,-0.0201482829,0.059287522,-0.1324802488,-0.1539535522,-0.0303248018,0.0637024269,-0.0411118008,0.0042658234,-0.0715309232,-0.0211402178,-0.2113658637,-0.1325998604,0.0202345047,-0.1051942259,0.0226411801,-0.2193530947,0.1564725637,-0.1395355463,-0.0285105165,0.029448865,-0.1018561572,-0.0725394115,0.0215939358,0.0725228116,0.033294946,0.1094109043,0.0254687313,-0.0929999202,-0.1243221983,0.0241830666,0.0263860486,0.0689778328,-0.0410270169,0.031783592,-0.1086057872,0.0251683816,-0.1119667888,0.1715937555,-0.0065530543,0.0083924169,-0.1256092191,0.1079268008,0.1527277678,0.0418231003,0.1689836383,0.1064686701,0.2105326205,-0.0941348895,-0.0469366983,-0.0284322444,-0.0672365353,-0.1296946108,0.0680813119,0.0866379365,-0.0384453423,-0.0189706571,0.016983008,-0.1471942812,0.2308157384,0.0139689026,-0.065281406]],"hackathon_name":"StudentHack V","index":48,"project_description":"Intense rolling ball action, avoid death trap,s pick up power ups and try to get highest score!Front ImageMobile games of the same genre. We decided to make one with a twist as it is realistic to make in 2 days.Get through the labyrinth, pick up power ups to modify your journey. Find secrets, dodge traps and get the highest score you can! You control a ball that moves through a maze. Maximise your time to get the best score possible.We built it using unreal engine 4, made models with Maya and visual effects with the aid of photoshop. We seperated the tasks by the three of us. Vasile for map creation, Ezekiel for scripting\/coding and Klavs for animations\/visuals.Bugs in scripting which took a while to fix, making the map interactive and fun and creating a user interface for the game.Creating the base of a game that can be expanded in just 2 days, we added quite a lot of features and are proud of how much we got done.We gained valuable experience in teamwork, using unreal for advanced scripting, advanced particles\/animations and  creating an inuitive map and interface.We hope to add more levels, features and polish up the game in the coming weeks and expand it to have a multiplayer mode. From there we will release it onto PC and Mobile and see how it does.StudentHack VI worked on level's Materials such as walls, balls and many other mesh textures. Have done Animations on level(moving platforms, etc...). Created all of Particle systems that game level includes inside of.I created all the blueprints for the game. So essentially I coded the game and made all the assets work together! I also helped streamline and design the gameplay elements.Vasile Morar\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:47 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Kinetic Dash","project_tags":["photoshop","maya","unreal-engine"],"project_url":"https:\/\/devpost.com\/software\/kinetic-dash","keywords":"scripting,get,creating,game,map,features,days,mobile,proud,built,score,make,unreal,animations,interface,using,advanced,fun,games,fix"},{"level_0":49,"hack_vector":[[0.1645593792,-0.1087131351,-0.0159980748,0.0677799359,-0.0122938398,0.1520454139,0.1948695779,-0.0434283875,-0.0427239053,-0.0106644314,0.0221678298,-0.0583688617,0.1506324559,-0.0727513954,0.0609291755,-0.0044171009,0.2061470896,-0.010467506,0.0556903854,0.1112875715,-0.2292119861,0.0392786972,-0.0499211028,-0.0116642304,0.1292921603,-0.0376816913,-0.039286457,-0.1856207401,-0.0397561193,-0.0820082501,0.0778547451,-0.1092524081,0.04617358,-0.0802874714,-0.0293972511,-0.015113051,0.1327513903,-0.1332567632,-0.0500821508,0.0086508412,0.0718665868,-0.1334935278,-0.1580082774,-0.0139056547,0.0464627706,-0.0313182808,0.0208383389,-0.0832297727,-0.0229961202,-0.2150424719,-0.1222475469,0.0265418831,-0.1099298745,0.0227271672,-0.1982866079,0.1515265554,-0.1449706554,0.0001578431,0.0285768881,-0.0815443471,-0.0625051409,0.0198480487,0.0788674802,0.0379350521,0.1266786903,0.0079339417,-0.1070339456,-0.1275763661,0.0129751563,0.0256303176,0.0692590848,-0.0347240306,0.0102197239,-0.1374912262,0.0167281479,-0.1064485908,0.1975466162,0.0045953458,0.0227926839,-0.1318594962,0.1183990538,0.1513320506,0.0478305854,0.1478272825,0.1220640242,0.1953801364,-0.0985128209,-0.0335228406,-0.0164319929,-0.0885471478,-0.1413830966,0.0742127597,0.0801315159,-0.0345673375,0.0037739279,-0.010280123,-0.133338362,0.2238423973,0.0304797105,-0.0542853177]],"hackathon_name":"StudentHack V","index":49,"project_description":"A capacitive touch keyboardThe belly of the beastWe wanted to make a capacitive touch keyboard.It sends arrow key input to the connected computer as a keyboard.We built it with an Arduino UNO board.Soldering the wires and making them responsive to the capacitive touch. The lack of the Arduinos I\/O was also a challenge to overcome. We were not able to use a transistor mux matrix as we are sending under 10microAmp through the resistor.We finished the thing and it works with our computers.How to use Arduino and more about electrical design.Make a full keyboard not just arrow keys.StudentHack VI worked on the software part.I worked mostly on hardware and design partProposed the concept and did electrical design and building.Kaspar M\u00e4tas\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:43 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Touch Team","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/touch-team","keywords":null},{"level_0":50,"hack_vector":[[0.1439453512,-0.1566940546,0.020597687,0.0986892581,-0.0607690252,0.1543002725,0.1529410183,-0.0549211875,-0.0343410783,-0.031798292,-0.0130611928,0.067305088,0.1207755506,-0.0786892772,-0.0224251579,0.1078299433,0.2616057396,0.0486364737,0.0510595664,0.0656398386,-0.159239307,-0.0076713874,-0.0504992642,-0.0756543651,0.1809964031,-0.0161402281,-0.0861175507,-0.1667558849,0.0495119207,-0.0716415271,0.0033306233,-0.0751221329,0.0907158032,-0.0328686722,-0.0403521433,0.0290420558,0.1484879404,-0.0860782117,0.0261320453,0.1221551821,0.0552869104,-0.1379437894,-0.1846380532,-0.0278804656,-0.0825972632,-0.0521622859,0.0584282242,0.018393442,-0.0093540717,-0.1651863754,0.0149398344,0.040066205,-0.101927869,-0.0837695077,-0.0585635416,0.1356619149,-0.154892236,0.0963527188,-0.024846239,0.0975689217,0.0046735266,0.044655025,0.0328696817,0.0846026465,0.1447818428,-0.0681824386,-0.1442929506,-0.1829123199,0.0038065847,-0.0085726716,0.0600681044,-0.0225498527,-0.0324532352,-0.1458018869,-0.0991688222,-0.0344574079,0.1895291358,0.0314972736,0.1219456196,-0.1395412534,0.0982341394,0.1461500078,-0.0081014261,0.1165540367,0.1640754193,0.129581809,-0.1532788724,0.1070453078,0.0148024429,-0.1303454041,-0.0504287146,0.1202144474,-0.006137982,0.0480769724,0.1082228944,-0.1237637922,-0.0334758498,0.1084536538,0.1389790773,-0.0311917849]],"hackathon_name":"StudentHack V","index":50,"project_description":"******shave his hairStudentHack VHamza Ghani\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:37 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SamiHack","project_tags":["amazon-alexa"],"project_url":"https:\/\/devpost.com\/software\/samihack","keywords":"shave,samihack,ran,proud,next,learned,inspiration,hair,challenges,built,accomplishments"},{"level_0":51,"hack_vector":[[0.1369801015,-0.0838740095,-0.0293461811,0.0563312881,-0.0175896585,0.1480204463,0.2044159919,-0.0456584506,-0.0283781849,-0.0069781039,0.0246148594,-0.0646113753,0.1544879526,-0.0701787174,0.069861792,-0.0075288867,0.2039677799,-0.0105442079,0.0449070521,0.1231424436,-0.2298826724,0.03101491,-0.056444779,-0.0003185801,0.1235801503,-0.0256529469,-0.0346647277,-0.1780046523,-0.0408360735,-0.0704827085,0.0844264776,-0.1147320867,0.0317595564,-0.0757574365,-0.0313786343,-0.0022225115,0.1232189909,-0.1198708788,-0.0439390987,0.0013453747,0.0567331687,-0.1283014119,-0.1549750865,-0.0176945273,0.0584081523,-0.0465047918,0.0121246977,-0.0789137408,-0.0242339335,-0.2179846615,-0.1349695474,0.0099905338,-0.1067693383,0.0279807989,-0.2027036846,0.151527524,-0.1491984874,-0.0108044837,0.021929251,-0.0991123989,-0.0635123178,0.0259645935,0.0862649083,0.0398144796,0.1184215918,0.0119538112,-0.0882561952,-0.1266380697,0.0280702207,0.017634077,0.0475894846,-0.034313973,0.01883935,-0.1133480817,0.0219058339,-0.1031708419,0.1979196519,-0.0063385325,0.0059429109,-0.1435832381,0.119407557,0.157755807,0.0628653616,0.1556637734,0.1075974926,0.2142441422,-0.090145871,-0.041182965,-0.0106202709,-0.078992717,-0.1556720585,0.06074626,0.1032303125,-0.0294110607,-0.0025736764,0.0060137999,-0.1459838599,0.2354937941,0.0210978463,-0.0665072203]],"hackathon_name":"StudentHack V","index":51,"project_description":"Do them a favour, gain a favour.Fiverr was a major inspiration along with the common use of instant messaging for asking for favours.The website allows you to create a favour you wish for someone to do for you in exchange for your time used elsewhere in a one way platform.We used C# and ASP.NET Web Forms to build the entire system and a MySQL database for storing the data.Originally we wanted to use the Google OAuth API but couldn't get it working with our implementation and went with just using an inbuilt login system. We also had issues with the inbuilt SQL Server implementation and went with a standard MySQL server.Learning how to use OAuth within C#\nCreating a functional website in ASP.NETSee above.We want to extend Favourr and add more of the nice to have features to it and ensure that it would work in an online environment with concurrent users.StudentHack VI worked on backend using c#, sql and asp.net. I had little experience with all of these and it was really challenging to arrive at a state where the code works as intendedWorked on the c# to mysql interface and validating forms and filtering queriesGeorge Broadley\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:27 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Favourr","project_tags":["c#","asp.net"],"project_url":"https:\/\/devpost.com\/software\/favourr","keywords":"use,implementation,mysql,favourr,used,net,asp,server,oauth,website,went,inspiration,inbuilt,system,extend,favour,exchange,favours,entire,features"},{"level_0":52,"hack_vector":[[0.1174576655,-0.0878698528,-0.0267708488,0.0260276888,-0.0302886628,0.1345149279,0.1952028573,-0.0152921351,-0.0130618894,-0.0308087766,0.0219685975,-0.0583827049,0.1245417148,-0.055491142,0.0539223887,0.0290026423,0.2417554706,0.0096457629,0.0228549782,0.1319803745,-0.2411626428,0.0287384,-0.0269895382,-0.0273842029,0.1007046923,-0.0174646713,-0.0261280872,-0.1851417273,-0.0091310842,-0.1064193398,0.0549281202,-0.1188175231,0.0290681645,-0.0771802142,0.0121273277,-0.0233187582,0.1128248274,-0.1329807043,-0.0531446598,-0.0052401791,0.0272937641,-0.1552317291,-0.1551710516,-0.0614088625,0.0566610582,-0.0620597601,0.0032618882,-0.0474197529,-0.0245961566,-0.2037720233,-0.1174759641,-0.0005485197,-0.0928953364,-0.0288698114,-0.2002679706,0.1628134251,-0.1265106946,-0.0282003582,0.0535685718,-0.1057090685,-0.0758168623,0.0223246738,0.0781245083,0.0457839631,0.1065848768,0.0227811746,-0.1099713519,-0.1532171369,0.0560977906,0.0348259173,0.0684469491,-0.0562085696,0.0384859852,-0.1119208559,0.0043597692,-0.1523264199,0.1455760151,-0.0066229119,0.0309183653,-0.1289884001,0.1094848216,0.1704378724,0.0495348126,0.1912627965,0.0927510187,0.1776828766,-0.1272855848,-0.0333286747,-0.0406065769,-0.0894380882,-0.1474566311,0.0630571619,0.0754301995,-0.0564633757,-0.0040272456,0.024768047,-0.162616834,0.2243536264,0.0161351655,-0.0790160149]],"hackathon_name":"StudentHack V","index":52,"project_description":"Discover the worldNational Geographic and travelling the world.Odyssey is our method to make our users discover the world in an interactive way, by engaging their colour perception. By choosing one of our 360 colours, you can virtually travel to different places in the world.You could also discover the world by enabling the face recognition system, and the places that you will discover will be\ninfluenced by your current feeling.A different Spotify playlist will be generated for each of our videos from different areas of the world:\nGrand Canyon, Sri Lanka, Gobi Desert, Costa Rica, Dominican Republic, Cocos Islands, Norway, Kuala Lumpur.Is Samsung VR you could actually use our application, to focus\/click on a colour, and then to redirect you to a place that you need to find.Features:For further implementation in Virtual Reality, you could actually use our application, to focus\n3 seconds on a colour, and then to redirect you to a place that you need to find.StudentHack VI worked on the front end part by designing the interface.Madalina Raicu\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:31 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Odyssey","project_tags":["javascript","html","css3","spotify","youtube","google-maps"],"project_url":"https:\/\/devpost.com\/software\/odyssey-fb63zq","keywords":"world,find,different,colour,could,discover,place,focus,emotion,need,odyssey,places,recognition,redirect,playlist,areas,application,actually,use,geographical"},{"level_0":53,"hack_vector":[[0.1510971934,-0.0864569172,-0.0235805269,0.0422192477,-0.0117390025,0.1415919363,0.2196948677,-0.0470564403,-0.028907096,0.0045061545,0.0059666033,-0.0727140978,0.1427002847,-0.0843644515,0.0647091195,-0.0140212271,0.2015567124,-0.0098580541,0.0376441926,0.1296166182,-0.2282377779,0.047536552,-0.0522110164,-0.0059516951,0.1418409497,-0.0192651059,-0.029790746,-0.1829432547,-0.0323391743,-0.0704201162,0.0663668439,-0.1356476992,0.0407741331,-0.0885560364,-0.0400570482,-0.0146084419,0.1242369562,-0.1369027495,-0.0604428463,-0.0090989936,0.0498222411,-0.1397210956,-0.1400602013,-0.0167739298,0.0658929795,-0.0354229733,0.0123994723,-0.0878014043,-0.0318399556,-0.2044741362,-0.1464729458,0.0268082097,-0.1133219525,0.0377934761,-0.1786766052,0.1593278348,-0.1399772167,-0.0128428135,-0.0009860311,-0.1007105038,-0.0628826171,0.0143309366,0.0847550258,0.035861209,0.1183596626,0.0058050198,-0.0935996249,-0.1118897349,0.0289074145,0.0293919872,0.0622422881,-0.0438969173,0.0320504308,-0.129385069,0.0495856293,-0.1064500734,0.1776046455,0.0002174488,0.0013565237,-0.1301199049,0.1380642653,0.1460863203,0.0877428278,0.1537377089,0.0979149118,0.2033521533,-0.0821704417,-0.0443854742,0.0014268692,-0.0660689548,-0.1491472572,0.0449298695,0.1023480073,-0.0332677551,-0.0007182737,0.0005697862,-0.1491540074,0.2314795405,0.0046224259,-0.0700735301]],"hackathon_name":"StudentHack V","index":53,"project_description":"Explore your surroundings, be the first to snap all the objects!We loved the idea of using image recognition to improve customers experience, although the technology is not quite there yet so we made a travel-inspired image recognition game.You play in small groups of friends either in the same location or in different places. You are given 5 things to take pictures of, within one minute. The first one to get them all wins!The front end is an Android app. It communicates via socket.io to a node.js server that keeps track of the session and sync. The images are recognised using Google Cloud Vision API's.Integrating the API with the Android was a challenge. We tried multiple APIs, settling with Google's for precision and generous trial plan. Multithreading caused some weird issues.\nAddressing heavily nested objects took several attempts in node.js.Having no experience with node.js and socket.io we were surprised what we managed to achieve.\nWe were surprised to obtain a rather polished app after going through various designs.Node.js and socket.io\nImage recognition API's behave weirdly quite often. (e.g. sometimes pens are recognised as shotguns)The server now runs locally but we are planning to have it available on the cloud with multi-server support.\nMore game modes e.g. random group creation.StudentHack VWorked on the backend with Greg.Worked on the backend in node.js creating the server and using web sockets for a connection between the clients and the server.David Morpurgo\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:29 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SnapIt!","project_tags":["socket.io","java","android","android-studio","node.js","javascript"],"project_url":"https:\/\/devpost.com\/software\/snapit","keywords":"js,node,recognition,api,server,io,socket,image,surprised,cloud,game,recognised,experience,google,one,quite,app,android,using,improve"},{"level_0":54,"hack_vector":[[0.1541817635,-0.0897475854,-0.029146757,0.0539018176,-0.0157085769,0.1470464766,0.1903979778,-0.0352371596,-0.0177083462,-0.0194775853,0.0103063006,-0.0829969719,0.1416904628,-0.0688936636,0.0641384348,0.0066953376,0.2042605877,-0.0007441008,0.0492390282,0.1227551401,-0.2339309901,0.0375670008,-0.0519439131,-0.0092118308,0.1163126603,-0.0301070027,-0.0359927639,-0.179580763,-0.0462225601,-0.0851735026,0.0683622733,-0.1177497059,0.0453829691,-0.0872212574,-0.0167210381,-0.0166912694,0.1270519346,-0.1371429563,-0.0547347963,-0.0040588202,0.0599913225,-0.1391272396,-0.1633801013,-0.0249321368,0.058271125,-0.0463344306,0.016156368,-0.0870293006,-0.0295070801,-0.2166893631,-0.1441306621,0.0215753708,-0.1022231504,0.0108828899,-0.2084365934,0.1561361849,-0.1350956857,-0.0197052937,0.036681436,-0.0984279737,-0.074360244,0.0140659697,0.0793016255,0.0303862505,0.1105705872,0.0192840546,-0.0952551365,-0.1297195852,0.024363853,0.0313512385,0.077563934,-0.0493539944,0.0129154315,-0.1294638515,0.0291137472,-0.1059664041,0.1856809109,0.0021207763,0.0040091337,-0.1316815913,0.1053247526,0.1534217,0.0626103729,0.1548025906,0.1010193899,0.192475155,-0.0903124437,-0.0440329053,-0.009053112,-0.0839504525,-0.1416107863,0.0585533939,0.0870512351,-0.0414294563,-0.0075059691,0.0035065762,-0.1426232904,0.2399846166,0.0139186848,-0.0714541525]],"hackathon_name":"StudentHack V","index":54,"project_description":"A bell with a twistThe TeamWe were inspired by the presentation of the CakeSolutions guy (Alex i think).It is a bell with a camera linked to it which detects your face and will do a specific action depending if it detects a person or not, and it send an email with a picture of the person in front of the door.Using pycharm and the opencv library.Finding a way to respons to your emotion, which we did not implement at the end.We are proud that most of the things we wanted to do we managed to achieve.Image processing, python, and how to work together as a team.Transforming it into a product which will be in every household :) .StudentHack VI worked on the face detection algorithm,and came up with the idea for the project. At first I tried to make it work with Machine learning but in the end gave up on the idea.I worked on the gif's, audio computer responses, voice modulation, sound modifications, a bit of making the responsive faces. Looking around my colleagues on what they were hacking.I make animation,mail send code ,algorithm,integration of the final code.I and Bogdan worked in image processing for face detection and we try to find human emotion, but this part with human emotions doesn't worked. We worked togheter for make an email send code on SMTP using gmail servers.Gantu Bogdan\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:28 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Future Bell","project_tags":["python","opencv","pygame"],"project_url":"https:\/\/devpost.com\/software\/future-bell-6p7w4h","keywords":"proud,bell,person,detects,work,image,household,guy,future,front,finding,face,every,end,email,emotion,inspiration,door,depending,challenges"},{"level_0":55,"hack_vector":[[0.1332590282,-0.1192370951,-0.0203926172,0.0344525762,-0.0350585915,0.137577951,0.2175077647,-0.0340681933,-0.011718954,-0.0098869093,0.0192360487,-0.0297272094,0.1338716596,-0.0769132152,0.0480755791,0.047710523,0.2480303943,0.0068410882,0.0378227942,0.1235120669,-0.2396940142,0.0271426328,-0.0443890207,-0.0432896055,0.1126054525,-0.0166118294,-0.0413857736,-0.1849104762,0.009424258,-0.1070297137,0.0458479524,-0.1158764735,0.0433996506,-0.0888439044,-0.0094426135,-0.0145797953,0.1161129475,-0.1371164918,-0.042576991,0.0090015186,0.0328506418,-0.1423081309,-0.159389779,-0.0444346592,0.0511504039,-0.0533889867,0.0156981908,-0.0524036922,-0.0300374515,-0.2032582164,-0.1120829508,0.0129968449,-0.103123799,-0.0446212366,-0.1727380753,0.1551044881,-0.1317582726,-0.0158005767,0.0318166763,-0.0623496734,-0.0477448255,0.0282039996,0.0839603543,0.0618988015,0.1119286567,-0.0033878882,-0.1159701273,-0.1406943649,0.0461383015,0.0196103957,0.063360326,-0.0494668111,0.0157954749,-0.1340908557,-0.0208181813,-0.1342956424,0.166636467,0.0088474266,0.0313040465,-0.1500596851,0.131727621,0.1683676541,0.0482183509,0.1803208292,0.1077405587,0.1966994256,-0.1104007065,-0.0036720894,-0.0176060814,-0.0934636369,-0.1423095316,0.0651214644,0.082279399,-0.0180235747,0.0146638388,-0.0111896992,-0.14589113,0.1940080076,0.032090541,-0.0743844807]],"hackathon_name":"StudentHack V","index":55,"project_description":"ChatBot which allows to report disrespectful behaviour and check if someone else has a history of such behaviour.LifeIt's a way to keep track of fake profiles, people, who use social media as a harassment platform or in general have questionable intents. It is a chat bot which allows people to report such behaviour along with some details and the offenders name or phone number. Later this can be accessed by looking up one of the latter, allowing people to check if their new facebook friend or aquaitance has a history of disrespectful behaviour.Uses the recast.ai API and node.jsNot knowing node.js at the beginning, difficulties with building conversation flow.\/\/TODO facebook (friendlist) integrationStudentHack Vlegrigonis\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:26 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"CreepBot","project_tags":["javascript","node.js","postgresql","heroku"],"project_url":"https:\/\/devpost.com\/software\/messenger-bot","keywords":"people,js,behaviour,facebook,node,way,conversation,general,future,friendlist,friend,flow,fake,disrespectful,difficulties,details,chat,check,history,challenges"},{"level_0":56,"hack_vector":[[0.1584792286,-0.1518190205,-0.0182486121,0.0443962142,-0.0356296711,0.1211727485,0.1973772347,-0.0233313348,-0.040602535,0.0089271469,0.004923746,-0.0158715472,0.1402797252,-0.061443232,0.0544523895,0.0348336287,0.2351685464,0.0178875346,0.0367143713,0.1100335121,-0.245470807,0.0178502817,-0.0392983966,-0.0362984836,0.1336101592,-0.0219816901,-0.0457262732,-0.19068183,0.0204037763,-0.1006144062,0.0539541021,-0.1278488636,0.0293450616,-0.0792867765,-0.0282015447,-0.0161344036,0.1026031375,-0.1473804265,-0.0453379974,0.030151343,0.0237624776,-0.145925805,-0.1635736078,-0.0413361043,0.014185085,-0.0716993958,0.0188571103,-0.0547467321,-0.0175464079,-0.1963728666,-0.0885050893,0.0027616515,-0.1103585958,-0.0415288657,-0.1596066803,0.178461954,-0.1428551078,0.0204286687,0.009027794,-0.0358457267,-0.0479976423,0.0436857231,0.0593595095,0.0856142342,0.1163238212,-0.0141278477,-0.1377840638,-0.1340349466,0.0305579584,0.0017034388,0.0741835833,-0.0405439921,0.0091750994,-0.1261567175,-0.0133495741,-0.1353714913,0.1793275177,0.0155061595,0.0678484589,-0.1385526955,0.1393162608,0.1650930941,0.0406345651,0.1586308181,0.1382675022,0.1937690377,-0.1290891767,0.0137811229,-0.011213473,-0.091702193,-0.1076352224,0.0802580267,0.0781925619,-0.0230484549,0.0318405852,-0.0321091115,-0.1412237287,0.1731808931,0.0432676002,-0.0647223815]],"hackathon_name":"StudentHack V","index":56,"project_description":"UK by crime rates and treatment facillitiesThe game is about a character travelling the UK trying to visit as many cities as possible in order to gathe rpoint. but crime rates in different cities are decreasing its health stats. So the character must pay for healthcare.Big Data Challenge - Used data.gov.uk for information like hospitals locations and police.gov.uk to get info about crime rates n different cities across the UK.Gaming Challenge - Our project is a travel themed gameStudentHack VVlad Berianu\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:24 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"UK Big Data Travel Game","project_tags":["three.js","javascript"],"project_url":"https:\/\/devpost.com\/software\/uk-big-data-travel-game","keywords":"uk,cities,data,challenge,character,crime,rates,gov,different,game,gathe,healthcare,health,get,visit,gaming,decreasing,info,challenges,big"},{"level_0":57,"hack_vector":[[0.1451589614,-0.0912905112,-0.031669043,0.0410777517,-0.0142326057,0.1357055008,0.1895164251,-0.0349150114,-0.0104907611,-0.0176355056,0.0229456816,-0.0811873972,0.146306172,-0.0728644207,0.0633235127,-0.0003153873,0.2094411552,-0.0087003335,0.0477998666,0.1215645,-0.241756022,0.0336905122,-0.0438982584,-0.0070911692,0.0955576599,-0.0369763188,-0.0276357643,-0.1741727293,-0.0341336913,-0.0932673067,0.0731473491,-0.1132590771,0.0328367464,-0.0857147127,-0.0201758612,-0.0166624598,0.118655026,-0.1416570395,-0.0546461344,-0.011249695,0.0488582291,-0.1177912205,-0.1577836722,-0.0252390597,0.0733888,-0.0579074249,0.0177868716,-0.0864801258,-0.0253233369,-0.2186667919,-0.1594445407,0.0166933183,-0.1051916182,0.0059106429,-0.2164076567,0.1511773467,-0.1262012422,-0.0391982608,0.043380376,-0.1058242172,-0.0734885558,0.0143604912,0.0906526893,0.0396376252,0.1069203243,0.0217268299,-0.0821077228,-0.1164302379,0.027806446,0.0251868218,0.066144377,-0.0474956259,0.0155819757,-0.1148777679,0.0329820029,-0.1179823503,0.1844758093,0.0071913311,-0.0040364675,-0.1373241097,0.1173603982,0.1605604738,0.0444818586,0.1674441397,0.0973114222,0.204201594,-0.0844195485,-0.052137088,-0.0252250526,-0.0737713873,-0.1443220824,0.0528532043,0.0928609222,-0.0365965739,-0.021252824,0.0106527833,-0.1547781825,0.2306918353,0.009727967,-0.07985764]],"hackathon_name":"StudentHack V","index":57,"project_description":"Tinder, but for friendsUniversity can be very lonely, especially for shy, first-year students. Sometimes, all you want is somebody to hang out with for lunch, for a beer, for a movie, maybe for the length of a flight. You're not alone in the struggle. Many other people may be looking for the very same thing. How about we bring two lonely kids together for coffee and conversation?\nAskOut aims to do just that: facilitate contact and the inner courage in everybody to ask out a complete stranger.AskOut is a web-app, pinpointing all users in close proximity to each other and allowing them to talk to each other and organise a meet-up. It displays interests and topics of discussion, so that, if small talk fails, you can always bring out the big questions and see yourself fall into an enthralling conversation on politics, religion and whether or not Mary Poppins is a trickster God.\nYou have to register an account and enter short edgy bits of information about yourself, that could start a conversation and keep it going. You can login, logout, update your information.\nCheck it out HERE: 80a3e5ca.ngrok.io (Temporary Link)The design is meant to be minimalist and easy to navigate, as well as robust across platforms and browser sizes. All forms works and are meant to improve the user experience. A mixture of Web-design and PHP was required for the final result.Initial plan included Cordova and Twilio integration, but it proved impossible to implement on time.A beautiful website and having pushed my team in a direction with a lot of potential. The PHP Nikita wrote is quite impressive and I was thrilled to have worked with him and Ilias on this idea.Teamwork, team management, advanced CSS and forms.Improved PHP, ability to add personal pictures, Twilio implementation for chats, turning everything into an app, perhaps even pushing it on Google App Store.StudentHack VI came up with the idea, identified works areas, delegated tasks and ultimately was responsible with everything front-end. Ultimately, I tried to turn our website into a mobile app using Cordova, but I didn't have enough time to properly learn how it works.I worked on back end - implemented functionality for chat, getting and setting data, provided Ajax queries to access and modify data in database on the server, implemented getter for current location of user. Tried adding additional \"user\" chat using twilio api along with Ilias.I made the backbone of the webpage implementing HTML code to make the work easier for Ruxandra since she is a designer and has more experience: I am only the implementer.After that, I worked with Twilio API and tried to implement the feature when if someone checks in near as well, all others will receive SMS notification. Unfortunately, it couldn't work, so I united with Nikita to implement online chat.Ruxandra Maria Mindru\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:22 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AskOut","project_tags":["javascript","java","css","html","php"],"project_url":"https:\/\/devpost.com\/software\/askout-fl9xgv","keywords":"askout,app,php,conversation,lonely,design,twilio,forms,information,bring,web,team,talk,meant,flight,god,going,first,hang,final"},{"level_0":58,"hack_vector":[[0.141183123,-0.0959161744,-0.02972297,0.0316283181,-0.0157259777,0.1257941127,0.1893788278,-0.018407695,-0.0318436027,-0.0139176324,0.0171089564,-0.0732098967,0.1397661418,-0.0676523969,0.0573248342,0.0142973876,0.2168751806,-0.0042374232,0.0369075462,0.1392876208,-0.250064075,0.0208501276,-0.0400069803,-0.0090346904,0.105473645,-0.0267064944,-0.035354875,-0.1674414426,-0.0131426184,-0.1052810922,0.0618892387,-0.11474666,0.0227223057,-0.071724318,-0.0052364636,-0.0229024254,0.1125242487,-0.1472788751,-0.0551119074,-0.0182950292,0.0405911021,-0.1248384491,-0.153661564,-0.0294199791,0.0683246627,-0.0665700436,0.0061960118,-0.0783163235,-0.0064373096,-0.2193862498,-0.1361318231,0.0222063828,-0.1005581394,-0.0013862612,-0.2109552026,0.1679439992,-0.1267373115,-0.0271908995,0.0376757197,-0.1092571914,-0.0607100278,0.0322602428,0.0766746029,0.0561668389,0.1097387448,0.0228419881,-0.0929762572,-0.132134676,0.0324642658,0.0222474746,0.0716555566,-0.0348569341,0.0221036989,-0.1122603714,0.0283560716,-0.1260245144,0.1653807163,-0.0051259175,0.0115637789,-0.126263231,0.115126133,0.1564839184,0.0527810194,0.1663049757,0.1044395342,0.1996009648,-0.0972509235,-0.0527219921,-0.0472598784,-0.0672160983,-0.1421365589,0.0584953278,0.0969279632,-0.0544444248,-0.0155757964,0.0218020305,-0.1689823121,0.2364882082,0.0075485422,-0.0811733007]],"hackathon_name":"StudentHack V","index":58,"project_description":"Virtual guideWe wanted to make it easier to people to gather together and explore different cities' culture and sights.Imagine you are an English person who goes to the Bahamas for the first time ever in you life. You want to socialize and do sightseeing, understand something new about the culture of that distant place. If you are a user of our app you are given a number of suggested routes in a menu and you pick one. Each route has a starting point so all the users who want to visit the same tour should gather together at the starting point at predefined time, meet with each other and visit all the places from the picked option. The role of Twilio is to make sure that all the users are notified about the incoming beginning of the gathering. All the users are being sent an smses reminding them about the gathering. Our virtual guide using google maps' functionality shows the group around an array of landmarks and sights in general.We used android java, android studio and SQLiteVarious debugging problems, the difficulty of binding a database to an android app, and 'querrying' it in java. Database architectural issues.The teamwork was top quality and even at the very early stages of the day we were concentrated and devoted entirely on the project.We gained more complete understanding of how databases work, how to build and structure them. We understood a lot about how to the view system of Android, resource loading and debugging.We may continue its development.StudentHack VKonstantin Dimitrov\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:19 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Tour Team","project_tags":["android-studio","sqlite","java"],"project_url":"https:\/\/devpost.com\/software\/tourteam","keywords":"android,users,make,together,sights,gather,gathering,debugging,starting,point,database,culture,time,java,want,visit,app,issues,loading,explore"},{"level_0":59,"hack_vector":[[0.1491654813,-0.0861572102,-0.0396574363,0.0368188955,-0.0107505424,0.1272126734,0.1926368177,-0.0270076972,-0.0237452257,-0.0169222374,0.0110153425,-0.0888525322,0.1455687732,-0.0617193095,0.067284137,-0.0135769714,0.195410043,-0.0101255225,0.0352948718,0.1378058791,-0.2376514077,0.0275285542,-0.0440949276,0.0091369804,0.1096834987,-0.0211350098,-0.0260851961,-0.1631189287,-0.0426861085,-0.0911627263,0.0707369,-0.1199348047,0.0238743164,-0.0803917125,-0.0173785258,-0.0245616455,0.1134820953,-0.1393497139,-0.0632205307,-0.0192924514,0.0568727069,-0.118839711,-0.1469936967,-0.0286821127,0.0812974423,-0.0585435145,0.0097477203,-0.087393254,-0.0326839276,-0.2173494697,-0.1537632793,0.0107349735,-0.1016215906,0.0212292578,-0.2081401795,0.163676545,-0.1231648326,-0.0466322415,0.0377281606,-0.1219337806,-0.0805065706,0.017202599,0.0795050561,0.0252696723,0.1070956141,0.027042212,-0.0943085477,-0.1160001084,0.0269643888,0.0288653541,0.0648648292,-0.0421499349,0.0211353879,-0.1104394346,0.038593661,-0.1193630397,0.1761133671,-0.0034202796,-0.0064255856,-0.1265211701,0.1093986779,0.1539965272,0.0583494231,0.1598061472,0.0883777291,0.2054149956,-0.0816305056,-0.0537978858,-0.0263806954,-0.0697974712,-0.1480421424,0.0537023842,0.1006409153,-0.0475536808,-0.0261876732,0.0220412854,-0.1708143651,0.2548890412,-0.0033261299,-0.0727461576]],"hackathon_name":"StudentHack V","index":59,"project_description":"Discover the world through mysteryApp logoBeing our first ever app we wanted to combine many functionalities while still making something catchy and innovative.It is both a skill for Alexa that challenges you to recognize some of the world's most iconic places just by a (more or less) vague description and a text message game with the same functionality but which doesn't require and internet connection on the phone. The later was implemented through the Twilio API.We have used a piece of open source code from Krishnaraj Varma (https:\/\/github.com\/krvarma\/Amazon-Echo-and-Twilio) that allowed us to send text messages via Alexa which we have then altered to allows us to start the game on the phone by sending a text message to the target client. We have extended the code further to implement the interactive version of the game so you Alexa can ask you questions and you can respond.Being new to Alexa and especially JavaScript it was difficult at first to make sense of the code and understand it well enough so we can model it to our advantage. Also debugging on AWS was a bit of a pain.We are definitely proud of what we managed to achieve in such a short timeframe given the fact that none of us had done this before.I would say we all learned a great deal not only about JavaScript, Python and how they use libraries to implement awesome functionalities but also about development on AWS.Enigma 2.0 should find better strategies of implementing the question\/answer part using maybe a decision tree structure , maybe make it work for many clients and add many different questions about different locations around the world while still keeping the informative aspect.StudentHack VI worked on the game's Q&A system. Making sure Alexa was saying the right replies and that it was in the right state after each answer from the user. Helped with creating the quizz. And reviwed and validated the code.Rare\u0219 Dinu\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 11, 2017 07:25 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Enigma","project_tags":["javascript","python","twilio","amazon-alexa"],"project_url":"https:\/\/devpost.com\/software\/enigma-ocnjlz","keywords":"alexa,us,game,code,text,many,javascript,challenges,proud,phone,different,enigma,maybe,message,still,make,first,learned,functionalities,world"},{"level_0":60,"hack_vector":[[0.1557139456,-0.1193289757,-0.0277860388,0.043529097,-0.0195731148,0.132852897,0.1945351213,-0.0244259294,-0.0232356042,-0.006009351,0.0044361129,-0.0712274313,0.146968171,-0.0710325912,0.0663638189,0.0130658755,0.2174562812,-0.0035414621,0.045688618,0.1271802187,-0.2529613376,0.0281053409,-0.0467523411,-0.0140951052,0.1211664304,-0.0263166521,-0.040318545,-0.1731605828,-0.0097214989,-0.0984424278,0.0619895346,-0.1214901581,0.0280223042,-0.0936858654,-0.0277683325,-0.0249819122,0.1116585657,-0.1529327631,-0.0634672791,-0.012239268,0.0409082808,-0.1213592812,-0.1477851421,-0.0200185683,0.0607318245,-0.0517493635,0.0097034406,-0.0749953315,-0.0141229248,-0.2043755054,-0.1362318099,0.0195299219,-0.1068980917,0.0005109079,-0.1848971844,0.1657442003,-0.1243098527,-0.0128374416,0.0231364053,-0.0853888094,-0.0645875558,0.03423981,0.0768631622,0.0607471168,0.1082394943,0.0119190142,-0.104763262,-0.130477339,0.0207176115,0.0230180621,0.0771074891,-0.0374871977,0.0199745055,-0.1317155361,0.0092454823,-0.1176502928,0.1867281199,0.0068629859,0.0117817409,-0.1334818453,0.124460727,0.153697893,0.0577614903,0.1517187953,0.1144782901,0.2029123902,-0.0870152116,-0.0291366335,-0.020283049,-0.0706155524,-0.1359138787,0.0642780811,0.1057451665,-0.034662202,0.0108683174,-0.0034840761,-0.1464705467,0.2331335396,0.0142476,-0.0766893327]],"hackathon_name":"StudentHack V","index":60,"project_description":"Finding the most important things without Internet ( the way back home, weather and public transport status)Due to lack of inspiration, we thought about tackling one of the most annoying things that can happen pretty often, especially in the UK - NO MOBILE INTERNET CONNECTION (but access to sms\/regular gsm voice calls)Make some of the simple Internet services available via smsWith the struggle of python\/flask\/heroku and a little help of some APIsAWS - Flask integration and lot of tiredness because of the side challengesWe made it happen in such a short timeWe learned a lot from security challenge (aka. check all the possibilities) and the importance of APIsTake it one step further and bring more of social media to users that don't have internet connectivity, mainly through the use of Twilio's SMS APIStudentHack VConstantin Cezar Petrescu\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:05 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"py-twy","project_tags":["python","twilio","google-maps","openweathermap","flask","heroku"],"project_url":"https:\/\/devpost.com\/software\/py-twy","keywords":"sms,internet,flask,challenges,lot,learned,apis,one,happen,inspiration,gsm,help,voice,heroku,importance,especially,lack,little,integration,connectivity"},{"level_0":61,"hack_vector":[[0.1677479595,-0.1530030668,-0.0045531737,0.0923614129,-0.0480399095,0.1639378518,0.1738072038,-0.0535799377,-0.034912806,-0.0232801847,-0.0148868272,0.0205234252,0.1355217993,-0.0779634491,0.0144280987,0.0540614091,0.2503668666,0.0308556985,0.064086467,0.0791917518,-0.2034574747,0.008366744,-0.051510267,-0.0436940789,0.1764718741,-0.025170356,-0.0737027451,-0.1756936163,0.0176010747,-0.0752807483,0.040524859,-0.1021222621,0.071300067,-0.0536632501,-0.0512522161,0.0048403931,0.1507392824,-0.1047090143,-0.0054831211,0.0802553669,0.0677756965,-0.1414364576,-0.179195106,-0.0291301794,-0.0321129858,-0.0489417538,0.0429287292,-0.0208101701,-0.0148512777,-0.1875117719,-0.0389157534,0.0336452536,-0.1144354343,-0.037596561,-0.1198627129,0.148263514,-0.1601608247,0.06006556,-0.0129910661,0.0436930396,-0.0242500249,0.0375608988,0.0542632081,0.0589758903,0.1396431625,-0.0437390506,-0.1423284113,-0.1679699421,0.0042657936,0.0199834853,0.0727208406,-0.0277797766,-0.0131820114,-0.1501302719,-0.0618625842,-0.0688271001,0.2025728673,0.0303361416,0.0844098851,-0.1451407671,0.1059010848,0.1485364735,0.0100810155,0.1449356675,0.160893783,0.167887181,-0.1330471784,0.0645679906,0.0083196647,-0.1165408269,-0.0782797188,0.108922407,0.0357637592,0.019098172,0.0782573074,-0.0832799077,-0.0664275214,0.1661931276,0.1009132788,-0.0462351441]],"hackathon_name":"StudentHack V","index":61,"project_description":"A robot that fetches beer for youBeer.Fetches it.C# serverside, proccessing on arduinoLOTS.It kinda works.LOTS.A lot of improvements.StudentHack VMathieu Pasquet\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:01 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Lateral","project_tags":["c#","arduino"],"project_url":"https:\/\/devpost.com\/software\/lateral","keywords":"lots,works,kinda,arduino,beer,built,challenges,fetches,improvements,inspiration,lateral,serverside,learned,lot,next,proccessing,proud,ran,accomplishments"},{"level_0":62,"hack_vector":[[0.1609392017,-0.1333844662,-0.0249788184,0.0616537742,-0.030815227,0.1472052783,0.1963010281,-0.0398520492,-0.0201162882,0.0203580651,0.0192554928,-0.0415783487,0.149940446,-0.0606390759,0.0720592067,0.0211607162,0.2063642144,0.0011813481,0.0424835533,0.107180886,-0.2455117255,0.0358802304,-0.0416739509,-0.0253284927,0.1317540556,-0.0324338749,-0.0296782926,-0.20201087,-0.0061523188,-0.0589597598,0.0721362233,-0.1276071072,0.0302631706,-0.0905784816,-0.0424248166,-0.010576793,0.1059443355,-0.1418006271,-0.063531287,0.0160373915,0.0354265906,-0.149262026,-0.149462834,-0.0341548361,0.0352378786,-0.0294797253,0.0135452263,-0.0579715818,-0.0187792964,-0.1921183467,-0.1225348637,-0.0061026365,-0.1234915331,-0.0044119214,-0.1742341369,0.1544030458,-0.132138893,0.0130335158,0.018119676,-0.0567618869,-0.0693269745,0.0243031923,0.0714782774,0.0694897324,0.1141355261,-0.0037761254,-0.107027106,-0.1350158155,0.0313263275,0.0031533856,0.0677641928,-0.0494746715,0.0337619372,-0.1310269833,-0.0097108288,-0.1333996356,0.1970034689,0.0041541518,0.0302770603,-0.1313645095,0.1417662799,0.1653146595,0.0479843803,0.1627726555,0.1195500195,0.2058007866,-0.1002175063,0.006862455,0.0063597257,-0.0817642286,-0.1304780394,0.0796626657,0.0801549852,-0.0342867598,0.0366900563,-0.0201404151,-0.1186998188,0.2136147916,0.0419755019,-0.0632655397]],"hackathon_name":"StudentHack V","index":62,"project_description":"(Previously Swagdoku) Recognizing and solving Sudoku's from image filesPicture of SudokuScaled and Cropped with JavaScript UIRecognized ImageClassified ImageSolved SudokuGraphic of SudokuRecognized graphical SudokuClassified graphical SudokuFinding solutions for Sudoku's online can be cumbersome due to tedious text inputs. We want to make this process easier by recognizing untouched and partially completed Sudoku's from photographs and solving them.Recognizes Sudoku's from photographs and solves them. Implementing web-UI to allow for custom user input.Image recognition and classification in MATLAB. Solution algorithm and logistics in Python.\nUses parts of Chars74K dataset: http:\/\/www.ee.surrey.ac.uk\/CVSSP\/demos\/chars74k\/Classification of numbers in a noisy and non-ideal environment.Functioning solver algorithm. Good performance. Decent recognition. Acceptable classification rate.MATLAB can be faster and more convenient than OpenCV.Improve classifiers with larger and\/or more fitting training data. Improve UI. Make solving more reliable and better in giving feedback on solvability\/mistakes in the Sudoku.StudentHack VThomas Lutzeyer\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 04:55 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Sudokode","project_tags":["matlab","python","javascript","flask"],"project_url":"https:\/\/devpost.com\/software\/swagdoku","keywords":"sudoku,classification,ui,solving,chars,photographs,recognition,matlab,make,algorithm,improve,functioning,environment,faster,feedback,finding,fitting,www,giving,good"},{"level_0":63,"hack_vector":[[0.1480811536,-0.0960833207,-0.0273997784,0.0516002774,-0.0085445065,0.1347732842,0.204036355,-0.0306191798,-0.0390332341,-0.0134134591,0.0216623005,-0.0794175044,0.1523982435,-0.07018736,0.0616602264,-0.0113147292,0.2045664042,-0.0072114239,0.0407179184,0.1327215582,-0.2300327718,0.0490818322,-0.04630927,-0.0003865831,0.1229220852,-0.0288523696,-0.0353846811,-0.1846162975,-0.0446641035,-0.0826389715,0.0805732161,-0.1182782128,0.0296023525,-0.0777135715,-0.0173401739,-0.0158676002,0.1229736656,-0.1318657994,-0.0581015795,-0.0131358104,0.0622605272,-0.1408815086,-0.1542560458,-0.0260548498,0.0620095171,-0.04692325,0.0110442294,-0.0803960413,-0.0284263305,-0.2119508833,-0.1411233693,0.0197629258,-0.1044114083,0.0297468454,-0.2086589783,0.1565254927,-0.137452662,-0.0317223892,0.0345110558,-0.1132866293,-0.075658083,0.0257583521,0.0786249191,0.0354134776,0.1102767959,0.0263326224,-0.0930665955,-0.1180456206,0.0187089704,0.0197228286,0.057196863,-0.0426762998,0.0281885881,-0.1072592959,0.038468983,-0.1137171462,0.1741670966,-0.0127383946,0.0099376626,-0.1255571246,0.1178731024,0.1509298533,0.0585933588,0.1578308344,0.0992508605,0.2014140487,-0.093161121,-0.0547463372,-0.0210626684,-0.0745128915,-0.1382797062,0.0594305359,0.0826238915,-0.0407531671,-0.0127355047,0.0108743068,-0.1657421738,0.2371229231,0.0072403019,-0.0650731325]],"hackathon_name":"StudentHack V","index":63,"project_description":"A smartphone RPG where you have to survive by exploring to gather resources and loot in the real world.When we heard about the travel game challenge, we wanted to make an app that encourages players to go out and explore, but also different from Pokemon Go in some way.It is a game where players have to explore areas of the world they have not explored before to uncover treasures and loot, and survive against hunger, thirst and monsters.We used Google Maps Android SDK to display the area around the player. The sdk has extensive capabilities to draw images and shapes onto the map, which let us implement a \"fog of war\" around the player, and also draw treasures, monsters and other game objects onto the map. The game uses Firebase Database to store game data, and a Java server is used to create game objects and manage other game data.Although Google Maps SDK is powerful, it wasn't designed for gaming. We had to try different ways of drawing to get the results that we wanted. Organizing the development process and making sure we're on the same page was also challenging. All of us ran into various problems that slowed us down, but we somehow managed it in the end.We made some progress.Programming while being sleepy is not a good idea.We want to finish the prototype.StudentHack VI worked on the Android app, Firebase Database design and  Google Maps integration.I worked on creating and managing the server.I worked on the app designOktay Sen\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 04:52 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"A traveling survival RPG","project_tags":["android","firebase","google-maps","java"],"project_url":"https:\/\/devpost.com\/software\/a-traveling-survival-game","keywords":"game,also,sdk,us,ran,maps,explore,players,player,draw,different,onto,objects,data,monsters,map,used,go,treasures,around"},{"level_0":64,"hack_vector":[[0.1510907263,-0.1264166385,-0.0114725241,0.0602190085,-0.0304226372,0.1329503208,0.1919431537,-0.0315017551,-0.0352285318,-0.0293779206,0.0016026928,-0.0381761082,0.1603718251,-0.0738287196,0.0509266146,0.0201919042,0.2265835106,-0.0120409969,0.055611711,0.133036077,-0.2393284887,0.0148261115,-0.0522320159,-0.0130667975,0.1482010931,-0.0303337015,-0.0518921316,-0.1535236835,-0.0066821305,-0.100628756,0.0543482862,-0.1041760594,0.0381319597,-0.053487096,-0.0167748388,-0.0114524886,0.1383468062,-0.1300197542,-0.0331054106,0.0203732904,0.0724214613,-0.1317086816,-0.1637827158,-0.0272088628,0.0208215974,-0.0605133958,0.0210745018,-0.0687473714,-0.0089027006,-0.2045597285,-0.1098742485,0.0317749865,-0.1159579828,0.0038178479,-0.1920584291,0.1624330431,-0.1544449478,0.0030997845,0.0165410973,-0.0578148179,-0.0515578911,0.0415048972,0.0622930415,0.0574559681,0.1273928881,0.0027728849,-0.1106476188,-0.155841276,0.0060833264,0.0118575841,0.0619085133,-0.0353364721,-0.0004332086,-0.1241063476,0.0023114861,-0.0871972218,0.1962379962,0.0037502609,0.0231521651,-0.1402820945,0.1049695387,0.155582577,0.0344368517,0.1449226439,0.1359212995,0.2035860121,-0.1146080941,-0.0107029369,-0.0161688328,-0.0855579153,-0.1156465262,0.0842396542,0.0885238573,-0.0108878333,0.0232377741,-0.0267797187,-0.1420503408,0.2296631038,0.0404263698,-0.0528984554]],"hackathon_name":"StudentHack V","index":64,"project_description":"A catchy simplistic remake of space invadersWe all remember space invaders, so we decided to recreate a small part of itIt is being playedWe used lua and the love2d engine to build it. Photoshop for the imagesOnly one of our team members had actually used lua before that. So we had to learn on the go for the most part of it.That we managed to put together a working version of the gameluaDeeper spaceStudentHack Vdonkorleone2\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 04:51 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Deep space","project_tags":["lua"],"project_url":"https:\/\/devpost.com\/software\/deep-space","keywords":"lua,space,used,part,engine,learn,invaders,inspirations,images,go,game,working,learned,deep,decided,challenges,built,build,actually,deeper"},{"level_0":65,"hack_vector":[[0.1766139567,-0.1408838481,-0.0469736606,0.0549928993,-0.0380767547,0.1521368027,0.2105545998,-0.0408113934,-0.018975364,-0.0147509119,-0.0182927065,-0.0317868069,0.1195655018,-0.069485046,0.0566706546,0.0248094797,0.2238954157,0.0129821263,0.041624926,0.0863504335,-0.2332286984,0.0346712582,-0.027956089,-0.0453251675,0.1161575392,-0.0156019498,-0.0363709256,-0.1701626331,-0.0108689629,-0.0774503574,0.0452046953,-0.1373524815,0.0554155521,-0.0831785351,-0.0397564061,-0.0315238647,0.133446753,-0.1401906908,-0.0620041564,0.0377275161,0.0569793321,-0.1572608501,-0.1554151475,-0.0490052477,0.0441184379,-0.0417996608,0.0283328071,-0.0548359118,-0.0393205099,-0.1944561452,-0.110968031,0.0036788799,-0.1102378294,-0.0356393382,-0.1621075571,0.1464034915,-0.1306697726,0.0017300765,0.0241599064,-0.0329331569,-0.0745742843,0.0211119931,0.0735395104,0.0348713212,0.1151593402,-0.0201236457,-0.1380635947,-0.1260811239,0.0385731645,0.044879131,0.0849318132,-0.0544232503,0.0011637786,-0.1501872689,-0.0245662704,-0.1453282982,0.1720874012,0.0384243242,0.0386129208,-0.1296587139,0.1280579716,0.1659387201,0.0319109559,0.1831798851,0.1230400056,0.1731782705,-0.1102199629,0.0340065882,0.0120223155,-0.1141783595,-0.1203682721,0.0790299475,0.0727756843,-0.0235008486,0.0479829423,-0.0211441647,-0.113554053,0.2121923268,0.0439361893,-0.0498889573]],"hackathon_name":"StudentHack V","index":65,"project_description":"Trump O'Meter is a chrome extension that classifies text on how likely it is to be a Trump's thoughtDonald Trump's tweets resultHillary Clinton's tweets resultMike Pence's tweets resultTrump O'Meter is a project which represents a chrome extension which classifies a piece of text on how likely it is to be a Trump's thought.It uses:Authors: Simeon Kostadinov (University of Birmingham), Yusof Bandar and Pritam Sangani (Manchester Metropolitan University).StudentHack VSimeonKostadinoff\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 04:45 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Trump O'Meter","project_tags":["python","css","html","javascript","flask"],"project_url":"https:\/\/devpost.com\/software\/student-hack-v","keywords":"trump,extension,api,university,chrome,fetch,yusof,meter,messages,manchester,likely,kostadinov,html,hack,converter,css,mp,classifies,build,birmingham"},{"level_0":66,"hack_vector":[[0.1504113227,-0.1056020409,-0.0222470742,0.0469854996,-0.0341725871,0.1403384358,0.1838780344,-0.0296056047,-0.0079855705,-0.0272261258,0.007804086,-0.0474602915,0.1331605464,-0.060188733,0.0501761772,0.0232249703,0.2219806314,0.009219015,0.049751766,0.1264782995,-0.2446771115,0.0136451283,-0.0432079881,-0.0139898183,0.1254233867,-0.0192253031,-0.0352516212,-0.1690974683,-0.0108310897,-0.1054743901,0.0410610884,-0.1106272787,0.0362439752,-0.080404602,0.0000556839,-0.0245583076,0.118199192,-0.1450906545,-0.0688999072,0.0092335893,0.0465468466,-0.1355812997,-0.1509818584,-0.0432272516,0.0371398851,-0.0671599433,0.0122508556,-0.061904408,-0.0142803248,-0.2076805234,-0.1258857548,0.021986112,-0.1081276461,-0.0228009224,-0.1987236589,0.1648868322,-0.1290654391,-0.0093470272,0.0377003662,-0.0759857595,-0.0599902757,0.0220355839,0.0681370124,0.046291817,0.1112078652,0.0144409332,-0.1184699908,-0.1490909606,0.0350284725,0.0236135516,0.0724884346,-0.0477017462,0.0141854668,-0.1285182387,0.0053466917,-0.1184723303,0.1805731058,0.0059957197,0.0252924729,-0.1407417506,0.0992831811,0.1560301185,0.0433452465,0.1705778986,0.1232152283,0.1973069757,-0.1114844382,-0.0203365237,-0.0263823122,-0.0811251774,-0.1225532517,0.0753519684,0.0950664058,-0.0365689695,0.0100472113,-0.0112838531,-0.1517035365,0.245903343,0.0223764274,-0.0773447305]],"hackathon_name":"StudentHack V","index":66,"project_description":"Facial RecognitionWe ran out of time and the only idea that we were left with was this one because of the frequent use of itIt turns on your webcam automatically and it recognizes your face, no matter how people fit in the frameWith Pythn and OpenCVorganizational, communication and lack of techinal experienceHavng something functional to presentNever come unprepared for such an event, do your research ahead of time, be optimistic and never abandon your original idea(s)We want to implement this further into a larger app where it can crop your body out of the image and place you in a tropical\/fascinating new lands so it gives the illusion that you travel throughout the entier globe.Maps as Art | Summer JamPaul Crasmareanu\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 04:50 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"FaceRec","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/facerec-5us702","keywords":"idea,ran,never,time,webcam,functional,fascinating,fit,frame,frequent,globe,gives,face,havng,illusion,image,facerec,experience,inspiration,event"},{"level_0":67,"hack_vector":[[0.1424464583,-0.1358453184,-0.0038660818,0.0749511421,-0.0564860813,0.1621246338,0.1908736825,-0.0475849845,-0.0175243039,-0.029718088,-0.0020415606,0.017063152,0.1249210164,-0.0738849267,0.019173868,0.078261584,0.2730575204,0.0391683877,0.0398122594,0.0981198028,-0.2061961591,0.0060053393,-0.0472930372,-0.0575327389,0.1591858715,-0.0138611458,-0.0601720512,-0.191546753,0.0188656989,-0.0805596635,0.0326358117,-0.1020919085,0.0667747334,-0.0639101639,-0.0325030498,0.0101316459,0.1435869038,-0.1126165614,-0.0021264919,0.076414153,0.04487231,-0.1488070339,-0.1853868067,-0.0415389612,-0.0201951228,-0.0631463677,0.0390192568,-0.0069286553,-0.0205541383,-0.2045597285,-0.0334802456,0.0192615855,-0.0993523821,-0.0650317594,-0.1206057221,0.1592217386,-0.1554776877,0.0538992435,-0.0041760486,0.0231334902,-0.0319140926,0.0292741042,0.0564514883,0.0629622713,0.1336991936,-0.0387512296,-0.1276108772,-0.1741008013,0.0385136232,0.0055786422,0.0598305054,-0.0362316258,-0.0049080583,-0.1437189132,-0.068300426,-0.0838778839,0.1867295504,0.0220462885,0.0900460109,-0.1440743953,0.1101727262,0.1633019447,0.0216306429,0.158212781,0.1449689269,0.1657280624,-0.1424316317,0.0560629219,0.0036940482,-0.1178569794,-0.098106049,0.1016964987,0.0369939208,0.011633805,0.0593331717,-0.0671816841,-0.0725624636,0.1557607204,0.092420809,-0.0517305769]],"hackathon_name":"StudentHack V","index":67,"project_description":"trivia bot for matrixIt's a trivia bot for matrix. Just invite @triviabot:matrix.org to your room and type !start_#number of questions to play (hopefully)StudentHack VRzvnB\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 04:41 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"hackalton-2017","project_tags":["javascript","python"],"project_url":"https:\/\/devpost.com\/software\/hackalton-2017","keywords":"matrix,type,triviabot,trivia,start,room,questions,play,org,number,invite,hopefully,bot"},{"level_0":68,"hack_vector":[[0.1294853836,-0.0960673988,-0.0295882709,0.0209238492,-0.0249778181,0.1140070558,0.1995340735,-0.0084941201,-0.0169852544,-0.0323317423,0.0018108388,-0.0717882738,0.117634438,-0.069953911,0.0507192276,0.0324486904,0.2185368687,0.0015369002,0.0338937342,0.1427072287,-0.2481550127,0.0153173935,-0.0444760323,-0.0302712135,0.0920388997,-0.0248955544,-0.0328315385,-0.1714190245,-0.0213965904,-0.1027904898,0.0348789692,-0.1088065878,0.0290004462,-0.0787737891,-0.0087927673,-0.0170879439,0.1063376367,-0.1461444944,-0.0552008525,0.0123668164,0.033981394,-0.1271409988,-0.1546991467,-0.0466710702,0.0688340589,-0.0953454599,0.0203661565,-0.0726645142,-0.0260771457,-0.221839115,-0.1390791535,0.0077415425,-0.0978434533,-0.0146781476,-0.1949609518,0.1755591184,-0.1267033517,-0.0282220896,0.0279004201,-0.1020130664,-0.0707458779,0.0210285895,0.0671188235,0.0500898063,0.1176969334,0.0154448263,-0.1074792668,-0.1345612258,0.0369835533,0.0158868376,0.0634885505,-0.0602537841,0.0025251955,-0.1145375893,0.0292137526,-0.1253245175,0.1651087105,0.003266389,0.017165022,-0.1399797052,0.1204647124,0.1641399413,0.0558400527,0.1703790873,0.0971480533,0.2059220076,-0.0965181962,-0.0322309956,-0.0238294322,-0.076872699,-0.1482867748,0.055630628,0.0933424756,-0.0469111428,-0.0260182731,0.0003454428,-0.1729358584,0.2303878218,0.0100730117,-0.0784901902]],"hackathon_name":"StudentHack V","index":68,"project_description":"Find whatever you need near you, in cases of low battery and no dataUser requesting \"Nandos in MediaCityUK\"We were in need of a way to find out information quickly in any situation - even being abroad.When the user sends a text to our number in the format of \"[What they need] in [Where they need it]\" (an example being \"Nandos in MediaCityUK\"), they are sent a reply of the nearest one to them. This is useful if one is abroad, where data romaing can be really expensive or when a person simply does not have enough data or battery to get them to their destination.Using the Twilio API and the Google Places API (within the Google Maps API), the context of the text form a request to the GoogleMaps API.None of us knew Python and we managed to not only learn it, but complete a working project in it (yay!).Listen to someone when they say the Python SDK is much easier to set up than the Java SDK in Twilio.When out $25 runs out (thanks for that by the way), who knows?On a serious note, this can grow in several different ways, one can get translations for words if abroad, or simply directions to the place you would like to go to. All we'd have to do is increase the specificity of the text we recieve. For now it is for \"emergency cases\" and we are happy with it.StudentHack VWorked on implementing Twilio and Google Maps APIs using Python for the first time.Tolulope Ogunremi\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 04:39 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Assistio","project_tags":["python","twilio","google-maps"],"project_url":"https:\/\/devpost.com\/software\/assistio","keywords":"api,need,text,one,abroad,data,simply,way,get,python,twilio,sdk,google,go,googlemaps,grow,happy,increase,ways,form"},{"level_0":69,"hack_vector":[[0.162248686,-0.113357015,-0.0332743861,0.0386191271,-0.0225626286,0.1236015633,0.1824712455,-0.015815733,-0.0158630889,-0.0126917148,0.0138566261,-0.0694755539,0.1421381831,-0.0559581183,0.0723237917,-0.0078889746,0.1845032573,-0.0044774967,0.0393860489,0.1350731999,-0.2593522072,0.0038555393,-0.0466572717,-0.0013372836,0.1088563502,-0.0286491234,-0.0249913819,-0.1565432549,-0.0203698371,-0.1095389649,0.058500912,-0.112229377,0.0047370368,-0.0744311586,-0.0112537034,-0.0263297819,0.1051946282,-0.1614336222,-0.0746355727,-0.0136213452,0.0531437024,-0.0996454135,-0.1302274168,-0.0296374727,0.0683678314,-0.0734075531,0.0156324077,-0.0869938284,-0.0216240231,-0.2141359448,-0.1530844718,0.0172126908,-0.1096339971,0.0065481341,-0.213646397,0.1773037165,-0.1127917767,-0.0358451232,0.0288054496,-0.1071614623,-0.0689362735,0.0171613917,0.0689297169,0.0518295839,0.1098544821,0.0290544946,-0.0997234285,-0.1165210456,0.0141135035,0.0166991036,0.0634623915,-0.0346464328,0.0168891493,-0.1135681421,0.0364318863,-0.1157870963,0.17700167,0.0055851135,-0.0131882457,-0.1367945373,0.1059079766,0.1633723229,0.0396275036,0.1543743461,0.1063148752,0.2180824578,-0.0827316269,-0.0532080047,-0.0377947204,-0.0530320257,-0.1355989724,0.0679176971,0.1086217687,-0.0428331159,-0.0251640361,0.0127553744,-0.1637349725,0.2528226078,-0.0068839593,-0.070417881]],"hackathon_name":"StudentHack V","index":69,"project_description":"First task of today: get organized!Add a new entry: task, event, noteWeekly CalendarAdd a new day in weekMonthly CalendarWe are 2 friends who like to take every opportunity, especially volunteering ones, so our student lives pretty lack in free time. Since we do so many things and having also a a job at the same time, we find it hard to keep track of everything that we are supposed to do and sometimes we mess it up.Bullet journaling si a very efficient way of organizing your tasks and it is based on daily, weekly and monthly calendars with tasks marked by different symbols in order to make it easy to differentiate between categories of tasks.We used Ionic 2 and made components for daily tasks and for days. For weekly and monthly calendar we made pages that integrate the tasks.We encountered a very unexpected challenge now at the end, because of an infinite loop, but even if we resolved that, the app was still broken and it took a while until we made it functional again.We are proud of the fact that we have made an useful applications and the ones with whom we talked about it requested to have it after the hackathon and we are seriously thinking about publishing it afterwards.We learned more about Ionic 2 and how Typescript works. Also, we learned more about Google Calendar API.We are thinking about adding  some more interesting features like journal posts, Social Media integration, as well as the posibility to doodle or to add images to your journal.StudentHack VAida Denisa OP\u00ceRLESC\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 03:08 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Journal in my Pocket","project_tags":["html5","css3","typescript"],"project_url":"https:\/\/devpost.com\/software\/journal-in-my-pocket","keywords":"tasks,made,journal,learned,time,proud,ones,monthly,daily,calendar,thinking,ionic,like,also,weekly,every,everything,fact,features,integration"},{"level_0":70,"hack_vector":[[0.1414349675,-0.0959459543,-0.0273561571,0.0435496122,-0.0108543597,0.1256280541,0.2006301433,-0.0218376108,-0.0363150723,-0.0115663707,0.0123596806,-0.0705012605,0.1467766762,-0.0623778217,0.0583275892,-0.0125764571,0.1966852099,-0.0219495147,0.0483834967,0.1422749162,-0.243220374,0.0354412273,-0.035331592,0.0131961685,0.1427235305,-0.0229384694,-0.0332321189,-0.1682209969,-0.0276295692,-0.091185987,0.075631626,-0.1198591664,0.02642316,-0.0703437179,-0.0018781514,-0.0315573178,0.1105305701,-0.1339803338,-0.0598737821,-0.0261012334,0.0611426309,-0.1462343484,-0.1402408481,-0.0391164236,0.0600026995,-0.0411826149,-0.0093636625,-0.0800087005,-0.0118168565,-0.1992116123,-0.1341701299,0.01601124,-0.1099001244,0.0307623819,-0.2223906517,0.1581500769,-0.1486992538,-0.0289444514,0.0370746814,-0.1211329401,-0.0683744401,0.0312944278,0.0692428872,0.0288602654,0.1053842157,0.034620747,-0.103343226,-0.1327619553,0.0280882549,0.0318680219,0.0692734122,-0.0440927185,0.0302968305,-0.109683767,0.0340403803,-0.1233874187,0.1606023163,-0.0187529437,0.0051146653,-0.1242522746,0.0981544703,0.1384924799,0.0632751063,0.1641329378,0.1058031246,0.2056436092,-0.1000445113,-0.0473579317,-0.0295431502,-0.0674843937,-0.1376130581,0.0625203699,0.1064255983,-0.0458549559,-0.0092258444,0.0195511412,-0.1688339859,0.2410255671,0.00616307,-0.0588134751]],"hackathon_name":"StudentHack V","index":70,"project_description":"An endless runner that uses a LEAP Motion to allow you to move obstacles out of the way.the Main Menuthe beginning of the run. Surprises lie ahead.We wanted to embrace the theme of travelling by making a game in which you would be running to catch your plane, dodging usual airport items and people on your way. Due to the extreme lack of  free 3D assets and our lack of expertise with making them, we eventually restricted it to the theme of space, which did open our game to new physics and possibilities.This is a really fun game in which you use your hands, free of any controller, to move obstacles out of your path to the finish line using a LEAP Motion.We used Unity as the main development tool. The LEAP Motion SDK allowed us to implement a pair of virtual hands that would mimic your real hands in the game, using the sensor. Then we made a playing field that would spawn obstacles in waves of increasing speed and complexity, which moves relative to the player, giving the illusion of infinite motion.The main issue was the fact that none of us had used Unity before. The similarities between Java and the C# Unity uses thankfully helped us.\nThe second biggest issue was the act that the newest version of Unity, which we were using, has changed incredibly much of the inheritance relations between components, methods used by objects and the way you interact with them. This made many of the online resources obsolete.We have successfully proven our understanding of object oriented programming by successfully going way beyond our comfort zone (plain Java).For us, this was a great learning experiment of how we can write a program that interacts in a true way with the real world.The game can easily be made to fit any theme : the airport, te beach, mountains etc. The only things standing in the way of this are the prices of good assets but mostly lack of Blender skills to make them on our own.StudentHack VI set up the leap motion controller in Unity, created the scrolling environment and wave spawning procedure. I implemented the scoring algorithm and permanent high score storing procedure.Mihnea Savu\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 04:34 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SpaceTrip","project_tags":["c#","unity","leap-motion"],"project_url":"https:\/\/devpost.com\/software\/spacetrip","keywords":null},{"level_0":71,"hack_vector":[[0.1760163903,-0.1600314081,-0.0141423279,0.0881642997,-0.0376622677,0.1689574569,0.1743445396,-0.0539826266,-0.0144428266,-0.0516890921,-0.0022883692,0.0013266118,0.1451529115,-0.0682518333,0.0161453728,0.0370699391,0.2428722084,0.0312165711,0.0557711944,0.0992884561,-0.2199864835,0.0042671626,-0.0453705154,-0.0374012031,0.1410702765,-0.0310629252,-0.0603156313,-0.1713880897,-0.0152804805,-0.1037346646,0.0476514101,-0.1058373675,0.059116751,-0.053261742,-0.0318775475,-0.0111329034,0.1354110241,-0.1305264384,-0.0274802558,0.0568651594,0.0741676092,-0.1186479107,-0.1661493033,-0.0281137098,-0.0059150821,-0.0707794204,0.0444012359,-0.0336577483,-0.0485516079,-0.215950653,-0.0823580027,0.0349429026,-0.1039781496,-0.0507828034,-0.1442294866,0.1644445062,-0.1344031096,0.0150781572,0.0063980902,0.0006598653,-0.0452524424,0.0299889501,0.0468425974,0.0446635112,0.1260210425,-0.0095164794,-0.1408301741,-0.1444440037,-0.0035681366,0.0159985628,0.0640289411,-0.0269485302,-0.004995998,-0.1494738162,-0.0466221087,-0.0617175102,0.2126087248,0.0267015751,0.0498649776,-0.1548699439,0.1030838266,0.1688650101,-0.0060838056,0.1438952535,0.1443711817,0.187927708,-0.1155697033,0.0206396636,-0.0102753974,-0.1038049757,-0.0993099734,0.1069039255,0.042290166,0.0038348641,0.0330122709,-0.0709138289,-0.1004661396,0.2047550976,0.0698095933,-0.0528922789]],"hackathon_name":"StudentHack V","index":71,"project_description":"A murder mystery gameI want to make a good murder mystery game.I built it in gamemaker.I very quickly realised I don't know gamemakerI like the inventory worksA lot about gamemakerI'll probably keep working on itStudentHack VKatie Paxton-Fear\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 01:29 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Murder in Hackathon Land","project_tags":["gamemaker"],"project_url":"https:\/\/devpost.com\/software\/murder-in-hackathon-land","keywords":"gamemaker,built,murder,works,learned,challenges,game,good,hackathon,inspiration,inventory,keep,know,land,like,working,lot,make,mystery,next"},{"level_0":72,"hack_vector":[[0.1570159346,-0.1054200605,-0.0196415018,0.0457694419,0.0003131142,0.1396645159,0.2113273144,-0.0359717421,-0.0325713195,0.0096616372,0.0230172686,-0.0795494467,0.1454273313,-0.0830163956,0.0714794397,-0.010879484,0.2047438025,-0.0194417406,0.048700884,0.1167648509,-0.2436484545,0.0509125218,-0.0477260686,-0.0029305676,0.129295662,-0.0333441719,-0.0291271247,-0.1876774132,-0.0265911426,-0.0772055015,0.0873485953,-0.1219317466,0.0374318771,-0.0995748118,-0.0358483717,-0.0155441584,0.1120253652,-0.1430363804,-0.0539939143,-0.0217134468,0.0439905375,-0.1393024325,-0.1502543688,-0.0177514888,0.0744120628,-0.0246827919,0.0053536268,-0.086983256,-0.0185851865,-0.2055828422,-0.1445697397,0.0223356597,-0.1150573343,0.0319749899,-0.196908623,0.1473681629,-0.140341714,-0.0174264461,0.0218777582,-0.104627803,-0.0631489679,0.0291927643,0.0929316804,0.0447740667,0.1117174178,0.0108718397,-0.0923715159,-0.1083625257,0.0237557627,0.026094757,0.0683268234,-0.037839707,0.0310025532,-0.1229162067,0.03559912,-0.1214785948,0.1757346392,0.0015533062,0.0056018545,-0.1294106096,0.1351329535,0.1475962847,0.0667825267,0.1574103236,0.0956794322,0.2055604309,-0.0809432417,-0.0389079414,-0.0169640668,-0.0674368218,-0.142814666,0.0548699535,0.0974694565,-0.035428945,-0.0010057705,0.0136036156,-0.141894266,0.2104024887,0.0097020883,-0.0640688241]],"hackathon_name":"StudentHack V","index":72,"project_description":"Guess Go GainWe wanted a fun and easy to use travel related party game application.A two player web based application where both players must guess the allocated point of interest of the other player. This is done through a chat without using any of the words in the place name! Points are added for every correct answer to a scoreboard. We even cleverly educate people by teaching them how to use latitude and longitude!We used javascript; primarily through node.js utilising npm modules such as socket.io, express, nodemon and sass. The Google Places API was used to fetch data about the points of interest.Utilising the Google Places API to integrate well with the Socket.io system that was already in place required some thought.Full implementation of a full chat protocol and deployment of a multi user working application. Also, working efficiently as a team and collaborating well throughout the duration of the project.Choosing technologies that none of us were previously familiar with ensured that we gained the most out of the project; not only learning how one would produce such an app, but also implementation using new technology tools.Accounts API for permanent user leaderboard. Add levels. Also including better checking of answers and even possibility to answer questions using location (by going there) to gain bonus points!StudentHack VI worked on initialising the node project and maintaining the structure, including npm and package.json files. I also worked on sass implementation and front end development including routing and referencing with express.jsUnderlying chat support and keyword filteringMayank Gupta\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:58 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"PlaceIt","project_tags":["node.js","express.js","heroku","sass","google-places","javascript","socket.io"],"project_url":"https:\/\/devpost.com\/software\/placeit-egfu6k","keywords":"points,using,application,also,api,project,working,places,place,even,full,chat,socket,google,implementation,player,answer,use,io,used"},{"level_0":73,"hack_vector":[[0.1625263095,-0.0987423882,-0.0257536694,0.0454347283,-0.0040544798,0.1387182027,0.2122935057,-0.0412481464,-0.0454810821,0.0064637377,0.0125893736,-0.0810872316,0.1429572105,-0.0663083419,0.0613154136,-0.0035083273,0.2006621063,-0.0209078081,0.0467597097,0.1270452291,-0.2346047163,0.0524420626,-0.0443876572,0.003578939,0.1390814632,-0.0277249776,-0.0305849854,-0.1853152961,-0.0417596847,-0.0758074,0.0901339799,-0.1263868809,0.0424741842,-0.0892458856,-0.0320175365,-0.0130580552,0.1196345538,-0.129085511,-0.0491452999,-0.0133455703,0.0560442135,-0.1477167308,-0.1552384943,-0.0294182673,0.0557245128,-0.0410965048,-0.0006026016,-0.0899766609,-0.0110496879,-0.2045092583,-0.1272608787,0.0142989,-0.1147475019,0.0364617668,-0.1993533075,0.1549311131,-0.1668038666,-0.0126794223,0.0216287263,-0.1046950445,-0.0716530606,0.0284249615,0.0802490935,0.0394062065,0.1155298352,0.0116303926,-0.1043223888,-0.1220577136,0.0288155209,0.0295064356,0.0705046058,-0.044498723,0.0229012165,-0.1164912581,0.0354483835,-0.1152712554,0.1789631844,-0.012434856,0.0210118536,-0.1259012669,0.1130963191,0.1368897855,0.0705649555,0.1543124467,0.1047651619,0.1934826672,-0.0953035057,-0.0390940458,-0.0051497812,-0.0767681748,-0.1394551247,0.0597566254,0.0909472853,-0.04159474,-0.0126792714,0.0118690301,-0.1473286003,0.2131309658,0.0172567219,-0.0593383983]],"hackathon_name":"StudentHack V","index":73,"project_description":"Remotes are for the aged, the cranky and the noobsWe are sick of using remote controllers in the era of smartphones.Using the LEAP MOTION SENSOR, we use human gestures to control a Parrot AR Drone.We used the PS_Drone api and the LeapMotion API to program it in pythonCommunication between the LEAP and the computer, and between the computer and the drone is really toughWe accomplished in making the drone fly using basic motions, manipulating the vertical speed, yaw, roll and pitch of the drone's orientation and movements.We learned how to use API effectively, as this is our first hackathon as a team, it was really hard at the beginning, but then we adapted and managed to finished our basic features.This project is a pathway to the future, where drones, cars, and VR can be more adaptive using hand gestures, and even body gestures.StudentHack VI worked on the main Python classes, and with Shashwat and Abhishek on the initial Java classes.I contributed in the algorithmic change of data when it is transferred from the leap motion output to drone input. I looked a bit at MQTT as a possibility for small message exchange and helped in some debugging of the final code.i worked on the hand motion recognition system using leap motion to recognize different hand gestures and calibrate them to be used for inputs to the drone so that the drone can be controlled using those valuesHelped in debugging and raeding the input values of leapMotionkhoa698\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:55 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"LeapMotion Drone","project_tags":["python","leap-motion"],"project_url":"https:\/\/devpost.com\/software\/leapmotion-drone","keywords":"drone,using,api,gestures,leapmotion,learned,leap,basic,computer,use,really,finished,era,even,features,hand,first,future,effectively,hackathon"},{"level_0":74,"hack_vector":[[0.1538623571,-0.1138367876,-0.0115228463,0.0709159821,-0.0351653397,0.1526002735,0.2050000131,-0.0479204766,-0.0374287628,-0.0187986922,0.0065329219,-0.0236324221,0.1466859281,-0.0852995887,0.043004863,0.0345037766,0.2549399436,0.0113134943,0.0347760804,0.1190710142,-0.206320405,0.0253380593,-0.0511863492,-0.03093547,0.157381773,-0.0056363414,-0.046514418,-0.1878955662,-0.0088332007,-0.0714213625,0.0443946458,-0.118824929,0.057040032,-0.0801003575,-0.0478121154,0.0000481444,0.1399920583,-0.1208087057,-0.0318758301,0.0408567376,0.0463860109,-0.1305538416,-0.1741032749,-0.0145437932,0.0219922941,-0.0566387028,0.0267808884,-0.0460353903,-0.028614236,-0.2183353156,-0.0758058205,0.0129001671,-0.1011111438,-0.0192567725,-0.1277326047,0.1629711092,-0.1453220844,0.0260341801,-0.0081707323,-0.0359413363,-0.0410177819,0.0300815236,0.0815289617,0.0565954857,0.1392460912,-0.0318272188,-0.1204465628,-0.1486138254,0.0349541716,0.0121514499,0.0599810667,-0.0319895819,0.0022253119,-0.1393066198,-0.0264982954,-0.0905269161,0.2019197196,0.0105940318,0.0578712672,-0.141606614,0.1371228248,0.1612256765,0.0544755757,0.1520967185,0.1248035207,0.1771807224,-0.1256918758,0.0057328786,0.001209295,-0.1103799865,-0.1394239962,0.076271221,0.0752380192,-0.0001403141,0.0427179709,-0.0467782207,-0.1079966426,0.1988812983,0.0665922314,-0.0612196513]],"hackathon_name":"StudentHack V","index":74,"project_description":"Play pokemon cards against alexaPokemon, Top Trumps and wanting to learn alexaReads out the stats of a randomly generated pokemon cardUsing node.js and the services amazon provides to develop for the alexa so lambda and aws)Getting the alexa to workGetting the alexa to workBetter use of node jsMore cards, battle other peopleStudentHack VLuca\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:58 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Alexa Pokemon Card Generator","project_tags":["node.js","alexa"],"project_url":"https:\/\/devpost.com\/software\/alexa-pokemon-card-generator","keywords":"alexa,pokemon,work,card,getting,node,js,built,better,lambda,challenges,develop,generated,battle,generator,aws,amazon,inspiration,cards,learn"},{"level_0":75,"hack_vector":[[0.1499629468,-0.1046804413,-0.0278405175,0.0504569151,-0.0344808549,0.1429009736,0.1823692173,-0.0366307832,-0.0088938354,-0.0243892781,0.0093928678,-0.054250665,0.1453124285,-0.0643708184,0.0550353527,0.0141618159,0.2236146182,-0.0037042631,0.0372533053,0.1293481886,-0.2407885641,0.0131963016,-0.0471974239,-0.005420954,0.1309668571,-0.0245120786,-0.034539897,-0.163685292,-0.0166685972,-0.0997144952,0.0551584959,-0.1102048457,0.0341799073,-0.074353762,-0.0126311285,-0.017583536,0.1263450831,-0.1436864883,-0.0541404933,0.0056619775,0.0540731102,-0.1232030466,-0.1522625089,-0.0301110335,0.0445054956,-0.0578876473,0.0182177555,-0.0675218999,-0.0196014419,-0.2127531171,-0.1376918405,0.0271038171,-0.108163245,-0.0109944399,-0.1998341084,0.1647263616,-0.1241576672,-0.0153847001,0.0263318308,-0.0801119283,-0.0600848459,0.0177217107,0.0711744055,0.0426958427,0.113925077,0.0103225056,-0.1057820022,-0.1421568096,0.0232684687,0.0229360666,0.0664190799,-0.035726022,0.0151102133,-0.130703181,0.00860117,-0.1045539528,0.1924228668,0.0035859644,0.0053417664,-0.1382678747,0.1055421531,0.1642104238,0.0395019129,0.1646175981,0.1194460094,0.2013056278,-0.1036663428,-0.0248164739,-0.0244918,-0.0784032568,-0.1282594204,0.0739999712,0.0952358246,-0.0239592064,0.0078238454,-0.0099927606,-0.1444729716,0.2535627186,0.0253451969,-0.072299391]],"hackathon_name":"StudentHack V","index":75,"project_description":"The app that attacks your schedule!We're all busy students, we wanted to never forget something important again!You give us all your contact and social media details and set a reminder...we do the restGet ready to be buried in an avalanche of notifications!With lots of coding and little sleepWe had lots of faff with making a server and then wrestled with way too many APIs, but made it in the end!We built a thing that actually works!!APIs be crazyAdd all of the platforms until it's literally impossible to avoid your reminders (unless you sleep through everything)StudentHack VI added support for multiple APIs and was the primary developer of the last minute desktop client \u2282(\u2580\u00af\u2580\u2282).Aleena Baig\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:12 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Bomb Scheduler - Reminder App","project_tags":["python","java"],"project_url":"https:\/\/devpost.com\/software\/bomb-scheduler-remind-app","keywords":"lots,reminder,apis,built,sleep,inspiration,impossible,important,give,get,forget,faff,everything,end,details,crazy,coding,contact,literally,challenges"},{"level_0":76,"hack_vector":[[0.1455261707,-0.0923959985,-0.0114738708,0.0291498918,-0.0115507096,0.1203043982,0.2216587067,-0.0177418906,-0.0372202285,0.0171316992,0.0112215178,-0.0651528314,0.1319581866,-0.0785304382,0.0658474937,0.0171960667,0.1999724954,-0.0206956603,0.0474553034,0.1274877936,-0.2436674386,0.0473951362,-0.0477510579,-0.018687252,0.1207845882,-0.0272423737,-0.030291805,-0.1855904162,-0.0108982297,-0.0847049952,0.0543253943,-0.1164805442,0.0403306894,-0.1035778224,-0.0204799324,-0.0088624181,0.1120688915,-0.1445391476,-0.0623602606,0.0002602421,0.031687554,-0.156701833,-0.1466487497,-0.0346072875,0.0684271157,-0.045755811,0.006863276,-0.0930854455,-0.0089682518,-0.196652323,-0.134844169,0.0148469424,-0.1234133393,0.0216845293,-0.1916520894,0.1570270807,-0.1538134068,-0.0119318971,0.028778499,-0.1034008339,-0.0641582236,0.0265897904,0.0827450305,0.0577194765,0.1223292202,0.0000356723,-0.1094292477,-0.1251307577,0.0402188636,0.0190099068,0.0724196136,-0.059157569,0.0076223281,-0.1265378296,0.0357641466,-0.1434985101,0.1651398391,0.0042832657,0.0231640022,-0.1328788698,0.1339014024,0.1485847384,0.080929026,0.1470860243,0.1037413254,0.1970273703,-0.0943947881,-0.0190029107,-0.0005104922,-0.0845365673,-0.1505704671,0.0490606688,0.0956560224,-0.0371956378,-0.0026166772,0.0092631811,-0.1605781019,0.1966448575,0.0181469657,-0.0581129082]],"hackathon_name":"StudentHack V","index":76,"project_description":"A google chrome browser extension that analyses the tone of comments and posts and blocks those that are harassment.The Addon in UseThe siteHarassment blocker was created as part of the #HackHarassment program, with the intention of preventing or reducing online harassment.The program uses an IBM Watson API designed to analyse the tone of an provided message. By using this API, our program takes messages, posts, and comments online and is able to return a Boolean value based on the different emotional levels of the text - either the post is suitable or it should be blocked. This was achieved by using a Python Flask back-end to carry out this function, and a java-script google chrome extension client-side to allow access in the browser.The primary challenge was accurately identifying the posts that were suitable as opposed to the posts that were classified as harassment and so should be blocked. This was achieved using a comparison of the results given by IBM Watson's Tone analyser, results are given as different levels of emotions in the provided text - for example Fear or Anger. By comparing the positive emotions to the negative ones, we were able to identify which posts were harassment and which were not with a reasonable level of accuracy.In the process we have become experienced with the creation of Google Chrome Extensions as well as the difficulties of identifying negative content online.To futher the harassment blocker project, ideas would include implementation in other browsers, and most importantly, development of our own algorithms to identify harassment rather than reliance on a outside API. This for instance would be extremely interesting to implement using Machine Learning in the future.StudentHack VDavid Chambers\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:56 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Harassment Blocker","project_tags":["html5","css","python","flask","jquery","json"],"project_url":"https:\/\/devpost.com\/software\/harassment-blocker-vj8fsi","keywords":"harassment,using,posts,api,program,online,achieved,blocked,blocker,chrome,different,given,google,ibm,identify,identifying,levels,negative,emotions,would"},{"level_0":77,"hack_vector":[[0.1380122453,-0.0797583982,-0.0282147676,0.0324607007,-0.0192059018,0.1247515082,0.1977142394,-0.0100789256,-0.0362663642,-0.0065064956,0.0178777333,-0.0878436938,0.1332053393,-0.0744125694,0.0707705542,0.0156263672,0.2031886429,-0.0024245395,0.035757076,0.1335427612,-0.2315856218,0.024626391,-0.0541534461,-0.0217488315,0.1051906645,-0.0241154321,-0.0327877812,-0.1872999221,-0.0315090641,-0.0841507837,0.0614639707,-0.1075129211,0.0270071942,-0.0941943079,-0.0165192913,0.0064322306,0.108608298,-0.1402512938,-0.0599121191,0.0091305096,0.0307884645,-0.1298185289,-0.1541984379,-0.0207457952,0.0720412433,-0.0748341978,0.0162948705,-0.0811357498,-0.0185357127,-0.2323285341,-0.1447393447,0.0094316425,-0.0990264639,0.0040789214,-0.1888704747,0.1701953113,-0.1293807626,-0.0087095872,0.0259779636,-0.1156158373,-0.065854162,0.0278947279,0.0696300119,0.0677726492,0.1219790429,0.0081863059,-0.0970616713,-0.1235408261,0.0308894422,-0.0065585384,0.0621578097,-0.0481304973,0.0081244549,-0.1104080305,0.0430421978,-0.1205292568,0.1793778539,-0.0085766288,0.0214903224,-0.1389126778,0.1290837526,0.1588657945,0.0795234814,0.1536384672,0.0921190679,0.2052974254,-0.0900291502,-0.0449565165,-0.0158481281,-0.0781009644,-0.1558005512,0.0479260013,0.0987699851,-0.0510699265,-0.0136640538,0.0116256196,-0.1609109342,0.2291806787,0.0094047226,-0.0796295032]],"hackathon_name":"StudentHack V","index":77,"project_description":"Disrupting the airline industry by finding the cheapest intercontinental flights when traveling abroadWebsite LogoGoogle Maps API Interface DisplayWhen coming to the U.K. from the US for this hackathon, we found it surprisingly difficult to find cheap tickets. We theorized that if you could find the absolute cheapest flight from any city in the US to any city in Europe, you could connect with budget airlines for cheap.Our website takes as input the user location, final destination, and their travel dates to find the main intercontinental flight. Currently, only North America and the EU are implemented.We wrote a program in Python and used Flask (Python Microframework) to interact with and feed data to the skyscanner API, as well as display the information using an integrated Google Maps API. Built simple website using HTML and CSS. This is how we get our price information and overall display.The greatest challenge was figuring out how to get the API to return the information we wanted and how to give it the information it needed to do that. We also had formatting issues with the website we built for the project.We are most proud of creating the Python algorithm that drives this program. No other service does exactly what we do and we're excited to have done something new.We learned how to interface the API for the least amount of data possible and parse it for the desired results. Also learned better uses for Python, like how tuples worked, and how to interface skyscanner API.We hope to implement connecting flights within continents to give users the absolute cheapest price. We would also like to implement the rest of the world and polish up the website.StudentHack Vianaroberts\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:31 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Smart Flights","project_tags":["html","python","flask","css","google-maps"],"project_url":"https:\/\/devpost.com\/software\/smart-flights","keywords":"api,python,website,information,find,learned,also,built,proud,program,price,display,like,absolute,interface,skyscanner,flight,flights,implement,get"},{"level_0":78,"hack_vector":[[0.1378569454,-0.0813695788,-0.040204946,0.0370244235,-0.0194720719,0.1311020255,0.2152049989,-0.0197281595,-0.023104094,-0.013004859,0.0026493873,-0.076534383,0.13776353,-0.0703760684,0.0709231421,-0.0071390904,0.2013424337,-0.0065440014,0.0433501154,0.1337843835,-0.2358251959,0.0386938304,-0.0409114547,-0.0147135137,0.1110109761,-0.0168888588,-0.0342148319,-0.1681423932,-0.0221195128,-0.0857461691,0.0604562424,-0.1350122243,0.0273947641,-0.0790926218,-0.0144148069,-0.007866201,0.1236119568,-0.1358939856,-0.0674185529,-0.005327113,0.0442269742,-0.1454100013,-0.1408656538,-0.0306825954,0.0699966475,-0.0552772582,0.0049096267,-0.085286811,-0.0210744534,-0.205356732,-0.1498056799,0.0128956279,-0.1036423966,0.0149363363,-0.1967019737,0.1522863805,-0.1360116303,-0.0278469175,0.0309926067,-0.1159702614,-0.0814863667,0.0291443523,0.0787418038,0.0451872833,0.1129533276,0.01698808,-0.090418838,-0.1221133396,0.0377881229,0.0245317873,0.0665654913,-0.0554475263,0.0277922787,-0.1176593602,0.0401270129,-0.1316264272,0.1655898839,-0.0016232673,0.0013423492,-0.1351833194,0.120508343,0.1485849768,0.0825253054,0.1648738086,0.0873260573,0.1925052106,-0.0908152983,-0.0468683653,-0.0085789124,-0.0827394202,-0.156111151,0.0428524092,0.1047784984,-0.0466907062,0.0022774898,0.0221736357,-0.1671109349,0.2399565578,-0.0020088325,-0.0724381804]],"hackathon_name":"StudentHack V","index":78,"project_description":"Ringing the bell on the door of success.It was the challenge that most grabbed our attention. We really thought we could learn a lot from completing this project.There is a webcam live feed that takes a snapshot when the door bell rings. It detects the face of person or multiple persons with the click of a button, and sends the detected image to the \"owner\" via email.We started with a raw javascript webcam script that accessed the video tag of HTML5. In order to capture stills we had to change focus to angularJS to create our own webcam tag. In order to get around security problems of writing to disc\nthis webcam module must be hosted on a HTTP Server, we will be using python SimpleHTTPServer. Upon capturing a still, the image is sent to our own python server that we coded to accept a base64 string representation of an image. This is the medium through which we needed to send our image. Our server decodes the image and writes to disc. Our next python script takes said image from file store and uses the openCV API to detect any faces. If multiple faces are detected a separate image file is created for each. Finally we have a script that sends the cropped image to a user(person whose door this is) via email.Never used angularJS and the openCV before so the syntax was challenging to get our heads around at first. We also learned a lot about VirtualBox settings as that presented enough of a challenge on its own!It works! Just to leave the weekend with a working product is awesome.Using APIs. Introduction to writing our own server. Manipulating mail clients. Time management.Implementing face recognition so  that the doorbell recognises friends and relatives and can report who they are. Use the Messenger API instead of sending emails.StudentHack VEfe Can Ulusoy\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:53 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Face Detecting Doorbell","project_tags":["python","javascript","css","html5","angular.js"],"project_url":"https:\/\/devpost.com\/software\/face-detect-doorbell","keywords":"image,server,webcam,python,script,face,opencv,order,person,sends,file,faces,challenge,detect,detected,disc,door,doorbell,email,next"},{"level_0":79,"hack_vector":[[0.1449584216,-0.1010571569,-0.021641897,0.0518341735,-0.0127858855,0.1507765204,0.2049708962,-0.0406129472,-0.0436806045,0.0169872995,0.0137042915,-0.080590874,0.1499696076,-0.0688782111,0.0652226657,-0.0030538165,0.2148897797,0.0064183176,0.0447686054,0.104646489,-0.2254137248,0.0559342839,-0.0561745651,-0.0020889516,0.1478228718,-0.0233191699,-0.0417540111,-0.2041198611,-0.0360026434,-0.0605222173,0.0989015251,-0.1413018554,0.0375235565,-0.0910349339,-0.0400214158,-0.0072997324,0.1181367561,-0.122705698,-0.0400279798,-0.0179437604,0.0416936576,-0.1607563496,-0.168435812,-0.0235662088,0.0395096317,-0.0310984123,-0.0008446289,-0.0714969039,-0.0200667568,-0.195940271,-0.1133170575,0.0127194962,-0.1043111086,0.0319832824,-0.185247615,0.1540289372,-0.1619891971,0.0060097235,0.0133589851,-0.0882717371,-0.0685935244,0.0303595774,0.0811007395,0.0449409299,0.1057384759,0.0111327562,-0.0939742327,-0.1388081461,0.0333639309,0.0254409742,0.0757999122,-0.0468059666,0.0462616868,-0.1182198897,0.0268083867,-0.1170978993,0.1820315868,-0.0075412183,0.0422078222,-0.1178515777,0.1273684949,0.1387687474,0.0887522995,0.1524968594,0.1085919663,0.1967872083,-0.1005082354,-0.0371191278,0.0004801707,-0.0740046278,-0.1271457672,0.064715445,0.0836828947,-0.0526005514,0.0096298009,-0.0009579893,-0.1358079165,0.2185867727,0.0200284161,-0.0762265101]],"hackathon_name":"StudentHack V","index":79,"project_description":"#dj #air #music #vibrationDriven by love for music and innovation, we discovered Ultrahaptics, which makes your DJ experience real.It scans the moves of your hands, computes them and synthesizes an audio file in real time, while sending vibrations to towards each hand.The hand gestures are computed in C++ and the music is modified with a Pure Data.Using CMake, finding a sound editor API, youtube API, connecting C++ to JS.Have a working prototype, learned about Pure Data and used a state-of-the-art device.Ultrahaptics API, JS, Pure Data, more C++.More complex DJ features, hand gestures and different vibrations, based on the qualities of the sound.StudentHack VI worked on the CMake configuration, some of the C++ code for Ultrahaptics,  researched the use of Youtube API.I worked on the C++ code to generate multiple points on the array and also in Pure Data to make changes to the audio files based on the input from the Leap Motion.Ana Gabriela Pandrea\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:53 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Haptics DJ","project_tags":["c++","leap-motion"],"project_url":"https:\/\/devpost.com\/software\/haptic-dj","keywords":"pure,hand,api,dj,data,sound,js,learned,music,real,gestures,vibrations,ultrahaptics,cmake,complex,file,features,experience,editor,art"},{"level_0":80,"hack_vector":[[0.1553006172,-0.0901614651,-0.022819601,0.0402170271,-0.0198118575,0.1368039697,0.2038080692,-0.0232771263,-0.023775056,-0.0094232978,0.0072477479,-0.0653928667,0.1373140365,-0.0534679107,0.0694328099,0.0001188692,0.1935297102,-0.0014095921,0.0434363298,0.1298703104,-0.2397021353,0.0202259459,-0.0433658808,-0.0166749097,0.119612433,-0.0241000857,-0.0305185858,-0.1782750338,-0.0198807344,-0.0972480848,0.069490768,-0.1098920181,0.0253105816,-0.0852109194,-0.0135129718,-0.0119594811,0.1145360842,-0.1428314149,-0.0627986118,0.0033236083,0.0480302013,-0.135276407,-0.1296999753,-0.0333672948,0.0610832646,-0.0562920086,0.006921622,-0.0844005868,-0.0175363347,-0.210227564,-0.1461413801,0.0196921732,-0.1146646142,0.0103565175,-0.1982247382,0.1732775718,-0.1341280788,-0.0159990769,0.0350816846,-0.1042614579,-0.0736720264,0.0158633254,0.070328936,0.0499230362,0.1237231642,0.0181416497,-0.1074886248,-0.1298924834,0.0240323432,0.0196723267,0.0663222298,-0.0471701585,0.0129800877,-0.1243961379,0.0276579093,-0.122917749,0.1806486994,-0.0020172943,0.0047080847,-0.142739445,0.1095343307,0.1492446512,0.0609471463,0.1482969075,0.1111754104,0.2126625776,-0.0896878019,-0.0330345035,-0.0141254431,-0.0701226816,-0.1531274766,0.0612208806,0.0994329527,-0.0410492793,-0.0172849912,0.0148130972,-0.1558668315,0.2364013493,0.0037749265,-0.0649417266]],"hackathon_name":"StudentHack V","index":80,"project_description":"A new vision for ManchesterWe really love Artificial Intelligence and all that comes with it, therefore bettering the world using these as tools was the next obvious stepWe are building the future of baking. Transactions made easy. Just snap a picture of the receiver and we will send them the money for you.We started with the Microsoft Cognitive Services for the Face Detection. With the data we got from that, we would train our Convolutional Neural Network and further use it to recognize both the sender and the receiver.At first, we started with a Deep Neural Network but soon we run into problems. We wanted to use it as it provided us with an easy way to deploy as we did not need to trouble ourselves with the feature selection. We ended up training our Convolutional Neural Network based on the features mined from the Microsoft API.The face recognition runs better than expected at even small training data. We believe the execution will only improve as the sets will grow.We learned that great things can be accomplished just by starting with a dream and 36 hours.Lunch.StudentHack VTrett Stefan-Michael\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:45 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Vision4Manchester","project_tags":["python","flask"],"project_url":"https:\/\/devpost.com\/software\/vision4manchester","keywords":"network,neural,learned,easy,microsoft,face,receiver,use,training,next,data,convolutional,started,first,feature,features,great,future,got,execution"},{"level_0":81,"hack_vector":[[0.1595889628,-0.1308699995,-0.0415936373,0.0616555847,-0.0370620415,0.149317041,0.1920526773,-0.0429408327,-0.014286668,-0.029437108,0.0076921424,-0.0346309729,0.1363122612,-0.0693203807,0.0500228517,0.0220810883,0.2199846804,0.0134324105,0.0320202745,0.1221053004,-0.2400257736,-0.0017549891,-0.0455747023,-0.023533294,0.1369438916,-0.0160118043,-0.0358075202,-0.1734133512,-0.0160033926,-0.0910985991,0.0474324711,-0.1248267069,0.0339994915,-0.062921837,-0.0226625241,-0.0161776729,0.11733675,-0.1469340175,-0.0530434065,0.0391073301,0.0569493286,-0.1214116216,-0.1615435183,-0.0252977349,0.0305411387,-0.0691419616,0.0256794319,-0.0529293269,-0.0408091396,-0.2268975228,-0.1197335348,0.0077952263,-0.097835049,-0.0322921723,-0.1726442873,0.1712450981,-0.1228802428,0.0043046004,0.0031911517,-0.0556062721,-0.0564735569,0.0285810344,0.0604252331,0.0526313893,0.1267004311,0.0033072594,-0.1240135059,-0.1321059763,0.0260420032,0.0105401194,0.0583894812,-0.0343287662,0.0116931405,-0.1355207264,-0.0050013494,-0.0937682763,0.1955725104,0.0128095616,0.0259641465,-0.1399010569,0.128021881,0.1695187241,0.0390390716,0.1666639,0.1170063093,0.2025590688,-0.1048583984,-0.0042321067,-0.0185454804,-0.0795314237,-0.1190165505,0.0795882791,0.0885452479,-0.0293285027,0.020274654,-0.0296908841,-0.1287977248,0.2341833115,0.0333194509,-0.0610409863]],"hackathon_name":"StudentHack V","index":81,"project_description":"Snooping for memes, at the city sight scenesWe like to travel and we're passionate about memesTreasure hunt game in a city where you get rewarded with memes everytime you finish a challengeUsing Vlad's blood, sweat and tearsAll of them... Literally anything you can come acrossThe project is working to a good degree and we learned a lot from itHow to work with google maps API and twilio and javascript and node.js. Learned how to solve problems after running into virtually every problem we could have run intoIt's snooping timeStudentHack VMala Sadik\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:44 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MemeSnooper","project_tags":["firebase","javascript","html5","jquery","twilio"],"project_url":"https:\/\/devpost.com\/software\/memesnooper","keywords":"learned,memes,working,everytime,js,javascript,inspiration,hunt,google,good,get,game,finish,every,literally,degree,could,come,city,challenges"},{"level_0":82,"hack_vector":[[0.1514582932,-0.1569727659,0.001889853,0.0919915363,-0.0465620421,0.1622938365,0.179711476,-0.0547081754,-0.0329584032,-0.0250732359,-0.012721505,0.0405702889,0.1230407357,-0.0751020461,-0.0078312308,0.0752272606,0.2583054006,0.0309386142,0.0456569679,0.0825446472,-0.1988621652,0.0027155571,-0.0431687906,-0.0450375155,0.1897517741,-0.0112193124,-0.0725483075,-0.1794809401,0.0253562704,-0.0815038681,0.0331754759,-0.1029369086,0.0791692212,-0.0445865057,-0.0372235104,0.0071250447,0.1429279298,-0.103445217,0.0088428212,0.0886939168,0.0634939894,-0.1506250799,-0.1783770025,-0.0420836173,-0.0500077344,-0.0464647859,0.0358475745,-0.0014720635,-0.0231707972,-0.1852050424,-0.0150463134,0.035809081,-0.1047204509,-0.0548389778,-0.1069843322,0.1406036317,-0.1694766134,0.064299956,-0.0218029637,0.0506384969,-0.0165735241,0.0446422771,0.0448203199,0.0552503653,0.1429406255,-0.0453672446,-0.15018785,-0.1746084541,0.0155902645,0.0148836728,0.0614978299,-0.029468447,-0.0060909055,-0.1452024877,-0.071363695,-0.0595829226,0.1862782389,0.0249525942,0.0997627378,-0.1464608461,0.1045262143,0.1555370986,0.0085681388,0.1484984457,0.1529375762,0.1611995101,-0.1456934065,0.0802142546,0.0019158856,-0.1166651174,-0.0704506263,0.1184739396,0.0199772213,0.0253084637,0.0780425593,-0.0806420371,-0.06757579,0.1482824683,0.1114896312,-0.0330142863]],"hackathon_name":"StudentHack V","index":82,"project_description":"A University RPG where you survive a year in Computer ScienceInspired by Stick RPGUsing Unity and C#StudentHack VSean Lewis\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:46 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"UNISIM","project_tags":["unity","c#"],"project_url":"https:\/\/devpost.com\/software\/unisim","keywords":"using,unity,unisim,stick,rpg,ran,proud,next,learned,inspired,inspiration,challenges,built,accomplishments"},{"level_0":83,"hack_vector":[[0.1578347683,-0.0752293393,-0.0291562658,0.0524224229,-0.00567031,0.1539665163,0.2140337229,-0.0553072058,-0.0362118334,0.0234492384,0.0279811677,-0.0737776607,0.1392257661,-0.0756989196,0.0706799552,-0.0194175933,0.2016550153,-0.0150387697,0.053038042,0.1119690835,-0.2282567322,0.0522407442,-0.0604406297,-0.000719981,0.1167886257,-0.0261634216,-0.0323616825,-0.1963383257,-0.0344447047,-0.0633910149,0.0888323113,-0.1228010729,0.0429063328,-0.1076755077,-0.0428476706,0.0012933144,0.1188070402,-0.1222057864,-0.0552182533,-0.011090613,0.045739267,-0.1313165575,-0.1528550088,-0.008551986,0.068444483,-0.0260216631,0.0054062959,-0.0908164531,-0.0188585632,-0.2103258222,-0.1377370059,0.0191611852,-0.1134336665,0.045373667,-0.1820909828,0.135524258,-0.1436282545,-0.0057585821,0.0210601501,-0.0958174393,-0.061786104,0.0192273911,0.1034127027,0.0447953753,0.1141663045,-0.0006927347,-0.0907856897,-0.1103430167,0.0285772793,0.0237472318,0.0608410574,-0.0338074453,0.0288361553,-0.1277971119,0.0345889442,-0.127892971,0.1965756416,0.00444568,0.0187897179,-0.1331871152,0.1378006339,0.1393406093,0.0817858949,0.1588512808,0.106567286,0.2062301189,-0.0742312521,-0.0454423316,-0.0026626766,-0.07328026,-0.1551051289,0.0459074043,0.1054228544,-0.039194271,0.0049665156,0.0101905242,-0.1343140602,0.2127789557,0.0131658409,-0.0749588013]],"hackathon_name":"StudentHack V","index":83,"project_description":"Offline computational knowledge engine powered by WolframAlphaThe team started off with the idea of using the Twilio API to implement a bot of sorts, over telephony network (SMS)In its current state, Askii is capable of utilising the WolframAlpha computational knowledge engine to query for you, and respond within a short time (also some limited reddit usage)Python for the majority of manipulation: listener server; reading input, passing to, and receiving from the WolframAlpha API, as well as processing for SMS output\nTwilio for telephony interface\nAndroid app to attempt to use different types of responseQuery responses from WolframAlpha are variable in length, metadata, and content, therefore interpreting these was challenging in its complexity\nHandling of encoded unicode charactersSuccessfully reading and replying to SMS, impossible without the Twilio API (huge help!)\nAndroid app as we had little prior experience with the development environment and implementationWeb is hard!\nHTML parsing, GET & POST requests using Python, SMS handling in Android, git \/ GitHubMultiple web service capable - wikipedia \/ reddit \/ IFFFT\n(as long as you can code it, you can have it!)\nEasy plugin integrationStudentHack VPython interface with WolframAlpha API, parsing and returning query responses; some Android Studio styling and behaviourI worked on the android app development. I learned how it would read a message and send it as a SMS to a phone number.I worked on the Twilio interaction with the server and writing some of the backend for the python server. I learned  lots on using python with GET and POST requests and scraping web pages for content.Joao Maio\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:46 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Askii","project_tags":["python","twilio","java"],"project_url":"https:\/\/devpost.com\/software\/askii2","keywords":"sms,wolframalpha,android,api,twilio,python,telephony,reddit,capable,query,handling,using,askii,app,web,reading,idea,hard,help,html"},{"level_0":84,"hack_vector":[[0.1578365713,-0.113267161,-0.0294845682,0.0468182079,-0.0094240345,0.1391510963,0.1942245513,-0.0327433981,-0.0282760207,-0.0048283241,0.0167691428,-0.0749688447,0.1480050087,-0.0631612614,0.0574760027,-0.0002512478,0.2057878524,-0.0126402359,0.0377555266,0.1262161583,-0.2482459694,0.0340450853,-0.0406623594,0.007108687,0.1386260986,-0.0373167321,-0.0336608589,-0.1831750274,-0.0354760475,-0.0908034593,0.0925589725,-0.1203972623,0.0276029687,-0.076594606,-0.0211130101,-0.0257891007,0.1125074774,-0.137850374,-0.0440963097,-0.0201482829,0.059287522,-0.1324802488,-0.1539535522,-0.0303248018,0.0637024269,-0.0411118008,0.0042658234,-0.0715309232,-0.0211402178,-0.2113658637,-0.1325998604,0.0202345047,-0.1051942259,0.0226411801,-0.2193530947,0.1564725637,-0.1395355463,-0.0285105165,0.029448865,-0.1018561572,-0.0725394115,0.0215939358,0.0725228116,0.033294946,0.1094109043,0.0254687313,-0.0929999202,-0.1243221983,0.0241830666,0.0263860486,0.0689778328,-0.0410270169,0.031783592,-0.1086057872,0.0251683816,-0.1119667888,0.1715937555,-0.0065530543,0.0083924169,-0.1256092191,0.1079268008,0.1527277678,0.0418231003,0.1689836383,0.1064686701,0.2105326205,-0.0941348895,-0.0469366983,-0.0284322444,-0.0672365353,-0.1296946108,0.0680813119,0.0866379365,-0.0384453423,-0.0189706571,0.016983008,-0.1471942812,0.2308157384,0.0139689026,-0.065281406]],"hackathon_name":"StudentHack V","index":84,"project_description":"Intense rolling ball action, avoid death trap,s pick up power ups and try to get highest score!Front ImageMobile games of the same genre. We decided to make one with a twist as it is realistic to make in 2 days.Get through the labyrinth, pick up power ups to modify your journey. Find secrets, dodge traps and get the highest score you can! You control a ball that moves through a maze. Maximise your time to get the best score possible.We built it using unreal engine 4, made models with Maya and visual effects with the aid of photoshop. We seperated the tasks by the three of us. Vasile for map creation, Ezekiel for scripting\/coding and Klavs for animations\/visuals.Bugs in scripting which took a while to fix, making the map interactive and fun and creating a user interface for the game.Creating the base of a game that can be expanded in just 2 days, we added quite a lot of features and are proud of how much we got done.We gained valuable experience in teamwork, using unreal for advanced scripting, advanced particles\/animations and  creating an inuitive map and interface.We hope to add more levels, features and polish up the game in the coming weeks and expand it to have a multiplayer mode. From there we will release it onto PC and Mobile and see how it does.StudentHack VI worked on level's Materials such as walls, balls and many other mesh textures. Have done Animations on level(moving platforms, etc...). Created all of Particle systems that game level includes inside of.I created all the blueprints for the game. So essentially I coded the game and made all the assets work together! I also helped streamline and design the gameplay elements.Vasile Morar\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:47 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Kinetic Dash","project_tags":["photoshop","maya","unreal-engine"],"project_url":"https:\/\/devpost.com\/software\/kinetic-dash","keywords":"scripting,get,creating,game,map,features,days,mobile,proud,built,score,make,unreal,animations,interface,using,advanced,fun,games,fix"},{"level_0":85,"hack_vector":[[0.1645593792,-0.1087131351,-0.0159980748,0.0677799359,-0.0122938398,0.1520454139,0.1948695779,-0.0434283875,-0.0427239053,-0.0106644314,0.0221678298,-0.0583688617,0.1506324559,-0.0727513954,0.0609291755,-0.0044171009,0.2061470896,-0.010467506,0.0556903854,0.1112875715,-0.2292119861,0.0392786972,-0.0499211028,-0.0116642304,0.1292921603,-0.0376816913,-0.039286457,-0.1856207401,-0.0397561193,-0.0820082501,0.0778547451,-0.1092524081,0.04617358,-0.0802874714,-0.0293972511,-0.015113051,0.1327513903,-0.1332567632,-0.0500821508,0.0086508412,0.0718665868,-0.1334935278,-0.1580082774,-0.0139056547,0.0464627706,-0.0313182808,0.0208383389,-0.0832297727,-0.0229961202,-0.2150424719,-0.1222475469,0.0265418831,-0.1099298745,0.0227271672,-0.1982866079,0.1515265554,-0.1449706554,0.0001578431,0.0285768881,-0.0815443471,-0.0625051409,0.0198480487,0.0788674802,0.0379350521,0.1266786903,0.0079339417,-0.1070339456,-0.1275763661,0.0129751563,0.0256303176,0.0692590848,-0.0347240306,0.0102197239,-0.1374912262,0.0167281479,-0.1064485908,0.1975466162,0.0045953458,0.0227926839,-0.1318594962,0.1183990538,0.1513320506,0.0478305854,0.1478272825,0.1220640242,0.1953801364,-0.0985128209,-0.0335228406,-0.0164319929,-0.0885471478,-0.1413830966,0.0742127597,0.0801315159,-0.0345673375,0.0037739279,-0.010280123,-0.133338362,0.2238423973,0.0304797105,-0.0542853177]],"hackathon_name":"StudentHack V","index":85,"project_description":"A capacitive touch keyboardThe belly of the beastWe wanted to make a capacitive touch keyboard.It sends arrow key input to the connected computer as a keyboard.We built it with an Arduino UNO board.Soldering the wires and making them responsive to the capacitive touch. The lack of the Arduinos I\/O was also a challenge to overcome. We were not able to use a transistor mux matrix as we are sending under 10microAmp through the resistor.We finished the thing and it works with our computers.How to use Arduino and more about electrical design.Make a full keyboard not just arrow keys.StudentHack VI worked on the software part.I worked mostly on hardware and design partProposed the concept and did electrical design and building.Kaspar M\u00e4tas\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:43 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Touch Team","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/touch-team","keywords":null},{"level_0":86,"hack_vector":[[0.1439453512,-0.1566940546,0.020597687,0.0986892581,-0.0607690252,0.1543002725,0.1529410183,-0.0549211875,-0.0343410783,-0.031798292,-0.0130611928,0.067305088,0.1207755506,-0.0786892772,-0.0224251579,0.1078299433,0.2616057396,0.0486364737,0.0510595664,0.0656398386,-0.159239307,-0.0076713874,-0.0504992642,-0.0756543651,0.1809964031,-0.0161402281,-0.0861175507,-0.1667558849,0.0495119207,-0.0716415271,0.0033306233,-0.0751221329,0.0907158032,-0.0328686722,-0.0403521433,0.0290420558,0.1484879404,-0.0860782117,0.0261320453,0.1221551821,0.0552869104,-0.1379437894,-0.1846380532,-0.0278804656,-0.0825972632,-0.0521622859,0.0584282242,0.018393442,-0.0093540717,-0.1651863754,0.0149398344,0.040066205,-0.101927869,-0.0837695077,-0.0585635416,0.1356619149,-0.154892236,0.0963527188,-0.024846239,0.0975689217,0.0046735266,0.044655025,0.0328696817,0.0846026465,0.1447818428,-0.0681824386,-0.1442929506,-0.1829123199,0.0038065847,-0.0085726716,0.0600681044,-0.0225498527,-0.0324532352,-0.1458018869,-0.0991688222,-0.0344574079,0.1895291358,0.0314972736,0.1219456196,-0.1395412534,0.0982341394,0.1461500078,-0.0081014261,0.1165540367,0.1640754193,0.129581809,-0.1532788724,0.1070453078,0.0148024429,-0.1303454041,-0.0504287146,0.1202144474,-0.006137982,0.0480769724,0.1082228944,-0.1237637922,-0.0334758498,0.1084536538,0.1389790773,-0.0311917849]],"hackathon_name":"StudentHack V","index":86,"project_description":"******shave his hairStudentHack VHamza Ghani\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:37 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SamiHack","project_tags":["amazon-alexa"],"project_url":"https:\/\/devpost.com\/software\/samihack","keywords":"shave,samihack,ran,proud,next,learned,inspiration,hair,challenges,built,accomplishments"},{"level_0":87,"hack_vector":[[0.1369801015,-0.0838740095,-0.0293461811,0.0563312881,-0.0175896585,0.1480204463,0.2044159919,-0.0456584506,-0.0283781849,-0.0069781039,0.0246148594,-0.0646113753,0.1544879526,-0.0701787174,0.069861792,-0.0075288867,0.2039677799,-0.0105442079,0.0449070521,0.1231424436,-0.2298826724,0.03101491,-0.056444779,-0.0003185801,0.1235801503,-0.0256529469,-0.0346647277,-0.1780046523,-0.0408360735,-0.0704827085,0.0844264776,-0.1147320867,0.0317595564,-0.0757574365,-0.0313786343,-0.0022225115,0.1232189909,-0.1198708788,-0.0439390987,0.0013453747,0.0567331687,-0.1283014119,-0.1549750865,-0.0176945273,0.0584081523,-0.0465047918,0.0121246977,-0.0789137408,-0.0242339335,-0.2179846615,-0.1349695474,0.0099905338,-0.1067693383,0.0279807989,-0.2027036846,0.151527524,-0.1491984874,-0.0108044837,0.021929251,-0.0991123989,-0.0635123178,0.0259645935,0.0862649083,0.0398144796,0.1184215918,0.0119538112,-0.0882561952,-0.1266380697,0.0280702207,0.017634077,0.0475894846,-0.034313973,0.01883935,-0.1133480817,0.0219058339,-0.1031708419,0.1979196519,-0.0063385325,0.0059429109,-0.1435832381,0.119407557,0.157755807,0.0628653616,0.1556637734,0.1075974926,0.2142441422,-0.090145871,-0.041182965,-0.0106202709,-0.078992717,-0.1556720585,0.06074626,0.1032303125,-0.0294110607,-0.0025736764,0.0060137999,-0.1459838599,0.2354937941,0.0210978463,-0.0665072203]],"hackathon_name":"StudentHack V","index":87,"project_description":"Do them a favour, gain a favour.Fiverr was a major inspiration along with the common use of instant messaging for asking for favours.The website allows you to create a favour you wish for someone to do for you in exchange for your time used elsewhere in a one way platform.We used C# and ASP.NET Web Forms to build the entire system and a MySQL database for storing the data.Originally we wanted to use the Google OAuth API but couldn't get it working with our implementation and went with just using an inbuilt login system. We also had issues with the inbuilt SQL Server implementation and went with a standard MySQL server.Learning how to use OAuth within C#\nCreating a functional website in ASP.NETSee above.We want to extend Favourr and add more of the nice to have features to it and ensure that it would work in an online environment with concurrent users.StudentHack VI worked on backend using c#, sql and asp.net. I had little experience with all of these and it was really challenging to arrive at a state where the code works as intendedWorked on the c# to mysql interface and validating forms and filtering queriesGeorge Broadley\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:27 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Favourr","project_tags":["c#","asp.net"],"project_url":"https:\/\/devpost.com\/software\/favourr","keywords":"use,implementation,mysql,favourr,used,net,asp,server,oauth,website,went,inspiration,inbuilt,system,extend,favour,exchange,favours,entire,features"},{"level_0":88,"hack_vector":[[0.1174576655,-0.0878698528,-0.0267708488,0.0260276888,-0.0302886628,0.1345149279,0.1952028573,-0.0152921351,-0.0130618894,-0.0308087766,0.0219685975,-0.0583827049,0.1245417148,-0.055491142,0.0539223887,0.0290026423,0.2417554706,0.0096457629,0.0228549782,0.1319803745,-0.2411626428,0.0287384,-0.0269895382,-0.0273842029,0.1007046923,-0.0174646713,-0.0261280872,-0.1851417273,-0.0091310842,-0.1064193398,0.0549281202,-0.1188175231,0.0290681645,-0.0771802142,0.0121273277,-0.0233187582,0.1128248274,-0.1329807043,-0.0531446598,-0.0052401791,0.0272937641,-0.1552317291,-0.1551710516,-0.0614088625,0.0566610582,-0.0620597601,0.0032618882,-0.0474197529,-0.0245961566,-0.2037720233,-0.1174759641,-0.0005485197,-0.0928953364,-0.0288698114,-0.2002679706,0.1628134251,-0.1265106946,-0.0282003582,0.0535685718,-0.1057090685,-0.0758168623,0.0223246738,0.0781245083,0.0457839631,0.1065848768,0.0227811746,-0.1099713519,-0.1532171369,0.0560977906,0.0348259173,0.0684469491,-0.0562085696,0.0384859852,-0.1119208559,0.0043597692,-0.1523264199,0.1455760151,-0.0066229119,0.0309183653,-0.1289884001,0.1094848216,0.1704378724,0.0495348126,0.1912627965,0.0927510187,0.1776828766,-0.1272855848,-0.0333286747,-0.0406065769,-0.0894380882,-0.1474566311,0.0630571619,0.0754301995,-0.0564633757,-0.0040272456,0.024768047,-0.162616834,0.2243536264,0.0161351655,-0.0790160149]],"hackathon_name":"StudentHack V","index":88,"project_description":"Discover the worldNational Geographic and travelling the world.Odyssey is our method to make our users discover the world in an interactive way, by engaging their colour perception. By choosing one of our 360 colours, you can virtually travel to different places in the world.You could also discover the world by enabling the face recognition system, and the places that you will discover will be\ninfluenced by your current feeling.A different Spotify playlist will be generated for each of our videos from different areas of the world:\nGrand Canyon, Sri Lanka, Gobi Desert, Costa Rica, Dominican Republic, Cocos Islands, Norway, Kuala Lumpur.Is Samsung VR you could actually use our application, to focus\/click on a colour, and then to redirect you to a place that you need to find.Features:For further implementation in Virtual Reality, you could actually use our application, to focus\n3 seconds on a colour, and then to redirect you to a place that you need to find.StudentHack VI worked on the front end part by designing the interface.Madalina Raicu\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:31 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Odyssey","project_tags":["javascript","html","css3","spotify","youtube","google-maps"],"project_url":"https:\/\/devpost.com\/software\/odyssey-fb63zq","keywords":"world,find,different,colour,could,discover,place,focus,emotion,need,odyssey,places,recognition,redirect,playlist,areas,application,actually,use,geographical"},{"level_0":89,"hack_vector":[[0.1510971934,-0.0864569172,-0.0235805269,0.0422192477,-0.0117390025,0.1415919363,0.2196948677,-0.0470564403,-0.028907096,0.0045061545,0.0059666033,-0.0727140978,0.1427002847,-0.0843644515,0.0647091195,-0.0140212271,0.2015567124,-0.0098580541,0.0376441926,0.1296166182,-0.2282377779,0.047536552,-0.0522110164,-0.0059516951,0.1418409497,-0.0192651059,-0.029790746,-0.1829432547,-0.0323391743,-0.0704201162,0.0663668439,-0.1356476992,0.0407741331,-0.0885560364,-0.0400570482,-0.0146084419,0.1242369562,-0.1369027495,-0.0604428463,-0.0090989936,0.0498222411,-0.1397210956,-0.1400602013,-0.0167739298,0.0658929795,-0.0354229733,0.0123994723,-0.0878014043,-0.0318399556,-0.2044741362,-0.1464729458,0.0268082097,-0.1133219525,0.0377934761,-0.1786766052,0.1593278348,-0.1399772167,-0.0128428135,-0.0009860311,-0.1007105038,-0.0628826171,0.0143309366,0.0847550258,0.035861209,0.1183596626,0.0058050198,-0.0935996249,-0.1118897349,0.0289074145,0.0293919872,0.0622422881,-0.0438969173,0.0320504308,-0.129385069,0.0495856293,-0.1064500734,0.1776046455,0.0002174488,0.0013565237,-0.1301199049,0.1380642653,0.1460863203,0.0877428278,0.1537377089,0.0979149118,0.2033521533,-0.0821704417,-0.0443854742,0.0014268692,-0.0660689548,-0.1491472572,0.0449298695,0.1023480073,-0.0332677551,-0.0007182737,0.0005697862,-0.1491540074,0.2314795405,0.0046224259,-0.0700735301]],"hackathon_name":"StudentHack V","index":89,"project_description":"Explore your surroundings, be the first to snap all the objects!We loved the idea of using image recognition to improve customers experience, although the technology is not quite there yet so we made a travel-inspired image recognition game.You play in small groups of friends either in the same location or in different places. You are given 5 things to take pictures of, within one minute. The first one to get them all wins!The front end is an Android app. It communicates via socket.io to a node.js server that keeps track of the session and sync. The images are recognised using Google Cloud Vision API's.Integrating the API with the Android was a challenge. We tried multiple APIs, settling with Google's for precision and generous trial plan. Multithreading caused some weird issues.\nAddressing heavily nested objects took several attempts in node.js.Having no experience with node.js and socket.io we were surprised what we managed to achieve.\nWe were surprised to obtain a rather polished app after going through various designs.Node.js and socket.io\nImage recognition API's behave weirdly quite often. (e.g. sometimes pens are recognised as shotguns)The server now runs locally but we are planning to have it available on the cloud with multi-server support.\nMore game modes e.g. random group creation.StudentHack VWorked on the backend with Greg.Worked on the backend in node.js creating the server and using web sockets for a connection between the clients and the server.David Morpurgo\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:29 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SnapIt!","project_tags":["socket.io","java","android","android-studio","node.js","javascript"],"project_url":"https:\/\/devpost.com\/software\/snapit","keywords":"js,node,recognition,api,server,io,socket,image,surprised,cloud,game,recognised,experience,google,one,quite,app,android,using,improve"},{"level_0":90,"hack_vector":[[0.1541817635,-0.0897475854,-0.029146757,0.0539018176,-0.0157085769,0.1470464766,0.1903979778,-0.0352371596,-0.0177083462,-0.0194775853,0.0103063006,-0.0829969719,0.1416904628,-0.0688936636,0.0641384348,0.0066953376,0.2042605877,-0.0007441008,0.0492390282,0.1227551401,-0.2339309901,0.0375670008,-0.0519439131,-0.0092118308,0.1163126603,-0.0301070027,-0.0359927639,-0.179580763,-0.0462225601,-0.0851735026,0.0683622733,-0.1177497059,0.0453829691,-0.0872212574,-0.0167210381,-0.0166912694,0.1270519346,-0.1371429563,-0.0547347963,-0.0040588202,0.0599913225,-0.1391272396,-0.1633801013,-0.0249321368,0.058271125,-0.0463344306,0.016156368,-0.0870293006,-0.0295070801,-0.2166893631,-0.1441306621,0.0215753708,-0.1022231504,0.0108828899,-0.2084365934,0.1561361849,-0.1350956857,-0.0197052937,0.036681436,-0.0984279737,-0.074360244,0.0140659697,0.0793016255,0.0303862505,0.1105705872,0.0192840546,-0.0952551365,-0.1297195852,0.024363853,0.0313512385,0.077563934,-0.0493539944,0.0129154315,-0.1294638515,0.0291137472,-0.1059664041,0.1856809109,0.0021207763,0.0040091337,-0.1316815913,0.1053247526,0.1534217,0.0626103729,0.1548025906,0.1010193899,0.192475155,-0.0903124437,-0.0440329053,-0.009053112,-0.0839504525,-0.1416107863,0.0585533939,0.0870512351,-0.0414294563,-0.0075059691,0.0035065762,-0.1426232904,0.2399846166,0.0139186848,-0.0714541525]],"hackathon_name":"StudentHack V","index":90,"project_description":"A bell with a twistThe TeamWe were inspired by the presentation of the CakeSolutions guy (Alex i think).It is a bell with a camera linked to it which detects your face and will do a specific action depending if it detects a person or not, and it send an email with a picture of the person in front of the door.Using pycharm and the opencv library.Finding a way to respons to your emotion, which we did not implement at the end.We are proud that most of the things we wanted to do we managed to achieve.Image processing, python, and how to work together as a team.Transforming it into a product which will be in every household :) .StudentHack VI worked on the face detection algorithm,and came up with the idea for the project. At first I tried to make it work with Machine learning but in the end gave up on the idea.I worked on the gif's, audio computer responses, voice modulation, sound modifications, a bit of making the responsive faces. Looking around my colleagues on what they were hacking.I make animation,mail send code ,algorithm,integration of the final code.I and Bogdan worked in image processing for face detection and we try to find human emotion, but this part with human emotions doesn't worked. We worked togheter for make an email send code on SMTP using gmail servers.Gantu Bogdan\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:28 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Future Bell","project_tags":["python","opencv","pygame"],"project_url":"https:\/\/devpost.com\/software\/future-bell-6p7w4h","keywords":"proud,bell,person,detects,work,image,household,guy,future,front,finding,face,every,end,email,emotion,inspiration,door,depending,challenges"},{"level_0":91,"hack_vector":[[0.1332590282,-0.1192370951,-0.0203926172,0.0344525762,-0.0350585915,0.137577951,0.2175077647,-0.0340681933,-0.011718954,-0.0098869093,0.0192360487,-0.0297272094,0.1338716596,-0.0769132152,0.0480755791,0.047710523,0.2480303943,0.0068410882,0.0378227942,0.1235120669,-0.2396940142,0.0271426328,-0.0443890207,-0.0432896055,0.1126054525,-0.0166118294,-0.0413857736,-0.1849104762,0.009424258,-0.1070297137,0.0458479524,-0.1158764735,0.0433996506,-0.0888439044,-0.0094426135,-0.0145797953,0.1161129475,-0.1371164918,-0.042576991,0.0090015186,0.0328506418,-0.1423081309,-0.159389779,-0.0444346592,0.0511504039,-0.0533889867,0.0156981908,-0.0524036922,-0.0300374515,-0.2032582164,-0.1120829508,0.0129968449,-0.103123799,-0.0446212366,-0.1727380753,0.1551044881,-0.1317582726,-0.0158005767,0.0318166763,-0.0623496734,-0.0477448255,0.0282039996,0.0839603543,0.0618988015,0.1119286567,-0.0033878882,-0.1159701273,-0.1406943649,0.0461383015,0.0196103957,0.063360326,-0.0494668111,0.0157954749,-0.1340908557,-0.0208181813,-0.1342956424,0.166636467,0.0088474266,0.0313040465,-0.1500596851,0.131727621,0.1683676541,0.0482183509,0.1803208292,0.1077405587,0.1966994256,-0.1104007065,-0.0036720894,-0.0176060814,-0.0934636369,-0.1423095316,0.0651214644,0.082279399,-0.0180235747,0.0146638388,-0.0111896992,-0.14589113,0.1940080076,0.032090541,-0.0743844807]],"hackathon_name":"StudentHack V","index":91,"project_description":"ChatBot which allows to report disrespectful behaviour and check if someone else has a history of such behaviour.LifeIt's a way to keep track of fake profiles, people, who use social media as a harassment platform or in general have questionable intents. It is a chat bot which allows people to report such behaviour along with some details and the offenders name or phone number. Later this can be accessed by looking up one of the latter, allowing people to check if their new facebook friend or aquaitance has a history of disrespectful behaviour.Uses the recast.ai API and node.jsNot knowing node.js at the beginning, difficulties with building conversation flow.\/\/TODO facebook (friendlist) integrationStudentHack Vlegrigonis\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:26 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"CreepBot","project_tags":["javascript","node.js","postgresql","heroku"],"project_url":"https:\/\/devpost.com\/software\/messenger-bot","keywords":"people,js,behaviour,facebook,node,way,conversation,general,future,friendlist,friend,flow,fake,disrespectful,difficulties,details,chat,check,history,challenges"},{"level_0":92,"hack_vector":[[0.1584792286,-0.1518190205,-0.0182486121,0.0443962142,-0.0356296711,0.1211727485,0.1973772347,-0.0233313348,-0.040602535,0.0089271469,0.004923746,-0.0158715472,0.1402797252,-0.061443232,0.0544523895,0.0348336287,0.2351685464,0.0178875346,0.0367143713,0.1100335121,-0.245470807,0.0178502817,-0.0392983966,-0.0362984836,0.1336101592,-0.0219816901,-0.0457262732,-0.19068183,0.0204037763,-0.1006144062,0.0539541021,-0.1278488636,0.0293450616,-0.0792867765,-0.0282015447,-0.0161344036,0.1026031375,-0.1473804265,-0.0453379974,0.030151343,0.0237624776,-0.145925805,-0.1635736078,-0.0413361043,0.014185085,-0.0716993958,0.0188571103,-0.0547467321,-0.0175464079,-0.1963728666,-0.0885050893,0.0027616515,-0.1103585958,-0.0415288657,-0.1596066803,0.178461954,-0.1428551078,0.0204286687,0.009027794,-0.0358457267,-0.0479976423,0.0436857231,0.0593595095,0.0856142342,0.1163238212,-0.0141278477,-0.1377840638,-0.1340349466,0.0305579584,0.0017034388,0.0741835833,-0.0405439921,0.0091750994,-0.1261567175,-0.0133495741,-0.1353714913,0.1793275177,0.0155061595,0.0678484589,-0.1385526955,0.1393162608,0.1650930941,0.0406345651,0.1586308181,0.1382675022,0.1937690377,-0.1290891767,0.0137811229,-0.011213473,-0.091702193,-0.1076352224,0.0802580267,0.0781925619,-0.0230484549,0.0318405852,-0.0321091115,-0.1412237287,0.1731808931,0.0432676002,-0.0647223815]],"hackathon_name":"StudentHack V","index":92,"project_description":"UK by crime rates and treatment facillitiesThe game is about a character travelling the UK trying to visit as many cities as possible in order to gathe rpoint. but crime rates in different cities are decreasing its health stats. So the character must pay for healthcare.Big Data Challenge - Used data.gov.uk for information like hospitals locations and police.gov.uk to get info about crime rates n different cities across the UK.Gaming Challenge - Our project is a travel themed gameStudentHack VVlad Berianu\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:24 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"UK Big Data Travel Game","project_tags":["three.js","javascript"],"project_url":"https:\/\/devpost.com\/software\/uk-big-data-travel-game","keywords":"uk,cities,data,challenge,character,crime,rates,gov,different,game,gathe,healthcare,health,get,visit,gaming,decreasing,info,challenges,big"},{"level_0":93,"hack_vector":[[0.1451589614,-0.0912905112,-0.031669043,0.0410777517,-0.0142326057,0.1357055008,0.1895164251,-0.0349150114,-0.0104907611,-0.0176355056,0.0229456816,-0.0811873972,0.146306172,-0.0728644207,0.0633235127,-0.0003153873,0.2094411552,-0.0087003335,0.0477998666,0.1215645,-0.241756022,0.0336905122,-0.0438982584,-0.0070911692,0.0955576599,-0.0369763188,-0.0276357643,-0.1741727293,-0.0341336913,-0.0932673067,0.0731473491,-0.1132590771,0.0328367464,-0.0857147127,-0.0201758612,-0.0166624598,0.118655026,-0.1416570395,-0.0546461344,-0.011249695,0.0488582291,-0.1177912205,-0.1577836722,-0.0252390597,0.0733888,-0.0579074249,0.0177868716,-0.0864801258,-0.0253233369,-0.2186667919,-0.1594445407,0.0166933183,-0.1051916182,0.0059106429,-0.2164076567,0.1511773467,-0.1262012422,-0.0391982608,0.043380376,-0.1058242172,-0.0734885558,0.0143604912,0.0906526893,0.0396376252,0.1069203243,0.0217268299,-0.0821077228,-0.1164302379,0.027806446,0.0251868218,0.066144377,-0.0474956259,0.0155819757,-0.1148777679,0.0329820029,-0.1179823503,0.1844758093,0.0071913311,-0.0040364675,-0.1373241097,0.1173603982,0.1605604738,0.0444818586,0.1674441397,0.0973114222,0.204201594,-0.0844195485,-0.052137088,-0.0252250526,-0.0737713873,-0.1443220824,0.0528532043,0.0928609222,-0.0365965739,-0.021252824,0.0106527833,-0.1547781825,0.2306918353,0.009727967,-0.07985764]],"hackathon_name":"StudentHack V","index":93,"project_description":"Tinder, but for friendsUniversity can be very lonely, especially for shy, first-year students. Sometimes, all you want is somebody to hang out with for lunch, for a beer, for a movie, maybe for the length of a flight. You're not alone in the struggle. Many other people may be looking for the very same thing. How about we bring two lonely kids together for coffee and conversation?\nAskOut aims to do just that: facilitate contact and the inner courage in everybody to ask out a complete stranger.AskOut is a web-app, pinpointing all users in close proximity to each other and allowing them to talk to each other and organise a meet-up. It displays interests and topics of discussion, so that, if small talk fails, you can always bring out the big questions and see yourself fall into an enthralling conversation on politics, religion and whether or not Mary Poppins is a trickster God.\nYou have to register an account and enter short edgy bits of information about yourself, that could start a conversation and keep it going. You can login, logout, update your information.\nCheck it out HERE: 80a3e5ca.ngrok.io (Temporary Link)The design is meant to be minimalist and easy to navigate, as well as robust across platforms and browser sizes. All forms works and are meant to improve the user experience. A mixture of Web-design and PHP was required for the final result.Initial plan included Cordova and Twilio integration, but it proved impossible to implement on time.A beautiful website and having pushed my team in a direction with a lot of potential. The PHP Nikita wrote is quite impressive and I was thrilled to have worked with him and Ilias on this idea.Teamwork, team management, advanced CSS and forms.Improved PHP, ability to add personal pictures, Twilio implementation for chats, turning everything into an app, perhaps even pushing it on Google App Store.StudentHack VI came up with the idea, identified works areas, delegated tasks and ultimately was responsible with everything front-end. Ultimately, I tried to turn our website into a mobile app using Cordova, but I didn't have enough time to properly learn how it works.I worked on back end - implemented functionality for chat, getting and setting data, provided Ajax queries to access and modify data in database on the server, implemented getter for current location of user. Tried adding additional \"user\" chat using twilio api along with Ilias.I made the backbone of the webpage implementing HTML code to make the work easier for Ruxandra since she is a designer and has more experience: I am only the implementer.After that, I worked with Twilio API and tried to implement the feature when if someone checks in near as well, all others will receive SMS notification. Unfortunately, it couldn't work, so I united with Nikita to implement online chat.Ruxandra Maria Mindru\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:22 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AskOut","project_tags":["javascript","java","css","html","php"],"project_url":"https:\/\/devpost.com\/software\/askout-fl9xgv","keywords":"askout,app,php,conversation,lonely,design,twilio,forms,information,bring,web,team,talk,meant,flight,god,going,first,hang,final"},{"level_0":94,"hack_vector":[[0.141183123,-0.0959161744,-0.02972297,0.0316283181,-0.0157259777,0.1257941127,0.1893788278,-0.018407695,-0.0318436027,-0.0139176324,0.0171089564,-0.0732098967,0.1397661418,-0.0676523969,0.0573248342,0.0142973876,0.2168751806,-0.0042374232,0.0369075462,0.1392876208,-0.250064075,0.0208501276,-0.0400069803,-0.0090346904,0.105473645,-0.0267064944,-0.035354875,-0.1674414426,-0.0131426184,-0.1052810922,0.0618892387,-0.11474666,0.0227223057,-0.071724318,-0.0052364636,-0.0229024254,0.1125242487,-0.1472788751,-0.0551119074,-0.0182950292,0.0405911021,-0.1248384491,-0.153661564,-0.0294199791,0.0683246627,-0.0665700436,0.0061960118,-0.0783163235,-0.0064373096,-0.2193862498,-0.1361318231,0.0222063828,-0.1005581394,-0.0013862612,-0.2109552026,0.1679439992,-0.1267373115,-0.0271908995,0.0376757197,-0.1092571914,-0.0607100278,0.0322602428,0.0766746029,0.0561668389,0.1097387448,0.0228419881,-0.0929762572,-0.132134676,0.0324642658,0.0222474746,0.0716555566,-0.0348569341,0.0221036989,-0.1122603714,0.0283560716,-0.1260245144,0.1653807163,-0.0051259175,0.0115637789,-0.126263231,0.115126133,0.1564839184,0.0527810194,0.1663049757,0.1044395342,0.1996009648,-0.0972509235,-0.0527219921,-0.0472598784,-0.0672160983,-0.1421365589,0.0584953278,0.0969279632,-0.0544444248,-0.0155757964,0.0218020305,-0.1689823121,0.2364882082,0.0075485422,-0.0811733007]],"hackathon_name":"StudentHack V","index":94,"project_description":"Virtual guideWe wanted to make it easier to people to gather together and explore different cities' culture and sights.Imagine you are an English person who goes to the Bahamas for the first time ever in you life. You want to socialize and do sightseeing, understand something new about the culture of that distant place. If you are a user of our app you are given a number of suggested routes in a menu and you pick one. Each route has a starting point so all the users who want to visit the same tour should gather together at the starting point at predefined time, meet with each other and visit all the places from the picked option. The role of Twilio is to make sure that all the users are notified about the incoming beginning of the gathering. All the users are being sent an smses reminding them about the gathering. Our virtual guide using google maps' functionality shows the group around an array of landmarks and sights in general.We used android java, android studio and SQLiteVarious debugging problems, the difficulty of binding a database to an android app, and 'querrying' it in java. Database architectural issues.The teamwork was top quality and even at the very early stages of the day we were concentrated and devoted entirely on the project.We gained more complete understanding of how databases work, how to build and structure them. We understood a lot about how to the view system of Android, resource loading and debugging.We may continue its development.StudentHack VKonstantin Dimitrov\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 05:19 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Tour Team","project_tags":["android-studio","sqlite","java"],"project_url":"https:\/\/devpost.com\/software\/tourteam","keywords":"android,users,make,together,sights,gather,gathering,debugging,starting,point,database,culture,time,java,want,visit,app,issues,loading,explore"},{"level_0":95,"hack_vector":[[0.1491654813,-0.0861572102,-0.0396574363,0.0368188955,-0.0107505424,0.1272126734,0.1926368177,-0.0270076972,-0.0237452257,-0.0169222374,0.0110153425,-0.0888525322,0.1455687732,-0.0617193095,0.067284137,-0.0135769714,0.195410043,-0.0101255225,0.0352948718,0.1378058791,-0.2376514077,0.0275285542,-0.0440949276,0.0091369804,0.1096834987,-0.0211350098,-0.0260851961,-0.1631189287,-0.0426861085,-0.0911627263,0.0707369,-0.1199348047,0.0238743164,-0.0803917125,-0.0173785258,-0.0245616455,0.1134820953,-0.1393497139,-0.0632205307,-0.0192924514,0.0568727069,-0.118839711,-0.1469936967,-0.0286821127,0.0812974423,-0.0585435145,0.0097477203,-0.087393254,-0.0326839276,-0.2173494697,-0.1537632793,0.0107349735,-0.1016215906,0.0212292578,-0.2081401795,0.163676545,-0.1231648326,-0.0466322415,0.0377281606,-0.1219337806,-0.0805065706,0.017202599,0.0795050561,0.0252696723,0.1070956141,0.027042212,-0.0943085477,-0.1160001084,0.0269643888,0.0288653541,0.0648648292,-0.0421499349,0.0211353879,-0.1104394346,0.038593661,-0.1193630397,0.1761133671,-0.0034202796,-0.0064255856,-0.1265211701,0.1093986779,0.1539965272,0.0583494231,0.1598061472,0.0883777291,0.2054149956,-0.0816305056,-0.0537978858,-0.0263806954,-0.0697974712,-0.1480421424,0.0537023842,0.1006409153,-0.0475536808,-0.0261876732,0.0220412854,-0.1708143651,0.2548890412,-0.0033261299,-0.0727461576]],"hackathon_name":"StudentHack V","index":95,"project_description":"Discover the world through mysteryApp logoBeing our first ever app we wanted to combine many functionalities while still making something catchy and innovative.It is both a skill for Alexa that challenges you to recognize some of the world's most iconic places just by a (more or less) vague description and a text message game with the same functionality but which doesn't require and internet connection on the phone. The later was implemented through the Twilio API.We have used a piece of open source code from Krishnaraj Varma (https:\/\/github.com\/krvarma\/Amazon-Echo-and-Twilio) that allowed us to send text messages via Alexa which we have then altered to allows us to start the game on the phone by sending a text message to the target client. We have extended the code further to implement the interactive version of the game so you Alexa can ask you questions and you can respond.Being new to Alexa and especially JavaScript it was difficult at first to make sense of the code and understand it well enough so we can model it to our advantage. Also debugging on AWS was a bit of a pain.We are definitely proud of what we managed to achieve in such a short timeframe given the fact that none of us had done this before.I would say we all learned a great deal not only about JavaScript, Python and how they use libraries to implement awesome functionalities but also about development on AWS.Enigma 2.0 should find better strategies of implementing the question\/answer part using maybe a decision tree structure , maybe make it work for many clients and add many different questions about different locations around the world while still keeping the informative aspect.StudentHack VI worked on the game's Q&A system. Making sure Alexa was saying the right replies and that it was in the right state after each answer from the user. Helped with creating the quizz. And reviwed and validated the code.Rare\u0219 Dinu\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 11, 2017 07:25 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Enigma","project_tags":["javascript","python","twilio","amazon-alexa"],"project_url":"https:\/\/devpost.com\/software\/enigma-ocnjlz","keywords":"alexa,us,game,code,text,many,javascript,challenges,proud,phone,different,enigma,maybe,message,still,make,first,learned,functionalities,world"},{"level_0":96,"hack_vector":[[0.1601941139,-0.1135572344,-0.0022322608,0.0791180953,-0.0319803879,0.1601376683,0.1994974911,-0.0529568195,-0.0383699313,-0.0057613915,-0.0064671622,-0.0204500873,0.1342489421,-0.0904758051,0.0202627629,0.0488437116,0.2315359265,0.0098100239,0.0568948686,0.0985627398,-0.2097617239,0.0206435863,-0.0677845031,-0.0242560618,0.1667134911,-0.0117439143,-0.0644472316,-0.1751150191,-0.0027134877,-0.0686582997,0.0454187132,-0.1067863926,0.0689404681,-0.0713132396,-0.0496288612,0.0184070244,0.1510759294,-0.1185554489,-0.0116239293,0.0527563803,0.0585738756,-0.145978719,-0.178319931,-0.0169774015,-0.0009010424,-0.0524660759,0.02869571,-0.0482638776,-0.0112179564,-0.2041735053,-0.0717092827,0.0415182784,-0.1166219115,0.0029762096,-0.1388233453,0.1511635929,-0.178790763,0.0488890931,-0.0210754387,-0.0118230805,-0.0262327772,0.0392598845,0.0744920075,0.0571934208,0.1479274929,-0.0397797599,-0.1248322874,-0.154173255,0.0151433591,0.0179950725,0.0652538016,-0.028089717,-0.0124404132,-0.149770543,-0.018146418,-0.0629460439,0.2085041851,0.0223284233,0.0570501164,-0.1568892598,0.1170923635,0.1506501138,0.0559487194,0.1355459243,0.1399095207,0.1863012016,-0.1180927977,0.0248626973,0.0158104002,-0.1082350463,-0.1172450185,0.0907821804,0.0688662976,0.0092415856,0.0503747538,-0.0570723228,-0.0939811543,0.1900526583,0.0785158202,-0.0507608242]],"hackathon_name":"BullHacks","index":96,"project_description":"An implementation of a thesaurus in JavaScript and Python using the algolia API and Flask for the backend.An implementation of a thesaurus in Python using the algolia API.\nNone of it really works right now, but we tried.BullHacksJennifer  Myers\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 07:50 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"DoYouThinkHeSaurus","project_tags":["php","html","python","css","javascript"],"project_url":"https:\/\/devpost.com\/software\/doyouthinkhesaurus","keywords":"works,using,tried,thesaurus,right,really,python,none,implementation,doyouthinkhesaurus,api,algolia"},{"level_0":97,"hack_vector":[[0.1357179135,-0.0811684653,-0.0338476785,0.0381258205,-0.0175717659,0.1206274703,0.1961102188,-0.0172437802,-0.0335476324,-0.0045973235,0.0101181436,-0.0721133128,0.1461213827,-0.0696114898,0.0676520467,-0.00035953,0.1954792738,-0.0011202176,0.0429726504,0.1314644665,-0.2316561341,0.0268351007,-0.0529231988,-0.0081084901,0.1152366474,-0.0233517047,-0.0404972397,-0.1734308153,-0.0239092782,-0.0856847689,0.0600175485,-0.1299315989,0.0190760382,-0.0690314397,-0.0098615959,0.0050572217,0.1135924682,-0.1395353228,-0.0577597953,0.00284694,0.0403233655,-0.1422323585,-0.1569115222,-0.0248470344,0.0545652248,-0.0694926009,0.0136424685,-0.0940180793,-0.0192163065,-0.2112479061,-0.1476276666,0.0113202827,-0.1076906174,0.0107689211,-0.2085594982,0.1715958118,-0.1424944699,-0.0166147351,0.0310218986,-0.115042001,-0.0749588385,0.0313956551,0.0693975464,0.0637398437,0.1122622266,0.0242039487,-0.0916633755,-0.1242679134,0.0310961735,0.0041363044,0.0698847696,-0.0538088642,0.0218822043,-0.1046563014,0.0578917712,-0.1174926832,0.1747357547,-0.0095725311,0.0105736079,-0.1334343702,0.1231140569,0.1558694094,0.0801098719,0.1513823569,0.0978619009,0.205052793,-0.0996775553,-0.0548327193,-0.0106368093,-0.0730643868,-0.1436826289,0.0445860215,0.1006233692,-0.0443497971,-0.0099154105,0.008570902,-0.1741093397,0.2314509153,0.0062065287,-0.0757679492]],"hackathon_name":"BullHacks","index":97,"project_description":"Real time 3D visualisation of trainsOn the train to BullHacks, we trying to come up with the idea of visualising trains in the real time using a 3D map.The website takes real time data from various rail services to get the position of trains on their journey, and then uses that data to build a 3D map.We used TransportAPI to get real time information about trains, including their origin and destination, and how late they are running. We then used various APIs from Network Rail to get the full schedule information for the various trains so we could track them on their whole journey.The visualisation was built using Three.JS to build a 3D world with stations and trains. The train postion is updated as they progress on their journey.The whole project is then hosted on an AWS Lightsail VPS.We ran into many challenges in this project. First, it took a long time to decide how we would tackle the problem and the best techniques. We struggled to find the APIs we needed, since the Network Rail ones required manual account activation.Our first attempt at the server side code was in Node.JS, which we soon found to be quite difficult to get working. After a few hours, we decided to abandon Node and switch to using Ruby with the Sinatra library.Once our network rail account was approved (at 9PM!), we could get the data from them we needed. However, it turned out this was only available as a 2.5GB JSON file! Turning this into a database we could use took over an hour for it to import!BullHacksStephen Foulds\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 08:04 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Train Tracks","project_tags":["ruby","sql","javascript","three.js"],"project_url":"https:\/\/devpost.com\/software\/train-tracks","keywords":"get,trains,time,rail,using,network,could,various,data,real,journey,challenges,project,information,first,ran,took,train,built,build"},{"level_0":98,"hack_vector":[[0.1441630572,-0.1058352888,-0.0345879942,0.0365394801,-0.017960107,0.1282876283,0.2014098614,-0.0269172881,-0.0231071599,-0.0271220542,0.012653701,-0.0686496273,0.1337674856,-0.053674683,0.0618403368,-0.0037230398,0.2021071911,-0.0114934426,0.0378877223,0.1326391697,-0.2456476986,0.0254848041,-0.0432707816,-0.0007869823,0.1062388718,-0.0235831682,-0.0255702883,-0.1603711098,-0.0371886156,-0.1051530689,0.0668058693,-0.1190824434,0.0252639186,-0.0729286969,-0.0094430568,-0.0334397033,0.1136449352,-0.1426287442,-0.0587199181,-0.0116159571,0.0594377294,-0.1213811263,-0.1399408132,-0.0435020104,0.0753606483,-0.0687454715,0.0177931618,-0.0768424496,-0.0384854116,-0.2164775282,-0.1381494701,0.0041597979,-0.0996033698,0.0097672567,-0.2104600072,0.156565845,-0.1313357204,-0.0460718535,0.0408510827,-0.1117817089,-0.0755108371,0.016586503,0.0728809461,0.0203836933,0.1056114584,0.0263635684,-0.1105380729,-0.1235726848,0.0282649174,0.0345333219,0.0619897172,-0.0471143387,0.0156964697,-0.1181890815,0.0172345676,-0.1270475835,0.1738538742,0.0086494703,0.007877795,-0.1351090223,0.1040374041,0.1603451818,0.0363230594,0.1688266695,0.1070513949,0.1997769624,-0.1028075889,-0.0422413126,-0.0344475396,-0.0819380283,-0.1466285735,0.0685560256,0.0975993723,-0.0402816422,-0.0242110267,0.0091825174,-0.1627778709,0.2443441451,0.0067155133,-0.0607977659]],"hackathon_name":"BullHacks","index":98,"project_description":"\"What puns can you think of based on motorised linear potentiometer\"Yeah... It's a messMatt bought a linear motorised potentiometer - basically a slider like what you find on a sound mixing desk. The position can be moved by a motor, and it can sense when you're touching it.We thought it would be a great idea to make a game (or set of games) using this as a controller, along with another potentiometer.You can use the pot to control the position of the putter in a golf game. When you putt, the potentiometer slides to one end, as if it was hitting the ball.The voltage of the pots is measured by an arduino, as well as whether or not the linear pot is being touched. These values are then sent via serial to the Raspberry Pi which is running the game. It works out what these values should correspond to in the game.We first tried using H-bridges with an arduino to control the position of the linear pot, but ended up wiring it up wrong, and fried 2 of the things. Then we tried to use a RPi HAT with an arduino, which (surprise, surprise) didn't work. Eventually we had to settle with using the RPi, which was way more effort.Everything pretty much works, and we all learned something new about python and hardware.How to control a linear motorised potentiometer (I love saying that).We have a lot of room to expand, especially through making more games. It would also probably be a nice idea to put the pots in some kind of enclosure.BullHacksScott Street\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 07:58 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Potentio-meter","project_tags":["python","arduino","raspberry-pi"],"project_url":"https:\/\/devpost.com\/software\/potentio-meter","keywords":"game,potentiometer,linear,pot,position,arduino,control,using,tried,idea,surprise,learned,use,values,would,motorised,rpi,games,works,pots"},{"level_0":99,"hack_vector":[[0.1494275331,-0.0806884021,-0.0228969846,0.0354841426,-0.0128842546,0.1344641149,0.2034843415,-0.027707478,-0.0263687242,-0.0057789036,0.0193938129,-0.0822205693,0.1376839429,-0.0694804192,0.0749021545,-0.0092136469,0.1871771663,-0.007948108,0.0492564104,0.1301582009,-0.2347554117,0.0348916575,-0.0489022695,-0.0159976613,0.1012194157,-0.0268642399,-0.0212821346,-0.1782131493,-0.0361408405,-0.086748302,0.0629464015,-0.1097154096,0.0301710349,-0.0940393955,-0.0155724827,-0.0120832417,0.1123762801,-0.1385072917,-0.0753088221,-0.0052143675,0.0459688455,-0.1310231388,-0.1352197081,-0.02674748,0.0702020228,-0.0544027053,0.0100511461,-0.0883312598,-0.0246043243,-0.2110858709,-0.1617097706,0.0138066616,-0.117703639,0.0186885763,-0.1939059943,0.1663869023,-0.1305944622,-0.0205954034,0.0329455361,-0.1136511862,-0.0692402199,0.0185676664,0.0766099989,0.0483169891,0.1170045659,0.0178652611,-0.1053078771,-0.1169250458,0.0194534492,0.0155130625,0.0605225414,-0.0484052487,0.0127825951,-0.1232363507,0.0467506647,-0.1251139343,0.1798440814,-0.0037291709,-0.002722736,-0.1369614154,0.1256825626,0.1497010738,0.0746563599,0.1484098583,0.0978248194,0.2076406926,-0.0759459436,-0.0471451767,-0.0094615798,-0.0648687929,-0.1575739831,0.0512019135,0.1031434238,-0.0505711474,-0.0162889138,0.0111412127,-0.164714098,0.2424051315,-0.0031185304,-0.0720910057]],"hackathon_name":"BullHacks","index":99,"project_description":"Sort.AI is an Windows service concept that sorts your files automatically using the Google Natural Language APIThe Notification Tray IconSort.AI is an Windows service concept that sorts your files automatically using the Google Natural Language API. While doing coursework, I noticed that my file system could be abit more organised. Thats when my friend and I thought about using AI to organise our systems so we don't have to. That's where Sort.AI comes, inspired from the winner of BrumHack 5.0 who used the Google Natural Language API.Sort.AI is told where your 'Sort Bin' is and opens each text document and places it into the correct location. For example a document about Dogs would go into the Animals folder.Using our experience with C# and knowledge within the Google Cloud API, we worked within the Visual Studio 2017 IDE to create both the form interface and the Windows Service. Unfortunately due to many things out of our hands we were unable to complete the Windows service. However, parts of the implementation have been included already, for example, the notification tray icon appearing and the ability to minimize to tray. We also used the Google Cloud API libraries to create our code.Everything! Literally everything, whether it was the API not connecting or the Windows service not running we came across many challenges while creating Sort.AI. Each of us had some form of battle whether it was against Visual Studio, GitHub or even the Google API. We collectively made decisions on how to tackle these issues including at times even swapping jobs around.Being able to understand the Google API a bit better and design methods where we can utilise the API for the general market.If in doubt, Google's about!We will possibly begin to develop on the idea after BullHacks however due to other commitments and projects this may be unlikely but we might regroup and focus on working on this product in the near future.BullHacksAlexander Davis\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 07:31 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Sort.AI","project_tags":["c#","google-cloud"],"project_url":"https:\/\/devpost.com\/software\/bullhack1-0-sort-ai","keywords":"api,google,sort,ai,windows,service,using,everything,even,studio,due,however,language,many,challenges,cloud,document,natural,example,create"},{"level_0":100,"hack_vector":[[0.1506830603,-0.0912463889,-0.0221488234,0.0465051755,-0.0158010423,0.155870989,0.1867491752,-0.0462939404,-0.0164818354,-0.0174558833,0.0245943349,-0.0815227628,0.1398858875,-0.075345546,0.0609366298,0.0147535475,0.2266482264,-0.002314613,0.047588408,0.1136842519,-0.2259537578,0.0275936164,-0.0593066104,-0.0239274222,0.1151209027,-0.0366332717,-0.0315289125,-0.1917431206,-0.0349881351,-0.0828439593,0.072604768,-0.1219505966,0.0452419408,-0.0867508203,-0.0258122496,-0.0033160257,0.1188519374,-0.1256899536,-0.0421213321,0.0139555801,0.0523311235,-0.1318069398,-0.1709471047,-0.0219742488,0.0490361936,-0.0536995977,0.0178614501,-0.0625346825,-0.0367907509,-0.2197041363,-0.1375821829,0.013122486,-0.0992794037,-0.0029755279,-0.1875016242,0.1559056491,-0.1296718121,-0.005103163,0.0165418666,-0.0827331617,-0.0610336922,0.0147275953,0.0763539374,0.0527426153,0.1245105192,0.0051414934,-0.1020795926,-0.1388172358,0.0258740429,0.0197886955,0.0739688948,-0.0487085432,0.0141391456,-0.1285719723,0.0219851639,-0.1017688513,0.1998953074,0.0106611792,0.0168382972,-0.1325093359,0.1287930757,0.1638041586,0.054070022,0.159322843,0.1015925333,0.1923344284,-0.0999704897,-0.0365652964,-0.0097852629,-0.0849959627,-0.1397347301,0.0587114505,0.083779186,-0.0358727835,0.0037701367,-0.0095572192,-0.1280493438,0.2358128726,0.0253623035,-0.0855381414]],"hackathon_name":"BullHacks","index":100,"project_description":"So... You've heard of Facebook? Get ready, for Fakebook. It's Facebook except you can post as anyone.Fakebook sounds like Facebook and that's pretty funnyFakebook lets you use a site that is like a clone of Facebook, and post as your friends.Also using Algolia you can search all of these posts.We split up the task with Iva and Callum on the front end, Adam working on Facebook login, and Aaron working on the Database.We also used vagrant to make our environments identical.Vagrant did not work on all of our machines :(Hackers trying to hack into our site :'(\nXSSAWS Worked!!!\nAWS?Not to open source our API keysAnother LawsuitBullHacksI worked with the Facebook API (in Javascript) to handle logging in and retrieving users' profiles.  I also worked a little bit on the html, just to get it to play nicely with the Facebook integration.Aaron Tello-Wharton\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 08:20 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Fakebook","project_tags":["javascript","node.js","html5","algolia","jquery","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/fakebook","keywords":"fakebook,facebook,working,vagrant,like,also,aws,site,xss,environments,identical,hackers,hack,funny,front,friends,clone,end,database,iva"},{"level_0":101,"hack_vector":[[0.1306815147,-0.1021604836,-0.0357483514,0.0580960736,-0.0326241478,0.1426152438,0.1870692819,-0.027974125,-0.0256987736,-0.0411506966,0.0072046109,-0.0450915284,0.1420372427,-0.0802065283,0.0445911884,0.035894759,0.257612586,0.0178561043,0.0330416821,0.1282222569,-0.2169102132,0.0183708854,-0.0569152273,-0.0264463779,0.1395398676,-0.0223616939,-0.046298258,-0.1878105551,-0.0273370668,-0.0853970125,0.0547369048,-0.1217407286,0.057710778,-0.0654431507,-0.0182053372,0.0084852539,0.1352246702,-0.1171890423,-0.019302357,0.0290206484,0.0440729521,-0.1329567581,-0.1876144707,-0.0201863032,0.02613963,-0.0785369426,0.0343709104,-0.0479701646,-0.0271789022,-0.2239589393,-0.0956349298,0.0025183931,-0.0836622417,-0.0282610878,-0.1659914553,0.1561742127,-0.1432874948,0.0093236491,0.0144294081,-0.0612301342,-0.0548460335,0.0392204411,0.0655391961,0.0453167036,0.1234453171,-0.0086203953,-0.1050425991,-0.1629690677,0.0385845117,0.0092878453,0.0643046722,-0.0399088487,0.0073106964,-0.1225386113,-0.0064809914,-0.0935458913,0.1936795413,0.0004252713,0.0617448166,-0.1390365213,0.1118965894,0.1704555303,0.046377454,0.1711806655,0.1118120328,0.1699436307,-0.1325512975,-0.005052078,-0.0228408277,-0.1117423549,-0.1305825412,0.0792140216,0.0695782006,-0.0160055142,0.0241188183,-0.0324521102,-0.1340929568,0.217711553,0.0589645691,-0.0825370401]],"hackathon_name":"BullHacks","index":101,"project_description":"Random websitesIf you're bored click the button.Click the button and it will  take you to a website randomly from a list.I used HTML, CSS, JavascriptHad to figure out how to get it to redirect to the different websites.Still thinking.BullHacksI created the website to redirect you to random websites using HTML, CSS and I got somebody to help me with the JavaScript side of the website.K Harry\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 09:53 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Click Me","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/click-me","keywords":"click,button,websites,website,bored,built,challenges,css,different,figure,get,html,inspiration,javascript,learned,list,next,proud,ran,randomly"},{"level_0":102,"hack_vector":[[0.1607718468,-0.1339914054,-0.0123462491,0.0739990622,-0.018110618,0.157807976,0.1796622425,-0.054125797,-0.0309797172,-0.0158000365,0.0147898188,-0.0462189205,0.1601649821,-0.070426099,0.0477594398,0.0186901372,0.2161803544,0.0024038658,0.054252822,0.1110221222,-0.2281638533,0.0343276002,-0.0509053059,-0.0118307862,0.1554880738,-0.037300989,-0.0463268198,-0.1852461994,-0.0274416655,-0.0867951363,0.0765929669,-0.115900144,0.0547118597,-0.0647849143,-0.0335516036,-0.0181472804,0.1348872632,-0.1308846623,-0.0338135548,0.0048133335,0.068983525,-0.1320465207,-0.1670061648,-0.0201409422,0.0154486792,-0.0330835655,0.0245254971,-0.0548860058,-0.0168401469,-0.2072128057,-0.1125757545,0.0363566801,-0.1168295667,0.0087267235,-0.182230413,0.1502782404,-0.1506363302,0.0091003412,0.0208108407,-0.0528822877,-0.0606565513,0.0307263955,0.0606577806,0.0460635088,0.1140843108,0.0109456982,-0.1021966785,-0.1470236331,0.003436618,0.0182692632,0.0747439638,-0.037360236,0.019744264,-0.1325656176,0.0015910927,-0.0776423663,0.2007578909,0.0026714315,0.0305749513,-0.1368780285,0.1080974713,0.1556156129,0.0355610065,0.1551744789,0.142457813,0.1981146336,-0.1095809639,-0.016534904,-0.0183390118,-0.0786870942,-0.1189905405,0.0889052674,0.0793478638,-0.0216640215,0.021335423,-0.0361550674,-0.1239499524,0.2305872738,0.0491015539,-0.0660336465]],"hackathon_name":"BullHacks","index":102,"project_description":"We didn't have time to clone Mario Kart, but we gave it a good go.Mario KartDrive karts around a track! 4-player local split-screen!No sleep, and lots of trial and error.Feature creepSPLINES!!SPLINES!! Unity.POLISH\nMore feature(-creep)BullHacksI wrote the spline code that powers the kart position and lap count logic, the kart physics with help from Tom, and the pickups.Half finished level design, some UI, and some Kart movement codeI designed the UI and used James's code to update the UI programmatically, I set up the controls, and using the limits of my patience I set up fences around half of the western stage.James Chapman\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 09:16 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"BullKart","project_tags":["c#","unity"],"project_url":"https:\/\/devpost.com\/software\/bullhacks17","keywords":"splines,creep,feature,unity,learned,around,built,bullkart,challenges,drive,error,inspiration,kart,karts,local,trial,lots,mario,next,player"},{"level_0":103,"hack_vector":[[0.1505883783,-0.1449751705,-0.0171262342,0.0533183329,-0.0407532901,0.1462384462,0.1948909014,-0.0576811805,-0.021012187,-0.035220027,0.0015110822,-0.0042298585,0.1390176862,-0.0716335997,0.0290049594,0.0587711409,0.2521042824,0.0244099386,0.0371786766,0.105427742,-0.2172811776,0.0211568102,-0.0389486328,-0.0508841909,0.1372338682,-0.0159967672,-0.0503914692,-0.1697380841,0.0042504002,-0.1029373482,0.0333478115,-0.118909575,0.0642289594,-0.0650207177,-0.0289420057,-0.0279880874,0.1393017024,-0.1291622818,-0.035034053,0.0454305448,0.0486426577,-0.1440557241,-0.172878474,-0.0458692499,0.0011418674,-0.0633219033,0.0405747853,-0.0317778513,-0.0311103798,-0.1957917511,-0.0822136477,0.0224983767,-0.1102076322,-0.0528578535,-0.1472975463,0.1644795686,-0.1471284181,0.0234174654,0.0178544205,-0.0162746925,-0.0536306128,0.0347909778,0.0633737519,0.0597309805,0.1197733656,-0.0148223368,-0.1414446682,-0.1568110436,0.0283735935,0.0267915111,0.0738684386,-0.0424372517,-0.0034862382,-0.142506659,-0.0372293741,-0.0974449739,0.1852551997,0.0208836421,0.0617790371,-0.1422007531,0.1176818088,0.1705373824,0.0237972345,0.1618320495,0.1493312269,0.1683304012,-0.1361468583,0.0290066712,-0.0064919591,-0.1037013456,-0.1095681265,0.0910048932,0.0648432001,-0.0071882764,0.0446264558,-0.0568590872,-0.1207349375,0.1923745126,0.0670103803,-0.0593786836]],"hackathon_name":"BullHacks","index":103,"project_description":"One is a maze the other is a singer, songwriter, rapper, record producer and multi-instrumentalist.The Financial TimesWhatever you ask it to, within reasonable effortWith PassionWe couldn't tell which was whichWe figured out the differenceMay contain MinotaurWhat's the difference between people with beards and werewolves : discrimination !BullHacksAdnaan Hussain\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 08:49 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"What is the difference between a Maze and a Labryinth","project_tags":["sass","oxford-english-dictionary"],"project_url":"https:\/\/devpost.com\/software\/what-is-the-difference-between-a-maze-and-a-labryinth","keywords":"difference,within,whatever,ask,beards,built,challenges,contain,discrimination,effort,figured,financial,inspiration,labyrinth,learned,may,maze,minotaur,next,passion"},{"level_0":104,"hack_vector":[[0.1741785258,-0.1321917027,-0.0333077349,0.0564195476,-0.0152648631,0.1425468773,0.1944075525,-0.0367380083,-0.02744212,0.0059753451,0.009636391,-0.0532232784,0.1441023201,-0.0592221543,0.0665456355,-0.0043304148,0.2086067945,-0.0115082422,0.0513191335,0.1154719219,-0.2576560378,0.0279415995,-0.0449718088,0.0022653434,0.1348374784,-0.0386551246,-0.0390447378,-0.182317093,-0.0210254993,-0.0859600678,0.0876147449,-0.127820909,0.0289588049,-0.0801375359,-0.032029625,-0.0219895728,0.1037095785,-0.1409709752,-0.0513173938,-0.0067281411,0.0533269458,-0.1312378496,-0.1535793394,-0.0317774899,0.0488827527,-0.040441189,0.0045608659,-0.0783605576,-0.0172746126,-0.2043863088,-0.1287380606,0.0148757715,-0.1171091348,0.0101035917,-0.1974358112,0.1551162153,-0.139383629,-0.0126242992,0.0240096599,-0.0741229281,-0.0697738007,0.0324469209,0.0716269165,0.0411414243,0.106645599,0.009557995,-0.1130806729,-0.1212099269,0.0192118101,0.0273504667,0.0772332698,-0.0344775431,0.0282972287,-0.1270335913,0.0088128848,-0.1207542866,0.1867906749,0.008855735,0.0187948532,-0.1267977655,0.1182344258,0.1483070403,0.0380697101,0.161574766,0.1198523194,0.213347435,-0.0926408321,-0.0238645263,-0.0198831502,-0.0743936449,-0.1216253638,0.0740717575,0.0910846442,-0.0328250453,0.004949965,0.0008690043,-0.1342052668,0.219781518,0.0256804693,-0.0652221069]],"hackathon_name":"BullHacks","index":104,"project_description":"Fast generation of voxel maps, looking at infinite expand-ability at a later date.Having dealt with simpler proc gen before, I decided to look into something a bit more in-depth after early ideas dried out.Currently generated a single chunk of a map, looking to be make infinitely expandable alter on.Wrote my own Diamond-Square algorithm to get the general shape of the map, then implemented a basic renderer and camera controls.Dealing with Quaternion math in unity can be confusing.It performs reasonable well and generates quite fast considering how quickly I wrote it.Refreshed my memory on a lot of different aspects of unity. Learnt a lot about how unity deals with vectors and rotations in different scenarios.Generating more chunks as the camera moves, colouring the terrain dependent of height, moisture maps etc\nPossibly simulating natural processes such as erosion and tectonics.BullHacksMatt Dewhurst\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 08:10 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ProcGen Voxel Map","project_tags":["c#"],"project_url":"https:\/\/devpost.com\/software\/procgen-voxel-map","keywords":"unity,map,wrote,different,lot,camera,gen,dried,early,erosion,etc,expandable,fast,generated,general,depth,generates,generating,get,height"},{"level_0":105,"hack_vector":[[0.1440995336,-0.1072591394,-0.0307898298,0.0555709191,-0.0276991334,0.1406369358,0.198351115,-0.0330621973,-0.0233055782,-0.017177511,0.0168880057,-0.0451571792,0.1526205242,-0.0736469254,0.0585497171,-0.00500048,0.2142746598,-0.0111015541,0.0449357443,0.1239676774,-0.2365028262,0.0219080523,-0.0339122973,-0.0044917082,0.1323525608,-0.019372128,-0.0358246081,-0.1696764529,-0.0167500135,-0.0844167247,0.0665394664,-0.1169139221,0.0284085218,-0.0714548901,-0.0200968441,-0.0154102575,0.1188152358,-0.1366054118,-0.057173159,-0.0012945754,0.0529900305,-0.1278817058,-0.1477639675,-0.0245210323,0.0554459505,-0.0469587259,0.010696236,-0.0698738173,-0.0214158669,-0.2167541534,-0.1348711401,0.0189044755,-0.1073681638,0.0002560486,-0.2022124231,0.1592238694,-0.130464077,-0.0176314469,0.0269158538,-0.0913026407,-0.0639846921,0.0321179144,0.0777372345,0.0440782718,0.1150966138,0.0159136001,-0.0984215885,-0.12883012,0.0289333537,0.0202061143,0.0602015182,-0.0326194055,0.0237610321,-0.1240728348,0.00967634,-0.1121402308,0.184633255,0.0005453252,0.0104877884,-0.13994129,0.118052803,0.1614005715,0.0474209115,0.1701945812,0.1145406738,0.2081944793,-0.0980040506,-0.0341340564,-0.0231147613,-0.0823481977,-0.1467329711,0.0674943104,0.1016902253,-0.0245531108,0.0132194236,-0.0025624647,-0.1507493854,0.2377740294,0.0230679866,-0.0654098392]],"hackathon_name":"BullHacks","index":105,"project_description":"Where is that pesky wolf?The inspiration of this site was to help organisers of the popular party game http:\/\/www.playwerewolf.co\/rules\/ by allowing a host to create a lobby and participants to receive their role privately without the need for cards.Allow for organisers to host, start and restart games of Werewolf.Upon realising that creating the entire app wouldn't be possible with just an hour left to go, we redirected our focus towards a new project... wherewolf. Simply type in your postcode and find out whether you should be worried about a wolf attack!The site uses jQuery, socket.io, node.js, javascript and some other magicMost of us had very limited web experience so learning sockets from scratch as an interesting time for us and caused us the most heartache.We learnt (albeit, to a non-fully functional degree) how to use web sockets.Expanded my knowledge of web technologies and got to play around with cool web technologies.Startup investment roundsBullHacksLiam Sorta\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 08:03 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Werewolf \/ Wherewolf","project_tags":["node.js","javascript","jquery","socket.io"],"project_url":"https:\/\/devpost.com\/software\/werewolf-wherewolf","keywords":"web,us,organisers,technologies,site,host,sockets,inspiration,werewolf,wherewolf,heartache,help,go,games,hour,game,got,www,http,fully"},{"level_0":106,"hack_vector":[[0.1758045703,-0.1428143084,-0.0125786858,0.0777349547,-0.0302467067,0.1584320068,0.1869569719,-0.0518899709,-0.029229477,-0.0247394592,0.0022915571,-0.0108181313,0.1381974667,-0.0669533536,0.0407352597,0.0289941393,0.2250277698,0.0090584122,0.0567421317,0.101681456,-0.2223507464,0.0106070256,-0.0479856543,-0.0338220485,0.1529738158,-0.0325230621,-0.0445389636,-0.1782258004,-0.0079543954,-0.0828672796,0.0529826283,-0.0975142717,0.0597078353,-0.0683617741,-0.0472190566,0.0014338716,0.1395972818,-0.1264997274,-0.0268099308,0.0583382621,0.0690480247,-0.1249720529,-0.1653596014,-0.0252915379,0.0034112521,-0.0647267923,0.036434453,-0.0497889444,-0.0189502947,-0.2214007378,-0.0900564492,0.0267210193,-0.118868351,-0.0247290563,-0.1521708965,0.1553080827,-0.1568607241,0.0236055646,0.0059631192,-0.0120199751,-0.0392181948,0.0260041561,0.0573581569,0.0530282632,0.1369309425,-0.0275095496,-0.1315105557,-0.1434758157,0.00432671,0.0062036333,0.05903152,-0.0328975134,-0.0161649566,-0.143798545,-0.0279330686,-0.079526931,0.2154295444,0.0130600445,0.0516804494,-0.1557571292,0.1085247397,0.1570596248,0.0146769937,0.159940362,0.1455108672,0.1902173907,-0.117661804,0.0348852873,-0.0047869734,-0.1005943939,-0.1088844761,0.096415177,0.0632934868,0.0038710642,0.0331297368,-0.0618474297,-0.106849432,0.1972284019,0.0657397211,-0.0547385402]],"hackathon_name":"BullHacks","index":106,"project_description":"Thought I'd remake the visual studio searching stuff to use parallel processing and indexingFinal year projectSearches the solution for a matching string\nIt used to index it as well but searching indexes are hardCoffeeSearching indexes, sleep deprivationNothing, I am so sadBit about indexing and all that jazzI complete it and submit it for my final year project.BullHacksConnor Bradley\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 08:02 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Visual Studio Searching Stuff","project_tags":["c#"],"project_url":"https:\/\/devpost.com\/software\/visual-studio-searching-stuff","keywords":"searching,year,project,indexes,final,jazz,inspiration,indexing,index,hard,matching,deprivation,complete,coffee,challenges,built,bit,learned,next,well"},{"level_0":107,"hack_vector":[[0.1534256935,-0.1295655221,-0.0318139195,0.0522323661,-0.0186357033,0.1322290897,0.1850323081,-0.0284100585,-0.0182844121,-0.030115379,0.0088792974,-0.0639961138,0.1548911184,-0.0603336878,0.0641460642,-0.0054945475,0.1943635941,-0.0141351335,0.0433667228,0.1318368614,-0.2557929456,0.0153277945,-0.0388150066,0.0029591867,0.1273667514,-0.0332705416,-0.0306299813,-0.1537247747,-0.0358758196,-0.1050145701,0.0649714023,-0.1140063927,0.0207384098,-0.0625722781,-0.0227279086,-0.0307436883,0.1114341468,-0.1509162486,-0.0641686693,-0.0104232589,0.0663241521,-0.1087482423,-0.1395445764,-0.0284399744,0.0548487455,-0.0646427497,0.01262837,-0.0768551752,-0.0225484502,-0.2175450474,-0.1460664123,0.0241461098,-0.1053758264,0.010218502,-0.2107748538,0.1671064794,-0.1297692806,-0.0385607183,0.0293161906,-0.0993701592,-0.0819265842,0.0313042775,0.0600066632,0.0351989456,0.1042774916,0.0340951607,-0.1038526148,-0.1254897714,0.0106669366,0.0243813191,0.0582371354,-0.0356525183,0.0174166262,-0.1151122823,0.0223223325,-0.0892404988,0.1875231713,0.0002873319,-0.0034847935,-0.1341043413,0.1035368368,0.1584929377,0.0355102457,0.1489619762,0.114861466,0.2132690549,-0.0827817917,-0.0395238847,-0.0298681539,-0.0599789582,-0.1280948669,0.0736524612,0.0999276266,-0.0377693214,-0.0185203217,-0.001101939,-0.1655116826,0.2548355162,0.0122076143,-0.0637150779]],"hackathon_name":"BullHacks","index":107,"project_description":"A rudimentary treasure hunt\/tour of BiriminghamMenu ScreenWin screenMy primary school ICT teacher made a similar one for our school and also games like, Secret of Monkey Island.it takes you to the main landmarks in Birmingham and you have to collect puzzle pieces on the way. Bill, the spirit of the bullring bull is there to give you hints along the way. (Work in Progress)Rahima did all of the unity, c# stuff and also the bull. Kelsey found the images, the buttons and did the resource finding.MS paint has a limited number of undos and Rahima had to learn about how to do scenes and audio and all the Unity UI and view elements. We had bigger ideas but had to be realistic and start super small.We've been to 1-2 hackathons in the past, but weren't confident enough to actually create something. So this is our first ever actual submission and demo.24 hours isn't a lot of time. We were a bit too relaxed at the beginning and didn't have time to make what we envisioned. Also learnt a lot about the technical aspects of game building.We'd quite like to finish it off and give it a nice UI. Some more challenges would also be nice.BullHacksRahima Khanom\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 07:56 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Bull Hunt","project_tags":["unity","c#","mspaint"],"project_url":"https:\/\/devpost.com\/software\/bull-hunt","keywords":"also,bull,rahima,nice,give,challenges,lot,like,school,time,ui,unity,way,finish,finding,first,found,ever,would,hackathons"},{"level_0":108,"hack_vector":[[0.1652545482,-0.1374423951,-0.0112543106,0.0593607016,-0.0188986361,0.1435403824,0.2103313208,-0.048009526,-0.0443471745,-0.0126321539,0.0073938975,-0.0249016043,0.1357598007,-0.0705257207,0.0331207849,0.0253252573,0.2338091433,-0.0114036947,0.0482664593,0.1195947751,-0.2339283228,0.0259563606,-0.0356920138,-0.0246287659,0.1488337219,-0.0241787285,-0.0422251374,-0.1877264231,-0.0098185716,-0.0982833877,0.0642046854,-0.1163790673,0.0573524386,-0.0723133311,-0.0292308331,-0.0219004955,0.1228323504,-0.1332519352,-0.0285322387,0.0276456233,0.0669282377,-0.1357762218,-0.1589888036,-0.0423151441,0.0265052617,-0.0531156734,0.0168554746,-0.055005867,-0.0197453015,-0.2162648439,-0.0918374285,0.0230730902,-0.1119381711,-0.0114911599,-0.1690530032,0.1587416083,-0.159485966,0.0021535507,0.0124354772,-0.0522134267,-0.0486452691,0.0281455871,0.0614572428,0.0464501381,0.1288895458,-0.0093012676,-0.1316525936,-0.1345647573,0.0223339926,0.017170554,0.0653107464,-0.0401411392,0.0000483661,-0.133112222,-0.0125611722,-0.1096780524,0.1853564233,0.0111443298,0.0570390411,-0.1397704035,0.1192497686,0.1520814151,0.0312808827,0.1681848913,0.1377010047,0.194651261,-0.1151815206,0.0041900189,-0.014743669,-0.0952752456,-0.1237237453,0.0819131732,0.0750920027,-0.011453215,0.0095526809,-0.0263367519,-0.1307391971,0.1859915257,0.0538716316,-0.0505030379]],"hackathon_name":"BullHacks","index":108,"project_description":"The only game where Bernie wins, whatever happens!The Hackathon's deadline.Allows the player to play as 2016 Presidential Candidate Bernie Sanders to crush world leaders and protect the all-important nuclear launch codes.We used the Python library RenPy, a visual novel library.GitHub posed a significant challenge for us, as well as the limited functionality of RenPy.The game is finished :)How to use RenPy and to be patient when coding.Multi-character support and multiplayer.BullHacksMade sure Git kept workingHelped generate the Sprites.Luke Tainton\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 07:47 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Go Go Bernie Sanders!","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/go-go-bernie-sanders","keywords":"renpy,library,bernie,sanders,go,finished,leaders,launch,inspiration,important,hackathon,github,game,functionality,world,deadline,learned,coding,codes,character"},{"level_0":109,"hack_vector":[[0.1572302878,-0.1563487053,0.0102897808,0.1067081094,-0.0508292392,0.1554826945,0.1569214314,-0.0487657636,-0.0346543416,-0.0326892436,-0.0207895264,0.0623204559,0.1256130189,-0.0746282414,-0.0188822933,0.0772521049,0.25115785,0.0378292724,0.0556678586,0.0863096789,-0.1869384944,-0.0118288063,-0.0328279324,-0.0649826303,0.195026949,-0.0184263401,-0.0778567418,-0.1776801646,0.0423396602,-0.0750607774,0.0113466745,-0.084587954,0.0824086294,-0.0321336798,-0.0344001353,0.0212164298,0.1478583515,-0.1014104337,0.0141414991,0.1196482107,0.0695254505,-0.1423638165,-0.1814417392,-0.0344312228,-0.075600639,-0.0528365858,0.0431079976,0.0002925974,-0.0031418938,-0.1859238446,-0.0061874851,0.0363529585,-0.1063593701,-0.0755937099,-0.0934006274,0.1511251181,-0.1563084722,0.0864829645,-0.0264093634,0.0801503584,-0.0030346124,0.0372620001,0.0313845463,0.0737501755,0.1529727131,-0.0534061156,-0.1387611628,-0.173837468,0.0116567397,-0.007340271,0.0655358732,-0.0270702541,-0.0314471759,-0.1415510029,-0.0772601366,-0.0408353694,0.1890363246,0.0277628638,0.1055992246,-0.1422871351,0.0925621688,0.1454590559,-0.0036194394,0.1374529004,0.1617861986,0.1539520919,-0.1375896037,0.0905249193,0.0107933236,-0.1120256633,-0.0623735562,0.1136197746,0.0125136152,0.037984401,0.0873301625,-0.1113288328,-0.0491152331,0.1240222007,0.122930944,-0.030813463]],"hackathon_name":"BullHacks","index":109,"project_description":"Hackathon Event Tracker Beta Template for Hackathon Groups to useHackathon Event TrackerA Hackathon TrackerBullHacksKelvin Minguell\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 07:30 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"hackaTrack","project_tags":["css3","html5","javascript"],"project_url":"https:\/\/devpost.com\/software\/hackatrack","keywords":"hackathon,page,event,end,sponsor,panels,integration,tracker,describe,faced,general,future,fully,front,features,bootstrap,correctly,detail,events,countdown"},{"level_0":110,"hack_vector":[[0.1482785195,-0.1526530981,0.0077056005,0.0896553844,-0.0551712997,0.1473673731,0.1677856594,-0.0432590172,-0.0245132092,-0.0391411483,-0.0109313289,0.0391445346,0.1295111775,-0.0821660236,-0.0086855469,0.090640299,0.255989939,0.0245334227,0.0526368544,0.0933379829,-0.1952573061,-0.0049332231,-0.0463346876,-0.064653419,0.1736915112,-0.0256900042,-0.0788446963,-0.1708991826,0.0291780196,-0.0748020187,0.0125561962,-0.0800868645,0.0764755979,-0.0412424766,-0.0434650518,0.0221161284,0.142490387,-0.1053050384,0.005174113,0.1138122082,0.0568495914,-0.1381978095,-0.1865151376,-0.0423259437,-0.0497612953,-0.07122197,0.0466705337,-0.0058545028,-0.0115806665,-0.1889124662,-0.033144813,0.0385993756,-0.1120537147,-0.0690134838,-0.1013443619,0.1505254209,-0.1602371186,0.0656607449,-0.021154955,0.0506582931,-0.0196715593,0.0433917642,0.0367792919,0.0790454373,0.1502704024,-0.0533447191,-0.1428923011,-0.1710513532,0.0105882036,-0.0053802906,0.0574177615,-0.0343268439,-0.0355651602,-0.140779227,-0.0718987361,-0.0443462729,0.1964618862,0.0235259198,0.0846716017,-0.1544689387,0.1038602218,0.1584944874,-0.0039533461,0.1298323423,0.1531753838,0.1632974893,-0.1424725205,0.0761305243,0.0123594664,-0.1243464425,-0.0764549822,0.1076197475,0.017692918,0.0420776196,0.0779032707,-0.1018560529,-0.070921585,0.1453486383,0.1185037047,-0.0383908339]],"hackathon_name":"BullHacks","index":110,"project_description":"be surrounded in pictures in VRa demo that does this but with less imagestried to get bullhacks.techBullHacksYuvesh Tulsiani\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 07:39 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"WebVR Image Dome","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/vr-image-dome","keywords":"webvr,tried,built,bullhacks,challenges,demo,dome,get,image,images,inspiration,learned,less,next,proud,ran,tech,accomplishments"},{"level_0":111,"hack_vector":[[0.1414856464,-0.1459219754,0.0074387291,0.0876605138,-0.0528695919,0.1619740278,0.1590028703,-0.0474061072,-0.0197148379,-0.0277004484,-0.0106324861,0.0213557873,0.1323168874,-0.0686204657,-0.0012748599,0.0847705379,0.2603513598,0.0387303606,0.044512324,0.0873940513,-0.2044893652,-0.007949085,-0.0417466499,-0.0507261567,0.1785838008,-0.0208669398,-0.0707205459,-0.177956894,0.0272137616,-0.0842176229,0.034423694,-0.087345168,0.0718658417,-0.0446324497,-0.0444872454,0.0114252549,0.141862154,-0.1149374545,0.0131696425,0.0886988938,0.053155981,-0.1402885765,-0.1841364652,-0.0381797329,-0.0434283353,-0.0613183528,0.0394208431,-0.0045935842,-0.0116930231,-0.2067747712,-0.0348057896,0.0405087173,-0.1027555987,-0.0660198927,-0.1195565164,0.1573310196,-0.1595453471,0.0618608706,-0.0113616632,0.0441440344,-0.0189438947,0.03021794,0.0383605659,0.0683918148,0.1379246414,-0.0380463228,-0.1246077493,-0.1816454679,0.0179156624,0.0014078839,0.0678562671,-0.035655871,-0.0180706047,-0.1393944472,-0.0693885386,-0.051695779,0.198971197,0.0234090481,0.0916341841,-0.1513403058,0.1018486172,0.1598573923,0.0017862056,0.1460875273,0.1563564241,0.1739962995,-0.1450230479,0.0654514655,-0.0013127915,-0.1113937199,-0.0797723457,0.1091210023,0.0230649523,0.0186048578,0.0653214529,-0.0778007582,-0.0666955933,0.1613044739,0.1081966534,-0.0552858636]],"hackathon_name":"Hack@Brookes 2017","index":111,"project_description":"The piano - redesigned for your hands!A happy future for me and all my friends.\nIn some senses more expressive.Hack@Brookes 2017Aiken Cairncross\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 06:38 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"portaudio expert","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/piano-2","keywords":null},{"level_0":112,"hack_vector":[[0.141470328,-0.0695373639,-0.0219446644,0.0429614522,-0.0168185756,0.1480194479,0.2107674181,-0.0389133655,-0.0390252285,0.006863296,0.0265826192,-0.0541574694,0.1260724664,-0.0774476603,0.0675481707,0.0104818158,0.221544683,0.0068301721,0.0489900522,0.1101183742,-0.214065522,0.0340382159,-0.0624014847,-0.0316916369,0.1090693772,-0.0182473771,-0.030560188,-0.2104049027,-0.0253719892,-0.0707029924,0.0667888597,-0.1243815571,0.0411770493,-0.1058432907,-0.0345954262,0.0115386862,0.1179313958,-0.1157578081,-0.0545722991,0.0203184541,0.0363631845,-0.1366803348,-0.1586724669,-0.0221331995,0.0529218167,-0.0545625873,0.0194778554,-0.0745183304,-0.0310852956,-0.2228101641,-0.1196610108,0.009816139,-0.1119787022,-0.0003778453,-0.1622990221,0.1611472219,-0.1480758339,0.0143786855,0.0160993636,-0.0805722773,-0.0483014435,0.023336323,0.0828119218,0.0620994978,0.1351628304,-0.0130980909,-0.112947695,-0.1306944489,0.0368488766,0.0010259979,0.0616570488,-0.0433937497,0.0106051881,-0.1338172853,0.0269226078,-0.1278553754,0.195094496,0.0066837906,0.0437390916,-0.1438857317,0.1457107365,0.1541363746,0.084152557,0.1572930962,0.1140468791,0.1987990886,-0.0929648131,-0.0209312364,0.0025116534,-0.0834793076,-0.1592272073,0.0547750928,0.0927589014,-0.0338025615,0.0047035581,-0.0075377147,-0.1323516071,0.2021719813,0.0289971996,-0.0759896487]],"hackathon_name":"Hack@Brookes 2017","index":112,"project_description":"We make tracking lecture times easierWeb InterfaceSend events to Google CalendarWe created a way for students to easily upload their timetables to Google Calendar as well share them with other students. We integrate Google Calendar with Amazon Echo to create a convenient tool for students to access their course schedules.We extracted the calendar events from html files as json files, uploaded the files into the Google Calendar, and integrated it with the Amazon Echo.-The Calendar in the webpage was difficult to convert into the acceptable json files.-The Google Calendar API and OAuth2 integration-Alexa sometimes didn't recognize commands-OAuth2 protocol-Webpage scraping-Alice Ly-Andy Jiang-Damian Czarnecki-Omar DiabDependency:\nPython 3.x,\nhttplib2,\nurllib,\nflask,\ngoogle-api-python-clientIf you are setting up this for yourself, you will need to first set up OAuth 2.0 credentials such as a client ID.Hack@Brookes 2017Andy Jiang\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 08:05 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Winning Student","project_tags":["html","python","css","google-calendar"],"project_url":"https:\/\/devpost.com\/software\/calendar-flask","keywords":"calendar,google,files,students,oauth,client,api,echo,python,webpage,amazon,json,diab,damian,dependency,extracted,difficult,easily,czarnecki,first"},{"level_0":113,"hack_vector":[[0.1514389366,-0.1482995301,-0.0219735987,0.0732921809,-0.0319942795,0.1524081826,0.1963330358,-0.0416271761,-0.032249935,-0.0214519762,0.0015187712,-0.0079109361,0.138582021,-0.0621765517,0.0298625156,0.0464445427,0.2460675836,0.0185186472,0.0310514644,0.1131816804,-0.2321389914,0.0219512172,-0.0403659232,-0.0317284316,0.1567987651,-0.0200193394,-0.056561958,-0.1928615123,-0.0097903125,-0.0834726617,0.066333361,-0.1242887974,0.0504558422,-0.0544042289,-0.0296639521,-0.0134424167,0.1236639842,-0.1214827448,-0.0144714322,0.040212132,0.0613062792,-0.1582461596,-0.1766801178,-0.0510327071,0.0052515226,-0.051586207,0.0196656939,-0.0277846102,-0.0389573276,-0.2072534412,-0.0647442862,0.0157220308,-0.0944435745,-0.0277088415,-0.1601953208,0.1612332016,-0.1532495022,0.0174502321,-0.0026962652,-0.0212601926,-0.0524103418,0.0331927389,0.0529214963,0.0403928459,0.1257957965,-0.0150218783,-0.1281369478,-0.1564059705,0.0338251069,0.0200743284,0.059146449,-0.038924288,0.0143986763,-0.1267469078,-0.041246932,-0.0917320102,0.1816708744,0.0098825106,0.0587406754,-0.1384064406,0.1158518344,0.171497643,0.0218031779,0.166466251,0.1308963299,0.1953987032,-0.132063821,0.0173019525,-0.0060688783,-0.1032085568,-0.1080569997,0.1023982242,0.0478587598,-0.0081747072,0.0267046131,-0.0357289463,-0.1138144732,0.1978436261,0.063587524,-0.0483534634]],"hackathon_name":"Hack@Brookes 2017","index":113,"project_description":"Zombie survive gameI love video games, and i like to create some.It's a video game where you should survive against zombie.coding in c# with Unitymake a full video game in one nightI make a genetic algorithm based on the Darwin theory about evolutionhow to make a genetic algorithmSurvive and live in other computersHack@Brookes 2017Mickael Hawat\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 11, 2017 09:35 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Survive","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/survive","keywords":"make,video,survive,genetic,algorithm,game,full,evolution,darwin,zombie,create,games,coding,challenges,built,based,computers,inspiration,learned,like"},{"level_0":114,"hack_vector":[[0.1523004323,-0.1571636796,0.0086749503,0.0849683434,-0.0388604552,0.1628279984,0.1841307878,-0.0352256335,-0.0308773611,-0.0141447829,-0.0047852937,0.0008324875,0.1434966177,-0.0768368542,0.0216230452,0.0552096702,0.2522210777,0.0315770991,0.0542619377,0.097494565,-0.2284153402,0.0129304267,-0.0393357314,-0.0513367839,0.167368561,-0.0292351972,-0.0670284331,-0.188177526,0.020886384,-0.0803339481,0.0464830287,-0.1050349772,0.0550057404,-0.0607871041,-0.049017176,-0.0026712848,0.1381375939,-0.1281047314,-0.007717662,0.0615192205,0.0568130203,-0.1463909447,-0.1732314229,-0.0418154337,-0.0040479661,-0.0403386392,0.0361996628,-0.0182955675,-0.0149750449,-0.1977918148,-0.0612495244,0.0303245373,-0.119058907,-0.0356298909,-0.1394869536,0.1540970057,-0.1527134627,0.0418963581,0.00882034,0.0104812616,-0.0302824825,0.0284058731,0.0557998642,0.0686824396,0.1329596639,-0.0226614866,-0.1112657189,-0.1665690839,0.0128130084,0.0052324864,0.0707067251,-0.0409677774,-0.0022484122,-0.1350729764,-0.0540849976,-0.0882751271,0.1877503395,0.0261572264,0.067489028,-0.147150442,0.1211433336,0.162698999,0.0065889354,0.1533056647,0.1489890069,0.1945927441,-0.1254659891,0.049479574,-0.002369632,-0.0982193947,-0.0970301852,0.1007151827,0.0398054719,0.0059806351,0.0589778386,-0.063576892,-0.0836981013,0.1685539484,0.0838925764,-0.0480686426]],"hackathon_name":"Hack@Brookes 2017","index":114,"project_description":"Intelligently classifying login eventsA backend application which attempts to classify login attempts - easier for the user than 2FA, but more secure than blind acceptance of a single factor of authentication. See more at the pitch.Hack@Brookes 2017Joshua Richardson\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 09:41 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Login Heuristic","project_tags":["android-studio","django","python","bootstrap","jquery"],"project_url":"https:\/\/devpost.com\/software\/https-github-com-josh-richardson-login-heuristic","keywords":"attempts,user,single,see,secure,pitch,login,factor,fa,easier,classify,blind,backend,authentication,application,acceptance"},{"level_0":115,"hack_vector":[[0.1545918733,-0.1412248313,0.025428148,0.1091020852,-0.0454268046,0.1766953766,0.1600365341,-0.0674517527,-0.0407745838,-0.029280128,-0.0022078746,0.0394204631,0.1311325282,-0.0834402293,-0.0205610469,0.0812645033,0.2647972405,0.0432847813,0.0661032051,0.0688992217,-0.167973578,0.0152059235,-0.0545178838,-0.0689171627,0.1763652414,-0.0213416573,-0.0863514319,-0.190806374,0.0269385036,-0.0609384291,0.0258212388,-0.0880686715,0.0931456834,-0.0500739813,-0.0466205254,0.0303902365,0.1559708118,-0.0873255804,0.0167722944,0.1102854535,0.0645209923,-0.1485946327,-0.1923269182,-0.02794246,-0.0658162013,-0.0393107235,0.0486252457,-0.0013277276,-0.0174355377,-0.1793529093,-0.0104984613,0.0487403758,-0.1071170717,-0.0572797731,-0.078025952,0.1372689009,-0.1569624096,0.0819261894,-0.0173234753,0.0683658645,-0.0032564942,0.0309942923,0.0550580807,0.078810513,0.1513160169,-0.0562238209,-0.1391907334,-0.1799537539,0.0031807299,0.0076215272,0.0664669052,-0.0264746733,-0.015960237,-0.1462749541,-0.079189226,-0.045052737,0.202919513,0.0281649586,0.113221854,-0.1365537345,0.1102070063,0.1400889605,0.0052455715,0.1206258163,0.1520861685,0.1435389966,-0.1376816481,0.0697784349,0.0146070942,-0.1221917421,-0.0660096779,0.1033068523,-0.0049003479,0.0284671877,0.0946677849,-0.1069848463,-0.0429066196,0.1273381859,0.1240919679,-0.0453121439]],"hackathon_name":"Hack@Brookes 2017","index":115,"project_description":"The mood collector appCode on Android Studio\nPresentation on PowerPoint.Hack@Brookes 2017Danny Hignell\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 09:21 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Mooder","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/mooder","keywords":"studio,presentation,powerpoint,code,android"},{"level_0":116,"hack_vector":[[0.1465487331,-0.1124038473,-0.0222175252,0.057793729,-0.0190448239,0.1360497922,0.1957204342,-0.0347952321,-0.0440428406,-0.0151365492,0.0079581356,-0.0543939881,0.1529494673,-0.0634124279,0.0479059927,0.0110968752,0.2114650607,-0.0098410975,0.0423738398,0.1318269372,-0.2379571944,0.0286741368,-0.0422060192,0.0027217504,0.1378239989,-0.0283465106,-0.0478339791,-0.1711407602,-0.0311447736,-0.0946518332,0.0728036836,-0.1153835505,0.0319852903,-0.061868012,-0.0153889256,-0.0250563715,0.1223028302,-0.1338434964,-0.0399298854,0.0032197628,0.0694391578,-0.1390018165,-0.1596805453,-0.0269230418,0.0500781387,-0.0464076363,0.0123184389,-0.07375063,-0.0222680997,-0.2132050991,-0.1146282554,0.02109267,-0.1027666554,0.0190204568,-0.212989077,0.1634932756,-0.1471601427,-0.0163068622,0.0299787614,-0.0881287977,-0.0664151087,0.0215385053,0.0629768744,0.0349049196,0.1205173507,0.0238812305,-0.1008542031,-0.1383494735,0.0266786292,0.0200324859,0.0661361814,-0.0436566882,0.0162352547,-0.1191697344,0.0150424531,-0.1035094857,0.1793912798,-0.0043691485,0.0200123284,-0.126380071,0.1103221402,0.1520124376,0.0471350253,0.1574212164,0.1216652989,0.2076971084,-0.1090076342,-0.0373213589,-0.0222377516,-0.0815557539,-0.1347034425,0.0739517212,0.0886903256,-0.036597807,-0.0139546227,-0.003677079,-0.1551936567,0.2335450947,0.0290007312,-0.0506966859]],"hackathon_name":"StacsHack III","index":116,"project_description":"I Dnd model for Star Wars when the dungeon master controls the environment with amazon alexaUpon many hours of discussion we decided to maker a game and integrate it with alexa. since the theme of the hack is star wars and we all like Dungeons and Dragons we decided to combine the two. Later we decided to add Alexa to the control panel for the dungeon master.A basic rpg represented with 2.5d graphics when a user moves around a map though a subset of rooms. Rooms can contain enemies, treasures or obsitcles in rooms and must collect the the treasures and kill the enemies without dieing first.With Java. Our lead developer Ryan W. Build the majority of the game with myself and Will M. Building the outscirts.I ran into\nThe main challenge of this was to get a working game within the time limit. Another problem we had was getting the echo to work within the department.We managed to make a basic form of the game.many things.StacsHack IIISven Finlay\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 06:47 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"InternalServerError","project_tags":["java","json"],"project_url":"https:\/\/devpost.com\/software\/internalservererror","keywords":"game,decided,rooms,within,alexa,enemies,basic,treasures,many,working,dungeons,echo,first,form,getting,get,dragons,graphics,hack,hours"},{"level_0":117,"hack_vector":[[0.1473817974,-0.113053821,-0.0266347658,0.0374183804,-0.0235504825,0.1390791088,0.2078624964,-0.029027747,-0.0144156432,-0.0063945409,0.0094637396,-0.0527620018,0.1312302053,-0.0678225234,0.0664459541,0.0206067115,0.2265640944,0.0033910209,0.0458654948,0.1224057898,-0.2416715771,0.0362487882,-0.0436937064,-0.033308994,0.1162666455,-0.0229540206,-0.0310974102,-0.1869977862,-0.006809995,-0.0901094526,0.0571199767,-0.1317760944,0.0399320684,-0.089221321,-0.0195828676,-0.0162987784,0.1091501787,-0.141060099,-0.0550541617,0.0019859793,0.0334624536,-0.1535822749,-0.1462825686,-0.0486644804,0.0545888469,-0.0546517707,0.0132910199,-0.0659581646,-0.0254745372,-0.1997427493,-0.1315489113,0.0060371226,-0.1145629808,-0.0160290562,-0.1813771576,0.1623345464,-0.1328361332,-0.0160244219,0.0339439064,-0.0837630481,-0.0652958006,0.0201661214,0.0780332983,0.0545759648,0.1065118536,0.0053256629,-0.1123889983,-0.1360926926,0.0399890915,0.026702892,0.0770757049,-0.0581657924,0.0254187267,-0.1250653565,0.0122313518,-0.1406084299,0.172157675,0.0076025464,0.0255630929,-0.13714239,0.1259665787,0.1602428854,0.0568167828,0.1751270443,0.10115996,0.1910518706,-0.1093472242,-0.0186408963,-0.0095029892,-0.0874439329,-0.1385138631,0.0587329715,0.0841926038,-0.0340546146,0.0112466253,-0.0023083894,-0.1487463713,0.2094753981,0.0203333739,-0.0786772817]],"hackathon_name":"StacsHack III","index":117,"project_description":"Good memes ruin employment dreamsNo Memes PleaseMore and more students are catching what is called, the meme virus. Students with it lie in bed days on end tagging their friends on social media such as Facebook. It's time to tackle this problem head on.MemeBlocker+ uses a trained neural net to classify scraped images on the current webpage into either 'Meme' or 'Not-Meme'. If the image falls under the category of meme, then it deletes it from the displayed html.We first built a database filled with thousands of memes and non-meme photos as our two categories. Next we trained our neural net using this database.Using machine learning and helping reduce the meme virus.MemeBlocker+ can be expanded to replace non-meme pictures with memes if wanted using SIFT. A user could potentially ask for meme (or non-meme) images to be replaced with images belonging to a tagword of their choice.StacsHack IIImemesBrandon Conn\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 06:29 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MemeBlocker+","project_tags":["python","node.js"],"project_url":"https:\/\/devpost.com\/software\/memevision","keywords":"meme,memeblocker,using,images,non,virus,next,trained,built,database,neural,net,memes,students,webpage,falls,facebook,end,filled,first"},{"level_0":118,"hack_vector":[[0.1453143358,-0.1349213272,0.0018645129,0.0829275325,-0.038513612,0.1513480246,0.193330884,-0.0633838996,-0.0349245146,-0.0169857349,0.0080284644,0.0103705777,0.1407240629,-0.0764035955,0.0261631347,0.0242056549,0.2371254414,0.0150119187,0.0525261201,0.0982363299,-0.2058753967,0.0447781198,-0.0452522971,-0.0295319408,0.1596324742,-0.0130001744,-0.0565812029,-0.1872432381,0.0014045469,-0.0691362023,0.0497937612,-0.1323919296,0.0630566701,-0.0620436817,-0.0355060212,-0.0071669333,0.1539192796,-0.1219427958,-0.030791197,0.048360683,0.0497495234,-0.1673771739,-0.1652201861,-0.0405297838,-0.0113598406,-0.033495456,0.0320806131,-0.0416290164,-0.0341023654,-0.1915052682,-0.0746290982,0.0262602214,-0.1180656627,-0.0141206831,-0.1459645331,0.1441661417,-0.1570910811,0.0395741835,-0.0022187412,-0.0197750051,-0.0375278704,0.0299920589,0.0742183626,0.0523151644,0.1285535693,-0.0261764228,-0.1301566511,-0.1462380439,0.0276258979,0.0267570801,0.069468759,-0.0424604937,0.0264548846,-0.1488769054,-0.0275266673,-0.0980266705,0.1940037906,0.0205543675,0.0678162277,-0.1480274349,0.1296228915,0.1590181589,0.0391265713,0.1605480462,0.1442184895,0.1657520086,-0.1465989649,0.002008148,0.0036151228,-0.1187328994,-0.1266468763,0.0890883729,0.0684807375,-0.0050857915,0.0660237744,-0.0663728714,-0.09762308,0.1826800704,0.0728284717,-0.047100082]],"hackathon_name":"StacsHack III","index":118,"project_description":"Arduino controlled Javascript X-Wing gameStar Wars themed Hackathon! :)The fight against the Galactic Empire rages on, a Rebel X - Wing fighter jumps out of hyperspace to be met by an on-going battle within an asteroid field.Using an arduino in a lightsaber we get accelerometer and potentiometer readings to control the X-Wing via a node.js server.StacsHack IIIJack Leslie\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 06:53 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"X-Wing Survival","project_tags":["javascript","node.js","arduino","html5","css3"],"project_url":"https:\/\/devpost.com\/software\/x-wing-survival","keywords":"wing,fight,hyperspace,hackathon,going,get,galactic,fighter,within,inspiration,empire,control,built,battle,asteroid,arduino,field,js,jumps,lightsaber"},{"level_0":119,"hack_vector":[[0.1522765011,-0.1132160872,-0.0190376565,0.0589677952,-0.0163530018,0.1431020051,0.1989111453,-0.0421423204,-0.043633353,-0.0192300733,0.0201024786,-0.061038401,0.1452748775,-0.0643752813,0.0538418815,0.0191204213,0.2183120102,-0.0110894712,0.0378282443,0.1308645755,-0.2289483696,0.0318929292,-0.0452286489,-0.0138156246,0.1403840184,-0.0286653396,-0.0380066,-0.1891164333,-0.0400815196,-0.0797167718,0.0734291524,-0.1095420122,0.0439867079,-0.0751316175,-0.0281820092,-0.01406861,0.11840076,-0.1254298985,-0.0387737155,0.0181538966,0.0584529489,-0.1332624704,-0.1660570651,-0.0271800756,0.0372142121,-0.054142423,0.0145360501,-0.0646292716,-0.0166567881,-0.2209993452,-0.1080752835,0.0093151256,-0.1027799919,0.0071928208,-0.1843683273,0.1653727293,-0.1509529203,0.0041615614,0.0174878836,-0.0853136927,-0.0629490465,0.0278461985,0.0663268864,0.0470752791,0.1277760416,0.0084817456,-0.1171099246,-0.140377,0.0273431595,0.0118114771,0.0596297011,-0.0371673703,0.0090874629,-0.1234082207,0.0067108464,-0.0976019353,0.193088755,-0.0136185456,0.0381564461,-0.1286709905,0.1153337955,0.1559201479,0.0527895167,0.1572359204,0.1218406782,0.1920517385,-0.1112361699,-0.0257019233,-0.0144790113,-0.0899742469,-0.1404896975,0.0743880197,0.0871490538,-0.0343201049,-0.0012162908,-0.019377863,-0.1447673738,0.2240991592,0.0393788405,-0.0613826811]],"hackathon_name":"StacsHack III","index":119,"project_description":"Using the brain force to control lightsaberIn-game screenshotStar wars and the quote \"I am with the Force, the Force is with me\". Also, brainwaves.You put on the Emotiv headset and control the lightsaber with your brain to defend the empire from the innocent younglings.We used Emotiv API and additional applications to control the human brain. The game was made in blender software.1) Emotiv.\n2) Emotiv.\n3) ???? (Emotiv probably)We spent 24 hours trying to make the Emotiv device work. And it works. Sort of.Never ever use the emotive SDK. Also, learnt to use blender and apply different software to work in pair.When the SDK actually works, we'll be able to analyse peeks and troughs from alpha and theta brain waves to determine the concentration and flow control of the user to master the use of the Force.StacsHack IIIMantas Ska\u010dkauskas\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 06:32 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Brain Force","project_tags":["blender","java","emotiv","python","c","git"],"project_url":"https:\/\/devpost.com\/software\/brain-force","keywords":"emotiv,force,brain,use,control,software,work,works,also,sdk,blender,younglings,determine,device,emotive,different,empire,ever,flow,defend"},{"level_0":120,"hack_vector":[[0.1585698277,-0.1507942528,0.0130471699,0.0963129029,-0.0411094129,0.1717503667,0.1810163558,-0.0735203624,-0.0381516963,-0.0121821035,0.013794682,0.031238189,0.1395524144,-0.0922296345,0.0238826387,0.0430669971,0.2504000366,0.0199860539,0.0647455081,0.0738308281,-0.1915144324,0.0280815419,-0.0505659729,-0.053349141,0.1807656735,-0.0316303037,-0.0591628514,-0.1988651454,0.0179319046,-0.0518269986,0.0411174856,-0.1117130071,0.0778250992,-0.0611132793,-0.0564916246,0.0092261173,0.1493511349,-0.1042896062,-0.0091248676,0.0727403238,0.0562901124,-0.1532267034,-0.1755822897,-0.0186681245,-0.0391022265,-0.018575877,0.0449712873,-0.0105111636,-0.0212421063,-0.1795765907,-0.0395357013,0.0336634181,-0.1202394217,-0.0253175441,-0.10671179,0.1338051558,-0.1556677818,0.0749297217,-0.0162197817,0.0388574079,-0.0185442884,0.0293990262,0.0603064336,0.072620593,0.1389795393,-0.044273518,-0.1279064566,-0.1616460383,0.0052160518,0.0075371135,0.0676657781,-0.0323902741,0.0131239379,-0.1594983786,-0.0506509431,-0.0710042641,0.2031078786,0.0227528941,0.0909302011,-0.1375559568,0.1334755868,0.1504638344,0.0208274033,0.1473961622,0.1545047611,0.1579184383,-0.144995898,0.0542732477,0.0117230117,-0.1104301065,-0.0920313895,0.103123188,0.0364055559,0.0170277581,0.0945943147,-0.0960141048,-0.0513039976,0.1469738334,0.1060548872,-0.0434705913]],"hackathon_name":"StacsHack III","index":120,"project_description":"De-Domesticating todolistQuestsLoginInventoryPantryAdd QuestAdd SubQuest to QuestOcculus Viking EatStacsHack IIIDewi-Tim Davies:\nDesigned Mechanisms, Algorithms for cost weighting, quest item selectionBalagardash Bashirov:\nJS implementation of functions, collect breadsticks,Conrad Cardona:\nPixel art design, contribs to weighting designJustin Glibert:\nFrontend Backend Web DevelopmentDewi-Tim Davies\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 07:02 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Code4Food","project_tags":["javascript","css","html"],"project_url":"https:\/\/devpost.com\/software\/stackhack","keywords":"stackhack"},{"level_0":121,"hack_vector":[[0.1509420425,-0.1180871055,-0.0357673205,0.0513924882,-0.0321249291,0.1435237676,0.2039024085,-0.034990523,-0.0241718851,-0.001885051,-0.0011864608,-0.0569990389,0.1411417723,-0.0828208923,0.0621094257,0.0295233745,0.2298164517,0.0163386576,0.0313419253,0.1144310459,-0.2310475707,0.0278981514,-0.0583100393,-0.0241746921,0.1356972307,-0.0104320534,-0.0443053618,-0.1792565435,-0.0092413956,-0.0810227171,0.0556998886,-0.1372889131,0.039075017,-0.0820498616,-0.039438691,-0.0036965765,0.1247700825,-0.1382613629,-0.045103997,0.0137348725,0.0343205929,-0.1404664963,-0.1645788103,-0.0151256248,0.046483025,-0.0544682071,0.0183249936,-0.0602561347,-0.0326006487,-0.2151507139,-0.1127868071,0.0095908036,-0.0954126045,-0.0108073903,-0.1564536244,0.1581794471,-0.132232964,0.0063741673,-0.0001467172,-0.0595268533,-0.0531914979,0.0355261005,0.0794240981,0.0591800734,0.1165799201,-0.0149522042,-0.1103973612,-0.1363193989,0.0361317657,0.0199289583,0.0723380893,-0.0419037417,0.0222379472,-0.1323492229,0.0013575536,-0.1116121486,0.1877435893,0.012722183,0.0333385542,-0.1377019137,0.1448356062,0.1650539637,0.0707575679,0.1650539041,0.1023974493,0.1946710199,-0.1053819284,-0.00900611,-0.0050040637,-0.0946329907,-0.1308059245,0.0643807873,0.0931826383,-0.0305770282,0.0328722186,-0.0125288628,-0.1292911172,0.2253306806,0.0318148285,-0.0792385638]],"hackathon_name":"StacsHack III","index":121,"project_description":"In a world of fake news, who can you trust other than the people of Twitter?We wanted a way of finding out what the average person thinks about anything and everything.Searches Twitter for opinions on a given subject.It's a website which makes a request to a node.js server, which retrieves and filters tweets to find opinions.Twitter API issues, client-server communicationThe CSS, and the excellent functionalityA lot of things about Node.js, JavaScript, and the Twitter search and embed APIs.Alexa integrationStacsHack IIIPeter Morton\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 07:01 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"What Does Twitter Think About...","project_tags":["javascript","html","css3","node.js"],"project_url":"https:\/\/devpost.com\/software\/what-does-twitter-think-about","keywords":"twitter,js,node,server,opinions,embed,given,functionality,finding,find,filters,excellent,everything,communication,css,integration,client,challenges,built,average"},{"level_0":122,"hack_vector":[[0.1638316959,-0.11937958,0.0021609045,0.095440574,-0.0404164866,0.1664825976,0.179193154,-0.045649007,-0.0375312418,-0.0160804559,0.0049174824,-0.0152679961,0.1569637507,-0.085097611,0.0231173243,0.0289148185,0.2348380387,0.0219202247,0.0748511478,0.0926487371,-0.2123960406,0.0230578166,-0.0448799282,-0.0285225026,0.1545755714,-0.0266035963,-0.064783752,-0.1823862642,0.0069864872,-0.0675008297,0.0520211868,-0.09524405,0.0599819571,-0.0635246858,-0.0386027843,0.0087897545,0.1546911001,-0.1247655675,-0.0303979199,0.0518818125,0.0623895302,-0.1503847539,-0.1781089604,-0.0160641503,-0.0008763198,-0.0383982323,0.032216128,-0.0495555662,-0.0025359883,-0.2090132833,-0.0902505368,0.0440560877,-0.1216320321,-0.0145039251,-0.1704354882,0.1500130743,-0.1559634507,0.0394311771,0.0166274998,-0.0098548252,-0.0345017053,0.0340055935,0.0731863678,0.0620276704,0.1384807825,-0.0166987069,-0.1037346721,-0.155122146,0.0087787053,0.0086885067,0.0705560744,-0.0288979728,-0.0059935986,-0.1434020102,-0.0291973855,-0.0791842639,0.2061613053,0.0157451946,0.0541146919,-0.1472290307,0.1110369638,0.1484975666,0.0277178045,0.1443843544,0.1438879073,0.1854869276,-0.115942806,0.0190829672,-0.0062764599,-0.1074969321,-0.1081790552,0.0928302258,0.0484433696,-0.0027169944,0.0586676933,-0.0563987084,-0.1000678018,0.2013289332,0.0749679506,-0.0560281128]],"hackathon_name":"StacsHack III","index":122,"project_description":"an app that helps students focused and motivatedhome screenStacsHack IIII worked mainly on the storage and retrieval of data for this project, it was both of our first times working on an android application and gave us opportunity to learn more about the techniques involved.Ashley Llewellyn\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 07:26 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"waves of focus","project_tags":["java","android-studio"],"project_url":"https:\/\/devpost.com\/software\/focus-rmfa1z","keywords":null},{"level_0":123,"hack_vector":[[0.1702930331,-0.1630291939,0.0052065584,0.0938230008,-0.0482284948,0.1625255495,0.1701049209,-0.0570900477,-0.0246744696,-0.0308640506,-0.0064488552,0.0374877639,0.1268040091,-0.0732710436,0.0117969885,0.0680354014,0.2407904118,0.0345864072,0.058389429,0.0834489837,-0.1950447559,-0.0014512736,-0.0479138233,-0.0615334697,0.1730704308,-0.0218433514,-0.0639493167,-0.1727222502,0.0259997658,-0.0826366022,0.0173424277,-0.0941098779,0.0747173503,-0.0536907092,-0.0422526635,0.0039638961,0.1445575804,-0.1176528931,-0.0157047696,0.0964458585,0.0698594153,-0.1353818476,-0.1647152156,-0.0313616917,-0.0429445207,-0.052662123,0.0545987636,-0.0104895011,-0.0220028721,-0.1885806173,-0.0428467095,0.0358426087,-0.1143605933,-0.0576985888,-0.1034838334,0.1497536898,-0.1439632177,0.0604563877,-0.0057387003,0.0517688468,-0.0199697409,0.0270447545,0.0430900864,0.0655370504,0.1446411461,-0.0474102385,-0.149639532,-0.1667214185,0.0016311979,0.0036571163,0.0652100295,-0.0320745893,-0.0258151963,-0.1532697678,-0.0641412586,-0.0564416796,0.2075433731,0.0318246409,0.080698818,-0.1481879801,0.1081982329,0.1561970264,-0.0045351475,0.1400714964,0.1661615968,0.1649835259,-0.1383032203,0.0811306983,0.0075915167,-0.1076813787,-0.0739829168,0.117937997,0.0340453237,0.0307608265,0.07830102,-0.1045503914,-0.0701963007,0.1678506136,0.1009429619,-0.0402652249]],"hackathon_name":"StacsHack III","index":123,"project_description":"It compilesCan we not?It compilesJava, Slick2d trial and error and sadnesseverythingBorks why notCode am hardHe's depressedStacsHack IIIDocumentation reader, \"ideas guy\", Imperial Bork selection.Victor Igodifo\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 06:59 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"This guy's a \"space knight\"","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/this-guy-s-a-space-knight","keywords":"trial,space,borks,built,challenges,code,compiles,depressed,error,everything,guy,hard,inspiration,java,knight,learned,next,proud,ran,sadness"},{"level_0":124,"hack_vector":[[0.1565414518,-0.1594466269,0.0153239397,0.0943618864,-0.056447722,0.1585965455,0.1688501537,-0.055486761,-0.0350488313,-0.0244206637,-0.0016213963,0.052774325,0.1319698691,-0.0835739523,-0.0036079036,0.0855987594,0.2590379119,0.0369729996,0.0574452244,0.0753906891,-0.1795875281,-0.0028282152,-0.0558234379,-0.0631674007,0.178366214,-0.0191777702,-0.0780702606,-0.1679761559,0.0418603532,-0.0755665228,0.0124948919,-0.0839768946,0.0801661387,-0.0464959852,-0.0391545817,0.0195845794,0.1453575492,-0.0996539965,0.0043332023,0.0948958695,0.0562526993,-0.1373614222,-0.1822596937,-0.0225816164,-0.0620166436,-0.0476506725,0.0487663932,-0.0009247435,-0.0076750941,-0.1726834625,-0.0136909615,0.0412488766,-0.1112133488,-0.0674113557,-0.0840131268,0.1446321607,-0.1539996564,0.0841164365,-0.0158954617,0.0728595331,-0.0008071265,0.0491413549,0.0458967872,0.0842670426,0.1407781392,-0.0542289913,-0.1458895653,-0.1777774096,0.0015876662,-0.003568064,0.0628531426,-0.0160935074,-0.0235422868,-0.1538363397,-0.0822959468,-0.0504022576,0.200389117,0.0290766805,0.1023674458,-0.1418506354,0.1096883342,0.1489080042,0.0016704797,0.1226418987,0.1667570919,0.1485025138,-0.1437065899,0.0860685483,0.0096940259,-0.1183700711,-0.062924318,0.1188005581,0.0194522105,0.0374885723,0.1029126197,-0.1124126837,-0.053077016,0.1371666789,0.1215135679,-0.0377816893]],"hackathon_name":"StacsHack III","index":124,"project_description":"Drink till getting Darth vaderPersonalLifemake people drunkMercuriel24 hoursWorks !Java, JavaFX, MercurielNumber of groupsStacsHack IIIKamran Razavi\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 06:59 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Drink Wars","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/drink-wars","keywords":"mercuriel,works,javafx,built,challenges,drink,drunk,groups,hours,inspiration,java,learned,wars,make,next,number,people,personallife,proud,ran"},{"level_0":125,"hack_vector":[[0.1566534638,-0.1584815532,0.0186203904,0.0832633972,-0.0539131686,0.1491250247,0.1719855964,-0.0487397052,-0.0313843787,-0.0412686616,-0.0078539336,0.0470505357,0.1291479766,-0.0889180675,-0.0168797225,0.0962294638,0.2618532479,0.0349279568,0.0468385592,0.0901889428,-0.186305359,-0.0110211102,-0.0540276952,-0.0658120289,0.1758586168,-0.0235902183,-0.0782951787,-0.1645578444,0.034108229,-0.0910740718,-0.0012628159,-0.0786117315,0.0824997351,-0.0405628569,-0.0284178406,0.0138584487,0.1477451175,-0.1118041649,0.0030485438,0.100632295,0.0571681075,-0.130603984,-0.1787314564,-0.0257267077,-0.0567524321,-0.0663835108,0.0585451461,-0.0096163815,-0.0144116282,-0.1820305735,-0.0172518939,0.0490651391,-0.1083718762,-0.0750069097,-0.0904423371,0.159891367,-0.1508069485,0.0746990815,-0.0196045358,0.0574930273,-0.0030533022,0.0428545251,0.0382477827,0.0830216333,0.1502720714,-0.0471012704,-0.1513511539,-0.1764796972,0.0019352913,-0.0031553302,0.0624321103,-0.0227429885,-0.0288678054,-0.1531241834,-0.0664467588,-0.0442807749,0.192969054,0.022975577,0.0987356231,-0.1444791108,0.1058500856,0.1562260538,-0.0014063306,0.1179815307,0.1596598327,0.1478075385,-0.1447027326,0.0750939399,-0.0009507571,-0.117450431,-0.0681883395,0.1152321696,0.0105736051,0.0318471715,0.0798113123,-0.1087731495,-0.0725000203,0.1419016123,0.11612124,-0.0355996042]],"hackathon_name":"StacsHack III","index":125,"project_description":"We're the droids they were looking forIt works.... sometimes :PStacsHack IIIIoannis Salliaris\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 06:54 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Asteroids","project_tags":["java","processing"],"project_url":"https:\/\/devpost.com\/software\/stacshackiii","keywords":"works,sometimes"},{"level_0":126,"hack_vector":[[0.1420687288,-0.1164507568,-0.0262480285,0.0343900323,-0.0309209339,0.1142459139,0.2021322995,0.0022394503,-0.0148387719,-0.0095484182,0.0097450484,-0.0560273454,0.1375400871,-0.0689441338,0.0724833012,0.0257054418,0.2258638591,0.0044569997,0.0355318673,0.1237692386,-0.2523711026,0.0263523031,-0.0451077707,-0.0329521522,0.1073893979,-0.0351404548,-0.037716601,-0.183834374,0.0051864656,-0.0934241861,0.0532665364,-0.111613445,0.0247072577,-0.0909454376,-0.0098781632,-0.0066798721,0.1055787578,-0.1507084221,-0.0635326579,-0.0012412423,0.0166588109,-0.1470499933,-0.1516444385,-0.0344086848,0.0582261421,-0.0670203716,0.0148854265,-0.0729881898,-0.0085160937,-0.1983801574,-0.1336466223,0.0032282111,-0.1097471938,-0.020403767,-0.1881195307,0.1668102592,-0.1236072704,-0.0188571978,0.042498704,-0.0892467648,-0.0738957897,0.0377514064,0.0754385144,0.0688078552,0.1076805592,0.006643727,-0.105901517,-0.1355585754,0.0353201441,0.0082489299,0.0696161836,-0.0525945127,0.0234764758,-0.1224352047,0.0071779015,-0.1495192349,0.1691748351,0.0008920396,0.0266734883,-0.1349994242,0.1271988451,0.1623755395,0.0516267978,0.163603574,0.1008412987,0.2008503824,-0.1067245901,-0.0100363232,-0.022790784,-0.090458177,-0.1357043535,0.0657626688,0.0845674351,-0.0371727385,0.0134241078,0.002604424,-0.1583705395,0.2145406604,0.0201890338,-0.0760231018]],"hackathon_name":"StacsHack III","index":126,"project_description":"Dashboard showing areas of interestWe are all native to countries outside the UK and often search for places to visit or consider moving to. However, we have found that current tools do not give us a good overview of a specific location.Presents points of interest (e.g.  food, social areas, etc.) near a selected area, crime statistics, weather data, broadband connection speed, etc.\nAllows the user to select the place they want to search for.JavaScript, CSS, HTML, JSON, NodeJSFinding APIs that would provide us with free data.Encompassing lots of different APIs into a usable, easy to read dashboard.APIs can be expensive!We hope to continue developing the product and introduce new information areas that would be of benefit. This includes creating different pre-set profiles that would auto select a range of points of interest to be displayed.StacsHack IIIN B\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 06:57 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AroundME","project_tags":["javascript","css3","html5","json"],"project_url":"https:\/\/devpost.com\/software\/aroundme-w785lc","keywords":"would,apis,select,etc,different,points,data,search,interest,areas,us,benefit,found,encompassing,allows,expensive,finding,food,free,displayed"},{"level_0":127,"hack_vector":[[0.1489574611,-0.113080211,-0.0265038684,0.0417475738,-0.0169613846,0.1379225403,0.2002519667,-0.0381871425,-0.026676964,0.0012064674,0.009775375,-0.0767369941,0.1456054896,-0.0725734755,0.0693703815,0.0134656262,0.2063839883,-0.004119656,0.04165278,0.1124218851,-0.2286442667,0.0563006289,-0.0492095463,-0.0171535667,0.1301470101,-0.0290820133,-0.0333710425,-0.1836139262,-0.0268008243,-0.0729749054,0.0713368207,-0.1301899105,0.0433697589,-0.0870067701,-0.0339520127,-0.0100462008,0.1241301224,-0.1404073238,-0.0508841947,-0.0047698068,0.0330255628,-0.1555680484,-0.1608408093,-0.028785497,0.0515106954,-0.0456325561,0.0129317334,-0.0722558945,-0.0216454584,-0.2051637024,-0.1403568685,0.0121615548,-0.1119871214,0.0134936757,-0.1846697479,0.1534115076,-0.1409734488,-0.0101754442,0.0275364388,-0.0881871507,-0.0775761083,0.0259535965,0.0774543732,0.0544239543,0.1014294699,0.0035798752,-0.1022929028,-0.1298900545,0.0307371244,0.0216429867,0.078663677,-0.0562216118,0.0286607463,-0.1204813719,0.0255753286,-0.1219446957,0.1814891249,-0.0000861117,0.0259951111,-0.1315233111,0.1328641623,0.154777348,0.0664990395,0.1627098769,0.1028367132,0.1881582588,-0.1091262475,-0.031511873,-0.0017935243,-0.0881123692,-0.138737902,0.0569244064,0.093712762,-0.0463061072,0.0157941189,-0.0039219148,-0.1435022354,0.2234530151,0.0238060951,-0.0782577395]],"hackathon_name":"StacsHack III","index":127,"project_description":"Type in the names of two celebrities, our website will gather data about them to calculate who would win.We always wanted to know who would win in a fight between Donald Trump and Barack Obama.Gathers data using Wolfram Alpha's api on each celebrity.Using the api and a proxy node server which must be running on the machine it is accessed from (still a work in progress)Bypassing the lack of a cross origin resource sharing policy that Wolfram Alpha have by using the node proxy.Barack Obama beats Donald TrumpBarack Obama beats Donald TrumpAdd celebrity images and winner image (lack of time)StacsHack IIII created the algorithm that combines the data we collect into one score which can be compared with the other celebrity's score. I also researched the api and designed some artwork for the website.I worked on the HTML and CSS for the website, designing it's layout and overall look, and deciding how the tags would link to the Javascript etc.Kathan Cheema\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 06:53 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Celebrity Smackdown","project_tags":["javascript","html5","node.js"],"project_url":"https:\/\/devpost.com\/software\/celebrity-smackdown","keywords":"celebrity,barack,obama,donald,using,trump,node,proxy,beats,lack,api,alpha,wolfram,fight,inspiration,images,image,gathers,accomplishments,add"},{"level_0":128,"hack_vector":[[0.1643251926,-0.1187841371,-0.0310959928,0.0600663126,-0.0437962599,0.1507276595,0.1838470101,-0.0426611006,-0.0094247926,-0.0348970667,0.0002501482,-0.0157068558,0.1355075687,-0.0694964975,0.035647545,0.0285135619,0.252599299,0.0230204519,0.037023101,0.1139773279,-0.2251060307,-0.0045151436,-0.0441394188,-0.0327400751,0.1371778697,-0.0142577672,-0.0405376181,-0.1743250638,0.0001901498,-0.0985058695,0.0331633054,-0.11890205,0.0512850359,-0.0780028626,-0.0242263377,-0.010898497,0.1328342259,-0.1299622059,-0.0457667522,0.0487944335,0.0578716621,-0.1169336513,-0.1661512107,-0.0285010375,0.0208436176,-0.0744603202,0.0371015295,-0.0435239561,-0.0375454351,-0.2100645453,-0.1019349992,0.0130948154,-0.1023948714,-0.0504935831,-0.1508221477,0.1692930907,-0.1214453578,0.0055346908,0.0132628893,-0.0298970193,-0.0472790785,0.01877583,0.0690257251,0.045802962,0.1376269013,-0.0185484905,-0.1298043877,-0.1518885046,0.0248798728,0.0199253075,0.0691539347,-0.0340577997,-0.0056031263,-0.1452303082,-0.0267435107,-0.1005935222,0.2083090991,0.0264965445,0.0420467183,-0.1424818933,0.1148006022,0.1687820256,0.0235772394,0.1656666547,0.1279112995,0.1823214591,-0.117483981,0.0191658475,-0.0113927387,-0.0981870592,-0.1190393269,0.0891018584,0.0658297315,0.0000988248,0.0321554169,-0.0493452214,-0.1186303124,0.2255118787,0.0532195456,-0.0684928074]],"hackathon_name":"StacsHack III","index":128,"project_description":"Sing along with Alexa and let her understand your music tastePartying.When you tell Alexa a line from song lyrics it can:Tune lyrics to feed into Alexa.It works and is actually quite cheeky.We got to learn all those new APIs.Sleep.--Team DarkStacsHack IIIJulijonas K\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 06:55 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Auto DJ","project_tags":["python","alexa","amazon-alexa","youtube","last.fm","nltk"],"project_url":"https:\/\/devpost.com\/software\/auto-dj","keywords":"lyrics,alexa,using,tell,song,songs,youtube,api,apis,feed,learn,last,interaction,inspiration,got,get,following,fm,flask,dj"},{"level_0":129,"hack_vector":[[0.1509298831,-0.0964032859,-0.0260758735,0.0687678456,-0.0308189094,0.1612152755,0.2011130899,-0.0343616679,-0.0329267867,-0.0173249803,0.0103574703,-0.0310956575,0.1503815502,-0.0680945069,0.056750644,0.0080241971,0.2282119542,0.0117287803,0.0336328447,0.1274589449,-0.22373721,0.0138743035,-0.0429541133,-0.0187330153,0.1456650347,-0.0159145556,-0.0383463874,-0.1780326515,-0.0211137645,-0.0654067844,0.0656906664,-0.1158108786,0.0338701047,-0.0649557561,-0.0430409685,0.002912299,0.1344389915,-0.1205012947,-0.0331360698,0.0382009819,0.0601808019,-0.1287457347,-0.1611495763,-0.0252365619,0.0491924249,-0.0564104579,0.0216201916,-0.0491155721,-0.0302424189,-0.2268484533,-0.1003737301,0.0008494087,-0.1097058803,-0.0044266116,-0.1655559391,0.1644922197,-0.1437600255,0.0092428289,0.0120597482,-0.0637170449,-0.0524206385,0.0205775239,0.0733707547,0.0423732623,0.1412178427,-0.0118409516,-0.1025632918,-0.1444441825,0.0371617787,0.0065728123,0.0484088287,-0.0278680939,0.0006003758,-0.1249434724,-0.01708409,-0.1063340455,0.2004108727,0.0048952531,0.0278073587,-0.1422995478,0.1209855452,0.1716626734,0.0404257067,0.1600591838,0.1172600612,0.2007597536,-0.1110843122,-0.001663369,-0.009218459,-0.0974419191,-0.1561900079,0.0793860331,0.0764403567,-0.0120669371,0.0200467538,-0.0238236301,-0.1234162748,0.2253258377,0.0461301357,-0.0482368954]],"hackathon_name":"StacsHack III","index":129,"project_description":"Using Alexa to command atom though voiceSometimes you have a break of flow when making commands, this allows you to make them with easeIt allows the user to make commands to atom through voiceWe used Node js for both programming Alexa commands and making the atom pluginAll the problems. Using librarys that were broken, St. Andrews firewallsAcually making the project we first definedWe learnt about using Alexa to create an application, and creating Atom pluginsExtend it for more commands, make it more robust when making commandsStacsHack IIIjamesbmoran\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 06:49 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hi D E","project_tags":["node.js"],"project_url":"https:\/\/devpost.com\/software\/hi-d-e","keywords":"commands,making,atom,make,using,alexa,allows,creating,first,firewalls,extend,ease,defined,voice,create,flow,built,broken,break,application"},{"level_0":130,"hack_vector":[[0.1501935869,-0.1229952127,-0.0321469605,0.034063261,-0.0112693459,0.1333085597,0.2033801973,-0.0382536016,-0.0127646895,-0.0301927328,0.015001067,-0.0541742556,0.1307447702,-0.0612758361,0.0585881248,-0.0133316154,0.2165139019,-0.010181373,0.0473969243,0.1295541972,-0.2516390085,0.0327167474,-0.0316807367,-0.0041726287,0.1093237698,-0.0295263212,-0.0206885897,-0.1672197133,-0.0337769277,-0.1137601882,0.0702372566,-0.1276672184,0.0271031614,-0.0790427253,-0.0093921069,-0.0438717455,0.108212471,-0.1450342387,-0.0585678667,-0.0224370752,0.0607277304,-0.127077654,-0.1400122643,-0.0519833043,0.0691730157,-0.0612956844,0.012873129,-0.0744074285,-0.0407536663,-0.2118761241,-0.1391551346,0.0169618111,-0.1060220897,-0.0085324375,-0.216483891,0.1534569561,-0.1320944279,-0.0526935011,0.045383513,-0.1037485152,-0.07289204,0.0206736904,0.073708877,0.0170900412,0.0923398882,0.029611785,-0.1103558242,-0.1146014929,0.0249480139,0.03664314,0.0660783574,-0.0475072786,0.0303221196,-0.1157425717,0.0233710147,-0.1324162185,0.1641107798,0.007519654,0.0090703582,-0.1345964521,0.1064891666,0.1539095044,0.0299598444,0.1852105856,0.1072623953,0.201280728,-0.09511628,-0.0385720059,-0.0364041701,-0.0635714754,-0.1262751818,0.0660580322,0.09194161,-0.0352483839,-0.0278121457,0.010987605,-0.1627248526,0.2184801847,-0.0001462924,-0.0639633462]],"hackathon_name":"StacsHack III","index":130,"project_description":"BANGER: BANG YOUR MATES!Initial board state.A player being shot.Wanted to bang my mate, didn't I?\nWe wanted a game about wall banging and haven't used 3D modelling, as such we built it top down and changed some mechanics to work as with it.Spawns 4 players into a small arena. Each player has controls on the same keyboard for movement and firing. This causes it to feel really interactive\/cosy. They can shoot walls to make them their colour, if a wall is already your colour you can shoot through it. The aim is to make everyone your colour by shooting them.We implemented a grid system that contains information about a board. Then every time the game goes through the main loop it checks if anyone is trying to move, if they are it moves them as appropriate. If a player presses fire then they shoot a \"laser\" from themselves in the direction they are moving. Firing only occurs if the player is moving to force fast paced play.For some reason certain keys were a little buggy while acting as the fire key but we mostly sorted it. \nNeither of us had ever used swing or other graphics systems for this sort of project and thus made that a bit annoying.Dat interface doe but mainly a function game even if it isn't the prettiest.Implementation of a game style project in swing.BANGER 2: Now with new dimensions\n(A 3D version)StacsHack IIII worked on design and initial development alongside Steven, then wrote code to allow the players to move and shoot correctly, as well as displaying the lasers and checking what was hit by them.Steven McWilliam\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 06:50 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"BANGER","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/banger","keywords":"game,shoot,colour,player,fire,built,firing,swing,banger,make,wanted,moving,used,wall,project,feel,ever,every,everyone,fast"},{"level_0":131,"hack_vector":[[0.1263953,-0.0749812722,-0.0395314172,0.0405666865,-0.0277535096,0.1253304631,0.2022253424,-0.0173311196,-0.0332222991,-0.0090617426,0.0136934537,-0.0572623163,0.1378535479,-0.0752109438,0.0639725626,0.0072937873,0.2227759659,0.0082323169,0.0399707481,0.1156130284,-0.2211578935,0.0195659827,-0.0538762473,-0.0336917713,0.1019789726,-0.0047555268,-0.0345545225,-0.193429783,-0.008259126,-0.0767407194,0.061452128,-0.1289020777,0.0340831615,-0.0914558992,-0.0258946922,0.005034647,0.1153739393,-0.1240556166,-0.0584102273,0.0235631131,0.0394843817,-0.1374395341,-0.1647683233,-0.0256392546,0.0536877848,-0.0718298256,0.0137298154,-0.0745828673,-0.0339523293,-0.217415899,-0.1338811517,0.0017565419,-0.0949138701,-0.0170078147,-0.1649723947,0.1713758856,-0.1367110461,-0.0009108618,0.006222601,-0.0867949575,-0.0530770458,0.0317427181,0.0818461552,0.0597188063,0.1362837255,-0.015120537,-0.1057584956,-0.1306916624,0.0502076447,0.0083307223,0.0588962957,-0.0454344749,0.0020702812,-0.1268381029,0.0145905688,-0.1269867718,0.1932027787,0.0176106859,0.0270157568,-0.1429479122,0.1392353922,0.1605603546,0.0841449127,0.1584147513,0.102107048,0.2011901885,-0.0992684513,-0.0203530453,0.0002553444,-0.0934738666,-0.1524491161,0.0546453968,0.1023787111,-0.0262994822,0.0122061828,-0.0098159211,-0.1542036235,0.2262610644,0.0182909425,-0.0808673725]],"hackathon_name":"StacsHack III","index":131,"project_description":"An Alexa skill that gets your events from FacebookWe wanted a way to keep up with our events on Facebook, and wanted to make a hands-free way to interact with themGets events that are coming up, and events that are happening in a given locationUses the Facebook API to get events\nUses bing maps to get geocode from a query\nUses SUTime natural language processing to parse time instructions (e.g. tonight, next week, before May)\nAll this included in an Amazon Alexa Lambda, written in JavaFacebook API keys kept expiring\nThe Alexa API is very difficult to debugCreated a working interface for getting events\nUsed geocoding to get locations\nUsed natural language processing to get timesNotifications\nInteract with events (accept invitations etc.)\nGoogle calendar implementationStacsHack IIIJosh Wood\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 06:50 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Alexa Events","project_tags":["amazon-alexa","facebook-graph","bing-maps"],"project_url":"https:\/\/devpost.com\/software\/alexa-events","keywords":"events,get,facebook,uses,alexa,api,interact,processing,language,next,natural,wanted,used,way,built,hands,google,given,getting,gets"},{"level_0":132,"hack_vector":[[0.1553067863,-0.0997568816,-0.0346444622,0.0379705392,-0.0201128293,0.1380504966,0.2121040523,-0.0325657278,-0.0158804245,-0.0015852405,0.0150503879,-0.0688839033,0.137154147,-0.0568825081,0.0799839795,-0.0136078661,0.1907459497,-0.011638823,0.0384408198,0.1196999624,-0.2466993779,0.0290104356,-0.0417134278,-0.0074067153,0.1038910896,-0.0225982033,-0.0169847868,-0.1694587171,-0.0318443961,-0.0917189792,0.0727988631,-0.1231280118,0.0248023439,-0.0903386027,-0.02565098,-0.026035348,0.1094463021,-0.1421155334,-0.0738971606,-0.0082991319,0.0506315194,-0.1233158484,-0.1291046739,-0.0393238328,0.0765737817,-0.0547710173,0.0080813058,-0.0794562995,-0.0312124286,-0.2106513828,-0.1502420455,-0.0020551381,-0.1136317477,0.0114400387,-0.1996781975,0.1509132385,-0.1351850629,-0.0378426574,0.0380444229,-0.1066407636,-0.0797890797,0.0161047708,0.0824666023,0.030381592,0.1045353264,0.0132073704,-0.103599526,-0.1096865758,0.033164084,0.0265192781,0.0552848876,-0.0476540066,0.0180158485,-0.1208505332,0.0201085862,-0.143923834,0.1794597208,0.0136516187,-0.0025560753,-0.1372848302,0.1185391471,0.1546273679,0.0522332825,0.1684372872,0.1056231633,0.2068817765,-0.0822835267,-0.0283922199,-0.013030652,-0.0803689808,-0.1513160765,0.0573125891,0.1079626903,-0.0384135619,-0.0120233316,0.0159601718,-0.155993849,0.2339040488,0.0048632296,-0.0638265759]],"hackathon_name":"StacsHack III","index":132,"project_description":"The personal assistant that every coder needs.You know what, I am ridiculously tired of writing the same code over and over again. Would it not be better if somebody else wrote them for me?? This is where Diane comes into play. This Amazon Alexa-inspired helper with a voice interface is qualified coder that will save you the effort of writing endless \"print hello worlds\" and create an ideal environment for your creativity.Listens patiently for you to give it pseudo-code to translate into a programming language (Java, C and Python supported so far), as well as acting as a vocal command line interface to save you typing all those \"cd\"'s and \"mkdir\"s.Diane is a parser that uses the sphinx4 Java library to parse voice input from either a microphone or a wav file into pseudo code or bash commands, which then get executed.To reliably recognise human speech, sphinx4 has to be trained on a specific human's voice, which requires a large dataset of recordings and a knowledge of machine learning. We avoided that problem by narrowing down the dictionary to the bare minimum needed, which, as we found out, makes the speech recognition more reliable.\nWe have also had to dance around homonyms such as \"four\" and \"for\" and \"two\" and \"to\". Eventually Diane should be smart enough to deal with ambiguity from context, but that is beyond the scope of a 24-hour hackathon.We have familiarised ourselves with a speech recognition library and strengthened our knowledge in parsing.Speech recognition is a fiddly tool and natural language parsing is much harder than it seems!Support for more expressions, commands and languages, as well as better AI and the ability to deal with ambiguity.StacsHack IIICommandsVictor Vasilyev\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 05:30 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Diane","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/diane","keywords":"speech,diane,code,recognition,voice,parsing,save,commands,pseudo,deal,sphinx,writing,language,knowledge,java,interface,library,human,better,well"},{"level_0":133,"hack_vector":[[0.1508714259,-0.1607257426,0.0195782632,0.0978689864,-0.053112939,0.1586050242,0.1723362803,-0.0555694588,-0.039122425,-0.0224388819,-0.0077787698,0.0616029873,0.1266256869,-0.0782982782,-0.0163088609,0.0889942348,0.2595794201,0.0443301052,0.0517394282,0.0732684731,-0.1684487611,0.0062899468,-0.04840675,-0.061069347,0.1956726909,-0.0121233063,-0.0801359341,-0.179622367,0.041823566,-0.0698422417,0.0151059134,-0.0912031755,0.0866541862,-0.045611836,-0.0390929431,0.0219820645,0.1478864253,-0.0923066214,0.0175026171,0.1051681787,0.0608193167,-0.1550049484,-0.1841801852,-0.0361708663,-0.067987971,-0.0375896916,0.0500540622,0.0110153817,-0.0199836697,-0.1678703427,0.0064563574,0.0391451791,-0.1067571864,-0.0685437843,-0.0726489201,0.13819094,-0.1604878306,0.0829347968,-0.0212936383,0.0798447505,-0.0012264163,0.0423858985,0.03981838,0.072019279,0.1439455301,-0.0600695461,-0.1479082108,-0.1770092994,0.0102484794,-0.0026826637,0.0587710924,-0.0243015308,-0.0177011136,-0.1443642825,-0.0921085775,-0.0472645201,0.1842909008,0.0280770026,0.1180025786,-0.1388431042,0.1035647988,0.1466327608,0.0006960536,0.127025798,0.1584576815,0.1371604949,-0.150880754,0.0974814668,0.0157374218,-0.1259218305,-0.0558466949,0.1202014238,-0.0020594215,0.0439199172,0.1012059227,-0.1141543314,-0.0462335795,0.1145025194,0.1255978644,-0.0256430078]],"hackathon_name":"StacsHack III","index":133,"project_description":"playing game by facial expressionsJ.P. Morgan ChallengeStacsHack IIIDaria Savanovich\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 06:47 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Ninja kittens","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/ninja-kittens","keywords":"ran,proud,ninja,next,morgan,learned,kittens,inspiration,challenges,challenge,built,accomplishments"},{"level_0":134,"hack_vector":[[0.147996664,-0.0789414048,-0.0309593193,0.0390604399,-0.0248066355,0.1321458369,0.2037165463,-0.0161759164,-0.0260660779,0.0046962388,0.0155425146,-0.076964736,0.1497301757,-0.0702115372,0.0827615708,-0.0098297056,0.1978720725,0.0020211304,0.0291174781,0.124543272,-0.2283468843,0.0190158132,-0.056979645,-0.0069953785,0.114361167,-0.0194028616,-0.0306119192,-0.1746597737,-0.0256733708,-0.0798550099,0.0638498962,-0.1175399572,0.0149891917,-0.0963242725,-0.034368135,0.0032796632,0.1132701114,-0.1391385496,-0.0707805008,0.0045616855,0.0343028679,-0.1147610247,-0.1375416815,-0.0093840593,0.0762204453,-0.058525566,0.0158044826,-0.0881249234,-0.0291879158,-0.2121699899,-0.151915282,0.002540631,-0.109154515,0.0145769753,-0.1778023392,0.176075384,-0.1213768572,-0.0151870279,0.0200708993,-0.1106283367,-0.0703496113,0.0207160413,0.0819180012,0.0593201034,0.12144503,0.007381619,-0.0951105282,-0.1152620018,0.0284939054,0.0062144375,0.0542988889,-0.0379347317,0.0134633658,-0.1185997799,0.0351473689,-0.1276516318,0.1951357126,-0.0004024015,0.0002809282,-0.1366167963,0.1381379962,0.1625370681,0.0782962069,0.1382764578,0.0960475355,0.2114588469,-0.0784313604,-0.0430908687,-0.0037981814,-0.0775765851,-0.1656193435,0.0492984578,0.1075196639,-0.0391909704,-0.0015914446,0.0091339657,-0.1575316787,0.2434404492,0.0092221815,-0.0705637857]],"hackathon_name":"StacsHack III","index":134,"project_description":"Social media alexa appThis currently no social media skill for the alexa. We wanted to take the useful aspects of social media and them easily accessible.Uses multiple APIs from to get data from your social media profiles and make posts. Once authorisation is given for all APIs we tried to use we can easily implement all three of our target social medias Instagram, Facebook and Twitter.We used AWS to create a Lambda function that used the APIs to retrieve data and send post requests based on the intents that were input (including custom slots for comment posting) into the alexa skill.The AWS lambda function does not allow for extra node libraries to be brought in. This makes finding example code online quite difficult. The API authorisation was also a major problem.We managed to make the alexa work with instagram and had working code for posting comments that unfortunately did not fully translate through the alexa skill. We also have the twitter API working outside of the lambda function but again could not fully bring everything together.We learned a lot about node and skills. We feel a lot more confident using the social media APIsAdd more functionality and more APIs for a better experienceStacsHack IIIChris Rauch\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 06:47 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Social Notes","project_tags":["javascript","amazon-web-services","node.js"],"project_url":"https:\/\/devpost.com\/software\/social-notes-3qr1di","keywords":"social,apis,alexa,media,lambda,function,skill,make,lot,learned,instagram,easily,fully,posting,data,code,aws,authorisation,api,also"},{"level_0":135,"hack_vector":[[0.1668938547,-0.1130565777,-0.0085442169,0.0886001512,-0.029336296,0.175878793,0.2066686004,-0.0712177604,-0.0307460483,-0.0071784151,0.0110484939,-0.0235129111,0.157624796,-0.0902532265,0.0356973112,0.0196985342,0.2454031408,0.0241484269,0.0543124229,0.0943909064,-0.1889827847,0.0305781886,-0.0736620799,-0.0369863808,0.1667023152,-0.0090376092,-0.0570259206,-0.2031845599,-0.0118100252,-0.0518974029,0.0582010411,-0.1310165524,0.0728614852,-0.0826363415,-0.0647005513,0.0199169721,0.1428779215,-0.1066873372,-0.0267258752,0.04785157,0.053872928,-0.132400617,-0.17302683,-0.0058108028,-0.0040455861,-0.0415551327,0.0324566998,-0.0491687246,-0.0397888459,-0.2010384351,-0.0852607116,0.0246231593,-0.1090793312,-0.0098089091,-0.1041499078,0.1562999487,-0.1513037533,0.0451621711,-0.0278423168,-0.0161144882,-0.0312180854,0.0314620174,0.0897414908,0.0634819642,0.138862744,-0.0318776816,-0.1225255579,-0.1483780146,0.0126122376,0.0197152309,0.0640784577,-0.0257807691,0.0079809744,-0.1464842856,-0.0194243509,-0.0695526302,0.2240680754,0.0196166951,0.0572323091,-0.1433934867,0.1389175355,0.1502947062,0.0672385022,0.1255470812,0.1236333549,0.1738986373,-0.1043893546,0.0083330823,0.0201736856,-0.1008628309,-0.1210835055,0.0780863538,0.059307389,0.0099087181,0.0622521453,-0.0681349784,-0.0865136012,0.1912581772,0.0654573739,-0.0710030869]],"hackathon_name":"StacsHack III","index":135,"project_description":"Use Amazon Echo to communicate with GitHub, including reading notifications, browsing issues, pull requests and moreand more!Main server runs on AWS Lambda using Python 2.7 (sadly Python 3 isn't available on Lambda yet), while the sign up runs on Flask with Python.StacsHack IIIPaul Sinclair\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 06:39 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"GitHub Echo","project_tags":["alexa","amazon-alexa","amazon-web-services","python","html5","javascript","css3","json"],"project_url":"https:\/\/devpost.com\/software\/github-echo","keywords":"get,python,activity,runs,message,lambda,open,recent,find,commit,done,features,main,details,flask,check,hear,aws,issues,available"},{"level_0":136,"hack_vector":[[0.1379776895,-0.0800362602,-0.0168699976,0.0575363673,-0.0260360893,0.164525494,0.2009183317,-0.0525961407,-0.0306060743,-0.0127991466,0.0201450344,-0.0594417602,0.1429460645,-0.0689619854,0.0477231629,0.0109009054,0.2291281074,-0.0045857029,0.0531857312,0.1281589866,-0.2232637256,0.033490099,-0.0507665537,-0.0039586141,0.1376141608,-0.0170785915,-0.0364838354,-0.1800024658,-0.02973371,-0.0788988248,0.0681963414,-0.1155417711,0.0456979945,-0.0734181032,-0.0155844642,-0.0051650419,0.1304060072,-0.1188890412,-0.0394322611,0.0037673579,0.0544187874,-0.1402290016,-0.1604572535,-0.0295309722,0.0357739851,-0.0523996316,0.0039396151,-0.0596378036,-0.0147068314,-0.2163141072,-0.1112234816,0.0207548644,-0.1021699905,0.0118949888,-0.1972039342,0.148074463,-0.1557270288,0.0016295074,0.0217161551,-0.0824181139,-0.0484417975,0.0199444797,0.0764342621,0.0427729674,0.1190415323,0.0126614477,-0.0986452997,-0.1554785818,0.0335960127,0.0222147498,0.0627901554,-0.040434625,0.0248568505,-0.1236448586,0.0131800305,-0.1091306731,0.1900481135,-0.0083034048,0.0335608087,-0.1381557584,0.1072703153,0.1500044763,0.0647064224,0.167888999,0.1143345907,0.1915070415,-0.1154881716,-0.0382165723,-0.0205844473,-0.0857159868,-0.1419290751,0.067063041,0.0882060304,-0.0391997732,0.0119130649,0.0003594885,-0.1381295472,0.2356506139,0.0314051919,-0.0734101683]],"hackathon_name":"StacsHack III","index":136,"project_description":"Share your lightsaber \"vhuoooms\" with the world, thanks to MySaberInspired by our immense love of Star Wars, we wanted to bring the experience of owning your own lightsaber to the world in the convinced of being in your pocketYou can record your own voice or pick from a database of other recorded lightsaber sounds so pose as yours, when you swing your phone with all your Jedi might, it will sound just like the real thing!We used Python (using flask) for the sound server and Java (using Android Studio) for the UI and functionality of the appGetting the audio data between the server and the appCompleting this task and learning everything we did to overcome our challengesAndroid Studio mainly, especially android networkingGalactic Domination!! (or maybe a smartwatch app or something)StacsHack IIII was moral supportSet up motion sensors in Android Studio and made phone load and play sounds when motion is detected.I used Android studio to record the sound for the lightsaber noises. I also made the graphic for the UI.Daniel Akinola\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 06:38 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MySaber","project_tags":["flask","java","android-studio","python","python-package-index"],"project_url":"https:\/\/devpost.com\/software\/mysaber","keywords":"android,app,studio,sound,using,lightsaber,challenges,server,getting,immense,inspiration,inspired,world,java,jedi,functionality,learned,learning,like,galactic"},{"level_0":137,"hack_vector":[[0.152373746,-0.1486870497,-0.008425829,0.0849246383,-0.0498435237,0.163977325,0.1838848442,-0.0642659515,-0.02081923,-0.0237481128,0.0094229877,0.0166009273,0.1533976048,-0.0685593933,0.0325950161,0.0611103401,0.244336158,0.0229281299,0.0488910638,0.0964973047,-0.2048868686,0.007977725,-0.0569419749,-0.0527979098,0.1592929065,-0.0203782674,-0.0539966077,-0.185333848,0.0071000834,-0.0679381415,0.0457148999,-0.0951979682,0.0648715198,-0.0684677809,-0.0424959958,0.0048216293,0.1347455233,-0.1165666506,-0.0217537973,0.071517393,0.0602421984,-0.1363446265,-0.1736942232,-0.0276932381,-0.0167994667,-0.0484846532,0.0394922979,-0.024930004,-0.0295826495,-0.2025492787,-0.0681032166,0.0206254199,-0.1081924438,-0.055531051,-0.121250622,0.1588627994,-0.1403046995,0.0496152453,-0.0049561798,0.0151095446,-0.0296969451,0.0307590589,0.0557256229,0.0701721758,0.1340678036,-0.0353837833,-0.1347760856,-0.1643118262,0.0200884193,0.0012798195,0.0527104586,-0.0269609317,-0.0122465538,-0.1486606896,-0.070398286,-0.0661213696,0.2223719954,0.0165708903,0.06341324,-0.1453184187,0.1140760183,0.1636576802,0.0188877396,0.1366093159,0.1497998089,0.1823677272,-0.1258525252,0.0523541421,0.0076675275,-0.1047204286,-0.0992095619,0.1096395999,0.0520821363,0.019286843,0.0644499511,-0.0826822817,-0.0828842297,0.1897396147,0.0833797827,-0.04705479]],"hackathon_name":"StacsHack III","index":137,"project_description":"It's like Chaos Monkey, with AlexaWe wanted to build cool dev-ops tools with alexaIt can manipulate docker and do stuffPythom, some redis, some docker and trials with alexaStacsHack IIIHarry Reeder\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 06:29 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"DockBlock","project_tags":["python","docker","alexa"],"project_url":"https:\/\/devpost.com\/software\/dockblock","keywords":"alexa,docker,wanted,trials,build,built,challenges,cool,dev,dockblock,inspiration,learned,manipulate,next,ops,proud,pythom,ran,redis,stuff"},{"level_0":138,"hack_vector":[[0.154050976,-0.1609113663,0.0194084719,0.0971282274,-0.0567775592,0.1580971479,0.1629744172,-0.0569238774,-0.0347823948,-0.0214524586,-0.0020949247,0.0548330471,0.1289391965,-0.0777821615,-0.0083790524,0.095890671,0.2513843179,0.039118208,0.0491802543,0.0748015568,-0.1749707609,-0.001282712,-0.0540137328,-0.0623147599,0.186851725,-0.0157811716,-0.0780999139,-0.1735676229,0.0408915468,-0.0739074349,0.0120851994,-0.0841357782,0.0821678936,-0.0442658588,-0.0385059938,0.0260720626,0.1484354436,-0.1002948657,0.0121607939,0.1094047949,0.0562694967,-0.1426929384,-0.1833244711,-0.029022323,-0.0701143742,-0.0447828136,0.0534937121,0.005339744,-0.0138409827,-0.1742244065,-0.0050671934,0.0425664,-0.109225437,-0.0667778999,-0.0797529966,0.1418838501,-0.1567678005,0.0878995061,-0.0209068377,0.0739028901,-0.0039228019,0.0427529812,0.0393337198,0.086919792,0.1465876102,-0.0591257811,-0.1466010511,-0.1777799278,0.0022123982,-0.0092349024,0.0595665947,-0.0222895239,-0.0220995806,-0.1475652754,-0.0833069384,-0.0417998284,0.1952324957,0.0258964077,0.1082312092,-0.1436233371,0.1055859476,0.154017508,0.0005588157,0.1207268536,0.1611422002,0.1417408586,-0.1511979699,0.088554956,0.0117254378,-0.1230484471,-0.061916884,0.1201341972,0.0077657579,0.0389259495,0.0996841416,-0.1120679453,-0.0466746204,0.1260965317,0.1251308024,-0.0297499727]],"hackathon_name":"StacsHack III","index":138,"project_description":"we love snax & haxinspired, sponsored and motivated by snax.StacsHack IIIKirill\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 06:22 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Snackshack","project_tags":["java","emotiv","python","netbeans"],"project_url":"https:\/\/devpost.com\/software\/snackshack","keywords":"sponsored,snax,motivated,inspired"},{"level_0":139,"hack_vector":[[0.1455073804,-0.1485813558,0.0142650781,0.1029660702,-0.0535049029,0.1635689735,0.1584134102,-0.0544356741,-0.0393396914,-0.0195351485,-0.0114137651,0.0549464487,0.1268154532,-0.0814511552,-0.0158814304,0.0954387188,0.2477127761,0.0458869487,0.0591203831,0.0637362972,-0.1693911701,-0.0092569711,-0.0556215271,-0.0637523383,0.1914313883,-0.0151117491,-0.0890674442,-0.1731480509,0.0404455736,-0.0642591566,0.014685601,-0.0853340924,0.0856229961,-0.0332351103,-0.0481556095,0.0348698571,0.146292299,-0.0900445729,0.0251164809,0.1133406609,0.0603023171,-0.1433285177,-0.1916975528,-0.0259212796,-0.0759726465,-0.0511816144,0.045710139,0.00905779,-0.0040688538,-0.1785441786,0.0026829448,0.0452821553,-0.1063160896,-0.0608316585,-0.0793988258,0.1434586495,-0.1725641787,0.0932103097,-0.0243590735,0.079358682,-0.0038913854,0.0438293256,0.0327368453,0.0864708126,0.1468465775,-0.0555710495,-0.1363552213,-0.1829726994,0.0084741907,-0.0077086631,0.0621210225,-0.0266333111,-0.0285965949,-0.1422283351,-0.0776512027,-0.030698698,0.1954973787,0.0270304717,0.1146806628,-0.1436252594,0.0991101861,0.1443583667,0.012381833,0.1198040992,0.1644227356,0.1524692923,-0.1449648291,0.0889463723,0.0202338696,-0.1189053059,-0.0578201413,0.1147959009,0.0084043536,0.0371833481,0.0956962481,-0.112538591,-0.0468219556,0.1251057535,0.1310930997,-0.0371056832]],"hackathon_name":"StacsHack III","index":139,"project_description":"Real-time collaboration for Atom (StacsHack 2017)StacsHack IIIBen  Banerjee-Richards\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 06:24 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"neutrino","project_tags":["javascript","css"],"project_url":"https:\/\/devpost.com\/software\/neutrino","keywords":"neutrino"},{"level_0":140,"hack_vector":[[0.1663222015,-0.1285510957,-0.0114329811,0.0657277107,-0.0302105285,0.1510162652,0.1969757676,-0.0456509367,-0.0262487624,-0.0205136258,0.0220393296,-0.0283260904,0.1548873484,-0.0702724382,0.0390078872,0.0161425695,0.2319314182,0.0108012464,0.0483421311,0.1108881384,-0.2257762998,0.0339169241,-0.0463564135,-0.0187080093,0.1431681067,-0.0299071595,-0.0488370024,-0.1816135049,-0.0078478847,-0.088816151,0.0652461126,-0.1040223986,0.0459448211,-0.074216716,-0.0122532286,-0.0090243882,0.1422500312,-0.1366985887,-0.0472419001,0.0095437896,0.0607296601,-0.1524522454,-0.1614886075,-0.0303385872,0.0267002676,-0.0379864462,0.0251035839,-0.0598040819,-0.0251146071,-0.2049854249,-0.1194843352,0.0388528258,-0.1218883246,-0.0130895423,-0.1886375844,0.1560406387,-0.1395377219,-0.0029088145,0.039481733,-0.0582433343,-0.0538656451,0.0303114746,0.078420572,0.0484274849,0.113131173,0.0036552309,-0.1143188402,-0.1380642802,0.0094571775,0.0202955026,0.0647624508,-0.0333665535,0.0234553833,-0.1341032237,-0.0117607173,-0.1110149622,0.186680153,-0.0013461089,0.0309332181,-0.1395421028,0.1079128459,0.1567611545,0.0234684628,0.1596421003,0.1273885965,0.1925693303,-0.1201250628,-0.0127156163,-0.0202557798,-0.0919797868,-0.1165123507,0.0918096378,0.0607151389,-0.0150846364,0.0292015728,-0.0291634258,-0.1268979311,0.2175189108,0.0373185836,-0.0517625324]],"hackathon_name":"BCUHack 2.0","index":140,"project_description":"AR card based fighting gameSomeone wanted an AR app for their final year project, we took it and made something completely different.Has an AR fight between two cards where they can do different kinds of hits.Vuforia gave us the AR and then we made a fight scene on top of that.Making images that would be recognised easily.We have something workingAR and some game dev stuffWorld dominationBCUHack 2.0I worked on character animations, UI and bug fixing.Connor Bradley\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 04, 2017 10:01 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"FightAR","project_tags":["unity","vuforia"],"project_url":"https:\/\/devpost.com\/software\/fightar","keywords":null},{"level_0":141,"hack_vector":[[0.1486627907,-0.0911945775,-0.0224727951,0.0347309634,0.0003252612,0.1356866956,0.2047173828,-0.0377543345,-0.0324376412,0.0268126074,0.0181749202,-0.1003650054,0.1485399008,-0.0820483342,0.0790147111,-0.0035361142,0.1977134645,-0.0116211725,0.0458578281,0.1111633331,-0.2260562479,0.0653256848,-0.0659485906,-0.0091341408,0.1309586018,-0.0319384001,-0.0321647711,-0.1997680068,-0.0328268372,-0.0625447035,0.0857711956,-0.1394756287,0.0470896959,-0.10758432,-0.0421565361,0.0044894409,0.1169233993,-0.1346032023,-0.048311092,-0.0157368612,0.0280942526,-0.154676944,-0.165283978,-0.0119991982,0.0604708679,-0.0289837774,0.00904484,-0.0902414769,-0.0203051697,-0.1943526417,-0.1549240649,0.0185323711,-0.1164563745,0.0437031649,-0.1811029166,0.1497732699,-0.1450646818,-0.0055741211,0.0148647036,-0.105178155,-0.0714537725,0.023160588,0.0922996923,0.0613826625,0.1036003903,0.0046672407,-0.085445784,-0.1164272726,0.0264697764,0.0202433951,0.0775405616,-0.0562960692,0.0374481343,-0.1156746522,0.0557867102,-0.1190870777,0.1834217161,0.0000053466,0.0170475226,-0.1212937832,0.1441101432,0.1430203468,0.0994738564,0.1439045668,0.0858492404,0.1907063723,-0.0844863132,-0.0493957177,0.0121801924,-0.0743587464,-0.1392077059,0.0359024704,0.0981883183,-0.0443908907,0.0077065364,-0.0006072106,-0.1423590779,0.2071743608,0.0091960886,-0.0840448663]],"hackathon_name":"Coventry University Computer Club Hackathon","index":141,"project_description":"Sentiment analysis depending on polarity and subjectivity from scraped posts from chosen users\/hashtags on twitter.SomedevsThe election in America and head to head fight between Donald Trump and Hilary Clinton for running for the president.Sentiment Analysis on Twitter Posts using the Twitter API\nCollect tweets by using input from a user (Username or #ashTag)\nTweets are analysed and evaluated using Sentiment Analysis\nMachine Learning used for automation of the program\nAnalysis plotted on a graph to visualise public opinion on the matterWe have built it by using Twitter API, Python and MySQL database. In python we have used multiple libraries, such as; TextBlob, Matplotlib and PyMySQL.Twitter API Limitations:\n180 Requests\/15minutes\nPyQt4 GUI:\nNot extremely appealing\nLimited customisability\nMatplotLib type errorsAchieved our main aim which was using sentiment analysis depending on polarity and subjectivity from scraped posts from chosen users\/hashtags on twitter.Using the Twitter API, larger team needed.Further development of the project with more intuitive front-end design and analysis.Coventry University Computer Club HackathonI have been a part of the team that has been focused on creating the database and connecting to it through Python. Have helped in using the Twitter API to scrape the tweets that we have used in our project.I have created the database and hosted it on the AWS for ease of access and convenience for all members of the team. Secondly I have created the GUI and connected the button to correct functions and ensured correct functionality of graph plotting. Finally, along with the rest of the team - I was a part of many debugging processes that occurred during the production of the project.Took part in data scraping via Twitter API and Python and storing such data in a database ready for further analysis for the team. I also supported other members when they reached difficulties and ensured everybody was on the right page to reach the deadline with a high quality product produced.Critical back-end functionality, data scraping and analysis programming. (Python, PHP, MySQL, HTML\/CSS, JS)Dawid Lominski\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 04, 2017 01:07 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SentiTweet","project_tags":["twitter","python","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/sentitwitter-sj62y9","keywords":"using,twitter,analysis,api,sentiment,built,posts,head,matplotlib,tweets,used,python,front,evaluated,extremely,errors,end,fight,visualise,graph"},{"level_0":142,"hack_vector":[[0.1711732,-0.13768062,-0.0255774669,0.0840905383,-0.0331022553,0.1508022994,0.1845424622,-0.038320411,-0.0228864755,-0.0288867615,0.0001930396,-0.0214516241,0.1509067863,-0.0672413483,0.0451858491,0.0238109175,0.2171351463,0.0121690128,0.0467909947,0.1076077968,-0.2275318503,0.0196009055,-0.049802538,-0.0208490584,0.1428124756,-0.0334520154,-0.0523254871,-0.171727553,-0.0264153704,-0.0802311525,0.0581160113,-0.0982517302,0.0574532151,-0.058747571,-0.0286555178,0.0025653599,0.136551246,-0.129994005,-0.0376255587,0.0416251197,0.0666811913,-0.1430595219,-0.1757899374,-0.0195195563,0.0107772844,-0.0513809174,0.0317436494,-0.0655119494,-0.0253116935,-0.2152821869,-0.1110008061,0.0272744689,-0.1120927483,-0.0182645731,-0.1780322343,0.1555702686,-0.1486613452,0.0178636406,0.018402053,-0.0294706989,-0.0578020923,0.0394405685,0.057027258,0.0400887839,0.1253792793,-0.0056567048,-0.1178421751,-0.1390476674,0.0043669571,0.0101659726,0.0652528107,-0.0327884704,-0.0042735296,-0.1424007267,-0.0178394411,-0.0770583451,0.2079040855,0.0054841395,0.0299477167,-0.1502382755,0.1061219722,0.1647886336,0.0237301961,0.1511978954,0.128353551,0.2004238814,-0.1096482351,0.0106008155,-0.0042153229,-0.1036881879,-0.1181967929,0.0978122652,0.0575557649,-0.0096249748,0.0307970215,-0.0474670827,-0.1205683872,0.2260892838,0.0523157567,-0.0501037985]],"hackathon_name":"Coventry University Computer Club Hackathon","index":142,"project_description":"Using a Muse headband to see how people focusWent to a hackathon, saw they had one of the muse headbands and I gave it a go.I worked solo on this project.Initially I attempted to make it with openframeworks but I ran into issues and decided using Python would be a better approach about 18 hours in.Coventry University Computer Club HackathonB Horn\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 04, 2017 01:37 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"brain watcher","project_tags":["python","flask","redis"],"project_url":"https:\/\/devpost.com\/software\/brain-watcher","keywords":"would,worked,attempted,better,decided,gave,go,hackathon,headbands,hours,initially,issues,make,muse,one,openframeworks,project,python,ran,saw"},{"level_0":143,"hack_vector":[[0.150600642,-0.0968439877,-0.0272947401,0.0539200641,-0.0163082872,0.1485284567,0.2077137232,-0.0466719642,-0.0255327746,0.0144662568,0.0217698868,-0.0605898872,0.1551571935,-0.0797747672,0.0812139437,-0.0265362263,0.1912302673,-0.0157771502,0.0476180054,0.1095692292,-0.2251626253,0.0461366847,-0.0534212328,0.002933868,0.1382364035,-0.0267309882,-0.0259759352,-0.1793107688,-0.0257641003,-0.0526879393,0.0844645277,-0.1367724836,0.0302629285,-0.0837760419,-0.0413942896,-0.0031258862,0.1217506006,-0.1287350506,-0.0627015457,-0.0162873957,0.043016687,-0.137977317,-0.1387108415,-0.0104215965,0.0572419576,-0.0163743086,0.0103778774,-0.0806771293,-0.0242819488,-0.1935493946,-0.1468126625,0.0153781977,-0.1219173968,0.0398900956,-0.1892882586,0.146023646,-0.1364608556,-0.0016275839,0.0108583262,-0.0947776437,-0.0638927892,0.027270712,0.0894398838,0.046319712,0.1117682382,0.0048765666,-0.0884357244,-0.1160864681,0.0259806346,0.0225052945,0.0586863868,-0.0336517915,0.0456805937,-0.1277652681,0.0336727463,-0.119614549,0.1898710281,-0.000906578,0.0004902059,-0.1367755979,0.1380917728,0.1572661549,0.0742006302,0.1605881155,0.1033390239,0.2029186338,-0.0888246447,-0.0416871831,0.0002014854,-0.0798169374,-0.1567999423,0.0587294027,0.111357078,-0.0320232064,0.0277083535,-0.000381884,-0.1392665803,0.235972926,0.0173623301,-0.0681697279]],"hackathon_name":"Coventry University Computer Club Hackathon","index":143,"project_description":"An introduction to cyber securityAs a company we've observed a niche in today's cyber security sector. The gap between companies who require security services to be implements and individuals qualified to carry out these actions is sizeable. We firmly believe that investing in the education of young people, particularly of school age, is a critical step towards a more advanced global cyber security standard.Our product was created to engage with students and is ready to be deployed in classrooms by teachers with little to no knowledge of the subject. This allows for the material to be taught almost autonomously of any teacher input.We created our website using HTML5, Javascript, JSON, jQuery, PHP7, MySQL, Bootstrap, HTML5 and CSS3. We host it on Amazon Web Services making use of their EC2 (Elastic Compute Cloud) and RDS (Relational Database Service) services. We registered a .com domain with domains.com and a .tech with get.tech: www.hackhamster.tech and www.hackhamster.com. Our site runs securely via HTTPS with valid certification.Issues with Javascript, collaborative coding, issues surrounding exhaustion.Supporting the #HackHarassment movementTeamwork. New programming techniques. New AWS functionality.To add more challenges and safety information.Coventry University Computer Club HackathonI created a secure login system using PHP and MySQL, then created an online virtual terminal using CSS\/JS. I also supported development on the rest of our interactive learning platform using jQuery.Content creation, data entry, database managementAndroid app creator, promotional video, graphic design for logos, business plan, javascript + css + html for some of the quiz. I've never used JS before, a sure learning curve.content creation, database entry and managementSolomon Lloyd\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 04, 2017 12:48 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HackHamster","project_tags":["amazon-web-services","amazon-ec2","amazon-rds-relational-database-service","html5","jquery","mysql","php","ajax","json","sql","css","bootstrap"],"project_url":"https:\/\/devpost.com\/software\/hackhamster","keywords":null},{"level_0":144,"hack_vector":[[0.1523275077,-0.1048867032,-0.030445639,0.0573720895,-0.0263268575,0.127960816,0.1907369941,-0.0196304917,-0.0326951742,0.0043120547,0.0034110746,-0.0668512359,0.1541695148,-0.0688759238,0.065912202,-0.0088383518,0.1954497993,0.0010044966,0.0481090173,0.1134907454,-0.2472049147,0.036261823,-0.0353972465,-0.0092850644,0.1223119348,-0.0221028663,-0.0440944843,-0.1759309769,-0.0088578193,-0.0830358639,0.0672816113,-0.1324563771,0.0213322397,-0.0708044544,-0.0184701905,-0.0155914491,0.119707562,-0.1481624842,-0.0712707043,0.0057004821,0.0442372598,-0.1527409405,-0.1470117569,-0.0311874729,0.0460359193,-0.0432495773,0.0044299923,-0.0860707164,-0.0115572736,-0.1881112158,-0.1459325254,0.0132235643,-0.1117690578,0.014481457,-0.2064186633,0.1618623585,-0.1350915879,-0.0133327525,0.0264953338,-0.0923242792,-0.0709962025,0.0282255486,0.0785838664,0.0601124093,0.116740495,0.0171115454,-0.0968130231,-0.1227035746,0.0231233276,0.025697127,0.0773271024,-0.0519666001,0.0252534486,-0.1202550605,0.0336757004,-0.1320973784,0.1740795076,0.0034852026,0.0072587687,-0.1345251501,0.1277814358,0.1556045115,0.0672320873,0.1552470177,0.1020980254,0.2026554197,-0.1030350402,-0.0357074738,-0.0119224135,-0.0847939551,-0.1330441833,0.0548640117,0.0928789377,-0.0442804173,0.0171429832,0.0086981235,-0.1591751724,0.2322089672,0.0166788865,-0.068688035]],"hackathon_name":"Coventry University Computer Club Hackathon","index":144,"project_description":"Deep learning hacking predictions and analysisFrontEndThe-BeastAn deep learning system that will decide the best and easiest way to win some Hackathon swagDeepHack is a system based on big data analysis and deep learning with the focus of analysing the current hackathon scene. The main feature is the big data analysis based on over sixty thousand 'hacks' all hosted on Devpost.We built a web scrapper that scrapes all hacks from Devpost and later on parses all that data in an incredible small JSON, this JSON is imported in a mongo database, where we use aggregations and various methods of data analysis to find out correlations between various data. This Json is also fed into a Tensorflow model built by us Using a triple input with 5 biases to calculate what we call a DeepHack score, this score is supposed to approximate the amount of prizes one hack will win at a hackathon. At the current state we have around 75% accuracy on our predictions. However we believe we could easily increase this value to over 84% without a lot of work. However working with big data requires incredible amounts of time.The hackathon went fairly easily. However we faced many big data problems along the way, waiting for over an hour for scrappers and parsers to run and even reaching a peak of over 80GB or RAM in use by a single process in our processing server.Coventry University Computer Club HackathonPedro Mendonca\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 04, 2017 01:46 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"deepHack","project_tags":["css","javascript","python","html","coffeescript","shell","mongodb","node.js","chart.js"],"project_url":"https:\/\/devpost.com\/software\/deephack-emi9rt","keywords":"data,hackathon,big,however,json,deephack,analysis,hacks,problems,easily,system,deep,score,incredible,current,built,devpost,learning,use,based"},{"level_0":145,"hack_vector":[[0.1498506963,-0.1126110107,-0.0047971462,0.057362631,-0.0151444245,0.1497952044,0.19952631,-0.046235323,-0.0491138287,-0.0039465469,0.0191306584,-0.0523301736,0.1454300582,-0.0774339586,0.0354867391,0.0296989847,0.2326170802,-0.0062759407,0.0519898683,0.1177828908,-0.2279427052,0.0445413217,-0.0465357192,-0.0139716184,0.1387656778,-0.0326319672,-0.0504606515,-0.1931001097,-0.0231349543,-0.097805284,0.0774167627,-0.1162538379,0.0538299792,-0.0764482021,-0.0262651239,-0.0150151122,0.1335300356,-0.1290133595,-0.0247322842,0.0101933703,0.0580735393,-0.1457694918,-0.1738259345,-0.0333457291,0.0395825803,-0.0405217819,0.0175893158,-0.059470728,-0.0138234133,-0.2155909091,-0.0967379287,0.028084157,-0.107264787,0.0117924102,-0.1937788278,0.1492786556,-0.1625394076,-0.0027130812,0.024092922,-0.0673094168,-0.050409317,0.0191151351,0.0749848783,0.0466511995,0.1224323958,-0.0014008408,-0.1009117216,-0.1384552121,0.0297681671,0.0210015774,0.0718360767,-0.0460117012,0.0102559077,-0.1224431917,0.0043238094,-0.1071750075,0.1788130552,0.0057505602,0.0447104163,-0.135207355,0.1194201261,0.1502046883,0.0439718738,0.1663771421,0.1297322065,0.1913062334,-0.1189881116,-0.0292408261,-0.0180226769,-0.0971984044,-0.1311197281,0.0684201196,0.074996382,-0.0244646352,-0.0025508087,-0.0121877426,-0.1338828504,0.1936488897,0.0516885668,-0.0639701337]],"hackathon_name":"Coventry University Computer Club Hackathon","index":145,"project_description":"Help Trump get his large luscious locks. A viral marcketing campain to take advantage of current affairs.The original idea was to take a viral video at the moment and take advantage of the opportunity. After some research we realised how a good idea this is and challanged ourself with completing a game on the current viral theme Donald Trump.Is a sidescroller game, here the character (Trump) runns and collects tupee's in order to get luscious locksIn few word:We have managed to create a complete game, ready to play, share and sell.Team work is the most important thing in a hackathon.We proposed ourself to do releases at least once a week for the following two months to take advantage of the viral moment of the theme.Coventry University Computer Club HackathonI worked on The API for the leatherboard, SQL server, some art-work, Domains managemant and Team management.The lead 2D Artists and Character Animator as well as the Art Director for the vision of our project.I worked for the leaderboard. The connection and the link to the database and the server and the script that fetches the data into unity. And other based unity scripts like scenes, managers, connection and the buttons as well as UII was the lead 2d artist for the game and key innovator,  making creative decisions through out the entirety of the project. I made the background art and main menu.Created store UI and backend, Google AdMobs integration, In-app purchases.I developed the front end of the game itself. This included the scripting behind the character controller and its visual upgrades, the background and obstacle creation as well as the programming behind the health and animation.ogrezear\n          posted an update\n\n          \n            \u2014\n            \n\n                Mar 04, 2017 01:58 PM ESTwww.donaldtrumptoupe.tech Is where the app can be played on the web versionLog in\n      or\n      sign up for Devpost\n      to join the conversation.ogrezear\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 04, 2017 01:52 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Lewis Jordan\n          posted an update\n\n          \n            \u2014\n            \n\n                Mar 04, 2017 01:43 PM ESTI developed the front end of the game itself which links to the shop and leaderboards system. This included the scripting behind the character controller and prop altering, background and obstacle creation as well as the code behind the health and animation systemLog in\n      or\n      sign up for Devpost\n      to join the conversation.Iveta Stripeikaite\n          posted an update\n\n          \n            \u2014\n            \n\n                Mar 04, 2017 01:39 PM ESTExcited to bring a new, viral and fun game to the market once again. Please stay tuned for future updates! :)Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Trump Toupee","project_tags":["unity"],"project_url":"https:\/\/devpost.com\/software\/trump-toupee","keywords":null},{"level_0":146,"hack_vector":[[0.1458756477,-0.0931753442,-0.0183082689,0.0446009338,-0.0305955317,0.1614590287,0.2113915086,-0.054163564,-0.0180480666,-0.0065834569,0.0242354777,-0.0467357263,0.1240833923,-0.0757860839,0.0497376993,0.0341760479,0.2419889122,0.0191516485,0.0360954329,0.1082122996,-0.2212332189,0.0182760414,-0.0660810098,-0.0428222716,0.1134277955,-0.0103183314,-0.034557078,-0.2052423954,-0.0229927469,-0.0942426026,0.0543417297,-0.1193786263,0.0550592802,-0.1032528654,-0.0203273464,0.0068704071,0.1144869402,-0.1242618263,-0.0423423089,0.027557401,0.0344312452,-0.1373740882,-0.1599524617,-0.0285341796,0.038405858,-0.0627424046,0.0207619499,-0.0479340665,-0.0467570201,-0.2158820033,-0.113651447,0.0118160965,-0.0988593251,-0.0268372763,-0.1472695023,0.1549597085,-0.139233768,0.0042220359,0.0085503245,-0.0642390326,-0.0416556299,0.0154920258,0.0813341215,0.0569786839,0.1283426583,-0.0076830587,-0.1276463568,-0.138700977,0.034323819,0.0149658863,0.0547971167,-0.0502327532,0.0179872699,-0.1413949281,0.0031481318,-0.1204463616,0.1890575886,0.0133662531,0.0434588864,-0.1518219113,0.1422462612,0.1654041708,0.0754951313,0.1662373841,0.1021105722,0.1969926059,-0.1012072861,-0.0057964809,-0.0035987273,-0.0888247937,-0.1377863884,0.0647674501,0.0749630556,-0.0285142139,0.0038209727,-0.0225253943,-0.1320898235,0.2088078558,0.0291323941,-0.080356881]],"hackathon_name":"Coventry University Computer Club Hackathon","index":146,"project_description":"Save Our SMSWhen you're somewhere with little or no signal you have GPRS or EDGE or something equally as rubbish. But you're still gagging to tweet.You can text various commands to tweet,post to facebook and translate text.Using APIs such as Twillio for SMS, the Twitter API,Google Translate and Facebook-Graph API. Users may interact without a reliable internet connection.We made a working service!haltnproblem.techCoventry University Computer Club HackathonHelped with the python Facebook-graph APIWorked on the presentation website and helped with python twitter apiChristopher Dunkling\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 04, 2017 01:59 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SOS SMS","project_tags":["python","html","css","javascript","twitter","facebook-graph","google-translate","node.js"],"project_url":"https:\/\/devpost.com\/software\/sos-sms","keywords":"api,tweet,translate,text,facebook,working,google,internet,interact,inspiration,haltnproblem,graph,gprs,equally,gagging,made,edge,connection,commands,built"},{"level_0":147,"hack_vector":[[0.1491450071,-0.1558113396,0.014066956,0.0968593284,-0.0573434904,0.161297217,0.1710023433,-0.0579488948,-0.0367070325,-0.0212563369,-0.009300855,0.0603929125,0.1243980601,-0.0747916773,-0.014324354,0.0935586542,0.2619445324,0.0478130616,0.0492412336,0.0736795291,-0.1722561568,0.0044591357,-0.0519361719,-0.0666000545,0.1832471192,-0.0092948871,-0.0822385922,-0.1821481138,0.0380710699,-0.0729729682,0.0218955763,-0.0924826115,0.0877298787,-0.0440494865,-0.037454769,0.0228463653,0.1442258656,-0.0915843025,0.0161836632,0.1061892211,0.0541887656,-0.1540714651,-0.1811865866,-0.0370281972,-0.0680268258,-0.0432735309,0.0430217125,0.0118417442,-0.0164367519,-0.168216601,-0.0033995318,0.0382510684,-0.104196988,-0.070000492,-0.0745739415,0.1400802284,-0.1612807959,0.0863198563,-0.0261366684,0.0746447518,0.0004330613,0.0410704687,0.0398646221,0.0771155432,0.1438942403,-0.0604071207,-0.1437900215,-0.1752240509,0.0111313397,0.0016745989,0.0593837574,-0.0265140105,-0.0201278664,-0.1442234963,-0.0918293223,-0.0495434999,0.1879737377,0.0276474375,0.1083984077,-0.144502759,0.1038452238,0.1481288075,0.008345155,0.1281557828,0.1575279981,0.1509744972,-0.1538760066,0.0881000087,0.0161912218,-0.1250528097,-0.0664436668,0.1177223474,0.0080517465,0.0416638851,0.0927078277,-0.1049617529,-0.046044521,0.1278375983,0.124373883,-0.0341516919]],"hackathon_name":"Coventry University Computer Club Hackathon","index":147,"project_description":"2D Jumper with procedurally generated terrainCoventry University Computer Club HackathonKristiyan Stoyanov\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 04, 2017 01:52 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Monsieur Monster","project_tags":["c#"],"project_url":"https:\/\/devpost.com\/software\/monsieur-monster","keywords":"procedurally,alone,built,generated,worked,hours,hard,generation,games,developing,game,learned,creates,create,challenges,accomplishments,inspiration,monsieur,work,monster"},{"level_0":148,"hack_vector":[[0.1511963904,-0.1422068626,-0.0186648946,0.0705790669,-0.0431130081,0.1435019076,0.1923891902,-0.0386126488,-0.0177042726,-0.0447121188,0.0159468576,-0.0012089997,0.1305886209,-0.0727015063,0.0349156335,0.0517358445,0.2590482533,0.0206217542,0.04447769,0.1164739579,-0.2305505425,0.0023182386,-0.0479134582,-0.0537727959,0.1289282739,-0.0210213643,-0.0465493053,-0.1887283921,0.0057211486,-0.0957546607,0.0307792723,-0.1041046828,0.0543939769,-0.0698765144,-0.0159447547,-0.0083176736,0.1278308183,-0.1339366436,-0.0331801288,0.0560116507,0.0541065559,-0.1269637048,-0.1776764989,-0.0362510048,0.0011578958,-0.0743557513,0.0382459909,-0.0353733636,-0.0264072157,-0.2091569901,-0.0776167363,0.0123794582,-0.0998430848,-0.0575849898,-0.1470204592,0.1647969335,-0.1353261322,0.0227350127,0.0143167702,-0.0226630755,-0.0410684384,0.0329295248,0.06594605,0.0671104863,0.1383887976,-0.0135714328,-0.1341492385,-0.1553107798,0.0229192749,0.006755691,0.060522031,-0.0354481116,-0.0081962924,-0.1441866904,-0.04234327,-0.0934659988,0.1948592067,0.017720243,0.0610970519,-0.1466390043,0.1143956408,0.1695303172,0.0164286122,0.1621888131,0.1314046085,0.1792156845,-0.1338692605,0.0255412776,-0.018973086,-0.1008731052,-0.1117313728,0.0986616686,0.0594477393,0.0027783709,0.0368546583,-0.0597071089,-0.1095602289,0.1875739098,0.0643975064,-0.0556575805]],"hackathon_name":"WarwickHACK 2017","index":148,"project_description":"You'll always have Traxx to followNeeded to know where to goBuilds and shares maps and guides usersWith lots of difficultyAPI very hard to use cry faceWe made a map, it sort of works, we can track peopleNot to mess with arcgisAutomatic mapping, location tagsWarwickHACK 2017Mala Sadik\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 26, 2017 05:15 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Traxx","project_tags":["javascript","esri","html","css","php"],"project_url":"https:\/\/devpost.com\/software\/trackx","keywords":"works,users,learned,know,inspiration,hard,guides,go,face,difficulty,cry,challenges,built,builds,automatic,arcgis,api,location,lots,made"},{"level_0":149,"hack_vector":[[0.1416643262,-0.1009067222,-0.0267497171,0.0445193499,-0.0357776918,0.1370343417,0.2029267102,-0.0152579863,-0.0206016228,-0.009864728,0.0162869059,-0.0541341268,0.1328902543,-0.0732179284,0.0538877659,0.0350568295,0.2324180305,0.0172095485,0.0375550799,0.121705167,-0.2335716486,0.0241206754,-0.0467592627,-0.0393247604,0.1053494588,-0.0194432549,-0.0470524319,-0.1906733215,-0.0024277496,-0.0857248902,0.0471007675,-0.1186437756,0.0325301476,-0.0940203443,-0.0103833647,-0.0058450652,0.1164906844,-0.1419886649,-0.0624226034,0.0136453277,0.0305196028,-0.1485039592,-0.1635920852,-0.0360538028,0.0531843528,-0.0587358512,0.0196015388,-0.0627244636,-0.0268448591,-0.2075204998,-0.1248923317,0.0105302557,-0.1025125012,-0.0303843487,-0.1751908362,0.1648261696,-0.1196669638,-0.0003112929,0.0333833918,-0.0749983639,-0.0600479282,0.0311620701,0.0782709047,0.0685734525,0.1184409857,-0.0008304875,-0.1060559601,-0.1395576298,0.0412905216,0.0080170175,0.0747918114,-0.0476464033,0.0159172397,-0.1331489086,-0.0027742246,-0.132647872,0.1777581424,0.0102780769,0.0305757355,-0.1372639239,0.1309388578,0.166460216,0.0568057746,0.1618074179,0.1093292236,0.1964956373,-0.1035624593,-0.0206003413,-0.0101191392,-0.090577282,-0.1443529427,0.065929167,0.0802993253,-0.0323918276,0.0269080196,-0.011703671,-0.1417046934,0.2259382904,0.0268811788,-0.075701721]],"hackathon_name":"WarwickHACK 2017","index":149,"project_description":"sentimental analyser with big data analyse of people's tweet and photos.Cover\"How are you\"\nBy asking this question, we know how people feel. However, how do we know how people felt in the past from what they have produced in the past including their photos, tweets, Facebook posts, etc. We came up with the idea to dig up the past sentiments from the most recently developed technology, and from there, we can know people's past with a single glance of the result.It reads people's tweet and photos to analyse people's emotion in their timelineThe Project is written in python with the help of Microsoft Computer Vision API to analyse faces in the photo, meanwhile, our self-developed text analyse algorithm helps us to extract emotions from lines of text.  Amazon Alexa provide a human interface to interact with users to provide an analytical result in a human-friendly way.\"\"Integration of multiple API interfaces\"\"\n\"\"Text Analyse\"\"\n\"\"BIG DATA\"\"Successful integration of multiple API and multiple sources of feed in material.To provide a better user interface to enable more possibilities of people's feeling from their footage.\nAlexa skill will be enhanced to fit in general purpose \nAn extra footage of sentimental analyse can be seen here\nhttps:\/\/youtu.be\/QcUhRBkcT1sAnd We are from University of SheffieldWarwickHACK 2017Hao Xu\n          posted an update\n\n          \n            \u2014\n            \n\n                Feb 27, 2017 08:03 AM ESTTrump is the ideal target for this project since he is very emotional on his tweets and his tweets are somehow personal. Of course, huge amount of them make data analysis more reliableLog in\n      or\n      sign up for Devpost\n      to join the conversation.Hao Xu\n          posted an update\n\n          \n            \u2014\n            \n\n                Feb 26, 2017 07:30 AM ESTPlease check newest update on GithubLog in\n      or\n      sign up for Devpost\n      to join the conversation.Hao Xu\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 26, 2017 05:44 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"How_Does_Trump_Feel","project_tags":["python","alexa","azure","amazon-web-services","machine-learning"],"project_url":"https:\/\/devpost.com\/software\/how_does_trump_feel","keywords":null},{"level_0":150,"hack_vector":[[0.1309307218,-0.0886245817,-0.0325520821,0.0289343018,-0.0060921949,0.1266152859,0.2079600394,-0.0195749905,-0.0266173482,-0.0018647776,0.0244938061,-0.0898780599,0.1465370059,-0.0782147273,0.0781516582,0.0010075568,0.2028130293,-0.0182600971,0.0377700403,0.1244983375,-0.2293162793,0.055474367,-0.0481288359,-0.0122385751,0.1057197154,-0.0326815546,-0.0270253755,-0.1804825813,-0.0344213247,-0.0775308236,0.0784363672,-0.1284923851,0.0312075224,-0.0922945142,-0.0182267912,-0.0052130935,0.1169039458,-0.1350014508,-0.058202602,-0.0204666089,0.0329716541,-0.142761603,-0.1511280537,-0.0231591035,0.0820518434,-0.0433122665,0.0131507264,-0.0867031217,-0.0246726759,-0.2057351917,-0.1558526456,0.0048615499,-0.1079014614,0.0167451296,-0.2044541091,0.150563851,-0.1317186505,-0.0316419639,0.0447873957,-0.1283777803,-0.0764449686,0.0264797676,0.0887896121,0.0540587567,0.1018197834,0.0179321412,-0.0825079232,-0.1141653582,0.0385456979,0.0159032345,0.0654877871,-0.053547401,0.0335416012,-0.1092252657,0.044031322,-0.1376088113,0.1690599918,-0.0105748465,0.0024560879,-0.1292864382,0.1310889125,0.1600301117,0.0714364275,0.1634241045,0.0822880045,0.1832043827,-0.0958519056,-0.0585935749,-0.0129191661,-0.0893782824,-0.1595847905,0.0398372076,0.098842673,-0.0440759957,-0.0019427087,0.0194973666,-0.1645418108,0.2175403833,0.007096909,-0.0760180205]],"hackathon_name":"WarwickHACK 2017","index":150,"project_description":"Generate niche GIFs on the fly by searching for caption linesWe enjoy GIFs. We've used services like \"Gify\" which helpfully allow searching of a large index of GIFs but find that often the GIFs we want do not exist.Our hack allows users to split their movies into frames, index captions and use these elements to generate niche GIFs on the fly. The aim was to be able to search such obscure phrases as \"I have the high ground\" and acquire exactly the GIF we have envisioned.Along the way we integrated the ability to create and caption GIFs from a webcam very quickly.We split several films into their frames using ffmpeg and saved them in such a structure that would allow a selection of them to be easily accessed.To build and search our caption index, we used nodejs to write a simple script which interprets .srt subtitle files and indexes them using elastic search. Each subtitle file has its entries indexed alongside their timestamps which is used to determine which frames from the movie are associated with the line being said.The caption and associated frames is sent to the browser where we use gifshot to generate the GIF from the frames and overlay the caption (webcam GIFs are also generated client-side, similarly to this)There are a lot of parts to this hack. We split our tasks between three people and then needed to stitch everything together quite close to the end.A lawsuit (also it would be really nice to index youtube videos and make the virtual machine much easier to use so that anybody can build their own GIF index)WarwickHACK 2017I created the front-end web interface of the project, and hooked up the back-end inputs through JavaScript to enable them to be displayed on the front-end. I created JavaScript functions that broke down the captions and images I got from our back-end server via GET request, and passed them into a GIF making JavaScript library that converted them into a GIF format, alongside the caption of the GIF. This was then passed and displayed on the front-end webpage interface. I also used a similar system to convert a webcam feed with a live preview window on the page into a GIF format with a user-input caption.Callum Kendrick\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 26, 2017 06:01 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Jiphy","project_tags":["ubuntu","java","elasticsearch","node.js","javascript","json","bash"],"project_url":"https:\/\/devpost.com\/software\/jiphy","keywords":"gifs,index,frames,caption,gif,using,quite,nice,split,use,used,search,allow,subtitle,would,really,said,searching,webcam,build"},{"level_0":151,"hack_vector":[[0.160972625,-0.1320130527,0.0062411008,0.0877298713,-0.0269728303,0.1709590703,0.1880536079,-0.059287969,-0.0376555659,-0.0164168011,0.0175771881,-0.0272024479,0.1544450819,-0.0724330693,0.0316183008,0.0272554345,0.2512491941,0.0242555551,0.0628087223,0.0919297487,-0.2097368836,0.048178494,-0.053484384,-0.0347512923,0.1603738964,-0.036356777,-0.059488371,-0.2094613761,-0.0194151811,-0.0701054856,0.0720333084,-0.1198189333,0.0581506379,-0.0778184161,-0.0357355364,0.0049300161,0.1383047849,-0.1128767356,-0.0222160704,0.0447665229,0.0604151338,-0.1661527902,-0.1881302744,-0.034571711,-0.0126630403,-0.0448184386,0.0218827892,-0.0404680446,-0.0248996355,-0.1945118308,-0.0757461116,0.0231585465,-0.1115840524,-0.0228868742,-0.152115494,0.1506605744,-0.1608600467,0.0272484627,0.0177992526,-0.0168743692,-0.0455637053,0.0288152881,0.0690666735,0.0604666993,0.1253489703,-0.0116529036,-0.1209644899,-0.1568558365,0.0148678226,0.0075562559,0.073751308,-0.0417327285,0.0148147214,-0.1298859715,-0.0244285353,-0.0865431875,0.2089926749,0.0091884723,0.0660517216,-0.1315774024,0.1223194301,0.1463113278,0.0318090506,0.1397611052,0.136775136,0.1767243743,-0.1305386573,0.0095566465,0.0051113237,-0.0982314125,-0.0944546908,0.0842752829,0.0405883119,-0.0089510586,0.0416642204,-0.060385678,-0.0989691392,0.1824635714,0.0685951188,-0.0604693107]],"hackathon_name":"WarwickHACK 2017","index":151,"project_description":"See particular 3D areas in Legoimg-v1img-v2-niagraFallsDescription: Converts hightmap data into 3D landscapes make of LEGO bricks.Click here to try yourselfWarwickHACK 2017Worked on the initial leap motion code which wouldn't work. Later worked on turning height map into 3d data and linking the map api with the lego programKelvin Minguell\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 26, 2017 06:22 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"LegoLandscape","project_tags":["javascript","html","css","webgl","three.js","esri"],"project_url":"https:\/\/devpost.com\/software\/legolandscape","keywords":"university,birmingham,leap,esri,arcgis,lego,three,canyon,js,motion,javascript,documentation,due,end,working,everest,explorer,development,fix,front"},{"level_0":152,"hack_vector":[[0.1459323764,-0.0912481099,-0.0425170697,0.0400261469,-0.0181321483,0.1370281428,0.2032398134,-0.0185345858,-0.0124161569,-0.0207510497,0.0043276958,-0.080292277,0.1319456398,-0.0631402433,0.0723818541,0.008189139,0.2003623694,0.0015912709,0.0398357846,0.1326404661,-0.2400053293,0.036430493,-0.0404647216,-0.0191518459,0.1017888412,-0.024290558,-0.031769082,-0.1732362211,-0.0323937237,-0.090128161,0.0673760101,-0.1097333953,0.0360136256,-0.0900709033,-0.0083875507,-0.014724914,0.1158700287,-0.1400156021,-0.0569957234,-0.0135029377,0.0505479239,-0.1410990655,-0.1554031521,-0.0312305968,0.0740138367,-0.0503242239,0.006688993,-0.0846383423,-0.0230023786,-0.217993319,-0.155450806,0.0161531642,-0.0985742807,0.003277007,-0.2054879516,0.1555698067,-0.1244014427,-0.0316339321,0.0487507619,-0.1045964882,-0.0826896504,0.0206822008,0.0797515437,0.0319786444,0.1036004275,0.0190295465,-0.0916772783,-0.1245182455,0.0356272757,0.0265360828,0.0684637204,-0.0496972241,0.0124424566,-0.1199410409,0.0220094826,-0.1243026257,0.1693157852,-0.0019814793,-0.0035737476,-0.1356703788,0.105340533,0.1536658406,0.0612241477,0.1713713855,0.0904466212,0.207805559,-0.0801863894,-0.0360456705,-0.0099257156,-0.0778377876,-0.148269996,0.0577139556,0.0974405482,-0.0454097986,-0.0119340764,0.0189934354,-0.15824835,0.2445069849,-0.0043600914,-0.073720485]],"hackathon_name":"WarwickHACK 2017","index":152,"project_description":"A mobile app which helps people with Alzheimer to get people's names based on face recognitionMeet Dr. FaceI came up with the idea because of my tutor at University of Birmingham, who cannot remember faces. So I decided to build a mobile application for people with this kind of desease (Alzheimer), who cannot remember associations of faces with names.The mobile application allows the user to develop their own face database, by being able to take a picture of a humans face, associate a name to it and save it to the database. Then they are able to recognize a face, by taking a picture of the desired person and get the name of the person returned.I build it using Swift, Apple's lates programming language.Using the Microsoft Face API with Swift was quite challenging, since there is no tutorial in Swift, just in Objective-C.I am happy that I have a working MVP and it can MOST OF THE TIME recognize faces correctly.I learned a little bit about face recognition methods and how to use the Face API.The next thing that I would do is to create my own face recognition API, because I found that the Face API is not always really accurate. And after that I would start optimizing the mobile app and add different features to it, like user browser or speech recognition for name input for images.WarwickHACK 2017Csongor Barabasi\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 26, 2017 06:23 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"DrFace","project_tags":["ios","swift"],"project_url":"https:\/\/devpost.com\/software\/drface","keywords":"face,api,name,recognition,faces,swift,mobile,would,picture,person,next,learned,remember,database,cannot,build,application,recognize,able,using"},{"level_0":153,"hack_vector":[[0.1559134722,-0.1267807484,-0.0279473886,0.070944719,-0.0336848758,0.1513318419,0.2007165998,-0.0462234989,-0.0218933132,-0.0313402303,-0.0085862149,-0.0183627252,0.1368873119,-0.066200532,0.0443326235,0.0132426061,0.2306069136,0.0209733918,0.0558115207,0.1164470166,-0.2326215506,0.0135398237,-0.0390001461,-0.0252564624,0.1400016993,-0.0072791437,-0.0456066504,-0.1752266586,-0.0064208312,-0.1005127504,0.0534429029,-0.1314510554,0.0489394218,-0.0634091571,-0.0205276031,-0.0220205486,0.1332543492,-0.1315138489,-0.0377334356,0.0285927597,0.0773113668,-0.1464910358,-0.1611487865,-0.0469145253,0.0208931491,-0.0545718595,0.0281498767,-0.0559298769,-0.03679353,-0.2075227648,-0.1039287224,0.0301627535,-0.1058615819,-0.0248657092,-0.1791936755,0.1664347351,-0.1471011341,-0.0052220761,0.016136229,-0.0366800502,-0.0522518419,0.022746833,0.0613713972,0.026863195,0.126305148,-0.000401532,-0.1188246086,-0.141861096,0.024555333,0.0320756882,0.067912519,-0.0406494364,0.0013709409,-0.1341026574,-0.0115437238,-0.0887347832,0.1844027489,0.0271138325,0.0292804409,-0.1503209472,0.1020575091,0.1616722494,0.0357177444,0.1696179509,0.1294752359,0.2029004991,-0.1100559831,0.0111026084,-0.0059822462,-0.085184142,-0.1100044847,0.0873698518,0.0780989826,-0.0017644673,0.0137094036,-0.0271722693,-0.1352053434,0.2194221616,0.0377396382,-0.058807116]],"hackathon_name":"WarwickHACK 2017","index":153,"project_description":"A strategy card game for PCJust to upload something, since it was our very first touch with Unity, there's little things done. We plan to develop it next week at HackUPC (Barcelona).Please, don't lose time with it. ;)There's an .exe, a menu, a game scene with draggable cards and all the cards assets (108) converted to a usable image file using a Photoshop script.WarwickHACK 2017Oriol Closa\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 26, 2017 07:00 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Illuminati","project_tags":["unity"],"project_url":"https:\/\/devpost.com\/software\/illuminati","keywords":"cards,week,using,barcelona,converted,develop,done,draggable,exe,file,first,game,hackupc,image,little,lose,menu,next,photoshop,plan"},{"level_0":154,"hack_vector":[[0.144133538,-0.1235857457,-0.034858916,0.0565966628,-0.036564827,0.1467853636,0.1796033531,-0.0338817723,-0.0086241262,-0.0441644341,0.0091239875,-0.0430719256,0.1409697682,-0.0666873083,0.0456296504,0.0314427763,0.2450107187,0.0175817795,0.0463330522,0.1234086379,-0.2394399047,0.0178168844,-0.0379996113,-0.0288377348,0.1114758849,-0.0182705987,-0.0465046652,-0.1686272323,-0.0088991281,-0.1094141901,0.0497316159,-0.1201134026,0.0410446227,-0.0679379627,-0.0011149762,-0.0222301222,0.1282209009,-0.1392199248,-0.0465942174,0.0164505895,0.0575778373,-0.1363858134,-0.1729701906,-0.0394356363,0.0367117152,-0.0661970153,0.0249990802,-0.0533131398,-0.0361546278,-0.2150902301,-0.1220023483,0.0237023141,-0.092337206,-0.0413167402,-0.1895558387,0.1619543582,-0.117126286,-0.0158508737,0.0399456657,-0.0606066734,-0.0630784184,0.0287770368,0.067773141,0.0484261401,0.1092502847,0.0099921972,-0.1071686968,-0.1483358741,0.0263752341,0.0262837615,0.0763064921,-0.0416515693,0.014962405,-0.1305424571,-0.0180099905,-0.105597429,0.1864062697,0.0167116188,0.0264413748,-0.1389941424,0.1057175398,0.1698374152,0.025052974,0.1729203016,0.1158563346,0.1901198924,-0.118652381,-0.0192521252,-0.0280594509,-0.091427356,-0.1185159311,0.0781081617,0.0753450692,-0.0276954416,0.0237783212,-0.0148004321,-0.1348907501,0.232918933,0.0292795356,-0.072476089]],"hackathon_name":"WarwickHACK 2017","index":154,"project_description":"A quick way of getting a lunch idea from whatever you've got in your fridgeOur flatmate loves making curry. It's gotten to the point where he can't keep track of what spices he has and what he needs, so we decided to create this application for him! It allows him to look through his cupboards and specify ingredients, then scrape a recipe with those ingredients from a Mongo databases.WarwickHACK 2017I did a majority of the GUI and I cut out picture of our friends head on photo shop.thirdratecyberpunk\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 26, 2017 07:03 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Adams-Curry-Generator","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/adams-curry-generator","keywords":"ingredients,curry,spices,allows,application,create,cupboards,databases,decided,flatmate,generator,gotten,track,keep,look,loves,making,mongo,needs,point"},{"level_0":155,"hack_vector":[[0.1264189035,-0.1079611704,-0.0185249113,0.0717921332,-0.0375660434,0.1403527409,0.2046205848,-0.0328158028,-0.0324951187,-0.0288530737,0.0085704634,-0.0310442708,0.1517362148,-0.0831987113,0.0473366641,0.0112125557,0.2286053896,0.0060530342,0.0504016206,0.1080636308,-0.2212755233,0.0315718688,-0.0443828851,-0.0287886262,0.1241820678,-0.0206427183,-0.0474477038,-0.1841052175,-0.0198476631,-0.0799526572,0.0580538064,-0.1181740239,0.0492684878,-0.0608244352,-0.0300972853,0.0003553253,0.142104134,-0.1301558316,-0.0343838185,0.0276646949,0.0558303036,-0.1419493258,-0.1639714837,-0.0247801878,0.0360885784,-0.0536119454,0.0325019248,-0.0679218993,-0.0286916811,-0.2234164476,-0.1162404567,0.0213799682,-0.1022818238,-0.0085305432,-0.1831827015,0.1522565335,-0.1521904171,-0.0006146669,0.0191552918,-0.0674799383,-0.0588344783,0.0274401307,0.0770978555,0.0421919152,0.1254515946,0.0005100411,-0.0928701088,-0.1405647099,0.0309387594,0.0170808379,0.0536888763,-0.0482751392,0.010182064,-0.1331130713,0.0009548462,-0.1029340848,0.1897367835,0.0140513191,0.036232926,-0.1495708078,0.1256494075,0.1642928272,0.0504043996,0.1657419205,0.1231863201,0.1935918629,-0.1111810505,-0.0164725259,-0.0088470047,-0.109266676,-0.1463736147,0.0745065957,0.0786386654,-0.015392825,0.0152768372,-0.0332345627,-0.1364335269,0.2127064615,0.0470810421,-0.0605387352]],"hackathon_name":"WarwickHACK 2017","index":155,"project_description":"An extremely simple way to share web projectsMake a tool to quickly deploy a web server for testing purposesIt creates an ssh tunnel between the user's computer to the server which, hosts the port to anyone with an internet connectionWe wasted 16h on a Rust implementation to then give up and switch to Node.js a more usual approachRust type safety and really strict compiler can be a huge time consumer. Due to all the time wasted on Rust, I was unable to finish the full project but we did manage to achieve a usable stage.link 139.59.173.210WarwickHACK 2017Pedro Mendonca\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 26, 2017 07:03 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Quick Serve","project_tags":["node.js","c"],"project_url":"https:\/\/devpost.com\/software\/quick-serve","keywords":"rust,wasted,time,server,web,finish,internet,inspiration,implementation,huge,hosts,give,full,due,link,deploy,creates,consumer,connection,computer"},{"level_0":156,"hack_vector":[[0.1503652632,-0.0838909522,-0.0289276578,0.0329255685,-0.020687338,0.1185293198,0.1905423552,-0.0177450869,-0.0189621728,-0.0131740738,0.0182886682,-0.0716415793,0.1427024454,-0.0618289635,0.0702772811,-0.0167966783,0.1815261841,-0.015373989,0.0482032448,0.1409970075,-0.2505399883,0.0162972007,-0.0389188714,0.0020205858,0.0992518216,-0.0274948031,-0.0236158296,-0.1530088484,-0.0165206715,-0.1041678935,0.0544682033,-0.1085310206,0.010835073,-0.0745240822,0.0061561265,-0.0267901793,0.1103822663,-0.1519026607,-0.0831046253,-0.0245066695,0.0565768331,-0.1157975793,-0.1259401292,-0.0302439183,0.0742784888,-0.0551137924,0.0074317874,-0.0972944945,-0.0120348502,-0.2046673149,-0.1644287109,0.0230535269,-0.1143385097,0.0165877622,-0.2257417887,0.1655540615,-0.1174229532,-0.0391535163,0.0459184349,-0.1230772361,-0.068397671,0.0207359549,0.0764450282,0.0426397584,0.1101238281,0.03222562,-0.0897747204,-0.1195195541,0.0197328776,0.0221257005,0.0656327605,-0.0372481346,0.01543485,-0.1181974038,0.0458881445,-0.1296194643,0.1702219546,0.0006644425,-0.0213626791,-0.1323815733,0.1043663844,0.1516276598,0.0521620363,0.1534709185,0.1039585099,0.2136011124,-0.0780935138,-0.0591672324,-0.0333184712,-0.0566800907,-0.1475150436,0.0577240363,0.1125736386,-0.0460501872,-0.0198085494,0.0251182653,-0.173827827,0.2560456395,-0.0112432465,-0.0687889829]],"hackathon_name":"WarwickHACK 2017","index":156,"project_description":"Making faces beautiful again! Save a photo of yourself and reconstruct your face out of other people's!Here is an example of our program making Leo beautiful!Here is an example of our program making Christian (from WarwickTech) beautiful!Our very first 'improved' face!Here is an example of our program making Ben beautiful!We wanted to make something fun and gimmick-y (as this is all of our first hackathon's), and thought what better than something that makes you look so wonderful!\nAs a gimmick, we decided to combat cyber-bullying in the most ridiculous way possible - if you take a photo of yourself, use our program to exchange parts of your face with other people's, then if somebody were to insult your picture - technically they're not insulting a picture of you! Instead they are insulting a collage of pictures of other people!It takes a 500x500 image (preferably of somebodies face!), and divides it into an n x n grid. It then swaps out each division of the grid to the 'most appropriate' face we could find! The 'most appropriate' part is decided by an algorithm we wrote in our program!We wrote it entirely on Java, throwing around several ideas and implementing them (such as being able to change how many 'divisions' in the image there are). We made sure to structure out program well throughout the event, documenting the files (albeit minimalistically), so that modification of the code was much easier (especially in the morning!).Algorithmically, there were a few initial bugs in the program, which weren't originally obvious. However, we managed to spot all of them and now have a working Java program!\nWe wanted to develop this as an android application, however none of us have ever had any experience in this field.. we just about added a button to an app before we had to submit our projects!It compiled the first time we wrote it, somewhat amazingly! However, as complete novices with only 1 of us being confident in java (and none of us studying computer science), I think we are more amazed at the fact we got anything at all!We developed our skills in Java, attended all 3 workshops in the afternoon (which were very helpful!), and we introduced ourselves to Android Studio. We also learnt to work together as a coherent team, and really enjoyed doing so!As it\u2019s entirely written in java, we could probably make an android app out of it! \nWe could also seek to further improve the algorithm which finds the \u2018most appropriate\u2019 substitute for your face, and then swaps them out.\nWe could also add some facial recognition API, which detects faces, and automatically swaps them out for their new 'improved' face!WarwickHACK 2017Mathematic and Statistics student at University of Warwick, programming, ideas.Project management, idea generation, market research, development research, pitchBen Chiverton\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 26, 2017 06:38 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MakeMeBeautiful","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/makemebeautiful","keywords":"java,program,face,could,wrote,appropriate,android,also,us,swaps,however,entirely,image,something,decided,people,picture,none,make,gimmick"},{"level_0":157,"hack_vector":[[0.1383740753,-0.1061631516,-0.0255030878,0.0443285666,-0.022703331,0.1369449049,0.202111274,-0.0321632326,-0.0174309313,-0.0348845124,0.0087114675,-0.0587169044,0.1373738199,-0.0774913877,0.0506088696,0.0102816485,0.2183768898,-0.0000218499,0.0465552099,0.1326187998,-0.2367060035,0.0295535997,-0.0394560322,-0.0237505734,0.1173498034,-0.0256302189,-0.0419783033,-0.1650731117,-0.0229934733,-0.093436338,0.0508851483,-0.116719082,0.0401580781,-0.0685974658,-0.0249388572,-0.0232797731,0.1313950419,-0.1380312294,-0.0494786873,0.0162074026,0.0570179485,-0.1355342716,-0.1549398005,-0.0434978344,0.0574146584,-0.0631703213,0.0249967463,-0.0653235763,-0.0310505237,-0.2146720588,-0.1413955837,0.0240090787,-0.1098000333,0.0041505191,-0.1979502589,0.1577993482,-0.136026144,-0.0223271698,0.0299404059,-0.090419732,-0.0688642934,0.0161343887,0.0772618726,0.042393934,0.1147203147,0.0160451178,-0.0994561613,-0.1313638091,0.0282150973,0.0273859855,0.0598733835,-0.0534724966,0.0095429951,-0.1192825884,0.0224385504,-0.1130804196,0.1754316986,0.0068666684,0.0092287697,-0.1468270123,0.1160621494,0.1654863507,0.0438101366,0.1704802662,0.1067914143,0.2019020319,-0.1049160957,-0.0335761867,-0.0158870537,-0.0858201012,-0.1426144987,0.0591961592,0.0933413059,-0.0313466638,0.0019112346,-0.0106925741,-0.156246379,0.2277073413,0.0202590767,-0.0655510128]],"hackathon_name":"WarwickHACK 2017","index":157,"project_description":"Pickup Coffee on the flyThe landing pageCoffee Shop Overviewmenuorder confirmationorder_confirmedorder_overviewreceiptAs computer science students we basically run on coffee. With that there are some difficulties, especially lanes. It is awful to wait for 15 minutes for one coffee or not to get one because you only have five minutes in between lectures.\nThat is why we created coffee2.me, a coffee ordering system, optimized for mobile.Coffee2.me is a coffee ordering system featuring user accounts, listing coffee shops around the user and the ability to directly order through the interactive system. Using client-sided javascript the user does not see the server working but gives him the experience of a native app.We used php 7 for everything server related and jquery for client-sided stuff.Getting the layout to work was sometimes tricky. Apart from that this laptop decided to shutdown in the process of submitting this here.It works, isn't that wonderful.If you have a dream... No seriously it was fun.We have to implement a dashboard for coffee shops, give the user control over settings and want to enable push notifications.WarwickHACK 2017Clearwood\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 26, 2017 07:18 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Coffee2Me","project_tags":["php","javascript","jquery"],"project_url":"https:\/\/devpost.com\/software\/coffee2me","keywords":"coffee,user,system,sided,ordering,minutes,server,shops,one,client,works,especially,everything,experience,featuring,five,dream,fun,get,getting"},{"level_0":158,"hack_vector":[[0.1510976553,-0.1191523597,-0.023773957,0.0650386363,-0.0273179449,0.1472176909,0.2081870735,-0.0441864207,-0.0210109316,-0.0287423935,0.0066347476,-0.0384744331,0.1434172541,-0.0660372674,0.0401511565,0.0016937525,0.2354450375,0.0061122072,0.0398643278,0.1214940995,-0.2357791811,0.0296559893,-0.049493745,-0.0196814705,0.1289186627,-0.0210329704,-0.0504525229,-0.1773258299,-0.0205943454,-0.0908043087,0.062292736,-0.1304188371,0.0372047499,-0.0638300925,-0.0368770249,-0.0078501245,0.1335167885,-0.1308843344,-0.0401173495,0.0302947219,0.0560084395,-0.1326377839,-0.1529301405,-0.0440681279,0.0388218239,-0.0664279461,0.0235869419,-0.0656061992,-0.0489261374,-0.2078381479,-0.1152958944,0.0155574912,-0.1026511788,0.0014509087,-0.164198339,0.1571030617,-0.1379864514,-0.0199057143,0.007623408,-0.0689762831,-0.069883585,0.0199654177,0.0834239051,0.0384201333,0.1195632815,-0.0001448987,-0.1194220483,-0.1329464614,0.0221758708,0.0365511067,0.0576687194,-0.0462531634,0.0271403696,-0.1259682775,-0.0004891321,-0.1104620993,0.1928788275,0.0146901598,0.0279857535,-0.1431799829,0.1309056282,0.1639982462,0.0312354416,0.1572966129,0.1103663817,0.1992242783,-0.1158623025,-0.0311215799,-0.0150846215,-0.0959012359,-0.1382078379,0.070983097,0.0706750378,-0.0174831394,0.0128278704,-0.0182210393,-0.1347239166,0.2219537795,0.0347808599,-0.0622236207]],"hackathon_name":"WarwickHACK 2017","index":158,"project_description":"gaming on awswindows server on mobileWe have a shitty computers so we decided to run games over aws instead.running gamesUsing steam on a Windows Server 2012 with a VPN server on there, running on a g2,2xlarge aws server.\nThat way we can use steam in-house streaming to run games on the aws machine from anywhere in the world.openVPN is awful, slow connection speed as well.We can play games.You do not need a 2000 \u20ac build to be able to play triple A titles in 4K.Getting it more stable, thinking about a modular systemWarwickHACK 2017Clearwood\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 26, 2017 07:23 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Gaming on the go","project_tags":["amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/gaming-on-the-go","keywords":"games,aws,server,steam,play,run,running,gaming,learned,instead,inspiration,house,go,getting,xlarge,modular,decided,connection,computers,challenges"},{"level_0":159,"hack_vector":[[0.1625725031,-0.0952007547,-0.0447627231,0.0410277657,-0.0250766855,0.1260834485,0.1924567968,-0.022562217,-0.0198441762,-0.0115531851,0.0171912033,-0.0677679181,0.1465625614,-0.0643474907,0.0784170702,-0.0008750155,0.1942836791,0.004376546,0.0397245586,0.1271086931,-0.2328900546,0.022866223,-0.0520629548,-0.0180499908,0.1020349637,-0.0266287941,-0.0255691409,-0.1796722561,-0.033252012,-0.0774455965,0.0603245497,-0.1077314392,0.0347817503,-0.0921369717,-0.0094092358,-0.0048051304,0.1124505103,-0.1415705532,-0.0702412724,0.0025366072,0.0497461185,-0.1313782036,-0.1622356176,-0.0172703937,0.0623639487,-0.0601567812,0.0198576264,-0.0923598483,-0.0339841396,-0.2232123315,-0.1652344912,0.0064219115,-0.1064679027,-0.0095951715,-0.195249632,0.161260426,-0.1176391691,-0.0122011174,0.0374924466,-0.0945807025,-0.0704635009,0.0252095684,0.0731555447,0.0465977266,0.1089702845,0.0077203661,-0.1027050689,-0.1169095039,0.024283044,0.0047436361,0.0673179254,-0.043186307,-0.0017391334,-0.1250983179,0.0213302094,-0.1221489906,0.1927842498,0.0021587203,0.0064848927,-0.1315803677,0.1148592159,0.1613932699,0.0578249134,0.1567228138,0.1000939831,0.2115238011,-0.0832733363,-0.0272184331,-0.0072973976,-0.080244422,-0.1410188675,0.065982461,0.0949259028,-0.0369913355,0.0010478941,-0.0116349421,-0.150850907,0.2474104613,0.0002155926,-0.0691441372]],"hackathon_name":"WarwickHACK 2017","index":159,"project_description":"Shows how many comments were made about some topic on Reddit and how users feel about it.I wanted to do something with Reddit API. While thinking about it I stumbled upon IBM's API that allows to gauge what kind of emotions are present in text. So I came up with an idea to merge both of these. My program parses Reddit's comments and then allows you to search for some topic and shows how often it was mentioned. It could help to determine that something is currently trending or being discussed particularly much and help to correlate event with that. Another feature is tone analysis. I used ToneAnalyzer API from IBM's Bluemix. The emotions shown are averaged over interval to show how they change. Sadly, free account only allowed me to make 1000 requests, so the only topic for which I could analyse emotions was Trump.It was quite an interesting project as I had no experience with either of these APIs and this was my first time coding with Python, which made up most of the project.At first I tried to figure out how PRAW API for retrieving content from Reddit worked. After that I needed to tie it with ToneAnalyzer. Lastly, I used PHP and Google Graph API to create interactive graphs.WarwickHACK 2017Medardas Zobarskas\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 26, 2017 07:00 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ToneAnalyserForReddit","project_tags":["php","python","css"],"project_url":"https:\/\/devpost.com\/software\/toneanalyserforreddit","keywords":"api,reddit,emotions,toneanalyzer,project,something,first,could,topic,help,used,ibm,allows,free,determine,figure,graph,feature,experience,event"},{"level_0":160,"hack_vector":[[0.1488092989,-0.1044877321,-0.0249591675,0.0433548242,-0.0129723176,0.1279247701,0.1923312098,-0.0341078006,-0.020734489,-0.0179639291,0.0173733979,-0.076082781,0.151551351,-0.0786391571,0.0704357103,-0.0074644624,0.1948291808,-0.0184666645,0.0460866131,0.1282736659,-0.2374518812,0.0386361443,-0.0500034317,-0.0074529159,0.1182997897,-0.0350552835,-0.0283058882,-0.1737260669,-0.0389806516,-0.0889270604,0.0642135888,-0.1193495318,0.0338776298,-0.086083129,-0.0216703247,-0.0200422592,0.1177658215,-0.1455276608,-0.0667699799,-0.010134072,0.05095369,-0.1244867593,-0.1427592933,-0.0201597679,0.0578489602,-0.0505431592,0.0221017804,-0.085643813,-0.0316707641,-0.2047893554,-0.1600994915,0.019322006,-0.116240561,0.0221666656,-0.202253297,0.1619860977,-0.1279670298,-0.0230626389,0.0245691407,-0.1094724312,-0.0730958581,0.0208510496,0.0751942843,0.0496660359,0.110981077,0.0241325367,-0.1002849489,-0.1170614064,0.0117678111,0.0178973563,0.0651050583,-0.0489914529,0.0227645729,-0.123355113,0.0497247018,-0.1059984043,0.1878167391,-0.0026091281,-0.0059385323,-0.1374136358,0.124211207,0.1590638757,0.0596053638,0.1480815709,0.1052186564,0.1991246045,-0.0875207558,-0.0503901839,-0.0089402273,-0.0692199543,-0.1433238089,0.0573309325,0.1038264334,-0.0334362946,-0.0062363334,-0.0089782905,-0.1602617502,0.2376906425,0.0106282271,-0.0689328909]],"hackathon_name":"WarwickHACK 2017","index":160,"project_description":"Insure yourself against the weatherWe feel like you should be rewarded if you have to walk outside, but especially if it's raining. And in London, that's pretty much every other day.It allows the user to insure themselves against bad weather (well, currently just against rain).We must have broken some kind of record in the number of APIs (at least ten!) we used on this project. Our email accounts were full of API keys by the end of the weekend!We used the Yahoo Weather Api to get weather data for the front-end, and we built an API that scrapes weather websites and calculates payouts, in Haskell(?!).The insurance uses smart contracts for Ethereum, written in Solidity, and we used Oraclize to validate the transaction.Finding a weather api that gives us exactly what we needed - we spent like 6 hours Googling the options and in the end we found that none of them were suitable, and working out a risk algorithm that was fair to both sides using the data we could get hold of.Writing web-stuff in Haskell was super tough (we started as a joke), but it was definitely a good learning experience!Turns out Solidity is pretty difficult to use too - it doesn't support most of the functionality you expect in a basic high-level language! We also ran into some concurrency issues - because we had to use the Web3 library to call Solidity methods in the Ethereum network.We had one Git nightmare, but luckily we were able to recover pretty quickly.Getting all the components to communicate with each other.That floats don't exist in solidity. :(Changing the world, fixing everything. Insuring against low and high temperatures?WarwickHACK 2017Designed front end, worked with Node.js, Meteor.js and the Web3 library to call solidity methods in the  contract on the ethereum network.I worked on the backed, designing, writing and testing the solidity contract to make sure it was secure but still managed to function well. I also aided with front end, hooking up web3 to communicate with the ethereum network and our smart contract.PK398\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 26, 2017 07:07 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"wEther","project_tags":["yahoo-weather","weather-underground","javascript","html","css","google-maps","meteor.js","jquery","node.js"],"project_url":"https:\/\/devpost.com\/software\/weather-g8lp3r","keywords":"weather,api,solidity,used,pretty,end,ethereum,like,haskell,built,high,web,data,get,ran,use,floats,found,finding,fixing"},{"level_0":161,"hack_vector":[[0.1409175992,-0.104057081,-0.0282654725,0.0418836959,-0.0144114429,0.1482029408,0.2055407017,-0.0415410101,-0.036280077,-0.0023648522,0.0122975847,-0.0592691451,0.1406030655,-0.0788071826,0.0506888255,0.0144030759,0.2251882702,-0.007640026,0.0461028852,0.1198856458,-0.2319961488,0.045286376,-0.0355139896,-0.0150350127,0.1305749118,-0.0203557815,-0.0367632583,-0.1836233586,-0.0241430402,-0.0830928385,0.0792874694,-0.1327307075,0.0384087414,-0.0789078698,-0.0295004193,-0.0215419456,0.1207176,-0.1279931068,-0.0415256545,-0.004760352,0.0488972068,-0.1487327963,-0.156938538,-0.0352355652,0.0585527718,-0.0413755104,0.0078806663,-0.0678968206,-0.0248902757,-0.2096941024,-0.1189953834,0.0209512915,-0.1058285907,0.0055674268,-0.1975034922,0.1589433849,-0.1497566402,-0.0104978457,0.0212310608,-0.0844546631,-0.0534932874,0.0237111561,0.0797022432,0.0473410673,0.1171426028,0.0076484969,-0.1033873111,-0.1335595399,0.0401659124,0.0327009,0.0742557943,-0.0455487333,0.0250779372,-0.1193535179,0.0172043648,-0.1190738678,0.1702358723,-0.0039132526,0.0253329892,-0.1348166615,0.126259625,0.1564887017,0.0601949543,0.1773733497,0.1047306657,0.1960163265,-0.10746032,-0.0345698521,-0.016234694,-0.0813566074,-0.1422899663,0.0549299903,0.0875108093,-0.0389149189,0.002142932,0.0092849191,-0.1477746814,0.2115753144,0.0265183263,-0.0738654435]],"hackathon_name":"WarwickHACK 2017","index":161,"project_description":"Manage your budgeting 2017 style IN VIRTUAL REALITY!Trying it out on gear VRRecent transaction breakdownsTotal balance** Financial problems for students **It connects up to a student's Monzo account and gets all their financial transactions and balance data. It then shows how much money they have their account. Additionally, it shows their recent transactions in a very easy to understand, categories way. This enables the student to understand their spending habits in a concise manner.ALL THIS HAPPENS IN VIRTUAL REALITY.MoneyBuddy is a web based VIRTUAL REALITY application which runs from within the web browser. It works on all modern desktop and mobile web browsers.The VR world is built using the A framework inspired by Ada Rose Edwards. Each of the components including the coins, floating signs and the graphs are manually drawn using the polygons. We built the engine for drawing the graphs and the coins. The objects in the virtual reality world are built using various A-framework polygons attached together to form complex structures.WarwickHACK 2017I worked on the front end HTML, on the A-Frame VR components and helped with java script.Argha Sarkar\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 26, 2017 05:53 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MoneyBuddy VR - Financial data visualisation 4 student","project_tags":["node.js","amazon-web-services","javascript","npm","domain","galaxy","google-cardboard","html5","css3","samsung-gear-vr","apache","github"],"project_url":"https:\/\/devpost.com\/software\/money-buddy-vr","keywords":"using,students,web,framework,reality,virtual,polygons,use,built,vr,based,transactions,complex,structures,graphs,data,monzo,components,performance,create"},{"level_0":162,"hack_vector":[[0.1546203941,-0.1524863094,0.0033049474,0.0967992917,-0.0499626286,0.1558725536,0.1626962423,-0.0507374704,-0.0329931676,-0.0294516422,-0.0072793197,0.0390347987,0.1304964423,-0.0851025805,-0.0098713757,0.0790368244,0.245626837,0.0383256264,0.0657689944,0.0744883195,-0.1937139779,0.0008948203,-0.0515606366,-0.052301798,0.1751903594,-0.0202346202,-0.0818521455,-0.1685840935,0.0323265456,-0.0832882077,0.0090513257,-0.0983645692,0.0823557004,-0.0402024761,-0.0365946889,0.011145859,0.1513791978,-0.1061694175,-0.0037254945,0.098987177,0.0652476698,-0.144093141,-0.1902871728,-0.0350558572,-0.0536514334,-0.055373095,0.0491294041,-0.0094442051,-0.0124021936,-0.1777712405,-0.0246588737,0.0416957997,-0.1104959548,-0.0549660623,-0.1094370931,0.1420838833,-0.162509948,0.06815698,-0.0097940788,0.0558835194,-0.0162467193,0.0406303592,0.0446647964,0.0778210983,0.1461549103,-0.043527469,-0.1410479546,-0.1756336689,0.0101514617,0.0090371603,0.0728663057,-0.0351772159,-0.0294428132,-0.1460716277,-0.063385807,-0.0520325601,0.1934795231,0.0365707763,0.0927735567,-0.1483367383,0.1033111513,0.1545427293,0.0059273997,0.1375065893,0.1633753181,0.1565729976,-0.1460941285,0.0680252388,0.0057041687,-0.1212128326,-0.0717269555,0.1094281226,0.0248957146,0.0247565918,0.0888531208,-0.1035199389,-0.0689129978,0.1515606046,0.1165738925,-0.0411897078]],"hackathon_name":"WarwickHACK 2017","index":162,"project_description":"It is a software which utilises computational linguistics in tradingRunning out of time, cant fill this out!WarwickHACK 2017Artur Begyan\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 26, 2017 07:27 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"CompLing","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/compling","keywords":"time,running,fill,cant"},{"level_0":163,"hack_vector":[[0.1432947814,-0.1082808897,-0.0183777194,0.0480389334,-0.0163974278,0.1470404714,0.2026610523,-0.0521828197,-0.028920617,-0.0162485279,0.0211900175,-0.0625715703,0.1499035507,-0.0742714107,0.0551974662,0.00429708,0.2270597368,-0.0077502527,0.0473445952,0.1264718175,-0.2309845984,0.0427890569,-0.0514019057,-0.0114363786,0.1349326223,-0.0246714056,-0.032109011,-0.1860558689,-0.0342575349,-0.0865333825,0.0748317391,-0.1276841462,0.0511691682,-0.0832424685,-0.0196540821,-0.0201724321,0.1230867356,-0.133327052,-0.0437842906,-0.008295998,0.0487022474,-0.1423491091,-0.1603360921,-0.0283280835,0.0437240973,-0.0466666333,0.0103207724,-0.0711624995,-0.0360278673,-0.2119232863,-0.1289346069,0.0157027431,-0.104549177,0.0059996583,-0.1887923926,0.1530063748,-0.1460370272,-0.0118786059,0.0232008398,-0.0938294083,-0.0587296635,0.0237780157,0.077467598,0.0441459008,0.1062815338,0.016765127,-0.1097915173,-0.135604009,0.0250087064,0.0292562209,0.0675829723,-0.0490755774,0.0343202315,-0.1273375601,0.0163917318,-0.1124602556,0.185995996,-0.0054466859,0.0326665416,-0.1302429885,0.1213316768,0.1491859257,0.0621594228,0.1601266861,0.1002417356,0.1888168007,-0.1079985797,-0.0403518379,-0.0200703517,-0.0813395754,-0.1345072091,0.0631014854,0.0835659206,-0.04224547,0.0056088762,-0.0089447293,-0.1419131756,0.2192776501,0.0225120541,-0.0700517893]],"hackathon_name":"WarwickHACK 2017","index":163,"project_description":"The collaborative air-penWhat if you could draw without paper or touchscreen? What if air was your medium? How about working with others? We explored the possibilities of working collaboratively, without physical touch.AirDraw allows for wireless drawing on a collaborative whiteboard, by moving your fingers through the air to mimic the movements of a pen. Users can simultaneously draw and observe, with the \"air pen\", or opting for the traditional mouse movements.AirDraw provides \"air-pressure\" sensitivity, where moving closer forces the pen to draw on the collaborative inkboard, and moving back simply shows the cursor. There are also gestures available for convenience, such as swiping to rub the board. You're finally able to save the canvas as a PNG image.Sockets.io was used to transmit data between all the collaborating clients. Native HTML5 canvas drawing techniques were used to draw onto the boards. Finally, the Leap Motion device was used to detect air gestures and air pen movements.WarwickHACK 2017Worked on all parts of the application. Focused mainly on the Leap Motion integration.I worked a little on designing the webpage using css. I had no clue how to use node.js or javascript before this project, but now I have more of an idea about sockets and web servers.Harjot Singh\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 26, 2017 07:29 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AirDraw","project_tags":["leap-motion","node.js","html5","canvas","websockets","socket.io","css3","javascript"],"project_url":"https:\/\/devpost.com\/software\/airdraw-skermj","keywords":"air,canvas,leap,draw,pen,airdraw,movements,drawing,motion,collaborative,moving,used,working,gestures,finally,challenges,html,producing,javascript,without"},{"level_0":164,"hack_vector":[[0.1447589248,-0.154628247,0.0245283078,0.0998119786,-0.0591731109,0.1584954411,0.1556839198,-0.0543737039,-0.0355316065,-0.0315799229,-0.0084641222,0.0689566582,0.119429782,-0.0816687495,-0.0258174669,0.1073881835,0.2619609833,0.049623441,0.0542945564,0.0611808673,-0.1571542025,-0.0083706565,-0.053684067,-0.078219004,0.1802740395,-0.0157419667,-0.0871308371,-0.1674963385,0.0493499115,-0.0715332255,0.0029779931,-0.0735540763,0.0933760256,-0.0364354625,-0.0408029631,0.0325421132,0.149134174,-0.0859249681,0.026557494,0.1238064617,0.0558546633,-0.1370263398,-0.1857240945,-0.0261249319,-0.0828284994,-0.0508043319,0.0573907793,0.0176972933,-0.0083694682,-0.1644296944,0.0164076947,0.0463119969,-0.1010893807,-0.0824145153,-0.0534126684,0.134855628,-0.1578934789,0.0971829146,-0.0245439745,0.0990154743,0.008808692,0.0448956229,0.0343083143,0.0857253,0.1498113424,-0.0702270642,-0.1430398226,-0.18024306,0.0030818919,-0.0093049901,0.0574054793,-0.0189709049,-0.0371096097,-0.1478148997,-0.1005395502,-0.0299323536,0.1902704388,0.0338376574,0.1197337434,-0.1405393481,0.0992850363,0.1416111887,-0.0084825046,0.1099275872,0.1630937308,0.1288384646,-0.1501763016,0.104693912,0.0157905426,-0.1284366846,-0.0501361452,0.1190438867,-0.0102015277,0.0516305305,0.107299909,-0.1262904257,-0.0304668229,0.1035886481,0.1393312812,-0.0291759521]],"hackathon_name":"WarwickHACK 2017","index":164,"project_description":"Improvised storyWarwickHACK 2017Amaury de Rauglaudre\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 26, 2017 07:37 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Improv Story","project_tags":["python","flask","html"],"project_url":"https:\/\/devpost.com\/software\/improv-story-1x7y5g","keywords":"wow,story,ran,proud,next,learned,inspiration,improv,challenges,built,accomplishments"},{"level_0":165,"hack_vector":[[0.1253187358,-0.0986398458,-0.0361006781,0.0478832535,-0.0204387326,0.1397727132,0.2063466758,-0.0259764642,-0.0306045394,0.0002742622,0.0124712558,-0.0507551134,0.1371136308,-0.0877443552,0.0561521947,0.0238862615,0.2322549075,-0.0033577112,0.0419196151,0.1107721254,-0.2336703986,0.0395998955,-0.0431615002,-0.0282668415,0.1191060171,-0.0220836587,-0.0433371291,-0.1934718639,-0.0097564636,-0.0750080496,0.0648508593,-0.1370577663,0.042393595,-0.0875270665,-0.0367868133,0.0004353813,0.1255858094,-0.1322553009,-0.0375510603,0.0116978884,0.0400370806,-0.1499016881,-0.1674157828,-0.0270317867,0.0579359755,-0.040213041,0.0205724891,-0.0645843446,-0.0255951341,-0.2070030272,-0.1180761233,0.0062519391,-0.1021808982,-0.0005491187,-0.184153378,0.1470543742,-0.1477210075,-0.0036932039,0.0193392225,-0.0797296762,-0.0622047335,0.0294854958,0.0868398994,0.0569312982,0.1241925359,-0.0063586161,-0.0890774876,-0.1339763701,0.0489239395,0.0170624405,0.0685685501,-0.0531131737,0.0252323542,-0.1273948848,0.0099054473,-0.130890131,0.1766515374,0.0106290998,0.030753009,-0.1379185319,0.143266812,0.1669607311,0.0672341958,0.1770766079,0.1051398888,0.189246282,-0.1058878824,-0.0152009213,-0.0027511294,-0.0962484926,-0.1537991166,0.0595302023,0.0863362327,-0.022464592,0.0196035579,-0.0061172289,-0.1370352358,0.1989156902,0.0387597717,-0.0675353557]],"hackathon_name":"WarwickHACK 2017","index":165,"project_description":"A Chrome extension to provide seamless end to end PGP encryption to Facebook messengerProviding secure communications over proprietary chat apps in a way that is seamless for the end user and gives them full control over their security without having to trust a third party.Provides a seamless PGP encryption over facebook chat.It is a Chrome extension that uses openpgp.js and jquery to edit messages available in active facebook chats to decrypt encrypted messages in real time and provide an easy way of encrypting them in the same page.Facebook source is a nightmare to navigate.\nMinimal knowledge of webdev and javascript when starting the project.\nCaching issues in Chrome caused literally hours of painful and useless debugging.Javascript was a mistake.Easy to set up encryption on a chat by chat basis.\nEncrypting messages directly from the facebook text box rather than the extension button.WarwickHACK 2017jacques ryan\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 26, 2017 07:29 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Cryptom","project_tags":["javascript","chrome","jquery"],"project_url":"https:\/\/devpost.com\/software\/cryptom","keywords":"facebook,chat,messages,extension,encrypting,encryption,seamless,chrome,easy,javascript,way,full,directly,gives,hours,end,inspiration,issues,encrypted,edit"},{"level_0":166,"hack_vector":[[0.1435963362,-0.0733591318,-0.035124477,0.0287908874,-0.01371588,0.1358221173,0.206211403,-0.0205952432,-0.0129322167,-0.0081298072,0.0137078026,-0.0957628861,0.1359749138,-0.0614539534,0.0803366452,-0.0099304235,0.1893937588,-0.0061583305,0.0354582705,0.1312987506,-0.23481749,0.0310911406,-0.0512717254,-0.0044213189,0.0973977596,-0.0281617716,-0.0213642977,-0.1725906432,-0.0448477231,-0.0838506818,0.0738384053,-0.1147852316,0.021986628,-0.0916090459,-0.0233033672,-0.0030939442,0.108703509,-0.1348345727,-0.065983437,-0.0148636708,0.0382274352,-0.1227101758,-0.1300118566,-0.0249772668,0.0914836749,-0.0611749887,0.0109685408,-0.0855064094,-0.0345810093,-0.2192986459,-0.1609047949,0.0035379166,-0.1039234325,0.0236195046,-0.1975674778,0.1565276235,-0.1222112402,-0.0406573713,0.0378697813,-0.1255842,-0.0852618441,0.0137091782,0.0789498314,0.0364982784,0.1055282131,0.021688832,-0.0893677771,-0.1150031015,0.029626891,0.0182679538,0.0560976453,-0.0524872169,0.0255899485,-0.1126224697,0.0419583209,-0.1275089681,0.1784310788,-0.0056650569,-0.0081034303,-0.13803038,0.1180973873,0.1568630785,0.0674464703,0.1557270885,0.079491064,0.2086639255,-0.0738956258,-0.0534746647,-0.0144690545,-0.0742728114,-0.1676006764,0.0457277559,0.0975509658,-0.0498710945,-0.0272488836,0.0297655948,-0.1641492397,0.2517979145,-0.0077199144,-0.0796638057]],"hackathon_name":"StrathHack17","index":166,"project_description":"A chat bot to help answer your questions about student loans. Available on Facebook Messenger and Skype.It works on SkypeIt works on MessengerThe need for a faster and more comfortable way to obtain information about student loans. We wanted to make it as easy to access and use as possible. That's why we chose to have our chat bot on Facebook Messenger, eliminating the need to install a separate app. It also works on Skype, just to be sure it is as easy to reach as possible!\n   We also started working on a website to handle queries using voice recognition. Right now it recognizes voice and outputs it to text. This can now be passed to our bot to handle the rest.We have trained the bot to answer a number of questions about student loans. Application process, tuition fees, how you will repay the loan etc. Apart from that,  If you still have questions, after asking you where you're from, it can put you in touch with a student from your country who has experience with student loans so he can give you some tips.We used node.js for our scripts. We created a bot using the Microsoft bot framework. Then, using the messenger platform for developers, we connected it to our Facebook page. Now the input from the user would be passed by the bot framework to our server, hosted using ngrok. The input was passed to our RECAST.AI bot, which we trained to recognize multiple intents. We made it recognize the key words, as well as more natural language (e.g \"uni\" or \"postgrad\"). This would provide another layer of comfort for the user. After the input is interpreted, the appropriate answer is sent to the user.None of us had done anything like this before. We had no idea how any of the services we used worked, or even what the syntax of node.js was.We made a bot! It talked back, it answered our questions! We managed to understand new technology quickly, and most importantly understand what else we need to learn in order to make better bots.Apart from the languages and individual services we used for the first time, we managed to learn how to use them all at once. We learned that connecting services to a script and one another is not as tough as it looks.The bot's intents are implemented in separate files. This means new things can be added quickly, and parts can be updated. In the future, we could make the bot understand language even better, add new things it can answer or connect it to a database of information regarding your personal student loan. The data provided by Recast.ai also has many other components, like sentiment analysis, which could be used.StrathHack17I set up the Microsoft bot framework, the Messenger platform and the Recast.ai bot. I wrote the .js scripts that provide answers based on data interpreted by Recast.I worked on the Android app, the website and the design implementation of the speech recognition API.I built a voice recognition module over Annyang API which I later on incorporated in the website of our app. I helped my teammates with Recast.ai bot, wrote some pieces of it (in .js) and I also did some configurations on the Microsoft's backend for the chat bot.Mihnea Savu\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 05:35 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SLC: The Bot.","project_tags":["node.js","html5","css3","json","javascript"],"project_url":"https:\/\/devpost.com\/software\/slc-the-bot","keywords":"bot,student,used,using,user,new,need,passed,understand,answer,make,input,loans,questions,also,services,handle,even,facebook,possible"},{"level_0":167,"hack_vector":[[0.1415293217,-0.0784813911,-0.0379771404,0.0355846733,-0.0231012385,0.1217760667,0.2018196881,-0.0121051632,-0.0288457982,0.002510835,0.0075630108,-0.080673106,0.1478940398,-0.0731594861,0.0794229731,-0.0081757559,0.1952148378,-0.0024460529,0.040961381,0.121276699,-0.227638647,0.033665996,-0.0471842736,-0.0110366866,0.105793722,-0.0254624411,-0.0307664331,-0.1741696745,-0.0215074755,-0.0734859779,0.0606636703,-0.1232718974,0.0211664233,-0.0860810876,-0.0223871712,0.006493845,0.1150371283,-0.1375223547,-0.0687870532,-0.0004044789,0.0328968428,-0.1374566555,-0.1495068073,-0.0139483884,0.0719631836,-0.0581693836,0.0164641161,-0.0876069069,-0.0181977078,-0.2059134096,-0.1569522172,0.0004795483,-0.1100548133,0.0136409169,-0.1950005591,0.1554915011,-0.1274151355,-0.0206672251,0.0386223681,-0.1076954454,-0.0779132247,0.0300414898,0.0791216791,0.0560040809,0.1137071922,0.0112054106,-0.0866965503,-0.1210447624,0.0317035429,0.0026746923,0.0653770268,-0.0522281528,0.0193098858,-0.1140344217,0.0438790768,-0.1410718411,0.1814577281,0.0009186144,0.0073696114,-0.1331891418,0.1355040818,0.1598683298,0.0776787922,0.1608231664,0.0943201408,0.2013471425,-0.0905054137,-0.0308087636,-0.0052477429,-0.0893155038,-0.1532542706,0.0486386828,0.1033424288,-0.0404803827,0.0060045482,0.0070272833,-0.1700968295,0.2429079413,0.0082067661,-0.0779307857]],"hackathon_name":"StrathHack17","index":167,"project_description":"Bringing conversational interfaces to student loan applicationsGeneral Information QueryUser Account QueryPeople want to get to information quicker and websites are quickly becoming obsolete. We decided to help Student Loan Company ride the wave of the oncoming conversational chat interface wave.Loanly is a collection of services which allows any student to access information using natural language, either on the Amazon Echo or through an automated text bot that understands natural language over text.We used Python to scrape data from the Student Loan Company website, which was then fed into a noSQL database. We also set up a mock database that mimics user info. That way, users can access information about their loan themselves. This noSQL interface was queried using Javascript libraries by the Alexa and Twilio bot to provide structured responses towards user queries.Getting Alexa to understand accents was difficult. It took us some time to fix this problem. Scraping data from the Student Loan Website was difficult due to bad html and lack of consistent structure. Moreover, translating it into structured data that can be easily queried was tricky too.We got all of our features done in time.We learnt a lot of additional Alexa functionality. Web scraping was a new thing to learn too. Integrating multiple with one database.Improving the database and contextual understanding.StrathHack17Built the Alexa skillDesigned website.\nWrote functions in javascript to retrieve data from the database and perform calculations.\nVideo editing.I did the scraping of the student loans company website to gather information and put our work online.Aayush  Chadha\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 05:35 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Loanly","project_tags":["python","node.js","html5","css","javascript","amazon-web-services","twilio"],"project_url":"https:\/\/devpost.com\/software\/loanly-m8q4lj","keywords":null},{"level_0":168,"hack_vector":[[0.1478865594,-0.0955156907,-0.0152904773,0.0500813387,-0.0145816067,0.1533121616,0.2031150162,-0.0436201803,-0.0326976851,-0.0176777951,0.0008108645,-0.0696693435,0.1368089765,-0.0773190483,0.0407057256,0.0318667367,0.2385921329,0.0053243628,0.0578748845,0.1208053827,-0.2265071273,0.0576403476,-0.0454345345,-0.0250553638,0.1197103783,-0.0287086088,-0.0440699346,-0.1931545138,-0.0322091579,-0.0796154365,0.0642658025,-0.1239238456,0.0617989637,-0.0872447416,-0.0341786109,-0.0141142933,0.1415686458,-0.1228416264,-0.033041168,0.0131004527,0.0497083627,-0.1547265649,-0.1754785925,-0.0442466773,0.0482642278,-0.0530020967,0.0194827598,-0.069988437,-0.0208569858,-0.208501488,-0.1129693463,0.0224497579,-0.1119480357,0.0082796272,-0.1838879287,0.1525128186,-0.1538409889,-0.0108079929,0.0322403535,-0.0723276511,-0.0672447905,0.012529877,0.0834649652,0.0432374328,0.1188510358,-0.0015112022,-0.1034073979,-0.1477720886,0.0368979685,0.0383035094,0.0784066617,-0.0609769188,0.0100591518,-0.1228676066,0.0111163259,-0.1150045469,0.1767667979,0.0059235282,0.0444157235,-0.1298907399,0.1138677672,0.1481042206,0.0543788299,0.1634552777,0.1117296666,0.1744431108,-0.1098134071,-0.0236689616,-0.0038410884,-0.096692346,-0.137883991,0.0583426543,0.065590784,-0.0379695408,-0.0024769437,-0.0053186682,-0.1374177337,0.2023931295,0.0433024503,-0.0754576847]],"hackathon_name":"StrathHack17","index":168,"project_description":"Team Memeworks, Inc.'s repository for StrathHack 2017. Native-looking webapp that works on desktop and mobile.The main menu, showing the amount of the loan currently received.The menu sidebar.The search results. These will be read out by the TTS engine.The search results linking to the FAQ when the app is asked for assistanceThis is a webapp made with Google's Material Design standards in mind. Since it runs in the browser, it can be used on both Desktop and Mobile. When adding it to the Home screen (on Android, at least), it appears to function pretty closely to a native app.It has:StrathHack17I worked on the text input -> query handling, and on the speech synthesis for the results of the queries.Scott Maxwell\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 05:26 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Memeworks - SLC App","project_tags":["html","python","css","javascript"],"project_url":"https:\/\/devpost.com\/software\/strathhack2017","keywords":"app,adding,making,talk,easy,webapp,find,keyword,information,inc,identification,home,google,function,desktop,extremely,loan,design,data,closely"},{"level_0":169,"hack_vector":[[0.1425914317,-0.0927771106,-0.0171970781,0.0569386557,-0.0182142928,0.139754653,0.198298946,-0.0338750668,-0.0452592634,-0.0123576438,0.0162152238,-0.0662685931,0.1492732018,-0.0747869164,0.0609449446,0.0056618741,0.2175346017,-0.0072341096,0.0549776107,0.128481999,-0.2294452637,0.0383515321,-0.0487191379,-0.0172495712,0.1254849732,-0.025927376,-0.0426127166,-0.1823916882,-0.0266489759,-0.0835870802,0.0649527907,-0.1171781346,0.0397989452,-0.0760603622,-0.0199734792,-0.0112024294,0.1282321066,-0.1255290508,-0.043029286,0.0071428875,0.06267526,-0.1408194751,-0.1668682247,-0.0265978351,0.0474064946,-0.0446112454,0.0128134992,-0.078788653,-0.0115646766,-0.2076590508,-0.1229696423,0.0200254396,-0.1102675796,0.0172779094,-0.1956311017,0.1641270518,-0.1495119035,-0.0002732291,0.0298973098,-0.0922053754,-0.0614102073,0.023969207,0.079046309,0.0533639081,0.1245111972,0.0149717098,-0.0981176943,-0.1427807212,0.0233846698,0.0200720467,0.0707202852,-0.0427744091,0.0084529305,-0.1211126074,0.0272154398,-0.1111984625,0.1849744618,-0.0014643617,0.0215849988,-0.130258888,0.1207640693,0.1527260542,0.0663844943,0.1529620588,0.1187424883,0.1965449899,-0.1035405621,-0.0395825021,-0.0105046611,-0.0806020126,-0.1427425146,0.0596197508,0.0938695595,-0.0336247981,0.0051337085,-0.0080052447,-0.1485150903,0.2237643152,0.0258012451,-0.0648717955]],"hackathon_name":"StrathHack17","index":169,"project_description":"Authentication using hand motionsWe weren't able to do the assigned challenge for multiple reasons, including a lack of required skills. So we came up with our own. We visited the MLH hardware lab to see what was avaliable, then came back to the desk to brainstorm ideas. We eventually settled on Secret HandshakeSecret Handshake is a 'proof-of-concept' app which uses hand gestures to perform user authenticationWe used version 2 of the LeapMotion SDK, along with java, to build Secret HandshakeGetting the same versions of the SDK installed and working on our machines.\nDetecting the individual digits on click\nConfiguring the sensitivity of the password checkerGetting it working within the time limitHow to work with the Leap Motion API\nUsing git branches is veryy very importantFinding a way to make it easy to slot into another application for authentication, and improving the accuracy of the detection.StrathHack17Stephen Brown\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 06:01 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Secret Handshake","project_tags":["java","leap-motion"],"project_url":"https:\/\/devpost.com\/software\/secret-handshake","keywords":"handshake,secret,working,sdk,came,getting,authentication,easy,configuring,desk,detecting,detection,digits,finding,eventually,click,gestures,git,hand,hardware"},{"level_0":170,"hack_vector":[[0.1571017355,-0.1489294618,-0.0032395371,0.0709341615,-0.037795268,0.1496717483,0.1907050163,-0.0459606349,-0.0365381576,-0.0115141459,0.0125687225,0.0000521923,0.1429139525,-0.0685546696,0.0285841245,0.0602942668,0.2421212643,0.0167994183,0.0426091477,0.0980024412,-0.2125785947,0.022657482,-0.049335435,-0.0409543552,0.1585951298,-0.0276451986,-0.0546239316,-0.191352874,0.0067456882,-0.0828002095,0.0497500114,-0.1063130051,0.0612351969,-0.0684363022,-0.0360009708,0.0041758246,0.1331909001,-0.1224102303,-0.0246025175,0.0568687394,0.045300357,-0.147882998,-0.1733415574,-0.0304608699,-0.00812204,-0.0516059734,0.0372124128,-0.0329464749,-0.0151632102,-0.2000105232,-0.0687912926,0.0207337439,-0.1162310466,-0.0358054973,-0.1369837373,0.1594292969,-0.1531454325,0.0377915241,0.0122415749,-0.0087467926,-0.0421182998,0.0389788896,0.0573212802,0.0743069798,0.1341022998,-0.0253802352,-0.1353580505,-0.1585320234,0.0207217541,-0.0027050807,0.0638350546,-0.0371325761,0.004550565,-0.1405914724,-0.0423613861,-0.0939506739,0.2025872618,0.0090401238,0.0775273368,-0.1417205781,0.1275650859,0.160125047,0.0214794967,0.1496501714,0.1515443772,0.1731968224,-0.136905387,0.031405881,-0.0031977009,-0.1128250584,-0.1104992032,0.0999248326,0.0485799015,-0.0041003698,0.051223468,-0.0657876357,-0.1053031906,0.1795598865,0.0825244859,-0.0529118441]],"hackathon_name":"StrathHack17","index":170,"project_description":"Classic gameClassic game implementing  modern technologyUses the neuro headset to identify moves and gesturesTake readings from the headset and translate them into movementsSetting the headset upThat we learn a new technologyHow brain waves can be readMaybe implement mind commandsStrathHack17implementing and testing the gamen and EMOTIV technologyConstantinos Fiakas\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 06:33 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"NeuroPong","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/neuropong","keywords":"headset,technology,waves,mind,classic,commands,game,gestures,identify,implement,implementing,learn,maybe,modern,uses,movements,moves,neuro,new,read"},{"level_0":171,"hack_vector":[[0.1447213292,-0.1527494192,0.0174711123,0.0874277726,-0.0585157461,0.1587658525,0.1674647331,-0.056265071,-0.0367048606,-0.0299578346,-0.009562158,0.0562907346,0.1201085374,-0.0811996609,-0.020539606,0.1059138477,0.2650957108,0.0477068722,0.0495649874,0.0706182569,-0.1698706448,-0.0024827963,-0.0493461974,-0.0763067007,0.1747562736,-0.0138043873,-0.083254382,-0.1693101078,0.0427129939,-0.0770601928,0.0063290279,-0.0849720165,0.0895796418,-0.0417807177,-0.0426294692,0.0199558586,0.1533630192,-0.0946638137,0.0207079425,0.1154255718,0.0532826036,-0.1435227692,-0.1877099574,-0.0362361558,-0.0676174164,-0.057387352,0.0539663509,0.011506347,-0.0125854779,-0.1737355292,0.0044986024,0.0419360138,-0.1031048819,-0.0763315707,-0.0706519485,0.1454171836,-0.1623609364,0.0893810466,-0.0209208187,0.0804007426,-0.0021062742,0.0372731164,0.0387619697,0.0854609013,0.1460227817,-0.0631253347,-0.14251405,-0.1772670597,0.0136109358,-0.0010797397,0.0617871992,-0.0277171955,-0.0340133533,-0.1464288086,-0.0904965922,-0.0459483415,0.1857602149,0.0327170454,0.1162943467,-0.1397528648,0.1040912122,0.1464127749,-0.0001986948,0.1226334199,0.1640592068,0.1344936788,-0.1542992443,0.0884597749,0.0166564006,-0.1271437109,-0.0647316575,0.1115201563,0.0031059992,0.0370511189,0.0949224085,-0.1144120619,-0.0425058939,0.1110964492,0.1304925233,-0.0315787457]],"hackathon_name":"StrathHack17","index":171,"project_description":"awsome easter eggThis is the repository for teamStrathHack17Bence Sebesty\u00e9n\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 06:34 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"strathack17-union","project_tags":["php","javascript","html"],"project_url":"https:\/\/devpost.com\/software\/strathack17-union","keywords":"team,strathack,repository"},{"level_0":172,"hack_vector":[[0.1617784053,-0.1154432297,-0.0219592862,0.0667265654,-0.0195955373,0.1504420191,0.1905335933,-0.045758862,-0.0368153676,-0.004214576,0.0062898025,-0.0551783778,0.165296033,-0.0894419923,0.0424862914,0.0095750457,0.2040281594,-0.0074565751,0.0637187585,0.1048711315,-0.2273349911,0.030691741,-0.0504695475,-0.005161582,0.1554925889,-0.0339609236,-0.0535572693,-0.1732257307,-0.0225239694,-0.0836181119,0.0707810298,-0.116013132,0.0554445274,-0.0658636466,-0.0343953483,-0.0089071896,0.1397144496,-0.130719468,-0.0331932493,0.0099106003,0.0724913254,-0.1303796321,-0.1722564846,-0.0065523279,0.0341944732,-0.0297697838,0.0237908661,-0.0774959475,-0.014638491,-0.2105973512,-0.1291483343,0.0426761135,-0.1175981015,0.0210024491,-0.2034718543,0.1533605307,-0.1545860171,0.0082808025,0.016384054,-0.0592436977,-0.0540930443,0.0273243897,0.0735499114,0.051011987,0.1248748004,0.0123770498,-0.0932613015,-0.1364424527,0.0118608112,0.023300508,0.0756633207,-0.0370543562,0.0027130521,-0.1303835958,0.0234902333,-0.0805134699,0.1939093471,0.0115240524,0.017770404,-0.1396529078,0.1136590987,0.1534130275,0.0504078716,0.1477820873,0.1311110258,0.2011471093,-0.0911874175,-0.0260516014,-0.0009968267,-0.0865916461,-0.1237805858,0.0707727,0.0888510346,-0.0188790858,0.0193071365,-0.0289900601,-0.1301289946,0.2188573629,0.0445493534,-0.0597783029]],"hackathon_name":"StrathHack17","index":172,"project_description":"An online listing system for advertisementsStrathclAD mainIt is a system that offers Union Web Services, mostly listing adverts.We started by gathering the requirements, coming up with the initial designs, spiting up the tasks between the member's, and continuously improving and building on top of what we have.Synchronising the project between members.Developing a working system from scratch in a short period of time.Everyone learn new technologies and techniques for developing web apps.StrathHack17I was mainly working on the back-end and also had to work  with jquery and bootstrap for the first time which i found a bit challenging but overall it was very good experienceIldiko Szabo\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 06:49 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"StrathclAD","project_tags":["php","css","javascript","html5","bootstrap","jquery","mysql","netbeans","phpmyadmin"],"project_url":"https:\/\/devpost.com\/software\/lackofabettername","keywords":"developing,system,web,apps,building,members,member,listing,learned,learn,inspiration,initial,improving,gathering,everyone,mostly,designs,continuously,adverts,coming"},{"level_0":173,"hack_vector":[[0.1587060392,-0.1454972178,0.0096224956,0.0939692333,-0.0421229228,0.1810344905,0.1862891167,-0.0756346658,-0.0269291345,-0.01770081,0.0014887272,0.0272626393,0.1426488459,-0.0952960849,0.0112930629,0.0427240469,0.2537280917,0.030294504,0.0667380393,0.0729126781,-0.1894064546,0.0249108523,-0.0455036908,-0.0579806194,0.177129969,-0.0192569401,-0.0660066083,-0.1933012605,0.019128494,-0.061643526,0.0424797684,-0.1177947447,0.0779159814,-0.0677641407,-0.0575991757,0.0076516401,0.152001828,-0.1086517423,-0.0122560225,0.0756825209,0.0548287146,-0.1492566019,-0.1638962775,-0.0203721672,-0.0274541955,-0.0260755643,0.0417295508,-0.0106511228,-0.036797855,-0.1875658631,-0.0556702912,0.0421044528,-0.1170230508,-0.039445281,-0.1006477326,0.1350068897,-0.1466054767,0.0612194389,-0.015780732,0.039439898,-0.0133825131,0.0254031587,0.064094387,0.0714315996,0.1394365281,-0.0454034097,-0.1288244128,-0.1537028998,0.0089637879,0.0157483798,0.0644966513,-0.0354099162,0.0090970527,-0.158535257,-0.0563514978,-0.067241095,0.2042066753,0.0298474208,0.0800732076,-0.1529445499,0.1334413588,0.1509409249,0.0206930507,0.1466577798,0.1472353637,0.167017445,-0.1303590387,0.0517093576,0.0165828876,-0.1101540178,-0.0959792137,0.090467006,0.041478537,0.0243060514,0.0917710215,-0.0893944353,-0.0622590743,0.1557781845,0.0974868238,-0.0527730137]],"hackathon_name":"StrathHack17","index":173,"project_description":"Web Service for strathhack17Restful Web Service & React.Js Front Endhttp:\/\/stackoverflow.com\/questions\/14659891\/m2e-wtp-error-path-target-m2e-wtp-web-resources-meta-inf-manifest-mf-no-suchStrathHack17John Watt\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 06:58 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hammertime","project_tags":["javascript","java","html","css"],"project_url":"https:\/\/devpost.com\/software\/hammertime-gruj76","keywords":"manifest,inf,wtp,web,eclipse,meta,mf,java,jre,jdk,installed,http,locally,hammertime,front,file,error,end,directory,js"},{"level_0":174,"hack_vector":[[0.1465351135,-0.1557097286,0.0207358357,0.100623019,-0.0575473756,0.1625546366,0.1635308564,-0.0599788018,-0.0338225923,-0.0289510544,-0.0032587233,0.063028954,0.1252749264,-0.0796046257,-0.0179151874,0.0984997377,0.2637226284,0.0449192151,0.0545096286,0.0686267391,-0.1671080738,-0.0025041844,-0.053573627,-0.0733391121,0.18108733,-0.0147829782,-0.0852189288,-0.1759444922,0.0425624885,-0.0709614754,0.0143884877,-0.0802237391,0.0899481997,-0.0434543528,-0.0397762768,0.0249741767,0.1463256925,-0.089348726,0.0212506857,0.1152269989,0.0572950765,-0.1429549456,-0.1865095794,-0.0312836617,-0.0739741996,-0.0460760146,0.0501404665,0.0127665764,-0.0137305679,-0.1689659357,0.0044294768,0.0453619733,-0.1029258966,-0.0775061771,-0.0671798438,0.1377855688,-0.157675311,0.0915352032,-0.0223980974,0.0844722092,0.0043455544,0.0426347889,0.0397005416,0.0824223906,0.1480065882,-0.0639788806,-0.1434087157,-0.1774578094,0.0072699017,-0.0037825366,0.0579158515,-0.0201243702,-0.0296528246,-0.1487088948,-0.097764805,-0.0365516841,0.1933561116,0.0310191736,0.1103038415,-0.1419694871,0.1007413119,0.1439083815,-0.0014698951,0.1168079674,0.1609932184,0.1406527013,-0.1487086415,0.0923504531,0.0137844887,-0.1238491982,-0.0580407344,0.1170097664,0.0006652851,0.0471662432,0.1010643318,-0.1177886426,-0.0379839018,0.1146214679,0.1293270737,-0.0303805955]],"hackathon_name":"StrathHack17","index":174,"project_description":"Mouse Control with Emotiv InsightMouse controlStrathHack17Leonardo Roelofse\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 06:57 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"TabsVsSpaces","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/tabsvsspaces","keywords":"mouse,control"},{"level_0":175,"hack_vector":[[0.169764027,-0.154785648,0.0083214315,0.0880217478,-0.050889004,0.1515591294,0.1698989719,-0.0440029018,-0.0258920323,-0.0354848132,-0.0021625026,0.0113003496,0.1484415531,-0.0837740228,0.0130281784,0.0712193921,0.2339395434,0.0222150255,0.0492892526,0.1022661179,-0.2111902088,-0.0089866789,-0.0527883023,-0.0499295555,0.171716243,-0.0300304294,-0.0685534924,-0.1650200933,0.014250258,-0.0915066898,0.0250398461,-0.077275835,0.0649111718,-0.0473679751,-0.0339657515,0.0124628618,0.1484277099,-0.1285560578,-0.0233485829,0.0824098885,0.0659247711,-0.1292177439,-0.1614710987,-0.0241046846,-0.0305860583,-0.0617358759,0.0526673757,-0.0251565855,-0.0189392269,-0.2026926428,-0.0683877468,0.0540364161,-0.1179805323,-0.0443285778,-0.1208512634,0.15959993,-0.1445147097,0.0495692827,-0.0128920237,0.0179016609,-0.0288144257,0.0403945483,0.0347612947,0.0785777271,0.1455529928,-0.033062391,-0.1381732374,-0.1606956273,-0.0131154545,-0.0102101928,0.0541157946,-0.0283439271,-0.0180337541,-0.1522962451,-0.0412781984,-0.0453816727,0.2065802217,0.0102855843,0.0571190752,-0.1592264175,0.1087233499,0.1687097996,0.0064565158,0.1260270923,0.1498753875,0.1822830886,-0.1298797131,0.049974937,-0.0047548055,-0.109747991,-0.0868930072,0.1150299758,0.0314007886,0.0225851685,0.0654752329,-0.0809758827,-0.0925827473,0.194641605,0.0914249122,-0.042240601]],"hackathon_name":"StrathHack17","index":175,"project_description":"#NOJAVASCRIPTBasically we got told to do some things so we done some things and this is the things that we done_ ta da _StrathHack17Rebecca Liddle\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 06:45 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SLCApp","project_tags":["python","html","css"],"project_url":"https:\/\/devpost.com\/software\/team_name","keywords":"things,done,told,ta,got,da,basically"},{"level_0":176,"hack_vector":[[0.1520897746,-0.0899915025,-0.0186445042,0.0468034744,-0.0129814325,0.1363655925,0.200434953,-0.0231866781,-0.0319253579,-0.014610216,0.0140695861,-0.0771949589,0.1381296813,-0.070741564,0.0654912367,-0.0068217381,0.1984320879,-0.0134778135,0.0583007634,0.1288652122,-0.2421382815,0.0427530892,-0.0393378548,-0.0111731244,0.1021455824,-0.0311633982,-0.0326644257,-0.1699629128,-0.0264013503,-0.0920294747,0.0655679703,-0.1051441282,0.0324111916,-0.0890055522,-0.015762696,-0.020767523,0.1269499958,-0.1442799121,-0.0675067231,-0.0089057302,0.0530828387,-0.1343829632,-0.1382770985,-0.0308991671,0.0758948922,-0.0476172939,0.0089453878,-0.0892721936,-0.0122819282,-0.2121686935,-0.1511119008,0.0250304621,-0.1156556308,0.0244264565,-0.2111653537,0.147623539,-0.1350183338,-0.0292037986,0.0464691035,-0.1114215851,-0.0688316524,0.0194342192,0.0854374096,0.0407716893,0.1135381684,0.0159457549,-0.0928697512,-0.1182705536,0.0193210915,0.0284038465,0.067412518,-0.0463759899,0.0123381484,-0.1213485152,0.0293235853,-0.1319662035,0.1721345037,0.0011427999,-0.0014184356,-0.1381562203,0.1115116179,0.1439973712,0.0533173233,0.1622688025,0.104920648,0.1991192549,-0.0891617611,-0.0470013805,-0.027274197,-0.0785020068,-0.1546174139,0.0543703288,0.0999952033,-0.0427695327,-0.0091379117,0.0170165338,-0.1574907601,0.234258309,0.0065277172,-0.063597016]],"hackathon_name":"StirHack","index":176,"project_description":"Custom Android keyboard that fights harassment without imposing censorshipSettingskeyboardinterruptionA few months ago I read a report on a Google service that imposed censorship on certain offensive words and phrases, and substituted them for others. Although I question the legitimacy of this claim, I am convinced that censorship is not the way to defeat online and offline harassment.The Android keyboard (soft input device) that we developed is based off an older version of the vanilla keyboard. It reads and temporarily stores a buffer of the last 30 characters typed with it, and analyzes it against a dictionary of words that might be used to harass someone. The list, for the purpose of this project, has been kept as family friendly as possible, and is more of a demonstration of the potential capabilities of software like this. The software briefly interrupts with a message to the one typing, when it deems that potential harassment may occur as result of the message.We built the application by using an older version of the vanilla Android soft input device, that is available on the Google Git. We did an override of the method calls that it makes to the system, and added our own code into it. We used Android Studio for that purpose.Understanding how the original keyboard worked was the main challenge for our group. None of us are active android developers, but we think that it is worth it to convey our idea in some way.Managing to make the user typing think twice about what they are sending without censoring their text, and without being too disruptive to the typing process itself.We learned a lot about the android services and activities lifecycles, and how an android application works internally in general.We would love to see opportunities to develop this idea into a finished product, with proper natural language recognition algorithms, that would void the need to use phrase dictionaries.StirHackI worked on conceiving the idea, and most of the code written by ourselves in the project.Boyan Atanasov\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 08:00 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Harassment Filter Android Keyboard","project_tags":["java","android","android-studio","gradle"],"project_url":"https:\/\/devpost.com\/software\/harassment-filter-android-keyboard","keywords":"android,keyboard,typing,harassment,would,purpose,older,google,censorship,soft,software,idea,built,device,think,application,input,message,vanilla,learned"},{"level_0":177,"hack_vector":[[0.1440633684,-0.1040624827,-0.016327275,0.0636839271,-0.0388678461,0.1606484652,0.2047930658,-0.0522518679,-0.0206879824,-0.0204719286,0.0254164208,-0.0207381193,0.1355202943,-0.0749511793,0.0464204215,0.0294145998,0.2513037026,0.0190300904,0.0467470661,0.1069413945,-0.2088944912,0.0305796452,-0.0562325381,-0.0362725593,0.1314421743,-0.015770331,-0.0435494967,-0.1894810051,-0.0000456696,-0.0843237564,0.0542798154,-0.1169117987,0.0544142053,-0.0784237757,-0.0241776835,0.0093282647,0.1453594118,-0.1170293093,-0.0373266712,0.0292842165,0.0458219834,-0.1436162144,-0.170077309,-0.0351936743,0.0160490666,-0.0515925549,0.0317038782,-0.0448230989,-0.020930808,-0.205270648,-0.0960298851,0.0288451817,-0.109893918,-0.0240837447,-0.1597333252,0.146435976,-0.1480259597,0.0118717188,0.0230875704,-0.0458317511,-0.0458762832,0.0271924883,0.0861693248,0.059842933,0.1280904412,-0.0184349306,-0.1120074391,-0.1540378332,0.0325066634,0.0133081963,0.0586901605,-0.0380379818,0.0165519398,-0.1336024255,-0.0139053073,-0.1169557422,0.1898792833,0.0108507546,0.0507214926,-0.1540382206,0.1222039163,0.1659260541,0.0403115563,0.1750139594,0.1302196532,0.1790028065,-0.1313996613,-0.0040758899,-0.0137493871,-0.1040346697,-0.1314744651,0.0814303979,0.0701739267,-0.0068837861,0.0383574702,-0.0293643307,-0.1215242967,0.2052953243,0.0486677662,-0.0731216818]],"hackathon_name":"StirHack","index":177,"project_description":"App for reporting maintenance issues around your university campus.Team Coffee Compilers - StirHack 2017We used domain.com and AWS vouchers to host the webpage. We made it as a progressive app that integrates a phone camera within HTML to upload pictures directly with your device.It is envisioned that the upvote icons will be interactive and allow other users to endorse and rank maintenance issues.StirHackPeter Vanik\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 07:54 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"FixIt!","project_tags":["python","html","css","django","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/teamcc","keywords":"within,directly,icons,html,host,envisioned,endorse,domain,device,webpage,compilers,com,coffee,camera,aws,app,integrates,interactive,issues,made"},{"level_0":178,"hack_vector":[[0.1384502053,-0.0933589488,-0.0228765905,0.0520068444,-0.0112444321,0.1481386572,0.2038615197,-0.0299558174,-0.0333579071,-0.0016966473,0.0215510391,-0.0782579854,0.141061306,-0.0870355591,0.068252936,0.0146974223,0.216761604,-0.0042066961,0.042869173,0.109835051,-0.227953285,0.0470523909,-0.0519893505,-0.0210385248,0.1243580878,-0.025211107,-0.0335833132,-0.1975183785,-0.0298703387,-0.0689415336,0.0730439052,-0.1223679408,0.0443698615,-0.1002531722,-0.0370488465,-0.0011777155,0.120780021,-0.133301571,-0.0491340682,0.0004961874,0.0385776162,-0.1398073286,-0.161007449,-0.0155353677,0.0606501736,-0.0353563093,0.0207290966,-0.0736645237,-0.0194052868,-0.2120265365,-0.1248458549,0.0125743868,-0.1045722291,0.018090276,-0.1791054457,0.1612184793,-0.1396223456,-0.0024289323,0.0229368657,-0.0951413438,-0.0629458204,0.0219508559,0.0944020376,0.0570709035,0.1264485419,0.0051305559,-0.0943884477,-0.1324909031,0.0382554531,0.0170933008,0.064681828,-0.0436218865,0.0234570988,-0.1278630346,0.0283448528,-0.1191252545,0.1866919696,-0.0015358966,0.0263315644,-0.1334857047,0.1401773393,0.1631699055,0.0772044063,0.155708313,0.0986509547,0.1855626106,-0.0937067419,-0.0314983912,-0.0036946402,-0.0878645703,-0.1510002464,0.0559966788,0.0875341967,-0.0393046811,0.0085273553,-0.0019033391,-0.1432216614,0.2142847925,0.0277391206,-0.0740281343]],"hackathon_name":"StirHack","index":178,"project_description":"Live healthy. #MakeADifference #MakeItBetterWe wanted to create accurate diet plans, based on blood test results. Also, we wanted to scan a barcode and find the nutritional values of the product using this.It scans blood test results and extracts the information, using Google Vision (text-recognition). Based on this, the app suggests diet plans to the user and checks whether products are suitable to eat (using the barcode to identify the product and its nutritional values)Divided the group on front-end and back-end development. Front-end team made use of the Ionic2 framework, Angular2 and Typescript in order to create a GUI and deliver data (text-recognition) to processing. The back-end team integrated various APIs together in order to deliver accurate diet recipes and decide whether a product is suitable for the user, based on his blood tests.Reading the 13 digit EAN of the barcode. \nFinding a recipe database.\nSynchronizing text recognition.Managed to develop the full application. Managed to use Google Vision (text-recognition) API.Advanced skills in Node.js\nIntegrating multiple APIs togetherBecome a part of the NHS Five Year Forward View. #MakeADifference #MakeItBetterStirHackIon-Alexandru Secara\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 07:09 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MediDiet","project_tags":["node.js","angular.js","ionic","typescript","edamam-nutrition"],"project_url":"https:\/\/devpost.com\/software\/medidiet","keywords":"recognition,end,text,product,diet,barcode,based,blood,using,front,back,results,plans,create,order,nutritional,deliver,whether,managed,accurate"},{"level_0":179,"hack_vector":[[0.1461888105,-0.1036705226,-0.007020419,0.0768865272,-0.0165348779,0.154960528,0.1939932108,-0.056187246,-0.0417056531,-0.0212710574,0.0119169289,-0.0495130159,0.1550038606,-0.0890556648,0.0214515887,0.03398275,0.243584305,0.0048821731,0.0595372394,0.1133448556,-0.2148928195,0.0455649681,-0.053431157,-0.0234375447,0.1427454501,-0.0310619213,-0.0583316162,-0.1924324036,-0.0178648997,-0.0730596408,0.0601116195,-0.1091587543,0.0718021467,-0.0645574257,-0.0414561704,-0.0004910603,0.1516436189,-0.1216233298,-0.0175189544,0.0288308635,0.0670750737,-0.1487187445,-0.1930572987,-0.023971336,0.0132285235,-0.0450463705,0.0296520833,-0.0699981898,-0.0124967564,-0.2161669284,-0.0921040401,0.0424892269,-0.1087811217,0.0114714298,-0.1683787555,0.1561372131,-0.166318804,0.0119020492,0.0118159922,-0.0453427657,-0.0533066839,0.0246025845,0.0820766017,0.0528522134,0.1312655509,-0.0065066232,-0.0985062793,-0.1526789814,0.0237458255,0.0204939954,0.0707218051,-0.0422501005,0.0044525368,-0.1317591667,0.0015877003,-0.0788408592,0.1997817606,0.0041818097,0.055129867,-0.1338282079,0.11949756,0.1484098136,0.0455052592,0.1456628144,0.1277873814,0.1798602194,-0.1172446087,-0.0165028218,-0.0080759246,-0.0994446799,-0.122363314,0.0722704008,0.0526895225,-0.0210471414,0.020377215,-0.0355174802,-0.1244331226,0.1919965595,0.062855415,-0.068485789]],"hackathon_name":"StirHack","index":179,"project_description":"App to form teams @ hackathonsFill in personal infoFill in personal infoWindow to insert event code in order to join the hackathonEvent code inserted and loadingOption windowWindow for joining a teamThe application is a work in progress. \nThe main elements are already complete; just some connections are not generated yet.StirHackWorked on the UII worked on the Android app itself. I had to use Sockets for the first time so connection was tricky.Worked on the main Server and Database implementation.Worked on the design of the app and the logoBianca Burtoiu\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 07:58 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hatch","project_tags":["android-studio","java"],"project_url":"https:\/\/devpost.com\/software\/hatch-49ftim","keywords":"yet,work,progress,main,generated,elements,connections,complete,application,already"},{"level_0":180,"hack_vector":[[0.152563706,-0.1142066419,-0.0214451849,0.0608054027,-0.0125617897,0.1559212655,0.2149385661,-0.0530972742,-0.0373241268,0.003206938,0.028780926,-0.0428579412,0.1460634619,-0.0741048828,0.0544165894,0.0018840713,0.2195549458,-0.0024492405,0.0409970731,0.1194281876,-0.2341833711,0.0423690565,-0.0407143533,-0.0125339739,0.1393628567,-0.0259761903,-0.0370376147,-0.1947337389,-0.017855024,-0.0778534785,0.0875074118,-0.1220879182,0.0359707139,-0.0762893483,-0.0330077522,-0.0171893053,0.1182839349,-0.1280692071,-0.0415914729,0.000771318,0.0584442914,-0.1490698904,-0.1513840705,-0.0274296496,0.0560594238,-0.0211980287,0.0119641833,-0.0627171248,-0.0300245602,-0.2135413289,-0.1150357649,0.0235679187,-0.1095682681,0.0169732459,-0.1856734902,0.1488448828,-0.1397149861,-0.0078318026,0.0186975356,-0.0778632984,-0.0522600114,0.024447374,0.0849647373,0.0427601747,0.1207684353,0.0064076632,-0.1026583835,-0.1225799471,0.0332025439,0.0203281771,0.0549739935,-0.032819286,0.0352598242,-0.1229038611,0.0037529091,-0.1190017834,0.1778388321,0.0002220099,0.0246364288,-0.1343873739,0.1394672394,0.1564214528,0.0456785299,0.1725696921,0.1163497195,0.2126148194,-0.0997429565,-0.0253227409,-0.0217997842,-0.0762178972,-0.1378567517,0.0697055757,0.0822284147,-0.0295654554,0.0101951789,0.0013950081,-0.134334296,0.21131365,0.0241912734,-0.0560647361]],"hackathon_name":"StirHack","index":180,"project_description":"Stalk random people and assassinate them.We were unhappy with the state of mass multiplayer GPS games. They encourage teamwork and good feelings. We wanted to create a game that brings out the darkside in you.Mobile GPS game which allows the user to assassinate other users within a nearby proximity. \nIncludes powerups such as invisibility, decoys and shields.\nAllows a live overview of all active users.Using node.js, Socket.io, Google Maps API, mongodbProblems with getting cordova to actually build the app. \nProblems with closing sockets.Working mass multiplayer game with a good launchpad for potential improvements and ideas.Lots about socket programming and utilising GPS.Implement more advanced upgrades and a scoring system.\nMonetization.StirHackCreated the mobile app and worked on the client game-map rendering.michael_georgiev\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 07:58 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Assassins","project_tags":["node.js","express.js","socket.io","javascript","mongodb","apache"],"project_url":"https:\/\/devpost.com\/software\/assassins-z9pgkh","keywords":null},{"level_0":181,"hack_vector":[[0.1296965927,-0.0782824382,-0.0115312049,0.0504722781,-0.0256829876,0.16239281,0.1887519211,-0.0511496924,-0.0197905358,-0.0350419171,0.0226863902,-0.0720657334,0.1386566907,-0.0721695423,0.0347820222,0.0312731005,0.2463065386,0.0125913238,0.0495668389,0.117034778,-0.2236868888,0.0300107393,-0.0487564728,-0.0240473263,0.109713614,-0.0252063833,-0.0416078381,-0.1857399046,-0.0237667672,-0.1020673588,0.0611433499,-0.1031049564,0.0575816594,-0.0694261789,-0.0056313653,-0.0156184882,0.1365261823,-0.1247061044,-0.0288542844,0.0086014941,0.0522525646,-0.1361362934,-0.1779123992,-0.0363691747,0.0410891175,-0.0590870455,0.0195188038,-0.0561431237,-0.0154929999,-0.222811237,-0.112235114,0.0322613828,-0.0927212909,-0.0112484591,-0.2014451623,0.1564674079,-0.143588379,-0.0129631292,0.040832907,-0.0829697102,-0.0550477915,0.0053753285,0.0844672918,0.0404986441,0.1170577407,0.0189604908,-0.0932456329,-0.1579675674,0.0429994576,0.0364051312,0.0718669146,-0.0496572405,0.0134640913,-0.1257532388,0.0073834611,-0.1101830527,0.1730703264,0.0041870321,0.037452206,-0.1345236301,0.1014994606,0.1540521979,0.0488791652,0.175464958,0.1141776368,0.1797349006,-0.1198967323,-0.0440683365,-0.0372163318,-0.095129557,-0.1359883994,0.0589548722,0.0732238516,-0.0470430106,-0.0096878288,-0.0025086433,-0.145494014,0.222664237,0.0352302268,-0.0892600641]],"hackathon_name":"StirHack","index":181,"project_description":"An app for charities to be matched with volunteers looking to helpNeed someone to help you out for a good did? \nYou have 5 minutes to offer your time? Or you want to catch up on your karma? Or maybe helping is your thing? \nOr you are a charity wanting the perfect volunteer for a specific task?Well, basically, any reason is good to use our app and website: VolunteerHere   (all under process)Based on finding the nearest charity with the timing that fits your schedule and with the best person for your charity, our app will bring smiles to our users faces.StirHackI worked on the frontend of the app, designing the UI and navigationI came up with the name of the app and the idea for the background. Besides, I am working on making an interactive website as well which would also contain the link to download the app.I worked on the backend of the app, and the database, had most of the the code until my computer spontaneously died.Daniel Akinola\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 07:30 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"VolunteerHere","project_tags":["android-studio","html","php","mysql"],"project_url":"https:\/\/devpost.com\/software\/volunteerhere-hjfeqv","keywords":"charity,app,good,fits,nearest,minutes,maybe,karma,helping,help,finding,offer,faces,catch,bring,best,basically,based,need,well"},{"level_0":182,"hack_vector":[[0.1531119645,-0.1071338505,-0.0418223776,0.0467469655,-0.0205647405,0.118963711,0.1934832931,-0.0142221041,-0.0256709065,-0.0144117782,0.0088748103,-0.068318136,0.1459854096,-0.0588728152,0.0762920231,-0.0136662517,0.1818944365,-0.0198517814,0.0377194434,0.1294971853,-0.2514031827,0.0141609022,-0.0448171683,0.0009574843,0.1099634841,-0.0293074641,-0.0319736116,-0.1543899626,-0.0306697618,-0.0956449658,0.0650423318,-0.1095270365,0.0155357625,-0.0723406449,-0.0152956257,-0.0166159887,0.1074654907,-0.1509299129,-0.0703390241,-0.006582675,0.0566959418,-0.1122388616,-0.1310248971,-0.0201715399,0.0714160427,-0.0620015711,0.0121446541,-0.0988792628,-0.0200926941,-0.2149005979,-0.1573551893,0.0126529941,-0.1048111469,0.0174881089,-0.2111807317,0.1667302102,-0.1228227168,-0.0368784405,0.0362917744,-0.115848355,-0.0822562203,0.0293646492,0.0718975887,0.040359661,0.1100479439,0.0243565403,-0.1032800898,-0.1108427718,0.0137863159,0.0185396466,0.0619451553,-0.0363565907,0.0143706836,-0.1166809276,0.0346160792,-0.1191244349,0.1870106012,-0.0016786149,-0.0106762573,-0.1351837516,0.113991797,0.1571122855,0.0491622761,0.1477120668,0.0986644551,0.2174044698,-0.0813414976,-0.0471715853,-0.0239450615,-0.0701753795,-0.1474898905,0.0607922636,0.1069423035,-0.039654579,-0.0136556579,0.0176507551,-0.1694027483,0.2539667487,0.0024509474,-0.0602009371]],"hackathon_name":"StirHack","index":182,"project_description":"The best signature checker :3We are a team strongly focused on computing. We really enjoy coding diferent algorithms and resource-intensive programms.\nWe recently started reading about neural networks, and decided to do something useful with them.\nThe SignatureAuthentifier is a programm that uses neural networks and a set of signatures to learn how to identify a given signature while not being fooled by forges. While showing a small version of it, a complete programm would be extremely useful in any area where strong security is required.\nWe build it with a combination of Python to code images and C++ to do the computing bulk.\nThe biggest challenge was working with a  neural network, since we had never worked with one before. We used a third-party programm as the base, and then built on it to make it specific to solve our situation. Getting the data was sometimes hard, since changes in the light would trigger unintended responses. \nAs a team, we are really proud of what we have done. We have learnt how to work with neural networks from scratch, and been able to make a strongly efficient code, both in time and the size of the data set required. We feel like we really did what we wanted to do in a stylish way.\nWe have learnt how to choose a proper topology, how to spot errors in data sets that make the neuronal network contaminated, and A LOT about how neuronal networks work.\nThe next step would be making an embeded version for things like phones, safes and similars, the gadgets where it would really shine.StirHackrabbitwhile\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 07:53 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Signature authentfication","project_tags":["c++","python"],"project_url":"https:\/\/devpost.com\/software\/sginature-authentfication","keywords":"would,really,networks,neural,data,make,programm,learnt,team,work,computing,neuronal,strongly,since,code,like,network,useful,set,version"},{"level_0":183,"hack_vector":[[0.1548736244,-0.1352603585,-0.0235484783,0.0589198135,-0.0328119919,0.1437299848,0.1833344996,-0.0461481325,-0.0145596014,-0.0355793685,0.0146245779,-0.0339355655,0.1458045393,-0.064873606,0.0519069247,0.0143101169,0.2283721566,0.0040964386,0.0498600081,0.1071975306,-0.2300152779,0.0276049227,-0.0449425802,-0.0245368481,0.124747172,-0.0324948877,-0.0267355088,-0.1761007905,-0.0269943792,-0.0903485864,0.0520365126,-0.1215955764,0.0506043471,-0.074927859,-0.0330955274,-0.0224506017,0.1357099861,-0.1360485107,-0.052624654,0.0218775868,0.0604164712,-0.1247505918,-0.1629568487,-0.0392016619,0.0297543649,-0.0694971532,0.0441196486,-0.0585443042,-0.0317164771,-0.2091680318,-0.1216867194,0.0087015601,-0.1140648797,-0.0210912228,-0.18083556,0.1578719318,-0.1357268542,-0.0169791132,0.0352839082,-0.0537284911,-0.0683001578,0.015363724,0.072690703,0.0355521068,0.1123051792,0.000847493,-0.1152417287,-0.1419772208,0.0221900698,0.0261339955,0.0685481206,-0.0485475883,0.0071612806,-0.1314383596,-0.0089019081,-0.1053708345,0.2044713795,0.0233557168,0.0390216336,-0.138760075,0.1120760441,0.1684276462,0.0154362461,0.1693932563,0.135050267,0.1761035174,-0.1205008626,-0.0014832566,-0.0144136492,-0.0957171842,-0.121682629,0.0860662982,0.0737978444,-0.0162815116,0.0137510812,-0.0473041423,-0.1325841993,0.2239219695,0.0495969728,-0.070889622]],"hackathon_name":"StirHack","index":183,"project_description":"EEEEEEEEEEEEEEEEEEEEHonours madness.It skips (sometimes). Hates usb3.Throwing code together to get mpv to play and skip, and read from a TTY on the host end.\nArtistically crafted, bespoke C++ code on the 'duino.X86 and ARC was a marriage made to be broken. An AVR would've been more reliable, and Serial over USB turned out to be really flakey.It works when it feels like it.Some microcontrollers are very regressive and anti-progress when it comes to the latest universal serial bus specifications and implementations.You tell me.StirHackEmils Pinkis\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 07:45 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hit to skip","project_tags":["arduino"],"project_url":"https:\/\/devpost.com\/software\/hit-to-skip","keywords":"code,usb,skip,serial,crafted,inspiration,implementations,host,honours,hit,hates,get,flakey,feels,end,duino,would,comes,learned,challenges"},{"level_0":184,"hack_vector":[[0.1477869451,-0.1578239948,0.0136459088,0.0936670527,-0.0538637042,0.1587339044,0.1740351617,-0.0518445335,-0.0364108421,-0.0284837931,-0.0084249564,0.0498380736,0.1232762337,-0.0815257281,-0.0128114531,0.0891035199,0.2649691105,0.0460521318,0.0534610823,0.0754049793,-0.1814615875,-0.0011587853,-0.0484931655,-0.0634675771,0.1843977571,-0.0126762101,-0.0807309225,-0.1784630567,0.0397042148,-0.0780043155,0.0206619781,-0.092197001,0.0840536952,-0.0442718975,-0.0410935506,0.0153386006,0.1497385651,-0.0981332064,0.0212329905,0.1036879793,0.0601789169,-0.1515650302,-0.1895071119,-0.0408488885,-0.0585839786,-0.0536722727,0.04947377,0.0065122563,-0.0179038476,-0.1829418093,-0.000658551,0.0409492105,-0.1021317393,-0.0670588091,-0.0890270844,0.1508635134,-0.1643261909,0.0769807771,-0.0202701185,0.0715334713,-0.002471603,0.0359313563,0.042605374,0.0727745891,0.1432504058,-0.0556930825,-0.1387661546,-0.172082752,0.0162692927,0.0032989739,0.0592155494,-0.0276205372,-0.0240853447,-0.1400727779,-0.0838843584,-0.0501984619,0.1838038117,0.0329277627,0.1120937467,-0.1442821473,0.1028028801,0.1479300708,0.0004747706,0.1346484572,0.1572003961,0.1491763592,-0.1510736644,0.0816127658,0.0115610817,-0.1238884777,-0.0609172918,0.1112764552,0.007674831,0.0361058302,0.0872744992,-0.1012478322,-0.0498888083,0.1138254479,0.1214287207,-0.0328833126]],"hackathon_name":"StirHack","index":184,"project_description":"Repository for StirHack 2017Repository for StirHack 2017A food guessing game thing.StirHackJoshua Richardson\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 07:26 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"stirhack-2017","project_tags":["css","python","javascript","html"],"project_url":"https:\/\/devpost.com\/software\/stirhack-2017","keywords":"stirhack,thing,repository,guessing,game,food"},{"level_0":185,"hack_vector":[[0.1418720335,-0.155374676,0.0172709599,0.0986168161,-0.0536962859,0.1510647386,0.1631905586,-0.0484376401,-0.0321873426,-0.0290331971,-0.0102277119,0.0598853305,0.1218036115,-0.0784317479,-0.0207240582,0.09789408,0.2627889514,0.0386184417,0.0509101488,0.0780186206,-0.1833118498,-0.0021903389,-0.0482952967,-0.0674999058,0.175302133,-0.0168102495,-0.086140193,-0.1720174253,0.0455627218,-0.0775933936,0.0097494302,-0.0862707496,0.0831987187,-0.0369593762,-0.0414923914,0.0221600048,0.1436813772,-0.0993352309,0.0185269359,0.1127871722,0.0525579602,-0.1431406438,-0.1818917543,-0.0372093543,-0.0697137564,-0.0564971976,0.0491542183,0.0050411797,-0.0125894751,-0.173681885,0.0010094853,0.0412218124,-0.1033426523,-0.0694312751,-0.0744515434,0.1388432533,-0.1607468724,0.0796809494,-0.0247991383,0.0770210177,-0.0042333878,0.0461078696,0.0393586345,0.0803412274,0.1480406374,-0.0631619617,-0.1433005631,-0.1783337593,0.0115922028,-0.0040620514,0.0584602207,-0.0282368623,-0.026495317,-0.1453257501,-0.0881566182,-0.0444434807,0.192192331,0.032962434,0.1082904413,-0.149671793,0.1093944088,0.1519078761,-0.006950845,0.1223598048,0.161656633,0.1480119526,-0.1531929225,0.0883699059,0.0111136455,-0.1255308688,-0.0679846704,0.1169258133,0.0056981421,0.0429524817,0.093399398,-0.1085054055,-0.0512347072,0.1207694635,0.1302072108,-0.0335950404]],"hackathon_name":"StirHack","index":185,"project_description":"A tongue in cheek productivity appA tongue in cheek productivity appStirHackJoshua Richardson\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 07:18 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"productiv","project_tags":["python","html","css","django"],"project_url":"https:\/\/devpost.com\/software\/productiv","keywords":"tongue,productivity,productiv,cheek,app"},{"level_0":186,"hack_vector":[[0.1564134806,-0.1095124558,-0.0191491898,0.0504966713,-0.0088984603,0.1344206333,0.1984388679,-0.0286835562,-0.0261778515,-0.0052207275,0.0139779048,-0.0676801577,0.1487556547,-0.0649526492,0.0642547458,-0.0019655824,0.1949919164,-0.0196384173,0.054298304,0.1285395473,-0.2509337068,0.0296285525,-0.0427299403,-0.0037697242,0.1217434034,-0.0358918272,-0.0299620628,-0.1713394076,-0.0225061402,-0.0945121273,0.0769636557,-0.110767588,0.0314514376,-0.0775865242,-0.026925277,-0.0185708292,0.1126308665,-0.1456858069,-0.0529907495,-0.0042939084,0.0583902597,-0.1210121214,-0.1436778456,-0.0317729115,0.064943254,-0.0486968271,0.0076227752,-0.0837671161,-0.0087200562,-0.2147463262,-0.1418657899,0.0157872234,-0.1193334237,0.0201123245,-0.2052530497,0.1545442045,-0.1425799578,-0.0265587233,0.0355229452,-0.0968184546,-0.0670249537,0.0230145771,0.0759150684,0.0444672517,0.1171568111,0.0139303785,-0.0931627899,-0.123300001,0.0210436415,0.0147384787,0.0622269548,-0.0429798365,0.0070772679,-0.1179127842,0.0198242478,-0.1155178323,0.1907901317,0.0052151144,0.0013175625,-0.1395957619,0.1137484759,0.1479680389,0.0408699699,0.1585590243,0.115161486,0.216644913,-0.0844233781,-0.0299207736,-0.0246793944,-0.071878016,-0.1425591558,0.0652259439,0.1038661376,-0.0306201056,-0.0145330252,0.0075134221,-0.1537194848,0.225070104,0.0178618692,-0.0655720755]],"hackathon_name":"StirHack","index":186,"project_description":"A fast and easy method for students to sign into lectures, tutorials and seminars without wasting paperStudents no matter who they are enjoy ease of use. With this system, registration becomes much easier and less time consuming.Allows students to sign into lectures, seminars and tutorials just by enabling Bluetooth at the beginning.We used a Raspberry Pi and Bluetooth API to detect bluetooth devices that once linked to a student, can be used to sign into lectures, seminars and tutorials without doing more than enabling bluetoothWe originally intended on using Java however as the current Raspberry Pi 3 does not support javac this halted this method and forced us into using Python; a language which none of us have much experience withWe managed to produce something which we honestly believe will make a difference. More than a simple in and out system.Over the course of the hackathon it feels like we have all learned another language; PythonWe hope to get the university involved so that they can implement this into everyday life at uni making student life a little bit easier and a little bit less wasteful with paperStirHackDesigned parts of the GUI as well as creating the initial API configuration and device recognitionI wrote the majority of the GUI code for layout and the interaction with the main program as well as organising and commenting the code.Wrote a fair portion of the base using my knowledge of Python 2, implemented logic and prettying up the code.I designed most of the pseudocode that lead to the construction of the core of the project, as well as proposing the idea and finding methods to implement it.James Waterhouse\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 07:12 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Bluetooth Registration System","project_tags":["python","bluetooth"],"project_url":"https:\/\/devpost.com\/software\/bluetooth-registration-system","keywords":"bluetooth,system,lectures,sign,language,learned,less,life,little,enabling,easier,much,python,raspberry,registration,seminars,pi,bit,us,using"},{"level_0":187,"hack_vector":[[0.1492820531,-0.137279138,-0.0144248651,0.0416835248,-0.031033745,0.1493191719,0.2282953709,-0.0409082137,-0.0261109862,-0.0327073596,0.0017118631,-0.0016854178,0.1248135641,-0.0759231597,0.0111386832,0.0500219688,0.2692761123,0.0225619022,0.0360038169,0.1206307635,-0.2288045883,0.0247191265,-0.0273837522,-0.0421209484,0.1506314725,-0.0185374804,-0.0531847924,-0.1812029332,0.0155638121,-0.0998919308,0.0461028926,-0.1221075803,0.0542418994,-0.0641604662,-0.0118892491,-0.0234573819,0.1370158643,-0.1284940839,-0.0244830903,0.0268714204,0.0488613918,-0.168645978,-0.1671447307,-0.0585486814,0.0313189328,-0.0511653498,0.0217453819,-0.0317051634,-0.0304427482,-0.1990261078,-0.0745998919,0.0326971561,-0.1059854999,-0.0443051197,-0.1635500789,0.1583134532,-0.1490262598,0.0037022575,0.0229710247,-0.0374827646,-0.0435496904,0.0309330001,0.069916904,0.0399679132,0.1227397919,-0.007645674,-0.1247471645,-0.1553344727,0.0464022085,0.0345567465,0.0701517612,-0.0440144502,0.0208993535,-0.1357389688,-0.0357219465,-0.1220923811,0.1496817619,0.0075533683,0.0603560507,-0.1302665621,0.114229992,0.1568849683,0.0242428388,0.1833601147,0.1245788783,0.1775318235,-0.1367125958,0.0148189524,-0.0255279485,-0.0948370844,-0.1139852032,0.0886323527,0.0459258743,-0.0170243215,0.027068181,-0.0281363148,-0.1222461239,0.1779776067,0.0503353886,-0.044845026]],"hackathon_name":"StirHack","index":187,"project_description":"StirhackThe menuSelecting player vs playerCombat between the shipsPlayer deadThe aim of this project is to create a game where while you are playing you train your own bot.The game is an spaceship battle with two player.The bot works with a neural networks wich are train by the user when playing vs other users.After bots can play vs each other.StirHackMaria Vila\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 07:10 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"TrainYourSpaceShip","project_tags":["javascript","html","css","node.js","socket.io"],"project_url":"https:\/\/devpost.com\/software\/trainyourspaceship","keywords":"train,playing,vs,bot,spaceship,project,game,neural,battle,bots,create,networks,works,play,player,wich,stirhack,two,user,users"},{"level_0":188,"hack_vector":[[0.1489651948,-0.0944683626,-0.0259254146,0.0551270247,-0.0175834168,0.14579162,0.2070542276,-0.0380468406,-0.0227253623,-0.0090791052,0.025202848,-0.0637605488,0.1642653644,-0.0864930376,0.0620437786,-0.0085591935,0.2037838995,-0.0093525033,0.0483089462,0.1299093217,-0.2305560261,0.0352932848,-0.0473599285,-0.0088089257,0.1356268376,-0.0308617745,-0.0358096287,-0.1737836897,-0.0172462054,-0.0772198588,0.0675475895,-0.1148195565,0.032751888,-0.0707756281,-0.0186496712,0.0003646537,0.1299625784,-0.1368251145,-0.0584821254,-0.0029742098,0.0562987886,-0.1343733072,-0.1501958966,-0.0108793434,0.0610554107,-0.0359261446,0.0168790463,-0.0824645236,-0.0209775846,-0.2103791535,-0.1525587887,0.0300293434,-0.1143244579,0.0154637853,-0.2009370476,0.1542018503,-0.1304927766,-0.0177154653,0.0261847079,-0.0988446996,-0.059936855,0.0290692337,0.0854738206,0.0556802861,0.1192893237,0.0186047461,-0.082901597,-0.1236122698,0.0210348722,0.0138830012,0.0562074631,-0.0337943472,0.027536625,-0.1205006465,0.0326077342,-0.1034903526,0.1825267673,-0.0106731961,-0.0073451428,-0.1389321536,0.12550883,0.1598786861,0.0604377203,0.1548142433,0.0939777568,0.2044402212,-0.0874198303,-0.0431141146,-0.0223815944,-0.0732237622,-0.1448768079,0.0543132387,0.091790244,-0.0291780662,0.0132100442,0.0016888182,-0.1527897716,0.2344034165,0.0116890706,-0.0671887398]],"hackathon_name":"StirHack","index":188,"project_description":"Anonymous common problem chat messengerChoicesThe task was to build something that would solve a problem, so we thought that people may have many problems and two heads are always better than one, thus this idea was born.Allows users to chat with their anonymous peers who ended up with the same problem either through phone app or website.We built Android Client App using Java and Website Client using web technologies (HTML, JS, CSS). Then we used a server and maintained the communication between clients using yii2 framework together with Ratchet Web Socket library (all powered by PHP).Error detection.We are happy about our teamwork skills because each member contributed a lot and carried out their responsibilities to the fullest. We are also proud that we managed to make the main idea and basic functionality of this piece of software to work.We learned to use web sockets.Implementing features which time did not allow us to do like flagging of offensive messages, filtering messages and possibly some auto-flagging, safety meter based on users score accumulated from upvotes and downvotes of other users he had conversation with. (will apply to ip address since this app is anonymous).StirHackI have created website client and GUI for this project.I worked on the Android side of things.Martynas Paulikas\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 05:56 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ProbChat","project_tags":["php","javascript","css","html","java","europeana"],"project_url":"https:\/\/devpost.com\/software\/probchat","keywords":"web,using,users,app,learned,flagging,proud,messages,anonymous,idea,client,website,problem,built,ended,error,either,downvotes,features,filtering"},{"level_0":189,"hack_vector":[[0.1514040828,-0.1355501115,0.0097485287,0.0925959945,-0.0415176265,0.1585663557,0.1736198515,-0.0464605503,-0.0406181365,-0.0197500177,-0.0158310235,0.0264179539,0.1300780773,-0.0815655291,-0.0116135674,0.0830496103,0.2512749732,0.0319884196,0.0607740246,0.0929618329,-0.1941304058,0.0067085191,-0.0486879535,-0.0548261218,0.1868393272,-0.0159010366,-0.0821852535,-0.1805150211,0.0288523957,-0.0765455738,0.0200334582,-0.1014290601,0.0815422311,-0.0481833443,-0.0346226692,0.0163582228,0.1462254822,-0.1090961248,0.0039722649,0.0936670452,0.0612358823,-0.1578013003,-0.1880881786,-0.0347546972,-0.0531129241,-0.0536348522,0.0356267653,-0.0158717539,-0.0049763019,-0.1849450171,-0.0287811644,0.0454880781,-0.1135400534,-0.0455354229,-0.1107195765,0.1509606093,-0.1755476594,0.0727694035,-0.0133302202,0.0417405069,-0.0137911532,0.0439282544,0.0406364202,0.0770375058,0.1531645209,-0.0431796461,-0.1384474039,-0.1779501289,0.0154925985,0.0005240488,0.0759399533,-0.0370510146,-0.0278261323,-0.1459284723,-0.051991336,-0.0504097454,0.1904477179,0.0235992521,0.0951923206,-0.1443030238,0.1042472944,0.1438593417,0.025759751,0.1244707704,0.1566386819,0.1630326211,-0.1416473538,0.0681839511,0.0150656365,-0.1105571464,-0.0754701272,0.1020069346,0.0261633229,0.0234581567,0.0752959251,-0.0879967883,-0.0763012245,0.1492986232,0.1088161394,-0.0409362018]],"hackathon_name":"StirHack","index":189,"project_description":"Google analytics in real lifeAnalyticat was built during the StirHack 2017 MLH event, over the course of 24 hours.StirHackSam Walls\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 05:13 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Analyticat","project_tags":["amazon-web-services","opencv","d3.js","python","mysql","rabbitmq","digitalocean","apache"],"project_url":"https:\/\/devpost.com\/software\/analyticat","keywords":"analytics,analyticat,rest,finished,view,api,etc,uploaded,customers,sources,hours,including,individual,iot,people,images,gender,age,analysis,video"},{"level_0":190,"hack_vector":[[0.1508152634,-0.103181988,-0.0197588876,0.0528250635,-0.0120800454,0.1378523707,0.1994116902,-0.0353682004,-0.0309101306,0.0022274191,0.0218953267,-0.067060709,0.1551509798,-0.0720158219,0.0641287938,-0.0000004695,0.2050973773,-0.0213475022,0.0511446893,0.1253439486,-0.2463709861,0.0386263728,-0.0458766147,-0.0012164318,0.1267118156,-0.0345334671,-0.0347994305,-0.1782622188,-0.0226840489,-0.0782770514,0.0822179988,-0.1128042415,0.0305002704,-0.0823362991,-0.029279815,-0.0161030069,0.1165767834,-0.1389162987,-0.0491971336,-0.0137447994,0.0530171134,-0.1345705837,-0.1533655971,-0.0249723252,0.062368419,-0.0338840932,0.0057669762,-0.086243704,-0.0121456627,-0.2063569278,-0.1389642954,0.022489436,-0.1162278801,0.0312197749,-0.2105218321,0.1569488049,-0.1425380409,-0.0156839229,0.0263070036,-0.0999670252,-0.0679460019,0.0240915976,0.0861583352,0.0492550805,0.1118244976,0.016341554,-0.0875706747,-0.1271684319,0.0247327369,0.0212634839,0.0627463013,-0.0382143594,0.0238748621,-0.1184939742,0.0232326947,-0.1135849729,0.1846143305,-0.0046861093,0.0041264161,-0.1290459484,0.1194273457,0.1511155069,0.0543040745,0.1552694291,0.1108755097,0.2132221758,-0.0877996087,-0.0417878553,-0.0177812614,-0.0681130886,-0.142469883,0.0647713095,0.0970449671,-0.0327749252,-0.0036156292,0.006406337,-0.1435197592,0.2238920331,0.0189389102,-0.0626442283]],"hackathon_name":"StirHack","index":190,"project_description":"Make your flat more productiveIn order that a flat, including ourselves, can easily cooperate and make sure that the kitchen and chores are kept under control.It allows the flat to collaborate in order to shop sustainably, no more buying 4 separate cartons of milk! This is done using a specific cyclic timeline events system. Keep track of finances, with completing reported chores (such as full trash) resulting in anti-fines; and easily split the money owed for the shopping in the process.The application is a fully responsive web based platform built in ruby on rails. Using a multitude of custom controllers and relational databases paired with algorithms to serve the application.Installation of Ruby on Rails and cross-platform development.We worked on technologies none of us are familiar with to create an application that solves a real world problem. We effectively used content collaboration tools to efficiently monitor progress of the project.Most of us had never used Ruby or Rails before so it was a good learning experience for all of us. This was also the first hackathon for most of us so it proved valuable in more ways than one.Many extra features planned to implement, including custom rotas for flatmates and QR codes for easy joining of a flat. Inclusion of APIs such as shopping apis for direct purchase and banking APIs such as Monzo would add to the fluidity of the application.StirHackDealt with extensive amounts of the front-end development - making things look good is highly subjective, but with input from the team, we were able to come up with a simple, modern design for the project.I worked to initialise and create the Ruby on Rails project, moving on to implementing the MVC model through routes and models and connection to the view through controllers.I did some work on SqliteI worked on CSS and created some of the layouts on log-in and sign-up pages.Mayank Gupta\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 05:06 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"flatm8","project_tags":["ruby","ruby-on-rails","sass","sqlite"],"project_url":"https:\/\/devpost.com\/software\/flatm8-7odzak","keywords":"application,us,rails,ruby,flat,apis,custom,platform,order,shopping,built,chores,easily,including,used,using,familiar,easy,effectively,implement"},{"level_0":191,"hack_vector":[[0.1291735917,-0.0839877725,-0.0225375891,0.0434286632,-0.0135806529,0.1337153167,0.2055035233,-0.0336043164,-0.0355308764,-0.0163848121,0.0252477266,-0.076750502,0.1401216835,-0.0740232691,0.0679253563,-0.0048455121,0.2098348886,-0.0159286372,0.0566325523,0.1283685565,-0.2313685715,0.0556166992,-0.0438052677,-0.0109503372,0.0925018936,-0.0229460187,-0.0340299606,-0.1764298826,-0.0322080627,-0.0852608159,0.0770722479,-0.113558203,0.0299027432,-0.0846820101,-0.020418847,-0.0138673503,0.125613004,-0.1313001513,-0.0569512062,-0.0152814882,0.0497283824,-0.1392144412,-0.150549382,-0.0349545367,0.0740756318,-0.0471770428,0.0111807417,-0.0873030797,-0.0181253199,-0.217522949,-0.1431728452,0.0299962666,-0.1059123874,0.0290923212,-0.2071095854,0.1440216154,-0.1404106021,-0.0337262563,0.0436643697,-0.1180017665,-0.0723131523,0.0241045859,0.0914090797,0.0436834544,0.1094351113,0.0176793933,-0.0853247344,-0.1226375625,0.0316892862,0.024388982,0.0586603358,-0.0467228442,0.0280918088,-0.1165719181,0.0323980451,-0.1277959347,0.1720758826,-0.0015677433,0.01228745,-0.1381574124,0.1210784912,0.1478050053,0.0635112002,0.1655142754,0.1009396538,0.1977218091,-0.0956937596,-0.0615731031,-0.0249043275,-0.0808397755,-0.1542104334,0.0499301441,0.0983087942,-0.0476812012,-0.0147669259,0.0209358726,-0.1625014395,0.2221489847,0.0043515391,-0.0721612126]],"hackathon_name":"StirHack","index":191,"project_description":"A power glove with an extensible Android APIThe glove development setupWe initially wanted to build a power glove that a user could connect to their phone, but we weren't sure what exactly the user could then do with it. We solved this problem by exposing the glove to other apps on the phone as an API and building some sample apps ourselves.The glove has buttons on three of the fingers, that the user can press to control various things on their phone. Currently our sample apps are a trumpet synthesiser and a test scrolling application.The buttons are registered on inputs to the Micro:bit, that then exposes them in a BLE service to any phone that wants to connect to it. We have a base app that runs a service to talk to this Micro:bit and listen for these presses. This service then broadcasts these presses as events in the phone that can be subscribed to by any other app.Bluetooth is really hard and neither of us had worked with GATT before. This caused a lot of problems. We also weren't able to solder due to health and safety constraints, so we had to wire together the glove using pliers, scissors, cardboard and lots of tape.We have an API, so the next step will be documenting it and releasing it to the world, perhaps in the form of build instructions.StirHackI built the micro:bit software and the Android BLE component. The micro:bit just exposes a GATT service that allows the phone to read each of the input pins, and the phone scans for this service and connects to it.I worked on the android end producing 3 seperate apps as well as on the coonstruction of the glove. Firstly the main app running as a service in the background, trasmitting the bluetooth data recieved from the microbit. Secondly the trumpet app producing a real time MIDI files for synthesis. Thirdly a simple recieving Scroll app to test the scrolling functionality of yellow.Cameron MacLeod\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 03:57 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"yellow","project_tags":["android","c"],"project_url":"https:\/\/devpost.com\/software\/yellow","keywords":"glove,phone,gatt,service,apps,user,could,bit,buttons,build,next,ble,micro,connect,sample,app,api,android,work,presses"},{"level_0":192,"hack_vector":[[0.1726890206,-0.1196493804,-0.0370742939,0.0572391674,-0.0255929139,0.1547167599,0.209877938,-0.034285631,-0.0208164938,-0.0110047767,0.0111085689,-0.0498327725,0.1400039494,-0.081997022,0.0667759925,-0.010351833,0.2135652006,0.0053556594,0.0488590263,0.1016212851,-0.2382193059,0.032819204,-0.0375840254,-0.0308470707,0.1234901547,-0.0241224207,-0.029498551,-0.1894865185,-0.0225010142,-0.0719858184,0.0543378741,-0.1339788139,0.045707982,-0.0898398235,-0.0347150117,-0.0204504561,0.1210310832,-0.1374860406,-0.0746254995,0.007439449,0.0524975471,-0.1375189126,-0.1429659724,-0.0231722388,0.0471191816,-0.0397357196,0.0256882291,-0.0697958916,-0.0299989395,-0.1963859051,-0.1402050853,0.0116870878,-0.1148968041,0.0006079657,-0.1742081493,0.1598176956,-0.1250668615,-0.0065627899,0.0241956022,-0.0727122873,-0.0637396425,0.0191228464,0.0828381255,0.0398341306,0.1140579581,0.0059199501,-0.1123590767,-0.1192170829,0.015713308,0.030731447,0.0759299025,-0.0402826555,0.0215061437,-0.1455079764,0.0226729959,-0.129318133,0.1875071079,0.0132819712,0.0173626151,-0.1316117346,0.131943509,0.1595678926,0.0558912084,0.1682972312,0.1096291617,0.1890894026,-0.0894567743,-0.0100334343,0.0067853443,-0.0825858489,-0.1322394609,0.0672367364,0.0802317485,-0.0321339741,0.0290650092,-0.0240819529,-0.1357593834,0.2273056805,0.0248438772,-0.0700712875]],"hackathon_name":"StirHack","index":192,"project_description":"Machine Learning Genre based off of album artworkTry and describe what R&B is to the person next to you? It's really difficult isn't it?Predicts music genre based on album artwork alone.Million Song dataset -> Spotify API -> Clarifai API -> Machine Learning -> Results!   <- Machine Learning <- Clarifai<- Google <- User InterfaceTried to build a web app, react is way harder than I remember.\nClarifai changing input types \nForgetting to install SQL\nPython3\nReading HDF5 files are farcicalIt works!There is a genre called 'Heavy Christmas' and people are really bad at guessing genre from album artwork.Going back to our dissertationsStirHackResponsible for implementing the machine learning pipeline, I focused primarily on Python and SQL to produce an album cover genre classification tool.James Friel\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 12, 2017 03:56 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"s4ML","project_tags":["clarifai","spotify","python","bash","google","scikit-learn","pandas","numpy","sql","scipy"],"project_url":"https:\/\/devpost.com\/software\/s4ml","keywords":"clarifai,genre,album,api,next,artwork,learning,machine,really,works,files,dissertations,farcical,forgetting,describe,going,google,guessing,difficult,christmas"},{"level_0":193,"hack_vector":[[0.1541002244,-0.1130711511,-0.0178313255,0.0688645095,-0.0119363153,0.1555012316,0.2077096999,-0.0342315026,-0.0330589563,-0.0083591109,0.0062056924,-0.0469416939,0.1500398219,-0.060335923,0.0501009338,-0.000906145,0.1994559318,-0.0016427471,0.0372214355,0.1288008839,-0.2415052503,0.0178932995,-0.0423450358,0.0025178199,0.1640769839,-0.0231921673,-0.0398472473,-0.1826913804,-0.0253681708,-0.0841061398,0.0804394186,-0.1250079721,0.0296382848,-0.0616876222,-0.0290751886,-0.0103549864,0.1181692407,-0.134172067,-0.040541634,0.0070936275,0.0674756765,-0.1422004104,-0.1343833804,-0.0293218493,0.0430211425,-0.0401127227,0.0102042314,-0.0570280552,-0.0294347722,-0.2132867873,-0.1082823575,0.016497951,-0.1114747301,0.0264985468,-0.1916466355,0.1679200679,-0.1546651125,-0.0082573919,0.009789221,-0.0829425305,-0.0670754164,0.0251583997,0.058387503,0.0345765799,0.1307826489,0.0193552226,-0.1061406806,-0.136318773,0.0239148457,0.0163972117,0.0519901663,-0.0383560248,0.0292643011,-0.116715014,0.0102913491,-0.089987658,0.1827243716,-0.0039908704,0.0158620812,-0.1420062482,0.1107584611,0.1583917439,0.0454131663,0.1516975611,0.1166413948,0.2173528075,-0.0968859047,-0.0178884044,-0.0154013047,-0.0718182847,-0.1420283467,0.080508396,0.0827169344,-0.0248656385,-0.0045246375,-0.0011593945,-0.1425329,0.2354854345,0.0312671922,-0.0472709462]],"hackathon_name":"IC Hack 17","index":193,"project_description":"A short puzzle game that guides you through the wonders of ancient GreeceWe got our inspiration from games like The Witness and Portal, but we brought a lot of our originality to itIt gives you the opportunity of navigating through an open world and exploring all of its cornersWe build the game using Blender for 3D modelling and Unity as a game engine. The assistant was created using Microsoft Bot Framework QnA MakerIt was the first time we used Bot Framework and we would say the difficulty laid in linking the bot to a console we made in UnityWe managed to achieve full functionalityWe learned to use Microsoft Bot Framework and we developed our skills in game development even more, to the point where we implemented this game in less than 24hImplement bigger and better puzzles, plus add more areasIC Hack 17Helped with the backendCosmin Nicolae Bresug\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 01:05 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Flames of Agartha","project_tags":["blender","unity","c#","json"],"project_url":"https:\/\/devpost.com\/software\/flames-of-agartha","keywords":null},{"level_0":194,"hack_vector":[[0.1277645677,-0.0978942513,-0.0190017428,0.0447842814,-0.0206673257,0.1404139996,0.2091825753,-0.0325632989,-0.0251434576,-0.0080684675,0.0176506452,-0.0510472804,0.1364824176,-0.0783286542,0.044005163,0.0347405747,0.2313401252,-0.0008577145,0.03596716,0.1270273477,-0.232567206,0.0351203978,-0.0492850468,-0.0273029208,0.12045414,-0.0206540376,-0.0442164987,-0.1856773049,-0.00899956,-0.0892588422,0.0602902882,-0.1184245422,0.042264048,-0.0790017918,-0.022447139,0.0011821506,0.12267939,-0.1364682764,-0.0376683995,0.0161497165,0.0334221981,-0.1460487098,-0.1608682871,-0.0355487056,0.0508078486,-0.0622855164,0.0156857576,-0.0605795383,-0.0225894824,-0.2180523574,-0.1209451184,0.0209127031,-0.1030974761,-0.0054945056,-0.1818208694,0.1564972997,-0.1465715617,-0.0124316774,0.0200527366,-0.0836793929,-0.0553401113,0.0264207888,0.083170481,0.0623765886,0.1235511079,-0.0035143278,-0.1001165509,-0.1364601552,0.0431968458,0.0120244958,0.0544685349,-0.0497353263,0.0192747079,-0.1186113283,0.0084672989,-0.117459476,0.1777170151,-0.0005505993,0.0275143944,-0.1499044299,0.1332631111,0.1651000381,0.0578369573,0.167999953,0.1039980426,0.199946627,-0.1133323684,-0.0260226335,-0.0159125682,-0.0928591192,-0.1497724354,0.0572492145,0.0852384567,-0.0271358434,0.0049398844,-0.0033790823,-0.151249975,0.2059628218,0.0339071304,-0.0739290565]],"hackathon_name":"IC Hack 17","index":194,"project_description":"Automated trip schedulingWe went Interrailing in the summer and found it awkward having to manually add in each of the travel journeys and things we wanted to see. The idea of the project was to create an automated trip planner that would take any existing information, such as flights or hotels booked, and then create a fully-detailed schedule for you, that included things to see and all transit journeys between the places.A web app with a schedule and options for adding in travel or visit events, and then a button to automatically fill in the schedule with content. \nCurrently we have a Python script for finding local attractions, calculating journeys between locations via public transport, and recommending local attractions (FlaskWebProject1\/models.py), but we have not yet been able to implement this into the web app.The web app is written in HTML \/ CSS \/ JS \/ Flask, and the route finding is done in Python, using the Google Maps API.IC Hack 17Alex Lloyd\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 01:51 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Trip Planner Web App","project_tags":["html5","css3","javascript","jquery","bootstrap","python","flask"],"project_url":"https:\/\/devpost.com\/software\/trip-planner-web-app","keywords":"web,app,python,api,schedule,attractions,journeys,finding,google,create,new,planner,code,maps,route,optimum,script,see,content,local"},{"level_0":195,"hack_vector":[[0.1397037655,-0.1090435907,-0.035078425,0.0429138653,-0.0224699173,0.1165676489,0.1908354759,0.0069463472,-0.0169508811,-0.0125378026,0.0015200203,-0.0711176023,0.1347484887,-0.0614620708,0.0737847835,0.0148867611,0.1985359788,0.0006111863,0.0398314558,0.1211850494,-0.2508439124,0.0251464657,-0.040042527,-0.0231912117,0.1065516323,-0.0360373408,-0.0332945213,-0.1817143708,-0.0243481994,-0.0781926066,0.0525627099,-0.1139684021,0.029976856,-0.0827274844,-0.0238610208,-0.0032877719,0.1011999846,-0.149797678,-0.0625201762,0.0141577302,0.0267135892,-0.1448616683,-0.1584896743,-0.0386952758,0.0599067621,-0.0755654201,0.0175079852,-0.084189944,-0.0157011468,-0.214072153,-0.1481575966,-0.003843504,-0.1060915887,-0.0095702084,-0.1978461295,0.1698071361,-0.1302641183,-0.0228441358,0.0433321111,-0.0961552709,-0.0891405046,0.0271040872,0.0637754351,0.0513935685,0.1069838628,0.0162999164,-0.1024131328,-0.1290759295,0.0354999043,0.0064444202,0.0714976266,-0.0644140765,0.0078776404,-0.116813153,0.026234474,-0.1297033876,0.1799233705,-0.000456796,0.0218811817,-0.1371833235,0.1233515218,0.1643865258,0.0556822866,0.1576759517,0.0965374634,0.2049102038,-0.094555907,-0.0154311797,-0.0055910484,-0.089579992,-0.1425432563,0.0578795634,0.0812573433,-0.0472843796,-0.0031954329,-0.0046551982,-0.1668843776,0.2279434204,0.021604877,-0.076638408]],"hackathon_name":"IC Hack 17","index":195,"project_description":"Attempts to use machine-learning to correlate tweet sentiment and stock price dataI was inspired by one of the pages in G-Research's leaflet about identifying market-affecting data within tweets.The project searches the Twitter API for tweets about a given company that a user wants to be monitored, and uses sentiment analysis to identify general sentiment about the company. Using the general time of those tweets, it would then find the change in stock market price for the company after a short delay to allow for those changes, and note whether the stock increased or decreased. This data was then fed into a machine-learning algorithm in order to predict whether a stock would rise or fall, given a general sentiment from tweets.I built it using a variety of APIs, notably:The Yahoo-Finance API only allowed for checking on a daily level when looking at historic data, meaning I could not achieve the granularity I would have required while at the hack. It should be feasible to record tweets now and see the impact later on in the day to provide training data, but this was not practical to do at the hack due to time-constraints.More-or-less implementing a system to predict a rise or fall in company stock. While it may not be the most accurate method, it could be potentially be improved in order to be really useful for this field.How to use REST APIs, how to form JSON objects of my own, how to get set up with Microsoft AzureImprovements to the algorithm to allow it to be more accurate in its predictions.IC Hack 17Daniel Temple\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 02:25 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"CompanyTracker","project_tags":["python","scikit-learn","azure"],"project_url":"https:\/\/devpost.com\/software\/companytracker","keywords":"tweets,data,stock,sentiment,api,company,would,order,general,market,given,microsoft,rise,learning,finance,machine,fall,predict,learn,provide"},{"level_0":196,"hack_vector":[[0.156195268,-0.1217772961,-0.019009443,0.0382445939,-0.0102080507,0.1215591282,0.2045215666,-0.0311764739,-0.0347000957,-0.0047835084,0.0211427119,-0.0574552491,0.147686556,-0.0647061989,0.062023025,-0.0075917975,0.1916806251,-0.0292699467,0.0424768068,0.1377405822,-0.2576331198,0.0266895071,-0.0388789922,0.0069934377,0.1335860491,-0.0379254222,-0.0265061483,-0.1676413417,-0.0251107663,-0.0960526392,0.0774240121,-0.1139072552,0.0171939489,-0.0675407872,-0.0174178369,-0.0357446671,0.10522376,-0.1470002085,-0.0570987426,-0.0210388415,0.061713472,-0.1266107857,-0.1329102814,-0.0357683413,0.0643281117,-0.0478993878,0.0046176505,-0.0869401395,-0.0170110874,-0.2055233717,-0.1358164102,0.021222515,-0.1152261049,0.0342106707,-0.2208145261,0.1691586971,-0.1423392743,-0.0306302775,0.0204562303,-0.1091643795,-0.0673455298,0.0226604417,0.069470346,0.0389196612,0.1118803173,0.028313471,-0.1022067294,-0.1179874986,0.0193071757,0.0245544035,0.0600081794,-0.0382576026,0.0265339054,-0.1109563932,0.034319561,-0.1152132899,0.1690841168,-0.0070033651,-0.0018698474,-0.1242139339,0.1150557026,0.1491540074,0.0398485325,0.1565971076,0.113944307,0.2218312621,-0.09419927,-0.0490400754,-0.0310881659,-0.0535295159,-0.1366253793,0.0698953569,0.1019295156,-0.0382370204,-0.0272612087,0.0131809134,-0.1565611959,0.2257549465,0.0093945935,-0.0511287488]],"hackathon_name":"IC Hack 17","index":196,"project_description":"2D\/3D puzzle game set in a dystopian reality where the player is working for the government to reform societyIntro sceneStoryMain sceneChemicals manualDeath sceneThe main inspiration behind Blended's story were the books written by George Orwell and Aldous Huxley. These themes are highly relevant to the present global situation with the rapid increase and development in IoT and other similarly linked technological topics. Furthermore, the style of the game is entirely unique not based on any other works of people but more personal works. The gameplay was heavily influenced by games such as 'Papers Please' and 'The Westport Independent'.Blended is a 2D\/3D puzzle game set in a dystopian alternative reality. You work as a new employee in Olga.co, a company that runs the detention facilities in Naraka. Naraka is a totalitarian state that controls its citizens to an extent well beyond that of any other government. The state imposes on its citizens restrictions as tight as birth control with no choice, pre-selected career paths for certain specially bred individuals and a casted hierarchical system that cannot be broken. Your job in this detention center is to treat the inmates with specially brewed concoctions to correct their ways, in order to make them fit for society, conforming and even more patriotic than before.We used Unity3D and C# for programming, 3ds Max for 3D modelling and Photoshop for 2D modelling, sprites and GUI.\nAs a team of 3 people, we split the tasks evenly into game design, programming and art.The main challenge we tried to overcome was the use of fluids on Unity. Fluids are some of the hardest physics objects to implement in game development, and we soon realised it would not have been possible for us to implement them on time. So we decided to brainstorm for alternatives and we came up with the idea of exploiting the 2D part of our game to use a 2D sprite that gives the illusion of being a 3D mesh.We are proud of managing to reach the main targets we had for our hack, since we thought we were being really ambitious! We are proud of having been able of using version control to manage efficiently the sharing of files between the 3 of us... and we are proud of having pulled an all-nighter for this!Each one of us learnt from the others, since we were all specialising in different tasks. We learnt how to solve merge conflicts and how to work together in such a diverse team.We are now ready for virtual reality!IC Hack 17Lead programming, 3D modelling and animationsCreative direction, Gameplay designer and gameplay programmer.2D graphics, sprites and GUI!Alessia Nigretti\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 03:53 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Blended","project_tags":["c#","unity","3ds-max","photoshop"],"project_url":"https:\/\/devpost.com\/software\/blended","keywords":"game,proud,blended,us,main,citizens,team,tasks,state,specially,fluids,modelling,since,people,control,detention,reality,development,programming,naraka"},{"level_0":197,"hack_vector":[[0.1453685313,-0.1331096739,-0.0162664428,0.078725785,-0.0196542442,0.1416701823,0.2075937539,-0.0378368348,-0.0423607118,-0.0111042354,0.0087453881,-0.0164438803,0.1425379813,-0.0708654001,0.0401491188,0.0015261431,0.2250956446,-0.0085378615,0.0533872321,0.1150995865,-0.2464156449,0.0270679239,-0.0393655784,-0.0039156615,0.1527456939,-0.0229479093,-0.0533719473,-0.1840831041,-0.0055116978,-0.0918825865,0.0755219534,-0.1233912706,0.0400807299,-0.0581514426,-0.023132218,-0.0204069521,0.123247847,-0.1332321018,-0.0281351227,0.0147575028,0.0763116181,-0.1530157328,-0.1638721973,-0.0387148634,0.0256258808,-0.029360259,0.01173528,-0.0673919022,-0.0217136219,-0.2019379139,-0.0937977135,0.0359961204,-0.1069835871,0.0126240794,-0.1992011517,0.1532882452,-0.1619871855,-0.0014124778,0.008475285,-0.0581948869,-0.0539462827,0.0350310951,0.0697503537,0.0295285471,0.1299344897,0.0051588346,-0.1072234735,-0.1368041188,0.0253436957,0.0287488196,0.0585115477,-0.0324266888,0.0224108659,-0.1299013793,-0.0026986937,-0.0970330164,0.1780689061,0.0162544008,0.0293943118,-0.1377254277,0.1182821244,0.1523452401,0.0376151502,0.1651536226,0.1343697011,0.214353323,-0.1096972153,-0.0117927883,-0.0207494982,-0.0796082467,-0.1181279719,0.0902906805,0.0796292126,-0.0086161923,0.0081734974,-0.0167675614,-0.1339401007,0.2021946311,0.0408989526,-0.0372182131]],"hackathon_name":"IC Hack 17","index":197,"project_description":"Zombie Survivor GameWanting to expand our horizons in a setting we were not accustomed to before, we had the idea of implementing a strategy game, deciding to combine multiple genres of games together; reimplementing a classical game with a twist.A top-down shooter game, where the player fights off hordes of zombies while building and defending a base.Using C# in Unity.Physics world component interaction with navigational tools.Making a randomly generated world with an exponentially increasing difficulty level.To collaborate in a project with others through the Git system and to work as a team in a time constraint environment.IC Hack 17George Kousouris\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 04:11 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ICHack","project_tags":["c#","unity"],"project_url":"https:\/\/devpost.com\/software\/ichack","keywords":"game,world,inspiration,increasing,implementing,idea,horizons,hordes,git,genres,generated,games,fights,exponentially,expand,zombies,difficulty,defending,deciding,constraint"},{"level_0":198,"hack_vector":[[0.1489447951,-0.1239020601,-0.0173044689,0.0666710883,-0.0184521452,0.1626037806,0.1915711313,-0.0516953431,-0.0213591326,-0.0196343139,0.0066640764,-0.0539340265,0.1493136585,-0.0709555894,0.043000374,0.013124316,0.2275311947,0.0042654676,0.0556014962,0.1059594005,-0.2344590724,0.0426823869,-0.0458002985,-0.0166049004,0.1386793256,-0.0336152092,-0.0457050577,-0.1865220517,-0.02851367,-0.0794080347,0.070687145,-0.1248680875,0.0503480993,-0.0784130096,-0.0428765267,-0.0215243567,0.1333990991,-0.1326397955,-0.0406625271,0.0122168241,0.0590946861,-0.1382461786,-0.1689822972,-0.0346400701,0.0368396752,-0.0370485596,0.0218316074,-0.0647302717,-0.0257605407,-0.2046448737,-0.120101966,0.031949345,-0.1119978279,0.0040395968,-0.1859732568,0.1530202627,-0.139608264,-0.008307701,0.0293391682,-0.0632432699,-0.0696445182,0.0158258043,0.0778746679,0.0410768166,0.1162476018,0.013439076,-0.1002759561,-0.1422375292,0.0222476255,0.0345096365,0.077464655,-0.0483706743,0.0283280723,-0.1333628148,0.0004923897,-0.0961200893,0.1945964396,0.0095029641,0.0301451292,-0.1308097839,0.1192087755,0.1506556123,0.0397925191,0.1606239378,0.1241698563,0.1933497041,-0.1001791507,-0.0239615832,-0.0128241191,-0.0772458017,-0.1259373426,0.0704984516,0.0720849708,-0.0342533775,0.0133726187,-0.0244260207,-0.1314278543,0.2255602628,0.0385069028,-0.0720304996]],"hackathon_name":"IC Hack 17","index":198,"project_description":"Use your phone to find and defuse a bomb.The attacker hides the bomb and arms it with a custom disarm profile.The defender has limited time to find (with the help of bluetooth signal strength) and disarm it.The bomb is complicated.There are 4 conditions to be simultaneously satisfied before it can become fully disarmed.Swing by to have a go at disarming it yourself!With surprisingly great difficulty...In particular, co-ordinating a load of device threads with the network stuff on the Pi was a bit harder than we anticipated.More traps!\nMore interface!IC Hack 17Worked on the app dev (front-end\/logic, server connections).Worked on preparing the hardware and integrating the sensors on the arduino.Nikhil Gupta\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 04:14 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"The Manhattan Pi-ject","project_tags":["raspberry-pi","arduino","android","python","flask"],"project_url":"https:\/\/devpost.com\/software\/the-manhattan-pi-ject","keywords":"bomb,pi,disarm,traps,custom,go,fully,flask,find,electrons,disarming,disarmed,difficulty,device,defender,conditions,great,complicated,co,built"},{"level_0":199,"hack_vector":[[0.1587490886,-0.1313439757,-0.0032773309,0.080967091,-0.0447849743,0.1665664166,0.178265512,-0.0321038738,-0.0183099974,-0.0326185077,0.0109528685,-0.0092057921,0.1468082666,-0.075437896,0.0405200161,0.0553234555,0.2361299992,0.0355440043,0.0404233783,0.1013901383,-0.2087487727,0.011189878,-0.0467449352,-0.0593002513,0.1423719674,-0.0350446366,-0.0532098487,-0.1959063113,-0.0122955823,-0.0744636506,0.0481938757,-0.0889312178,0.0549565144,-0.0701201856,-0.0251236316,0.0150224101,0.1367503107,-0.1237987131,-0.033938963,0.05379197,0.0534532741,-0.1492987126,-0.1725485772,-0.0226271991,-0.0076361792,-0.0455657616,0.040322233,-0.0346886367,-0.0297893044,-0.2136822045,-0.0908073634,0.0327053517,-0.1133681908,-0.0562519915,-0.1385577619,0.1650936902,-0.1315594316,0.0428803042,0.0181486104,-0.0029074384,-0.0428556576,0.0337029621,0.0451107472,0.0683031678,0.1368249804,-0.0196843036,-0.1241428331,-0.159522891,0.0099971155,-0.0168866739,0.0591353737,-0.0322628878,0.0019001852,-0.1546887457,-0.03677072,-0.073657386,0.2053210884,0.0000194805,0.0491260774,-0.1521356553,0.1198430657,0.1753198355,0.0202881526,0.1458860487,0.1348763406,0.190545246,-0.1086728722,0.0346350893,0.009621026,-0.1025633365,-0.1114882678,0.1033593491,0.0360141546,-0.0056262049,0.0496162698,-0.065100275,-0.1044125259,0.2114461362,0.067984283,-0.0595017746]],"hackathon_name":"IC Hack 17","index":199,"project_description":"Why so serious?We wanted to make people happyMakes people happyWith happinesssadnessbringing happinesshow to make people happyMake even more people happyIC Hack 17I helped developed the mechanism that loads images into Microsoft's Emotion cognitive API'sFun.I did the camera usage.Suyash Kabra\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 04:05 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HappyBot","project_tags":["java","android-studio","android","json","microsoft-project-oxford"],"project_url":"https:\/\/devpost.com\/software\/happybot-1nhpry","keywords":"people,happy,make,happiness,wanted,happybot,bringing,built,challenges,even,inspiration,sadness,learned,makes,next,proud,ran,accomplishments"},{"level_0":200,"hack_vector":[[0.1512410045,-0.098963879,-0.0337372012,0.0439622886,-0.0168086495,0.151900515,0.2024838775,-0.0389190353,-0.004841506,-0.0341222994,0.0122059826,-0.0591247045,0.1257303059,-0.0709192902,0.0466392189,-0.0004289106,0.2200337201,0.007020114,0.0414999612,0.1190628186,-0.2383517921,0.0227368157,-0.0370309837,-0.0187616348,0.1072346643,-0.0131936716,-0.0295430161,-0.1709347218,-0.0231665671,-0.1045660079,0.0538008921,-0.1339612454,0.0378301516,-0.0832570344,-0.0152503382,-0.0239158422,0.1221520007,-0.1446733922,-0.068579644,0.0000427655,0.0500693321,-0.1238596886,-0.1376126111,-0.0435418002,0.0637748092,-0.0622562245,0.0236930717,-0.0665532649,-0.0478879735,-0.2122130543,-0.1452074498,0.0269191358,-0.1062464714,-0.0099927243,-0.1855315417,0.1594487578,-0.1206829026,-0.0405960791,0.0374735072,-0.1003164798,-0.0738711879,0.0128822727,0.0827521309,0.0374259166,0.1116201207,0.0236171,-0.1171209142,-0.1214644536,0.0267744474,0.0396479852,0.067264311,-0.0496888086,0.0312579088,-0.1335092783,0.027558608,-0.1215358451,0.1729361117,0.0130262673,0.0118972808,-0.1456438601,0.1174776554,0.1664904058,0.0433347449,0.1711497605,0.0971071348,0.1923304498,-0.0953251347,-0.0382963419,-0.028774146,-0.074265331,-0.1386086792,0.058309298,0.0813359171,-0.0383341461,-0.005513519,0.0077621364,-0.1569368541,0.2366975844,0.0115677984,-0.0753520131]],"hackathon_name":"IC Hack 17","index":200,"project_description":"Turtle brings AI and Machine Learning to Online DatingLogoOnline dating lacks real commitment. We swipe left and right without even properly looking at the profiles. We collect matches but don't bother starting a conversation.We bring real commitment back to online dating.Whenever you swipe right on someone (yes), you are required to record a short video. The video is analyzed by Microsoft Cognitive Services, to make sure the system captures its quality.The app then presents you the people who recorded the best videos first (the ones that are most committed to you).\nAs soon as there is a match, you can see the other persons video.We built this app as a web app using React, Redux, webpack etc. on the frontend, NodeJS, mongoDB, express.js on the backend.ReactJS can sometimes be a difficult choice when all you want to do is a dirty hack.We have a basic, working version.It is impressive how much you can accomplish within 24h. Without Microsofts Cognitive Services, our app wouldn't be possible.Build a native app, include push notifications, include a chat.IC Hack 17Thomas Debrunner\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 04:52 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"turtle","project_tags":["azure","react","redux","express.js","node.js","facebook-graph","mongodb"],"project_url":"https:\/\/devpost.com\/software\/turtle","keywords":"app,video,commitment,online,dating,right,services,cognitive,include,built,swipe,real,without,js,etc,even,express,match,first,make"},{"level_0":201,"hack_vector":[[0.1433069259,-0.1028294414,-0.0381092243,0.029393822,-0.0137222838,0.1271215528,0.2055031955,-0.0221694708,-0.0067912196,-0.0201645028,0.016482288,-0.0746663585,0.1378021389,-0.0666017011,0.0716204196,-0.0061961603,0.2003691345,-0.0060719433,0.0342862755,0.1312256157,-0.24411726,0.0251815692,-0.0408919714,-0.0166988783,0.0982557163,-0.0168725997,-0.0206063651,-0.1640505642,-0.019192161,-0.0964394957,0.0631835088,-0.1242078021,0.0199609697,-0.0897803679,-0.0138436183,-0.0225579701,0.1033927575,-0.1534369588,-0.0750592574,-0.0240906328,0.0390835404,-0.1174626052,-0.1347483397,-0.0323813781,0.0811979175,-0.058055073,0.0123525383,-0.0890392661,-0.0353257656,-0.2113960832,-0.1654843986,0.0188262798,-0.10360533,-0.0046882634,-0.1933192462,0.1718495637,-0.1058833078,-0.0455422215,0.0362476818,-0.1190066785,-0.0757397339,0.0243423544,0.0869547203,0.0466759168,0.1036237702,0.0260208305,-0.1007844955,-0.1107822061,0.0286920574,0.0285051148,0.062877655,-0.039474979,0.0298111793,-0.1202669069,0.0314157344,-0.1259193867,0.1728150994,0.003818359,-0.011805499,-0.1384365261,0.1238281056,0.1630274355,0.0560015552,0.1599526405,0.0836423859,0.2089559734,-0.0719840974,-0.0526559018,-0.0254811924,-0.0595322922,-0.1491727382,0.0504306071,0.1037322432,-0.0442116819,-0.0123410933,0.0204864331,-0.1701056659,0.2402484715,-0.0154869156,-0.0796781406]],"hackathon_name":"IC Hack 17","index":201,"project_description":"See what's happening around quickly and find something interesting to doWe are programmers. We can be very lonely at times.\nWe wanted to find a way to make people engage into events more easily even if they don't know each other but share a common interest.The app allows users to see what events are happening around them. By being on an event (using GPS location) each user can post a 5 second short video on how the event goes. Those 5 second videos can be viewed by anyone to see how is the event and decide whether to go or not. Our server rates the events using the Cognitive Services API provided by Microsoft according to happiness\/feelings of participants and displays a public mark for them.We used Ionic to build a cross-platform mobile application. The app communicates with a back-end server deployed on Azure Services which is written using Django. The videos are analysed with Microsoft Cognitive Services.401 Unauthorised on Microsoft Cognitive Services, for a few hours...\nAwesome Documentation of JS frameworksWe split in a way that people tried something new rather than in a way to finish the project. Surely the result is not perfect and a lot of things need improvement but we are proud we have reached a certain point of functionality.\nAnd also..\nWe don't get 401 Unauthorised anymore!Never use Javascript.\nBut seriously.. We never setup a server before and people making the mobile app never used Ionic\/Angular before. It was mainly one helping another, a great learning experience and things are not always as easy as they seem (ref: Javascript)Further integration of social network.\nEvent Participation - friendships - requests.\nExporting events from other applications (e.g. eventbrite, facebook)IC Hack 17Fangyi Zhou\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 04:53 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"5secs","project_tags":["ionic","azure","django","typescript","javascript"],"project_url":"https:\/\/devpost.com\/software\/5secs","keywords":"event,events,services,server,cognitive,app,never,microsoft,using,way,people,ionic,second,mobile,videos,javascript,proud,things,see,unauthorised"},{"level_0":202,"hack_vector":[[0.1459557414,-0.0989682823,-0.0192958154,0.0547726154,-0.0201953612,0.1389657706,0.2079411596,-0.0336992294,-0.0230437461,-0.0323136188,0.0330435634,-0.0450669453,0.1398610324,-0.0776539817,0.0573700219,0.0063830782,0.2197922021,-0.0065789772,0.0527041927,0.132204175,-0.2345763892,0.0234356858,-0.0472502038,-0.0276589096,0.1038971841,-0.0269139279,-0.0378572121,-0.1776281297,-0.0206398889,-0.096469596,0.0540810227,-0.1106814295,0.0324482992,-0.0751583502,-0.0077921208,-0.004790606,0.1235881746,-0.1311602294,-0.0589390993,0.0173583981,0.0581727661,-0.1249545068,-0.1557341218,-0.0275755674,0.0440329984,-0.0639137849,0.0270191524,-0.0804392397,-0.029513929,-0.2157559991,-0.132155627,0.0280238539,-0.1095878035,-0.0091325864,-0.1912339777,0.1588120908,-0.1360690147,-0.0118086301,0.0324129947,-0.0906040072,-0.0586629286,0.0356842913,0.0782999992,0.0600261502,0.1317214221,0.0137316799,-0.1090579629,-0.1312713325,0.017337475,0.0047887051,0.0531818047,-0.0354335047,0.010996731,-0.1330651492,0.021670023,-0.1055128425,0.1918401122,-0.0006902511,0.0187890921,-0.1509294808,0.122878246,0.1668438315,0.0443024151,0.1510620117,0.114311263,0.1999016106,-0.0992102847,-0.0360164605,-0.0236219037,-0.078835994,-0.1464345902,0.065673843,0.0832452625,-0.0247219428,0.0057389098,-0.0105210161,-0.1558041722,0.2188574374,0.0185127351,-0.0630516335]],"hackathon_name":"IC Hack 17","index":202,"project_description":"A multiservice music playerCommunal gatherings.It allows a user to queue up songs from both Spotify and Soundcloud to be played as if they were from the same service.Using the Spotify API and WebViews to display Soundcloud. We use android studio to make these so we could test regularly.We struggled to access Spotify at first being given the error of Invalid Redirect URI. We couldn't use https as this has a habit of launching chrome during its use.I am proud that having struggled with the connecting to Spotify through perseverance we got there. In addition to this having never used android studio we were able to make a working application.Don't go out the night before a hackathonAdd server integration so multiple people can add to the same queue.IC Hack 17Daniel Boulby\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 04:55 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Grack","project_tags":["java","android","xml"],"project_url":"https:\/\/devpost.com\/software\/grack","keywords":"spotify,use,proud,queue,add,studio,struggled,soundcloud,android,make,gatherings,display,error,first,working,connecting,given,go,got,grack"},{"level_0":203,"hack_vector":[[0.1475905478,-0.0898487791,-0.0403061211,0.0481309332,-0.0283915196,0.1406648606,0.1964009553,-0.0241652746,-0.0019990783,-0.0348984413,0.0175302755,-0.0576821193,0.1294107735,-0.0609272271,0.0755983591,-0.0194552951,0.2148133814,0.0068750842,0.0401043929,0.1183795482,-0.2420574129,0.0105862077,-0.0457145162,-0.0132689094,0.0951702595,-0.0120980032,-0.0163694303,-0.1693994254,-0.030785514,-0.0982717872,0.0466563366,-0.1275799572,0.0262594204,-0.0857187882,-0.0072548031,-0.0208694879,0.111211367,-0.1430874318,-0.0842894092,0.0043105152,0.0447850786,-0.1135082021,-0.1351678073,-0.0325505212,0.059857443,-0.0775844455,0.0201927051,-0.0726814047,-0.0385797024,-0.2084142119,-0.1481123716,-0.0050718375,-0.0986845344,-0.0169288106,-0.1917924285,0.1600995809,-0.1142477691,-0.0352011696,0.0396681651,-0.1040820107,-0.0715428069,0.0175566226,0.0868755355,0.0297796484,0.1090228632,0.0208629053,-0.112584345,-0.1236064807,0.0304379463,0.030868927,0.0583296195,-0.042278517,0.0203493256,-0.128779158,0.0258330815,-0.1335558742,0.1876909882,0.0180384759,0.0054321098,-0.1424434781,0.1151317582,0.1670344472,0.0502411015,0.1706382781,0.1015298441,0.1902464032,-0.0975751281,-0.0317841284,-0.0263486244,-0.0792099088,-0.1451214403,0.061900299,0.1015394926,-0.0362697616,-0.0010231573,-0.0027017994,-0.1575219035,0.2532866895,0.0088673104,-0.0777904466]],"hackathon_name":"IC Hack 17","index":203,"project_description":"Teaching computers how to be you.Angular 2: a nightmare as alwaysMachine learning: brokenAlexa: malfunctioningSometimes, you're busy. You don't have time to respond to messages. Maybe your grandma has sent you a link to a cake recipe she found. It would be rude to ignore her, but you're very busy indeed!Hullo taps into your conversation data from facebook messenger, google hangouts and the like to train a computer to talk like you. When you're not available, Hullo can step in and respond to simple queries.We downloaded corpuses of message data from various services, cleaned and regularised them, fed them through some machine learning, built an actor out of the learned model and attached it to a lightweight webserver. Then we built a web app to chat with it. And plugged it into Alexa.Machine learning, it turns out, is quite hard. Our original plan to use a differentiable neural computer fell through after many hours of experimentation. We're currently implementing an alternative model using stacked LSTMs.Finally getting Alexa to work. Ish.Before you go to a hackathon, become familiar with your tools.IC Hack 17Blaine Rogers\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 05:10 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"hullo","project_tags":["python","alexa","typescript"],"project_url":"https:\/\/devpost.com\/software\/hullo","keywords":"built,data,hullo,learning,model,respond,services,computer,busy,chat,machine,learned,like,alexa,google,finally,found,getting,go,import"},{"level_0":204,"hack_vector":[[0.1392803937,-0.0782819539,-0.0349849015,0.0395862386,-0.0168813206,0.1339777559,0.1891123652,-0.0271483585,-0.016079681,-0.0219525099,0.0097304285,-0.0821460187,0.1379181445,-0.0703039095,0.0564549491,-0.0088843619,0.2072300464,-0.0032137458,0.0421181582,0.1267454475,-0.2390315086,0.0279422347,-0.0382683128,-0.0010645812,0.1036630124,-0.020452356,-0.0304136779,-0.1684633642,-0.0301238522,-0.0943649858,0.0623913966,-0.125816077,0.0297412705,-0.0802528709,-0.0098042516,-0.0285308212,0.1192749664,-0.1425524652,-0.0667217225,-0.0126236062,0.0489051491,-0.1270815581,-0.1442088336,-0.0305392742,0.0772527158,-0.053971909,0.0114733046,-0.0820106417,-0.0318205394,-0.2126347423,-0.1528318524,0.0156940762,-0.1001821235,0.0116078006,-0.2119781524,0.1581578702,-0.1180900261,-0.0361224674,0.0399938934,-0.1177326888,-0.0745591,0.0114583848,0.0841908604,0.0301010273,0.1104834303,0.027871985,-0.0895268917,-0.1236836389,0.0371835567,0.0378962718,0.0740696192,-0.0504153371,0.0273071043,-0.1197417378,0.0391501226,-0.1272960156,0.1705665141,0.0074749291,0.000068279,-0.128651917,0.1142181531,0.1554499716,0.0598263703,0.1690006852,0.0936777294,0.196663484,-0.0904442444,-0.0574351698,-0.0295546409,-0.0749025047,-0.1510320008,0.0506213941,0.1013410166,-0.0518112071,-0.0136740562,0.0199272018,-0.1622920185,0.2499509901,0.0058008614,-0.0775699392]],"hackathon_name":"IC Hack 17","index":204,"project_description":"Tell us what you want to eat this week, and Alexa will tell you what to buy!MegaBite and AlexaMeal picker (on a laptop)Dashboard (on a tablet)Recipe details (on a tablet)Login screen (on a phone)Splash screenThere are two scenarios in the life of a coder.\nThe first: you make a trip to the stores, buy everything your eye lands on, and end up throwing out half of it by the end of the week.\nThe second: you take a break from your laptop at 10 PM, you're starving, but you find nothing in the fridge.\nWe thought it was time to put an end to this.MegaBite is an intelligent food planner. You can choose what you'll eat in the following week from a list of delicious recipes. Our app will work its magic to tell you how much of each ingredient to buy. Then, when 10 PM comes rolling around, you can ask your Amazon Echo to speak out the recipe.Starting from a Material Design CSS template, we designed a responsive web application with a PHP backend. Behind the scenes, we keep track of user accounts and store food plans in an SQL database. We process this information on the fly with PHP to calculate recipes and shopping lists.We also integrate with Amazon's Alexa Skills API, which required two parts. On Amazon's developer console, we defined the interaction model and recognised phrases for the skill. Secondly, our server listens for HTTP requests from Alexa, processes the information, and returns a JSON-formatted response.Having only begun working on the project during the Hackathon, it was a challenge to handle the tricky and poorly documented Alexa APIs, in a short amount of time. It was also incredibly difficult to debug the PHP behind Alexa, as Amazon's error message gave us no insight into the problems.We are very pleased with the fact that our app \"Just Works\". With a fully functional user account system, and a flawless integration with Alexa, MegaBite is more than a minimum viable product.Working with voice interaction was an interesting experience. We learned how to deal with the ambiguities of the English language when defining the Echo's interaction model. On the other end of the line, we also had to write our responses in ways that Alexa could successfully speak out loud.The road ahead for MegaBite is full of possibilities. Food is an enormous part of our daily life, and having an intelligent platform can be of great help. We have many ideas lined up for the future:Soon, we hope to distribute MegaBite for general use.IC Hack 17Lorenzo Silvestri\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 05:15 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MegaBite","project_tags":["php","web","amazon-alexa","mysql"],"project_url":"https:\/\/devpost.com\/software\/megabite","keywords":"alexa,megabite,end,amazon,interaction,food,recipes,also,php,speak,echo,pm,model,behind,information,life,integration,intelligent,buy,learned"},{"level_0":205,"hack_vector":[[0.1386696398,-0.1045486778,-0.0095887622,0.0612151809,-0.0133014107,0.1350520253,0.2155960947,-0.0363393687,-0.0506987795,-0.0171120446,0.0187198427,-0.0394911207,0.1381425411,-0.0657297075,0.0480942279,-0.0027377375,0.221059531,-0.0153447818,0.0553538352,0.1318540871,-0.2362755984,0.0402224474,-0.0416259058,-0.015720062,0.1322355568,-0.0225163139,-0.0400115922,-0.1924854368,-0.0253880564,-0.0819442049,0.0781872272,-0.1202145889,0.0413854718,-0.0743160397,-0.0199542493,-0.0185615104,0.1244347021,-0.1230398044,-0.0383687243,0.0143485395,0.0677371919,-0.1546670198,-0.1597782075,-0.0482809767,0.0409251601,-0.0457290076,0.0037698103,-0.0739618912,-0.0196560379,-0.206767723,-0.1043020189,0.0174498912,-0.1072238386,0.0209961664,-0.1935956329,0.1572496444,-0.1686854959,-0.0039619571,0.0175991151,-0.0917456895,-0.0592866018,0.0289219841,0.0751027241,0.0350915566,0.1315595061,0.0039884015,-0.1125406325,-0.1350710392,0.0339074954,0.0267399549,0.0523748808,-0.0423805267,0.0138867246,-0.1208951324,0.0032159153,-0.113349393,0.1808555424,0.0003549333,0.0349041335,-0.1328757107,0.1157493666,0.1412906945,0.0537681058,0.1592485309,0.124672763,0.202121377,-0.1116049066,-0.031101197,-0.0138225546,-0.0874914229,-0.1448278129,0.0717970058,0.0891450122,-0.0249365922,-0.0044498886,-0.0092520472,-0.1435723454,0.203062132,0.033013992,-0.045237232]],"hackathon_name":"IC Hack 17","index":205,"project_description":"VR version of Quake on an Oculus rift! with controller supportWanted to create a VR game, and the old-school originality of Quake made it the perfect candidate!Runs Quake, on an oculus riftWe used OpenHMD linux libraries to use the oculus, paired with the quake sourcecode (which is shareware), and a paid copy of the game (as the story isnt part of the sourcecode, only the engine is). With these tools, we compiled quake from source and started to implement the oculus' display.Using the linux drivers to connect to a partiall-supported oculusGetting the image on the oculus to display properly (with no borders, in 3D)Implementing joystick movement as an alternative to the oculus' motion trackingAdding distortion to the image to account for VR headset lensesPorting a 21 year old classic to VR in under 24hrsOpen source libraries can be a giant messThe purchase of a VR headset...! Hard to do anything without oneIC Hack 17Paul Larsen\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 05:24 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Jeffa-Quake","project_tags":["c","opengl"],"project_url":"https:\/\/devpost.com\/software\/jeffa-quake","keywords":"oculus,quake,vr,linux,source,libraries,display,headset,image,sourcecode,old,game,inspiration,implementing,getting,implement,isnt,hrs,jeffa,joystick"},{"level_0":206,"hack_vector":[[0.1400657892,-0.0951742604,-0.03497063,0.0440504514,-0.015921887,0.1300717741,0.1929210871,-0.0342305638,-0.0182811115,-0.0168512557,0.0155428518,-0.0775647387,0.1575657129,-0.0780044124,0.0683013573,-0.0148766628,0.1908048391,-0.0192383621,0.045968473,0.1345700622,-0.2402462512,0.0267310925,-0.0481811985,0.0047377218,0.123140052,-0.0259836428,-0.0294365417,-0.1575297415,-0.0349981189,-0.091203928,0.0645332783,-0.122059688,0.028127376,-0.0698086992,-0.0171072595,-0.0169979483,0.118558228,-0.1428075731,-0.062669687,-0.0166523755,0.0571401045,-0.1165288165,-0.1396861672,-0.0191558693,0.0664629415,-0.0522715338,0.0161644649,-0.0873962268,-0.0273210388,-0.2101947218,-0.1641390771,0.0219162442,-0.1093602777,0.0257983301,-0.2108592838,0.1586057544,-0.1277946085,-0.0355705433,0.0269567296,-0.1190800294,-0.0726402551,0.0239334144,0.075609602,0.0415819697,0.1056492701,0.0317764729,-0.0865746513,-0.1178245619,0.0189393796,0.0231503248,0.0584379062,-0.0422706939,0.023491852,-0.1139728874,0.0492936186,-0.1008715183,0.1818170547,-0.0026135184,-0.0152642569,-0.1370855868,0.1148926169,0.160279423,0.0628186539,0.1538764536,0.0960523188,0.2050547749,-0.0838177204,-0.0578735061,-0.0215999652,-0.0683006123,-0.1444546282,0.0535054915,0.1103547066,-0.0334375352,-0.0093304841,0.0063253324,-0.1700180173,0.2500754595,0.0047812173,-0.0718384683]],"hackathon_name":"IC Hack 17","index":206,"project_description":"A website for collaborating on crowd sourced books.Bookforge HomepageClicking on \"create book\"Voting pageVoting page with some votesTurning a page of a bookGetting to the end of the bookOur website lets you collaborate with others to create a crowd sourced book. People can visit the website and view books that have been finished or books that are currently being voted on in an animated book with real pages. You can then go to a voting page and write a suggestion for what you think should be the next sentence. After an allotted time the sentence with the most votes is immortalised in the book, the poll refreshes and you move onto the next sentence.We built the website using mySQL for the database that holds the book and voting information, and php which interacts with this database, sending results to the client which is displays information using a combination of HTML, CSS and JavaScript.We originally set out using node.js and socket.io, but since none of us had experience with socket.io, and the documentation was very poor, we decided to switch to php. Unfortunately this meant our voting system was no longer real-time, but we felt this was justified. We also have little experience with HTML, CSS or JavaScript, so it was challenging to dive into web development looking at code we didn't understand. This meant a lot of our website has some shocking code in it, using some very hacky techniques to bodge a solution (Don't tell anyone).Despite not achieving everything we wanted to, we managed to create a fully working solution from front to back end. We are quite impressed with the results, especially considering much of the technical skills we used were completely new and alien to us.We learnt A LOT. Despite the obvious answers of the programming languages themselves we learnt how to use GitHub to streamline our workflow, and split the workload across the group so we all get some experience on front and back end development.Who knows! Maybe introduce some more advanced features such as user login, or fix some of our awful code so that is doesn't break every time someone pushes to GitHub.IC Hack 17tnugent97\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 05:29 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Bookforge","project_tags":["javascript","jquery","html5","css3","php"],"project_url":"https:\/\/devpost.com\/software\/bookforge-ym2p6f","keywords":"website,book,using,experience,next,sentence,time,code,voting,lot,learnt,socket,create,css,io,database,real,despite,information,meant"},{"level_0":207,"hack_vector":[[0.1431938559,-0.0936885253,-0.0298675001,0.0373077467,-0.0133074159,0.1300015748,0.2015739679,-0.0329340808,-0.0160217937,-0.0124552194,0.0148095256,-0.0755052716,0.1352540404,-0.0611769892,0.0761006996,-0.004883328,0.1902677864,-0.0112195835,0.0462255441,0.136028111,-0.2429626733,0.0403252319,-0.045730453,-0.006946939,0.1058937982,-0.0232401825,-0.0224064589,-0.1759995818,-0.0379883312,-0.0901602954,0.0662343055,-0.1239878088,0.0279294793,-0.0919123366,-0.0160724781,-0.0228018593,0.1126917228,-0.1446211636,-0.0704277679,-0.0120780431,0.0439433865,-0.1355614811,-0.1383966655,-0.0356828235,0.0664808452,-0.0550438799,0.009413165,-0.0893116221,-0.0292955898,-0.2095829546,-0.1563897878,0.0136514483,-0.1114441082,0.0180241372,-0.2033640742,0.1548563689,-0.1309417635,-0.0317026488,0.0369291864,-0.1160894483,-0.078933388,0.0169307943,0.0781521052,0.0421590656,0.106104672,0.0232668705,-0.0993346348,-0.118133083,0.0290414505,0.0214092899,0.0641062632,-0.0568071678,0.0252513699,-0.1190553382,0.0412938371,-0.1208070815,0.177002877,-0.0033652154,0.0004469407,-0.137791723,0.115068689,0.1503275931,0.0706066713,0.1587619483,0.0960376933,0.2032811493,-0.0868845955,-0.049404256,-0.0114154313,-0.0647088438,-0.1492954642,0.0513075106,0.1088865995,-0.0500089526,-0.020017283,0.0133661181,-0.1630461216,0.2349319011,-0.0037448406,-0.0708209425]],"hackathon_name":"IC Hack 17","index":207,"project_description":"MAKE RECYCLING GREAT AGAINWe are all concerned about the environment and recycling plays a major role in saving it. Waste sorting has been around for decades but people still tend to throw stuff to general waste bin even when it should go in recycling. We wanted to build an IoT solution to the problem, which will help recycling by automatically telling the user where the thing he is holding goes.Mr. Bin saves the planet. When approaching Mr Bin with litter the camera will detect the object with a certain accuracy, then it will classify it as recyclable, general waste or non-recyclable. It will finally point to one of the bins below the screen for the user to throw your waste in.We built Mr Bin with Python and Microsoft Computer Vision APIs deep learning algorithms. We also used OpenCV and multithreading to capture the live stream video. After the program recognizes a frame, we used the image tags and confidence levels to go through a data base of possible waste items and then sorted them accordingly. We have also used Microsoft's TextToSpeech API to have Mr Bin saying the destination bin out loud. Finally we wrote a welcoming GUI using tkinter.At first we had to familiarise with the APIs, but the hardest part was allowing live stream video capture. We achieved this by capturing the video and sending every 10th frame to a seprate thread that will analyse it and display the result, while the main thread keeps capturing and dispatching.We had never worked with computer vision before and trying to understand so working with it raised a few problems.\nThe hardest task was indeed allowing live stream computer vision since there wasn't an API for it. We managed it by analysing evey 10th frame of the video capture.\nWe're also very proud of managing to work well in a team that had never work together before.We had to coordinate in order to deal with spaghetti code and finally get the product ready.We have been using computer vision algorithms for the first time. We familiarised with python multithreading and Microsoft's APIs for Congnitive Services and Text-toSpeech.The biggest improvement we want to bring to this IoT solution is some electronic component such that Mr Bin will be a stand alone product which will automatically dispatch the waste in the right bag after detecting it. In this scenario the user just throws waste in the it and the bin will operate automatically by detecting the type of waste and putting it in the right bag using motors and a scale. We believe that this would reduce user effort and improve recyclability like never before.IC Hack 17I worked on backend taking care of API calls and JSON interpretation, as well as producing the final classification outputI worked on the backend, taking care of python multi-threading to make the live video work properly with the use of API calls on frames.Andrea D'Olimpio\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 05:28 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Mr. Bin","project_tags":["python","azure-iot-suite","azure","opencv"],"project_url":"https:\/\/devpost.com\/software\/mr-bin","keywords":"bin,waste,mr,computer,vision,video,user,apis,frame,capture,stream,never,microsoft,automatically,recycling,finally,also,used,using,live"},{"level_0":208,"hack_vector":[[0.1437966526,-0.1647817194,0.0204316042,0.1014438272,-0.0530434698,0.1655493379,0.1602683365,-0.0541827343,-0.0286451913,-0.0311313104,-0.0080248816,0.0450706333,0.1320138574,-0.0762263909,-0.0110249892,0.0904147699,0.2603978813,0.0446331203,0.0539931841,0.0675942674,-0.1869027466,-0.0021513486,-0.0478931703,-0.0694792867,0.1738488823,-0.0177761633,-0.0813249573,-0.1762678921,0.0340125859,-0.0794525817,0.0235724319,-0.0853628442,0.0822553709,-0.047672946,-0.0479196161,0.0131125785,0.1452507824,-0.1085565537,0.0144667681,0.1052089781,0.0587535538,-0.1377684176,-0.1828768998,-0.0329315998,-0.0582824759,-0.0469464026,0.0526479743,0.0023967314,-0.0206406955,-0.1807037443,-0.020594608,0.0488116965,-0.1063116938,-0.0734018609,-0.0845489427,0.1443264186,-0.1548510492,0.0748144537,-0.0109918099,0.0670454949,-0.0077980054,0.0368454121,0.0398463793,0.0776330531,0.1454081237,-0.0482039228,-0.1344133317,-0.1742971241,0.001057278,-0.0003660794,0.0645413324,-0.0295232069,-0.0242873244,-0.1514374316,-0.089234218,-0.040930178,0.1990866661,0.0361329466,0.0979410112,-0.1483184993,0.1101965085,0.1521507204,-0.006707469,0.1224181652,0.163222909,0.1595796496,-0.1414523721,0.0839563161,0.0067638434,-0.1125751659,-0.0655195788,0.1162117943,0.0059568305,0.0361502655,0.0864656046,-0.1084027886,-0.0494724959,0.1357071996,0.1190125719,-0.0358686186]],"hackathon_name":"IC Hack 17","index":208,"project_description":"A band without the instruments but with significantly more bugsIC Hack 17Nick Allam\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 05:41 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Bugband","project_tags":["node.js","socket.io","jquery","javascript","express.js","css","html"],"project_url":"https:\/\/devpost.com\/software\/resonance-kyltdb","keywords":"server,client,socket,io,node,communication,playback,time,using,audio,ui,note,current,js,clients,input,improvements,finding,implement,handing"},{"level_0":209,"hack_vector":[[0.148222208,-0.1197535917,-0.0339039899,0.0284879766,-0.0317285284,0.1437065601,0.1992616206,-0.0336761884,0.0037183119,-0.0194545612,0.0084639154,-0.0528502762,0.1203342751,-0.0539012477,0.069049336,0.0257783532,0.2226322591,0.0206700545,0.036042735,0.126134187,-0.2503452301,0.020963585,-0.0421904549,-0.0278037135,0.1088069081,-0.003323447,-0.0207106546,-0.176880911,-0.0050654747,-0.1013619304,0.0389261544,-0.1404100955,0.0250354372,-0.105161868,-0.0032410445,-0.0396398827,0.1026264057,-0.1585635692,-0.0826131776,-0.0131027019,0.0279164631,-0.1443231255,-0.1474390179,-0.0508906394,0.0508862995,-0.058750011,0.0074021188,-0.0598962083,-0.0395226255,-0.1976352483,-0.127311185,0.0092422394,-0.0991796255,-0.0359140746,-0.1808037162,0.1742691547,-0.1066844314,-0.0149925137,0.032642968,-0.0804600939,-0.0716521665,0.0173226725,0.0769092441,0.0563469529,0.0976084098,0.0204591919,-0.1242493242,-0.1412449777,0.049252443,0.0345757902,0.0813243315,-0.0511141531,0.038432844,-0.1375745386,-0.0040492346,-0.1344520897,0.1666325182,0.0143019259,0.0244967807,-0.1262289733,0.1141870245,0.1611035317,0.0637631193,0.1713549197,0.1044122204,0.1874375641,-0.1009080559,-0.0228231605,-0.015965661,-0.0638874844,-0.1261781454,0.0654566213,0.1025421768,-0.0580475666,0.0129450029,-0.0022077633,-0.1416909397,0.2321286201,-0.0020270003,-0.0771792978]],"hackathon_name":"IC Hack 17","index":209,"project_description":"We're plagued by a social epidemic. Don\u2019t trust the evaluation of others. Trust Microsoft\u2019s Cognitive Services.HooterWe\u2019re plagued by a social media epidemic.\nSelf reflection and private thoughts are pervaded by the relentless stream of distractions we have come to consider normal.\nMeasures of happiness are usurped by possibilities of external validation of self.\nDon\u2019t trust the evaluation of others. Trust Microsoft\u2019s Cognitive Services. For the first time you can experience true validation free from bias or grudge.\nIt\u2019s a network with you, yourself and, most importantly, yourself.In essence, this diary is just for you. It uses sentiment analysis to, with unbeatable precision, evaluate your mood. It will also find the high points of your day and represent them with a complex array of emojis and related images. The scrolling timeline of entries is the best and only way to see your progression through life.IC Hack 17Robert Holland\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 05:43 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"The Anti-Social Network","project_tags":["ruby-on-rails","javascript","sentiment-analysis-online","google-image-search","github"],"project_url":"https:\/\/devpost.com\/software\/the-anti-social-network-2ljp0e","keywords":"validation,self,trust,free,evaluation,experience,external,find,first,grudge,essence,happiness,high,images,importantly,life,evaluate,way,epidemic,measures"},{"level_0":210,"hack_vector":[[0.1468393058,-0.1178052202,-0.0210014004,0.0334742926,-0.0196605697,0.1472870111,0.1870050132,-0.0362236537,-0.0047594761,-0.0295139588,0.0133237801,-0.047501184,0.1248182654,-0.0636136383,0.040986225,0.0364700146,0.2253520638,0.0178688429,0.0469220281,0.111744836,-0.2416023165,0.0112835104,-0.0389951579,-0.038232144,0.0917074159,-0.0330227837,-0.0349786542,-0.1803789288,-0.0140814483,-0.1144282147,0.0477323569,-0.1144570932,0.0425167754,-0.0783113688,-0.0122462735,-0.0081736362,0.1066039577,-0.1509222984,-0.051141914,0.0189329814,0.034554828,-0.1338456571,-0.1623124182,-0.0406093635,0.0420533232,-0.0806871951,0.0213998687,-0.0567878969,-0.0386774167,-0.2262013853,-0.1328752339,0.0240969043,-0.1011853293,-0.044688914,-0.1843139231,0.1594153196,-0.1288348734,-0.0228568371,0.0391689129,-0.0707676485,-0.0720148757,0.0229452476,0.0602929294,0.0603660904,0.1141956002,0.0144067267,-0.1187513992,-0.1341801733,0.0290232748,0.0140080182,0.0698671639,-0.0614536814,0.0157223511,-0.131864801,0.0028845668,-0.1147410721,0.1801437438,0.0139420861,0.0310282782,-0.1495381594,0.1237207428,0.1691248864,0.0368884653,0.1753148437,0.1080881134,0.2036749274,-0.1011830792,-0.015828114,-0.0233690683,-0.0822433382,-0.1335192919,0.0670262799,0.0683960393,-0.047128506,-0.0128200604,-0.0148181105,-0.1538568437,0.2161667496,0.0204423126,-0.0820450634]],"hackathon_name":"IC Hack 17","index":210,"project_description":"Beat any queue you want, or even skip it all togetherQueue Details Submission PageCoffee Ordering PageGeneral Queue Shortener PageMake Order PageQueue information pageAs I couldn't find a team, I didn't have enough time to use the APIs I wanted to (Advanced Search - Microsoft Cognitive Services), so it is just a proof of concept \"hack\".\nThis webapp allows you to order coffee before arriving at the store, or get information about any other queues wherever, for whatever.\nThe user will be given an estimated time and a \"worth your time coefficient\" (between  0 and 1), and will then decide whether or not to queue.\nInformation about the queue is crowdsourced from other users in the queue, giving information about their position in the queue and the approximate service time, as well as their opinion as to whether or not the think the queue is worth entering.This hack was inspired by my friend Olivia.IC Hack 17Tolulope Ogunremi\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 05:44 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Q","project_tags":["javascript","html","css","jquery"],"project_url":"https:\/\/devpost.com\/software\/q-fg7hj9","keywords":"queue,time,information,whether,hack,worth,coefficient,find,allows,apis,giving,given,get,approximate,friend,estimated,coffee,entering,enough,inspired"},{"level_0":211,"hack_vector":[[0.1421610415,-0.0905824453,-0.0225024652,0.0504573323,-0.0428668708,0.1597842574,0.2043371201,-0.0406592786,-0.0038525863,-0.0095335105,0.0091456082,-0.0325034335,0.1182698309,-0.0594704188,0.0587286279,0.0314061642,0.2478906512,0.034979701,0.0371585153,0.1120249555,-0.2255205661,0.009566199,-0.0586566105,-0.0363500379,0.1306942254,-0.0034853134,-0.0357956924,-0.2016314566,0.0020271824,-0.0787518695,0.0439765267,-0.1238750815,0.0460671969,-0.1032507122,-0.0171424355,0.0048851958,0.1174475551,-0.1291759461,-0.0527236983,0.0323331207,0.0242154039,-0.1504968703,-0.1594813615,-0.0357436426,0.0213407557,-0.066100888,0.0148727344,-0.042125199,-0.031036552,-0.2043893188,-0.096641615,-0.0021221731,-0.1007326394,-0.0444233641,-0.1473252177,0.1685103178,-0.1375256926,0.0245217942,0.0103198877,-0.0450073481,-0.0430217534,0.0175499283,0.0806793422,0.0578645244,0.1244220212,-0.0169837009,-0.1256446391,-0.1567585319,0.0492839664,0.0132348537,0.0655852705,-0.0460847616,0.0257248897,-0.1465439796,-0.0220827777,-0.1320471168,0.1927399188,0.0100720739,0.052813381,-0.1455434114,0.121729508,0.1579250991,0.0696949288,0.1692757756,0.110617727,0.1849422902,-0.1244973391,0.0109802252,0.0026798381,-0.0957437679,-0.1324238926,0.07171987,0.0812682509,-0.0243336633,0.0398670025,-0.0241902974,-0.1112118363,0.2107265145,0.0351878591,-0.081060186]],"hackathon_name":"IC Hack 17","index":211,"project_description":"Automatic manager\/downloader for files with use of language recognition, emotion recognition,..Always looking for new seasons of your favourite series, downloading latest albums of bands,..? We have a better solution.\nMedia-server will listen to your requests, search in your library or download your files from legal sources. Uses luis microsoft language recognition to specify your requests, then scrapes through possible sources online and then uses torrent to download it for you.IC Hack 17Adam Kantorik\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 05:46 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"media-server","project_tags":["python","ai-applied-language-detection","github"],"project_url":"https:\/\/devpost.com\/software\/media-server","keywords":"uses,requests,sources,download,listen,library,legal,latest,language,favourite,files,luis,downloading,better,bands,always,looking,media,torrent,microsoft"},{"level_0":212,"hack_vector":[[0.1177996323,-0.0654274374,-0.0271869469,0.0664184615,-0.024071686,0.1632651538,0.2080860883,-0.0470891707,-0.025759032,-0.0127995927,0.0245137811,-0.0632506609,0.1502768695,-0.0827291682,0.0543770529,0.0043623107,0.250678122,0.0070016696,0.0463175029,0.112369515,-0.2132864147,0.0546406843,-0.0545212924,-0.017233137,0.1173474342,-0.0182428937,-0.0433487147,-0.2007611692,-0.0269811563,-0.0654971674,0.0762704909,-0.1300969571,0.0513710417,-0.0854625776,-0.0289543346,0.0110426415,0.1460012197,-0.112219356,-0.0336709581,0.0124758584,0.0443614274,-0.1470355392,-0.1763831675,-0.0193894524,0.0506879054,-0.0400452949,0.0230489392,-0.0645491555,-0.0256341621,-0.2123710364,-0.1143992245,0.0128481574,-0.0930163786,0.0038736027,-0.1815736145,0.1359184831,-0.1437788606,-0.0039667934,0.0309025012,-0.082147412,-0.0617612191,0.0199597646,0.1024843976,0.0412306823,0.1201547161,-0.0006436394,-0.0716576055,-0.1446439028,0.0489892997,0.0211223885,0.0600891374,-0.0432933345,0.0344928913,-0.1240673289,0.0090447161,-0.1189271212,0.1919663548,0.0057590059,0.0347391069,-0.1341167688,0.1308308989,0.1571592689,0.066824615,0.168761149,0.1031515226,0.1703785956,-0.1133690476,-0.0391468965,-0.0146826208,-0.1034258679,-0.1524741054,0.0545199588,0.0712083727,-0.0247446392,0.0232060608,-0.0018195484,-0.1301620007,0.2137604207,0.0393940173,-0.0812722519]],"hackathon_name":"IC Hack 17","index":212,"project_description":"Your messages, sungThe jump from gifs to music, we wanted to sing our messagesYou type a message, and the app will convert it into song lyrics, make a file that you can send in whatsapp and sing your messageFrontend on android phones, communicates with backend to get file to share to whatsapp.\nBackend java server listens on a port and also communicates with a mysql server to match lyrics. Builds the file to send.Problems building the file in ruby.\nWas a challenge to get phone and server to communicate.Can hold a basic conversation using the app.Server communication with a phone, creating an android app, setting up servers.More songs, better algorithm to convert your message into lyrics.IC Hack 17Worked on the front end of the app, creating the UI and communicating with the back end serverThomas Allerton\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 05:49 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MusicMessenger","project_tags":["java","ruby","android","android-studio","mysql","azure"],"project_url":"https:\/\/devpost.com\/software\/musicmessenger","keywords":"file,server,message,app,lyrics,whatsapp,communicates,convert,send,phone,backend,sing,android,get,creating,gifs,conversation,communication,frontend,challenge"},{"level_0":213,"hack_vector":[[0.1389430314,-0.0941546336,-0.0344952717,0.0306454562,-0.0160838794,0.1275648028,0.2002907693,-0.0145568186,-0.0241223145,-0.0186831262,0.0016493608,-0.0780581534,0.1313762814,-0.0674950778,0.0612876602,0.0075272154,0.207926482,-0.00159328,0.0425590575,0.1325287819,-0.2385778725,0.0268249214,-0.0342048928,-0.0215413421,0.1109256223,-0.0252818633,-0.0330380164,-0.1728920043,-0.0240901671,-0.08775305,0.0602140389,-0.1226657182,0.0307928752,-0.0814982057,-0.0220676493,-0.0149803646,0.1156644747,-0.1421615779,-0.0577390455,0.0039871656,0.0470500141,-0.1378254741,-0.1531642228,-0.0434991829,0.0726619661,-0.0644767582,0.0148691852,-0.0762556419,-0.0222546291,-0.2142606378,-0.1536972523,0.0143280756,-0.1077734828,-0.0015295235,-0.2039879858,0.1700066328,-0.1347539425,-0.0269592293,0.0369750895,-0.1064085141,-0.0788145661,0.0193209704,0.0659332424,0.045115795,0.1139720455,0.0168910362,-0.0937288254,-0.1241409332,0.0332641937,0.0183337629,0.0733492821,-0.0580685139,0.0080335476,-0.1130072027,0.0321780071,-0.1236289069,0.1670583338,-0.00078302,0.0078702979,-0.1343023479,0.1150904372,0.15624623,0.0577855296,0.1700537652,0.0972383246,0.206068024,-0.0925233141,-0.0333869122,-0.0124386139,-0.0740147457,-0.1489365697,0.0503358208,0.0943857282,-0.0406228527,-0.0117839156,0.0086233709,-0.1650332958,0.2341479212,0.0085281609,-0.0751597732]],"hackathon_name":"IC Hack 17","index":213,"project_description":"Snapchat's code is extremely fun and popular, but tied to the platform, create your very own Snapchat-like code now.The main source of inspiration was enabling business, from small to large, to embed Snapchat Code-like inside their client apps. Since Snapchat's have their own proprietary platform, now everyone can have their own new fancy QR Codes at their fingertips.The API provides two main functionalities. One, it knows how to generate a unique codification for every client requesting it. Two, it knows how to take unfiltered images, for example like those taken from a real life camera, and extract the information from the image.The API is built on top of the Spring REST Framework. For the iOS app, we used standard libraries in order to showcase the functionality. What's more important is that all the picture processing is done directly on pixels, without using any 3rd party vision libraries.One of the main challenges was to get the geometry and the algorithms behind scanning the image, since real life camera data can be rotated on multiple axis. This part took more than 20 hours to get it right.We are extremely happy to be able to call the whole project a great achievement. We believe that not only is this a great implementation of something that is not open for everyone, but it also changes the future of QR Codes, the way we used to know them.IC Hack 17Calin Farcas\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 05:52 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ScanCode","project_tags":["java","linux","swift","ios"],"project_url":"https:\/\/devpost.com\/software\/scancode","keywords":"main,qr,challenges,client,codes,real,everyone,one,like,camera,life,libraries,knows,get,inspiration,great,since,image,snapchat,built"},{"level_0":214,"hack_vector":[[0.1457612664,-0.1094292402,-0.0079316869,0.0624884665,-0.0362851359,0.1518879682,0.1949491203,-0.0427385792,-0.0267113019,-0.02402509,0.0170126148,-0.0277215596,0.1499034464,-0.0702901259,0.0364036858,0.0317506827,0.2380456328,0.0152702872,0.0493933298,0.1214947924,-0.2223063707,0.0223625693,-0.0472302139,-0.0363691971,0.1265150458,-0.0209369417,-0.0535572208,-0.1770894378,-0.0036470834,-0.1076392233,0.0496093631,-0.1102818996,0.0489529818,-0.0706904978,-0.0115971137,-0.0106856944,0.1450775117,-0.1292051673,-0.0368093401,0.0305401273,0.0645631924,-0.137360096,-0.1700473875,-0.039987959,0.023877807,-0.0585901327,0.0335514359,-0.0540331081,-0.0280712247,-0.2060019672,-0.1025296226,0.0288383681,-0.109531343,-0.024199985,-0.1764099747,0.1547074169,-0.1435226649,-0.0050832001,0.0337716602,-0.0454700887,-0.0425081328,0.0180646945,0.0779725984,0.050709635,0.1319788396,-0.0086130584,-0.1086228639,-0.1479510665,0.0255286079,0.0215131417,0.069750309,-0.0421038829,-0.0049718819,-0.1308198869,-0.0149059873,-0.1047934517,0.1889304668,0.0233837944,0.0279804412,-0.152217254,0.1104486808,0.1666836739,0.0296061449,0.1611292362,0.1350559741,0.1951292902,-0.1212977096,-0.0120507888,-0.0136809628,-0.0974056125,-0.1300649345,0.0741180405,0.0731736049,-0.0035565819,0.0193604939,-0.033546973,-0.1365436167,0.2155942172,0.0440539531,-0.0667173788]],"hackathon_name":"IC Hack 17","index":214,"project_description":"Like a treasure hunt, but with friends and snaps!LogoThe inspiration for Snaploop came during a hackaton. We came to Imperial Hack 2017 with a plan to make a bot that deals with travel plans, but after spending 6 hours on it, it felt quite boring and we brainstormed some ideas.We wanted something fun, interesting, using Messenger and some cool APIs like image recognition, so Snaploop was born. (we didn't know the name until 2 a.m. though)Snaploop is very simple: just send a message to bot, and it randomly selects one of the players that are playing the game to take a photo. The photo gets analysed by our awesome 3rd party AI services, and shows some tags. If user is happy with those tags, they are sent to all other players, which have to snap something that matches the tags.The first user who gets the picture close enough gets to set the new challenge, and it repeats. Infinitely. Looping. Infinite snaps. Snaploop. You get the idea.It was built using the Microsoft bot framework which provides an awesome way to handle actual interaction between the actual bot code and Facebook Messenger platform. node.js was used for all of the code, with image recognition provided by ClarifAI.Main challenge was fine tuning the gameplay flow so it keep being fun, without getting players frustrated. Other than that, there were no significant issues.It is fun, works without any additional apps as 2 billion people already use Messenger, its quite snappy (pun intended) and has a viral potential. It was funny looking at my teammates running around at 2a.m. looking for fire extinguisher. ( lit)We learned that there is such this as too much pizza, that SQL Server is very hard to set up, and that a cool and minimum viable product can be built in a very small team in less than a day. Also, sleep is overrated.IPODomino's, those guys behind us, Justin Bieber, yoga activity, and inflatable sleeping pillowsIC Hack 17I pushed the team to do its best! And some initial coding, as well as testing.I tied the bits and bytes togetherI worked in coming up with the initial idea and testing of the app.I worked on testing.Ahmet Novali\u0107\n          posted an update\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 08:49 AM ESTStill waiting...Log in\n      or\n      sign up for Devpost\n      to join the conversation.Tomas Olarte\n          posted an update\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 08:17 AM ESTJust the best game on messenger, ever!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Ahmet Novali\u0107\n          posted an update\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 08:15 AM ESTSnaploop RC 1 is out! Judges, where art thou?Log in\n      or\n      sign up for Devpost\n      to join the conversation.Ahmet Novali\u0107\n          posted an update\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 07:46 AM ESTSnaploop is out of beta, judges come check it out!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Ahmet Novali\u0107\n          posted an update\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 07:28 AM ESTEverything is ready, come to our stand!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Ahmet Novali\u0107\n          posted an update\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 07:21 AM ESTStill waiting...Log in\n      or\n      sign up for Devpost\n      to join the conversation.Ahmet Novali\u0107\n          posted an update\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 07:19 AM ESTWe are waiting for the judges!Come quickly, we have fruit, snacks and even a KitKat!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Ahmet Novali\u0107\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 05:47 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Snaploop","project_tags":["node.js","botplatform","clarifai","facebook"],"project_url":"https:\/\/devpost.com\/software\/snaploop","keywords":"snaploop,bot,fun,tags,players,built,gets,messenger,code,set,challenge,came,recognition,image,something,photo,cool,using,awesome,quite"},{"level_0":215,"hack_vector":[[0.1806452125,-0.1505727321,-0.0202006921,0.073440209,-0.0197396744,0.1486715376,0.2023292929,-0.0407691672,-0.0201532599,-0.0129696615,-0.0029189393,-0.0312760286,0.1486144513,-0.0645420551,0.0355075635,0.0028774145,0.203083232,-0.0064896476,0.0506957397,0.1067173779,-0.2426114976,0.0327695534,-0.0347841345,-0.0041085775,0.1672780514,-0.0352255031,-0.0423049331,-0.1714281589,-0.0170904677,-0.0848848298,0.0674358755,-0.1174540594,0.0543088205,-0.0596307889,-0.0305305962,-0.0204654001,0.1304045767,-0.141133979,-0.0418969467,0.0148466406,0.0754472315,-0.1576726139,-0.1529724598,-0.0392760523,0.0243327469,-0.0352155715,0.0121754399,-0.0596199445,-0.024270365,-0.1967862248,-0.1236860007,0.0316467807,-0.1222131625,0.0122606,-0.1928770542,0.1406328678,-0.1567222625,-0.0126763945,0.0230578184,-0.0513403714,-0.0708955303,0.0297441725,0.0603666306,0.0231977776,0.1121250689,0.006427174,-0.1174487993,-0.125190571,0.0080801146,0.032722652,0.0659569055,-0.0497439802,0.0128175197,-0.128638491,-0.0068741804,-0.0982071608,0.1819065511,0.0155716706,0.0207843166,-0.1417337954,0.1060211435,0.1515111327,0.0165744964,0.1681769937,0.1297292262,0.2060046792,-0.1102435067,0.0072469572,-0.0038287793,-0.0953853726,-0.1078869551,0.0916949436,0.068938002,-0.0062926789,0.0260105561,-0.0300630536,-0.1284982711,0.2199098468,0.0422939546,-0.0436416455]],"hackathon_name":"IC Hack 17","index":215,"project_description":"Shooting game written in Rust, with trace amounts of Haskell and Lisp.Be safe and survive.Because monadic bind operator (>>=) in Haskell looks cool so I thought that it would be great to be a part of my game graphics.I started writing a shooting game a few weeks ago, from which I borrowed most codes of lambda-rush. The game is written in Rust, which is both highly efficient and fault-proof, ie. no time wasted solving segmentation faults. For the graphical part I used SFML which provided a nice layer of abstraction over openGL and such.No.IC Hack 17MislankaNova\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:09 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"lambda-rush","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/lambda-rush","keywords":"game,part,written,looks,lambda,ie,highly,haskell,great,graphics,graphical,faults,fault,else,efficient,cool,codes,borrowed,bind,anything"},{"level_0":216,"hack_vector":[[0.1405250728,-0.0919204876,-0.0216246434,0.0282369796,-0.0170195512,0.123298794,0.1962528527,-0.0206534136,-0.0064209946,-0.0380407386,0.0273924973,-0.0712085441,0.1343614906,-0.0620987825,0.0604444072,0.0002144885,0.2042221278,-0.003191882,0.0392295904,0.1404797286,-0.2438776493,0.013300214,-0.0481884852,-0.0156347658,0.0886605456,-0.0238251872,-0.0238928292,-0.1596102715,-0.0200400054,-0.12132743,0.0477219857,-0.1061185822,0.0190060027,-0.0743497834,0.0055654845,-0.0191396922,0.1085918397,-0.1550812125,-0.0745284706,-0.0136710936,0.0419750363,-0.1061424091,-0.1327433139,-0.0411545821,0.0643769354,-0.0877305344,0.0155735323,-0.0818543658,-0.0231834501,-0.2159491479,-0.1586145908,0.029790733,-0.1057210341,-0.0048324009,-0.2019741684,0.1754531562,-0.1173265204,-0.0485627837,0.041337274,-0.1283923239,-0.0766416043,0.0228859149,0.0768141896,0.0539957322,0.1062707007,0.0367855392,-0.1035105363,-0.120682247,0.0225246195,0.0219362807,0.0531708635,-0.0412801318,0.0169000942,-0.1104560718,0.0434537679,-0.1158515662,0.1687128693,0.0043606223,-0.0066013034,-0.1447657347,0.1055454388,0.1633559614,0.0450698808,0.1509067267,0.1019190848,0.2046170235,-0.0903841928,-0.0664463341,-0.0444663875,-0.059846472,-0.1462651938,0.0557811223,0.1055985615,-0.0435621738,-0.0343328118,0.0157515984,-0.1820533127,0.2407806814,-0.0083853146,-0.0802617222]],"hackathon_name":"IC Hack 17","index":216,"project_description":"Hungry and in a hurry? Yune a friend!As students and workers, we frequently don't have enough time to go out to eat somewhere far especially during the day. At the same time, we don't want to eat alone. So, our group decided to create an app that suggests optimal places to eat within the time limit you have with your friend that is nearby.As mentioned in the inspiration, we created an app that gives suggestions of places to eat to two friends who are willing to meet during their short break. You are allowed to input the time you have into the app, and the app will accordingly let you know which places are safe for you guys to attend and not be late to your next lecture\/meeting!We used APIs such as Google Maps and Firebase to provide data for our app. We also simplified the logging in process using the Facebook login API.We got git conflicts in the beginning because we were not familiar with the git pushing\/pulling process. Also, gathering the right APIs we need were bit of a challenge because some did not meet our expectations.We're proud that we got to connect all the APIs together and create the desired app.We used how to use APIs, Firebase, and git properly. We also learned that developing an application in 24 hours is a very different task.As of now, the application only works for two people so we could increase the number of users allowed. Also, since we are using Facebook friends as a source of connection, we could add a separate sign up button and possibly a security check so that some friends who you aren't close to don't see you on the map. In addition, transportation could be added such that the time calculated for distance isn't just done for walking. There are many implementations that can be made, and hopefully be used worldwide.IC Hack 17Yoon Kim\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:05 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ICHack17 - YUNE","project_tags":["java","google-maps","facebook-login-api","firebase","android"],"project_url":"https:\/\/devpost.com\/software\/ichack17-yune","keywords":"app,time,also,eat,apis,could,friends,git,used,places,using,learned,got,facebook,create,firebase,inspiration,process,proud,application"},{"level_0":217,"hack_vector":[[0.1357149482,-0.0890210345,-0.0357847288,0.029703714,-0.0142963743,0.1116381735,0.1980312616,-0.006908393,-0.0275554042,0.0007228256,0.0222286284,-0.0899188519,0.14974913,-0.0760120973,0.0826785564,-0.0026090061,0.1843874305,-0.0183254536,0.0354910754,0.1323132068,-0.2423186153,0.0278660133,-0.0502914637,-0.0085175866,0.1013329923,-0.0312926732,-0.0252476018,-0.1712621301,-0.027262114,-0.0848518163,0.0673154816,-0.1110775173,0.0176580753,-0.0862466395,-0.0143887131,-0.0036805666,0.099682197,-0.1469433308,-0.0700249374,-0.0153665189,0.0376850516,-0.1234414354,-0.1439606249,-0.0138006359,0.0790793449,-0.0550881624,0.0127109708,-0.0961438939,-0.0174640492,-0.2116711438,-0.1665151119,0.0047156294,-0.1041660905,0.0187093355,-0.2103248984,0.161787793,-0.1230592355,-0.0292498656,0.0332630686,-0.1280774325,-0.0737971291,0.0319371074,0.0773210898,0.0616106465,0.1126392707,0.0218201,-0.0833469927,-0.1137556583,0.0276978035,-0.0006286116,0.0567983948,-0.0466984399,0.0177816544,-0.1062466502,0.0527428053,-0.1268362552,0.1766689867,-0.0096824421,-0.0073725521,-0.1318202466,0.1313384324,0.1605292112,0.0738767236,0.1509889215,0.084566541,0.2138804495,-0.0748197287,-0.0482112169,-0.0168459713,-0.0680321231,-0.1503861099,0.0483017415,0.1072545573,-0.0466005653,-0.013802385,0.0179202054,-0.1775444597,0.2393948734,-0.0041715619,-0.0734717548]],"hackathon_name":"IC Hack 17","index":217,"project_description":"GlobeScope gives you the initial inspiration to explore the world.globescope logoPlatforms like Expedia and Skyscanner provide easy to use access to flights and package holidays, and they're great for finding good prices. What they lack is the interface to provide inspiration, and the ability to quickly explore different places around the world.GlobeScope is a web-app that allows the user to quickly find information about a destination, like flight prices, general description, photos, weather reports and so on. The app returns the data quickly, and the interface is responsive. This allows the user to efficiently explore different areas and find inspiration by hopping from place to place.The web-app is a primarily front end application. The site was built in HTML, CSS and JavaScript. All the APIs were called using jQuery in JavaScript. We needed a responsive and fluid globe with a map overlay, to do this we used and open source JavaScript library called Cesium, and accessed this with Node.JS.A large problem we had was synchronisation of API functions. In some functions, we needed to pass one or more API calls, into another API call. Simply writing line by line would not have given the AJAX requests enough time to return their responses. To allow time for this, we used a combination of chaining callback functions, and using 'promises' in JavaScript where appropriate. We also had to consider that sometimes, API requests do not come back successful, and we had to be ready to accept failed, or partial responses. The Expedia API, whilst containing very rich data, had a complex data structure which involved retrieving a 'LegID' from one area of the structure, and looking that ID up in another part.Being first years and in our first hackathon, we also found the division of tasks and merging of code an interesting challenge, sometimes we had performed unit testing that had passed, and later found that when the functions were chained together, they often had unexpected edge cases that we had to account for. This required good planning and prior agreements of what data and arguments we would be passing to each other.Only one of the members of our group had ever had experience with front end and web development. Within 2 days, the rest of us had learnt how to use HTML, CSS and JavaScript with jQuery and AJAX calls to make and process API requests, and render their results to the webpage. We were proud to produce a finished and smart product that works as designed.We learned about the challenges of delayed responses in AJAX requests, and how to handle them using chained callbacks and JavaScript promises. We also learned how to traverse JSON data structures to build objects and 'craft' the data that we required from them.GlobeScope could make use of far more APIs, in particular (if we were able to become reputable), using the TripAdvisor API, as it is only available to reviewed applicants or their API. This would enable us to not only return reviews of places, but find similar places to the destinations that the user is searching. We could also link the user's profile to Facebook or other social networks, and use big data algorithms to match their attributes to other user's search responses, and even more intelligently suggest places that the user might like to visit.If we had had a little more time, we would have incorporated package holidays from Expedia's API, as well as finding the most popular times of year to visit, to develop infographics of price changes throughout the year.IC Hack 17Rohan Pritchard\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:07 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"GlobeScope","project_tags":["javascript","jquery","node.js","html5","css","expedia","google-maps"],"project_url":"https:\/\/devpost.com\/software\/globescope","keywords":"api,data,javascript,user,use,also,using,responses,places,requests,would,functions,app,inspiration,time,quickly,like,expedia,find,learned"},{"level_0":218,"hack_vector":[[0.1382312477,-0.0690384656,-0.0331370085,0.0169449933,-0.0100054983,0.1248096973,0.2215468585,-0.0157717541,-0.0181885958,0.0070960708,0.0078628333,-0.0906355232,0.1179321334,-0.0699691921,0.0760034248,0.0141211087,0.2138344347,0.0025418098,0.0237100646,0.1258435845,-0.2332632691,0.0466675237,-0.0538046509,-0.0228757747,0.0931724682,-0.0138793904,-0.0217469055,-0.1935001463,-0.0291181467,-0.0810219496,0.0625421554,-0.1337532997,0.0365883671,-0.1167570725,-0.0247359835,-0.0067232801,0.1032067239,-0.1382289976,-0.0682066604,-0.0114080384,0.0121049425,-0.1507861912,-0.1415235549,-0.0329294056,0.0868575722,-0.0621023774,0.0058478783,-0.0858862996,-0.0350715145,-0.2055607438,-0.1440100521,-0.0043400279,-0.1009740531,0.0054973378,-0.1667432934,0.1560900062,-0.1275626421,-0.0268727578,0.0286781956,-0.1177225634,-0.0774253309,0.0215664078,0.0941908956,0.0463380963,0.1096516103,-0.002049831,-0.106265448,-0.1174884066,0.0557942204,0.0252611637,0.0667935237,-0.062970303,0.0281308535,-0.119452253,0.0384576432,-0.1545708627,0.1655955166,0.0041230833,0.0206922535,-0.1298610568,0.1416229606,0.153261587,0.0953461155,0.1583978832,0.0751488656,0.1869697124,-0.0874068812,-0.0319497921,-0.0014403424,-0.0867794603,-0.1629273146,0.0384880379,0.093613632,-0.0509794392,-0.0128616486,0.0286833271,-0.1612156481,0.2167562842,0.0001069573,-0.0839334056]],"hackathon_name":"IC Hack 17","index":218,"project_description":"Bringing positive news to the frontlineFlowchartNowadays, the headlines are filled with negativity. There is not a hint of hope in them. We decided to bring a change to headlines you encounter on a daily basis with this Alexa skill called Content.Google defines the word 'Content' as information made available by a website or other electronic medium.\nIt also defines it as a state of peaceful happiness. Our aim is to bring positive news articles forward and hence the name.Content provides positive headlines in various categories to you. It will also text you the link of the article if you are interested in further reading.We used the Bing Search API for Microsoft Azure Cognitive Services to obtain news headlines in 6 different categories (World News, Politics, Entertainment, Business, Sports and Technology). We then fed each headline into the Google Text Analytics API which assigned a sentiment score from -1 to 1 with -1 being highly negative and 1 being highly positive. When the user ask Alexa if there are any positive headlines in a particular category, a randomly selected rating with a sentiment score of 0.7 or higher will be read out by Alexa and if the user is interested in reading the news article, the user will receive a text from Alexa with the news article's link.The biggest challenge we faced was Google Text Analytics API assigning a positive rating to news headlines a human would consider highly negative. That is why the threshold of 0.7 was selected in order to ensure that highly positive headlines will be read outWe learnt use and deploy Azure and Google Cloud services. We learnt new programming languages like node.js and python overnight.Sentiment Analysis and Bing News Search API calls will converted into cron jobs so that they run daily. This allows us to keep the database up to dateIC Hack 17Worked on sentiment analysis and made API calls to obtain news headlines in the 'Politics' and 'World News' categoriesWorked on the Python scripts to populate the database with the latest headlines using the Bing Search APIWorked on the Python scripts to populate the database with the latest headlines using the Bing Search APIWorked on Amazon Dot - created the skills and back-end code in Node.js. Integrated Twilio.Rifad Lafir\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:01 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Content","project_tags":["azure","google-cloud","node.js","python","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/content","keywords":"news,headlines,positive,content,alexa,api,text,highly,google,sentiment,user,article,bring,interested,called,read,categories,defines,learnt,rating"},{"level_0":219,"hack_vector":[[0.1383144855,-0.144935295,-0.0051248632,0.0826924816,-0.0475725643,0.1542417109,0.1811058372,-0.0550144278,-0.0318011977,-0.032246314,0.0215839278,0.0236714985,0.1301284581,-0.0829810128,0.0211073346,0.0505398773,0.2647910416,0.0253022294,0.0543840118,0.0995741785,-0.2052736282,0.0154644707,-0.0393994227,-0.0663688555,0.1425673515,-0.0112655284,-0.0536119789,-0.1977671683,0.0160357039,-0.0804874897,0.0283613019,-0.12115556,0.0631895438,-0.0638047531,-0.0241738949,0.0029021886,0.1394510269,-0.116897516,-0.0202241614,0.074743785,0.0542624258,-0.1455203295,-0.1847754717,-0.0419256091,-0.0248392206,-0.0547934249,0.0400368869,-0.0186004974,-0.0323843509,-0.2015124112,-0.0603539236,0.0224489514,-0.0977224186,-0.0680757239,-0.1268117428,0.1500381529,-0.1409309953,0.0452324562,0.0015802131,0.0106967129,-0.0179497972,0.0283929333,0.060116142,0.0770753771,0.1408603638,-0.0302024502,-0.1274721771,-0.1580101699,0.0267799105,-0.0012099587,0.066840142,-0.0415599048,-0.0044905953,-0.14199844,-0.0483271219,-0.0894808397,0.1905639917,0.0249808542,0.0812915042,-0.1497354656,0.1367639154,0.1691303402,0.0178203136,0.1708709598,0.1406120658,0.1658164114,-0.1490357965,0.0323144794,-0.0025032868,-0.1068256423,-0.1051279753,0.0906227678,0.0527602024,0.011699887,0.0652742684,-0.0802304372,-0.0887793601,0.1580746472,0.0825402066,-0.0570879579]],"hackathon_name":"IC Hack 17","index":219,"project_description":"A website where to share university secrets! Access allowed only to students and academic peopleA website where to share university secret stories.Simple and easy to manage, written in NodeJShttps:\/\/github.com\/giuliojiang\/UniSecretsDeployed live at https:\/\/www.unisecrets.co.ukIC Hack 17Giulio Jiang\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:20 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"UniSecrets","project_tags":["javascript","html","python","shell","makefile","css","node.js","angular.js"],"project_url":"https:\/\/devpost.com\/software\/unisecrets","keywords":"unisecrets,https,www,nodejs,com,deployed,easy,github,giuliojiang,live,manage,secret,written,secrets,share,simple,stories,uk,uni,university"},{"level_0":220,"hack_vector":[[0.116610527,-0.0995811075,-0.0245262254,0.0258340519,-0.0196692087,0.13096039,0.2114140689,-0.0322194174,-0.0164682809,-0.0091595836,0.0299617238,-0.0592930168,0.1352625787,-0.0745571852,0.0570206605,0.0275515206,0.2405945361,0.0070696892,0.0346643738,0.1296897382,-0.2319714874,0.0511729345,-0.0375848897,-0.0385815129,0.1001844928,-0.0142008951,-0.0358350165,-0.1965572834,0.000675976,-0.0939469039,0.0593679361,-0.1347352266,0.0353778452,-0.0898799151,0.0007166776,-0.0138455993,0.1129646376,-0.1408556104,-0.0449840799,-0.0111179342,0.0229416639,-0.16681467,-0.1684299558,-0.0503849573,0.0587687567,-0.0459170602,0.0090569602,-0.0615176186,-0.0336551443,-0.200015679,-0.1347434223,0.0174962915,-0.0975453556,-0.0235296041,-0.1906380206,0.156959638,-0.1244281903,-0.0252275933,0.0450880304,-0.103293635,-0.0654249117,0.0239563361,0.092573598,0.0669931769,0.1005738005,0.0150277941,-0.0907626152,-0.132537514,0.0523982421,0.0245566908,0.0720919073,-0.0593892336,0.0414316542,-0.1105438173,0.0174736008,-0.1424876451,0.1475726962,-0.0004635932,0.0217301119,-0.1337737441,0.1358581185,0.1652137786,0.0686431453,0.1826257408,0.0838884562,0.1865597814,-0.1189199761,-0.0482937992,-0.0195361134,-0.0797785148,-0.1456257552,0.0463294648,0.0845231563,-0.0423101224,0.003307048,0.0127315763,-0.1580242217,0.1916172206,0.0043059499,-0.0840494186]],"hackathon_name":"IC Hack 17","index":220,"project_description":"Location based music with only two clicksLogoCurrently, venues and spaces must select and maintain playlists, which may or may not reflect what their guests want to hear.With Spot-on-the-Fly users can sync their Spotify accounts to a centrally hosted playlist in just two clicks, allowing music to reflect people in a space at any given time.We have developed a Web App using Socket.io, which allows user with two clicks to log into their Spotify accounts via our page.By then interfacing with the Spotify API, we extract data on their most played artists, and tracks. An algorithm then sorts these preferences into playlist, which are then pushed to Spotify running on a central device.Our algorithm provides people with the music they want to hear by running through top picks, and then also inserting mutual interests and semi-random selected songs by similar artists and in similar genres.At the moment our app is restrained to the Spotify API, whilst this allows rapid interfacing with one of the worlds largest databases of music, we would ultimately like to fuse data form numerous apps to build a comprehensive picture of peoples musical tastes in any location at any point in time.IC Hack 17I co-wrote the algorithm for sorting the users info in JavaScriptsam cooper\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:20 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Spot-on-the-Fly","project_tags":["javascript","spotify","socket.io"],"project_url":"https:\/\/devpost.com\/software\/spot-on-the-fly","keywords":"spotify,music,time,may,people,interfacing,playlist,hear,reflect,running,similar,data,clicks,accounts,want,algorithm,two,artists,allows,api"},{"level_0":221,"hack_vector":[[0.1422879994,-0.1054574549,-0.0274625178,0.0191043168,-0.0168343019,0.1094767675,0.2084919512,-0.0184704121,-0.0229150951,0.0109251644,0.0212285407,-0.0698165894,0.1411259025,-0.0679929778,0.0808946043,0.0057833632,0.2034100592,-0.0129208863,0.0404586904,0.1310076565,-0.2560461164,0.0405081101,-0.0410324298,-0.0166382231,0.099783808,-0.0287431572,-0.0239443798,-0.1780618727,-0.0074204197,-0.099291563,0.0632269681,-0.1249339134,0.0221314114,-0.0985387415,-0.0068904045,-0.0304536782,0.0985721946,-0.1546360403,-0.0730759725,-0.030378703,0.025292702,-0.1431614459,-0.1419549435,-0.0353464223,0.0738302767,-0.0467911139,0.0067388695,-0.0919713005,-0.0120892907,-0.1896129549,-0.1495057493,0.0066167484,-0.1142947823,0.0059601567,-0.2084663957,0.1643941402,-0.1278098673,-0.0265542641,0.0435303338,-0.1132604703,-0.0718711093,0.0265247133,0.0875851363,0.0585894324,0.0960523784,0.0201730747,-0.0982554629,-0.1189657673,0.0392124318,0.0235316623,0.0749408156,-0.0520475842,0.0293949246,-0.1155070215,0.0375640169,-0.1543800831,0.1568748951,0.0010623027,0.0063586072,-0.1236796826,0.1286959797,0.1529814005,0.0700754225,0.1609818339,0.0998812169,0.2013109326,-0.0903351307,-0.041127719,-0.0165022444,-0.063901037,-0.1396250129,0.0509506762,0.1074958593,-0.0489178449,-0.0100895101,0.018510256,-0.1677374393,0.207232058,-0.003784386,-0.0732633397]],"hackathon_name":"IC Hack 17","index":221,"project_description":"Shuffling songs on past preferences to better predict what you'd like to hear in the futuredata flow diagramWhilst people can have large collections of music they enjoy, these often can conflict with each other's mood if improperly ordered. \nFor example, a playlist containing both classical and hip hop music, of which the user enjoys both of, may not flow well in the wrong environment or mood. It may also be displeasing for the user to hear such a wide varation in songs.ContextualShuffle loads the entirety of your music library and learns associations between specific categories of music. Using these categories and other song-specific features such valence, tempo, and genre, similarities are identified between other songs in your library, without any intervention on your part. Similar songs are then queued (shuffled) such that the genre or other features of importance does not vary too much from song to song. \nBy monitoring the user's facial expressions, the efficacy of the queuing system is further adapted and improved each iteration.Starting with the initial aim of identifying similar songs, a large music dataset was required. We sought to acquire features and labels that were most relevant for every track in the dataset. We identified the following features as critical in classification of each track:An ensemble of a 1000 decision trees was trained with boosting to extract feature importance, corresponding to the above features. The features were then normalized between -1 and 1 to allow for an easier evaluation. Using the resulting features we calculated, the cross-correlation between different songs was calclated and an incrementally built list of succeedingly similar songs was continually adapted using positive and negative emotions determined by Microsoft's Cognitive API service.Following this, when a user plays a given song from their library, the most similar songs to each corresponding song are played successivelly. This means the first song's nearest neighbour is played. The neighbour then becomes the root from which calculations are considered, and it's nearest neighbour is played and so on. This provides a good balance of variation and consistency between tracks.OpenCV has posed multiple difficulties due to version compatibility and limited support for python 2.7. Even after installing it for  Python3 a large amount of time was needed for everythin to work as intended. \nThe Spotify API download rate has posed a significant problem due to the large amount of training data that was required by our algorithms.\nThe Azure API examples could improve in terms of documentation.\nRunning Webcams through virtual machines was nearly impossible, so we had to resort to communicating to external mobile devices.\nLabelling of genres, and appropriate mining of data was difficult to achieve due to \nCommunication between different technologies was difficult and rather consuming.We believe this product is workable, usable, and performs in-line with our initial aims and goals\nThe large amount of different technologies into the product has given us a brief but enjoyable experience with each of them.\nGenerating and creating workable training and testing datasets given the large amonut of variables in a given track.Avoid OpenCV if possible.\nLearning about different APIs and libraries in order to achieve a niche task.\nKeep your front and back end separated if possible.We'd love to reach out to the team at Spotify and discuss how our findings could help them improve their technologies and how additional features in their APIs could assist developersIC Hack 17I handled the Microsoft azure API, high level data mining and genre classificationDaniel Morris\n          posted an update\n\n          \n            \u2014\n            \n\n                Feb 06, 2017 06:18 AM ESTWinners ICHACK 2017!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Simion Putina\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:22 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ContextualShuffle","project_tags":["python","machine-learning","spotify","azure","flask","android"],"project_url":"https:\/\/devpost.com\/software\/contextualshuffle","keywords":"features,songs,song,large,music,user,different,given,similar,played,due,could,library,technologies,track,neighbour,using,genre,api,amount"},{"level_0":222,"hack_vector":[[0.1432881504,-0.0975669846,-0.0321242698,0.0456778668,-0.0168909654,0.1283569932,0.1961340159,-0.0126860989,-0.0359074324,-0.0054236418,0.0188109167,-0.0799847394,0.1480634511,-0.0774158537,0.0659996644,0.0033708434,0.2057980001,-0.0154768089,0.0399827063,0.1243916452,-0.2465505004,0.0333845131,-0.0402763225,-0.0099263499,0.111107111,-0.0314212106,-0.0391114391,-0.1716418862,-0.0175856445,-0.0922529623,0.0694651604,-0.1176228896,0.0266627129,-0.0765578449,-0.0151159987,-0.0175876096,0.1218097135,-0.1446908563,-0.0591407493,-0.0110683609,0.0511551201,-0.1302260906,-0.1486762464,-0.0237631612,0.0697901919,-0.0451331809,0.0172984526,-0.0800916478,-0.0092110997,-0.2044554502,-0.1441313177,0.0178059768,-0.1069424823,0.0215600003,-0.2127027065,0.1557418108,-0.1308578253,-0.0260596722,0.0388009138,-0.1125537455,-0.0693623871,0.0260602459,0.0826233476,0.0554053634,0.1154137254,0.0183810107,-0.0844258144,-0.1232406721,0.0235463865,0.0185001381,0.0693984032,-0.041584298,0.0199904703,-0.1163972542,0.0363285355,-0.1306586415,0.1713898331,-0.0008065482,0.0009879308,-0.1287747324,0.1214649379,0.1621356159,0.053564027,0.163379848,0.1039399579,0.1968034506,-0.0975086614,-0.0475734323,-0.0275697485,-0.0818557665,-0.1451877356,0.0581608079,0.0933144465,-0.0390081331,0.0019872671,0.0159395318,-0.1596708298,0.2357210517,0.0181265734,-0.0668167323]],"hackathon_name":"IC Hack 17","index":222,"project_description":"How does the world really feel? We show the world as a heat map, using Twitter to analyze current emotions.This is an application, currently for Android, that allows the user to type in a keyword. Upon submission, the user is brought to a map of the world, which is appropriately shaded for each region based on the sentiments of the tweets sent from that area. All tweets are analyzed with a machine learning algorithm that gives the tweets a coefficient of positivity and negativity, which we use to determine the shade of the specific region. Sample tweets hover around the regions, too, giving the user a very immersive and cool experience.The front-end team (Julian Chow, Rishi Rabheru, Ashley See, and James Tavernor) used Java to code the user interface. The back-end team (Anthony Alridge, Nicholas Li, and Shravan Nageswaran) used Python to import and customize a machine learning algorithm to analyze the sentiment of the tweets, retrieve tweets from many regions, and combine these two to create a map that linked coordinates of the world to the appropriate colour of the map representation. Ultimately, we connected these programs well and made the full application.The API would only provide us with 2500 tweets per minute (and we wanted a lot of data). Because of this, we limited the ICHACK version of the app to major cities in the United Kingdom and Ireland, but we look to continue developing the app to make it a worldwide representation.We are very proud of optimizing the machine learning algorithm to process each tweet quickly. Additionally, implementing and manipulating a map in Android is quite challenging, and our front-end team did a phenomenal job of doing that. Plus, all of our code is readable, and the app, itself, is simple for users to pick up and enjoy!We learned that processing data poses its challenges - especially when we want to analyze millions of tweets! Additionally, from ICHACK, we taught ourselves how to combine front-end and back-end work to accomplish the endeavor of a comprehensive application. It was a very enjoyable, hard-working, and rewarding experience.Heatwave is continuing to be improved. Once we can process more data, we will make Heatwave assess all cities around the world. Additionally, we look to continue improving the graphics, adding a blend method that will appropriately blend two colours in adjacent regions to make the entire map look more cohesive. All in all, we wanted to create an app that is unique, insightful, and - quite frankly - fun, and that is what we did! But we are not done yet.IC Hack 17Anthony-Alridge\n          posted an update\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:26 AM ESTHey guys, hope you enjoy Heatwave! It's really an incredible application!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Anthony-Alridge\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:20 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Heatwave","project_tags":["java","python","django","google-maps","nltk"],"project_url":"https:\/\/devpost.com\/software\/heatwave-qnmx4g","keywords":"tweets,world,end,app,map,team,user,regions,create,around,machine,make,application,learning,front,algorithm,data,additionally,look,cities"},{"level_0":223,"hack_vector":[[0.1420044005,-0.098850742,-0.0389753468,0.0419723876,-0.0239078104,0.1243404672,0.1925507337,-0.0126893865,-0.0227031577,-0.0156193059,0.0112781776,-0.0624193847,0.1428891122,-0.0618473627,0.0652011111,0.0153486701,0.1980125755,0.0003044651,0.0397844426,0.1394078881,-0.2445967495,0.0186201669,-0.0367190912,-0.0120411031,0.1087179184,-0.0195515789,-0.0336341411,-0.1684795022,-0.0180616844,-0.0922332257,0.0591167472,-0.1103926823,0.0159853417,-0.0768913776,-0.0069434848,-0.015652094,0.1114151031,-0.1468611062,-0.0678025931,-0.0082148733,0.0482536107,-0.1307801753,-0.1488396972,-0.0327711292,0.0627520084,-0.0601971075,0.0091822948,-0.083652325,-0.0136542479,-0.2180038244,-0.1443925798,0.0173025802,-0.1076888964,-0.0087423092,-0.2092995793,0.1718293279,-0.1269146502,-0.0212847609,0.0426827744,-0.1057858616,-0.0703372806,0.0347515307,0.0692041591,0.0557939485,0.1116809323,0.0236005262,-0.0982818604,-0.1281697452,0.0296913479,0.0066936179,0.0664122105,-0.0399446115,0.0145185217,-0.116524905,0.0240862388,-0.117441453,0.1746722162,-0.0140182823,0.0016510006,-0.1404675245,0.1093506515,0.1612484604,0.0580257215,0.1632034481,0.103538841,0.2122617364,-0.0868674293,-0.0379997529,-0.0210030247,-0.0682293549,-0.1430075914,0.0639121309,0.0996291414,-0.0429613627,-0.0063579124,0.0129800141,-0.169257924,0.2437160462,0.0053381333,-0.0700332075]],"hackathon_name":"IC Hack 17","index":223,"project_description":"It's an application designed to help blind people by recognizing the things around them and describing themWe wanted to create something for people with accessibilities. Blind people can't really know the world around them, so they use their other senses to form an image: hear, touch. What we tried to build is an application that will describe what's around them, so they can get a clearer image of the real world.Accesses their phone's camera and uses tensorflow to recognize specific objects in the picture and form descriptive sentences about them, which then are spoken by the app.Using a tensorflow algorithm and Microsoft Azure for storage and doing the complex computations.The training part of the algorithm takes very long, as it is a very complex algorithm, so we had to scale it down, and this resulted in less accurate results.We managed to fix our bugs and make it work, even given the fact that we had a limited amount of time. We lost about 5 hours while the algorithm was creating settings and training, but we managed to catch up after and finalise the project. With this, we could create a much clearer image of the world for blind people.Properly training of the algorithm and sending feedback in real time, instead of just sending separate picturesIC Hack 17Tania Copocean\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 05:12 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Eye of Horus","project_tags":["ios","node.js","azure","swift","python","bash","linux"],"project_url":"https:\/\/devpost.com\/software\/eye-of-horus","keywords":"algorithm,world,image,people,training,blind,managed,form,create,real,clearer,sending,complex,tensorflow,time,around,hours,horus,hear,given"},{"level_0":224,"hack_vector":[[0.1332265139,-0.0966880992,-0.0361805037,0.064993754,-0.0226758197,0.1349412054,0.1939899623,-0.0320990086,-0.0266680438,-0.0179635361,0.0126755144,-0.0658336952,0.157451421,-0.0734261647,0.0674546808,-0.0233133547,0.196056053,-0.0123441955,0.0506334715,0.1269637644,-0.2451855242,0.03084266,-0.0379192345,0.0018568649,0.1141437218,-0.0245641284,-0.0360770188,-0.1647813618,-0.0345192216,-0.0855464265,0.0740866661,-0.1193794161,0.0229472816,-0.063830778,-0.0233740471,-0.0220410656,0.1227489933,-0.1384316981,-0.0610048808,-0.0058149714,0.0660593435,-0.1201363057,-0.1451821327,-0.0209232885,0.0647079274,-0.0420272052,0.0121475095,-0.0915237516,-0.0219096038,-0.2146980464,-0.1488712281,0.0210397765,-0.1000687405,0.0239230059,-0.2205847651,0.1539472938,-0.1321195066,-0.029021414,0.0311222058,-0.1066245139,-0.0739006326,0.0225256663,0.0810307637,0.032880757,0.1119373366,0.0318967141,-0.0752218664,-0.1212449148,0.023231538,0.0250282884,0.0586637221,-0.0399528481,0.0228802487,-0.1163209677,0.0350550227,-0.1053273305,0.1836481988,0.0011737103,-0.0076320651,-0.1347504109,0.1179871932,0.1544471532,0.0565461032,0.1602428555,0.1035946906,0.2147528231,-0.0802356452,-0.0550790317,-0.0247800648,-0.0651193559,-0.1463885754,0.0576409437,0.1034669131,-0.0394272506,-0.009144661,0.0126121631,-0.1600852162,0.2465559691,0.0084963329,-0.0653769746]],"hackathon_name":"IC Hack 17","index":224,"project_description":"A smarter pillow. A better night's rest for a better life.The pressure sensor (Bigger one) and a custom casing for the raspberry pi.What does an Imperial student desire more than a good night's sleep? Sadly, nothing really. With members of this group struggling to wake up and struggling to sleep, what better way to tackle this issue than stick a circuit in your pillow.A raspberry pi running a server is connected to a pressure sensors sitting below a pillow. A mobile app has been developed that can communicate with this server and more.We split the task evenly and dove head first into the work. Sleep is for the feeble.\nWe used hardware labs and the laser cutters to design pressure sensors. We had to create and test our bluetooth server on the raspberry pi. We had to try to get a smart phone to talk to server and integrate it into the mobile app. After finalising how the server and client communicate, we tried to build some dynamic applications on top of this.All of the group members had to start from scratch with regards to server setup, bluetooth communications, Android development and hardware based pressure sensors.We initially also planned to integrate this application with Android's base system alarm clock. However this was extremely challenging and API was kind of confusing too. The process itself is pretty simple, as behaviours for sleeping on the pillow has been defined. We were planning to implement some restrictions on a person sleeping on a pillow and turning of an alarm, or a person sleeping on a pillow and snoozing one too many times. Unfortunately time was a massive constraint.Several possible future integration.\nHighly reliable hand made sensors.\nReal time view of the 8 pressure points in the pillow.We learned how to setup a bluetooth server with sockets and how to connect a phone to it.\nWe learnt the basics of mobile development.\nWe got to play around with laser cutters.To have a webserver to backup logs and perform long term analytics on sleep patterns. Better integration ofIC Hack 17Riku Murai\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:19 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Internet of Pillows","project_tags":["android-studio","python","raspberry-pi","java"],"project_url":"https:\/\/devpost.com\/software\/internet-of-pillows","keywords":"server,pillow,sleep,sensors,pressure,bluetooth,mobile,sleeping,communicate,setup,raspberry,development,cutters,phone,person,group,hardware,members,learned,laser"},{"level_0":225,"hack_vector":[[0.1431444138,-0.0814832076,-0.0314156152,0.0388617106,-0.0180934966,0.1208441332,0.194144085,-0.0086338399,-0.0194925126,-0.027474165,0.0034992213,-0.0757129341,0.1378930062,-0.0665244684,0.0646614358,-0.0102577433,0.1972478479,-0.0092565725,0.0392551795,0.1432270408,-0.2426842749,0.0076679876,-0.0425651893,0.0012241309,0.1132629961,-0.021968497,-0.0247636586,-0.1580965817,-0.0315452404,-0.0951274931,0.0517179035,-0.1064310074,0.0219370406,-0.0772340521,-0.023613302,-0.0188791901,0.1130758673,-0.1444806755,-0.0637493581,0.0015358602,0.0481311679,-0.1064005643,-0.1368843168,-0.0285270475,0.0851266012,-0.0817701593,0.0143939285,-0.0889030993,-0.0267808884,-0.2288850099,-0.1503397822,0.0063110888,-0.103279233,0.0169933345,-0.1975904554,0.1762162149,-0.124050729,-0.0426731147,0.032861039,-0.1199712902,-0.0774266422,0.0134415729,0.0731776431,0.0291772354,0.1179380119,0.0195367709,-0.0974710509,-0.1235884726,0.0299553219,0.023804171,0.0574258938,-0.0477736965,-0.0016697106,-0.1151686311,0.0359956697,-0.1149082705,0.1840577424,0.0017598359,-0.0003357952,-0.1406991929,0.1122041196,0.1558115631,0.0549439974,0.1513047516,0.0947102308,0.2127617449,-0.0855641738,-0.0421709456,-0.0267282929,-0.0731614903,-0.1628883779,0.0541527458,0.1060168818,-0.0420179144,-0.0296546537,0.014169205,-0.1664647162,0.2453188151,0.0121000158,-0.069162339]],"hackathon_name":"IC Hack 17","index":225,"project_description":"Summon Alexa and she will recite the tongue twister of the day!There are already a lot of 'Word of the Day', 'Fact of the Day' type of skills for Alexa. However, we thought it would be fun to implement it for tongue twisters. These are phrases usually hard to pronounce to humans, but not to Alexa. We believe this is a fun way for users to learn tongue twisters while hearing them more clearly.Every day, Alexa will have a new tongue twister for you to practice on (chosen from a pre-made database). Not only can you hear Alexa pronounce them properly (also a bit robotically), but you can also practice by readingWe used Javascript to create a lambda function for the Alexa skill. The database of tongue twisters we got it from \"http:\/\/www.uebersetzung.at\/twister\/en.htm\". Using the Alexa API we built the Alexa skill.It took us 8 hours for the server to say \"Hello World\" and a lot longer for the Echo Dot to say it. We had to learn how lambda functions work for the AWS Lambda. Alexa took a while to recognise our commands to the skill.Alexa managed to pronounce the tongue twisters clearly. The whole program runs, despite the little challenges at the beginning.We got to use and experiment with the Echo Dot for the first time. We realised that you should not use reserved or common words for the invocation name for a skill as Alexa will not recognise the skill properly. Most of all, we learned to use the Amazon Web Services, the Alexa API, as well as Javascript.In the future we would like to increase the database for the tongue twisters. This would in turn allow for different levels of difficulty. One even further step would be to implement this feature in other languages too.IC Hack 17Jixi Shan\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 05:59 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Alexa Daily Tongue Twister","project_tags":["javascript","alexa"],"project_url":"https:\/\/devpost.com\/software\/daily-tongue-twister","keywords":"alexa,tongue,skill,twisters,would,database,day,twister,use,pronounce,lambda,practice,fun,properly,recognise,got,echo,implement,say,lot"},{"level_0":226,"hack_vector":[[0.1646584719,-0.1568861753,-0.0006841231,0.0903070495,-0.0391040146,0.154711172,0.171783641,-0.0488321632,-0.0200816002,-0.0322091244,-0.0001981639,0.0092365397,0.1383898556,-0.0758466944,0.0178683065,0.05338962,0.2457227707,0.0201284774,0.0608433411,0.0935222059,-0.2223335803,0.0113886874,-0.0462650992,-0.0524354875,0.1521325856,-0.0273536909,-0.0605127737,-0.1807577312,0.0093175806,-0.0898457095,0.0310437139,-0.1032531485,0.0699009895,-0.0646061301,-0.0377388708,-0.0047370931,0.1382243037,-0.1332271844,-0.0241722576,0.0730753765,0.067528598,-0.136905998,-0.1763340831,-0.0335436724,-0.0171743985,-0.0538143367,0.0402186587,-0.0377289727,-0.0256897602,-0.1979635954,-0.0779189691,0.0356030986,-0.1114698648,-0.0465264432,-0.1339933574,0.1523876637,-0.143372789,0.0302710142,0.0064047645,0.0105052069,-0.0355303548,0.0284678973,0.0607376434,0.0609908812,0.1393614113,-0.0291717369,-0.136632368,-0.155166477,0.0040354789,0.0158791393,0.0722334757,-0.040742334,-0.0161077585,-0.1506710947,-0.0470230691,-0.0730184019,0.2092458755,0.0325614177,0.0603379831,-0.1503101438,0.1214603707,0.1600050926,0.0062858406,0.1455089301,0.1454922855,0.1855274588,-0.1251334101,0.045811642,0.0022857899,-0.1012449637,-0.0914800763,0.0999189615,0.0440071933,0.0146731539,0.0547205545,-0.0782292336,-0.0886617973,0.1811694205,0.0808654055,-0.0510625318]],"hackathon_name":"IC Hack 17","index":226,"project_description":"Rube Goldberg in software and hardwareRube Goldberg Machines on YouTubeNothing useful really, it displays a secret message after running a number of pointless (but interesting), interconnected elements.Not to do too muchMore technologies and hardwareIC Hack 17Elliot Greenwood\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:28 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Gold","project_tags":["react","golang","bash","ruby","ruby-on-rails","python","arduino","c","c++","raspberry-pi"],"project_url":"https:\/\/devpost.com\/software\/gold-wjqsah","keywords":null},{"level_0":227,"hack_vector":[[0.1561867893,-0.1366769522,-0.0299903266,0.0645393357,-0.0061575361,0.1425055861,0.1894785464,-0.0385151431,-0.0326670185,-0.0216395129,0.0034610156,-0.0573000163,0.1581726074,-0.0614679903,0.0510235839,-0.0110593103,0.1994669735,-0.0188700501,0.0435212106,0.1188420057,-0.2442980707,0.0340075009,-0.0284309518,0.0048069037,0.147794798,-0.0386014245,-0.031457901,-0.1758515239,-0.0442096703,-0.0809754506,0.0915496573,-0.1223034859,0.0406795368,-0.0621456057,-0.0356151834,-0.0347920358,0.1195999756,-0.13978073,-0.0434102602,-0.0031089489,0.0806646571,-0.1342973411,-0.1508537233,-0.0275346879,0.0491798967,-0.0338308029,0.0113824476,-0.0730954632,-0.0312416479,-0.2163345069,-0.1381867379,0.0255032051,-0.1035649776,0.0171005838,-0.208624512,0.1495181173,-0.1421016455,-0.0288366433,0.0258567296,-0.0830398127,-0.0732220188,0.0233560149,0.0563136823,0.0133233517,0.1150728166,0.0191244744,-0.0967282653,-0.1198929921,0.012043572,0.0263959132,0.0645402744,-0.04381641,0.0188410133,-0.1239840761,0.0065278392,-0.08836364,0.1914782971,-0.0030325351,0.0074572405,-0.1261983961,0.1106448844,0.1477549076,0.0275480263,0.1672967076,0.1174324676,0.2134167999,-0.0920667574,-0.0184025932,-0.0181713216,-0.0713961273,-0.1237508878,0.0797804445,0.0796328709,-0.02995071,-0.0097358366,-0.011762403,-0.1475188434,0.2416969836,0.0269826129,-0.0529186763]],"hackathon_name":"IC Hack 17","index":227,"project_description":"A retro 2D platformer game: reach the terminal and hack it!Ingame2Ingame1Ingame3I enjoy old school platformer games and wanted to make one, while learning an open source game engine (Godot), having never used it before.A simple one level prototype game, but with all the fun mechanics, playable with a SNES controller.The little guy really wants to hack the terminal, but a deadly laser is in the way, not to mention bottomless pits! Jump over the pits and teleport past the laser to hack the terminal to complete the level. A bonus collectible is placed at the end of a treacherous jump.I drew all the art assets, then used official and unofficial Godot tutorials and documentation to construct and code the game in GDScript.Godot uses it's own scripting language, GDScript, which I had to learn. Also many of the tutorials are deprecated, so a lot had to be done with trial and error.It works and is fun!How to create a game with the Godot engine.More levels and mechanics!IC Hack 17I drew all the art assets, designed the level, and coded all of the components.James Lane\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:27 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Retrohack","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/retrohack","keywords":null},{"level_0":228,"hack_vector":[[0.137640059,-0.1040837839,-0.0393411517,0.0284840558,-0.0150601575,0.1215967983,0.1942175627,-0.0156337675,-0.0007857957,-0.0345558003,0.0141679794,-0.0781479478,0.1397962868,-0.0614744164,0.0702145621,-0.0100673446,0.1974766552,-0.0099445013,0.0389572419,0.1301508248,-0.2473802418,0.0294729918,-0.0323546156,-0.0092908312,0.0859041736,-0.0328256786,-0.0162741356,-0.1573611647,-0.0371116176,-0.099653624,0.060476236,-0.1130821705,0.0228698533,-0.0794193745,-0.0091557531,-0.0357202366,0.1027312726,-0.1541156769,-0.0762256831,-0.0265280269,0.0413504429,-0.114250645,-0.1323390752,-0.0361335985,0.085284166,-0.0671135783,0.0177424047,-0.0896833166,-0.0335867479,-0.2122910917,-0.1715506315,0.0099732429,-0.1019360051,-0.0044296007,-0.2154411077,0.1599181592,-0.1065087914,-0.0591169111,0.0578659587,-0.1233154535,-0.0869880989,0.0169719625,0.0771605,0.0256749727,0.0892609805,0.0388359912,-0.0919898376,-0.1100935936,0.0287590902,0.0293656774,0.0662444532,-0.0528110377,0.0229042433,-0.1141569987,0.0346997902,-0.1307888925,0.1695435494,0.0010624951,-0.010662538,-0.1347094774,0.1100961491,0.1609150916,0.0365598239,0.1675854027,0.089618139,0.2046644688,-0.0819469616,-0.0502062961,-0.0328556783,-0.0653685108,-0.1481727213,0.0534674749,0.0982116386,-0.0501867533,-0.0276275035,0.0172247998,-0.1794002056,0.2492407262,-0.0092727989,-0.0784564912]],"hackathon_name":"IC Hack 17","index":228,"project_description":"When you're drinking, it's really difficult to judge what's one drink too many, machine learning can fix this.Two days ago was Friday, and it was circleline, for those that don't know it's a yearly tradition when students go round the tube line, and drink half a pint at every stop. Now I fully intended to leave early, only drink 2 pints, but somehow, not for lack of trying ended up worse for wear, hanging in a lecture theatre, about to start a 36 hour hackathon (again). I'm not alone in this. It is so easy to fool yourself,  but data doesn't lie, machine learning can be used in an app to tell you whether you should go home.\"Should I go home?\" is a humourous web app where people can go on and answer a sequence of 6 tick box questions before being told whether they should a) continue drinking full steam ahead, b)have one more drink, c) go home, what are you even doing out in the first place. The results are calculated using a cognitive service regression algorithm, based off peoples past drinking experiences and how worth it they were.I think it has real application for the student market, excessive alcohol consumption is a problem, but no one wants to be controlled. Most PSAs are unappealing, and struggle to be relateable plus it's really hard to judge your drunkness levels even based on your own past experiences. \"Should I go home?\" removes these issues, giving a reliable, impartial source, informed by your peers past actions and has a fun, simple user interface.The web app was built using a combination of HTML, CSS, handlebars and node. As users would answer 6, multiple choice button questions. Its designed to be quick, simple and humourous to appeal to its target drunk, student audience. Once their 6 responses had been recorded, this data could be sent to the azure api, and in response the app would receive a \"worthit\" score for the person to keep drinking.To start with users are asked what kind of drinker are they: light weight (penguin, cos feathers are light), heavy weight (bears, because bears are bare heavy) and average (\"pengbears a cross between the two.\")I posted a survey to reddit where I asked people to describe their recent drinking experiences. They answered the same 6 questions as on the website, plus one evaluation question of how worth it the night was (used as the label score), These were used to train the algorithm, the higher the worth it score, the more likely my web app recommended to continue drinking.The node.js was more rudimentary than I would have liked, I could not solve a bug that prevented browsers registering modified XHR, so the url could not be updated on the website. It was very frustrating as it was a matter of configuration of static files rather than something directly related to programming. This prevents multiple users using the website at once, or me exploring session data etc.I managed to quickly get accurate outputs for a trained machine learning algorithm to use in the app, I really enjoyed developing the graphics and my \"pengbear\" is baller.I learned how to develop a node.js application with good structure between dynamic and static content. Also how to call azure apis, and use their cognitive services.In the future I would want to integrate it with the mobile platform, so that accelerometers could detect whether someone was ignoring the apps advice, and based on that decide whether to help the student in the morning with \"how to deal with your hangover\" advice. Also instead of training the API on such a small dataset, users would have the option to input their own experiences to add to the dataset or validate how effective the apps recommendations had been the morning after.\nWith a larger dataset, the number of possible questions could be far greater, including maths problems to evaluate someones current cognitive skills, and a small subset of these could be chosen, to keep the app interesting.IC Hack 17rebecca simpson\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:29 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Should I go home?","project_tags":["node.js","handlebars.js","html5","css3","azure","machine-learning"],"project_url":"https:\/\/devpost.com\/software\/should-i-go-home","keywords":"app,go,could,home,would,drinking,experiences,whether,users,questions,dataset,data,algorithm,one,score,cognitive,student,node,based,used"},{"level_0":229,"hack_vector":[[0.1351201981,-0.1284411401,-0.0167603567,0.0676512644,-0.0436631255,0.1361909211,0.189087376,-0.0061048614,-0.0341740698,-0.0128385732,0.0070724557,-0.0324930884,0.1475926042,-0.0700787157,0.0619309396,0.0401209332,0.2399099469,0.0311157685,0.037353538,0.1016611233,-0.2279691547,0.0162073839,-0.0518424548,-0.0512387604,0.1293015927,-0.0229107682,-0.0551072098,-0.1990757734,0.0002372876,-0.0757876635,0.0578550175,-0.1161284,0.034015473,-0.0771708414,-0.0273285508,0.0112978639,0.1210696399,-0.1295369864,-0.0396504886,0.0440641344,0.0373988375,-0.1542243809,-0.1783840656,-0.0280376449,0.0143893678,-0.0612038597,0.034516111,-0.0507483333,-0.0228458922,-0.2065217495,-0.091267772,0.0069121853,-0.0955423191,-0.0397591367,-0.1575980633,0.1736537069,-0.1398454756,0.0261610467,0.0171580836,-0.0404886939,-0.0577364862,0.0446088985,0.0606844574,0.0750651583,0.1316107959,-0.0117574651,-0.1095218211,-0.158163026,0.0294131823,-0.0080795549,0.0643794015,-0.0440600365,0.0103163561,-0.132330671,-0.021880921,-0.1097218394,0.1938946992,0.0096804686,0.0592194796,-0.1387358159,0.1336416602,0.1742339283,0.0495556183,0.146272853,0.1228006929,0.1911865771,-0.1228170544,0.0141637567,-0.0016306803,-0.1075571403,-0.1172972471,0.0856202617,0.0518525615,-0.0192500073,0.0454677269,-0.0340738855,-0.1267671138,0.2077354044,0.0517193899,-0.0697015524]],"hackathon_name":"IC Hack 17","index":229,"project_description":"A choropleth to show the emotion of each countryWe wanted to do some data mining.We get tweets from different countries and run a sentiment analysis on it to give a emotion to each country.\nWe then use this to create a choropleth to visualise our findingsAdd more emotions and more countries.IC Hack 17Anirudh Pillai\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:29 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"What the world feels like","project_tags":["flask","d3.js","javascript","python","twitter"],"project_url":"https:\/\/devpost.com\/software\/what-the-world-feels-like","keywords":"countries,world,findings,analysis,choropleth,country,create,data,different,emotion,emotions,feels,get,wanted,give,inspiration,like,mining,next,run"},{"level_0":230,"hack_vector":[[0.1415133327,-0.1128826663,-0.0277254302,0.045408763,-0.0226342734,0.145594582,0.1974053383,-0.0305005424,-0.008872428,-0.0162102319,-0.0006348924,-0.0571327358,0.1263556927,-0.0602545217,0.0586255938,0.0078171808,0.2240967005,0.0174451694,0.0407611355,0.1167730168,-0.2456530035,0.0350853279,-0.0399970971,-0.0230107978,0.1263251156,-0.0048395428,-0.0349556766,-0.1848709434,-0.0182742625,-0.1037865728,0.0595620796,-0.1453215927,0.0423978306,-0.0981374234,-0.0088697989,-0.0342989378,0.114302896,-0.1474713981,-0.0641817302,-0.0064569637,0.0391370095,-0.1609457433,-0.1530685723,-0.0491859391,0.0421001203,-0.0476163551,0.0038335668,-0.0635572299,-0.0425060056,-0.1968791038,-0.1267945766,0.0190180372,-0.0985945761,-0.0182180014,-0.1866504848,0.159388572,-0.1292205453,-0.0149557525,0.0306976214,-0.0822731405,-0.0710384399,0.0194355287,0.0757781267,0.0369567387,0.1022224054,0.0182858706,-0.1205856502,-0.1369517148,0.0427264906,0.0464020967,0.0836087167,-0.0611966997,0.0386853591,-0.1314262152,0.0105293142,-0.1284395754,0.1626284122,0.0195725374,0.0292166937,-0.1326879561,0.1141813397,0.1527853012,0.0706378669,0.171371758,0.1026841551,0.1915905029,-0.1024415791,-0.0238982551,-0.0099675925,-0.0755490214,-0.1215616912,0.061461132,0.0916611776,-0.0476973876,0.0103598498,0.0010592791,-0.1466416717,0.2259444594,0.0048189694,-0.0752728209]],"hackathon_name":"IC Hack 17","index":230,"project_description":"Take a ride on an emotional rollercoaster.Emotional Rollercoaster was inspired by puns, stress and a desire to take advantage of Microsoft Cognitive Services.Emotional Rollercoaster follows a similar concept to Guitar Hero or Dance Dance Revolution but with a twist: Match your emotions with the given picture emotion to move your car forward. The better your match, the further you go!On the software side, Emotional Rollercoaster was developed in C# by modifying the sample demonstration of near-real-time analysis on frames taken from a live video stream found here linkOn the hardware side, we reverse-engineered a toy car and created a prototype rollercoaster from it.Imagine a dynamic theme park, where rides go faster if they detect that you are not scared enough, or a car that detects the emotion of drivers and passengers for a customized commuting experience. The versatility of Microsoft API makes all of this possible.IC Hack 17UI and general C# frustrationHellothereimaaron\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:33 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Emotional Rollercoaster","project_tags":["arduino","c#","xaml"],"project_url":"https:\/\/devpost.com\/software\/emotional-rollercoaster-hfzrq8","keywords":null},{"level_0":231,"hack_vector":[[0.1364459693,-0.1018798724,-0.020539172,0.0352275111,-0.0202874485,0.1249119863,0.2069084197,-0.0243048165,-0.0168853942,-0.0104686758,0.0248276703,-0.0590949692,0.1404386908,-0.0662626997,0.0649692863,0.014115422,0.2179532498,-0.0168256462,0.0451574661,0.129328385,-0.2486802787,0.0347016007,-0.0359709524,-0.0184986517,0.0961016938,-0.0274648778,-0.0200409815,-0.1801386476,-0.0096543031,-0.0928481072,0.0672904775,-0.1075634435,0.0241809003,-0.0914949328,-0.0181441605,-0.012704609,0.1082854867,-0.1462305039,-0.0610503592,-0.0018206439,0.0323550589,-0.1325045228,-0.1412381381,-0.0435067117,0.0731592029,-0.0646667406,0.0106742475,-0.0762475207,-0.0188492443,-0.2113389671,-0.1422918439,0.0049330369,-0.1150131375,-0.0078623435,-0.1959993094,0.1545528322,-0.1350583583,-0.0347047374,0.0423745252,-0.1009567827,-0.0678152069,0.0267507154,0.0861528665,0.0564158559,0.1155404374,0.0069627459,-0.099917911,-0.1238439754,0.0344861746,0.0083121946,0.0546690971,-0.0525953695,0.0206297189,-0.1182359308,0.0088693518,-0.1410562992,0.180816561,-0.0009188126,0.0097430721,-0.1467122287,0.1293520182,0.1624745727,0.0394564308,0.1705513149,0.0992673859,0.2040963322,-0.1027874872,-0.0236472115,-0.027053671,-0.08100418,-0.1506280154,0.0635312796,0.0883001611,-0.0254444815,-0.0100295078,0.0125814686,-0.1572032571,0.2107446492,0.016516706,-0.0679207444]],"hackathon_name":"IC Hack 17","index":231,"project_description":"An app to crowdsource decision making so that your friends or the public can vote to decide the outcomeUser InterfaceSometimes life presents us with hard decisions, and when that happens it can be hard to choose between them. Inspired in part by other web applications such as strawpoll but with a simple and light UI for a light, easy, and expansible design.Allows users to make questions, and 2 answers to this question, then others can vote on one of these options.\nIn the process of expanding to include natural language processing so that questions can be automatically parsed  and users don't need to enter text for the two possible answers, and to track logins and votes by users to prevent double-counting votes.Using a variety of languages hosted by a private web server, and a database in the back.We're currently expanding into natural language processing so that making questions is even faster and easier using APIs available online. As well as this, we are in the processs of implementing a system to prevent double-countinng of votes using used ids, and this idea could in the future expand beyond easy binary decisions into even harder open-ended choices.IC Hack 17andrewjunyoung\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:43 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"GitGudDecisions (by GitGud)","project_tags":["css","sql","python","javascript","ruby"],"project_url":"https:\/\/devpost.com\/software\/gitguddecisions","keywords":"questions,votes,using,users,language,web,hard,light,natural,expanding,even,easy,double,prevent,processing,decisions,answers,could,expand,idea"},{"level_0":232,"hack_vector":[[0.1618584692,-0.0962035358,-0.0175035,0.082186833,-0.0077406354,0.1839167625,0.1785048097,-0.066239804,-0.0109417671,-0.0419123061,0.0212250929,-0.0716646686,0.1569083929,-0.0859971046,0.0292650945,-0.0094383024,0.2158256918,-0.002055387,0.0708981156,0.1065913513,-0.2178845555,0.0501636304,-0.044468835,-0.0009766618,0.1279239506,-0.043871671,-0.0438901372,-0.1755254418,-0.0557660609,-0.0754290745,0.0718254372,-0.111305669,0.0612897538,-0.073935397,-0.0307914093,-0.0183575843,0.1477557421,-0.1237023026,-0.0511643514,0.0046650413,0.0801262707,-0.1241622567,-0.1635309011,-0.0154650556,0.0466450453,-0.0328543596,0.0300647039,-0.0665169135,-0.0378111824,-0.2155352235,-0.145525232,0.0481528528,-0.1119956896,0.0212074593,-0.2072831839,0.1340087652,-0.1270410568,-0.024496736,0.0432286263,-0.0770088509,-0.0687699988,0.0077742301,0.0853731111,0.0243769977,0.1142764315,0.0306740869,-0.0875734165,-0.1295467615,0.0031754673,0.0394097455,0.0688880384,-0.0381858535,0.0230382513,-0.133763656,0.0213221461,-0.0741125792,0.2063718885,0.0044420278,0.0056497967,-0.136756897,0.1022306606,0.1529668123,0.0238425992,0.1524491608,0.1124178618,0.1837981492,-0.0844742507,-0.0490781963,-0.0230852868,-0.080813311,-0.1288302839,0.0633686408,0.0613232031,-0.0327802151,0.011924223,-0.0207366217,-0.131897375,0.2485017926,0.0360944718,-0.072973758]],"hackathon_name":"IC Hack 17","index":232,"project_description":"Do you have 6 iPads? Save money on a 4k tv with shitScreen!You can sort of see it working.Like all great ideas, this one was thought of in the pub.It plays a video split across unlimited screens on iOS and we hoped Android.Good Question.Bluetooth.Android.....fucking AndroidIt fucking works. (Credit to the iOS guys :) )Don't use bluetooth. Don't build cross platform when you're when you've got even less sleep than experience.This is gonna be YUUUUUUUUGE.IC Hack 17I worked on the front end of the Android app and helped out with the back end.I worked on the web server and the android app :)I helped build the Android app which unfortunately did not work in the end. It was the first app I worked on and it drove me mad :)I worked on the iOS app, which was a joy to write in swift, and helped make the web protocol.Liam Pilot\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:48 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"shitScreen","project_tags":["iphone-sdk","java","swift","json","android","ios","websockets"],"project_url":"https:\/\/devpost.com\/software\/shitscreen","keywords":"android,ios,fucking,bluetooth,ideas,hoped,guys,great,got,good,gonna,even,experience,works,cross,credit,challenges,built,build,across"},{"level_0":233,"hack_vector":[[0.1610502154,-0.1534771323,0.0195269492,0.1035463065,-0.0426109321,0.1765087247,0.1633178592,-0.0725689456,-0.0331031047,-0.0177705474,0.0029145407,0.0453905091,0.1212309822,-0.0791311637,-0.0019620927,0.0722301155,0.2472788692,0.0444015414,0.0610290505,0.0558595993,-0.1702553332,0.0063908375,-0.0521278046,-0.0730450824,0.1755168736,-0.0161244627,-0.0668495372,-0.1935267895,0.0251220539,-0.0551393256,0.026737744,-0.1022111326,0.0905003399,-0.0624257773,-0.0532482713,0.0228912272,0.144430086,-0.0990141854,0.001859172,0.1105819792,0.0582476556,-0.144459039,-0.1812643409,-0.0218946077,-0.0664740726,-0.0369368382,0.049437318,0.0026484744,-0.0269824453,-0.1785657108,-0.0178121254,0.0397256091,-0.1092017293,-0.0657953471,-0.0666359141,0.1364454478,-0.1549340189,0.0932208598,-0.0238454212,0.0735024065,0.0007046268,0.0307497531,0.0443438999,0.081203036,0.157944411,-0.0588347204,-0.1430063695,-0.1623197049,0.0034348012,-0.0051115318,0.0705725253,-0.0306970365,-0.0179663561,-0.1602420211,-0.0771560073,-0.0467115901,0.206703186,0.0375282764,0.1056387052,-0.1446519941,0.1252985001,0.1453388482,0.0100562703,0.1259357035,0.1564057767,0.1466171443,-0.1408078969,0.0854012296,0.0254221559,-0.1111504883,-0.0735720173,0.1074815243,0.0142327007,0.0305885002,0.0993511453,-0.1190759316,-0.0313833728,0.1259396225,0.1141451001,-0.0372721851]],"hackathon_name":"IC Hack 17","index":233,"project_description":"emojifies text using cutting edge ml and word embeddingsSee https:\/\/github.com\/memenursery\/emojifier.IC Hack 17PK398\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:50 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"EMOJIFIER","project_tags":["java","javascript","python","json","ruby-on-rails","node.js"],"project_url":"https:\/\/devpost.com\/software\/emojifier","keywords":"see,memenursery,https,github,emojifier,com"},{"level_0":234,"hack_vector":[[0.1422042251,-0.1155941412,-0.0182769727,0.0520961918,-0.0290881228,0.1567161083,0.2165152878,-0.0491635874,-0.0285299495,0.0087007415,0.0064211409,-0.0415426604,0.140082702,-0.0764771625,0.0507459864,0.0244533829,0.2368839234,0.0108611146,0.0381619968,0.1160747185,-0.2282272279,0.0587504283,-0.0408781134,-0.0342169739,0.1404520869,-0.0079570115,-0.047186885,-0.1996997297,-0.0055340277,-0.0717106462,0.0662711337,-0.1438694745,0.0490499251,-0.0959513709,-0.0329508223,-0.0168650933,0.1330436915,-0.131897971,-0.0406399518,0.015166779,0.0406225845,-0.1733643711,-0.1678489745,-0.0399440117,0.0401537009,-0.0183080491,0.0119020762,-0.0601704419,-0.0361198485,-0.1908138245,-0.1127459854,0.0259005576,-0.1074076667,-0.0010590167,-0.1620443165,0.1457103789,-0.1363525391,0.013340204,0.0137737496,-0.0608977266,-0.0555451438,0.0178328622,0.0876533017,0.0551687926,0.1176697686,-0.0122293215,-0.1010034904,-0.1408495456,0.0454217829,0.0327607132,0.0760193914,-0.0507903583,0.0330312662,-0.134684816,-0.0075420737,-0.1250741333,0.1721796542,0.015710054,0.0378624834,-0.1268953234,0.1411095411,0.1574544609,0.0723068863,0.1672218889,0.1129853055,0.1866140813,-0.1106749177,-0.0153365973,0.0103213619,-0.0888862163,-0.1328077912,0.0631184205,0.0789872631,-0.0297271032,0.0375669263,-0.0163583979,-0.1190417111,0.1966895014,0.0278273318,-0.0605733693]],"hackathon_name":"IC Hack 17","index":234,"project_description":"Get musical responses based on emotions in a chat environment.We were inspired by the functional composition talks given by Chris Ford.Plays music composed with overtone by scraping an online database of guitar songs and translating the song into arrays of pitches and durations.Web interface for the chat that connects to a Python server. The user's messages are analyzed with Microsoft's sentiment API and based on the response the environment music is changed accordingly.Music theory, JavascriptCreating music with no prior experience.Building a server from scratchIntegrating it with more instruments, songs and online chatsIC Hack 17Alexandru Dan\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:50 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SentiTones","project_tags":["angular.js","clojure","overtone","python","ruby","shell"],"project_url":"https:\/\/devpost.com\/software\/sentitones","keywords":"music,songs,server,online,web,composed,given,functional,ford,experience,environment,durations,database,creating,connects,composition,chris,inspiration,chats,chat"},{"level_0":235,"hack_vector":[[0.1573192328,-0.1166019365,-0.0278383438,0.0499804951,-0.0088827433,0.139295876,0.2143528014,-0.0449722596,-0.0266132765,-0.0026469023,0.0044699903,-0.0603900403,0.1546584517,-0.076651603,0.0569183901,-0.02351005,0.207006827,-0.0097737378,0.0455647409,0.1191442087,-0.239986375,0.0490787998,-0.0401432887,0.0018432984,0.1435520053,-0.0318290889,-0.03602577,-0.1779135913,-0.031718906,-0.0804058909,0.0842014775,-0.1411127895,0.0348101333,-0.0728031844,-0.041749388,-0.028207209,0.1236234978,-0.1386205703,-0.0508219339,-0.0162046514,0.0598940328,-0.140940249,-0.141780287,-0.0252005924,0.0650760904,-0.0331496596,0.0113824978,-0.0820407048,-0.0355003439,-0.1988539398,-0.141516149,0.0218397602,-0.1118089631,0.0319115371,-0.1989284307,0.1472802311,-0.1433579773,-0.0312067848,0.0167765114,-0.0915906355,-0.0715792477,0.0198195521,0.0835053399,0.0199736096,0.1037315056,0.0167868361,-0.0911180601,-0.1083771586,0.0247914158,0.0399848148,0.0697257966,-0.0484213382,0.0368320383,-0.1200029701,0.030678777,-0.1126684397,0.1746591181,0.0071188896,0.0036938614,-0.1286743432,0.1296078563,0.1454259008,0.051968351,0.1651421636,0.1071459204,0.2085271776,-0.0935038626,-0.0389814861,-0.0107491687,-0.0722795352,-0.1358109564,0.0563042387,0.0925174728,-0.0252042972,-0.002972377,-0.0025443011,-0.1455237865,0.2224209011,0.0143043017,-0.0627246872]],"hackathon_name":"IC Hack 17","index":235,"project_description":"An io game that incorporates shooting and a large dynamic open worldThe ActionOther io games Agario and Sliterio and Diepio, these are fun, but they are not true mmos as in they have a limit for the number of clients for each server.It is a true MMO top-down 2D shooter. It allows an unlimited number of player on the server in theory whereas the playable limit is close to 50.With a fast client server communication protocol that minimizes the data required to be sent. Internal representation of the game on both the client and server runs the game loop concurrently.LAG. Many players meant that we placed a lot of pressure on the server with the bottleneck being server network utilization.Being able to have >50 Clients connected whilst maintaining <30% CPU utilization.JS, PIXI.JS, how to manage team built code.Deploy to production servers and get more people to play it!IC Hack 17Worked on frontend and game mechanics. Made a lot of the graphics, e.g. health bar, scoreboard, kill feed etc. First time using JavaScript and plugins like Node, Socket.io etc. in a web-based situation (codecademy doesn't really count, does it). Very educational experience, incorporating knowledge from different languages into one big fun mess. Hate JS a little more now.I came up with the initial game ideal, I was trying was implement a backend with a newer architecture which should allow more players per serverZichen Liu\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:49 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"fooshoot.com","project_tags":["javascript","html5","node.js","socket.io"],"project_url":"https:\/\/devpost.com\/software\/fooshoot-com","keywords":"server,utilization,limit,true,js,built,game,client,clients,number,get,fooshoot,fun,games,whilst,inspiration,internal,diepio,io,lag"},{"level_0":236,"hack_vector":[[0.1516462564,-0.1217003837,-0.0200769231,0.0514123216,-0.0197591968,0.1314115077,0.1880948097,-0.0306092314,-0.0166654978,-0.0325559005,-0.0052639153,-0.0368227996,0.1323525459,-0.0700447708,0.0303230099,0.0338902175,0.2289430052,0.0028654458,0.0474579707,0.1346646547,-0.2427776754,0.0229159538,-0.0329366699,-0.0197533164,0.1484239846,-0.025447296,-0.0408536941,-0.1804808676,-0.0130028361,-0.0957202539,0.0366158038,-0.1155295745,0.0611824505,-0.0797611922,-0.015536678,-0.0241852924,0.124304615,-0.142106384,-0.0433031358,0.0309882723,0.0464657955,-0.145297423,-0.1622331887,-0.0475937426,0.028876951,-0.0694562942,0.0252160989,-0.0568082333,-0.0291108713,-0.2089235932,-0.1111685708,0.0143246679,-0.1139450818,-0.0250620618,-0.1741560698,0.1636134684,-0.141993776,0.0048029018,0.0268260669,-0.0573251471,-0.0579655692,0.0284596402,0.0568879992,0.0466318615,0.1256484985,0.0039828136,-0.1353646815,-0.1455202401,0.0252730437,0.0199362002,0.0842776075,-0.0569748394,-0.0001195046,-0.1350407749,-0.0011030055,-0.1027152389,0.1856350303,0.0045232489,0.0448934548,-0.1462732255,0.1078136712,0.1616715789,0.033808466,0.1625182629,0.1204538122,0.184802264,-0.1235598028,0.0074398299,-0.0135158636,-0.0932140574,-0.1299753189,0.0781985745,0.0739264116,-0.0203105062,0.0214363914,-0.0329289101,-0.1390306652,0.2092120945,0.0480428077,-0.0596509017]],"hackathon_name":"IC Hack 17","index":236,"project_description":"Try to compose tweets without using the top 1000 words in the English languageI was inspired by the book Thing Explainer by Randall Munroe of xkcd fame in which he attempts to explain complex topics using only the top 1000 words in the English language. I was interested in the inverse of this. What if you can only use words out of the top 1000. It was a fun experiment to see how much you can actually say without using the most common words!Check it out: http:\/\/bac43aab.ngrok.io\/IC Hack 17Alasdair Hall\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:51 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Stay Original","project_tags":["express.js"],"project_url":"https:\/\/devpost.com\/software\/stay-original","keywords":"words,using,top,constructing,fun,fame,explainer,explain,experiment,english,containing,xkcd,complex,http,check,book,bac,attempts,attempt,actually"},{"level_0":237,"hack_vector":[[0.1501521766,-0.0875128582,-0.0405549668,0.0372964554,-0.0163359661,0.1179402396,0.2046382725,-0.0033404776,-0.026736727,0.0066864667,0.0144296158,-0.0740754306,0.1422908455,-0.0644097403,0.0866173133,-0.0217863973,0.1711320728,-0.0186440237,0.0398445241,0.1221895963,-0.2471492738,0.0245847646,-0.0392127447,-0.0069728219,0.1063007787,-0.0233929232,-0.0205743946,-0.171341002,-0.0215281807,-0.0811567679,0.0700831413,-0.1137947291,0.0155668464,-0.0947308317,-0.0183984544,-0.00862733,0.1012273505,-0.1454722136,-0.0864886865,-0.0104066692,0.0431276299,-0.1259542406,-0.1269159168,-0.0211425293,0.0833052099,-0.0444149449,0.00721916,-0.0992738828,-0.0148200272,-0.2026477456,-0.1671162844,0.0032798306,-0.1156121269,0.0203512963,-0.2016547173,0.1651131958,-0.1239520311,-0.0275225285,0.0360768139,-0.1204038262,-0.0802975595,0.0288260989,0.0802380815,0.0473049432,0.1172391921,0.0144239813,-0.0989446789,-0.1054033116,0.029437907,0.0124913491,0.0586615615,-0.0411116965,0.0138670513,-0.1189436018,0.0403952152,-0.138790369,0.1784372479,0.0012066289,-0.012710792,-0.1333510429,0.1249167696,0.1530618221,0.070238702,0.1507008821,0.0949937403,0.2192943543,-0.0640654266,-0.0350852758,-0.0071124304,-0.0684650466,-0.1573382914,0.0517140031,0.1117142439,-0.0420947336,-0.0050847703,0.0217867158,-0.1690147817,0.246477142,-0.0050627813,-0.0628992319]],"hackathon_name":"IC Hack 17","index":237,"project_description":"Composing a poem from emotions and features derived from a photographFront pageExample poemUsing cognitive services to create an unusual, unique and creative application that which uses the service in a way that is unexpected. We wanted to create a fun yet meaningful experience for the users. We wanted to marry literature and technology together which is not often explored.The application uses Microsoft Emotions API and Computer Vision API to explore emotions and features within any photograph to compose an interesting abstract poem.Back-end: Azure Emotions API to recognise emotions within portraits and people, Azure Computer Vision API to identify features within photographs. After identifying these words we used the word association API to compose relevant words related to the poems. Furthermore, we implemented our own poetic sentence structure to give the poems a natural feel and flow naturally.No one in our team had experience with Python so this was a huge learning experience. Furthermore, this was first time our team was using API's and integrating them together. Coming up with poetic sentence structures and associated words from the image key words proved to be the biggest challenge.We manage to create cool poems most of the times! (Sometimes it can get a little weird though but that's ok, poems can be a little bit abstract :) )How effective and useful API's are to develop different functionalities of an application. Furthermore, this hackathon gave us a great idea of how Machine Vision works and how useful they can be in various applications. Additionally, we were grateful on the great documentation provided by Microsoft that made our life a lot easier using the API's.We would like to create better sentence structure that is more accurate grammatically as well as making the poems more meaningful. Furthermore, we are thinking about machine learning techniques that could be used on a big data set of words to create predictions of which words are the most powerful in different types of poems.IC Hack 17Mo Afshar\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:50 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Philosophical Poetry","project_tags":["python","django"],"project_url":"https:\/\/devpost.com\/software\/philosophical-poetry","keywords":"api,poems,words,create,emotions,furthermore,within,sentence,application,vision,using,experience,poetic,learning,microsoft,meaningful,little,machine,great,features"},{"level_0":238,"hack_vector":[[0.1638982594,-0.1033149585,-0.0244064219,0.0714930817,-0.0192976147,0.1794647574,0.2077746689,-0.0456391126,-0.0202370379,0.0140952216,0.0048706266,-0.0572676659,0.135642916,-0.0844132528,0.0603381656,0.0269732848,0.2248386741,0.030761471,0.0403509103,0.085977532,-0.2082606107,0.0397589281,-0.0580377132,-0.0482472964,0.1500151753,-0.0107799368,-0.0455723032,-0.2248256505,-0.0184562039,-0.0509442985,0.0801370367,-0.1385281235,0.0595413931,-0.1220197603,-0.0506882817,0.0253585838,0.1192699075,-0.1287631989,-0.0413646549,0.0277362,0.0322417468,-0.1633063108,-0.1739492565,-0.0042986195,0.0275799204,-0.0209281072,0.01767377,-0.0545280911,-0.0378428884,-0.2032028586,-0.1137342155,0.0213358793,-0.1028613299,-0.0203967802,-0.1276586205,0.1535366327,-0.1342449635,0.0327970907,-0.0002829817,-0.0409116074,-0.053241875,0.0271206032,0.0872229785,0.071678564,0.1362753659,-0.0246378109,-0.1132554188,-0.1305218041,0.0323595516,0.0098157208,0.0748499557,-0.0419036373,0.0266661122,-0.1477297395,-0.0039485949,-0.0941043496,0.2006204277,0.0142244548,0.0437560491,-0.1415274441,0.1480251998,0.1558497697,0.0892902538,0.1449136585,0.0933647454,0.191742301,-0.0775420219,0.0146020418,0.0335702449,-0.0889468417,-0.1218985394,0.0582008101,0.0613708459,-0.0152280787,0.0469895266,-0.0264032762,-0.1010968462,0.1965854317,0.0347050987,-0.0787611604]],"hackathon_name":"IC Hack 17","index":238,"project_description":"Meme generator using Microsoft Cognitive APIs knowing emotion and put corresponding memes onto the picture.People sending memes around.Recognize emotion and put corresponding memes on the picture.Using Microsoft Cognitive API to know emotion. Python as backend interface with Microsoft Cognitive API, process data and interface with front-end.Implementing parse http POST data, do web server from a lower level.IC Hack 17Jinxuan Cui\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:35 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Want a Meme?","project_tags":["html","jquery","python"],"project_url":"https:\/\/devpost.com\/software\/want-a-meme","keywords":"data,python,api,meme,microsoft,post,cognitive,work,interface,web,limited,memes,parse,emotion,http,using,server,corresponding,around,give"},{"level_0":239,"hack_vector":[[0.1637883037,-0.1094686836,-0.0265070628,0.0506205112,-0.01006494,0.1261874735,0.1962524056,-0.0200921074,-0.03797381,-0.0003168969,0.0162187442,-0.0773437917,0.1538764089,-0.0641643107,0.074365437,-0.026676083,0.180065304,-0.0164228417,0.0433710925,0.133772403,-0.2507562041,0.0250609331,-0.0389493406,0.0073035415,0.1337754577,-0.0355150439,-0.0281099286,-0.1754033864,-0.0330331326,-0.088077113,0.077884756,-0.118006587,0.0128008127,-0.0784528926,-0.0147703188,-0.0228303336,0.1031840816,-0.1462899595,-0.0712135956,-0.0159183498,0.062412627,-0.1273597628,-0.1317919493,-0.0195520166,0.0683180317,-0.0368016586,0.0074777463,-0.0934397802,-0.0208725594,-0.2042819709,-0.1474647969,0.0130837345,-0.1131366491,0.0315444805,-0.2161077559,0.1708018184,-0.1259991378,-0.0254485253,0.0300543923,-0.1154853702,-0.0740220398,0.0239739176,0.0688090026,0.0435033143,0.1153603867,0.0358033516,-0.0984248072,-0.1133621782,0.0102878455,0.0134679116,0.0652823895,-0.0378206223,0.0300869495,-0.1108395308,0.0469084047,-0.1178852245,0.175166294,-0.0109858364,-0.0035601475,-0.1210224479,0.1196759343,0.1491674185,0.0565026104,0.147396639,0.0980640724,0.2184918672,-0.0743544027,-0.0496268123,-0.0231687203,-0.0537933558,-0.1351853013,0.059413936,0.0965134725,-0.0469432175,-0.016019756,0.0173818991,-0.1627279818,0.2411748916,-0.0007501335,-0.0565247685]],"hackathon_name":"IC Hack 17","index":239,"project_description":"You'll never want to play another horror game again...Main menuTrainGround floor of houseFirst floor of houseOutside houseAs fans of horror movies and games, we wanted to built a new experience using Microsoft Cognitive Services, original artwork and by maximising all senses of the audience and scripting a story. We were really inspired by the artwork of many horror games, thus we decided to use our own original artwork for the game.It is a standalone horror game, utilising sound effects, tension and psychological stimuli to enhance the overall experience of the gamer. This was enhanced using live heartrate data, emotional analysis and the element of surprise.Two of us worked a lot on the artwork, using Adobe Photoshop CS6 (one did mock sketches on pen & paper and the other refined those sketches digitally). The other three members mainly worked on programming, splitting different language requirements for our game.We found doing the artwork incredibly challenging, as we found that it was more time consuming than we originally thought. Additionally, the difficulty of creating a feasible story line was greater than we thought.We managed to make a game on which we received very positive feedback from various other IC Hackathon participants (we managed to scare them). We believe the original drawings we produced for the game were very successful and fit the horror atmosphere of the game. Sound effects were used incredibly well in combination with our graphical effects.We learned how to keep awake and work efficiently under sleep deprivation. We additionally learned how to work more effectively as a team. Our team got on very well and we are happy to work together again in the future. We learned how to modify audio (e.g. from third party sources), how to use Photoshop to enhance our artwork and in particular we learned how to modify voices of our team members.Although we have plenty of user interaction, we want to further enhance this area, by implementing hand gestures to allow users to interact with the game using the video motion API (Microsoft). If the game is longer, we could store data from the user (given the user's permission of course) into a database and perform data analysis from this. We may continue working on Karma and release it to market.IC Hack 17Kai Du\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:52 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Karma","project_tags":["jquery","css","html5","php","python","photoshop","fitbit","css3","javascript","ios"],"project_url":"https:\/\/devpost.com\/software\/karma-lsyi81","keywords":null},{"level_0":240,"hack_vector":[[0.1367621869,-0.1001674309,-0.0342286825,0.0165272448,-0.0191150829,0.137799412,0.2122176141,-0.0478785746,-0.012456391,-0.0179307852,0.0169729088,-0.0626637265,0.1271234602,-0.0696464851,0.0563401803,0.0149247302,0.2272609621,-0.0046575838,0.0297139995,0.1264803708,-0.2379754633,0.0404254124,-0.0326002128,-0.0251910929,0.1001019925,-0.0200270154,-0.0226269998,-0.1712866575,-0.018954413,-0.0963438004,0.0616857819,-0.1350734532,0.0340455063,-0.0829386562,-0.0190427583,-0.0302296188,0.1195611954,-0.139510259,-0.055306904,-0.0082221599,0.0343188718,-0.1426702589,-0.1477390975,-0.046425458,0.0722412989,-0.0559358858,0.0124300718,-0.062955223,-0.0372900553,-0.2075180113,-0.1418905407,0.010737285,-0.1024073362,-0.0067396346,-0.1952914298,0.149557665,-0.1285670102,-0.0315186493,0.0329007804,-0.102047503,-0.0705456212,0.014059525,0.088980116,0.0442358553,0.1018844396,0.0112570412,-0.1034233794,-0.1215301976,0.0478559472,0.0392751954,0.0688172504,-0.0579964034,0.034514498,-0.1178950444,0.0189973768,-0.1438271105,0.1579898149,0.0058147926,0.011961841,-0.1335932165,0.1321535707,0.1624454707,0.0507841259,0.1921845078,0.0967154652,0.1885712147,-0.1119589657,-0.0425687656,-0.0199793447,-0.0802139416,-0.1501673311,0.0486237593,0.0987120718,-0.0453596041,-0.004857962,0.0138836056,-0.1513728946,0.2179906964,0.0067903362,-0.0752983168]],"hackathon_name":"IC Hack 17","index":240,"project_description":"Trustless, Cryptographically Secure and Private Matchmaking ServicelargeHardCryptoLogoDildo.io is a popular matchmaking website used by the MIT community, restricted to MIT members. The idea is simple: You select a subset of users you are interested it in, and if the interest is mutual, you both get notified. Hardened dildo.io is a a paper that describes how to build a similar system, with the additional property that the server can't know who you like and dislike.Our goal for ICHack 17 was to implement the Hardened Dildo.io paper as a web application.HardCrypto is a private and cryptographically secure matchmaking service, aimed at student communities, that can guarantee to keep your likes and preferences private without having to trust the server (and whoever hacks into it).It's like Tinder, but only with verified people from your school, and nobody except for you can know who you like. Or philosophy is one where we put users preference first and assume all options are opt in and that no information (such as sexual orientation) is assumed.The core idea behind HardCrypto is Homomorphic Encryption, a form of encryption that allows computations to be carried out on the ciphertexts without revealing the plaintext. When every user joins, they create an RSA key pair for signing and encrypting messages and publish their public key. Then, for every other user in the system, a Paillier key pair is generated and sent to the other user encrypted with their public RSA key. The server can then perform operations on the numbers encrypted with the Paillier key pair.Our stack is built in EcmaScript 6. We use node.js, express, mongo for the backend and React for the frontend, along with tons of libraries.Launching at Imperial in Spring Term 2017.IC Hack 17Johannes Prosser\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:18 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HardCrypto","project_tags":["javascript","mongodb","node.js","express.js","redis"],"project_url":"https:\/\/devpost.com\/software\/hardcrypto","keywords":"key,hardcrypto,user,dildo,pair,server,io,like,mit,first,rsa,encrypted,encryption,every,public,private,paper,next,matchmaking,paillier"},{"level_0":241,"hack_vector":[[0.1292449534,-0.0968837962,-0.0309883039,0.0225841459,-0.0141331134,0.1154639348,0.211156249,-0.0105597321,-0.034029305,-0.0038981778,0.0039803414,-0.0791160464,0.1291754693,-0.0744103193,0.0701019317,0.032482475,0.223194316,0.0005033142,0.0291161165,0.1361037046,-0.2387073189,0.0442983396,-0.0487362668,-0.0283396747,0.1079570204,-0.0235111322,-0.0382432751,-0.1899556816,-0.0199131109,-0.0792705864,0.0620895065,-0.1289087832,0.0365619808,-0.095649235,-0.0192967933,-0.004593763,0.1054829732,-0.1391778588,-0.0477824546,-0.00143547,0.0187507607,-0.1617646217,-0.1664406061,-0.0344395936,0.0648672581,-0.0596025251,0.0130492775,-0.0793319568,-0.0193203222,-0.2085375339,-0.1310722679,0.0035244429,-0.1002443582,-0.0048220535,-0.1797655374,0.162161991,-0.1361720562,-0.0057177879,0.0295408685,-0.1055205539,-0.0707928836,0.0419606268,0.0761439577,0.0636392385,0.1092388406,0.0012128416,-0.1028827801,-0.1326610148,0.0463689119,0.0067322459,0.0716019571,-0.056544628,0.024196336,-0.1149774715,0.0280788764,-0.1423196495,0.1656933427,-0.007224902,0.0354939327,-0.1278019398,0.1371397227,0.1592244953,0.0838680044,0.1629486382,0.0885382146,0.1909112781,-0.1011835635,-0.0223513152,-0.0030896307,-0.0908074304,-0.1430834234,0.0510791466,0.0889479369,-0.0504956506,0.0068119722,0.0105240224,-0.1629927158,0.2053779215,0.0144589581,-0.0764843449]],"hackathon_name":"IC Hack 17","index":241,"project_description":"Processes video feed from camera worn by visually-impaired user to alert them of obstacles around them with distance.Conversations with visually-impaired people who used walking sticks, guide dogs and echolocation to get a feel of the world around them but felt as if they never truly knew what was around them.The user will wear a camera with depth sensor (presently a Kinect). The video feed is processed and analysed in order to detect what obstacles are in the path of the user and the distance of said objects. This information is then fed back to the user via text-to-speech technology.We used the Kinect api in order to retrieve the video feed and depth information from the Kinect. We used blob detection on the depth information in order to detect where the closest objects were. Then the full colour image at the corresponding location was processed by a cloud service to determine the identity of the object. This information was then spoken back to the user using text-to-speech technology.Difficulty in retrieving the required data via the APIs.Getting a working proof-of-concept!How to process visual data (i.e. blob detection, object recognition).IC Hack 17Zubair Chowdhury\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:52 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Sight","project_tags":["c#","kinect"],"project_url":"https:\/\/devpost.com\/software\/sight-7b4298","keywords":"information,user,kinect,order,depth,used,blob,object,data,feed,detect,speech,detection,objects,technology,text,back,via,video,around"},{"level_0":242,"hack_vector":[[0.1595515609,-0.1099777818,-0.0273266677,0.0596265383,-0.0258220807,0.1410105973,0.2119519114,-0.0430719629,-0.0346014351,0.0087537691,0.0192061942,-0.042694483,0.1390573978,-0.0696646497,0.0773573816,-0.0090057533,0.2024113089,-0.0059574787,0.0472361185,0.1160283163,-0.23485744,0.0362227187,-0.0464191139,-0.0228264015,0.1300391853,-0.0173832886,-0.0283487495,-0.1938060671,-0.0144167952,-0.0661077872,0.0631844923,-0.1281651258,0.037230514,-0.0945226848,-0.0323240794,-0.0127139678,0.1207071766,-0.1354444027,-0.0690027922,0.0117408419,0.0476428419,-0.1411133558,-0.1453308016,-0.0285504833,0.0400536582,-0.0370514058,0.0109698744,-0.079222776,-0.0194856394,-0.1996678114,-0.1313392371,0.0069702705,-0.1232273802,0.0086245527,-0.1717222929,0.1619763821,-0.1412997991,0.0097673899,0.0161769111,-0.0764504969,-0.0551463217,0.0199359413,0.0829794407,0.0586603656,0.1193640754,0.0001180624,-0.1125571057,-0.1192012876,0.024240898,0.0133912377,0.0624971539,-0.0408975184,0.0237020813,-0.1402231455,0.0186218321,-0.1345028281,0.1912549436,0.0016897848,0.0213134345,-0.137674883,0.138522774,0.1510860175,0.0729221404,0.1641746759,0.1183086187,0.1983177066,-0.0979332775,-0.0187013168,0.004542198,-0.078928791,-0.1436709315,0.0623575859,0.1059428528,-0.0318374187,0.0283376016,-0.0196356922,-0.1313009858,0.2100320905,0.0251222495,-0.0592576936]],"hackathon_name":"IC Hack 17","index":242,"project_description":"Great news for Scientists: Turn hand-written mathematical formulas into LaTeX easily!Writing research papers and dealing with manual formula writing in Word or LaTeX is a great pain for everyone. Thus, we came up with the idea to make a program that scans printed or hand-written formulas and turns them into LaTeX automatically.Tried Wolfram, Google Cloud Platform, OCR APIs, but eventually settled for Java and Python. We use OpenCV for OCRing and jlatex for LaTeX conversion\/formatting.We use bash script to put a .png file to python, then we pipe the output to Java to generate a nicely formatted .jpg file with the formulaOCRing the image input is very difficult + there are few good libraries for outputting a nicely formatted LaTeXOur project has covered several PhD theses. Some of them are:https:\/\/cs.uwaterloo.ca\/~glabahn\/Papers\/sketch-corpora.pdf\nhttps:\/\/www.scg.uwaterloo.ca\/mathbrush\/publications\/corpus.pdfAnd cover topics from teaching machine learning image recognition, to manual formula parsing to LaTeXFull integration with mobile platforms. \nUse of online computing services.\nVoice input of formulas.\nOnline storage of outputted formulasIC Hack 17Tomasz Czernuszenko\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:23 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"LaTeX Formula Scanner","project_tags":["java","python","latex","opencv"],"project_url":"https:\/\/devpost.com\/software\/latex-formula-scanner","keywords":"latex,formula,use,formulas,online,pdf,formatted,papers,image,input,python,java,https,ocring,file,nicely,ca,uwaterloo,manual,writing"},{"level_0":243,"hack_vector":[[0.145207122,-0.0942183957,-0.0402128324,0.0304013286,-0.0231873542,0.1230561361,0.2039502114,-0.0150515372,-0.0048286142,-0.0338268727,0.0066089691,-0.0766230077,0.1334960759,-0.0691395327,0.0622656159,-0.0037446744,0.2021615356,-0.008370759,0.0350844227,0.1379718781,-0.2415228188,0.0215814486,-0.0341330841,-0.0073015424,0.1036310345,-0.0192836039,-0.0205098838,-0.1570377648,-0.0289933328,-0.0936033055,0.0474318005,-0.1206927747,0.0226406679,-0.0819123611,-0.0161333084,-0.0224692654,0.1131667197,-0.1485628635,-0.0780892223,-0.008376589,0.0442984253,-0.1182498038,-0.1325895637,-0.0378492475,0.0827817246,-0.0742217898,0.0159234051,-0.0787386,-0.035304375,-0.2129716128,-0.1600286067,0.0084704384,-0.1036677212,0.0003683829,-0.1993387938,0.1630409807,-0.1147079766,-0.0477840379,0.0364101976,-0.1189637557,-0.0849762931,0.019470986,0.0783560425,0.0345345698,0.1111877337,0.0279652346,-0.0999003723,-0.1188134551,0.0338370353,0.0271890014,0.0625946373,-0.0535502993,0.0188461784,-0.1179869771,0.0348914973,-0.1259728223,0.169338569,0.0042257831,-0.0086082378,-0.13822487,0.1139998734,0.1646038145,0.0507958159,0.1665581614,0.0845855251,0.1978810877,-0.0878354982,-0.042772755,-0.0231343284,-0.0772029981,-0.1549542695,0.0569012947,0.1006839499,-0.038416829,-0.0145504661,0.0118265329,-0.1696902663,0.2524120212,-0.0004161778,-0.0703161135]],"hackathon_name":"IC Hack 17","index":243,"project_description":"Ever woken up and realised you have hundreds of unread messages? Can't be bothered to read them? Say no more.Some of our friends speak too much. Ever woken up in the morning, checked your phone and realised that you have hundreds of unread messages? We can't be bothered to read them - can you?The reason we developed a piece of software for the Amazon Echo was that this can be queried on the go. We don't need to stop and look at a screen to be updated - we can just listen to it whilst doing other things. Time saving is very important in this day and age, and we want to cater to this by allowing users to do tasks in parallel.Our code looks through a specific chat's history and finds the user's last message. From that point on, we assume that the user has not read any messages. From these messages, we select the lines of text for Alexa to say in the order of \"importance\" (this can be changed depending on what the user finds important).We wrote a lambda function instead of using web services to host the server. Customised intents, utterances and implementations of Alexa skills (written in nodejs) were then written using the Amazon Alexa api.Getting Alexa to say \"hello world\" was a challenging task (it took us 8 hours). Part of this required knowledge of writing a lambda function and linking this to Alexa.\nDeciding what messages are \"important\" to different people is very hard, and this is a problem that can hopefully be fixed by using ideas similar to using cookies.Considered edge cases when implementing functions.\nAlexa also does what we want :DThat connecting everything to the internet is hard. Also that Alexa is harder to use than we thought.Implement a better natural language processing algorithm and also automatically linking whatsapp chats to a .txt file. Increase the types of chat names since there is no predefined Amazon type for names or common words.IC Hack 17Ryan Chung\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:52 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Alexa Chat Summary","project_tags":["node.js","alexa","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/alexa-chat-summary","keywords":"alexa,messages,using,also,amazon,chat,important,user,lambda,read,function,hard,finds,names,say,want,written,linking,inspiration,history"},{"level_0":244,"hack_vector":[[0.1392886639,-0.074597463,-0.0442769453,0.0213271715,-0.0214614775,0.1304545254,0.1959837675,-0.017078016,-0.0023749198,-0.0197555237,0.010960279,-0.0911679268,0.1250893027,-0.0589114726,0.0836597532,-0.0046217353,0.2002402842,0.0031616292,0.0314733684,0.1302031279,-0.2415700853,0.0204708334,-0.0415865518,-0.010652666,0.0806807876,-0.0203000586,-0.0135539584,-0.1672652513,-0.0385568552,-0.0978036523,0.0619124621,-0.1232974157,0.0147678563,-0.0919203982,-0.0120826531,-0.0184566528,0.1024830639,-0.1414041519,-0.075725995,-0.0156175904,0.0325343832,-0.1176362038,-0.1309575737,-0.0326799639,0.0895308256,-0.0734627098,0.0121905925,-0.0801275671,-0.0369582959,-0.2166810483,-0.1615716517,-0.0043662037,-0.0961108953,-0.0038574664,-0.2030764669,0.156992659,-0.1096621826,-0.0474568121,0.0431643501,-0.1215225905,-0.0810032338,0.0137454458,0.0787852481,0.035555765,0.1023224145,0.0236780532,-0.0944957286,-0.1175198406,0.0374638848,0.0230733529,0.0597767495,-0.0532466955,0.0245661642,-0.1123901382,0.0403884463,-0.1389393806,0.1685113609,0.0014026209,-0.0074270628,-0.1368716806,0.1179763824,0.1653686464,0.0620336309,0.1734113544,0.0824399069,0.2011602223,-0.0778674036,-0.042988874,-0.0241528433,-0.0704820007,-0.1542222649,0.0456690714,0.1046811789,-0.0528532565,-0.0279900488,0.0312776677,-0.1713794321,0.256998837,-0.0128866164,-0.0885799602]],"hackathon_name":"IC Hack 17","index":244,"project_description":"A Microsoft Bot and a Chrome extension that work in synergy to message you when someone unfriends you on FacebookChrome notificationBot messageFacebook is eager to tell you about friend requests and even makes posts when you add a new friend, notifying you about all the new Facebook relationship. It will however never inform you about changes the other way around; you cannot see anyone unfriend you. We decided to change that.The Chrome extension works in the background and periodically checks your friend list on Facebook, by comparing your friend list to the last known one every time, it can see people disappearing from it. It saves the data on the hard drive, so it will work even if someone unfriends you while you have your browser - or even computer - off.When it detects that someone unfriended you, it displays a desktop notification and also connects to our bot which messages you directly about that fact.Additionally, it can also monitor the friends' lists of all your friends, informing you about the changes, so that you can know if someone unfriended one of your friends.We mostly used JavaScript to build the Chrome extension, utilizing AJAX for querying Facebook and HTML5 Local Storage for saving data. We built the bot in Node.js and Microsoft Bot Framework, but eventually settled on using Microsoft Flow, as it turned out to be better suited for the task, as suggested by a Microsoft representative.The Chrome extension was difficult to implement, as it tries to scrape Facebook's web pages without using any API's. This allows it to work without any authentication required and see the friends' lists of all your friends. Facebook's web pages load content (like the friend list) asynchronously in many steps, and so our code had to reflect that to work. After getting all the data, it had to be parsed to extract useful information from the returned mix of HTML and JavaScript.Our bot worked locally without any issues, but after we moved it to the Microsoft Azure's bot service, we ran into a problem, as it was unable to find some Node.js modules. A Microsoft representative told us it's likely to be an unknown bug due to it being a recently introduced service. As a solution we decided to use Microsoft Flow instead, which works without issues.The project works exactly as we envisioned. We successfully wrote a web scraper\/parser for Facebook's data and a working bot.We learned about the different Microsoft Azure capabilities and about the process of making Chrome extensions. We also had the chance to discover that Facebook loads it's web pages in quite a convoluted way and that it's possible to monitor Facebook users' data without their knowledge, which is a privacy issue.We could extract more data from Facebook to monitor different kinds of user activity, and notify them of interesting events concerning them even if they don't use Unfriendly themselves. This could be a way to naturally expand the user base.IC Hack 17Marcin Wisniowski\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:54 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Unfriendly","project_tags":["javascript","azure","chrome","ajax","json","node.js","jquery"],"project_url":"https:\/\/devpost.com\/software\/unfriendly","keywords":"facebook,microsoft,bot,data,friend,friends,without,web,chrome,even,work,pages,works,extension,also,monitor,see,list,someone,way"},{"level_0":245,"hack_vector":[[0.125919193,-0.0859708786,-0.0256249532,0.0273903348,-0.015868688,0.1222482398,0.2108087689,-0.0296705849,-0.0290592853,-0.0035314336,0.0272791833,-0.0772425234,0.1502743661,-0.0750705823,0.074720256,0.0013337793,0.2122434378,-0.0140418289,0.0360536799,0.1367356628,-0.2345454097,0.0403623767,-0.0457180031,-0.0154659376,0.1021693796,-0.0302467402,-0.0281910561,-0.1783445477,-0.0235773958,-0.0886741057,0.0734104887,-0.1168992445,0.0252764039,-0.0828567669,-0.0173481982,-0.0107668489,0.1124368906,-0.1344866902,-0.0536946505,-0.0220606588,0.0351102985,-0.1282403171,-0.1461633742,-0.024913257,0.0763703063,-0.0508880801,0.0116102947,-0.0857221484,-0.0163526628,-0.2105137557,-0.1505230069,0.0112405308,-0.1063899919,0.0120830853,-0.2042726874,0.1591279358,-0.1329040676,-0.0310604069,0.0375723355,-0.1192767397,-0.0690025166,0.0250304155,0.0860451236,0.0538945086,0.1038018987,0.0212503616,-0.0789496601,-0.1213710979,0.0332948975,0.0099707199,0.055810187,-0.0458189547,0.0297045894,-0.1087476686,0.0396476835,-0.1326255798,0.1692067236,-0.0150693292,0.0017948451,-0.1331303865,0.1324654222,0.1581617445,0.0689631104,0.1668216437,0.0949545726,0.2039146125,-0.0883831382,-0.0544124953,-0.0221794359,-0.0698550195,-0.1593735069,0.0440250188,0.1042791381,-0.0405841172,-0.0173516441,0.0163081735,-0.1720478535,0.2208892405,0.0044426722,-0.0811992809]],"hackathon_name":"IC Hack 17","index":245,"project_description":"File sharing, made easy.Demo GIFWe found sending files to people just next to you was more complicated than it needed to be! We realised that physical proximity didn't mean digital proximity - two people standing side-by-side might find it easy to talk verbally to one another, but their devices certainly wouldn't. Differing networks and differing operating systems make it difficult for devices that have had no prior communication to exchange data with one another.We wanted file-sharing between devices close to each other to be as seamless as two people talking to each other. This meant no messing around with email, or Google Drive, or anything that required the user to perform multiple steps.With FileBucket, file sharing is as easy as visiting the web-app online. The host, using his mobile phone, scans a QR code on each of the users' screens to form a group for file sharing. Each participant is automatically joined into the same group and is able to upload files to a shared 'bucket', accessible to everyone in the group.Once a sharing session is started, every participant gets access to the files until the host ends the session. Once ended, all files are emptied from the bucket.All without the need of any passwords or prior registration!HTML5 and JavaScript was used for the front-facing portion of the web-app, including QR code generation and drag-and-drop file upload. Ajax was used to exchange data between the client and the server asynchronously. We also used jQuery and Bootstrap.The server was built with Node.js, Express and with MySQL as a backing database. The server manages active connections between clients, and negotiates the establishment of connections to new clients when their unique QR code is scanned. Apart from Ajax requests, we also made use of the Pusher API to provide realtime notifications to the client on the state of the bucket, including whether new files have been delivered or when the bucket has been closed.The scanner application was written in Java, for the Android platform. With the app, we are able to initiate connections between users, remove members and monitor the number of members in the group.We deliberated for some time on the best way to make the experience seamless for the user. We experimented with passphrases, QR codes and even NFC tags to identify the two endpoints of a file transfer.We made file sharing much more effortless and seamless! (We hope!)We learned to use the Pusher API and some members of the team picked up Node.js and Express for server-side development.We want to explore ways to make transferring information even easier for users who use FileBucket often to share files with other people or even across their own devices. We think NFC tags could provide a one-tap way to seamlessly identify devices.IC Hack 17Raymond Tan\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:55 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"FileBucket","project_tags":["node.js","html5","express.js","ajax","pusher","css3","bootstrap","jquery"],"project_url":"https:\/\/devpost.com\/software\/bucket-ub9jzq","keywords":null},{"level_0":246,"hack_vector":[[0.1567137092,-0.1136392057,-0.0295706298,0.0349487923,-0.0078618908,0.1217486858,0.2083914578,-0.0241749678,-0.0312743932,0.0010853942,0.0044451724,-0.0671611205,0.1427994967,-0.0577838309,0.0652029142,-0.0139579307,0.1885252446,-0.023221856,0.0407216549,0.1379064173,-0.2557504773,0.035117574,-0.0267974474,0.0055797594,0.1306676865,-0.0284101572,-0.0251234639,-0.1710983217,-0.0252394918,-0.0951962695,0.0799104869,-0.1238779202,0.02298248,-0.0799266025,-0.0193005875,-0.0383144543,0.1036768779,-0.1486194879,-0.0644139573,-0.0233198516,0.0534156375,-0.136078462,-0.1278353333,-0.0413559638,0.0721656531,-0.0437550731,-0.0024115676,-0.0865617841,-0.0178655554,-0.20185709,-0.1485514641,0.015420733,-0.1185763925,0.0268490463,-0.2126694471,0.164740473,-0.1377357394,-0.0355795324,0.0321997367,-0.1120287329,-0.079432115,0.0241360683,0.0667783841,0.0301886071,0.1037882715,0.0263336543,-0.1021669358,-0.112165153,0.0250711404,0.0277612414,0.0685393959,-0.0464919247,0.0265909806,-0.1148128808,0.0338538513,-0.1281570792,0.1628004611,-0.0045521357,-0.0023286557,-0.1242327169,0.112648733,0.1419998258,0.0524223968,0.1615253985,0.1112120375,0.2137189806,-0.0835089087,-0.0387494378,-0.0184553005,-0.0574943349,-0.1417342424,0.0622072518,0.1047185436,-0.0424795933,-0.0235330407,0.0183811225,-0.1639135629,0.2281271815,0.002320006,-0.0546425618]],"hackathon_name":"IC Hack 17","index":246,"project_description":"Making learning as addictive as gamesWith accelerating technological progress and globalisation, it has become increasingly important to learn new skills throughout life, and to be more aware of other cultures. For the great promise of technology to be shared more equitably throughout the world we need a new solution. Despite a massive increase in availability of fantastic online courses, there has not been a course successful in engaging a large audience. Through gesture tracking with Kinect, fun art and an engaging story line, our project is an experiment in making learning as addictive as games!Kinecting the world is a multiplayer language learning game that comes with training and game mode. In training mode the player(s) can teach themselves Chinese by saying \u201cTranslate <English word\/sentence>\u201d, after which the recognised word is translated to Simplified Chinese. On the screen the player sees himself in the video stream from the Kinect with the translated Chinese symbols overlaid on top. By extending the hand towards the screen each player can trace the Chinese characters. Traces of more than one player are displayed in different brush colours. At any point through the game, the Chinese characters and brush strokes can be cleared by saying \u201cCancel\u201d.\nIn game mode the player follows a both addictive and instructive story line that will teach some basic Chinese characters while the player fights his way from level to level to find the evil monster that has taken over Queen\u2019s Tower (an iconic structure at Imperial College London).We built it using C#. We use the Kinect SDK for body tracking and to record colour images and sound. The sound is converted to text and then translated to Simplified Chinese using the Bing Speech API and Text Translator API as part of Microsoft\u2019s Cognitive Services.We faced many challenges. Some of them include realising that the J4K library doesn't support audio streaming... so 8 hours in, we had to scrap the old program and restart with C# instead of Java. Another challenge was that C# was a completely new programming language for 3 of the members.None of us knew each other before we formed the team during the hackathon and we all come from different discipline\/university\/year and we are proud that we got a fun working project completed essentially under 16 hours. In addition the video demoing the storyline for the Kinect game was made in PowerPoint.Majority of us learned a new programming language and how pair-programming can improve efficiency. We also learned that it is possible to work 24 hours straight.A lot of effort went into the making both the storyline and the video for the game. Incorporating the storyline with different levels, whilst Trump being a protagonist would further enhance the already fun learning experience.IC Hack 17Shiny Ranjan\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:17 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Kinecting the World","project_tags":["kinect","c#"],"project_url":"https:\/\/devpost.com\/software\/colorbasics","keywords":"chinese,player,game,new,kinect,mode,storyline,different,programming,translated,fun,characters,video,world,learning,learned,hours,language,making,simplified"},{"level_0":247,"hack_vector":[[0.1445697546,-0.0810438022,-0.0328222215,0.0565068536,-0.0172499362,0.1416303962,0.1881957799,-0.0291422494,-0.0266482588,-0.0263076536,0.0206652861,-0.0799832791,0.1442874372,-0.0685529187,0.0595882609,-0.0084902104,0.1949242651,-0.0015656435,0.0579800345,0.1174493805,-0.2239688635,0.0339811333,-0.0599179864,-0.0048153359,0.0891627669,-0.0349883288,-0.0441267826,-0.1708585173,-0.0473678261,-0.0875808001,0.0726262033,-0.096639663,0.040235322,-0.075877741,-0.0120805651,0.0019910326,0.1267601997,-0.1268051863,-0.0509703942,0.0011246792,0.0675496235,-0.1203606278,-0.1708273888,-0.0138724763,0.0623048693,-0.0556604192,0.0253784098,-0.0924878418,-0.0246590711,-0.2274225652,-0.1591789573,0.036975801,-0.1008805335,0.0211126357,-0.2103156894,0.1429248005,-0.1287590265,-0.0269626696,0.0494253412,-0.101899147,-0.0736328438,0.0254712179,0.0783302411,0.0306344777,0.1153429523,0.0191433486,-0.0837352127,-0.1208857968,0.0150101921,0.0132748401,0.059144143,-0.0361237824,0.0000026479,-0.1248982623,0.031779781,-0.0998278186,0.1979830563,0.0108559672,0.0046168361,-0.1431277543,0.1047932208,0.1531123668,0.0497145355,0.1512380242,0.1117284894,0.2149995267,-0.0763587579,-0.0564835742,-0.0176942367,-0.0861373842,-0.1458446681,0.0621856153,0.0914100483,-0.0412145481,-0.0157217495,-0.0062105805,-0.1625972092,0.2550927699,0.0046319831,-0.0757405236]],"hackathon_name":"IC Hack 17","index":247,"project_description":"An Andoid app that user the Pusher API to track the number of people also using the app the same time as you.I have never used an API before so I wanted to give it a go.So I thought it would be interesting to have a live count of online users.It took a lot of help from the Pusher team as there were problems with getting android studio to work with the pusher API. But once that was set up, it was just a matter of implementing logic to provide the app functionality.I had a lot of problems trying to get the API to work with android studio and connect to the channel.As I said I have not used an API before so I was happy just to get it working.I learned a lot about how API's work and how to change states of an app based on a user input.In my spare time around university I will try to expand on the app and have it on the google play store eventually.IC Hack 17Cavan Scoffin-Thomas\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:57 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"GoLive","project_tags":["android-studio"],"project_url":"https:\/\/devpost.com\/software\/golive","keywords":"api,work,app,lot,android,get,problems,pusher,studio,used,channel,connect,around,input,implementing,help,happy,google,based,go"},{"level_0":248,"hack_vector":[[0.1617591977,-0.1477389932,-0.0133250905,0.0697601363,-0.022832809,0.1542764008,0.1865668446,-0.0520045124,-0.0218132101,-0.0139148589,0.0052753389,-0.021503374,0.1355467886,-0.0681077093,0.0402761288,0.034254089,0.2378167361,0.0237784218,0.0538328215,0.096772112,-0.2304234952,0.034217041,-0.0503243394,-0.0405722372,0.1438449323,-0.0185895916,-0.0520974845,-0.2006632537,-0.005425124,-0.0859021619,0.0548089147,-0.1317119896,0.0596922264,-0.08990971,-0.0371303745,-0.0150398025,0.1188022345,-0.1363944709,-0.044149138,0.0293104742,0.0453353599,-0.1590518355,-0.1721214503,-0.0440613851,-0.0031355552,-0.0499758311,0.0135815078,-0.041111026,-0.0297137126,-0.1927026361,-0.1003489941,0.0319839753,-0.1149449944,-0.0311587062,-0.1427375376,0.1661102772,-0.1452356428,0.0256259758,0.0106980046,-0.0316168219,-0.0568830408,0.0350042135,0.0641800612,0.0725430846,0.1170204878,-0.0076087764,-0.1399858892,-0.1419710666,0.0175816901,0.0209181625,0.0774840489,-0.0474653058,0.0235861614,-0.1386307925,-0.0158309359,-0.0946907103,0.1980604082,0.0153355673,0.0560416579,-0.1418030113,0.1253363341,0.1527019739,0.0495174453,0.1545401812,0.1312893927,0.1889444292,-0.113498047,0.0049318615,0.0094581563,-0.0830985904,-0.1041653454,0.0835868195,0.0703774095,-0.0194163229,0.0422845669,-0.0526684448,-0.1158229038,0.1942860931,0.0466198362,-0.0709546357]],"hackathon_name":"IC Hack 17","index":248,"project_description":"Show a continous news feed with \"typed\" text in the style of the old BBC World News \"breakfillers\"BBC World News used to show cool \"breakfillers\" in-between programmes. These consisted of news bites, global weather forecasts, world time checks and so on.It does the news bit... Started work on implementing the weather but didn't have time.Blood, sweat and tears. Mostly blood.Ajax API requestsIC Hack 17Ranabir Dutta\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:58 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"News Breakfiller","project_tags":["javascript","html5","css3","github","openweathermap","ajax","jquery"],"project_url":"https:\/\/devpost.com\/software\/news-break-filler","keywords":"news,world,bbc,weather,time,blood,started,breakfillers,couple,hard,half,global,forecasts,filler,everything,else,challenges,cool,consisted,checks"},{"level_0":249,"hack_vector":[[0.1475512534,-0.0934947208,-0.0275414009,0.0471044928,-0.0200673435,0.1441074759,0.2176263034,-0.0337610133,-0.0345622934,0.0091456277,0.017986428,-0.0611135997,0.1370452791,-0.0854241177,0.0633162931,0.0103842122,0.2260573059,-0.0077663483,0.0439420268,0.1106187552,-0.2318997532,0.0407410897,-0.0496265888,-0.0254967585,0.1232056245,-0.0193746425,-0.0374940522,-0.1953094602,-0.0105978167,-0.0702888817,0.0704192966,-0.1244263276,0.0451963022,-0.0999737009,-0.0396070965,0.0034227197,0.1243660301,-0.1325602233,-0.0468528382,0.0031058972,0.0373090245,-0.1440601945,-0.1622600108,-0.0194072947,0.0605854839,-0.0402118973,0.0122012869,-0.0770293847,-0.0131300306,-0.2137295753,-0.1235302389,0.0170637406,-0.1068271995,0.0091432808,-0.1732848138,0.1507178545,-0.1474706829,-0.0017248461,0.0188427828,-0.082709752,-0.0580001958,0.0290254671,0.0992674679,0.0575688332,0.1244358644,-0.0131964749,-0.0963176638,-0.1275069863,0.040035516,0.0209701285,0.0692281872,-0.0407360271,0.0171677768,-0.1313254684,0.013555604,-0.1304990649,0.1848758012,0.0116178375,0.032698296,-0.1366565078,0.1409159303,0.1519374698,0.0737541616,0.1634786576,0.0980255976,0.1940065771,-0.0966485739,-0.0245255195,-0.0044264556,-0.0929287449,-0.1488547772,0.0532874204,0.0853185877,-0.0283021796,0.0177746769,0.0074166302,-0.1310723573,0.1979808807,0.030211404,-0.0747643188]],"hackathon_name":"IC Hack 17","index":249,"project_description":"AI powered DatingTinder with a twist.Users create an account and upload a picture to our database.  Microsoft API analyses this picture to give a list of emotions displayed.  These emotions are compared to other user pictures in 8-dimensional vector space: the closest 3 points are automatically connected as matches -- the furthest point away is also connected as a wildcard match.\nConversations are analysed on the fly with the Microsoft sentiment API to determine how likely a date is.Ionic framework for UI and AJAX, Python and flask for server and logic, firebase for database.Novice programmers making our very first mobile app.  Encountered some trouble in organising the database and integrating our functioning algorithms into a sleek UI,How to manage databases, How to code in generalExploration of accuracy of matching algorithm and possible UI improvements and bug fixesIC Hack 17hisham Aty\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:57 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Ratio","project_tags":["ionic","python","flask","firebase","javascript","angular.js","numpy","opencv","json","machine-learning","oauth","pandas"],"project_url":"https:\/\/devpost.com\/software\/ratio-eoymth","keywords":"database,ui,connected,picture,microsoft,emotions,api,first,firebase,exploration,encountered,fixes,flask,displayed,dimensional,determine,date,fly,databases,framework"},{"level_0":250,"hack_vector":[[0.1421780884,-0.097306326,-0.0332284756,0.0239951424,-0.0218620934,0.112883389,0.1906861812,-0.0168297421,-0.0085257171,-0.0268374458,0.0182925873,-0.0730823278,0.1323670894,-0.0668685734,0.0632824525,0.0003976175,0.1999541819,-0.0025456704,0.0345956162,0.1434709281,-0.2488129139,0.0143332109,-0.0424418487,-0.0161808748,0.0961710513,-0.0218044147,-0.0276431795,-0.1641342044,-0.0193127561,-0.1095542535,0.0412347019,-0.1166522354,0.0143519063,-0.0810176507,0.0055194912,-0.0256246589,0.1032067686,-0.153847605,-0.0812827572,-0.0124673257,0.0400323905,-0.1190954894,-0.1364446431,-0.0378136188,0.063507542,-0.0778494403,0.0113754161,-0.0819790289,-0.0293858536,-0.2050869465,-0.162473008,0.0221012458,-0.1018168107,-0.0045355842,-0.2052873373,0.1785336286,-0.1079133451,-0.0370890647,0.0308036096,-0.1223213524,-0.074717924,0.0227650367,0.0728481859,0.0570097007,0.1100975126,0.0335855186,-0.105021134,-0.1173146069,0.022678161,0.0204202756,0.0656093955,-0.0474726781,0.0236579664,-0.1144070253,0.0497166738,-0.1194525883,0.1628244817,-0.0031577274,-0.0114855524,-0.1356823295,0.1163274273,0.1613486409,0.0598948747,0.1592316926,0.0926014483,0.2059151828,-0.0899022371,-0.0666636005,-0.0310105328,-0.0554642566,-0.1434786916,0.0524290688,0.1073146239,-0.0476489626,-0.0208915062,0.0111502875,-0.180565998,0.2485114485,-0.0169666931,-0.0822362676]],"hackathon_name":"IC Hack 17","index":250,"project_description":"Meet your friends from abroad, while exploring new countries with budget in mind.Flights selection for friends in Paris and OsloEvery member of our team is an international student, so we have a lot of friends abroad and some of us are even in a long distance relationship. We are trying to see each other often, but we have a tight budget and we can't afford to spend a lot of money on flights. Fortunately, we have noticed that it is sometimes cheaper to take advantage of airline sales and get flights to another city rather than fly to see each other at our respective homes. This is awesome because we can not only see each other cheaply but also discover new cities and meet some wonderful people.Meet In The Middle is the only existing web application that allows you to browse flights to any destination from multiple starting points. So if you are here in London and your friend is back in Bratislava, you enter the 2 airports of origin and our web app offers you the selection of the cheapest flights that allow you to meet in different cities around the world. The flights have approximately matching arrival times, so you don't spend too much time on your own.We used skyscanner API to get the flight schedules and their prices. We process this information in our Python backend and show it nicely on frontend build using jquery and bulma css framework. We also use Google Maps API heavily, not only to conveniently plot the flight routes, but also to receive autocomplete or stock pictures to beautify our UI.We were having big problems with rate limiting on Skyscanner API, which is particularly strict on free account. Otherwise we were having trouble limiting the number of queries to Google Maps API, which is terribly slow.We are happy we were able to finish this hack in short time (we only had 16 hours, because we started of with a different idea that proved itself infeasible). Moreover, we feel that our product actually solves a real problem we were having and we are hoping to use it over the next years.We accumulated a bit of spaghetti code during the hackathon, so we need to do some refactoring to make the code maintainable. We are hoping to keep it online for anyone who wants to use it, even if it is only the 5 of us.IC Hack 17Backend python, Skyscanner APIbackend, python, flask, skyscanner APIMartin Zlocha\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:56 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Meet In The Middle","project_tags":["flask","python","google-maps","skyscanner","azure","jquery","javascript"],"project_url":"https:\/\/devpost.com\/software\/meet-in-the-middle","keywords":null},{"level_0":251,"hack_vector":[[0.1529474705,-0.1081452817,-0.0282426849,0.064310275,-0.0273586158,0.1470455378,0.1893577427,-0.0324094072,-0.020278601,-0.0181321241,0.0148683172,-0.0571908318,0.1485464573,-0.06351953,0.0564669259,-0.0000462919,0.2072781622,-0.0067104916,0.0480019115,0.1219422892,-0.245107457,0.0156179052,-0.042950999,-0.0070428983,0.1198365912,-0.0242205113,-0.0332288034,-0.1680927426,-0.0180875584,-0.095521383,0.0621422306,-0.1101456881,0.0280041061,-0.0655711368,-0.0171408821,-0.004563354,0.1219934896,-0.144552052,-0.0555352941,0.0063234749,0.0606693737,-0.1140344292,-0.1454880089,-0.0232976526,0.0451317057,-0.0589735955,0.017564429,-0.0778538287,-0.0120227886,-0.2198622078,-0.1396750361,0.0259629786,-0.1075082868,0.005890558,-0.2013696134,0.1550938487,-0.1314934045,-0.0263464786,0.0344882458,-0.0905678347,-0.0677913949,0.0264976304,0.0752929598,0.0482295528,0.1220057681,0.0196565185,-0.0941245258,-0.1339837164,0.0148291551,0.0154062696,0.059286233,-0.0369501114,0.0160832331,-0.1197595894,0.0181556605,-0.1091074869,0.1926121712,0.0078586526,0.0103456965,-0.1448260695,0.1120350882,0.1626671106,0.0356723741,0.1630165726,0.1131703034,0.2079952657,-0.0952018276,-0.0349745564,-0.0317951143,-0.0760766789,-0.134350732,0.0735225752,0.0860705823,-0.0303766076,-0.0009464295,0.0061960672,-0.1559016705,0.2464303523,0.0179833956,-0.0722562075]],"hackathon_name":"IC Hack 17","index":251,"project_description":"Track your habits and progress!We know how hard it is to start a new habit and to keep track of all the progress, so we thought of a way to save time and get motivated along the way.There are long term habits and daily tasks to be set by the user and checked if accomplished. The app will show a chart based on them, and save everything in a database so that the progress can be checked later.We used android studio, coded in java and xml.As we made our first Android app ever, we spent more time than we expected to get used to android studio and to git.It's our first hackathon and we learnt a lot!Improved performance and more charts based on every habit.IC Hack 17Irina Danes\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:58 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Habit-o","project_tags":["android-studio","java","xml"],"project_url":"https:\/\/devpost.com\/software\/habit-o","keywords":"android,habit,checked,based,progress,save,first,get,studio,app,time,way,used,ever,git,expected,everything,habits,every,xml"},{"level_0":252,"hack_vector":[[0.1413667202,-0.1006141603,-0.0310408026,0.0610564724,-0.0237436499,0.1364614815,0.1988620013,-0.0218286682,-0.0315337293,-0.0219708122,0.0079032592,-0.0598259084,0.1514541805,-0.0633264482,0.073905848,-0.0078245932,0.198076427,-0.0097302506,0.0452303737,0.1273110956,-0.2386433929,0.0241043475,-0.0467551686,-0.009858585,0.1182323992,-0.0283899233,-0.0393695608,-0.1701932698,-0.0398629159,-0.0804627389,0.0684532747,-0.1085506827,0.0272993147,-0.0727702901,-0.0260461923,-0.0033740487,0.1227049157,-0.1332889944,-0.0540688969,0.0140259666,0.0611938536,-0.1275847852,-0.1533303559,-0.0220418535,0.0570151545,-0.0546543337,0.0177101605,-0.0864579827,-0.0213322137,-0.2209612727,-0.1393900961,0.0153290918,-0.105929628,0.0144500658,-0.2018589526,0.163539961,-0.1389764696,-0.0136436652,0.0294227004,-0.0989584774,-0.0801855028,0.0275873542,0.0685903579,0.0377560817,0.1209707335,0.0166526008,-0.0954575762,-0.1278317273,0.0221910737,0.0132169146,0.0536997281,-0.0388658009,0.0070668533,-0.1200619042,0.0212838836,-0.1020544469,0.1925324053,0.0001720702,0.0025716582,-0.1375126541,0.1123385206,0.1587529629,0.0575783066,0.150360316,0.1130639985,0.2121298611,-0.0843142048,-0.033812426,-0.006943739,-0.0821413696,-0.1519833058,0.0665731654,0.0987499133,-0.0304320492,-0.0085082697,-0.0052011753,-0.1574870348,0.243211925,0.0172147229,-0.0568241067]],"hackathon_name":"IC Hack 17","index":252,"project_description":"The Command Line Assistant for UbuntuWe were inspired by how irritating the Microsoft Office Clippy was known to be. We wanted to make a better one, for a purpose that served our needs.It uses Microsoft's Q and A API to intelligently address queries to do with Linux. It also creates a virtual CLI to monitor input errors and assist the user with learning the shell.We used a Java for the core of our program and C++ to interface with the CLI. We also used python on an apache server to interface with the APIIt was very frustrating, hence the plethora of languages. Almost everything in the project came with a hurdle. We had to make a lot of botchy workarounds to get to make it within 24hr time limit.Actually finishing a project andWe learnt a lot. Not onlyWe want to make it more intelligent. We only got around to monitoring the CLI input in the past few hours and so we didn't have much time to experiment with that. It would be nice to build upon that.IC Hack 17I worked on the front endTyler Farghly\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:59 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"CLIppy","project_tags":["python","php","java","c++"],"project_url":"https:\/\/devpost.com\/software\/clippy-the-command-line-assistant-for-ubuntu","keywords":"make,cli,used,clippy,lot,time,project,microsoft,api,input,also,interface,got,get,frustrating,finishing,would,hence,everything,hours"},{"level_0":253,"hack_vector":[[0.142312631,-0.1061728746,-0.0218669921,0.0354287475,-0.0123037631,0.1286315769,0.2196470499,-0.0213697013,-0.0384296179,-0.0020874466,0.0074657351,-0.0581944846,0.137277469,-0.0727766007,0.0607664362,0.0135483732,0.2185192108,-0.0175968166,0.0417819209,0.1328136772,-0.2437267303,0.0492992848,-0.0376660787,-0.0176332612,0.1269762069,-0.026403157,-0.0378751159,-0.1794150323,-0.0123224668,-0.0851336345,0.0619126409,-0.1308832169,0.0364363417,-0.0815669075,-0.0175230447,-0.0214039553,0.1207370609,-0.137974605,-0.0500836149,-0.0090849409,0.0442273691,-0.158842206,-0.1546864063,-0.0409692749,0.054825861,-0.0423801243,-0.0003284139,-0.078849934,-0.0105359918,-0.1976074278,-0.1231909394,0.0169921555,-0.1113366857,0.0131936921,-0.1991538554,0.151194334,-0.1548055857,-0.0152345737,0.0317151584,-0.0984701514,-0.0707360134,0.0349731222,0.0816867501,0.0493534654,0.1103547364,0.0086554009,-0.101225704,-0.1341992915,0.0391859226,0.0272311606,0.0734762996,-0.0516041517,0.0270692818,-0.1200932115,0.0212341137,-0.1393388212,0.1598991305,-0.0048932172,0.0228688288,-0.1237329394,0.1248929277,0.1463696659,0.0670339391,0.1677385867,0.1084718481,0.1896225065,-0.1076086462,-0.0293331854,-0.010630114,-0.0841841325,-0.1437963843,0.0538473055,0.0928102285,-0.0432745293,0.0084785167,0.0052760821,-0.1573273093,0.2069252431,0.0212258995,-0.0581235066]],"hackathon_name":"IC Hack 17","index":253,"project_description":"A simulator to evolve Neural Networks to create the ultimate microbeWe decided to build a microbe simulator controlled by neural networks that could fight and consume food to control their environment. Each strain of microbe is given a random colour initially that all of its children receive to show the dominant strain after the simulation.Each microbe has a series of vision inputs which act like ray scanners. They have a 90 degree field of view which acts as the input to the neural network. If an object is seen in the way of the ray scanner then the input assigned to that ray scanner is one, otherwise it is 0.The neural network then evolves through a genetic algorithm we implemented to find and search for food. The output of the neural network is speed and direction of the microbe.All code was implemented by hand in java with no additional libraries apart from use of the built in Java awt rendering library.IC Hack 17I developed the neural network and the genetic algorithm for making the microbe produce behaviour and evolve. They were developed in Java.Chris Battarbee\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:59 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Microbe Evolution Arena","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/microbe-evolution-arena","keywords":null},{"level_0":254,"hack_vector":[[0.1446217,-0.1058065966,-0.0223397277,0.0553257875,-0.0226778109,0.1430366188,0.1974155605,-0.0281837285,-0.0298532899,-0.0147263864,0.0047878926,-0.0513635725,0.1338567436,-0.0722628161,0.0540445782,0.0243658852,0.2281685174,0.0148909921,0.0508871265,0.1194729656,-0.2366281897,0.0325515494,-0.0377814211,-0.0392027944,0.1121037975,-0.0199784245,-0.0443924256,-0.1880119294,-0.0058713094,-0.0957808569,0.0489568487,-0.1196447611,0.0491065755,-0.0834727585,-0.0183912367,-0.0146834515,0.1240018904,-0.1399287134,-0.0490793176,0.0216658376,0.0486797877,-0.1457950622,-0.1683093607,-0.0336643234,0.0401700959,-0.047883153,0.0217729136,-0.0692764595,-0.0125373676,-0.2064425647,-0.1221995279,0.0235326234,-0.1095237583,-0.0179829393,-0.1768142432,0.1630591154,-0.1350264102,0.0061132386,0.0357529968,-0.0668203831,-0.0605856292,0.0241870452,0.0759342313,0.0591562055,0.1265906841,0.0036949641,-0.1047916263,-0.1421166956,0.0329989605,0.0186352115,0.0798314586,-0.0485276394,0.0021192587,-0.1331717223,0.0088413935,-0.1209304035,0.1796512008,0.0176486615,0.0333751515,-0.1378903538,0.1269384623,0.1592861861,0.0572586805,0.166058749,0.1262770146,0.1957391202,-0.1018001288,-0.0107209887,-0.008866,-0.0833122879,-0.1372514218,0.0633956194,0.0879458338,-0.0335606225,0.0144740036,-0.0173901822,-0.1474003196,0.2124243975,0.0280569848,-0.0727615729]],"hackathon_name":"IC Hack 17","index":254,"project_description":"Spent 10 minutes trying to split the bill? Wondering if everyone paid fairly? Fret not, Split is here!Too much time wasted after meals with friends trying to split the bill.The app captures a image of the receipt and uses Microsoft's OCR to generate a list of the items ordered with their pricing. The user taps the items he has ordered and the amount he pays is returned.Using Android studio,It was difficult to merge the available API from Microsoft into our programme.Obtained a workable final product.Basics of app building and using available API to enhance performanceAdd payment options, flesh out GUIIC Hack 17Frank Qu\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 07:00 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Split","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/split-d6l2zk","keywords":"available,using,items,microsoft,api,app,ordered,split,generate,flesh,friends,workable,gui,image,enhance,inspiration,final,captures,difficult,challenges"},{"level_0":255,"hack_vector":[[0.1372824311,-0.079644084,-0.0279985499,0.0468681455,-0.0076429741,0.1522220373,0.2009144574,-0.0423476025,-0.0261965878,0.0052794483,0.0247820877,-0.101847522,0.1549779773,-0.0818979889,0.0704949424,-0.0151123386,0.2181442678,-0.001080261,0.0475487411,0.0997761339,-0.2193286121,0.0724685118,-0.0536814965,-0.0113235172,0.110039182,-0.0304441079,-0.0340526849,-0.2001788467,-0.0368626565,-0.0625836104,0.0895232633,-0.141942516,0.0431094356,-0.0985171497,-0.03231683,-0.005337467,0.126381442,-0.1270456165,-0.0550463833,-0.0219992567,0.0347688794,-0.1528625041,-0.1628317088,-0.015877435,0.0649661198,-0.0276735164,0.014475978,-0.0816257149,-0.0312379673,-0.1940864772,-0.150838092,0.0147130648,-0.1005073786,0.0293655191,-0.1919564605,0.1393598467,-0.1276778281,-0.0224572103,0.0363513194,-0.107199356,-0.077076979,0.0155181391,0.1018428057,0.0491589308,0.0987224653,0.0187525041,-0.0744423494,-0.1218219325,0.0325246304,0.0300418418,0.0790823773,-0.0552473143,0.0520657972,-0.1195917055,0.0434287637,-0.1336337328,0.1806475073,0.0015362557,0.0176183302,-0.1184960008,0.1410679221,0.1495945752,0.079688713,0.1576770693,0.0867910236,0.1741718203,-0.0924575701,-0.0587926582,-0.0044208881,-0.0848648995,-0.1423379183,0.038234394,0.0799132958,-0.0537235364,0.0142804319,0.0065290285,-0.1430555433,0.2241551876,0.0088351546,-0.0890667588]],"hackathon_name":"IC Hack 17","index":255,"project_description":"A mobile app that intelligently recommends movies based on facebook profile data.One night when deciding what movie to watch, Andrew simultaneously was stalking a girl on Facebook when he found out that they had liked similar movies. It prompted us to create an app that would use your Facebook profile data to recommend movies.The app fetches data from your Facebook profile, and sends that data to a server that runs a sparse denoising auto-encoder. The trained auto-encoder then sends a list of recommended movies based on the liked Facebook movies. Furthermore movies can be browsed on based on genre\/decade\/rating on the app through the TMBD-api. It provides a clear swip-card interface that allows users to bookmark suggested movies or ignore it.-\nUsing react-native we created a front-end of the app. The Facebook-sdk allowed us to collect liked movies-titles from facebook. Then using TMBD we fetched the remaining details of the movie. The app provides two main functionality. The movies liked facebook are sent to our server, written in python, which runs a denoising auto-encoder with the use of TenssorFlowm and returns recommended movies based on feature vectors. The second functionality is to  browse more movies based on genre\/decade\/rating on the app through the TMBD-api. The user can save movies he or she is interested in watching from the recommendations or searches.-setting up facebook SDK\n-causing public apis to be shut down by requesting too much data. Hence had to find alternative APIs. \n-implementing front-end logic (fetching\/pasing\/unifing data from various APIs)\n-implementing all of back end (scrapping django, and rewriting an entire server in python, implementing promises and websocket)\n-implementation and training of denoising auto-encoder.-clean ui\n-the denoising auto-encoder algorithm was accurately implemented\n-successfully re-wrote a python server-Setting up backend\n-fetching and parsing data from several public apis-optimized backend\n-professional apisIC Hack 17I worked on backend.I worked on the front-end and created the design. Also worked with: reducers, navigation, api data fetching, components creation (bookmarks, etc.)I worked on frontendI worked on the backend, the server and the machine learning algorithm used in our appShashwat Dalal\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 07:02 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Movie Matcher","project_tags":["react-native","django","python","javascript","pandas","numpy","facebook-graph"],"project_url":"https:\/\/devpost.com\/software\/movie-matcher","keywords":"movies,facebook,data,app,auto,apis,encoder,denoising,based,liked,server,end,implementing,python,movie,tmbd,sends,decade,runs,genre"},{"level_0":256,"hack_vector":[[0.1357149482,-0.0890210345,-0.0357847288,0.029703714,-0.0142963743,0.1116381735,0.1980312616,-0.006908393,-0.0275554042,0.0007228256,0.0222286284,-0.0899188519,0.14974913,-0.0760120973,0.0826785564,-0.0026090061,0.1843874305,-0.0183254536,0.0354910754,0.1323132068,-0.2423186153,0.0278660133,-0.0502914637,-0.0085175866,0.1013329923,-0.0312926732,-0.0252476018,-0.1712621301,-0.027262114,-0.0848518163,0.0673154816,-0.1110775173,0.0176580753,-0.0862466395,-0.0143887131,-0.0036805666,0.099682197,-0.1469433308,-0.0700249374,-0.0153665189,0.0376850516,-0.1234414354,-0.1439606249,-0.0138006359,0.0790793449,-0.0550881624,0.0127109708,-0.0961438939,-0.0174640492,-0.2116711438,-0.1665151119,0.0047156294,-0.1041660905,0.0187093355,-0.2103248984,0.161787793,-0.1230592355,-0.0292498656,0.0332630686,-0.1280774325,-0.0737971291,0.0319371074,0.0773210898,0.0616106465,0.1126392707,0.0218201,-0.0833469927,-0.1137556583,0.0276978035,-0.0006286116,0.0567983948,-0.0466984399,0.0177816544,-0.1062466502,0.0527428053,-0.1268362552,0.1766689867,-0.0096824421,-0.0073725521,-0.1318202466,0.1313384324,0.1605292112,0.0738767236,0.1509889215,0.084566541,0.2138804495,-0.0748197287,-0.0482112169,-0.0168459713,-0.0680321231,-0.1503861099,0.0483017415,0.1072545573,-0.0466005653,-0.013802385,0.0179202054,-0.1775444597,0.2393948734,-0.0041715619,-0.0734717548]],"hackathon_name":"IC Hack 17","index":256,"project_description":"GlobeScope gives you the initial inspiration to explore the world.globescope logoPlatforms like Expedia and Skyscanner provide easy to use access to flights and package holidays, and they're great for finding good prices. What they lack is the interface to provide inspiration, and the ability to quickly explore different places around the world.GlobeScope is a web-app that allows the user to quickly find information about a destination, like flight prices, general description, photos, weather reports and so on. The app returns the data quickly, and the interface is responsive. This allows the user to efficiently explore different areas and find inspiration by hopping from place to place.The web-app is a primarily front end application. The site was built in HTML, CSS and JavaScript. All the APIs were called using jQuery in JavaScript. We needed a responsive and fluid globe with a map overlay, to do this we used and open source JavaScript library called Cesium, and accessed this with Node.JS.A large problem we had was synchronisation of API functions. In some functions, we needed to pass one or more API calls, into another API call. Simply writing line by line would not have given the AJAX requests enough time to return their responses. To allow time for this, we used a combination of chaining callback functions, and using 'promises' in JavaScript where appropriate. We also had to consider that sometimes, API requests do not come back successful, and we had to be ready to accept failed, or partial responses. The Expedia API, whilst containing very rich data, had a complex data structure which involved retrieving a 'LegID' from one area of the structure, and looking that ID up in another part.Being first years and in our first hackathon, we also found the division of tasks and merging of code an interesting challenge, sometimes we had performed unit testing that had passed, and later found that when the functions were chained together, they often had unexpected edge cases that we had to account for. This required good planning and prior agreements of what data and arguments we would be passing to each other.Only one of the members of our group had ever had experience with front end and web development. Within 2 days, the rest of us had learnt how to use HTML, CSS and JavaScript with jQuery and AJAX calls to make and process API requests, and render their results to the webpage. We were proud to produce a finished and smart product that works as designed.We learned about the challenges of delayed responses in AJAX requests, and how to handle them using chained callbacks and JavaScript promises. We also learned how to traverse JSON data structures to build objects and 'craft' the data that we required from them.GlobeScope could make use of far more APIs, in particular (if we were able to become reputable), using the TripAdvisor API, as it is only available to reviewed applicants or their API. This would enable us to not only return reviews of places, but find similar places to the destinations that the user is searching. We could also link the user's profile to Facebook or other social networks, and use big data algorithms to match their attributes to other user's search responses, and even more intelligently suggest places that the user might like to visit.If we had had a little more time, we would have incorporated package holidays from Expedia's API, as well as finding the most popular times of year to visit, to develop infographics of price changes throughout the year.IC Hack 17Rohan Pritchard\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:07 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"GlobeScope","project_tags":["javascript","jquery","node.js","html5","css","expedia","google-maps"],"project_url":"https:\/\/devpost.com\/software\/globescope","keywords":"api,data,javascript,user,use,also,using,responses,places,requests,would,functions,app,inspiration,time,quickly,like,expedia,find,learned"},{"level_0":257,"hack_vector":[[0.1382312477,-0.0690384656,-0.0331370085,0.0169449933,-0.0100054983,0.1248096973,0.2215468585,-0.0157717541,-0.0181885958,0.0070960708,0.0078628333,-0.0906355232,0.1179321334,-0.0699691921,0.0760034248,0.0141211087,0.2138344347,0.0025418098,0.0237100646,0.1258435845,-0.2332632691,0.0466675237,-0.0538046509,-0.0228757747,0.0931724682,-0.0138793904,-0.0217469055,-0.1935001463,-0.0291181467,-0.0810219496,0.0625421554,-0.1337532997,0.0365883671,-0.1167570725,-0.0247359835,-0.0067232801,0.1032067239,-0.1382289976,-0.0682066604,-0.0114080384,0.0121049425,-0.1507861912,-0.1415235549,-0.0329294056,0.0868575722,-0.0621023774,0.0058478783,-0.0858862996,-0.0350715145,-0.2055607438,-0.1440100521,-0.0043400279,-0.1009740531,0.0054973378,-0.1667432934,0.1560900062,-0.1275626421,-0.0268727578,0.0286781956,-0.1177225634,-0.0774253309,0.0215664078,0.0941908956,0.0463380963,0.1096516103,-0.002049831,-0.106265448,-0.1174884066,0.0557942204,0.0252611637,0.0667935237,-0.062970303,0.0281308535,-0.119452253,0.0384576432,-0.1545708627,0.1655955166,0.0041230833,0.0206922535,-0.1298610568,0.1416229606,0.153261587,0.0953461155,0.1583978832,0.0751488656,0.1869697124,-0.0874068812,-0.0319497921,-0.0014403424,-0.0867794603,-0.1629273146,0.0384880379,0.093613632,-0.0509794392,-0.0128616486,0.0286833271,-0.1612156481,0.2167562842,0.0001069573,-0.0839334056]],"hackathon_name":"IC Hack 17","index":257,"project_description":"Bringing positive news to the frontlineFlowchartNowadays, the headlines are filled with negativity. There is not a hint of hope in them. We decided to bring a change to headlines you encounter on a daily basis with this Alexa skill called Content.Google defines the word 'Content' as information made available by a website or other electronic medium.\nIt also defines it as a state of peaceful happiness. Our aim is to bring positive news articles forward and hence the name.Content provides positive headlines in various categories to you. It will also text you the link of the article if you are interested in further reading.We used the Bing Search API for Microsoft Azure Cognitive Services to obtain news headlines in 6 different categories (World News, Politics, Entertainment, Business, Sports and Technology). We then fed each headline into the Google Text Analytics API which assigned a sentiment score from -1 to 1 with -1 being highly negative and 1 being highly positive. When the user ask Alexa if there are any positive headlines in a particular category, a randomly selected rating with a sentiment score of 0.7 or higher will be read out by Alexa and if the user is interested in reading the news article, the user will receive a text from Alexa with the news article's link.The biggest challenge we faced was Google Text Analytics API assigning a positive rating to news headlines a human would consider highly negative. That is why the threshold of 0.7 was selected in order to ensure that highly positive headlines will be read outWe learnt use and deploy Azure and Google Cloud services. We learnt new programming languages like node.js and python overnight.Sentiment Analysis and Bing News Search API calls will converted into cron jobs so that they run daily. This allows us to keep the database up to dateIC Hack 17Worked on sentiment analysis and made API calls to obtain news headlines in the 'Politics' and 'World News' categoriesWorked on the Python scripts to populate the database with the latest headlines using the Bing Search APIWorked on the Python scripts to populate the database with the latest headlines using the Bing Search APIWorked on Amazon Dot - created the skills and back-end code in Node.js. Integrated Twilio.Rifad Lafir\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:01 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Content","project_tags":["azure","google-cloud","node.js","python","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/content","keywords":"news,headlines,positive,content,alexa,api,text,highly,google,sentiment,user,article,bring,interested,called,read,categories,defines,learnt,rating"},{"level_0":258,"hack_vector":[[0.1383144855,-0.144935295,-0.0051248632,0.0826924816,-0.0475725643,0.1542417109,0.1811058372,-0.0550144278,-0.0318011977,-0.032246314,0.0215839278,0.0236714985,0.1301284581,-0.0829810128,0.0211073346,0.0505398773,0.2647910416,0.0253022294,0.0543840118,0.0995741785,-0.2052736282,0.0154644707,-0.0393994227,-0.0663688555,0.1425673515,-0.0112655284,-0.0536119789,-0.1977671683,0.0160357039,-0.0804874897,0.0283613019,-0.12115556,0.0631895438,-0.0638047531,-0.0241738949,0.0029021886,0.1394510269,-0.116897516,-0.0202241614,0.074743785,0.0542624258,-0.1455203295,-0.1847754717,-0.0419256091,-0.0248392206,-0.0547934249,0.0400368869,-0.0186004974,-0.0323843509,-0.2015124112,-0.0603539236,0.0224489514,-0.0977224186,-0.0680757239,-0.1268117428,0.1500381529,-0.1409309953,0.0452324562,0.0015802131,0.0106967129,-0.0179497972,0.0283929333,0.060116142,0.0770753771,0.1408603638,-0.0302024502,-0.1274721771,-0.1580101699,0.0267799105,-0.0012099587,0.066840142,-0.0415599048,-0.0044905953,-0.14199844,-0.0483271219,-0.0894808397,0.1905639917,0.0249808542,0.0812915042,-0.1497354656,0.1367639154,0.1691303402,0.0178203136,0.1708709598,0.1406120658,0.1658164114,-0.1490357965,0.0323144794,-0.0025032868,-0.1068256423,-0.1051279753,0.0906227678,0.0527602024,0.011699887,0.0652742684,-0.0802304372,-0.0887793601,0.1580746472,0.0825402066,-0.0570879579]],"hackathon_name":"IC Hack 17","index":258,"project_description":"A website where to share university secrets! Access allowed only to students and academic peopleA website where to share university secret stories.Simple and easy to manage, written in NodeJShttps:\/\/github.com\/giuliojiang\/UniSecretsDeployed live at https:\/\/www.unisecrets.co.ukIC Hack 17Giulio Jiang\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:20 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"UniSecrets","project_tags":["javascript","html","python","shell","makefile","css","node.js","angular.js"],"project_url":"https:\/\/devpost.com\/software\/unisecrets","keywords":"unisecrets,https,www,nodejs,com,deployed,easy,github,giuliojiang,live,manage,secret,written,secrets,share,simple,stories,uk,uni,university"},{"level_0":259,"hack_vector":[[0.116610527,-0.0995811075,-0.0245262254,0.0258340519,-0.0196692087,0.13096039,0.2114140689,-0.0322194174,-0.0164682809,-0.0091595836,0.0299617238,-0.0592930168,0.1352625787,-0.0745571852,0.0570206605,0.0275515206,0.2405945361,0.0070696892,0.0346643738,0.1296897382,-0.2319714874,0.0511729345,-0.0375848897,-0.0385815129,0.1001844928,-0.0142008951,-0.0358350165,-0.1965572834,0.000675976,-0.0939469039,0.0593679361,-0.1347352266,0.0353778452,-0.0898799151,0.0007166776,-0.0138455993,0.1129646376,-0.1408556104,-0.0449840799,-0.0111179342,0.0229416639,-0.16681467,-0.1684299558,-0.0503849573,0.0587687567,-0.0459170602,0.0090569602,-0.0615176186,-0.0336551443,-0.200015679,-0.1347434223,0.0174962915,-0.0975453556,-0.0235296041,-0.1906380206,0.156959638,-0.1244281903,-0.0252275933,0.0450880304,-0.103293635,-0.0654249117,0.0239563361,0.092573598,0.0669931769,0.1005738005,0.0150277941,-0.0907626152,-0.132537514,0.0523982421,0.0245566908,0.0720919073,-0.0593892336,0.0414316542,-0.1105438173,0.0174736008,-0.1424876451,0.1475726962,-0.0004635932,0.0217301119,-0.1337737441,0.1358581185,0.1652137786,0.0686431453,0.1826257408,0.0838884562,0.1865597814,-0.1189199761,-0.0482937992,-0.0195361134,-0.0797785148,-0.1456257552,0.0463294648,0.0845231563,-0.0423101224,0.003307048,0.0127315763,-0.1580242217,0.1916172206,0.0043059499,-0.0840494186]],"hackathon_name":"IC Hack 17","index":259,"project_description":"Location based music with only two clicksLogoCurrently, venues and spaces must select and maintain playlists, which may or may not reflect what their guests want to hear.With Spot-on-the-Fly users can sync their Spotify accounts to a centrally hosted playlist in just two clicks, allowing music to reflect people in a space at any given time.We have developed a Web App using Socket.io, which allows user with two clicks to log into their Spotify accounts via our page.By then interfacing with the Spotify API, we extract data on their most played artists, and tracks. An algorithm then sorts these preferences into playlist, which are then pushed to Spotify running on a central device.Our algorithm provides people with the music they want to hear by running through top picks, and then also inserting mutual interests and semi-random selected songs by similar artists and in similar genres.At the moment our app is restrained to the Spotify API, whilst this allows rapid interfacing with one of the worlds largest databases of music, we would ultimately like to fuse data form numerous apps to build a comprehensive picture of peoples musical tastes in any location at any point in time.IC Hack 17I co-wrote the algorithm for sorting the users info in JavaScriptsam cooper\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:20 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Spot-on-the-Fly","project_tags":["javascript","spotify","socket.io"],"project_url":"https:\/\/devpost.com\/software\/spot-on-the-fly","keywords":"spotify,music,time,may,people,interfacing,playlist,hear,reflect,running,similar,data,clicks,accounts,want,algorithm,two,artists,allows,api"},{"level_0":260,"hack_vector":[[0.1422879994,-0.1054574549,-0.0274625178,0.0191043168,-0.0168343019,0.1094767675,0.2084919512,-0.0184704121,-0.0229150951,0.0109251644,0.0212285407,-0.0698165894,0.1411259025,-0.0679929778,0.0808946043,0.0057833632,0.2034100592,-0.0129208863,0.0404586904,0.1310076565,-0.2560461164,0.0405081101,-0.0410324298,-0.0166382231,0.099783808,-0.0287431572,-0.0239443798,-0.1780618727,-0.0074204197,-0.099291563,0.0632269681,-0.1249339134,0.0221314114,-0.0985387415,-0.0068904045,-0.0304536782,0.0985721946,-0.1546360403,-0.0730759725,-0.030378703,0.025292702,-0.1431614459,-0.1419549435,-0.0353464223,0.0738302767,-0.0467911139,0.0067388695,-0.0919713005,-0.0120892907,-0.1896129549,-0.1495057493,0.0066167484,-0.1142947823,0.0059601567,-0.2084663957,0.1643941402,-0.1278098673,-0.0265542641,0.0435303338,-0.1132604703,-0.0718711093,0.0265247133,0.0875851363,0.0585894324,0.0960523784,0.0201730747,-0.0982554629,-0.1189657673,0.0392124318,0.0235316623,0.0749408156,-0.0520475842,0.0293949246,-0.1155070215,0.0375640169,-0.1543800831,0.1568748951,0.0010623027,0.0063586072,-0.1236796826,0.1286959797,0.1529814005,0.0700754225,0.1609818339,0.0998812169,0.2013109326,-0.0903351307,-0.041127719,-0.0165022444,-0.063901037,-0.1396250129,0.0509506762,0.1074958593,-0.0489178449,-0.0100895101,0.018510256,-0.1677374393,0.207232058,-0.003784386,-0.0732633397]],"hackathon_name":"IC Hack 17","index":260,"project_description":"Shuffling songs on past preferences to better predict what you'd like to hear in the futuredata flow diagramWhilst people can have large collections of music they enjoy, these often can conflict with each other's mood if improperly ordered. \nFor example, a playlist containing both classical and hip hop music, of which the user enjoys both of, may not flow well in the wrong environment or mood. It may also be displeasing for the user to hear such a wide varation in songs.ContextualShuffle loads the entirety of your music library and learns associations between specific categories of music. Using these categories and other song-specific features such valence, tempo, and genre, similarities are identified between other songs in your library, without any intervention on your part. Similar songs are then queued (shuffled) such that the genre or other features of importance does not vary too much from song to song. \nBy monitoring the user's facial expressions, the efficacy of the queuing system is further adapted and improved each iteration.Starting with the initial aim of identifying similar songs, a large music dataset was required. We sought to acquire features and labels that were most relevant for every track in the dataset. We identified the following features as critical in classification of each track:An ensemble of a 1000 decision trees was trained with boosting to extract feature importance, corresponding to the above features. The features were then normalized between -1 and 1 to allow for an easier evaluation. Using the resulting features we calculated, the cross-correlation between different songs was calclated and an incrementally built list of succeedingly similar songs was continually adapted using positive and negative emotions determined by Microsoft's Cognitive API service.Following this, when a user plays a given song from their library, the most similar songs to each corresponding song are played successivelly. This means the first song's nearest neighbour is played. The neighbour then becomes the root from which calculations are considered, and it's nearest neighbour is played and so on. This provides a good balance of variation and consistency between tracks.OpenCV has posed multiple difficulties due to version compatibility and limited support for python 2.7. Even after installing it for  Python3 a large amount of time was needed for everythin to work as intended. \nThe Spotify API download rate has posed a significant problem due to the large amount of training data that was required by our algorithms.\nThe Azure API examples could improve in terms of documentation.\nRunning Webcams through virtual machines was nearly impossible, so we had to resort to communicating to external mobile devices.\nLabelling of genres, and appropriate mining of data was difficult to achieve due to \nCommunication between different technologies was difficult and rather consuming.We believe this product is workable, usable, and performs in-line with our initial aims and goals\nThe large amount of different technologies into the product has given us a brief but enjoyable experience with each of them.\nGenerating and creating workable training and testing datasets given the large amonut of variables in a given track.Avoid OpenCV if possible.\nLearning about different APIs and libraries in order to achieve a niche task.\nKeep your front and back end separated if possible.We'd love to reach out to the team at Spotify and discuss how our findings could help them improve their technologies and how additional features in their APIs could assist developersIC Hack 17I handled the Microsoft azure API, high level data mining and genre classificationDaniel Morris\n          posted an update\n\n          \n            \u2014\n            \n\n                Feb 06, 2017 06:18 AM ESTWinners ICHACK 2017!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Simion Putina\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:22 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ContextualShuffle","project_tags":["python","machine-learning","spotify","azure","flask","android"],"project_url":"https:\/\/devpost.com\/software\/contextualshuffle","keywords":"features,songs,song,large,music,user,different,given,similar,played,due,could,library,technologies,track,neighbour,using,genre,api,amount"},{"level_0":261,"hack_vector":[[0.1432881504,-0.0975669846,-0.0321242698,0.0456778668,-0.0168909654,0.1283569932,0.1961340159,-0.0126860989,-0.0359074324,-0.0054236418,0.0188109167,-0.0799847394,0.1480634511,-0.0774158537,0.0659996644,0.0033708434,0.2057980001,-0.0154768089,0.0399827063,0.1243916452,-0.2465505004,0.0333845131,-0.0402763225,-0.0099263499,0.111107111,-0.0314212106,-0.0391114391,-0.1716418862,-0.0175856445,-0.0922529623,0.0694651604,-0.1176228896,0.0266627129,-0.0765578449,-0.0151159987,-0.0175876096,0.1218097135,-0.1446908563,-0.0591407493,-0.0110683609,0.0511551201,-0.1302260906,-0.1486762464,-0.0237631612,0.0697901919,-0.0451331809,0.0172984526,-0.0800916478,-0.0092110997,-0.2044554502,-0.1441313177,0.0178059768,-0.1069424823,0.0215600003,-0.2127027065,0.1557418108,-0.1308578253,-0.0260596722,0.0388009138,-0.1125537455,-0.0693623871,0.0260602459,0.0826233476,0.0554053634,0.1154137254,0.0183810107,-0.0844258144,-0.1232406721,0.0235463865,0.0185001381,0.0693984032,-0.041584298,0.0199904703,-0.1163972542,0.0363285355,-0.1306586415,0.1713898331,-0.0008065482,0.0009879308,-0.1287747324,0.1214649379,0.1621356159,0.053564027,0.163379848,0.1039399579,0.1968034506,-0.0975086614,-0.0475734323,-0.0275697485,-0.0818557665,-0.1451877356,0.0581608079,0.0933144465,-0.0390081331,0.0019872671,0.0159395318,-0.1596708298,0.2357210517,0.0181265734,-0.0668167323]],"hackathon_name":"IC Hack 17","index":261,"project_description":"How does the world really feel? We show the world as a heat map, using Twitter to analyze current emotions.This is an application, currently for Android, that allows the user to type in a keyword. Upon submission, the user is brought to a map of the world, which is appropriately shaded for each region based on the sentiments of the tweets sent from that area. All tweets are analyzed with a machine learning algorithm that gives the tweets a coefficient of positivity and negativity, which we use to determine the shade of the specific region. Sample tweets hover around the regions, too, giving the user a very immersive and cool experience.The front-end team (Julian Chow, Rishi Rabheru, Ashley See, and James Tavernor) used Java to code the user interface. The back-end team (Anthony Alridge, Nicholas Li, and Shravan Nageswaran) used Python to import and customize a machine learning algorithm to analyze the sentiment of the tweets, retrieve tweets from many regions, and combine these two to create a map that linked coordinates of the world to the appropriate colour of the map representation. Ultimately, we connected these programs well and made the full application.The API would only provide us with 2500 tweets per minute (and we wanted a lot of data). Because of this, we limited the ICHACK version of the app to major cities in the United Kingdom and Ireland, but we look to continue developing the app to make it a worldwide representation.We are very proud of optimizing the machine learning algorithm to process each tweet quickly. Additionally, implementing and manipulating a map in Android is quite challenging, and our front-end team did a phenomenal job of doing that. Plus, all of our code is readable, and the app, itself, is simple for users to pick up and enjoy!We learned that processing data poses its challenges - especially when we want to analyze millions of tweets! Additionally, from ICHACK, we taught ourselves how to combine front-end and back-end work to accomplish the endeavor of a comprehensive application. It was a very enjoyable, hard-working, and rewarding experience.Heatwave is continuing to be improved. Once we can process more data, we will make Heatwave assess all cities around the world. Additionally, we look to continue improving the graphics, adding a blend method that will appropriately blend two colours in adjacent regions to make the entire map look more cohesive. All in all, we wanted to create an app that is unique, insightful, and - quite frankly - fun, and that is what we did! But we are not done yet.IC Hack 17Anthony-Alridge\n          posted an update\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:26 AM ESTHey guys, hope you enjoy Heatwave! It's really an incredible application!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Anthony-Alridge\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:20 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Heatwave","project_tags":["java","python","django","google-maps","nltk"],"project_url":"https:\/\/devpost.com\/software\/heatwave-qnmx4g","keywords":"tweets,world,end,app,map,team,user,regions,create,around,machine,make,application,learning,front,algorithm,data,additionally,look,cities"},{"level_0":262,"hack_vector":[[0.1420044005,-0.098850742,-0.0389753468,0.0419723876,-0.0239078104,0.1243404672,0.1925507337,-0.0126893865,-0.0227031577,-0.0156193059,0.0112781776,-0.0624193847,0.1428891122,-0.0618473627,0.0652011111,0.0153486701,0.1980125755,0.0003044651,0.0397844426,0.1394078881,-0.2445967495,0.0186201669,-0.0367190912,-0.0120411031,0.1087179184,-0.0195515789,-0.0336341411,-0.1684795022,-0.0180616844,-0.0922332257,0.0591167472,-0.1103926823,0.0159853417,-0.0768913776,-0.0069434848,-0.015652094,0.1114151031,-0.1468611062,-0.0678025931,-0.0082148733,0.0482536107,-0.1307801753,-0.1488396972,-0.0327711292,0.0627520084,-0.0601971075,0.0091822948,-0.083652325,-0.0136542479,-0.2180038244,-0.1443925798,0.0173025802,-0.1076888964,-0.0087423092,-0.2092995793,0.1718293279,-0.1269146502,-0.0212847609,0.0426827744,-0.1057858616,-0.0703372806,0.0347515307,0.0692041591,0.0557939485,0.1116809323,0.0236005262,-0.0982818604,-0.1281697452,0.0296913479,0.0066936179,0.0664122105,-0.0399446115,0.0145185217,-0.116524905,0.0240862388,-0.117441453,0.1746722162,-0.0140182823,0.0016510006,-0.1404675245,0.1093506515,0.1612484604,0.0580257215,0.1632034481,0.103538841,0.2122617364,-0.0868674293,-0.0379997529,-0.0210030247,-0.0682293549,-0.1430075914,0.0639121309,0.0996291414,-0.0429613627,-0.0063579124,0.0129800141,-0.169257924,0.2437160462,0.0053381333,-0.0700332075]],"hackathon_name":"IC Hack 17","index":262,"project_description":"It's an application designed to help blind people by recognizing the things around them and describing themWe wanted to create something for people with accessibilities. Blind people can't really know the world around them, so they use their other senses to form an image: hear, touch. What we tried to build is an application that will describe what's around them, so they can get a clearer image of the real world.Accesses their phone's camera and uses tensorflow to recognize specific objects in the picture and form descriptive sentences about them, which then are spoken by the app.Using a tensorflow algorithm and Microsoft Azure for storage and doing the complex computations.The training part of the algorithm takes very long, as it is a very complex algorithm, so we had to scale it down, and this resulted in less accurate results.We managed to fix our bugs and make it work, even given the fact that we had a limited amount of time. We lost about 5 hours while the algorithm was creating settings and training, but we managed to catch up after and finalise the project. With this, we could create a much clearer image of the world for blind people.Properly training of the algorithm and sending feedback in real time, instead of just sending separate picturesIC Hack 17Tania Copocean\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 05:12 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Eye of Horus","project_tags":["ios","node.js","azure","swift","python","bash","linux"],"project_url":"https:\/\/devpost.com\/software\/eye-of-horus","keywords":"algorithm,world,image,people,training,blind,managed,form,create,real,clearer,sending,complex,tensorflow,time,around,hours,horus,hear,given"},{"level_0":263,"hack_vector":[[0.1332265139,-0.0966880992,-0.0361805037,0.064993754,-0.0226758197,0.1349412054,0.1939899623,-0.0320990086,-0.0266680438,-0.0179635361,0.0126755144,-0.0658336952,0.157451421,-0.0734261647,0.0674546808,-0.0233133547,0.196056053,-0.0123441955,0.0506334715,0.1269637644,-0.2451855242,0.03084266,-0.0379192345,0.0018568649,0.1141437218,-0.0245641284,-0.0360770188,-0.1647813618,-0.0345192216,-0.0855464265,0.0740866661,-0.1193794161,0.0229472816,-0.063830778,-0.0233740471,-0.0220410656,0.1227489933,-0.1384316981,-0.0610048808,-0.0058149714,0.0660593435,-0.1201363057,-0.1451821327,-0.0209232885,0.0647079274,-0.0420272052,0.0121475095,-0.0915237516,-0.0219096038,-0.2146980464,-0.1488712281,0.0210397765,-0.1000687405,0.0239230059,-0.2205847651,0.1539472938,-0.1321195066,-0.029021414,0.0311222058,-0.1066245139,-0.0739006326,0.0225256663,0.0810307637,0.032880757,0.1119373366,0.0318967141,-0.0752218664,-0.1212449148,0.023231538,0.0250282884,0.0586637221,-0.0399528481,0.0228802487,-0.1163209677,0.0350550227,-0.1053273305,0.1836481988,0.0011737103,-0.0076320651,-0.1347504109,0.1179871932,0.1544471532,0.0565461032,0.1602428555,0.1035946906,0.2147528231,-0.0802356452,-0.0550790317,-0.0247800648,-0.0651193559,-0.1463885754,0.0576409437,0.1034669131,-0.0394272506,-0.009144661,0.0126121631,-0.1600852162,0.2465559691,0.0084963329,-0.0653769746]],"hackathon_name":"IC Hack 17","index":263,"project_description":"A smarter pillow. A better night's rest for a better life.The pressure sensor (Bigger one) and a custom casing for the raspberry pi.What does an Imperial student desire more than a good night's sleep? Sadly, nothing really. With members of this group struggling to wake up and struggling to sleep, what better way to tackle this issue than stick a circuit in your pillow.A raspberry pi running a server is connected to a pressure sensors sitting below a pillow. A mobile app has been developed that can communicate with this server and more.We split the task evenly and dove head first into the work. Sleep is for the feeble.\nWe used hardware labs and the laser cutters to design pressure sensors. We had to create and test our bluetooth server on the raspberry pi. We had to try to get a smart phone to talk to server and integrate it into the mobile app. After finalising how the server and client communicate, we tried to build some dynamic applications on top of this.All of the group members had to start from scratch with regards to server setup, bluetooth communications, Android development and hardware based pressure sensors.We initially also planned to integrate this application with Android's base system alarm clock. However this was extremely challenging and API was kind of confusing too. The process itself is pretty simple, as behaviours for sleeping on the pillow has been defined. We were planning to implement some restrictions on a person sleeping on a pillow and turning of an alarm, or a person sleeping on a pillow and snoozing one too many times. Unfortunately time was a massive constraint.Several possible future integration.\nHighly reliable hand made sensors.\nReal time view of the 8 pressure points in the pillow.We learned how to setup a bluetooth server with sockets and how to connect a phone to it.\nWe learnt the basics of mobile development.\nWe got to play around with laser cutters.To have a webserver to backup logs and perform long term analytics on sleep patterns. Better integration ofIC Hack 17Riku Murai\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:19 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Internet of Pillows","project_tags":["android-studio","python","raspberry-pi","java"],"project_url":"https:\/\/devpost.com\/software\/internet-of-pillows","keywords":"server,pillow,sleep,sensors,pressure,bluetooth,mobile,sleeping,communicate,setup,raspberry,development,cutters,phone,person,group,hardware,members,learned,laser"},{"level_0":264,"hack_vector":[[0.1431444138,-0.0814832076,-0.0314156152,0.0388617106,-0.0180934966,0.1208441332,0.194144085,-0.0086338399,-0.0194925126,-0.027474165,0.0034992213,-0.0757129341,0.1378930062,-0.0665244684,0.0646614358,-0.0102577433,0.1972478479,-0.0092565725,0.0392551795,0.1432270408,-0.2426842749,0.0076679876,-0.0425651893,0.0012241309,0.1132629961,-0.021968497,-0.0247636586,-0.1580965817,-0.0315452404,-0.0951274931,0.0517179035,-0.1064310074,0.0219370406,-0.0772340521,-0.023613302,-0.0188791901,0.1130758673,-0.1444806755,-0.0637493581,0.0015358602,0.0481311679,-0.1064005643,-0.1368843168,-0.0285270475,0.0851266012,-0.0817701593,0.0143939285,-0.0889030993,-0.0267808884,-0.2288850099,-0.1503397822,0.0063110888,-0.103279233,0.0169933345,-0.1975904554,0.1762162149,-0.124050729,-0.0426731147,0.032861039,-0.1199712902,-0.0774266422,0.0134415729,0.0731776431,0.0291772354,0.1179380119,0.0195367709,-0.0974710509,-0.1235884726,0.0299553219,0.023804171,0.0574258938,-0.0477736965,-0.0016697106,-0.1151686311,0.0359956697,-0.1149082705,0.1840577424,0.0017598359,-0.0003357952,-0.1406991929,0.1122041196,0.1558115631,0.0549439974,0.1513047516,0.0947102308,0.2127617449,-0.0855641738,-0.0421709456,-0.0267282929,-0.0731614903,-0.1628883779,0.0541527458,0.1060168818,-0.0420179144,-0.0296546537,0.014169205,-0.1664647162,0.2453188151,0.0121000158,-0.069162339]],"hackathon_name":"IC Hack 17","index":264,"project_description":"Summon Alexa and she will recite the tongue twister of the day!There are already a lot of 'Word of the Day', 'Fact of the Day' type of skills for Alexa. However, we thought it would be fun to implement it for tongue twisters. These are phrases usually hard to pronounce to humans, but not to Alexa. We believe this is a fun way for users to learn tongue twisters while hearing them more clearly.Every day, Alexa will have a new tongue twister for you to practice on (chosen from a pre-made database). Not only can you hear Alexa pronounce them properly (also a bit robotically), but you can also practice by readingWe used Javascript to create a lambda function for the Alexa skill. The database of tongue twisters we got it from \"http:\/\/www.uebersetzung.at\/twister\/en.htm\". Using the Alexa API we built the Alexa skill.It took us 8 hours for the server to say \"Hello World\" and a lot longer for the Echo Dot to say it. We had to learn how lambda functions work for the AWS Lambda. Alexa took a while to recognise our commands to the skill.Alexa managed to pronounce the tongue twisters clearly. The whole program runs, despite the little challenges at the beginning.We got to use and experiment with the Echo Dot for the first time. We realised that you should not use reserved or common words for the invocation name for a skill as Alexa will not recognise the skill properly. Most of all, we learned to use the Amazon Web Services, the Alexa API, as well as Javascript.In the future we would like to increase the database for the tongue twisters. This would in turn allow for different levels of difficulty. One even further step would be to implement this feature in other languages too.IC Hack 17Jixi Shan\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 05:59 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Alexa Daily Tongue Twister","project_tags":["javascript","alexa"],"project_url":"https:\/\/devpost.com\/software\/daily-tongue-twister","keywords":"alexa,tongue,skill,twisters,would,database,day,twister,use,pronounce,lambda,practice,fun,properly,recognise,got,echo,implement,say,lot"},{"level_0":265,"hack_vector":[[0.1646584719,-0.1568861753,-0.0006841231,0.0903070495,-0.0391040146,0.154711172,0.171783641,-0.0488321632,-0.0200816002,-0.0322091244,-0.0001981639,0.0092365397,0.1383898556,-0.0758466944,0.0178683065,0.05338962,0.2457227707,0.0201284774,0.0608433411,0.0935222059,-0.2223335803,0.0113886874,-0.0462650992,-0.0524354875,0.1521325856,-0.0273536909,-0.0605127737,-0.1807577312,0.0093175806,-0.0898457095,0.0310437139,-0.1032531485,0.0699009895,-0.0646061301,-0.0377388708,-0.0047370931,0.1382243037,-0.1332271844,-0.0241722576,0.0730753765,0.067528598,-0.136905998,-0.1763340831,-0.0335436724,-0.0171743985,-0.0538143367,0.0402186587,-0.0377289727,-0.0256897602,-0.1979635954,-0.0779189691,0.0356030986,-0.1114698648,-0.0465264432,-0.1339933574,0.1523876637,-0.143372789,0.0302710142,0.0064047645,0.0105052069,-0.0355303548,0.0284678973,0.0607376434,0.0609908812,0.1393614113,-0.0291717369,-0.136632368,-0.155166477,0.0040354789,0.0158791393,0.0722334757,-0.040742334,-0.0161077585,-0.1506710947,-0.0470230691,-0.0730184019,0.2092458755,0.0325614177,0.0603379831,-0.1503101438,0.1214603707,0.1600050926,0.0062858406,0.1455089301,0.1454922855,0.1855274588,-0.1251334101,0.045811642,0.0022857899,-0.1012449637,-0.0914800763,0.0999189615,0.0440071933,0.0146731539,0.0547205545,-0.0782292336,-0.0886617973,0.1811694205,0.0808654055,-0.0510625318]],"hackathon_name":"IC Hack 17","index":265,"project_description":"Rube Goldberg in software and hardwareRube Goldberg Machines on YouTubeNothing useful really, it displays a secret message after running a number of pointless (but interesting), interconnected elements.Not to do too muchMore technologies and hardwareIC Hack 17Elliot Greenwood\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:28 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Gold","project_tags":["react","golang","bash","ruby","ruby-on-rails","python","arduino","c","c++","raspberry-pi"],"project_url":"https:\/\/devpost.com\/software\/gold-wjqsah","keywords":null},{"level_0":266,"hack_vector":[[0.1561867893,-0.1366769522,-0.0299903266,0.0645393357,-0.0061575361,0.1425055861,0.1894785464,-0.0385151431,-0.0326670185,-0.0216395129,0.0034610156,-0.0573000163,0.1581726074,-0.0614679903,0.0510235839,-0.0110593103,0.1994669735,-0.0188700501,0.0435212106,0.1188420057,-0.2442980707,0.0340075009,-0.0284309518,0.0048069037,0.147794798,-0.0386014245,-0.031457901,-0.1758515239,-0.0442096703,-0.0809754506,0.0915496573,-0.1223034859,0.0406795368,-0.0621456057,-0.0356151834,-0.0347920358,0.1195999756,-0.13978073,-0.0434102602,-0.0031089489,0.0806646571,-0.1342973411,-0.1508537233,-0.0275346879,0.0491798967,-0.0338308029,0.0113824476,-0.0730954632,-0.0312416479,-0.2163345069,-0.1381867379,0.0255032051,-0.1035649776,0.0171005838,-0.208624512,0.1495181173,-0.1421016455,-0.0288366433,0.0258567296,-0.0830398127,-0.0732220188,0.0233560149,0.0563136823,0.0133233517,0.1150728166,0.0191244744,-0.0967282653,-0.1198929921,0.012043572,0.0263959132,0.0645402744,-0.04381641,0.0188410133,-0.1239840761,0.0065278392,-0.08836364,0.1914782971,-0.0030325351,0.0074572405,-0.1261983961,0.1106448844,0.1477549076,0.0275480263,0.1672967076,0.1174324676,0.2134167999,-0.0920667574,-0.0184025932,-0.0181713216,-0.0713961273,-0.1237508878,0.0797804445,0.0796328709,-0.02995071,-0.0097358366,-0.011762403,-0.1475188434,0.2416969836,0.0269826129,-0.0529186763]],"hackathon_name":"IC Hack 17","index":266,"project_description":"A retro 2D platformer game: reach the terminal and hack it!Ingame2Ingame1Ingame3I enjoy old school platformer games and wanted to make one, while learning an open source game engine (Godot), having never used it before.A simple one level prototype game, but with all the fun mechanics, playable with a SNES controller.The little guy really wants to hack the terminal, but a deadly laser is in the way, not to mention bottomless pits! Jump over the pits and teleport past the laser to hack the terminal to complete the level. A bonus collectible is placed at the end of a treacherous jump.I drew all the art assets, then used official and unofficial Godot tutorials and documentation to construct and code the game in GDScript.Godot uses it's own scripting language, GDScript, which I had to learn. Also many of the tutorials are deprecated, so a lot had to be done with trial and error.It works and is fun!How to create a game with the Godot engine.More levels and mechanics!IC Hack 17I drew all the art assets, designed the level, and coded all of the components.James Lane\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:27 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Retrohack","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/retrohack","keywords":null},{"level_0":267,"hack_vector":[[0.137640059,-0.1040837839,-0.0393411517,0.0284840558,-0.0150601575,0.1215967983,0.1942175627,-0.0156337675,-0.0007857957,-0.0345558003,0.0141679794,-0.0781479478,0.1397962868,-0.0614744164,0.0702145621,-0.0100673446,0.1974766552,-0.0099445013,0.0389572419,0.1301508248,-0.2473802418,0.0294729918,-0.0323546156,-0.0092908312,0.0859041736,-0.0328256786,-0.0162741356,-0.1573611647,-0.0371116176,-0.099653624,0.060476236,-0.1130821705,0.0228698533,-0.0794193745,-0.0091557531,-0.0357202366,0.1027312726,-0.1541156769,-0.0762256831,-0.0265280269,0.0413504429,-0.114250645,-0.1323390752,-0.0361335985,0.085284166,-0.0671135783,0.0177424047,-0.0896833166,-0.0335867479,-0.2122910917,-0.1715506315,0.0099732429,-0.1019360051,-0.0044296007,-0.2154411077,0.1599181592,-0.1065087914,-0.0591169111,0.0578659587,-0.1233154535,-0.0869880989,0.0169719625,0.0771605,0.0256749727,0.0892609805,0.0388359912,-0.0919898376,-0.1100935936,0.0287590902,0.0293656774,0.0662444532,-0.0528110377,0.0229042433,-0.1141569987,0.0346997902,-0.1307888925,0.1695435494,0.0010624951,-0.010662538,-0.1347094774,0.1100961491,0.1609150916,0.0365598239,0.1675854027,0.089618139,0.2046644688,-0.0819469616,-0.0502062961,-0.0328556783,-0.0653685108,-0.1481727213,0.0534674749,0.0982116386,-0.0501867533,-0.0276275035,0.0172247998,-0.1794002056,0.2492407262,-0.0092727989,-0.0784564912]],"hackathon_name":"IC Hack 17","index":267,"project_description":"When you're drinking, it's really difficult to judge what's one drink too many, machine learning can fix this.Two days ago was Friday, and it was circleline, for those that don't know it's a yearly tradition when students go round the tube line, and drink half a pint at every stop. Now I fully intended to leave early, only drink 2 pints, but somehow, not for lack of trying ended up worse for wear, hanging in a lecture theatre, about to start a 36 hour hackathon (again). I'm not alone in this. It is so easy to fool yourself,  but data doesn't lie, machine learning can be used in an app to tell you whether you should go home.\"Should I go home?\" is a humourous web app where people can go on and answer a sequence of 6 tick box questions before being told whether they should a) continue drinking full steam ahead, b)have one more drink, c) go home, what are you even doing out in the first place. The results are calculated using a cognitive service regression algorithm, based off peoples past drinking experiences and how worth it they were.I think it has real application for the student market, excessive alcohol consumption is a problem, but no one wants to be controlled. Most PSAs are unappealing, and struggle to be relateable plus it's really hard to judge your drunkness levels even based on your own past experiences. \"Should I go home?\" removes these issues, giving a reliable, impartial source, informed by your peers past actions and has a fun, simple user interface.The web app was built using a combination of HTML, CSS, handlebars and node. As users would answer 6, multiple choice button questions. Its designed to be quick, simple and humourous to appeal to its target drunk, student audience. Once their 6 responses had been recorded, this data could be sent to the azure api, and in response the app would receive a \"worthit\" score for the person to keep drinking.To start with users are asked what kind of drinker are they: light weight (penguin, cos feathers are light), heavy weight (bears, because bears are bare heavy) and average (\"pengbears a cross between the two.\")I posted a survey to reddit where I asked people to describe their recent drinking experiences. They answered the same 6 questions as on the website, plus one evaluation question of how worth it the night was (used as the label score), These were used to train the algorithm, the higher the worth it score, the more likely my web app recommended to continue drinking.The node.js was more rudimentary than I would have liked, I could not solve a bug that prevented browsers registering modified XHR, so the url could not be updated on the website. It was very frustrating as it was a matter of configuration of static files rather than something directly related to programming. This prevents multiple users using the website at once, or me exploring session data etc.I managed to quickly get accurate outputs for a trained machine learning algorithm to use in the app, I really enjoyed developing the graphics and my \"pengbear\" is baller.I learned how to develop a node.js application with good structure between dynamic and static content. Also how to call azure apis, and use their cognitive services.In the future I would want to integrate it with the mobile platform, so that accelerometers could detect whether someone was ignoring the apps advice, and based on that decide whether to help the student in the morning with \"how to deal with your hangover\" advice. Also instead of training the API on such a small dataset, users would have the option to input their own experiences to add to the dataset or validate how effective the apps recommendations had been the morning after.\nWith a larger dataset, the number of possible questions could be far greater, including maths problems to evaluate someones current cognitive skills, and a small subset of these could be chosen, to keep the app interesting.IC Hack 17rebecca simpson\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:29 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Should I go home?","project_tags":["node.js","handlebars.js","html5","css3","azure","machine-learning"],"project_url":"https:\/\/devpost.com\/software\/should-i-go-home","keywords":"app,go,could,home,would,drinking,experiences,whether,users,questions,dataset,data,algorithm,one,score,cognitive,student,node,based,used"},{"level_0":268,"hack_vector":[[0.1351201981,-0.1284411401,-0.0167603567,0.0676512644,-0.0436631255,0.1361909211,0.189087376,-0.0061048614,-0.0341740698,-0.0128385732,0.0070724557,-0.0324930884,0.1475926042,-0.0700787157,0.0619309396,0.0401209332,0.2399099469,0.0311157685,0.037353538,0.1016611233,-0.2279691547,0.0162073839,-0.0518424548,-0.0512387604,0.1293015927,-0.0229107682,-0.0551072098,-0.1990757734,0.0002372876,-0.0757876635,0.0578550175,-0.1161284,0.034015473,-0.0771708414,-0.0273285508,0.0112978639,0.1210696399,-0.1295369864,-0.0396504886,0.0440641344,0.0373988375,-0.1542243809,-0.1783840656,-0.0280376449,0.0143893678,-0.0612038597,0.034516111,-0.0507483333,-0.0228458922,-0.2065217495,-0.091267772,0.0069121853,-0.0955423191,-0.0397591367,-0.1575980633,0.1736537069,-0.1398454756,0.0261610467,0.0171580836,-0.0404886939,-0.0577364862,0.0446088985,0.0606844574,0.0750651583,0.1316107959,-0.0117574651,-0.1095218211,-0.158163026,0.0294131823,-0.0080795549,0.0643794015,-0.0440600365,0.0103163561,-0.132330671,-0.021880921,-0.1097218394,0.1938946992,0.0096804686,0.0592194796,-0.1387358159,0.1336416602,0.1742339283,0.0495556183,0.146272853,0.1228006929,0.1911865771,-0.1228170544,0.0141637567,-0.0016306803,-0.1075571403,-0.1172972471,0.0856202617,0.0518525615,-0.0192500073,0.0454677269,-0.0340738855,-0.1267671138,0.2077354044,0.0517193899,-0.0697015524]],"hackathon_name":"IC Hack 17","index":268,"project_description":"A choropleth to show the emotion of each countryWe wanted to do some data mining.We get tweets from different countries and run a sentiment analysis on it to give a emotion to each country.\nWe then use this to create a choropleth to visualise our findingsAdd more emotions and more countries.IC Hack 17Anirudh Pillai\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:29 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"What the world feels like","project_tags":["flask","d3.js","javascript","python","twitter"],"project_url":"https:\/\/devpost.com\/software\/what-the-world-feels-like","keywords":"countries,world,findings,analysis,choropleth,country,create,data,different,emotion,emotions,feels,get,wanted,give,inspiration,like,mining,next,run"},{"level_0":269,"hack_vector":[[0.1415133327,-0.1128826663,-0.0277254302,0.045408763,-0.0226342734,0.145594582,0.1974053383,-0.0305005424,-0.008872428,-0.0162102319,-0.0006348924,-0.0571327358,0.1263556927,-0.0602545217,0.0586255938,0.0078171808,0.2240967005,0.0174451694,0.0407611355,0.1167730168,-0.2456530035,0.0350853279,-0.0399970971,-0.0230107978,0.1263251156,-0.0048395428,-0.0349556766,-0.1848709434,-0.0182742625,-0.1037865728,0.0595620796,-0.1453215927,0.0423978306,-0.0981374234,-0.0088697989,-0.0342989378,0.114302896,-0.1474713981,-0.0641817302,-0.0064569637,0.0391370095,-0.1609457433,-0.1530685723,-0.0491859391,0.0421001203,-0.0476163551,0.0038335668,-0.0635572299,-0.0425060056,-0.1968791038,-0.1267945766,0.0190180372,-0.0985945761,-0.0182180014,-0.1866504848,0.159388572,-0.1292205453,-0.0149557525,0.0306976214,-0.0822731405,-0.0710384399,0.0194355287,0.0757781267,0.0369567387,0.1022224054,0.0182858706,-0.1205856502,-0.1369517148,0.0427264906,0.0464020967,0.0836087167,-0.0611966997,0.0386853591,-0.1314262152,0.0105293142,-0.1284395754,0.1626284122,0.0195725374,0.0292166937,-0.1326879561,0.1141813397,0.1527853012,0.0706378669,0.171371758,0.1026841551,0.1915905029,-0.1024415791,-0.0238982551,-0.0099675925,-0.0755490214,-0.1215616912,0.061461132,0.0916611776,-0.0476973876,0.0103598498,0.0010592791,-0.1466416717,0.2259444594,0.0048189694,-0.0752728209]],"hackathon_name":"IC Hack 17","index":269,"project_description":"Take a ride on an emotional rollercoaster.Emotional Rollercoaster was inspired by puns, stress and a desire to take advantage of Microsoft Cognitive Services.Emotional Rollercoaster follows a similar concept to Guitar Hero or Dance Dance Revolution but with a twist: Match your emotions with the given picture emotion to move your car forward. The better your match, the further you go!On the software side, Emotional Rollercoaster was developed in C# by modifying the sample demonstration of near-real-time analysis on frames taken from a live video stream found here linkOn the hardware side, we reverse-engineered a toy car and created a prototype rollercoaster from it.Imagine a dynamic theme park, where rides go faster if they detect that you are not scared enough, or a car that detects the emotion of drivers and passengers for a customized commuting experience. The versatility of Microsoft API makes all of this possible.IC Hack 17UI and general C# frustrationHellothereimaaron\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:33 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Emotional Rollercoaster","project_tags":["arduino","c#","xaml"],"project_url":"https:\/\/devpost.com\/software\/emotional-rollercoaster-hfzrq8","keywords":null},{"level_0":270,"hack_vector":[[0.1364459693,-0.1018798724,-0.020539172,0.0352275111,-0.0202874485,0.1249119863,0.2069084197,-0.0243048165,-0.0168853942,-0.0104686758,0.0248276703,-0.0590949692,0.1404386908,-0.0662626997,0.0649692863,0.014115422,0.2179532498,-0.0168256462,0.0451574661,0.129328385,-0.2486802787,0.0347016007,-0.0359709524,-0.0184986517,0.0961016938,-0.0274648778,-0.0200409815,-0.1801386476,-0.0096543031,-0.0928481072,0.0672904775,-0.1075634435,0.0241809003,-0.0914949328,-0.0181441605,-0.012704609,0.1082854867,-0.1462305039,-0.0610503592,-0.0018206439,0.0323550589,-0.1325045228,-0.1412381381,-0.0435067117,0.0731592029,-0.0646667406,0.0106742475,-0.0762475207,-0.0188492443,-0.2113389671,-0.1422918439,0.0049330369,-0.1150131375,-0.0078623435,-0.1959993094,0.1545528322,-0.1350583583,-0.0347047374,0.0423745252,-0.1009567827,-0.0678152069,0.0267507154,0.0861528665,0.0564158559,0.1155404374,0.0069627459,-0.099917911,-0.1238439754,0.0344861746,0.0083121946,0.0546690971,-0.0525953695,0.0206297189,-0.1182359308,0.0088693518,-0.1410562992,0.180816561,-0.0009188126,0.0097430721,-0.1467122287,0.1293520182,0.1624745727,0.0394564308,0.1705513149,0.0992673859,0.2040963322,-0.1027874872,-0.0236472115,-0.027053671,-0.08100418,-0.1506280154,0.0635312796,0.0883001611,-0.0254444815,-0.0100295078,0.0125814686,-0.1572032571,0.2107446492,0.016516706,-0.0679207444]],"hackathon_name":"IC Hack 17","index":270,"project_description":"An app to crowdsource decision making so that your friends or the public can vote to decide the outcomeUser InterfaceSometimes life presents us with hard decisions, and when that happens it can be hard to choose between them. Inspired in part by other web applications such as strawpoll but with a simple and light UI for a light, easy, and expansible design.Allows users to make questions, and 2 answers to this question, then others can vote on one of these options.\nIn the process of expanding to include natural language processing so that questions can be automatically parsed  and users don't need to enter text for the two possible answers, and to track logins and votes by users to prevent double-counting votes.Using a variety of languages hosted by a private web server, and a database in the back.We're currently expanding into natural language processing so that making questions is even faster and easier using APIs available online. As well as this, we are in the processs of implementing a system to prevent double-countinng of votes using used ids, and this idea could in the future expand beyond easy binary decisions into even harder open-ended choices.IC Hack 17andrewjunyoung\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:43 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"GitGudDecisions (by GitGud)","project_tags":["css","sql","python","javascript","ruby"],"project_url":"https:\/\/devpost.com\/software\/gitguddecisions","keywords":"questions,votes,using,users,language,web,hard,light,natural,expanding,even,easy,double,prevent,processing,decisions,answers,could,expand,idea"},{"level_0":271,"hack_vector":[[0.1618584692,-0.0962035358,-0.0175035,0.082186833,-0.0077406354,0.1839167625,0.1785048097,-0.066239804,-0.0109417671,-0.0419123061,0.0212250929,-0.0716646686,0.1569083929,-0.0859971046,0.0292650945,-0.0094383024,0.2158256918,-0.002055387,0.0708981156,0.1065913513,-0.2178845555,0.0501636304,-0.044468835,-0.0009766618,0.1279239506,-0.043871671,-0.0438901372,-0.1755254418,-0.0557660609,-0.0754290745,0.0718254372,-0.111305669,0.0612897538,-0.073935397,-0.0307914093,-0.0183575843,0.1477557421,-0.1237023026,-0.0511643514,0.0046650413,0.0801262707,-0.1241622567,-0.1635309011,-0.0154650556,0.0466450453,-0.0328543596,0.0300647039,-0.0665169135,-0.0378111824,-0.2155352235,-0.145525232,0.0481528528,-0.1119956896,0.0212074593,-0.2072831839,0.1340087652,-0.1270410568,-0.024496736,0.0432286263,-0.0770088509,-0.0687699988,0.0077742301,0.0853731111,0.0243769977,0.1142764315,0.0306740869,-0.0875734165,-0.1295467615,0.0031754673,0.0394097455,0.0688880384,-0.0381858535,0.0230382513,-0.133763656,0.0213221461,-0.0741125792,0.2063718885,0.0044420278,0.0056497967,-0.136756897,0.1022306606,0.1529668123,0.0238425992,0.1524491608,0.1124178618,0.1837981492,-0.0844742507,-0.0490781963,-0.0230852868,-0.080813311,-0.1288302839,0.0633686408,0.0613232031,-0.0327802151,0.011924223,-0.0207366217,-0.131897375,0.2485017926,0.0360944718,-0.072973758]],"hackathon_name":"IC Hack 17","index":271,"project_description":"Do you have 6 iPads? Save money on a 4k tv with shitScreen!You can sort of see it working.Like all great ideas, this one was thought of in the pub.It plays a video split across unlimited screens on iOS and we hoped Android.Good Question.Bluetooth.Android.....fucking AndroidIt fucking works. (Credit to the iOS guys :) )Don't use bluetooth. Don't build cross platform when you're when you've got even less sleep than experience.This is gonna be YUUUUUUUUGE.IC Hack 17I worked on the front end of the Android app and helped out with the back end.I worked on the web server and the android app :)I helped build the Android app which unfortunately did not work in the end. It was the first app I worked on and it drove me mad :)I worked on the iOS app, which was a joy to write in swift, and helped make the web protocol.Liam Pilot\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:48 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"shitScreen","project_tags":["iphone-sdk","java","swift","json","android","ios","websockets"],"project_url":"https:\/\/devpost.com\/software\/shitscreen","keywords":"android,ios,fucking,bluetooth,ideas,hoped,guys,great,got,good,gonna,even,experience,works,cross,credit,challenges,built,build,across"},{"level_0":272,"hack_vector":[[0.1610502154,-0.1534771323,0.0195269492,0.1035463065,-0.0426109321,0.1765087247,0.1633178592,-0.0725689456,-0.0331031047,-0.0177705474,0.0029145407,0.0453905091,0.1212309822,-0.0791311637,-0.0019620927,0.0722301155,0.2472788692,0.0444015414,0.0610290505,0.0558595993,-0.1702553332,0.0063908375,-0.0521278046,-0.0730450824,0.1755168736,-0.0161244627,-0.0668495372,-0.1935267895,0.0251220539,-0.0551393256,0.026737744,-0.1022111326,0.0905003399,-0.0624257773,-0.0532482713,0.0228912272,0.144430086,-0.0990141854,0.001859172,0.1105819792,0.0582476556,-0.144459039,-0.1812643409,-0.0218946077,-0.0664740726,-0.0369368382,0.049437318,0.0026484744,-0.0269824453,-0.1785657108,-0.0178121254,0.0397256091,-0.1092017293,-0.0657953471,-0.0666359141,0.1364454478,-0.1549340189,0.0932208598,-0.0238454212,0.0735024065,0.0007046268,0.0307497531,0.0443438999,0.081203036,0.157944411,-0.0588347204,-0.1430063695,-0.1623197049,0.0034348012,-0.0051115318,0.0705725253,-0.0306970365,-0.0179663561,-0.1602420211,-0.0771560073,-0.0467115901,0.206703186,0.0375282764,0.1056387052,-0.1446519941,0.1252985001,0.1453388482,0.0100562703,0.1259357035,0.1564057767,0.1466171443,-0.1408078969,0.0854012296,0.0254221559,-0.1111504883,-0.0735720173,0.1074815243,0.0142327007,0.0305885002,0.0993511453,-0.1190759316,-0.0313833728,0.1259396225,0.1141451001,-0.0372721851]],"hackathon_name":"IC Hack 17","index":272,"project_description":"emojifies text using cutting edge ml and word embeddingsSee https:\/\/github.com\/memenursery\/emojifier.IC Hack 17PK398\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:50 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"EMOJIFIER","project_tags":["java","javascript","python","json","ruby-on-rails","node.js"],"project_url":"https:\/\/devpost.com\/software\/emojifier","keywords":"see,memenursery,https,github,emojifier,com"},{"level_0":273,"hack_vector":[[0.1422042251,-0.1155941412,-0.0182769727,0.0520961918,-0.0290881228,0.1567161083,0.2165152878,-0.0491635874,-0.0285299495,0.0087007415,0.0064211409,-0.0415426604,0.140082702,-0.0764771625,0.0507459864,0.0244533829,0.2368839234,0.0108611146,0.0381619968,0.1160747185,-0.2282272279,0.0587504283,-0.0408781134,-0.0342169739,0.1404520869,-0.0079570115,-0.047186885,-0.1996997297,-0.0055340277,-0.0717106462,0.0662711337,-0.1438694745,0.0490499251,-0.0959513709,-0.0329508223,-0.0168650933,0.1330436915,-0.131897971,-0.0406399518,0.015166779,0.0406225845,-0.1733643711,-0.1678489745,-0.0399440117,0.0401537009,-0.0183080491,0.0119020762,-0.0601704419,-0.0361198485,-0.1908138245,-0.1127459854,0.0259005576,-0.1074076667,-0.0010590167,-0.1620443165,0.1457103789,-0.1363525391,0.013340204,0.0137737496,-0.0608977266,-0.0555451438,0.0178328622,0.0876533017,0.0551687926,0.1176697686,-0.0122293215,-0.1010034904,-0.1408495456,0.0454217829,0.0327607132,0.0760193914,-0.0507903583,0.0330312662,-0.134684816,-0.0075420737,-0.1250741333,0.1721796542,0.015710054,0.0378624834,-0.1268953234,0.1411095411,0.1574544609,0.0723068863,0.1672218889,0.1129853055,0.1866140813,-0.1106749177,-0.0153365973,0.0103213619,-0.0888862163,-0.1328077912,0.0631184205,0.0789872631,-0.0297271032,0.0375669263,-0.0163583979,-0.1190417111,0.1966895014,0.0278273318,-0.0605733693]],"hackathon_name":"IC Hack 17","index":273,"project_description":"Get musical responses based on emotions in a chat environment.We were inspired by the functional composition talks given by Chris Ford.Plays music composed with overtone by scraping an online database of guitar songs and translating the song into arrays of pitches and durations.Web interface for the chat that connects to a Python server. The user's messages are analyzed with Microsoft's sentiment API and based on the response the environment music is changed accordingly.Music theory, JavascriptCreating music with no prior experience.Building a server from scratchIntegrating it with more instruments, songs and online chatsIC Hack 17Alexandru Dan\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:50 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SentiTones","project_tags":["angular.js","clojure","overtone","python","ruby","shell"],"project_url":"https:\/\/devpost.com\/software\/sentitones","keywords":"music,songs,server,online,web,composed,given,functional,ford,experience,environment,durations,database,creating,connects,composition,chris,inspiration,chats,chat"},{"level_0":274,"hack_vector":[[0.1573192328,-0.1166019365,-0.0278383438,0.0499804951,-0.0088827433,0.139295876,0.2143528014,-0.0449722596,-0.0266132765,-0.0026469023,0.0044699903,-0.0603900403,0.1546584517,-0.076651603,0.0569183901,-0.02351005,0.207006827,-0.0097737378,0.0455647409,0.1191442087,-0.239986375,0.0490787998,-0.0401432887,0.0018432984,0.1435520053,-0.0318290889,-0.03602577,-0.1779135913,-0.031718906,-0.0804058909,0.0842014775,-0.1411127895,0.0348101333,-0.0728031844,-0.041749388,-0.028207209,0.1236234978,-0.1386205703,-0.0508219339,-0.0162046514,0.0598940328,-0.140940249,-0.141780287,-0.0252005924,0.0650760904,-0.0331496596,0.0113824978,-0.0820407048,-0.0355003439,-0.1988539398,-0.141516149,0.0218397602,-0.1118089631,0.0319115371,-0.1989284307,0.1472802311,-0.1433579773,-0.0312067848,0.0167765114,-0.0915906355,-0.0715792477,0.0198195521,0.0835053399,0.0199736096,0.1037315056,0.0167868361,-0.0911180601,-0.1083771586,0.0247914158,0.0399848148,0.0697257966,-0.0484213382,0.0368320383,-0.1200029701,0.030678777,-0.1126684397,0.1746591181,0.0071188896,0.0036938614,-0.1286743432,0.1296078563,0.1454259008,0.051968351,0.1651421636,0.1071459204,0.2085271776,-0.0935038626,-0.0389814861,-0.0107491687,-0.0722795352,-0.1358109564,0.0563042387,0.0925174728,-0.0252042972,-0.002972377,-0.0025443011,-0.1455237865,0.2224209011,0.0143043017,-0.0627246872]],"hackathon_name":"IC Hack 17","index":274,"project_description":"An io game that incorporates shooting and a large dynamic open worldThe ActionOther io games Agario and Sliterio and Diepio, these are fun, but they are not true mmos as in they have a limit for the number of clients for each server.It is a true MMO top-down 2D shooter. It allows an unlimited number of player on the server in theory whereas the playable limit is close to 50.With a fast client server communication protocol that minimizes the data required to be sent. Internal representation of the game on both the client and server runs the game loop concurrently.LAG. Many players meant that we placed a lot of pressure on the server with the bottleneck being server network utilization.Being able to have >50 Clients connected whilst maintaining <30% CPU utilization.JS, PIXI.JS, how to manage team built code.Deploy to production servers and get more people to play it!IC Hack 17Worked on frontend and game mechanics. Made a lot of the graphics, e.g. health bar, scoreboard, kill feed etc. First time using JavaScript and plugins like Node, Socket.io etc. in a web-based situation (codecademy doesn't really count, does it). Very educational experience, incorporating knowledge from different languages into one big fun mess. Hate JS a little more now.I came up with the initial game ideal, I was trying was implement a backend with a newer architecture which should allow more players per serverZichen Liu\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:49 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"fooshoot.com","project_tags":["javascript","html5","node.js","socket.io"],"project_url":"https:\/\/devpost.com\/software\/fooshoot-com","keywords":"server,utilization,limit,true,js,built,game,client,clients,number,get,fooshoot,fun,games,whilst,inspiration,internal,diepio,io,lag"},{"level_0":275,"hack_vector":[[0.1516462564,-0.1217003837,-0.0200769231,0.0514123216,-0.0197591968,0.1314115077,0.1880948097,-0.0306092314,-0.0166654978,-0.0325559005,-0.0052639153,-0.0368227996,0.1323525459,-0.0700447708,0.0303230099,0.0338902175,0.2289430052,0.0028654458,0.0474579707,0.1346646547,-0.2427776754,0.0229159538,-0.0329366699,-0.0197533164,0.1484239846,-0.025447296,-0.0408536941,-0.1804808676,-0.0130028361,-0.0957202539,0.0366158038,-0.1155295745,0.0611824505,-0.0797611922,-0.015536678,-0.0241852924,0.124304615,-0.142106384,-0.0433031358,0.0309882723,0.0464657955,-0.145297423,-0.1622331887,-0.0475937426,0.028876951,-0.0694562942,0.0252160989,-0.0568082333,-0.0291108713,-0.2089235932,-0.1111685708,0.0143246679,-0.1139450818,-0.0250620618,-0.1741560698,0.1636134684,-0.141993776,0.0048029018,0.0268260669,-0.0573251471,-0.0579655692,0.0284596402,0.0568879992,0.0466318615,0.1256484985,0.0039828136,-0.1353646815,-0.1455202401,0.0252730437,0.0199362002,0.0842776075,-0.0569748394,-0.0001195046,-0.1350407749,-0.0011030055,-0.1027152389,0.1856350303,0.0045232489,0.0448934548,-0.1462732255,0.1078136712,0.1616715789,0.033808466,0.1625182629,0.1204538122,0.184802264,-0.1235598028,0.0074398299,-0.0135158636,-0.0932140574,-0.1299753189,0.0781985745,0.0739264116,-0.0203105062,0.0214363914,-0.0329289101,-0.1390306652,0.2092120945,0.0480428077,-0.0596509017]],"hackathon_name":"IC Hack 17","index":275,"project_description":"Try to compose tweets without using the top 1000 words in the English languageI was inspired by the book Thing Explainer by Randall Munroe of xkcd fame in which he attempts to explain complex topics using only the top 1000 words in the English language. I was interested in the inverse of this. What if you can only use words out of the top 1000. It was a fun experiment to see how much you can actually say without using the most common words!Check it out: http:\/\/bac43aab.ngrok.io\/IC Hack 17Alasdair Hall\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:51 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Stay Original","project_tags":["express.js"],"project_url":"https:\/\/devpost.com\/software\/stay-original","keywords":"words,using,top,constructing,fun,fame,explainer,explain,experiment,english,containing,xkcd,complex,http,check,book,bac,attempts,attempt,actually"},{"level_0":276,"hack_vector":[[0.1501521766,-0.0875128582,-0.0405549668,0.0372964554,-0.0163359661,0.1179402396,0.2046382725,-0.0033404776,-0.026736727,0.0066864667,0.0144296158,-0.0740754306,0.1422908455,-0.0644097403,0.0866173133,-0.0217863973,0.1711320728,-0.0186440237,0.0398445241,0.1221895963,-0.2471492738,0.0245847646,-0.0392127447,-0.0069728219,0.1063007787,-0.0233929232,-0.0205743946,-0.171341002,-0.0215281807,-0.0811567679,0.0700831413,-0.1137947291,0.0155668464,-0.0947308317,-0.0183984544,-0.00862733,0.1012273505,-0.1454722136,-0.0864886865,-0.0104066692,0.0431276299,-0.1259542406,-0.1269159168,-0.0211425293,0.0833052099,-0.0444149449,0.00721916,-0.0992738828,-0.0148200272,-0.2026477456,-0.1671162844,0.0032798306,-0.1156121269,0.0203512963,-0.2016547173,0.1651131958,-0.1239520311,-0.0275225285,0.0360768139,-0.1204038262,-0.0802975595,0.0288260989,0.0802380815,0.0473049432,0.1172391921,0.0144239813,-0.0989446789,-0.1054033116,0.029437907,0.0124913491,0.0586615615,-0.0411116965,0.0138670513,-0.1189436018,0.0403952152,-0.138790369,0.1784372479,0.0012066289,-0.012710792,-0.1333510429,0.1249167696,0.1530618221,0.070238702,0.1507008821,0.0949937403,0.2192943543,-0.0640654266,-0.0350852758,-0.0071124304,-0.0684650466,-0.1573382914,0.0517140031,0.1117142439,-0.0420947336,-0.0050847703,0.0217867158,-0.1690147817,0.246477142,-0.0050627813,-0.0628992319]],"hackathon_name":"IC Hack 17","index":276,"project_description":"Composing a poem from emotions and features derived from a photographFront pageExample poemUsing cognitive services to create an unusual, unique and creative application that which uses the service in a way that is unexpected. We wanted to create a fun yet meaningful experience for the users. We wanted to marry literature and technology together which is not often explored.The application uses Microsoft Emotions API and Computer Vision API to explore emotions and features within any photograph to compose an interesting abstract poem.Back-end: Azure Emotions API to recognise emotions within portraits and people, Azure Computer Vision API to identify features within photographs. After identifying these words we used the word association API to compose relevant words related to the poems. Furthermore, we implemented our own poetic sentence structure to give the poems a natural feel and flow naturally.No one in our team had experience with Python so this was a huge learning experience. Furthermore, this was first time our team was using API's and integrating them together. Coming up with poetic sentence structures and associated words from the image key words proved to be the biggest challenge.We manage to create cool poems most of the times! (Sometimes it can get a little weird though but that's ok, poems can be a little bit abstract :) )How effective and useful API's are to develop different functionalities of an application. Furthermore, this hackathon gave us a great idea of how Machine Vision works and how useful they can be in various applications. Additionally, we were grateful on the great documentation provided by Microsoft that made our life a lot easier using the API's.We would like to create better sentence structure that is more accurate grammatically as well as making the poems more meaningful. Furthermore, we are thinking about machine learning techniques that could be used on a big data set of words to create predictions of which words are the most powerful in different types of poems.IC Hack 17Mo Afshar\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:50 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Philosophical Poetry","project_tags":["python","django"],"project_url":"https:\/\/devpost.com\/software\/philosophical-poetry","keywords":"api,poems,words,create,emotions,furthermore,within,sentence,application,vision,using,experience,poetic,learning,microsoft,meaningful,little,machine,great,features"},{"level_0":277,"hack_vector":[[0.1638982594,-0.1033149585,-0.0244064219,0.0714930817,-0.0192976147,0.1794647574,0.2077746689,-0.0456391126,-0.0202370379,0.0140952216,0.0048706266,-0.0572676659,0.135642916,-0.0844132528,0.0603381656,0.0269732848,0.2248386741,0.030761471,0.0403509103,0.085977532,-0.2082606107,0.0397589281,-0.0580377132,-0.0482472964,0.1500151753,-0.0107799368,-0.0455723032,-0.2248256505,-0.0184562039,-0.0509442985,0.0801370367,-0.1385281235,0.0595413931,-0.1220197603,-0.0506882817,0.0253585838,0.1192699075,-0.1287631989,-0.0413646549,0.0277362,0.0322417468,-0.1633063108,-0.1739492565,-0.0042986195,0.0275799204,-0.0209281072,0.01767377,-0.0545280911,-0.0378428884,-0.2032028586,-0.1137342155,0.0213358793,-0.1028613299,-0.0203967802,-0.1276586205,0.1535366327,-0.1342449635,0.0327970907,-0.0002829817,-0.0409116074,-0.053241875,0.0271206032,0.0872229785,0.071678564,0.1362753659,-0.0246378109,-0.1132554188,-0.1305218041,0.0323595516,0.0098157208,0.0748499557,-0.0419036373,0.0266661122,-0.1477297395,-0.0039485949,-0.0941043496,0.2006204277,0.0142244548,0.0437560491,-0.1415274441,0.1480251998,0.1558497697,0.0892902538,0.1449136585,0.0933647454,0.191742301,-0.0775420219,0.0146020418,0.0335702449,-0.0889468417,-0.1218985394,0.0582008101,0.0613708459,-0.0152280787,0.0469895266,-0.0264032762,-0.1010968462,0.1965854317,0.0347050987,-0.0787611604]],"hackathon_name":"IC Hack 17","index":277,"project_description":"Meme generator using Microsoft Cognitive APIs knowing emotion and put corresponding memes onto the picture.People sending memes around.Recognize emotion and put corresponding memes on the picture.Using Microsoft Cognitive API to know emotion. Python as backend interface with Microsoft Cognitive API, process data and interface with front-end.Implementing parse http POST data, do web server from a lower level.IC Hack 17Jinxuan Cui\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:35 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Want a Meme?","project_tags":["html","jquery","python"],"project_url":"https:\/\/devpost.com\/software\/want-a-meme","keywords":"data,python,api,meme,microsoft,post,cognitive,work,interface,web,limited,memes,parse,emotion,http,using,server,corresponding,around,give"},{"level_0":278,"hack_vector":[[0.1637883037,-0.1094686836,-0.0265070628,0.0506205112,-0.01006494,0.1261874735,0.1962524056,-0.0200921074,-0.03797381,-0.0003168969,0.0162187442,-0.0773437917,0.1538764089,-0.0641643107,0.074365437,-0.026676083,0.180065304,-0.0164228417,0.0433710925,0.133772403,-0.2507562041,0.0250609331,-0.0389493406,0.0073035415,0.1337754577,-0.0355150439,-0.0281099286,-0.1754033864,-0.0330331326,-0.088077113,0.077884756,-0.118006587,0.0128008127,-0.0784528926,-0.0147703188,-0.0228303336,0.1031840816,-0.1462899595,-0.0712135956,-0.0159183498,0.062412627,-0.1273597628,-0.1317919493,-0.0195520166,0.0683180317,-0.0368016586,0.0074777463,-0.0934397802,-0.0208725594,-0.2042819709,-0.1474647969,0.0130837345,-0.1131366491,0.0315444805,-0.2161077559,0.1708018184,-0.1259991378,-0.0254485253,0.0300543923,-0.1154853702,-0.0740220398,0.0239739176,0.0688090026,0.0435033143,0.1153603867,0.0358033516,-0.0984248072,-0.1133621782,0.0102878455,0.0134679116,0.0652823895,-0.0378206223,0.0300869495,-0.1108395308,0.0469084047,-0.1178852245,0.175166294,-0.0109858364,-0.0035601475,-0.1210224479,0.1196759343,0.1491674185,0.0565026104,0.147396639,0.0980640724,0.2184918672,-0.0743544027,-0.0496268123,-0.0231687203,-0.0537933558,-0.1351853013,0.059413936,0.0965134725,-0.0469432175,-0.016019756,0.0173818991,-0.1627279818,0.2411748916,-0.0007501335,-0.0565247685]],"hackathon_name":"IC Hack 17","index":278,"project_description":"You'll never want to play another horror game again...Main menuTrainGround floor of houseFirst floor of houseOutside houseAs fans of horror movies and games, we wanted to built a new experience using Microsoft Cognitive Services, original artwork and by maximising all senses of the audience and scripting a story. We were really inspired by the artwork of many horror games, thus we decided to use our own original artwork for the game.It is a standalone horror game, utilising sound effects, tension and psychological stimuli to enhance the overall experience of the gamer. This was enhanced using live heartrate data, emotional analysis and the element of surprise.Two of us worked a lot on the artwork, using Adobe Photoshop CS6 (one did mock sketches on pen & paper and the other refined those sketches digitally). The other three members mainly worked on programming, splitting different language requirements for our game.We found doing the artwork incredibly challenging, as we found that it was more time consuming than we originally thought. Additionally, the difficulty of creating a feasible story line was greater than we thought.We managed to make a game on which we received very positive feedback from various other IC Hackathon participants (we managed to scare them). We believe the original drawings we produced for the game were very successful and fit the horror atmosphere of the game. Sound effects were used incredibly well in combination with our graphical effects.We learned how to keep awake and work efficiently under sleep deprivation. We additionally learned how to work more effectively as a team. Our team got on very well and we are happy to work together again in the future. We learned how to modify audio (e.g. from third party sources), how to use Photoshop to enhance our artwork and in particular we learned how to modify voices of our team members.Although we have plenty of user interaction, we want to further enhance this area, by implementing hand gestures to allow users to interact with the game using the video motion API (Microsoft). If the game is longer, we could store data from the user (given the user's permission of course) into a database and perform data analysis from this. We may continue working on Karma and release it to market.IC Hack 17Kai Du\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:52 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Karma","project_tags":["jquery","css","html5","php","python","photoshop","fitbit","css3","javascript","ios"],"project_url":"https:\/\/devpost.com\/software\/karma-lsyi81","keywords":null},{"level_0":279,"hack_vector":[[0.1367621869,-0.1001674309,-0.0342286825,0.0165272448,-0.0191150829,0.137799412,0.2122176141,-0.0478785746,-0.012456391,-0.0179307852,0.0169729088,-0.0626637265,0.1271234602,-0.0696464851,0.0563401803,0.0149247302,0.2272609621,-0.0046575838,0.0297139995,0.1264803708,-0.2379754633,0.0404254124,-0.0326002128,-0.0251910929,0.1001019925,-0.0200270154,-0.0226269998,-0.1712866575,-0.018954413,-0.0963438004,0.0616857819,-0.1350734532,0.0340455063,-0.0829386562,-0.0190427583,-0.0302296188,0.1195611954,-0.139510259,-0.055306904,-0.0082221599,0.0343188718,-0.1426702589,-0.1477390975,-0.046425458,0.0722412989,-0.0559358858,0.0124300718,-0.062955223,-0.0372900553,-0.2075180113,-0.1418905407,0.010737285,-0.1024073362,-0.0067396346,-0.1952914298,0.149557665,-0.1285670102,-0.0315186493,0.0329007804,-0.102047503,-0.0705456212,0.014059525,0.088980116,0.0442358553,0.1018844396,0.0112570412,-0.1034233794,-0.1215301976,0.0478559472,0.0392751954,0.0688172504,-0.0579964034,0.034514498,-0.1178950444,0.0189973768,-0.1438271105,0.1579898149,0.0058147926,0.011961841,-0.1335932165,0.1321535707,0.1624454707,0.0507841259,0.1921845078,0.0967154652,0.1885712147,-0.1119589657,-0.0425687656,-0.0199793447,-0.0802139416,-0.1501673311,0.0486237593,0.0987120718,-0.0453596041,-0.004857962,0.0138836056,-0.1513728946,0.2179906964,0.0067903362,-0.0752983168]],"hackathon_name":"IC Hack 17","index":279,"project_description":"Trustless, Cryptographically Secure and Private Matchmaking ServicelargeHardCryptoLogoDildo.io is a popular matchmaking website used by the MIT community, restricted to MIT members. The idea is simple: You select a subset of users you are interested it in, and if the interest is mutual, you both get notified. Hardened dildo.io is a a paper that describes how to build a similar system, with the additional property that the server can't know who you like and dislike.Our goal for ICHack 17 was to implement the Hardened Dildo.io paper as a web application.HardCrypto is a private and cryptographically secure matchmaking service, aimed at student communities, that can guarantee to keep your likes and preferences private without having to trust the server (and whoever hacks into it).It's like Tinder, but only with verified people from your school, and nobody except for you can know who you like. Or philosophy is one where we put users preference first and assume all options are opt in and that no information (such as sexual orientation) is assumed.The core idea behind HardCrypto is Homomorphic Encryption, a form of encryption that allows computations to be carried out on the ciphertexts without revealing the plaintext. When every user joins, they create an RSA key pair for signing and encrypting messages and publish their public key. Then, for every other user in the system, a Paillier key pair is generated and sent to the other user encrypted with their public RSA key. The server can then perform operations on the numbers encrypted with the Paillier key pair.Our stack is built in EcmaScript 6. We use node.js, express, mongo for the backend and React for the frontend, along with tons of libraries.Launching at Imperial in Spring Term 2017.IC Hack 17Johannes Prosser\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 05, 2017 06:18 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HardCrypto","project_tags":["javascript","mongodb","node.js","express.js","redis"],"project_url":"https:\/\/devpost.com\/software\/hardcrypto","keywords":"key,hardcrypto,user,dildo,pair,server,io,like,mit,first,rsa,encrypted,encryption,every,public,private,paper,next,matchmaking,paillier"},{"level_0":280,"hack_vector":[[0.1530384868,-0.1222110242,-0.0404695459,0.0359749123,-0.0141660711,0.1169439927,0.1882224232,-0.0231517777,-0.0133005986,-0.0022792814,0.0068890718,-0.0848084986,0.1439377517,-0.0565710329,0.0865602866,-0.0124953976,0.1817810982,-0.0071818167,0.041735407,0.1165418252,-0.251434654,0.0464419611,-0.0397513546,-0.0068722703,0.099552758,-0.0310693569,-0.0201999899,-0.1751009971,-0.0304994006,-0.0815717876,0.0762013867,-0.1359298825,0.0205824096,-0.0924901366,-0.0224381015,-0.0332687944,0.0993779376,-0.1611209214,-0.082682617,-0.0235131457,0.0306710266,-0.139461115,-0.1407999247,-0.03133085,0.0637266487,-0.0499794967,0.0050719734,-0.0917533934,-0.0320881642,-0.1981404871,-0.1689189821,0.0038272489,-0.1074833646,0.0100713195,-0.2024823278,0.1552126408,-0.1149234548,-0.0289667957,0.0359299742,-0.1080952212,-0.0922978893,0.0278342944,0.0718029439,0.0479224361,0.0868580043,0.0259589385,-0.1005882919,-0.1039624214,0.0244147927,0.0236367062,0.079188548,-0.0592442639,0.0374761596,-0.121228449,0.0347908214,-0.1369581521,0.1772600263,0.0070374976,0.0029277427,-0.1249114349,0.1282201409,0.1534416676,0.0615845099,0.1587121189,0.0963455066,0.2026932836,-0.0875770375,-0.0421094187,-0.0103945835,-0.069558315,-0.1318374872,0.0555597953,0.1107784584,-0.0589173026,0.0022961197,0.0085019907,-0.1589318216,0.2389851809,-0.0066306493,-0.0749908462]],"hackathon_name":"Hack Cambridge Recurse","index":280,"project_description":"Quantifying trends in feelings (e.g. interest, surprise, disgust) about political candidates by data mining Reddit!Everyone knows reddit :)Just a source of cats, useful bananas and memesters?Slide1 - Mining reddit for information on how people felt about Trump, Sanders, and Clinton over the last 12 monthsOverview of the project methods :)Wow, that's a lot of Trump!Some interest trends in posts by month, upvote ratios, popularity ('score') and Trump-nessReddit actually has a really active political community. Clearly there is a lot of information that we can gain from analysing r\/politicsAs a rough and ready measure of emotions, mapped a known set of word-emotion pairs to r\/politics submission languageNot too interesting yet..Quite a lot of emotional separation by Trump-nessFuture work! Ironing out the messy code for the previous analyses aaaand..What a \"surprising\" result, heheh.Hillary posts don't seem the same separationSeeing if The Donald uses recognisably different sentence structures. But maybe, beyond comprehension? :)Doing emotion detection on photos of world leaders meeting, to predict political outcomesAzure for sentence topic tagging and emotion taggingMethods appendix for the keenosJupyter notebook + python and a Reddit API wrapper used to mine Reddit dataOutput is pandas dataframe from .json dictPusher attempt was not successful :\/R code in RStudio (<3)Azure as beforeThe slides seem to show up out of order on this site. I also stuck a .pdf and .pptx are on my github for convenience.Reddit isn't just cat memes - there is a hugely active political community that is rich in information about the public's attitudes and feelings towards political topics and candidates. A simple data mining and sentiment analysis approach should be able to capture some interesting information.This was a data science project, so it involved me building scripts to grab a lot of data, then cleaning and visualising the data. I made some interactive plots in ggplot\/plotly and outlined some interesting trends that we can see from analysing the content and emotional valence of the top 1000 posts in the previous year (see presentation slides\/pdf).I used a Reddit API wrapper library called PRAW to gather the 1000 most \"top\" and \"controversial\" posts in the last 12 months, together with the top comments on this post. I also have information on the upvote ratio, total post score, whether the top comment was gilded, etc. Lots of data (but annoyingly, limited to n=1000 because after that I get various HTTP errors from PRAW\/urllib).Data was then imported in R\/RStudio, in which I used a set of data analysis and visualisation tools that I'm already comfortable with. Microsoft cognitive services was used to tag sentence topics and score emotions from 0 to 1, but I also used outside data to get a more fine grained view of emotion.Lots of new tech O_O. Issues with request timeouts, and lots of trouble with Pusher. Still, happy I got something off the ground.Never mined Reddit before, but have been wanting to since I'm a total Reddit fanboy.Lots about reddit's internal structure, and more generally how to mine reddit data :)Patching up the existing analyses, and extending into mapping the linguistic structures by candidate (maybe a model could identify Trump's distinctive stoccato, rambling style?).I also think that doing emotion detection in the faces of political leaders in photos of political meetings could be insightful - if one leader is looking happy and another is annoyed, this could be a predictor of a bad meeting, which could have potentially worldwide significance.Hack Cambridge RecurseNatasha Latysheva\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:30 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Data Mining Political Emotions on Reddit","project_tags":["python","r","reddit","pusher"],"project_url":"https:\/\/devpost.com\/software\/data-mining-political-emotions-on-reddit","keywords":"data,reddit,political,used,could,top,also,lots,information,see,slides,happy,topics,pdf,post,posts,emotion,mining,total,get"},{"level_0":281,"hack_vector":[[0.1448272765,-0.0852173492,-0.0344464928,0.0407269038,-0.0281949081,0.1374645531,0.1996109933,-0.0120732589,0.0003583028,-0.0192487203,0.0041010194,-0.0574729294,0.1286534071,-0.0550627634,0.0578000061,0.0060119634,0.2104512602,0.0094745643,0.0424057096,0.1242671683,-0.2450192422,0.0159892011,-0.0374392048,-0.0113923121,0.1118143424,-0.0156349782,-0.0304480698,-0.1675924957,-0.0029359644,-0.1017923057,0.051750645,-0.1236575469,0.0221379213,-0.0780249313,-0.0012098029,-0.0102174962,0.1174374372,-0.144507587,-0.0706956461,-0.0024739243,0.0384760611,-0.1418984979,-0.1295228451,-0.0456335209,0.0553403273,-0.0661899894,0.003037577,-0.0729802698,-0.0181455035,-0.1988724768,-0.143684268,0.0148448627,-0.1089217961,-0.0098437844,-0.2027680576,0.1624544114,-0.1293317229,-0.0319371484,0.0436126292,-0.1001862288,-0.0744902343,0.0224993899,0.0801821798,0.045519907,0.1165153384,0.0217415206,-0.1045106873,-0.1391678452,0.0397654176,0.030313259,0.0724494979,-0.0548048951,0.0245590936,-0.1197627336,0.0235857181,-0.1359901577,0.1693965644,0.0049370592,0.0048593441,-0.1479911059,0.1035306081,0.1576716155,0.053478729,0.1669964492,0.0972612947,0.2017416358,-0.1040600538,-0.0310517959,-0.0238076504,-0.0771918073,-0.1460552067,0.0625587702,0.0912271664,-0.0401265919,0.000659623,0.0237365291,-0.1636350453,0.2488603741,0.0047984645,-0.0772249401]],"hackathon_name":"Hack Cambridge Recurse","index":281,"project_description":"Never lose stuff again, forget about forgettingWe lose track of items almost on a daily basis. The struggle can be real. And with age, this becomes even worse. There is a need for a simple and seamless solution that will keep track of your most valuable items.In a future of AR, we will have a camera attached to us at all times. Using object recognition, it will recognise your most valuable items and save a short video that will be stored in the cloud. Thus, whenever you cannot find something, you can look it up in the cloud.We used Google Tensorflow to build our own Neural Network. Our system takes video input of your most valuable items and generates the training data from it (super easy!).We initially intended to use an API. However, we decided that building our own Neural Network would be more appropriate for our purposes.We built our own Deep Neural Network for the first time -- and it works!Hack Cambridge RecurseAndrej Ivaskovic\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:22 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ctrl-f-vision","project_tags":["python","node.js"],"project_url":"https:\/\/devpost.com\/software\/ctrl-f-vision","keywords":"items,network,neural,valuable,track,built,cloud,video,appropriate,easy,intended,inspiration,age,almost,input,initially,however,google,generates,future"},{"level_0":282,"hack_vector":[[0.1471269578,-0.097937502,-0.0265708342,0.0307803266,-0.0077920523,0.1249320284,0.2163247019,-0.0247255825,-0.0254012775,0.0061506392,0.0100440057,-0.073485814,0.1359486729,-0.0665089414,0.0796400607,-0.0122443372,0.1925119311,-0.0170806982,0.048849497,0.1247330979,-0.248364538,0.0533068366,-0.0376125276,-0.0094404714,0.1072102562,-0.0256364569,-0.0230719652,-0.1829397827,-0.0277962089,-0.0835461915,0.0739750713,-0.1318365335,0.0294418857,-0.0990693644,-0.020669803,-0.0311968625,0.1077065393,-0.1429946274,-0.0732412413,-0.025211988,0.0390737243,-0.1494265199,-0.1291612089,-0.0401914194,0.074549906,-0.0376806147,0.0006512017,-0.0948895738,-0.0248274803,-0.1932133734,-0.1505670696,0.01212129,-0.1164814979,0.026584344,-0.2030175477,0.1535075605,-0.1375187933,-0.0300574247,0.0382325724,-0.1155718863,-0.0796060935,0.0197047312,0.0846315697,0.0374382101,0.0984624252,0.0199008174,-0.0987710953,-0.1114332825,0.0353642739,0.0348271765,0.0725117624,-0.0584969372,0.0361171141,-0.1227186471,0.0424301401,-0.1458865106,0.1621158868,-0.0011786978,0.0050323135,-0.1273022443,0.1240512058,0.1430267096,0.0754643828,0.1605587453,0.0965504274,0.1989107579,-0.0851392969,-0.0444797762,-0.0047254227,-0.069538869,-0.1514979452,0.0469879396,0.104234919,-0.0523541644,-0.0119021758,0.0218902044,-0.1622120589,0.2159871161,-0.0013311093,-0.065918602]],"hackathon_name":"Hack Cambridge Recurse","index":282,"project_description":"your face has been hijackedHigh confidence result on Laurynas' face.High confidence result on Edgar's face after adversarial modificationWebcam capture successfully authenticating Laurynasyour face has been hijackedMachine learning with deep neural networks (commonly dubbed \"deep learning\") has taken the world by storm, smashing record after record in a wide variety of difficult tasks from fields that were largely unexplored in previous years, such as computer vision, speech recognition and natural language processing. One computer vision task that benefits from such clear gains is facial recognition (identifying a person based on his\/her face)---a deep neural network being the primary tool used for this purpose at Facebook, among other places.One natural extension of the above could be to exploit neural networks within a secure application, in order to authenticate a person based on a shot of their face. Unfortunately, despite the apparently superb performance of such models, it is fairly easy to construct inputs which can trick the network into authenticating a stranger (commonly known as adversarial examples). We built FaceJack in order to illuminate this concept. In particular, we'd like to emphasise:But let's take it slowly---what even are adversarial inputs?Adversarial inputs are made possible by the very design of neural networks. On a high level, a neural network consumes an input, performs several transformations to it, in order to predict a corresponding output. The network parameters are adjusted by running the network on a training set (a set of known input\/output pairs from which the network needs to generalise). The network's transformations are designed to be differentiable, so that the network can be efficiently trained by:The network's differentiability allows us to consider the error function in its parameters, for a fixed input and output---so we can optimise them. However, it also allows us to set up an error function in the input, for a fixed choice of parameters---so we can modify the input to produce a desirable output. If the \"desirable\" output classification is one that the original input does not belong to (e.g. classifying my face as John Travolta), then the constructed input represents an adversarial example. Deep neural networks are particularly vulnerable to such inputs, for three main reasons:Therefore, using neural networks in secure applications requires particular care, as adversarial inputs give rise to a potentially unforeseen covert channel for an exploit.We have built FaceJack as a simple representative of such an exploit:Hopefully, FaceJack has achieved its objective of highlighting this important issue in a clear and concise fashion. We hope to expand it in the near future with further authentication attacks, for example speech recognition-based ones.MIT\n(CCTV Icon made by Freepik from www.flaticon.com)Hack Cambridge RecurseI primarily worked on the stats reporting system, but I've also set up and managed deployment on Azure ML services.I have primarily worked on developing the algorithms for generating the adversarial inputs, optimising the fine-tuning schedule hyperparameters, and hooking up the back-end with the front-end.I began by transferring the trained VGG deep learning model from Caffe to Keras. Afterwards, I fine-tuned it with the dataset of faces we built during the hackathon, which included Laurynas (the admin) and the rest of us (adversarial examples).I created the webcam hooks, computer vision part leveraging face detectors, server to receive images and perform the authentication, and gathered and processed the training dataset.Edgar Liberis\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:11 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"facejack","project_tags":["python","html","css","flask","opencv","scipy","vim","numpy","azure"],"project_url":"https:\/\/devpost.com\/software\/facejack","keywords":"network,adversarial,input,inputs,neural,output,one,facejack,face,deep,networks,based,recognition,error,parameters,often,order,example,computing,facial"},{"level_0":283,"hack_vector":[[0.1608786583,-0.1180171147,-0.0303896274,0.0576748848,-0.0125273243,0.1366393417,0.1977396458,-0.0327761695,-0.0267275944,-0.0050730132,0.0110591808,-0.0580813289,0.1480192989,-0.0688337833,0.0722266585,-0.0414421521,0.1783413142,-0.0239271279,0.0600615293,0.1138490587,-0.2530058622,0.0209523421,-0.0402236879,0.0055210674,0.1298811138,-0.0374080464,-0.0231604483,-0.169371739,-0.0340242349,-0.0796269327,0.077341713,-0.1288434863,0.0216239095,-0.0731973201,-0.0380806401,-0.0270157456,0.1086046398,-0.1428276747,-0.0736890063,-0.0052010799,0.0661327615,-0.1122925356,-0.1239308119,-0.0249819774,0.0555976443,-0.043521706,0.0104956562,-0.0897570774,-0.0264650807,-0.2030879408,-0.1551460028,0.0143104298,-0.1245572045,0.0323236138,-0.201802209,0.1589554846,-0.1394242644,-0.0207656231,0.0150118796,-0.0953647569,-0.0702529997,0.0229064673,0.0639391616,0.033822339,0.1168081537,0.0265830886,-0.1047468781,-0.1098724157,0.0048012664,0.0221394133,0.0628456995,-0.0423333682,0.0242283791,-0.1310073584,0.0424633324,-0.1108666286,0.1936127841,0.0096706115,-0.0052122585,-0.1367312819,0.1248986498,0.1476455033,0.0481782742,0.1514720619,0.1163358688,0.2190992534,-0.0740403831,-0.0335796662,-0.0123524368,-0.0571611933,-0.1383567005,0.0680006146,0.1061044484,-0.0364286639,-0.0049291183,-0.0057599689,-0.1499338597,0.2403635681,0.0141182318,-0.0564072356]],"hackathon_name":"Hack Cambridge Recurse","index":283,"project_description":"SpatialOS + Unity + Deep Reinforcement Learning: scalable AI for complex environmentsHave a look at our Google Drive link in the description below.Please have a look at the following git repositories:\n1) https:\/\/github.com\/jacqueselliott\/unityRL\n2) https:\/\/github.com\/96imranahmed\/asyncRL\n3) https:\/\/github.com\/jacqueselliott\/SpatialRLDeep Learning is powerful - Deep RL can solve real complex stochastic problems and we wanted to show a proof of concept that Deep RL can be used with UnityHave a look at the G-Drive. There are a lot of moving cogs (especially with Spatial OS)!Come around to our table and we'll be happy to tell you!SpatialOS - Spent a lot of time trying to get C++ workers to work. Made great headway but couldn't quite make it all compile due to errors with C++ Tensorflow API. Code works in part although integration has been very difficult due to the novel nature of all the software packages we were usingManaged to create a complex Deep-RL architecture that trained successfully on a Unity simulation. We also got the (notoriously difficult) Tensorflow C++ API to work!Deep RL + Spatial OS + Unity is a powerful combination that can be used to train complex AIs in a scalable manner in the future.More research. More layers. (Much) More hyperparameter tuning!But more seriously, we want to dive in more into multi-agent problems with more complex simulations because we believe there is a lot of scope in this area!Hack Cambridge Recurseworked on spatialOS side and integrating tensorflow into the c++ workers. I learned this did not go wellDeep RL, C++ tensorflow, PythonWorked on spatialos and created the offline unity simulations as well as the spatialos simulation. Built tensorflow into a spatialos worker (very nearly)Imran Ahmed\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:41 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SpatialRL","project_tags":["c#","c++","python","unity"],"project_url":"https:\/\/devpost.com\/software\/spatialrl","keywords":null},{"level_0":284,"hack_vector":[[0.1269607842,-0.1168530807,-0.0106498916,0.0526076369,-0.0312088728,0.1414862871,0.1872879118,-0.0370600149,-0.0237730667,-0.0152305905,0.0081575736,-0.0398207456,0.1395503432,-0.0775097087,0.0313670896,0.046254158,0.2514342666,0.0165137053,0.0445309393,0.1087068617,-0.2280382514,0.0352857523,-0.0459099561,-0.0331897885,0.1391346008,-0.0208037067,-0.0545618981,-0.1951835603,0.002124212,-0.0856650323,0.0597852245,-0.1240502745,0.0547547825,-0.0823210105,-0.0219595898,-0.007859339,0.134139061,-0.1361933202,-0.0241955947,0.0292259697,0.0336405821,-0.1682399362,-0.1881699711,-0.0408107825,0.0150301997,-0.0588558689,0.019779088,-0.0519382171,-0.0225627497,-0.2089596093,-0.1016807854,0.0283109751,-0.1016208306,-0.0300930068,-0.1779222786,0.1649284959,-0.1499340981,0.0173506085,0.0208374262,-0.0493815765,-0.0479489639,0.0292306971,0.0741057172,0.069673121,0.1223997995,-0.0086126877,-0.1081249043,-0.1540732384,0.0411193296,0.0181032959,0.082056284,-0.0532541312,0.0180735625,-0.1305674016,-0.0107230321,-0.1057073697,0.1885422617,0.0135295391,0.0596605018,-0.1377363056,0.1249185279,0.1573584676,0.0490156151,0.1576827317,0.1195615008,0.1763989925,-0.1356181949,-0.0145241534,-0.0071642464,-0.1008391604,-0.1134077609,0.0689442754,0.0639005527,-0.0265681371,0.0332905725,-0.0270668808,-0.1218115166,0.1845916808,0.0513585657,-0.0715726316]],"hackathon_name":"Hack Cambridge Recurse","index":284,"project_description":"See your favourite artists all around the world, for the best price possibleWe were interested in getting the best deals for concerts for an artist. We created a webpage where the user can search for an artist and will get (with simlar artists\/concerts in option) a combinations of concerts (prices and locations) with corresponding best flights deal to fly there.Hack Cambridge RecurseI did the front-end, then worked alongside Maxime on manipulating the data from Skyscanner and SongKick into a usable formatLucille Calmon\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:22 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"GetMeThere","project_tags":["javascript","html","css"],"project_url":"https:\/\/devpost.com\/software\/skyscanner_concerts","keywords":"concerts,artist,best,user,artists,combinations,corresponding,created,deal,deals,flights,webpage,get,getting,interested,locations,option,prices,search,simlar"},{"level_0":285,"hack_vector":[[0.1408846229,-0.1099656522,-0.0236925986,0.0507388301,-0.0150181716,0.1363496035,0.2017108947,-0.0251116306,-0.0351277404,-0.0037998543,0.010568236,-0.0615268201,0.1391375065,-0.0607352182,0.0604065843,0.0097168684,0.2123096734,0.003039286,0.0387211815,0.1318437308,-0.2440686822,0.0340186879,-0.0429283231,-0.0093336068,0.1319518834,-0.0204368103,-0.0426765531,-0.190660432,-0.0261554997,-0.0899971798,0.074599646,-0.1284613162,0.0281740129,-0.0821037292,-0.020995453,-0.0224947259,0.1073460504,-0.1366163939,-0.0475205295,-0.0091489265,0.045689445,-0.1485701352,-0.1531019658,-0.0405626521,0.0511021093,-0.0462524667,0.0073141642,-0.0671316162,-0.0270033833,-0.2067260295,-0.1165093035,0.0125608677,-0.1029725522,0.0137076937,-0.1944816262,0.1635957062,-0.1415293962,-0.0138767147,0.0243389737,-0.0948582664,-0.0691489205,0.0254944172,0.0697096139,0.0422516763,0.1088056341,0.0202522464,-0.1054689959,-0.1358260661,0.0344691016,0.0233266,0.0688828006,-0.0495287813,0.0302125756,-0.1149256006,0.0196000505,-0.1177950799,0.1676658988,-0.0023546303,0.02542427,-0.1318773329,0.1178085729,0.1567936689,0.0649443045,0.1658447832,0.1139594167,0.2096619606,-0.1020348817,-0.0367905535,-0.015384214,-0.0728109777,-0.1399024874,0.0681634024,0.0928370655,-0.0409256816,-0.0082164072,0.0028263831,-0.1561757326,0.2275146842,0.0169703681,-0.0677694529]],"hackathon_name":"Hack Cambridge Recurse","index":285,"project_description":"Relief your coding discomfort while having fun!Game capture with a funny faceGroup presentationAs all the programmers we also experience the downsides of hours of hacking in front of computers. While researchers constantly encourage the importance of stretching exercise to release tension in our muscles, it is not always an appealing activity.  As it is difficult to get out of the work zone, we propose a nerdy and fun solution that also takes good care of your health. Inspired by the Arthritis Research UK, we designed a software that encourages the programmers to remotely control the game flow while exercising the neck and face muscles.It allows the users to remotely control the game using the movement of their necks and heads in near real time, which are based on the simple excercises recommended by the Arthritis Research UK. Consequently it releases the tension and allows you to take a break from intensive work. More importantly, it is a great fun!We used the Microsoft Cognitive Services, in particular, faces and emotions APIs to track the position of the head with respect to xy axes in order to link the user movement to the game control. In addition, a twist was added with the emotions API to perform certain actions with some facial expressions. We used Pygame and multithreading to control the game flow in near real time. We implemented two games, a Tetris and a Football dribbler for different target groups. We also considered features to alert the users when they stayed in the same position for too long, and offered a game.Multi-processing in coordination with the Pygame module.\nMultiple Pygame surfaces didn't agree.\nThe design of the game control with nice graphics.Linking different components together, in particular, the real time capture with running games.Pygame, Microsoft Cognitive Services, near real time camera captureAdding more fun games, More movement control, user notification on inactivity, speech API, learning the trends with machine learning, customised games.Hack Cambridge RecurseJola Mirecka\n          posted an update\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 10:37 AM ESTMake sure to check out the demo! \nhttps:\/\/vimeo.com\/201535797Log in\n      or\n      sign up for Devpost\n      to join the conversation.Dongli Li\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:46 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hack A Neck","project_tags":["python","pygame"],"project_url":"https:\/\/devpost.com\/software\/pain-in-the-neck","keywords":"control,game,real,games,time,pygame,near,movement,fun,also,programmers,learning,capture,research,remotely,emotions,cognitive,microsoft,different,position"},{"level_0":286,"hack_vector":[[0.1363672018,-0.1024606898,-0.0325407721,0.0347488523,-0.0193336494,0.1131622344,0.1881382912,-0.0112233637,-0.018314667,-0.0162516087,0.023744911,-0.0731101111,0.1441330463,-0.0617689118,0.0816293657,-0.0107550491,0.1857850105,-0.0166717339,0.0385142304,0.1348591447,-0.2506837547,0.0234233495,-0.0350816175,-0.0085314456,0.0926822424,-0.0366126783,-0.0185280032,-0.1693570614,-0.0275887083,-0.0913448781,0.0666944608,-0.106427379,0.008468451,-0.0778500512,-0.0141291479,-0.0190963876,0.1003307626,-0.1513418257,-0.0741280466,-0.0117214946,0.038377203,-0.1172157899,-0.1329696476,-0.0309931096,0.0794612393,-0.0594845489,0.01210027,-0.0889658108,-0.0228167754,-0.2169977427,-0.1640127748,0.0039644167,-0.1085035801,0.0048116869,-0.2152763903,0.164933145,-0.1134009287,-0.0364599153,0.0409284011,-0.124395676,-0.0803423822,0.0228583571,0.0719455034,0.0508681275,0.1045799106,0.0298020579,-0.0908486322,-0.1101450622,0.0231960807,0.0068588825,0.0574976318,-0.0481328182,0.0257541947,-0.1093124896,0.0388065651,-0.133136034,0.1726750433,-0.0103922226,-0.0122879995,-0.1366441846,0.1244130731,0.1632914692,0.0498572402,0.1666892767,0.0922380015,0.2150303423,-0.0824420974,-0.0528575256,-0.0308658294,-0.0654598176,-0.1575174183,0.054661721,0.1072856411,-0.0494134836,-0.0222457629,0.016389817,-0.1721131951,0.24078013,-0.0042066099,-0.0701687932]],"hackathon_name":"Hack Cambridge Recurse","index":286,"project_description":"eXplore makes science education interactive and personalised!Decreasing costs of genome sequencing have brought forward a new era for personalised genomics. In 2016, over 1 million individuals had had their genome sequenced, with over 80% of them expressing an interest in taking part in research.Even with this abundance of genomics data, an obstacle remains to translational research: the communication between institutions and research participants is static and often unilateral.We believe that scientific research and progress in medical research should be facilitated by ease of communication between stakeholders without a third-party restricting access to invaluable data. We decided to build a tool that facilitates this communication by giving back content to users that is directly relevant to them in plain language. We hope that clarity and personalisation will sustain participation and accumulation of valuable data over time.eXplore tailors research findings to users' individual genotypes, making research content directly relevant to them. We curate scientific reports that summarise the literature avoiding jargon and making it fully interactive. As users read through the report, they get personalised insights based on their unique DNA. We make it very easy for them to understand where they fit in and what they can learn about themselves from the research they're reading.We use eLife Lens API to display the content in a user-friendly way so that users can browse through content seamlessly. We offer basic science explanations on any term that we think might be difficult to understand for a reader with no background in science and tailor the content to their genotype.We use 23andme API for seamless integration of the genomic data and guarantee safety and privacy through encryption.The idea behind eXplore was to make genetics education and research a lot more interactive. Research is way too dry, so even though people are really interested in learning more, there is a big barrier to entry. As scientists, we loved the way the eLife Lens made scientific articles easier and more intuitive to parse through. We thought that we could re-purpose this open source project to do the same thing for public engagement with science. Instead of annotating a research article with figures and references, we used the right hand panel of the Lens format to display definitions for hard-to-understand concepts. We also added a personal element to the research being presented by taking individual genetic data (drawn from somewhere such as 23andMe) to allow the reader to check whether a particular genetic variant described in the article (e.g. one that makes coriander taste like soap) applies to them.The main challenge was learning some node.js and the specifics of the XML format used by the eLife lens project in order to alter the code base to make this happen!Our team did not have experience working with node.js, so finding my way through the eLife lens API in this new language was a real challenge and kept me locked to the screen well into the night.Taking an open-source project and breaking it down piece by piece to add new features was really exciting. I especially enjoyed \u2018learning by breaking\u2019 by deleting parts of the code to understand what was \u2018mission critical\u2019 and what we could play with.Beyond navigating node.js and having fun with eLife Lens API, we learnt that there is a lot to be done on how to engage users with scientific content. It's something the three of us have felt passionate about for a long time and this hackaton has provided us to opportunity to see that it is indeed possible with a bit of work and motivation!We really want to work on developing our content and functionalities further so that we can share our passion for genetics with a larger audience and help people realise how much they can gain from research.We have learnt a lot during these past two days and feel very excited about developing eXplore further. The next step for us is to integrate user feedback by integrating checkbox that encourage them to verify whether what we think we know about their genotype applies to them. In our example for taste preference, we introduce a mutation that predispose individuals to disliking coriander. We want users to be able to tick a checkbox that says \"That's not true for me\" and gain insights as we go.We also want to develop a chrome extension so that when users click on references in our articles, they can directly open a PubMed or eLife article and see highlighted in blue the key points of the article and in yellow the parts that directly relate to their genotypes, without having to read the entire paper.We also need to develop many more curated reports and we're thinking of making this an open source project for geneticists worldwide to contribute and propose research projects that users can participate to.Hack Cambridge RecurseI worked mostly on curating content for the reports, going through scientific article to create a comprehensive summary of SNPs and allele interpretation to make it easy to understand for our users. I brainstormed the features that our users would want to see in our reports and on ways to integrate scientific research in a user friendly-way to encourage them to explore further. We all contributed to coming up with a long-term strategy on our product implementationI forked the eLife Lens project and hacked away trying to make it work for us! It took some time for me to wrap my head around the node.js and xml, but surprised at how much we could do in such a short time.Also used the Pubmed python API and the eLife API to pull all of the articles related to a particular genetic variant - we didn't have time to fully implement this feature but it is high on the priority list!Made some small contributions from my bed, sipping on some lemsip, while my kick ass teammates hacked through the night and wrote some great content.Charlotte Guzzo\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:58 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"eXplore","project_tags":["python","node.js","elife","github"],"project_url":"https:\/\/devpost.com\/software\/explore-k2qxn9","keywords":null},{"level_0":287,"hack_vector":[[0.1765369326,-0.1464364976,-0.0122522758,0.0869174376,-0.024500614,0.1545354128,0.1767986715,-0.0369348787,-0.0391377583,0.0211382024,0.0004306885,-0.0541553199,0.164541468,-0.0723884851,0.0621503033,0.020350581,0.2127140909,0.0087043764,0.0595425069,0.0816287398,-0.2399057746,0.0388214849,-0.0547827817,-0.0190833192,0.166206792,-0.0409220159,-0.0612165034,-0.2042793334,-0.0045200661,-0.0427934714,0.0784186274,-0.1276086271,0.0416354835,-0.0788017213,-0.0528719798,0.0006522304,0.1127390414,-0.1415305734,-0.0433512218,0.0279982816,0.036991816,-0.1636647284,-0.1773920357,-0.0086856391,-0.000694698,-0.0227268841,0.0088470234,-0.061890427,0.0028158661,-0.1790394336,-0.1041671038,0.015983481,-0.1164970025,0.0126522016,-0.1658371538,0.1536386609,-0.1457453817,0.0350019336,0.0075295609,-0.0362464525,-0.0630697012,0.0385227576,0.0717628896,0.0747324079,0.1132591888,-0.0041295569,-0.1077202111,-0.1434317976,0.0071926238,0.0106423944,0.0916162729,-0.0421053953,0.0330493487,-0.1376848519,-0.0019316891,-0.1022656858,0.2072599232,0.0032992561,0.0474190302,-0.1120643392,0.1394672543,0.1382905245,0.0596868619,0.1322355419,0.1256981492,0.1965436041,-0.1104038879,0.0122762714,0.009920978,-0.0874726251,-0.0886095092,0.0766198784,0.0646426082,-0.0310420338,0.0606124289,-0.0446326472,-0.1073431745,0.2084169388,0.0619970746,-0.0680821985]],"hackathon_name":"Hack Cambridge Recurse","index":287,"project_description":"GradientBoostedClassification of company data to predict bankruptcyClustering analysis of PCA'd training dataPair correlations of every attributeExplained variance with number of PCA componentsROC curve on training dataRead the full story here!Hack Cambridge RecurseI ran analysis on the significance of NaNs in the data set and helped with dimensionality reduction. Learning a lot about machine learning and data science in the process!Developed data preprocessing, statistical analysis, and helped with hyperparameter exploration. Previously unfamiliar with data science and machine learning.Matthew Evans\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:44 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"James Clerk Haxwell: Bankruptcy Prediction","project_tags":["python","scikit-learn"],"project_url":"https:\/\/devpost.com\/software\/quantum-black-bankruptcy-challenge","keywords":"story,read,full"},{"level_0":288,"hack_vector":[[0.1417310685,-0.0904612914,-0.0298583917,0.0306397974,-0.0197606348,0.1263068318,0.2041304708,-0.0204205103,-0.0228586216,-0.0102829151,0.0083993021,-0.0750488117,0.1331756115,-0.0689116046,0.062891975,0.0091351159,0.2121361047,-0.0021280698,0.04277578,0.1316520125,-0.2410791218,0.0300045516,-0.0493475907,-0.0167613477,0.1063666567,-0.0215139966,-0.0333301015,-0.1750793308,-0.0227944069,-0.0988323241,0.0578156896,-0.124777697,0.0304639805,-0.0910451636,-0.0131968819,-0.0176483486,0.1166310608,-0.142139852,-0.0623460151,-0.0064125923,0.0398376994,-0.1327811778,-0.1475553811,-0.0355593152,0.0677077547,-0.0657017305,0.0140877636,-0.0805560797,-0.0262487605,-0.2074791193,-0.1421760917,0.0107436096,-0.1060441211,0.0037440062,-0.1952917129,0.1578191668,-0.1326482296,-0.0263865348,0.035942778,-0.1039224938,-0.0679422021,0.0226726104,0.0799902231,0.0467430353,0.1104633287,0.0120891221,-0.1045959666,-0.1292618811,0.0320281945,0.0245524198,0.0723251179,-0.0557020418,0.0152386986,-0.1209503934,0.0327076949,-0.13294743,0.1733407974,0.006973831,0.0157987829,-0.1374123693,0.1205896959,0.1560333967,0.0646752939,0.1616651267,0.1025937125,0.199094817,-0.0980576575,-0.0384293459,-0.0161389485,-0.0783139095,-0.1450286508,0.0537197404,0.1005305871,-0.0395738333,-0.0082459655,0.0104744034,-0.1625106633,0.2326263636,0.0111234887,-0.0784442127]],"hackathon_name":"Hack Cambridge Recurse","index":288,"project_description":"Acquire TED-grade presentation skills from the audience sentiment analysis feedbackOur orignal logo.Plotting the attention analysis against the duration of a demo video.Current plots of attention and sentiments over seconds of presentationOne of our first tries, before analysing average sentimentsAs we've been to some hackathons by now, we got pretty used to presenting in front of a large audience. However, we're still very far from professional presenters, such as TED talks speakers. Of course, the best feedback you can have on your presentation is the public's reaction. But how can you measure your impact on the public, especially if you are busy managing the stress of giving the talk?Using a camera, you can record the audience while you are giving a presentation, and then upload that video on Cognitive Services web dashboard. It extracts frames every 2 seconds and continuously analyses the public's emotions, plotting them against the presentation audio\/video. It calculates the attention of the public for each frame, plotting it so that you are able to see when exactly in your talk there was an attention drop. You can also check if people reacted to what you said in the way you wanted. For example, if you said a joke 20 seconds in, but there was no indication of an increase in happiness around that timestamp, it could mean there is room for improvement.We created a web dashboard in HTML, javascript and CSS, powered by PHP as backed. It processes the upload and then executes three python scripts that split the video in key frames and key audio's, perform the API calls to Microsoft Cognitive services and get the emotion analysis for all the frames and the sentiment analysis for the text, and format everything in a JSON file, while also calculating the attention and other analytics. \nThen, back in the web dashboard, the JSON file is read into multiple javascript functions that plot the results.Biggest challenge was getting opencv to run. There were numerous dependencies to compile from source, not available as binaries, and it did not work from the first time. Also, we ran into problems making it work on Windows, which made testing harder, because on Macs we had problems getting the apache server to work properly.\nAnother big problem was the initial limitation of API calls, which only allowed a maximum of 20 seconds of video. In the morning we received an Azure API key from Microsoft, which allowed us to implement a working solution. Moreover, customising the audio\/video player was a problem, and integrating it with the graphs, in order to properly show the data at appropriate times.We completed a fully working MVP which is actually useful as it is, delivering value to the user even in its current form. Because there are a vast amount of possible uses for Cognitive Crowds, we believe it has a strong business potential. We think this is the most important, because once you prove something can be done, half the work is done.We learned a variety of new things, such as image processing with opencv, building complex pipelines and integrating different technologies, data analysis and much more. Most importantly, we realised how useful it can be to analyse the emotions of the people and how many applications it has. If it is used in combination with other technologies such as text analysis, it becomes a very powerful tool that can provide a very accurate constructive feedback.The current implementation is just barely touching the huge potential of this idea. We plan to use it in combination with a variety of regression algorithms to correlate the key phrases of your speech with the public's reactions, so it can automatically suggest what subjects you have to touch in order to inflict a given emotion to your audience. As a business model, we can provide the software as a service to venues\/event organisers, in order for them to attract better speakers and to help them improve themselves. Also, it can be provided to university lecturers, helping them with as-objective-as-possible constructive feedback about their classes (everyone knows students usually over-grade their lecturers in the end-of-the-year feedback forms).Hack Cambridge RecurseAlex Radu\n          posted an update\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 09:33 AM ESTAnd the video is up.\nWe also updated the github repoLog in\n      or\n      sign up for Devpost\n      to join the conversation.Alexandru-Paul Copil\n          posted an update\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 09:06 AM ESTLink to GitHub: https:\/\/github.com\/thee-engineer\/cambridgehack-2017Log in\n      or\n      sign up for Devpost\n      to join the conversation.Alex Radu\n          posted an update\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 03:58 AM ESTFollow this project to stay up to date, we'll post a demo video very soon.\nAlso, we should have the service up and running on a pi server.Log in\n      or\n      sign up for Devpost\n      to join the conversation.Alex Radu\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 03:55 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Cognitive Crowds","project_tags":["python","opencv","javascript","php"],"project_url":"https:\/\/devpost.com\/software\/cognitive-crowds-d4zchg","keywords":null},{"level_0":289,"hack_vector":[[0.134900108,-0.1081536412,-0.0154722435,0.0317929313,-0.0141346715,0.127075389,0.1999009699,-0.0266281515,-0.0341175199,-0.006834418,0.0121260425,-0.0626569018,0.1277460456,-0.0630993024,0.0635354742,0.0217801053,0.219973743,0.0008720203,0.0358785465,0.1324969232,-0.2396929413,0.0414026193,-0.0398893729,-0.0275389031,0.119196035,-0.0190040581,-0.0299935285,-0.186805591,-0.0162876174,-0.0962844044,0.0607237294,-0.130700767,0.0390702784,-0.0851132944,-0.0170354154,-0.0276323948,0.1115846261,-0.1449325383,-0.0500975102,0.001596445,0.0295629036,-0.1527227908,-0.1544956863,-0.0452225842,0.0470832512,-0.0594869964,0.0121188322,-0.0647863001,-0.0202578753,-0.2063247561,-0.11919716,0.0090173772,-0.1059889942,0.0006893682,-0.1829102188,0.1688102633,-0.1423947811,0.0002282362,0.0260945875,-0.09489353,-0.0659187511,0.0237372518,0.0690017641,0.0594107397,0.1146494001,0.0101820985,-0.1132447422,-0.1410738528,0.0404113717,0.0215638559,0.0789637491,-0.0574737824,0.0233950801,-0.1232120097,0.0222626626,-0.132043764,0.1678975374,0.0046392172,0.0401616953,-0.1297250688,0.1300434023,0.1583539844,0.0652647242,0.1643886715,0.1177316159,0.1857445836,-0.1239107028,-0.0331077687,-0.0190512631,-0.0804003924,-0.1472249478,0.062269453,0.0987247452,-0.0503237471,0.0005775288,-0.0033448616,-0.1516148597,0.208608821,0.0189519525,-0.0718273893]],"hackathon_name":"Hack Cambridge Recurse","index":289,"project_description":"If you're drunk we'll lock your car!We were inspired by the Pip Boy from Fallout and the new keyless Tesla cars to build a \"portable\" (not at the moment) breathalyzer that locks your Tesla car, amongst other things (or any other car using a RESTful API to control its functions).A user breathes into the MQ303 Ethanol measurement device to read changes in the acidity of the air, calculates the BAC and uses standard legal charts to determine whether one is able to drive. If not it locks the car using the available RESTful API for the vehicle.We built the items using the ARM mbed LPC11U24 which was handed out as swag during the event. The rest of the electronics were acquired from around the venue and a quick trip to a closeby Maplin to grab the missing breadboard.Finding the electronic components necessary, reading the output of the MQ303 sensor, inconsistent datasheets, researching relation between resistance and concentration.Completing itLots about using electronic resistance in the air to read ethanol values and converting these to Ethanol PPM values.Making the system portable and more reliable using an encasing, sending information over bluetooth instead of usb.Hack Cambridge RecursePaul Scherer\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:40 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"DUI-Locker","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/dui-locker","keywords":"using,ethanol,car,restful,resistance,read,built,locks,electronic,tesla,api,air,portable,values,mq,determine,control,converting,concentration,datasheets"},{"level_0":290,"hack_vector":[[0.146580115,-0.0915906429,-0.0263455678,0.0446311906,-0.0169173293,0.1373162419,0.2018173188,-0.0305552613,-0.0276895724,-0.0111988354,0.0094318278,-0.0711916611,0.142205134,-0.0657675788,0.0653474778,0.0005407397,0.2154749185,-0.0007455126,0.0408026092,0.1272556782,-0.2360433787,0.0387829915,-0.0439999476,-0.0137786539,0.1155510098,-0.0229584947,-0.0355823822,-0.1821703166,-0.0246763565,-0.084167555,0.0668489188,-0.1267965287,0.0338319577,-0.0837051645,-0.022383932,-0.0202953983,0.1211282536,-0.1377384961,-0.0565436259,-0.0073655294,0.0464078523,-0.1412401497,-0.1483965367,-0.0268927235,0.0596101359,-0.0473373868,0.0090113888,-0.0828295946,-0.0231706519,-0.2102353722,-0.1354668736,0.0179216377,-0.102650024,0.0153880501,-0.1912005991,0.155550614,-0.1305702478,-0.020237444,0.0318331607,-0.1017350629,-0.0704413056,0.0169017073,0.0852801576,0.0399304405,0.1131863147,0.0153187187,-0.0943194181,-0.1323930174,0.0354505554,0.0290983394,0.0731067136,-0.0499651097,0.0271165483,-0.1250827312,0.0275272653,-0.1300120652,0.1784364581,0.0012371374,0.0163673721,-0.1289659441,0.1251958907,0.1516223997,0.0685007796,0.1636828035,0.1034458131,0.1963958293,-0.0991010144,-0.0430545323,-0.0139478836,-0.0820502266,-0.1479282379,0.0536254458,0.0945128649,-0.0499567911,-0.0027641661,0.0035038448,-0.1551250219,0.2325747013,0.0095014097,-0.0739893317]],"hackathon_name":"Hack Cambridge Recurse","index":290,"project_description":"An Alexa skill that creates interactive fairy tales, to entertain children of all agesAre you tired of reading your kids (or hypothetical kids) bedtime stories? Do you sometimes wish someone else could help? Look no further - Cyber Mom provides an interactive story to entertain children of all ages!Using Amazon Alexa, the app periodically asks the user for a prompt, and uses that prompt to generate the rest of the story. The prompts are frequent enough to keep the user invested in the story, and to make sure it goes exactly as the user desires!The skill is hosted on a flask server. It uses a Tensorflow-based LSTM neural network for story generation, feeding in the prompts as they come.Training a neural network is loooong, so we had to wait a while between each test we ran before we could tweak our neural network. Also AWS instances have a curious case of disappearing GPU syndrome.We managed to hook up the neural network with the alexa skill, and get all the NLP required for proper parsing of input working.Neural networks are not the easiest thing to implement when short on time and GPU power.MOAR DATA!Hack Cambridge RecurseFinding the corpus, parsing it, doing NLP to modify it for out needs, and helping out with debugging\/optimising the neural network.I worked on the neural network, using LSTMs and feedforward layers and also helped with the NLP partsnlp stuffArthur Wilcke\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:22 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Cyber Mum","project_tags":["python","alexa","flask","natural-language-processing"],"project_url":"https:\/\/devpost.com\/software\/cyber-mum","keywords":"neural,story,network,user,gpu,prompts,ran,cyber,could,skill,prompt,alexa,uses,kids,help,implement,input,entertain,exactly,feeding"},{"level_0":291,"hack_vector":[[0.1291241199,-0.1237325519,-0.0189145226,0.0497585274,-0.0354162939,0.140620783,0.1866153032,-0.0229963213,-0.0263637397,-0.0278760381,-0.0020361799,-0.0317963846,0.1189486831,-0.075013876,0.0372333191,0.0637680218,0.2621616423,0.0377239101,0.0426969044,0.1094796956,-0.2210281491,0.0307599548,-0.0349483751,-0.0714442134,0.1092489883,-0.0156798922,-0.0504604802,-0.2102671117,-0.0006659054,-0.0926106498,0.0383268036,-0.1331491619,0.0611679927,-0.08779452,-0.01159536,-0.0133686531,0.1229606792,-0.1352291703,-0.0341390744,0.0519670621,0.0346071124,-0.1693350524,-0.1921338737,-0.0473871715,0.013160171,-0.0701352805,0.0327213183,-0.0372689702,-0.0353003703,-0.2098244429,-0.0885866284,0.0109087937,-0.0857877359,-0.0724984333,-0.1519911438,0.166258499,-0.1313575655,0.0256931074,0.0251379516,-0.0308286007,-0.052443184,0.0267701354,0.0521310084,0.06878791,0.1269948334,-0.0171997156,-0.1172062531,-0.1528645307,0.0491791703,0.0059392462,0.089935869,-0.0649202392,0.002166173,-0.1404238939,-0.0226708017,-0.1135298684,0.1743576378,0.0247953832,0.0753670856,-0.1302158386,0.1303393692,0.163998425,0.0510588326,0.1711470634,0.1238446757,0.1655298769,-0.1319470257,0.0177103784,0.0037744744,-0.1045962721,-0.113116309,0.0703171641,0.0564491898,-0.0288607348,0.0315857865,-0.0447676256,-0.119051449,0.178692311,0.0510639772,-0.0769357085]],"hackathon_name":"Hack Cambridge Recurse","index":291,"project_description":"Every want to get away from Trump? Space not an option? Fly to the furthest point away!See Trump's location and the furthest airportsHandy info windowsCompare flight pricesMisery.Tracks Trump's location from his Twitter feed, updates it to a map, and then uses Skyscanner's API to find the flights to the opposite side of the planet to him.Hack Cambridge RecurseRichard Tynan\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:38 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"DodgeDonald.com","project_tags":["flask","skyscanner","google-maps","twitter"],"project_url":"https:\/\/devpost.com\/software\/dodgedonald-com","keywords":"uses,misery,feed,find,flights,inspiration,location,map,opposite,updates,planet,side,skyscanner,tracks,trump,twitter,api"},{"level_0":292,"hack_vector":[[0.1304760873,-0.1146762744,-0.0309269521,0.0363744572,-0.0211660117,0.1305277348,0.200993076,-0.0188890938,-0.0184038449,-0.023791315,0.0084284833,-0.0539001636,0.1326488405,-0.0569440313,0.0535139926,0.0105820261,0.2298021466,0.0022533615,0.0363323763,0.1367157549,-0.2484711856,0.0357369632,-0.0205138326,-0.0145474644,0.1146403849,-0.0171984751,-0.0286150649,-0.179725185,-0.0223487671,-0.1066942364,0.0679622814,-0.1306656301,0.0287946649,-0.0780344754,-0.0020156631,-0.0377987213,0.1102236509,-0.1391547769,-0.0513785742,-0.0118683064,0.0477845483,-0.1496998221,-0.1495570391,-0.0622623675,0.0630123988,-0.0544313677,0.0046063005,-0.0581905171,-0.0339798033,-0.2044068873,-0.1245698035,0.0051655713,-0.0969868004,-0.0177445337,-0.2111215144,0.1603247076,-0.1312063038,-0.0397781022,0.0473584123,-0.0976164266,-0.0744505823,0.0157672744,0.0692707524,0.0249298997,0.1017130315,0.0270429272,-0.1014966369,-0.1336453557,0.0486827604,0.0321388803,0.0710365847,-0.0592368655,0.0309493281,-0.1092048958,0.0075852536,-0.1392511576,0.1500246525,0.0003356551,0.0196866319,-0.1299525499,0.1071005017,0.1621750146,0.040691372,0.1923996657,0.0983033031,0.1963758171,-0.1128362119,-0.0316871107,-0.0280259009,-0.078822583,-0.1370993853,0.0659729913,0.082981728,-0.0409460105,-0.0167311337,0.0122855697,-0.1654052287,0.2193027139,0.0095555959,-0.0664573386]],"hackathon_name":"Hack Cambridge Recurse","index":292,"project_description":"First player draws a phrase. The next player guesses & draws their own. Last player guesses. Hilarity ensues.Believe it or not, Chinese Whispers is an authentic Chinese game.\nIt was based on a cautionary tale whose moral is to warn one not to gossip\/spread misinformation.This Chinese New Year, our game inspired by Pictionary and Chinese Whispers further reinforces this important moral, in the age of alternative-facts, post-truth and fake news. It's also very frustrating and fun to play!On the website, you can join a room, spectate a full room, or create your new room.The game starts when the room is full. First player gets to see a random phrase, and then has to draw something that best describes the phrase in 15 seconds.You can choose the colour of your stroke, and the canvas also tries to straighten almost-straight lines for a better drawing experience.You can draw using a cursor, touchscreen, or leapmotion!The next player sees the previous drawing for a few seconds then has to draw their own image with the same rules.This repeats until it reaches the last player, who has to then guess the word.Players that have done their round get to spectate the rest of the drawings!Line straightening algorithm sometimes fails for small strokes.\nNormalising the mouse\/leapmotion values so different sized containers can work interchangably.\nCombining drawing by touch, drawing by mouse and drawing by leapmotion.3 hours sleepit's not that easy-Optical Character Recognition to prevent players from writing the phrase down directly.\n-Add more drawing tools to make the experience better.\n-Build on top of leap motion and add virtual reality to make a more immersive experience.\n-Leaderboards and Galleries to view past saved games.Hack Cambridge RecurseRichie Yeung\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:44 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Chinese Pictionary","project_tags":["node.js","html5","css3","javascript","jquery","bootstrap","socket.io","leap-motion","love"],"project_url":"https:\/\/devpost.com\/software\/chinese-pictionary","keywords":"drawing,chinese,room,experience,leapmotion,game,draw,player,phrase,moral,next,seconds,spectate,players,pictionary,full,add,better,new,mouse"},{"level_0":293,"hack_vector":[[0.1394799501,-0.1372821182,-0.0158238523,0.0636024624,-0.035022825,0.1352781206,0.204725042,-0.041556254,-0.0402843617,-0.0120770698,0.0066180076,-0.0237408094,0.147563234,-0.0770963579,0.0586892068,0.0248942897,0.2409405708,0.004135787,0.0422410555,0.1070203707,-0.2272532582,0.0358306654,-0.0445538238,-0.0367465131,0.1421772242,-0.0172666516,-0.0453450717,-0.1844887435,-0.0040590805,-0.0784007683,0.0557187162,-0.1222240254,0.0531217493,-0.0734740123,-0.0440438502,-0.0130751627,0.1362283379,-0.1280163527,-0.0324829146,0.0318646617,0.0454638489,-0.1466336399,-0.1703076065,-0.0303407926,0.0210606195,-0.0495411456,0.0286629517,-0.0551540293,-0.0186915305,-0.2078218013,-0.091573514,0.0116148675,-0.1053007692,-0.013710456,-0.1603016406,0.1570073366,-0.1548435688,0.0150513388,0.0146478172,-0.0381855071,-0.0547397025,0.0334895961,0.078335084,0.052572906,0.1202524677,-0.0177256949,-0.1121136844,-0.1486796588,0.029364638,0.0179969743,0.0663103908,-0.0442987941,0.0087822983,-0.1333387643,-0.0163459145,-0.1125867069,0.1939494312,0.0139609398,0.0588157512,-0.1390072852,0.1389708221,0.1601980478,0.0460289791,0.1662540585,0.130261153,0.1823426187,-0.1300895214,0.0067665,-0.0057330206,-0.1044033319,-0.1266069412,0.0780181512,0.0764530003,-0.0154735763,0.0377417244,-0.0360856801,-0.1246349812,0.190946117,0.0578305572,-0.0633001179]],"hackathon_name":"Hack Cambridge Recurse","index":293,"project_description":"Nescafe Dolce Gusto connected to a Raspberry PiHaving a coffee machine running Linux and being able to ssh into it to brew a coffeeIt runs a server on Raspberry Pi and receives brewing commands. It should also brew the coffee :DConnected a Raspberry Pi to two one-channel relays: one for controlling the water pump and one for controlling the water heaterFried the original chip and possibly some other internal circuitsI learned how circuits workHack Cambridge RecurseCornelia Secelean\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:44 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Raspberry Coffee Pot","project_tags":["python","raspberry-pi"],"project_url":"https:\/\/devpost.com\/software\/raspberry-coffee-pot","keywords":"one,coffee,learned,raspberry,water,controlling,pi,circuits,brew,chip,channel,inspiration,challenges,commands,built,connected,brewing,fried,also,heater"},{"level_0":294,"hack_vector":[[0.1610769182,-0.1191124022,-0.0262393486,0.0717656016,-0.0256499294,0.1533270776,0.199428618,-0.0429782644,-0.0258382242,-0.0260454081,-0.0010016316,-0.0333854593,0.1448026001,-0.0599280186,0.0476971939,-0.0068835993,0.1977772564,-0.0064933705,0.049610585,0.1247371808,-0.2337042093,0.0220747739,-0.0318061598,-0.0095734578,0.1532355547,-0.0236069672,-0.0360258073,-0.1676867902,-0.0380035192,-0.078324765,0.0626721829,-0.1126802266,0.0385846533,-0.068100132,-0.0351922251,-0.015324207,0.1313115358,-0.1297573298,-0.0544014759,0.0309385676,0.082111679,-0.1335400641,-0.14569664,-0.0410430133,0.0335047804,-0.0525505953,0.0164915714,-0.0707581788,-0.0266634431,-0.210017845,-0.1251750737,0.0239224695,-0.1206633523,0.0070389216,-0.1909544319,0.16779311,-0.1545560509,-0.0075925975,0.0194559209,-0.0688825697,-0.069483988,0.0206636023,0.0586205684,0.0259733349,0.1308297515,0.0110864937,-0.1221988276,-0.1295283735,0.0151135214,0.0258155316,0.0557015017,-0.037688408,0.0003508473,-0.1276004612,0.0069704787,-0.0854316801,0.1979092658,0.0013965414,0.0077456394,-0.1476857364,0.1024205983,0.1576342434,0.0344028287,0.1528493017,0.1299295574,0.2113541365,-0.0932225138,-0.0094508501,0.0048526106,-0.0749448463,-0.1349626929,0.0801370218,0.0848936513,-0.0124026649,0.0031315198,-0.0237766802,-0.1418884844,0.2375449538,0.0324990079,-0.0424423777]],"hackathon_name":"Hack Cambridge Recurse","index":294,"project_description":"Over promise, under deliverWe wanted to make a CAD application using VR and finger tracking, for export to 3D printersSome stuff with cubes and spheres - it's actually quite cool but it's definitely no CAD application (just yet)Using the Unity and the Leap Motion SDKUnity cannot be learnt in a few hours (we expected it to be easy!). Also the leap motion documentation is quite bad (the SDK is in beta)We managed to get started but we were consistently blocked by problems with UnityFinger tracking isn't ready for the primetime yetFinishing it! Using Oculus Touch would be better than leapHack Cambridge RecurseI helped lug the desktop over here.Shyam Tailor\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:44 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Oculus Leap CAD","project_tags":["unity"],"project_url":"https:\/\/devpost.com\/software\/oculus-leap","keywords":"leap,using,unity,sdk,application,cad,finger,motion,oculus,quite,yet,tracking,export,easy,documentation,definitely,cubes,cool,consistently,challenges"},{"level_0":295,"hack_vector":[[0.1338828355,-0.1448447704,0.0255643316,0.0937574878,-0.0580495149,0.1636390239,0.1736759841,-0.0392459482,-0.0264487043,-0.0264710169,0.0039185435,0.0385226086,0.1385412067,-0.0762725845,-0.009954528,0.0914521888,0.2634975016,0.0519281551,0.0487952419,0.0871503055,-0.1884858161,0.0009913614,-0.0571579486,-0.0706293657,0.1646587253,-0.0186919942,-0.081833154,-0.1809920371,0.0369034074,-0.0922543928,0.0179077964,-0.0872166306,0.0751277581,-0.0495506749,-0.0273785889,0.0194252953,0.1499267817,-0.1091463119,0.0045761992,0.0927157849,0.0522068553,-0.142854929,-0.1791861653,-0.0409374908,-0.0461852327,-0.0597305261,0.0512623563,0.0056035728,-0.0189713296,-0.1809851229,-0.024141293,0.0341156572,-0.1080815122,-0.0694316104,-0.0971448794,0.1459227949,-0.1557384878,0.0574305207,0.0048431908,0.0480249859,-0.0075629731,0.0352179483,0.0481401384,0.0800056159,0.1450915635,-0.0461866595,-0.1231532693,-0.1823007613,0.012544049,-0.005674731,0.0587293245,-0.0353747308,-0.0218617953,-0.1386898607,-0.0858477354,-0.0611544959,0.1956185251,0.035314627,0.0915891901,-0.1556654871,0.1059097052,0.1607293338,-0.001849952,0.1234694421,0.1567802727,0.1650118232,-0.1482721567,0.0638165101,0.0000175536,-0.1193525195,-0.0857250839,0.110463582,0.0084298719,0.0337700993,0.0799712017,-0.0946184918,-0.0727464184,0.1524499506,0.1126081645,-0.046393659]],"hackathon_name":"Hack Cambridge Recurse","index":295,"project_description":"Detect electronic components and resisstor valuespleaseHack Cambridge RecurseSammy Mahdi\n          posted an update\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 04:18 PM ESTWe would have added more description if there were more than 10 seconds left :DLog in\n      or\n      sign up for Devpost\n      to join the conversation.Sammy Mahdi\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:44 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"CVChips","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/cvchips","keywords":"processing,please,patient,image,currently"},{"level_0":296,"hack_vector":[[0.1576428115,-0.1385824531,-0.0135488128,0.0582243875,-0.0269791242,0.1341136545,0.19389458,-0.0141861662,-0.0204215813,-0.0034116239,0.0022999814,-0.0484241769,0.1483465284,-0.0628813803,0.0643545985,0.0169352852,0.220143348,0.0124407755,0.0472080782,0.1008738279,-0.2507310808,0.028837515,-0.049482774,-0.0253044218,0.1275539696,-0.0333390422,-0.044541534,-0.1908181608,-0.00678305,-0.0933821648,0.0632695109,-0.1252772957,0.0353365205,-0.0889334902,-0.0257721487,-0.0181605611,0.1108524874,-0.155404821,-0.0605954826,0.0074358527,0.026681466,-0.1425765306,-0.1434820592,-0.0303640123,0.0306326784,-0.05711307,0.0239902586,-0.0686856583,-0.0192327369,-0.1908508241,-0.1222540289,0.0075718821,-0.1199926138,-0.0125259189,-0.1730188727,0.1646375507,-0.1357617825,-0.0037843992,0.0368754566,-0.0714926347,-0.0736636892,0.0352504365,0.0669003353,0.0631552711,0.1029779166,0.0112221064,-0.1167828292,-0.1359332651,0.0136579052,0.0110989762,0.0790199712,-0.0555192381,0.0316514112,-0.1354392916,0.0080394149,-0.1337671429,0.1916376054,0.0111186597,0.0442308411,-0.1375164092,0.1274433881,0.1558612883,0.047354836,0.1439457387,0.1256707758,0.1937736273,-0.1112917513,-0.0044941413,-0.014098865,-0.0890019909,-0.1183097959,0.0779464766,0.0732280165,-0.0357861891,0.0248954091,-0.0188470371,-0.144321233,0.2121353447,0.0373766571,-0.0710862726]],"hackathon_name":"Hack Cambridge Recurse","index":296,"project_description":"Predict if a company will go bankruptConfusion MatrixWe are passionate to solve the data analysis challenge!With the 64 input attributes (i.e.features), we can predict if a company will go bankrupt.We used various machine learning models to fit the model and get predictions.Extremely unbalanced dateset!\nHigh dimension input data makes training slow.We obtained the highest F1_score so far on the leader boardData mining, Machine learning, and visualisationImprove the model to get more accurate predictions; introduce more thorough predictions such as the probability of a company going bankrupt within a given amount of timeHack Cambridge RecurseZoe Ma\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:43 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Quantum Black Challenge","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/quantum-black-challenge","keywords":"predictions,data,challenge,learning,machine,get,model,company,input,bankrupt,built,attributes,highest,high,going,go,accurate,amount,given,analysis"},{"level_0":297,"hack_vector":[[0.1261544377,-0.1077298149,-0.0201073922,0.0483539701,-0.0365263037,0.1240687445,0.1928928643,-0.0170850568,-0.0283380896,-0.0134011349,0.025782302,-0.0339060016,0.1424577832,-0.0746957958,0.0578230992,0.0284169484,0.2238039821,0.0161884297,0.0373729244,0.1174512357,-0.2279526442,0.0158571247,-0.054475043,-0.0401701778,0.1136988252,-0.0186990909,-0.0483807363,-0.1916240454,-0.0040229918,-0.0896842256,0.0437635444,-0.1125033647,0.037098553,-0.086675927,-0.0145013481,0.005078305,0.1198823601,-0.1374262571,-0.0496786833,0.0328935385,0.0341778807,-0.1420882493,-0.1782557368,-0.0290446728,0.0303707682,-0.0702942535,0.0306593683,-0.0647229478,-0.0266144108,-0.2178127766,-0.1194341406,0.0150335645,-0.1023907736,-0.0310294479,-0.1773027927,0.1790002584,-0.1350181103,0.0139069725,0.0270548537,-0.073611401,-0.0598058216,0.0340312496,0.0736822411,0.080253832,0.1260553747,-0.0000294336,-0.111225456,-0.1403101385,0.0359235294,-0.0050828075,0.0616036728,-0.0433111228,0.0032054188,-0.1260848492,0.0063416534,-0.1144933328,0.1925377995,0.0117365643,0.0430430174,-0.1451978683,0.1326651424,0.1708027124,0.0631834641,0.1488383263,0.1219488159,0.1996515393,-0.1088089496,-0.0233281665,-0.0032380077,-0.0921264142,-0.1418572664,0.0654491186,0.0866742805,-0.0277973898,0.0194927715,-0.0353629105,-0.1476520598,0.2024993449,0.0297197066,-0.0711073428]],"hackathon_name":"Hack Cambridge Recurse","index":297,"project_description":"Find flightsIdea was to build a flight search which finds cheapest flights between 2 airports through any number unspecified airports to allow cheap travel for adventurous peopleJust lists flights from an originUsed Skyscanner API to get the prices for the cached flights.The number of cached flights we were able to get from an origin was limited and we did not have enough time to finish everythingIt works to some extent,How to learn Python and APIsUse Ryanair api and make optimisation through multiple cities. Develop a proper UI for better user experience.Hack Cambridge RecurseKaur Aare Saar\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:44 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Flight Search","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/flight-search","keywords":"flights,origin,flight,airports,api,search,cached,number,get,finish,finds,extent,experience,everything,enough,develop,works,cities,cheapest,challenges"},{"level_0":298,"hack_vector":[[0.1381934881,-0.103132017,-0.0305537544,0.0498151667,-0.0141041083,0.1409850717,0.2181116492,-0.0403753929,-0.0298553966,-0.0119346976,0.0084912749,-0.0627275184,0.14137052,-0.0777631104,0.0667393953,0.004353357,0.2203989476,-0.0054203807,0.0387909152,0.122797586,-0.2279377431,0.0465637259,-0.0522658676,-0.0185694434,0.1210827976,-0.0149078583,-0.0351533405,-0.180357784,-0.0329209827,-0.0773115158,0.0716511458,-0.1381770074,0.0402251184,-0.0800270811,-0.0376397073,-0.0065623689,0.1261711568,-0.1313001662,-0.0448700041,0.0021881531,0.0448878445,-0.1413667053,-0.1563242972,-0.0258529261,0.0532372706,-0.0552613437,0.0121509377,-0.0751346052,-0.0312735178,-0.2107529342,-0.1276224852,0.0099756857,-0.103451401,0.0122959865,-0.1728862822,0.1502845287,-0.1532016248,-0.0152743245,0.0158143323,-0.0966729075,-0.0703229085,0.0347178243,0.0861746669,0.0454111733,0.1135349795,0.0011887974,-0.101453729,-0.1247451678,0.0317644142,0.0234083068,0.0583218709,-0.0488165282,0.0256156009,-0.1209427416,0.023138037,-0.1151235774,0.1855071783,0.0012594849,0.0206676014,-0.1397191584,0.1361672431,0.1570248157,0.0736987218,0.1639080793,0.0984747559,0.193392545,-0.1045561805,-0.0320227928,-0.0031763129,-0.0887821689,-0.1482192576,0.055252213,0.0971628129,-0.0278272834,0.0078940941,0.0014031935,-0.1496053487,0.216609627,0.0237198621,-0.0712455288]],"hackathon_name":"Hack Cambridge Recurse","index":298,"project_description":"A WebApp that syncs everyone's phones to display the song in concertsWe loved the idea of having a stadium of people holding their mobile phones and having them changing according to the music played.Flash displays color patterns according to the song being played in a concert.We used a python script to play the song, and used Numpy to do a Fourier transform on the audio and hashed it into a color. Then it is pushed via Websockets to the client and displayed on the browser.Node.js doesn't have a good FFT library, while python flask didn't work well with multi-threading. So we used the python script to pump data into Node.js, which then used Websockets.We managed to connect a program written in two languages and made a real-time WebApp.Which libraries are good for which purposeAdd different patterns to the graphics and make the syncing better.Hack Cambridge RecurseEdward Liu\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:43 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Flash","project_tags":["javascript","node.js","python","html5","numpy"],"project_url":"https:\/\/devpost.com\/software\/flash-caexq5","keywords":"used,python,node,according,websockets,flash,js,patterns,played,good,song,script,color,written,flask,fourier,graphics,hashed,holding,idea"},{"level_0":299,"hack_vector":[[0.148504898,-0.0792520791,-0.0244937036,0.0687603801,-0.0180392861,0.1676308364,0.2099520713,-0.0629755929,-0.024565151,0.0010691624,0.027308492,-0.0708226636,0.1557269841,-0.0838293284,0.0683308616,-0.011887392,0.2157083154,0.0026993921,0.0599566586,0.1072731987,-0.2171455175,0.052060198,-0.0532724708,-0.0172486082,0.114824608,-0.0172942467,-0.0361232124,-0.1956175268,-0.0283028781,-0.0548219979,0.0808134601,-0.1193590909,0.0410130136,-0.1021378115,-0.0407507829,0.0038918084,0.1283862442,-0.1227880716,-0.059710566,-0.0011408452,0.0478033796,-0.1380081624,-0.1618707776,-0.0012276946,0.0548881404,-0.0232472494,0.0068713487,-0.0819033831,-0.0217565168,-0.2089390457,-0.1453060061,0.0259162989,-0.108452335,0.0176456254,-0.1777897924,0.1453076899,-0.1323798299,0.000334941,0.0216603465,-0.0847127959,-0.0600022748,0.0257388502,0.1107830927,0.0569662787,0.1183866411,0.0064599267,-0.083828494,-0.1217731908,0.0242028981,0.0218832735,0.056641262,-0.030412538,0.0272019096,-0.1315609068,0.0150488932,-0.1063615009,0.2033496946,0.0014700402,0.0073249917,-0.1373035163,0.1413100362,0.1448981315,0.0823852345,0.150674805,0.1018225029,0.2032546252,-0.0712329671,-0.0385752805,0.0044663763,-0.0718971491,-0.1481845826,0.0467659682,0.0971522704,-0.0322756432,0.0240383893,-0.0026647085,-0.1278858036,0.2234614789,0.0130639058,-0.0787281469]],"hackathon_name":"Hack Cambridge Recurse","index":299,"project_description":"Digitised receipts on mobile allowing easy keeping track of spending.Reducing paper and allowing users to keep track of their finances easily.Allows imaging of receipts and storage of data, and displays output in expandable list. Has an analytics page but it doesn't do anything.Android studio for the app. Python with flask and Microsoft's computer vision API for the server.None of us had any experience with Android Studio and it took a lot of effort to get to grips with. Started with Google's vision API which didn't work with our server.App takes photos and server returns data mostly successfully.Android dev is horrible.Getting basic features working properly. Improving design. Adding analytic functionality.Hack Cambridge RecurseI worked on the web server and created web services for the app to use.\nUsed cognitive services APIs and Natural Language Processing on the server to improve functionality.Matthew March\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:44 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Big Spender","project_tags":["android-studio","python","flask","nltk"],"project_url":"https:\/\/devpost.com\/software\/big-spender-29um84","keywords":"server,android,vision,data,studio,api,app,working,easily,effort,expandable,experience,features,finances,dev,flask,functionality,get,getting,google"},{"level_0":300,"hack_vector":[[0.1612417549,-0.1397703439,-0.0346345417,0.0546809956,-0.0250118077,0.1286379248,0.184817329,-0.0288966428,-0.0157055501,-0.0118277101,0.0080730151,-0.0462579094,0.1507657617,-0.0612770841,0.0585301332,0.0097419024,0.2002939582,-0.0119567197,0.0465325899,0.1151247472,-0.2537730336,0.0100757182,-0.0412201583,-0.0048674638,0.1335379779,-0.0239289477,-0.032786075,-0.160520196,-0.0059897085,-0.1003331095,0.0544266924,-0.1149556488,0.0325066112,-0.0747235119,-0.0183599256,-0.0247326251,0.108072646,-0.1637022793,-0.0653671697,-0.0011180674,0.0502370372,-0.1178982928,-0.143101275,-0.0243741777,0.0429264605,-0.0562287495,0.0110403663,-0.0758486986,-0.0170292184,-0.2088309377,-0.144708693,0.0165754389,-0.1125703901,-0.0096908575,-0.1980633885,0.164968431,-0.1258023828,-0.0197459981,0.0337986238,-0.0805049837,-0.0721695349,0.0321687646,0.0681573749,0.0545735508,0.1059044525,0.021961607,-0.116246298,-0.1295843124,0.0127777904,0.0191042926,0.0735598281,-0.0424072593,0.018951375,-0.128866449,0.0092200255,-0.1144504622,0.1940064281,0.0086986218,0.0126353148,-0.1359058619,0.1158019155,0.1560102254,0.0365309902,0.1596583426,0.1185778677,0.2094903737,-0.0975870341,-0.0170338191,-0.0256616566,-0.0690679923,-0.1215030104,0.0822000951,0.1010235921,-0.03245138,0.0099878665,-0.013876548,-0.1491032541,0.2402909249,0.0233923495,-0.0611958988]],"hackathon_name":"Hack Cambridge Recurse","index":300,"project_description":"A non-biased way of reseaching and mapping your competitionGreat! It was born of two main topics: \nWhen researching for a specific topic, additional keywords increase the bias. How could we research a specific landscape without affecting the outcomes? Also, when doing a due diligence, how can we accurately sort the documents in the relevant categories and classify its similarityAllows lawyers and researchers avoid bias through a machine learning algorithm.With a lot of time, lack of sleep and sweatPython crashed and javascript was hard to deal with.We\u2019ve built something that can save time and increase productivity for startups and lawyers\u2022 That one can only go so many hours without sleeping. \n\u2022 Teamwork beats bugs 100% of the time. \n\u2022 We may or may not ever do another project in Javascript again.Better UI and greater algorithm speed and precision.Hack Cambridge RecurseBabak Esmaeili\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:40 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Vertex","project_tags":["natural-language-processing","python","machine-learning","numpy","javascript","bing","bing-search-api"],"project_url":"https:\/\/devpost.com\/software\/vertex","keywords":"time,without,specific,javascript,increase,may,built,bias,lawyers,algorithm,another,documents,keywords,accurately,inspiration,additional,hours,hard,affecting,greater"},{"level_0":301,"hack_vector":[[0.151936695,-0.1287142932,0.0014623264,0.0905367583,-0.0473546833,0.1648940891,0.1739205718,-0.0529288128,-0.0416289195,-0.033771079,0.0126496973,0.0065327734,0.1456582993,-0.074483946,0.012302177,0.0469764844,0.2521875501,0.0333984084,0.0612206943,0.0939066634,-0.1891729981,0.0041993647,-0.0552954674,-0.0512938537,0.1655142158,-0.0133023495,-0.0718985796,-0.1837524921,0.015163729,-0.089311175,0.0380362943,-0.1051035225,0.065550819,-0.0587638654,-0.0229982547,0.0179969948,0.1532869488,-0.1120392308,-0.0155086648,0.0769014731,0.0719085783,-0.1446203887,-0.1905624568,-0.0296834745,-0.0363089778,-0.0639026687,0.0405035391,-0.0275109764,-0.0243620016,-0.2014267445,-0.0581842922,0.0374410152,-0.1055217534,-0.0511831902,-0.1334018558,0.1662981063,-0.1585482359,0.0464191027,0.0055691241,0.0065625943,-0.0241914354,0.0356996097,0.0591722839,0.0776261091,0.1468198448,-0.0270175543,-0.1352637708,-0.1718412638,0.0076245577,0.0064370139,0.0675167292,-0.0272865836,-0.0100017432,-0.1401423514,-0.0427949689,-0.0640550479,0.2105983049,0.0222485662,0.0758209005,-0.1469543427,0.105771251,0.1498863995,0.025406925,0.1341788769,0.1490059048,0.165071696,-0.137297228,0.0236439388,-0.0005755145,-0.1075467318,-0.0888759047,0.0954036787,0.0375567414,0.0120620355,0.0650932565,-0.081629701,-0.0915007591,0.1791805923,0.0814451352,-0.0548617952]],"hackathon_name":"Hack Cambridge Recurse","index":301,"project_description":"Move them and don't touch themHack Cambridge RecurseLearned how to get data from the Leap Motion sensor and use it on the backgammon project.Sven Cortel\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:43 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Vlad Nafureanu\n          posted an update\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:41 AM ESTWe started at 6 AM when we got our hands on a Leap Motion aaand we did all we could for these morning hours.Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Computer-backgammon using hands","project_tags":["leap-motion","javascript"],"project_url":"https:\/\/devpost.com\/software\/computer-backgammon-using-hands","keywords":"motion,leap,use,hand,make,without,move,anything,backgammon,board,certain,cool,feed,gestures,localhost,making,moves,wider,play,sending"},{"level_0":302,"hack_vector":[[0.145016849,-0.1209195405,-0.0220830664,0.0503545031,-0.0295110755,0.1433658749,0.1881115884,-0.0257347971,-0.0117582642,-0.0232553091,0.0106789079,-0.0507187583,0.1444189101,-0.0732711032,0.0552327968,0.015427798,0.2307324111,0.01672462,0.0433397628,0.1108028516,-0.2444456816,0.014728209,-0.0371516943,-0.0310641509,0.1190760657,-0.0240608249,-0.0379623957,-0.178728655,0.0005850649,-0.0990901142,0.0607482567,-0.1191548482,0.0316121951,-0.0727795884,-0.0184622724,-0.0234364308,0.1183046475,-0.1439116597,-0.0536470413,0.0055879746,0.0443174057,-0.1346465945,-0.1539601088,-0.0350967906,0.0448947325,-0.0524870157,0.0213995371,-0.061227981,-0.02776343,-0.2111041844,-0.1287437081,0.0269293599,-0.1041047722,-0.0263326336,-0.1886407435,0.1756266803,-0.1192125306,-0.0107147442,0.0314225331,-0.0676968917,-0.0577636063,0.0245940071,0.0752697736,0.0527682118,0.1174228042,0.0159959421,-0.1023237109,-0.1401447356,0.0260450523,0.0240915492,0.0762806386,-0.0433555841,0.0242934916,-0.1296915412,0.0071194144,-0.1193891615,0.1783194244,0.0131395189,0.0167920813,-0.143261075,0.1280492842,0.1693627685,0.0370847024,0.1698910296,0.1108477637,0.2053626925,-0.1017275825,-0.0222717747,-0.0248073991,-0.0747765452,-0.128116563,0.0697276369,0.0789320543,-0.0375179909,0.0154743716,-0.0034654341,-0.1441125125,0.2283910215,0.019893866,-0.0807101354]],"hackathon_name":"Hack Cambridge Recurse","index":302,"project_description":"A life is a never ending learning journey. We help you find the best person to go on this journey with.Find a jam, learn a language. Skill swap! NOT a dating app.Our idea started more than two years ago, when we launched a Facebook group called 'Edinburgh Skill Swap'.https:\/\/www.facebook.com\/groups\/edinburghskillsswap\/Since then the group reached nearly 4000 members and began to show its limitations. Posts began piling up on each other, making it hard for people to find what they are looking for. During HackCambridge we designed a platform where people could browse and meet others interested in sharing skills. Our main features include PersonGraphs, NLP processing for creating a hierarchy of closely related users based on your skills, integrated chat and much more.Hack Cambridge RecurseMartin Asenov\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:43 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SkillSwap","project_tags":["css","javascript","html","node.js"],"project_url":"https:\/\/devpost.com\/software\/cambridgehack","keywords":"facebook,swap,began,skills,skill,find,people,group,years,groups,features,hierarchy,hackcambridge,hard,https,idea,include,edinburghskillsswap,designed,edinburgh"},{"level_0":303,"hack_vector":[[0.1626214385,-0.1294330359,-0.0084894001,0.0586092398,-0.0263460241,0.1285743713,0.179941982,-0.0306782275,-0.0267354734,-0.0173662901,0.0156740341,-0.0405050889,0.1605020165,-0.0720578879,0.0518450215,-0.000219728,0.2012673467,-0.0107001346,0.0590064116,0.1310384125,-0.248733744,0.0185678005,-0.0376145765,-0.0126874177,0.1410024315,-0.0362888724,-0.0396877751,-0.1681652814,-0.0025017573,-0.1031061858,0.0507287644,-0.1126781553,0.0277034286,-0.0677658841,-0.0075913505,-0.0233161096,0.1234563291,-0.1567214876,-0.0669591427,0.0067759259,0.0605999939,-0.1295325011,-0.1407653391,-0.0287483428,0.0283525251,-0.0508246981,0.0184381828,-0.0775167271,-0.0139292553,-0.1982461661,-0.1424796432,0.0335211456,-0.1265660524,-0.001489325,-0.2042038441,0.1728608012,-0.1324637532,-0.0081135482,0.0269266553,-0.0794631019,-0.0553489886,0.0276668761,0.061608348,0.0655845627,0.1204649135,0.0231585726,-0.1098069549,-0.1332076639,0.0009296117,0.0126935169,0.0757163391,-0.0412242562,0.016288992,-0.130902946,0.0259624273,-0.1021441743,0.1868180186,0.0038582922,0.0030827883,-0.1403460503,0.1153808683,0.1553382128,0.0352478027,0.1441672891,0.1278363317,0.203641668,-0.103629306,-0.0326459929,-0.0219489932,-0.0648035631,-0.1218514144,0.0738212913,0.0948564485,-0.0230141375,0.0116673522,-0.0272048842,-0.1493200511,0.2272605002,0.0255382769,-0.0576144084]],"hackathon_name":"Hack Cambridge Recurse","index":303,"project_description":"We're simulating semi-realistic evolutionary patterns with spatially-interacting genetic individuals, at scale.We've set out to apply genetic algorithms on SpatialOS, as something that lacked efficiency in scale and innovation in \"spatiality\". This slowly turned into trying to simulate large populations of unique genetic individuals, moving around an environment, consuming and producing resources, reproducing when meeting each other. We've come across many issues, overcome most, but ultimately falls short of what we imagined.The difficult part was SpatialOS' lack of documentation and complex layers of code infrastructure. We got through that too late, and although our ambitions were high, in the end we didn't manage to finalise our simulation. Our hope is that the project made sense from the point of view of Improbable and we could potentially lay the groundwork for an evolutionary simulation that innovates in its scale.Hack Cambridge RecurseAdam Turczi\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:43 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"spatial-evolution","project_tags":["c#","unity"],"project_url":"https:\/\/devpost.com\/software\/spatial-evolution","keywords":"simulation,scale,spatialos,genetic,view,falls,finalise,got,groundwork,high,hope,environment,imagined,improbable,individuals,infrastructure,innovates,innovation,evolutionary,efficiency"},{"level_0":304,"hack_vector":[[0.1307027042,-0.0894753784,-0.026193494,0.0348598585,-0.0180398673,0.1207930893,0.1979248524,-0.0190502405,-0.0243503861,-0.015106855,0.0150374956,-0.0836164951,0.1434739679,-0.0654093847,0.064973183,0.0107888635,0.2111421227,-0.0040230691,0.0390360393,0.1388108432,-0.2398981303,0.0375144146,-0.041376628,-0.0115457037,0.1039531678,-0.0185742844,-0.0320648029,-0.1751021147,-0.0193219613,-0.0978672132,0.0638069585,-0.1164958999,0.0317865983,-0.0842312351,-0.0059902458,-0.0249753818,0.113418974,-0.1429588497,-0.0628780723,-0.0160309877,0.0355905704,-0.135918662,-0.1466198266,-0.0407174863,0.0661545694,-0.0603205673,0.0073407069,-0.0831403732,-0.0141345505,-0.2080448568,-0.1463607401,0.0133598661,-0.103267312,0.0035544236,-0.2030441165,0.1675426364,-0.1287120134,-0.0272250921,0.0412222408,-0.1177858934,-0.0721910596,0.0242826436,0.0822081119,0.0544620901,0.1032894403,0.0245640073,-0.094994992,-0.1299626231,0.0388024822,0.0225957409,0.0679823384,-0.0514007732,0.0220619943,-0.1108991206,0.0316894278,-0.1336278617,0.1669799089,-0.0060867742,0.0124141928,-0.1324003488,0.1148350462,0.1545089781,0.0665449649,0.160263896,0.1009939164,0.1934280992,-0.0994893387,-0.0525576584,-0.0297428817,-0.0785186663,-0.1484915763,0.0494312197,0.105851002,-0.0511864014,-0.008826538,0.0199157465,-0.1734912992,0.231202051,0.007371366,-0.0803668499]],"hackathon_name":"Hack Cambridge Recurse","index":304,"project_description":"Use our app to automatically read out the water quality values from a Litmus testsource: Wikipediawhat the app sees, handwriting just for comparison, not used by the appextracting only the relevant bits and ph valueextracting only the relevant bits and ph valueextracting only the relevant bits and ph valueextracting only the relevant bits and ph valueBeing able to check how clean your water is, is crucial for many people - especially people in developing countries that often lack access to clean water sources. However, test sticks covered with chemicals that change color  depending on the properties of the water (like the famous Litmus test for the ph-value) are very cheap to produce and easy to use. However, reading out the correct values can be a bit tricky and since many people actually own smartphones anyway we wanted to come up with a way to combine the two.Our App automates the process of reading out the values from the color coding of a mock up test stick. Just focus with your camera and the app will tell you the ph-value associated with the sample you provided.We used OpenCv in C++ for the technical part of the app. First we normalize the input image (similar to what happens when you scan QR codes). This means that even slightly tilted or rotated input works fine with the algorithm (most of the time :P). As the next step we extract the color values from the normalized image by averaging over certain areas.We have stored a table containing color codes for various chemicals and ph values, so that then we are able to perform a simple optimization in order to find the ph value that matches the theoretical data best.The app itself is written in a mix of Swift 3 (for the interface) and ObjectiveC (to communicate with our C++ code).Neither of us had experience in mobile development, so getting to grips with Swift and ObjectiveC was a struggle.\nDoing a whitebalance like color correction for bad lighting was also harder than expected.Writing our first app and being able to do realtime image processing of a video feed on mobile device.Basics of image processing with OpenCV and mobile app development.We'd like to improve the accuracy for the normalization of the image, both the perspective and the color.Hack Cambridge RecurseBenjamin Cabrera\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:42 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"WhatTheColor","project_tags":["opencv","c++","swift","ios"],"project_url":"https:\/\/devpost.com\/software\/whatthecolor","keywords":"app,color,image,values,ph,test,people,value,able,mobile,water,like,objectivec,next,chemicals,opencv,development,first,processing,reading"},{"level_0":305,"hack_vector":[[0.1368713677,-0.1090994328,-0.0131436326,0.065380834,-0.0394567735,0.1642129421,0.1851140708,-0.0527443923,0.0016040865,-0.0506946892,0.0206192266,-0.0198367331,0.127422139,-0.0672878772,0.0317169763,0.0150427977,0.2522683442,0.0313562043,0.050497964,0.1169087291,-0.2245975584,0.0120171104,-0.0464965552,-0.0324520022,0.1224302948,-0.0085248128,-0.0416188948,-0.1851046085,-0.0184124038,-0.1015828326,0.041265931,-0.1189638451,0.0500312522,-0.0811158046,-0.0107441256,-0.025821751,0.1313964576,-0.1334630102,-0.0520328581,0.0302641355,0.0457908139,-0.1301517189,-0.1600819081,-0.0503298044,0.0194324981,-0.0728463754,0.0243557058,-0.0339574143,-0.0490462184,-0.2172839493,-0.10597945,0.023207942,-0.0984726325,-0.0518600643,-0.1671049744,0.1566729546,-0.127596572,-0.0003970366,0.0276648719,-0.0556536503,-0.0429057181,0.0162452701,0.0801258162,0.037916027,0.1140510589,0.0051199938,-0.1278931201,-0.1469793618,0.0305589642,0.0340244062,0.0637100786,-0.0416482165,0.0181586966,-0.1398354173,-0.0239235703,-0.1039909944,0.1922653913,0.0195369013,0.0385760069,-0.1573273689,0.1066045091,0.1617717594,0.0342761837,0.1741560698,0.121237658,0.1863237619,-0.1234707907,-0.0240942333,-0.0287958998,-0.0898668244,-0.131999433,0.0747844726,0.0799184069,-0.0209046248,0.0246001892,-0.0394675769,-0.1252756268,0.2229328603,0.0389109179,-0.0797881261]],"hackathon_name":"Hack Cambridge Recurse","index":305,"project_description":"Give your snail mail wingsRegister a deviceName your deviceMail status!A desire to instantly feel the reassurance of having mail waiting for you (especially if it arrives far away - which isn't uncommon in Cambridge colleges)An email notification, whenever you have mail in your pigeonholeSome embedded hardware running Lua, talking to an online service with which you have an account.Connecting hardware to the internet.It works!Various hardware platforms and how they integrate with external devices.Slick hardware, push notification on mobileHack Cambridge RecurseJoshua Send\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:32 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"PidgePing","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/pidgeping","keywords":"hardware,mail,notification,works,integrate,inspiration,get,feel,far,external,especially,embedded,email,devices,desire,connecting,colleges,challenges,cambridge,built"},{"level_0":306,"hack_vector":[[0.1492518038,-0.0906441212,-0.024446303,0.0479328334,-0.0139903035,0.1180415228,0.207073912,-0.0257194415,-0.0298755262,-0.0141898422,0.0170123093,-0.0640647858,0.1477621794,-0.0661676824,0.0646786168,-0.0266897883,0.1800779551,-0.0235896669,0.0519819111,0.1415412128,-0.2472854406,0.0288191456,-0.0422808826,0.0078695584,0.1183092147,-0.0276619177,-0.0267885253,-0.162504673,-0.0311648156,-0.0974468589,0.064610146,-0.1132302135,0.0239508636,-0.0735970289,-0.0047152606,-0.0214084499,0.1192917675,-0.1449008733,-0.074932009,-0.0095666647,0.0650225207,-0.1278900802,-0.1278833598,-0.0326923095,0.0617342517,-0.0536382012,0.0075093713,-0.1041083187,-0.0210092571,-0.2003335506,-0.1580039412,0.0213193037,-0.1190090701,0.0322716869,-0.219282344,0.1593540162,-0.1453347951,-0.0342657417,0.0349807404,-0.1254330575,-0.0730854794,0.0273186155,0.0734596774,0.0353571549,0.1140131131,0.030253185,-0.0995535702,-0.1123227179,0.0130210351,0.0227071382,0.0509950556,-0.0433050506,0.0165741872,-0.1156485081,0.0508072861,-0.1145977527,0.1786854416,-0.0084328465,-0.0112355333,-0.1373236626,0.1065766811,0.1443784684,0.0588317811,0.1420505345,0.1065048054,0.2108475268,-0.0837286264,-0.0509493276,-0.0234844573,-0.0615379587,-0.1448652148,0.0615259558,0.1054277048,-0.035282366,-0.0204212796,0.0146754198,-0.1720467061,0.237774983,0.0021473069,-0.0484118871]],"hackathon_name":"Hack Cambridge Recurse","index":306,"project_description":"Virtual IDE with LeapMotion integration.Last year we used a device called myo to allow users to play space invaders and pong by using hand gestures as the 'controllers'. This year, we carried on the theme of exploring how human interaction with computers will change in the future.Its a 3 - dimensional IDE which incorporates mouseless interaction.We used an Oculus Rift and a Leap Motion device.We did everything in java. We used the JOGL library to communicate directly to an Oculus Rift. We also, used the jovr library to translate java into OpenGL. Thankfully the interaction between the leap motion device was also done in java.A LOT of challenges were overcome. First, the Oculus Rift demands a lot of graphical processing power. Out of three laptops we could only run it on a mac. Oculus has dropped all support for mac users which meant we could only run the Oculus on very old drivers. Hence, documentation was rather hard to come by. In addition to this, since we were running older drivers we could not take advantage of easier VR techniques such as WebVr. Hence, we were forced to use JOGL bindings to write directly to the oculus rift display and JOVR to read the IMU data from Oculus.  Thus, we have completed a vr project in java!I think the most important thing is - we did it ! We've had this idea for a very long time and we ran into so many problems. At certain points it looked as if the idea was achievable and we would be left with partial bits of code . However, we never ever gave up and tried absolutely everything. To incorporate the leap motion as well, is an added bonus since it enhances the unique property of our project.Vr requires a lot of processing power  and where there's a will there's a way ! Seriously, having to use the Oculus where there is no support and being forced to use technology we weren't used to was an absolute pain! But we regret nothing because we achieved an amazing product in the end.V-de is a working concept that has the potential to redefine the relationship between humans and computers. So far it's and IDE for developers. Imagine if you could see the effects of your code whilst you are coding. All achievable in the Oculus. This would help greatly with designers - no more having to complie and refresh.Hack Cambridge RecurseNathan Ling\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:40 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"V-De","project_tags":["oculus","leap-motion","java"],"project_url":"https:\/\/devpost.com\/software\/v-de","keywords":"oculus,used,java,rift,could,leap,motion,vr,interaction,device,use,lot,library,jogl,year,power,processing,project,mac,forced"},{"level_0":307,"hack_vector":[[0.1555758566,-0.1037703827,-0.0270163435,0.0312559046,-0.007600781,0.1203179359,0.213566035,-0.0184228085,-0.0326235965,0.0104784742,0.0042358171,-0.08043769,0.1419723183,-0.0818617567,0.0768634677,-0.0004163488,0.1877703369,-0.0196398087,0.0409862474,0.1283602715,-0.2452942729,0.0420276821,-0.0502724014,-0.0112329125,0.1314126253,-0.0277380459,-0.0277736634,-0.1737577766,-0.0200104918,-0.077522397,0.0609105453,-0.1283412576,0.0331302136,-0.0942643359,-0.0287559293,-0.0136401746,0.110197857,-0.1503639966,-0.0668500587,-0.0198891349,0.0403565466,-0.1420998871,-0.1464054883,-0.0157820992,0.0697598234,-0.0351762474,0.0072502857,-0.1002879515,-0.0133634778,-0.197769016,-0.1487497836,0.0176006034,-0.1169497743,0.032256905,-0.1909537613,0.1645436734,-0.1384054124,-0.0134248612,0.0152562307,-0.1093444154,-0.0717850626,0.0330152474,0.0841275305,0.0528111383,0.1140752211,0.0101767331,-0.1040120274,-0.119740285,0.0295667816,0.0256943572,0.0753505751,-0.0462980457,0.0236935876,-0.1256307214,0.0490457676,-0.1261277348,0.1686180085,0.0023767278,0.0062327264,-0.1212250814,0.1362637281,0.1480095387,0.0858756304,0.1443147063,0.094294779,0.2027719319,-0.0761665329,-0.033974275,0.0001882905,-0.0667883754,-0.1414330155,0.0493424796,0.1070313603,-0.0467189774,0.0021073532,0.0108938608,-0.1573767066,0.2232329249,0.0038229979,-0.0640548095]],"hackathon_name":"Hack Cambridge Recurse","index":307,"project_description":"Videos in eMotionVideo calls such as Skype, Google Hangouts, and WeChat have revolutionised communication, in business, socially, and in many other applications. Yet despite the huge uptake, there remains a lack of support for the visually impaired. We believe that the user experience of the visually impaired would be greatly enhanced by providing feedback through facial recognition and interpretation of the expressions of the people they are talking to.eMotion aims to address the lack of support for the visually impaired by harnessing a Microsoft Cognitive API to provide real-time information on facial expressions during a video call. The API interprets a still image of the video call and calculates the likelihood of different emotions. A customisable sound-effect is then played to inform the user of the most likely emotion.The peer2peer connection is established and maintained using WebRTC, Node.js, and socket.io. Video streams are embedded in the html code using Javascript, which also powers the back-end.A key issue was that domains that we created were unable to stream video because the location was not considered secure enough. Socket.io is very hard to implement on cloud systems. The Microsoft API was incredibly useful, but involved a steep learning curve.We are proud of how quickly we were able to adapt to challenges outside of our usual comfort zones by trying out new technologies and languages.Coming from a wide variety of backgrounds, we were each able to learn a great deal about each other's skillsets.Hack Cambridge RecurseI worked on our version of the Emotion-API and helped with css and html.ErmeHarrier\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:41 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"eMotion","project_tags":["javascript","html","css","node.js","socket.io","webrtc","azure","google-app-engine","jquery"],"project_url":"https:\/\/devpost.com\/software\/emotion","keywords":"video,api,visually,impaired,io,support,call,challenges,emotion,expressions,facial,lack,microsoft,peer,proud,socket,able,using,user,deal"},{"level_0":308,"hack_vector":[[0.1379117966,-0.1242471188,-0.0255898107,0.0142917931,-0.0177866668,0.1110061482,0.203080073,-0.0141864792,-0.0113426317,-0.0057255779,0.0163076818,-0.0658476725,0.1326661408,-0.0654989779,0.0739830881,0.0099716727,0.2109209299,-0.0047006598,0.0353160277,0.1292231679,-0.2644798458,0.0354166478,-0.0260309223,-0.0269293208,0.0913579985,-0.0314630941,-0.021468861,-0.1724251509,0.0014618278,-0.1097054929,0.0592622496,-0.1244223341,0.0214648563,-0.0954049453,-0.010504243,-0.0489587933,0.0945265368,-0.1613791436,-0.0767562836,-0.0318956748,0.0219592769,-0.1412100792,-0.12631841,-0.0494015999,0.0810191631,-0.04429489,0.0098549351,-0.076540783,-0.0243301131,-0.1952534616,-0.1497183293,0.007821261,-0.1124210581,-0.0125203012,-0.1991873831,0.1569759995,-0.1099569798,-0.0384146422,0.0497586317,-0.1113040373,-0.0722638443,0.0238718428,0.0812174976,0.0565476976,0.0867066979,0.025851991,-0.1036174223,-0.1175184622,0.0392740704,0.0295090936,0.0754659027,-0.0590718985,0.0393321216,-0.1215432137,0.0191268492,-0.1677305996,0.1478069872,0.0055543543,0.0106281973,-0.1294026822,0.1316633672,0.1610235274,0.0512998737,0.1800222993,0.0960827693,0.1983604729,-0.0929209962,-0.0294987373,-0.0348207988,-0.0721332282,-0.1406415552,0.0526873432,0.1001189128,-0.0596199818,-0.0029184683,0.0191403106,-0.1668504179,0.2063699216,-0.0049497834,-0.0743328258]],"hackathon_name":"Hack Cambridge Recurse","index":308,"project_description":"Getting from what you know to what you want to knowA web app to find literature to get you from what you know to what you want to know as efficiently as possible. Become familiar with a new field, understand a collaborators publication or check key publications for your literature review - all quickly and efficiently.\nIntroductionThink of all possible knowledge as a (very) high dimensional hyperspace. Any publication will occupy some subspace of this hyperspace. Conventional literature searches provide the publications that intersect some subspace, usually defined by a keywords. More recent social media\/bot approaches try to interpret the subspace the user is familiar with and suggest publications that exist at or just outside the boundary of this familiarity. Our service provides a means of bridging between the subspace of knowledge which the user knows and their search subspace. This is done by presenting the minimum necessary publications required for the user to traverse between these subsapces.Think of all possible knowledge as a (very) high dimensional hyperspace. Any publication will occupy some subspace of this hyperspace. Conventional literature searches provide the publications that intersect some subspace, usually defined by a keywords. More recent social media\/bot approaches try to interpret the subspace the user is familiar with and suggest publications that exist at or just outside the boundary of this familiarity. Our service provides a means of bridging between the subspace of knowledge which the user knows and their search subspace. This is done by presenting the minimum necessary publications required for the user to traverse between these subsapces.Publication subspace coverage is approximated as nodes and the hyperspace is projected onto a network with distances between nodes as approximations to the distances within the hyperspace.These distance estimates are an aggregations of several factors including whether the papers are citation\/reference connected (first degree connection), how many shared cited\/referencing papers they have (second degree connections) and overlap of keywords. More could include text analysis of abstract\/full text analysis; author input; experint input; user input or others.A shortest path is found on a network of unity weight edges for distances below a threshold and weights penalised above unity for distances above the threshold. This threshold is to model the users ability to move outside his field of knowledge. So papers they find comfortable learning are included but papers that they would find challeneging are penalised.Hack Cambridge RecurseJeremy Minton\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:41 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"knowledge-direct","project_tags":["sqlite","python","flask"],"project_url":"https:\/\/devpost.com\/software\/knowledge-direct-w9slvg","keywords":"subspace,publications,user,knowledge,hyperspace,distances,papers,publication,literature,keywords,input,possible,threshold,outside,find,familiar,data,conventional,provides,know"},{"level_0":309,"hack_vector":[[0.1671788394,-0.1421658397,0.0138359303,0.0950559676,-0.0132494476,0.1830177605,0.1745985001,-0.0604442582,-0.0307065565,-0.0134364404,0.0028086093,-0.0140257273,0.1416958272,-0.0976348221,0.0062428336,0.049903851,0.2450162321,0.0116628595,0.0782409236,0.0728584826,-0.211652115,0.0202649403,-0.0646378249,-0.0358231924,0.1804542691,-0.0451891869,-0.0728523061,-0.1977937073,0.0010879427,-0.0813173205,0.0538903959,-0.1138900816,0.0887010247,-0.0685651675,-0.0551175363,0.014946579,0.1422701776,-0.1236974001,0.005658919,0.0609495342,0.0739913583,-0.1356785744,-0.1940620244,-0.0156834628,-0.0148675023,-0.0288207065,0.0366651826,-0.0325643346,-0.0207897127,-0.2016773522,-0.0655599758,0.0546175465,-0.1135673374,-0.0121423667,-0.1363390237,0.1377166659,-0.1638669074,0.0390631929,-0.0056980252,0.0084449928,-0.0369219892,0.0230556298,0.0599927641,0.0628672689,0.1432515234,-0.0266984776,-0.1144401431,-0.1574568301,0.0022277755,0.0182591006,0.08295881,-0.0405334011,-0.0023746642,-0.1517578959,-0.0242621284,-0.0455692783,0.212539494,0.0398666635,0.0660283342,-0.1362308413,0.1199640259,0.1432464421,0.0225369558,0.1318199188,0.1448017955,0.1789178997,-0.1089462563,0.0270427093,0.00396524,-0.0956355631,-0.0884708688,0.0894992724,0.0342868604,0.0154388482,0.0476840772,-0.0761767402,-0.068666108,0.164628461,0.0964018852,-0.0540365018]],"hackathon_name":"Hack Cambridge Recurse","index":309,"project_description":"Reversing turing test.Not time, sorry. Maybe next time!Hack Cambridge RecurseI worked with Node.js to develop the back end of the chat room, as well as a bit of scripting on the front endKonstantin Wuenscher\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:39 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"turing talk","project_tags":["javascript","python"],"project_url":"https:\/\/devpost.com\/software\/turing-talk","keywords":"time,next,turing,talk,sorry,ran,proud,maybe,learned,inspiration,challenges,built,accomplishments"},{"level_0":310,"hack_vector":[[0.1378345639,-0.0654079542,-0.0366984829,0.0481021702,-0.0076666754,0.151406154,0.2157395035,-0.0301273409,-0.034218844,0.008474743,0.0233289134,-0.0922567621,0.1367660165,-0.0784581378,0.0855803639,-0.0023935288,0.2030021697,0.0040311525,0.0390773788,0.1136860028,-0.2116000652,0.06098352,-0.0589661375,-0.0201030355,0.1044691056,-0.0171524547,-0.0306417607,-0.2051943243,-0.047254093,-0.0517525822,0.0916806161,-0.127461791,0.0451584607,-0.1119413152,-0.0324611515,0.0168605167,0.1222742274,-0.1209251881,-0.0511118211,-0.0092472602,0.0301066115,-0.1580738723,-0.1639465988,-0.0087043056,0.076216355,-0.0321611241,0.0108651463,-0.082681112,-0.0325731859,-0.2220279425,-0.1411184967,0.0040067174,-0.0960202441,0.025490582,-0.1771714836,0.1407479644,-0.1389314979,-0.0045141834,0.0283194277,-0.1087634191,-0.0716319457,0.0227696784,0.0967397392,0.0463648476,0.1109329835,-0.0046201013,-0.0808064118,-0.1138856709,0.0488046519,0.0125256833,0.0568070859,-0.0480533876,0.0279531963,-0.1202098057,0.0283874869,-0.1284704953,0.1803311259,-0.0052381777,0.0212108325,-0.1343093961,0.1334782541,0.1513245106,0.0977731571,0.1611586511,0.0766135678,0.1886214167,-0.084407866,-0.045488935,0.0099857794,-0.0999267697,-0.1669389606,0.0414962247,0.0928187072,-0.0482457951,0.0053368681,0.0165707283,-0.1381631941,0.2153743058,0.0089661805,-0.0783117935]],"hackathon_name":"Hack Cambridge Recurse","index":310,"project_description":"Post to Instagram directly from the web with automatically generated hash tags using Microsoft Computer Vision APIWeb application interfaceUploaded ImageGenerated Hash TagsPosted to InstagramAs an active Instagram user, I found it tedious to add the 'obvious' hash tags in the caption of every photo I post. This inspired me to create an app that would automatically generate the hash tags for me based on the image context. I also wanted a method of posting to Instagram through a different platform (not only restricted to my IPhone Instagram App).InstaVision is a web application that allows users to upload a photo, automatically generate hash tags with the click of a button and post the photo to their Instagram account.I used Microsoft Cognitive Services Computer Vision API to analyse the uploaded image and return a list of keywords which are converted into hashtags that are inserted into the caption.\nI built the back-end using PHP and various third party APIs such as Imgur API for uploading an image to cloud temporarily and NXS API for posting to Instagram.\nFor the front-end, I used Javascript\/JQuery and AJAX for submitting form data to the API endpoint and handling image uploads, and I used HTML\/CSS and the Bootstrap framework for the basic user interface.I learnt a lot about the Microsoft Cognitive Services and it's various APIs and how to utilise them in PHP. I also learnt how to handle file uploads and send requests to the API using AJAX.Hack Cambridge RecurseI worked on the project on my ownBrian Min\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:39 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"InstaVision","project_tags":["php","javascript","html"],"project_url":"https:\/\/devpost.com\/software\/instavision","keywords":"image,api,instagram,php,using,file,hash,imgur,posting,photo,cognitive,application,services,microsoft,tags,various,end,uploaded,uploading,uploads"},{"level_0":311,"hack_vector":[[0.1234710962,-0.112171188,-0.0104617001,0.0381429717,-0.0262544714,0.1344627291,0.1963237971,-0.0304174703,-0.0317670517,-0.0103577767,0.0236366,-0.0504279286,0.1345738024,-0.0732529759,0.0539463162,0.0319094509,0.2297337502,0.0127690118,0.0429129153,0.1154097989,-0.2203050256,0.0379187241,-0.05557945,-0.0413731597,0.1161428094,-0.0173206739,-0.0476668552,-0.1961735934,-0.0084195575,-0.091511704,0.0540650412,-0.1276409924,0.037638668,-0.0903086811,-0.0161211211,-0.0065279137,0.1193548962,-0.1393519044,-0.0473349541,0.0198931657,0.0276726559,-0.1524312049,-0.1725377291,-0.0411366373,0.0326488651,-0.0643161088,0.0174124409,-0.0542953014,-0.0319248848,-0.2114243507,-0.1227968633,0.0271470491,-0.1061144471,-0.0240426566,-0.1677394658,0.1675617248,-0.1365407258,0.0060832663,0.0262144525,-0.0813413933,-0.0559237041,0.0260254834,0.0689091682,0.0844651386,0.1160300598,0.0023847693,-0.1103615761,-0.1380468011,0.0365320705,-0.0011800902,0.0684230775,-0.0571007989,0.0228811521,-0.122926183,0.0155601278,-0.1193071753,0.179703638,0.0060980753,0.0454323068,-0.1444845051,0.1398650259,0.1615853608,0.0726168975,0.1591804177,0.1163256988,0.1941454411,-0.1197791025,-0.0380166359,-0.0064593926,-0.0851712674,-0.1355820298,0.0534228273,0.0950543359,-0.042205479,0.0162425637,-0.0271065999,-0.1520794183,0.2029774785,0.0209548622,-0.0808519498]],"hackathon_name":"Hack Cambridge Recurse","index":311,"project_description":"Display the sky scanner flights with the airline safety ratingsSome of the flights on sky scanner includes airlines which have very poor safety ratings. We want the users to travel safely so have removed the airlines which have poor safety ratingsUses the IATA API for getting airline safety ratings for SkyScanner flightsWe used IATA Api to get the safety ratings along with airlineratings.com. We pulled all the flight data between two airports from sky scanner and got their respective safety ratings. Then display that to the userUsing the pusher api to update the data in real time.Make air travel safe again.Never fly with Air Canada Express, Bangladesh Biman.We are going to make the UI nicer and implement this as a chrome extension. Only show results above a certain safety ratingHack Cambridge RecurseArgha Sarkar\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:40 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Airline safety","project_tags":["pusher","skyscanner","python","html5","css3","javascript"],"project_url":"https:\/\/devpost.com\/software\/airlines-safety","keywords":"safety,ratings,airlines,api,make,sky,poor,flights,data,scanner,iata,travel,air,biman,express,got,going,getting,get,fly"},{"level_0":312,"hack_vector":[[0.1648876369,-0.0991761461,-0.032002151,0.0715209991,-0.0111942701,0.1646890789,0.219172582,-0.0388493054,-0.0350428633,0.0046900734,0.0006118069,-0.0553119667,0.1377726048,-0.0692567229,0.06653364,-0.0170022845,0.188658759,0.0059883655,0.0393990539,0.114119783,-0.2153023332,0.0317220427,-0.052547276,0.0045631812,0.1741854548,-0.0074417903,-0.0312802233,-0.1984146386,-0.0449836142,-0.0533427931,0.0881193206,-0.1360454857,0.0402484462,-0.0940742046,-0.0430466458,0.005016102,0.1199272498,-0.1206770912,-0.0500477739,0.0006951182,0.0689587146,-0.1518672556,-0.1458466947,-0.0060906904,0.0472311303,-0.013891479,0.0091803912,-0.0692703426,-0.04242393,-0.2130660117,-0.1147931144,0.0163946506,-0.1050821766,0.0360733196,-0.1687852293,0.1545340419,-0.1490472108,0.0099961152,-0.0049247448,-0.0734502822,-0.0628790781,0.0236812253,0.072813116,0.0189232733,0.1352981478,0.0009977223,-0.1113680676,-0.1263424903,0.0269023851,0.0158582907,0.0536685288,-0.0354936048,0.0334213041,-0.1341044605,0.0172648747,-0.0855635256,0.1911479533,-0.0027450183,0.022211412,-0.1363701075,0.1223442405,0.1450783312,0.0854466856,0.1571536213,0.1034879237,0.2167496979,-0.0725946426,-0.0073732333,0.0179008506,-0.0728587881,-0.1381609142,0.0762025937,0.0892265514,-0.0234213043,0.0109870303,-0.0110070398,-0.1261158586,0.241585061,0.0150516136,-0.0506763533]],"hackathon_name":"Hack Cambridge Recurse","index":312,"project_description":"Smash your opponent with haevy emotions! Hilarious party game powered by Microsoft Emotion API and custom C++ engine!We had so much fun exploring the Microsoft Cognitive Services, we actually decided to create a game out of it!Collect weapons and defenses, activate them by a specific emotion to beat your opponent!We created a custom C++ game engine and connected through Node.js to the Microsoft Emotion API.Pretty hard to connect Node.js and C++ (we ended up using a custom REST service and the Microsoft C++ REST SDK).Definitely the Microsoft API, lots of C++ and everything around it.Lots of fun for everybody ;-)Hack Cambridge RecurseI developed the game, using SFML and a game framework I had developed previously to add the graphics, physics, and game mechanics. I left the tricky integration of the Microsoft Cognitive API to Jan!Jan Mattfeld\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:37 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Face.off","project_tags":["c++","node.js"],"project_url":"https:\/\/devpost.com\/software\/face-off-3teic9","keywords":"microsoft,node,custom,fun,game,js,lots,emotion,rest,api,built,created,definitely,defenses,decided,activate,actually,create,cognitive,around"},{"level_0":313,"hack_vector":[[0.1461843401,-0.116303958,-0.0260494724,0.0441827253,-0.0124553973,0.1339330226,0.197751686,-0.027604986,-0.0215837061,-0.0007084844,0.0043048542,-0.0513314828,0.1261057109,-0.059840586,0.0522975661,0.0090029994,0.2056809068,-0.0023842081,0.0508701541,0.1170382947,-0.2534564137,0.0405392945,-0.0281222351,-0.0153203327,0.1246257499,-0.0247155372,-0.0361558944,-0.1849075556,-0.0033449112,-0.0890524685,0.0633866861,-0.1407733411,0.0333872288,-0.0803127438,-0.0184872337,-0.0286417585,0.1100389436,-0.1546391696,-0.0593040548,-0.0047105923,0.0341652259,-0.1615383774,-0.1475715637,-0.0522982478,0.0430924781,-0.0477454662,-0.0041821995,-0.0713649392,-0.0135798352,-0.1922894716,-0.1318630576,0.0161234196,-0.1148989722,0.0060754749,-0.1999866813,0.1543427557,-0.1448557228,-0.016885642,0.0368174762,-0.0908492878,-0.0806320757,0.0245816708,0.0711503178,0.0568968132,0.1062243432,0.020806415,-0.1059489027,-0.1306553185,0.0391470529,0.031691011,0.0867354795,-0.0662161037,0.0383782797,-0.1256743222,0.0228971075,-0.136227563,0.1640964597,0.005923742,0.0291960426,-0.1309804022,0.1227003038,0.1462713778,0.0582715012,0.1729361117,0.1128840372,0.1978958398,-0.1147698313,-0.030044755,-0.0178978089,-0.069376491,-0.135637477,0.0623852462,0.0950218067,-0.0521747582,0.0069277463,0.0061816019,-0.1492592841,0.2116557956,0.0194263626,-0.0670108125]],"hackathon_name":"Hack Cambridge Recurse","index":313,"project_description":"Hack Cambridge 2017 - Real-time Event-based Monitoring System for Seniors and Elderly using Neural NetworksHack Cambridge 2017Real-time Event-based Monitoring System for Seniors and Elderly using Neural NetworksTeam:\nCristian Axenie, Simeon Kostadinov, Mark MathewsIt has been estimated that 33% of people age 65 will fall. At around 80, that increases to 50%. In\ncase of a fall, seniors who receive help within an hour have a better rate of survival and, the faster\nhelp arrives, the less likely an injury will lead to hospitalization or the need to move into a long-term\ncare facility. In such cases fast visual detection of abnormal motion patterns is crucial.In this project we propose the use of a novel embedded Dynamic Vision Sensor (eDVS) for the task of classifying falls. Opposite from\nstandard cameras which provide a time sequenced stream of frames, the eDVS provides only relative\nchanges in a scene, given by individual events at the pixel level. Using this different encoding scheme\nthe eDVS brings advantages over standard cameras. First, there is no redundancy in the data received\nfrom the sensor, only changes are reported. Second, as only events are considered the eDVS data rate is\nhigh. Third, the power consumption of the overall system is small, as just a low-end microcontroller is\nused to fetch events from the sensor and can ultimately run for long time periods in a battery powered\nsetup. This project investigates how can we exploit the eDVS fast response time and low-redundancy\nin making decisions about elderly motion.The computation backend will be realized with a neural network classificator to detect fall and filter outliers. The data will\nbe provided from 2 stimuli (blinking LEDs at different frequencies) and will represent the actual position of the person wearing them.\nThe changes in position of the stimuli will encode the possible positions corresponding to falls or normal cases.We will use Microsoft Azure ML Studio to implement a MLP binary classifier for the 4 (2 stimuli x 2 Cartesian coordinates - (x,y) in the field of view) dimensional input. We labelled the data with Fall (F) and No Fall (NF).Hack Cambridge RecurseCristian Axenie\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:33 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"neural_fall_detection","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/neural_fall_detection","keywords":"edvs,fall,time,data,stimuli,changes,events,sensor,seniors,neural,falls,motion,cases,fast,using,rate,cameras,standard,long,system"},{"level_0":314,"hack_vector":[[0.1315496713,-0.0863382444,-0.0370342322,0.038910795,-0.0262507349,0.1478057355,0.1922737062,-0.0305258892,0.0058945124,-0.0366121903,0.0101433471,-0.0627437159,0.1209844351,-0.0629012063,0.0482781678,0.0062545962,0.2292047739,0.018292712,0.0406714007,0.1275056154,-0.2429188043,0.0198591258,-0.0318263806,-0.0205991156,0.1049827188,-0.0101390444,-0.0333553255,-0.1723237336,-0.0188723132,-0.106901519,0.0541347489,-0.1309363097,0.0317847021,-0.0776307657,0.0008909497,-0.0234905034,0.1188142672,-0.1400336921,-0.0580779612,0.0020289049,0.0401241593,-0.142095536,-0.1503676325,-0.0577540733,0.0590827428,-0.0720472485,0.0055516916,-0.0565224141,-0.0389036015,-0.2140454054,-0.1412868649,0.0200648047,-0.0932042524,-0.0257154889,-0.2025516778,0.1595781893,-0.1205144972,-0.0389494114,0.042996496,-0.0998603627,-0.0718321502,0.0095356908,0.0761160776,0.0346412398,0.1026213393,0.0286411867,-0.1012825221,-0.1320469975,0.0469316393,0.0405697785,0.0693165883,-0.0591761284,0.0318068787,-0.1153679192,0.0223403219,-0.1290968359,0.1567577273,0.0082812477,0.0095144706,-0.1432324201,0.1049600765,0.1627530009,0.0511911586,0.1898974627,0.0916814804,0.1968291253,-0.1064195335,-0.0454690941,-0.0305534657,-0.0740202516,-0.1356455982,0.0523996502,0.0907596648,-0.0463008508,-0.0086834617,0.018248938,-0.1588872075,0.2373401523,0.0017410448,-0.0868949369]],"hackathon_name":"Hack Cambridge Recurse","index":314,"project_description":"Generate a single link that live-feeds your position for a set amount of time. Bridges cross-platform friend-finding.Online trackingMobile trackingHave you ever tried to lead a pub crawl? Or struggled with finding your friends at a music festival? There's a lot of apps that try to fix this problem, e.g. Find My Friends for iOS. They all share one massive drawback though: everyone needs to be using the same app. We fix that.Once followFeed is installed on your device (we've developed it cross-platform using ionic framework), you're only a few clicks away from sharing your location live. You enter an event title, a start and stop time for tracking. The app will then run in the background of your device for the chosen time. And here's the crux: you are then given a URL that you can share with anyone to follow you in their web browser on whatever device. Without installing any apps.The interface also allows you to add scheduled paths, which can be great for pub crawls etc. We also provide a chat feed using Pusher Feeds API (this is currently not working online due to pythonanywhere.com restrictions for free users). But it works locally and on any paid host.We expect to make millions on this.Hack Cambridge RecurseJulius Bier Kirkegaard\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:21 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"followFeed","project_tags":["javascript","css","html","python"],"project_url":"https:\/\/devpost.com\/software\/followfeed-server","keywords":"device,using,fix,app,time,followfeed,apps,pub,friends,also,share,feeds,event,ever,everyone,expect,feed,works,festival,find"},{"level_0":315,"hack_vector":[[0.1327593178,-0.0898324102,-0.0235237535,0.0221380349,-0.0200502966,0.1375153065,0.2065241337,-0.0281491596,-0.0167803504,-0.0024909442,0.0301169176,-0.0735945702,0.1306759864,-0.0667328611,0.0675939023,0.0258148387,0.2320786864,0.00583723,0.0273212697,0.1270648241,-0.239482075,0.0258107912,-0.0479786284,-0.0271429215,0.0961242765,-0.0278759245,-0.0289509334,-0.1932063252,-0.0146581903,-0.0969988331,0.0703491494,-0.1174503937,0.0265718643,-0.0964521095,-0.0140661737,-0.0006922988,0.1072583646,-0.1333916634,-0.045074515,-0.0050235842,0.0212948322,-0.1325015575,-0.1568883657,-0.0307925865,0.0746048614,-0.0570460819,0.0162126496,-0.0621907227,-0.0242482442,-0.2196185738,-0.1270082742,-0.0007772051,-0.1009223089,-0.0129222367,-0.1844591647,0.156446591,-0.125362128,-0.0225336254,0.0389977582,-0.0982679352,-0.0606986545,0.0182351992,0.0879493654,0.0601460226,0.1145527065,0.0072352984,-0.0929404721,-0.1321133077,0.0472066738,0.0067597101,0.06145484,-0.0501070581,0.0305743143,-0.1142506301,0.0128392922,-0.1472337395,0.1686852276,-0.0022433191,0.021637544,-0.1386175305,0.1382858306,0.169975698,0.057990633,0.1812591702,0.0890467614,0.201390937,-0.0973642096,-0.0358848944,-0.0246655885,-0.0840686038,-0.1565820724,0.0488638356,0.0872554183,-0.0475900844,-0.0126504209,0.0152299516,-0.1517960429,0.2081668377,0.0094701564,-0.0864194557]],"hackathon_name":"Hack Cambridge Recurse","index":315,"project_description":"From the Botteam to the TopUser profileUser profileThe command list for Cam BotThe Cam Bot outputThe Cam Bot outputInspired by Hack Cambridge to add more detail to each Slack account to make the team forming process faster and easier. Allowing you to join or create a team that will give you the top hackathon experience.The bot collects information about each user when they join the Slack group, taking information from their Github and Devpost accounts, as well as mentor and team statuses.By talking to the Cam Bot on the Slack account you can find out more about individual users and get lists of mentors or people looking for a team (which you can filter depending on any language requirements).When you ask about a specific user the Cam Bot will send you screenshots of the user's Github and Devpost pages, their team and mentor statuses, the languages they know, and links to their Github, Devpost and LinkedIn account. You can ask the bot for a list of mentors or people looking for a team, which you can then explore individually in  more detail. You can also update your team status, and view your profile.We are running two Node.js servers that exchange data via a REST API.One is used to control the chatbot itself and manage chat session data. It uses the Microsoft Bot Framework, which allows us to deploy our bot to several platforms easily - we currently have Slack and Facebook Messenger integration (although the primary use should be via Slack).Our second server manages user profiles, authentication, user OAuth tokens for 3rd party API integrations, and handles rendering of user image-dashboards - we are using a headless WebKit, PhantomJS, to render screenshots of new users' GitHub and Devpost previews. It later serves these assets for the chatbot controller to use them.\nHere we also handle team formations and persist user data.The Cam Bot can already be used in any Slack group, as long as the Slack admin adds Cam Bot to the group.\nHope to incorporate Facebook messenger. Extend the use of Team HackerBot for other team building applications, such as tech startups etc.Hack Cambridge RecurseMade the back-end for our two servers and added chatbot integration with REST APIs for reusability.Alice Grout-Smith\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:35 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Team HackerBot","project_tags":["javascript","express.js","phantomjs","jquery","bootstrap"],"project_url":"https:\/\/devpost.com\/software\/team-hackerbot","keywords":"team,bot,user,slack,cam,github,devpost,use,data,account,group,mentors,mentor,facebook,people,looking,detail,hackerbot,screenshots,chatbot"},{"level_0":316,"hack_vector":[[0.1412382573,-0.0889084712,-0.0297946669,0.0423894376,-0.0207113791,0.126540482,0.1984674484,-0.0225647073,-0.0255462304,-0.002416668,0.0164554175,-0.0760494769,0.162569657,-0.0691307038,0.0781714171,-0.0233925804,0.1866371036,-0.0122784749,0.0410474092,0.1243419573,-0.2347011268,0.0396005996,-0.0395781137,-0.0017234584,0.1191654503,-0.0311228484,-0.0238542203,-0.1726724952,-0.032213334,-0.0781053752,0.0670697987,-0.1236403063,0.0194547549,-0.0798711181,-0.0228859112,-0.0081964359,0.1222360879,-0.1431719959,-0.0702140182,-0.0085609574,0.045055639,-0.1272616386,-0.1381012648,-0.0171609614,0.0695251152,-0.0465058051,0.0162197817,-0.0906357616,-0.0200584531,-0.2006636709,-0.1613028198,0.0049224393,-0.1140705645,0.0259954873,-0.2094630301,0.1614781022,-0.1272880733,-0.0264774263,0.0391957834,-0.1170503646,-0.0821367428,0.0149376355,0.0816139877,0.0497316197,0.1103237271,0.0297986194,-0.080893673,-0.1160321757,0.0262576267,0.0123587204,0.0622605979,-0.0506953895,0.0261634495,-0.1092428267,0.0503366105,-0.1281382143,0.1810815185,-0.0038057819,-0.0074703996,-0.1302837431,0.1280834526,0.1613508612,0.0652065203,0.1526297629,0.0990812406,0.1998327225,-0.0869527087,-0.0517938025,-0.0068766419,-0.0738573074,-0.1552077085,0.0492791049,0.1049755141,-0.0381285623,-0.0059315185,0.0026488455,-0.1670079827,0.239948526,0.0049682446,-0.0670298412]],"hackathon_name":"Hack Cambridge Recurse","index":316,"project_description":"Personalised health advice via facebook\/skype\/slack. Make informed decisions backed by your data!Input data via interactive chatbotintuitive data presentation for analysisWe noticed that minor medical conditions often are hard to pin down. Examples include skin irritation, indigestion, or migraine. To make matters worse, the causes for such symptoms are unique to each person. Therefore, we set out on a simple and yet challenging task to create personalised data tracking that is accessible to everyone.In addition, we realised that the same platform can be used to make informed decisions about our lives. In my personal dataset that was uploaded to the server we saw that productivity suffers from alcohol. (More subtile correlations were excluded for privacy reasons)Briefly, it interactively collects users data via chat-bots (slack\/facebook\/skype) and present analysed data back to the users. The user can pick the objectives he is interested in and our server picks the most important questions to ask. When there is enough data, the platform suggests an informed decision.We started off by brainstorming ideas through the email conversation, which was started by the organising team. Hence, we already knew what we wanted to do when we arrived \u2013 some conceptual design was followed by flowcharts and the build began. With 2-4 hours of sleep, the team was up and running for most of the time. The time was well spent and we have succeeded to make an MVP!We encountered 3 main challenges : the Bot itself is stateless, and integrating State into such a complex system makes for a very sensitive process of compile-run-debug, which often times turned frustrating. Debugging seemed somewhat difficult since the system seemed to behave differently locally and on azure, so we needed to deploy and use the bot itself to get messages. The second problem was getting the Scala web back-end to connect to SQL Server, which was incredibly difficult (had to basically write an entire Java wrapper library) due to poor compatibility between Scala and JDBC. Our last problem was not getting the Amazon Alexa to work, which we attribute to the fact that the bot turned out to be a lot more complex to build than we had thought and so we ran out of time.Add security layers, make it fully scalable, add dynamic NLP using MS Cog Services. More statistical analysis and data visualisation. Continue using it ourselves and recommend it to our friendsTry chatting on HackCambridge slack channel with bot \"@knowyourself2\" (HackCambridge Team)Hack Cambridge RecurseI coded the bot backend of this software, using C#, MS Azure and SQL Server. Implemented using MS Bot Framework. Features and inspiration were commonWorked on the JS data visualisation and website front end;\nContributed to idea brainstormingKarolis Misiunas\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:33 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"KnowUrSelf","project_tags":["scala","c#","jquery","java","sql","azure","heroku","github"],"project_url":"https:\/\/devpost.com\/software\/knowurself","keywords":"make,use,data,bot,team,time,managed,end,users,server,difficult,fully,build,built,different,challenges,poor,slack,chat,ran"},{"level_0":317,"hack_vector":[[0.1273478568,-0.0896663964,-0.032635659,0.0304419603,-0.0234802235,0.1400289834,0.205688417,-0.0334606431,-0.0068358751,-0.0202187337,0.0223677512,-0.0665948465,0.1274885386,-0.0712405145,0.0600880682,0.0133038452,0.2281991988,0.0042561665,0.038708128,0.1253210455,-0.2343030572,0.0341963172,-0.0378169157,-0.0278499834,0.0966413766,-0.0141437715,-0.0285147987,-0.1812535375,-0.0136022381,-0.0966622904,0.0570561625,-0.1313546747,0.0293380097,-0.0885411277,-0.0067550228,-0.0171773303,0.1139195338,-0.1420004666,-0.0594111159,-0.0082942573,0.0350652523,-0.1420562714,-0.1480093151,-0.040697284,0.0657428429,-0.0552738979,0.0145365335,-0.0675880536,-0.035139285,-0.2105325758,-0.1432630867,0.0168767143,-0.0965238735,-0.0126402788,-0.1982372701,0.1568509936,-0.1209109575,-0.0319904611,0.0386014543,-0.1088838875,-0.0690169632,0.0149063291,0.0883645862,0.0517770909,0.1068940088,0.0211707558,-0.0940507203,-0.1294243485,0.0464272276,0.025941059,0.0680624694,-0.0570379794,0.0370450169,-0.1192586496,0.0270660501,-0.1385229677,0.1601254642,0.0038988157,0.0129310973,-0.1378128827,0.127809152,0.1640460193,0.0637392104,0.1825588346,0.089075774,0.1917933226,-0.1062292457,-0.0500778221,-0.0225325078,-0.076284878,-0.148602441,0.0497816429,0.0936197042,-0.0455547869,-0.0064509585,0.0173585638,-0.158210814,0.2235135585,-0.001403068,-0.0836586431]],"hackathon_name":"Hack Cambridge Recurse","index":317,"project_description":"Intelligent music playlist composed from your guests\u00b4 interests in a single clickLanding pageDemoWhether at parties, conferences, or meetings, we often need to generate music that a large group of people will like. We'd prefer to be able to do this without explicitly requiring the user to specify songs (as we can do in a collaborative playlist, for instance), instead automatically fetching the user's song preferences which already exist in their Spotify account.It generates a link that the organizer can share with the guests and allows them to login with their Spotify credentials only and automatically saves their preferences. We don't store any personal information.We integrated seamless OAuth 2.0 authentication which allows organizers and guests one-click access to our app. \nWith a carefully tuned and tailored algorithm for analyzing your audiences\u00b4 musical preferences, the app automatically creates and populates playlists on your Spotify account specially curated for your event.Built using Node on a JS stack, and deployed in the cloud, our solution scales to meet the demand of any event.Authentication is hard. Sessions are hard too. Deployment is also hard. Getting database schemas in order.\nTuning algorithm to give the most relevant matches.We have a fully functional app at the end of 24 hours that is poses a solution to a real-life challenge.  We\u00b4ve overcome all our challengesRapid prototyping on a Javascript stack, user experience and responsive apps. Spotify API and information retrieval.We are excited to work with event organizers (especially hackathons) to bring personalized entertainment to your event!Hack Cambridge RecurseI did the frontend, worked on the database and the express enpoints.OAuth, session management, deploymentDaniel Carmona\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:32 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Crowdify: Music from everyone.","project_tags":["node.js","mongodb","spotify","ejs","express.js","passport","oauth","love"],"project_url":"https:\/\/devpost.com\/software\/crowdify-a3hnok","keywords":"spotify,event,app,preferences,automatically,hard,user,algorithm,allows,organizers,stack,account,playlist,challenges,solution,guests,authentication,information,click,built"},{"level_0":318,"hack_vector":[[0.15586555,-0.1267511845,-0.0294523649,0.041226007,-0.0162419509,0.1165334284,0.2000668049,-0.015966069,-0.0271504708,0.0063727121,0.0139292879,-0.0619253367,0.1462668926,-0.0614262111,0.0735364333,-0.0062141917,0.1853423864,-0.0229069386,0.0420971178,0.1324374825,-0.2663642168,0.0271761715,-0.0369646698,0.0040943353,0.125103265,-0.0307103246,-0.0275124405,-0.1610297859,-0.0119348606,-0.0976106673,0.0667832568,-0.1193461269,0.0137814051,-0.072396487,-0.0107864989,-0.0356614031,0.0960715413,-0.1575825363,-0.0730029047,-0.0288698655,0.0422797836,-0.1323422641,-0.1280055791,-0.0324875191,0.0633480698,-0.0452620126,-0.0047271647,-0.0880379677,-0.0030649304,-0.1915096492,-0.1456117034,0.0096050967,-0.1170650423,0.0222792458,-0.2188640088,0.1651872844,-0.1331855953,-0.0300806165,0.0364723243,-0.111055322,-0.0733858645,0.0353657007,0.0734857023,0.050485447,0.0965326354,0.0333815292,-0.1054657623,-0.1193318218,0.0203442983,0.0265043955,0.0695400238,-0.041521892,0.0315249264,-0.1146969199,0.0339710154,-0.1335903257,0.1634773612,-0.0082305996,-0.0032631541,-0.1262230277,0.1182400286,0.150424853,0.0535221696,0.1588899493,0.1067738011,0.2118552476,-0.0903880298,-0.0404769517,-0.0295658652,-0.057950452,-0.1344115883,0.064373523,0.110889174,-0.04884414,-0.0068634348,0.0178238023,-0.1677761525,0.2303584665,0.0067173946,-0.0617473088]],"hackathon_name":"Hack Cambridge Recurse","index":318,"project_description":"Large scale simulation of immigration in World of WarcraftRecently, immigration has become a subject of controversy and political turmoil. We live in a world where walls are built while people leave their homes, seeking for help. Our endeavour was to model the migration of individuals in a fictional universe, in order to showcase the dynamic way in which people immigrate, and how this impacts the population and living standards in each country. This kind of simulation would be the answer to many \"What if...?\" questions governments, scientists or economists could ask. These answers would not only allow proactive measures to be taken, but could save lives.Using SpatialOS, we have built a large scale simulation of migration in the magical World of Warcraft. The current model consists of 10 countries between which thousands of people migrate. The phenomenon is based on both personal and regional characteristics, each movement having a certain probability of occurring at any given time. The model is flexible and permits simulation based on customizable parameters, making it a useful tool for governments which want to be prepared for an influx of immigrants, or in case of natural disasters or even war. Or if somebody decides to build a wall.We built the project using C# and integrating the map and movement of people in unity, and used SpatialOS to run the simulation at large scale. Starting from a simple model of random migration, we then used probability theory and population dynamics to mathematically describe the phenomenon.Learning the structure and functionality of SpatialOS and integrating it with unity were two of the major challenges we faced. Finding a relatively simple mathematical model to realistically describe immigration was also a challenging task.We learned how to use SpatiolOS and integrate it with unity. Even though the learning process took a lot of time and we faced a lot of challenges, we managed to fix many of the bugs and to deliver a functional product.The hackathon has been an invaluable learning experience, as we started from scratch with SpatialOS and spent the first few hours of the hackathon learning its structure, functionality and particularities. We also read various research papers on immigration, population dynamics and migration modeling. Besides, we improved our knowledge of C# and learned unity.The next important steps are building larger maps and modeling more parameters which determine the probability of migration. By introducing these features, we will increase the flexibility of the platform, making it able to simulate migration at continent and even global level. Also, a nicer interface!Hack Cambridge RecurseTeodora Stoleru\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 06:09 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SpatialLink","project_tags":["c#","unity"],"project_url":"https:\/\/devpost.com\/software\/spatiallink","keywords":"migration,model,spatialos,learning,simulation,unity,people,built,probability,population,even,challenges,immigration,also,learned,phenomenon,world,parameters,next,movement"},{"level_0":319,"hack_vector":[[0.1274443567,-0.1212969199,-0.0251077097,0.0512005351,-0.0333986729,0.1420924962,0.210343644,-0.0241268836,-0.0356662646,-0.0268349424,0.0112456344,-0.0264724586,0.1437899023,-0.071853891,0.0297904033,0.0322808363,0.256095171,0.0137815885,0.0310941301,0.131722331,-0.2338454872,0.0348394439,-0.0270692911,-0.0381323472,0.1384458095,-0.0135991676,-0.0567079224,-0.1878169626,-0.0027496747,-0.1010391191,0.0617319718,-0.1263571233,0.0416711234,-0.0658887103,-0.0118267704,-0.0244845208,0.1326650381,-0.1253474951,-0.0290190559,0.0197604503,0.0530932024,-0.1554474831,-0.1665928513,-0.053600397,0.0406007096,-0.0550468527,0.017250197,-0.0443593562,-0.0284802243,-0.2056127638,-0.0910256729,0.0202743579,-0.0914312676,-0.0265827887,-0.1762933284,0.1624154896,-0.1405815333,-0.0087556085,0.0321014933,-0.0676328838,-0.0493416674,0.0274608433,0.0739936307,0.0476152822,0.1192034706,-0.0002972129,-0.106384851,-0.149209246,0.0490470082,0.0298648644,0.0636327863,-0.0429882631,0.0143813714,-0.116003491,-0.023123825,-0.1253107488,0.1624614298,0.004473933,0.0464354716,-0.1346541196,0.1161082536,0.1654989123,0.0365039371,0.175872311,0.1198555753,0.1883582473,-0.1310240179,-0.0196259934,-0.0206582062,-0.1003169194,-0.1328478605,0.0712238327,0.0692763329,-0.0200196691,0.0186069272,-0.011689784,-0.1461280733,0.1967217177,0.0413833894,-0.0606766269]],"hackathon_name":"Hack Cambridge Recurse","index":319,"project_description":"A cool interactive sound based web game, allowing for collaborative music makingThe idea stemmed from wanting an easy yet melodic way to collaboratively create music over the internet!The user is presented with a harmonic table whereby they are free to place pieces down in order to create music. These pieces create a pulse which create the music, and that goes through the table changing the pitch in varying degrees depending on its direction.There are several different pieces, from the simple Start and Stop, to pieces likeHack Cambridge RecurseGwen Wong\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:32 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hexhogg","project_tags":["html","javascript","firebase","midi.js","create.js","jquery"],"project_url":"https:\/\/devpost.com\/software\/hexhogg","keywords":"create,music,pulse,pieces,js,direction,different,sent,gets,place,table,order,interface,time,harmonic,idea,internet,free,game,inspiration"},{"level_0":320,"hack_vector":[[0.1240672022,-0.0995025337,-0.029724976,0.0436198041,-0.0332577415,0.150885731,0.2047655582,-0.0320617557,-0.0011740046,-0.0441911407,0.0213806387,-0.0472187549,0.1263051331,-0.0570553243,0.0652868897,0.0124476729,0.2382516712,0.018075997,0.0336389467,0.127001375,-0.2293440551,0.0256755427,-0.0417933799,-0.0324740037,0.1048599705,-0.0071903062,-0.0201419145,-0.188417539,-0.0332464725,-0.0921572298,0.057181105,-0.1263154596,0.0344681777,-0.0940890834,-0.0112839593,-0.0157184526,0.1167715862,-0.1332178861,-0.0608927347,0.010018874,0.0363250375,-0.1365548372,-0.1521416157,-0.0499228127,0.0486732237,-0.0752984211,0.0203851741,-0.0507172905,-0.0448009074,-0.2200872898,-0.121928893,0.0004210662,-0.0912537798,-0.0359841473,-0.1771997958,0.1703472733,-0.1270540506,-0.0167218726,0.0323359855,-0.0934716314,-0.0715388954,0.0170571059,0.076984711,0.0382124893,0.1090678796,0.0137926647,-0.1128983274,-0.1427199692,0.0511268005,0.0214458704,0.0500808172,-0.0485459603,0.0289594829,-0.1242247224,-0.0052565122,-0.1210802123,0.1838058829,0.003586211,0.03357343,-0.1433157027,0.1100055277,0.1696078479,0.0553167015,0.1737938523,0.1023665518,0.1862763166,-0.1085506529,-0.0284702349,-0.0127575919,-0.0837183446,-0.1483176053,0.0689299628,0.0886473954,-0.0373565145,-0.0004106128,-0.0099956011,-0.145699963,0.2280573398,0.0147613743,-0.0764608234]],"hackathon_name":"Hack Cambridge Recurse","index":320,"project_description":"Listen to the music your mood wants you to listen to.Pikachu happinessHacking teamWho hasn't ever felt stressed and wanted to listen to peaceful music? Or perhaps felt really excited and wanted to have epic music ful-surround and imagine to be driving in the middle of a Highlands-like landscape? Well, wouldn't it be cool to turn on the laptop, ask him for music and immediately have the music you want without having to ask him to?Moodsic reads your face using a camera (eg your laptops webcam) and learns your mood. Then it uses this info to pick an appropriate music for your mood.We used Microsoft's Cognitive API* for the facial recognition and a .NET environment for the development (C#, XMAL, WPF). For the music selection we used Rhythm API by Gracenote Developer. Finally, the songs are directly downloaded from YouTube.Ordered from easier to harder to implement:Hack Cambridge RecurseWebcam integration, interface designArnau Canyadell\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:31 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Moodsic","project_tags":["c#",".net","xaml"],"project_url":"https:\/\/devpost.com\/software\/moodsic-rx6ihq","keywords":"music,mood,user,environment,want,sorry,listen,use,challenges,used,new,felt,moodsic,songs,genre,environments,ask,using,wpf,api"},{"level_0":321,"hack_vector":[[0.1341120154,-0.1001628861,-0.0336118601,0.0153362844,-0.0264848266,0.1233024448,0.210142687,-0.0125604412,-0.0204002708,0.0056106113,0.0180374477,-0.0656575784,0.1295326501,-0.0597822666,0.0843696818,0.02162138,0.22348167,0.0107843373,0.019092422,0.1259049475,-0.2415232509,0.034737099,-0.0384133048,-0.0351070724,0.0959156677,-0.0174229052,-0.0307228509,-0.1906740069,0.0016516882,-0.0902321339,0.0636011884,-0.1298709661,0.0127542941,-0.0991720557,-0.0039660693,-0.0158640184,0.0927990451,-0.1449026763,-0.069313243,-0.0223752968,0.0070395474,-0.1545285732,-0.1375506371,-0.0336487517,0.0670344755,-0.0442363732,0.0050786077,-0.0740083456,-0.0205048155,-0.1928737015,-0.1316915303,0.0065753399,-0.0984841511,-0.0180355143,-0.1810514778,0.1756091118,-0.1065961272,-0.0137096457,0.038833227,-0.1101380661,-0.0718952119,0.0323919281,0.0821090415,0.0726955086,0.1008803025,0.0175672434,-0.1048445627,-0.13018547,0.048668623,0.0183237046,0.078629218,-0.0460515283,0.0509469435,-0.1214918867,0.0218719412,-0.1658850908,0.1508866251,-0.0117912749,0.0215627756,-0.1216841266,0.1409549862,0.1629329771,0.0805570558,0.1690744609,0.0860313252,0.1929336637,-0.1022498831,-0.0447544493,-0.0196738709,-0.0759996176,-0.1529820859,0.0487783663,0.0923228562,-0.065483585,0.0072288611,0.0314638764,-0.1661622524,0.2177151144,-0.0086377263,-0.0858408213]],"hackathon_name":"Hack Cambridge Recurse","index":321,"project_description":"We are biased to the information we are exposed to in our social network bubbles. Social Bubbles solves thatRecently we experienced several events where a lot of us were surprised with the outcomes (eg. Brexit, US presidential elections). Most\/all of our friends generally share our opinions on social media. There must be a way we can statistically assess this to help us form unbiased opinions.Social Bubbles allows a user to input a phrase, and uses their network to visualise the social bubbles in their network. The social bubbles will also make inferences about what likely opinions your friends might have, and how likely you are to see people with different views on your Facebook Feed.Social Bubbles takes the facebook friendships, friends posts and their connections of a user using machine learning (K-Mediods) to cluster the posts into groups. We filter the posts by the provided phrase. We then consider the Sentiment of each post using Microsoft Cognitive Services. We finally classify the users (based on their posts assignments) to different clusters using a Bayesian Classifier.The result is displayed finally on a D3 Web interface with useful graph statistics such as network percentage, groups interconnectedness and top works per cluster.Retrieving the Facebook Data\nTweeking our clustering algorithm\nData mining\/cleaningHack Cambridge RecurseClustering and classifyingIzz Abudaka\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:32 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Social Bubbles","project_tags":["python","nltk","scipy","d3.js","natural-language-processing","facebook-graph"],"project_url":"https:\/\/devpost.com\/software\/social-bubbles","keywords":"social,posts,bubbles,us,facebook,opinions,network,friends,using,user,finally,different,phrase,likely,cluster,data,groups,form,elections,graph"},{"level_0":322,"hack_vector":[[0.147354424,-0.1057857946,-0.0214347746,0.056223888,-0.0211088601,0.1493816376,0.2176731378,-0.0208204519,-0.0284120254,0.0023717009,0.0119440826,-0.0586799122,0.1395612359,-0.0685296804,0.0611752644,0.0316532403,0.2273733765,0.0157426782,0.0308251753,0.1204908118,-0.2334047109,0.0409087762,-0.0518611521,-0.0338960774,0.1299657822,-0.0260390881,-0.0463950671,-0.2087551057,-0.019756034,-0.0657761246,0.0703145266,-0.1191162691,0.0436431728,-0.1028570607,-0.0303888172,0.009337157,0.1127061546,-0.1267947704,-0.0435197949,0.0147820543,0.0289603863,-0.1609125137,-0.166402325,-0.0249154717,0.0463560447,-0.0381926969,0.0118152816,-0.0613105744,-0.0235368684,-0.2060217261,-0.1092979386,0.0016444938,-0.104419589,-0.0058193724,-0.1580940485,0.1503008008,-0.1390786022,0.0095475623,0.0260177292,-0.0749075264,-0.0649101585,0.0356003232,0.0842018351,0.0596229136,0.1243036315,-0.005872136,-0.1081300452,-0.1435814947,0.0423282757,0.0065361424,0.0600112267,-0.0482372306,0.0256254617,-0.1285324693,-0.0078115542,-0.1309374422,0.183243677,-0.0050127204,0.0431626365,-0.1345233917,0.1347406954,0.1599003971,0.0720276833,0.1539869457,0.098561652,0.1971356124,-0.0923376903,-0.0003763338,0.0058100284,-0.0985874012,-0.1430911422,0.0678064674,0.0659480467,-0.0372147262,0.0225977842,-0.0110771293,-0.1381846368,0.2098343968,0.0289630052,-0.0662602633]],"hackathon_name":"Hack Cambridge Recurse","index":322,"project_description":"Use the emotions of anger and happiness to run local commandsI was trying to create a new way of interacting with power users by adding the ability to run terminal commands based on emotions.Constantly monitors user facial expressions. If the user is angry or surprised, the program can run terminal command lines.I used JavaFX in combination with Microsoft Emotions API and OpenCV to analyse facial expressions of the user, and run appropriate terminal commands.Dependency problems.Learned more about JavaFX, OpenCV, and the Microsoft Emotions API.Expand selection of emotional commands. Allow program to run in the background.Hack Cambridge RecurseNicholas Capel\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:31 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"FaceControl","project_tags":["html","java","css","javascript"],"project_url":"https:\/\/devpost.com\/software\/facecontrol","keywords":"run,emotions,user,commands,terminal,opencv,expressions,javafx,learned,microsoft,facial,program,api,appropriate,command,dependency,adding,create,constantly,allow"},{"level_0":323,"hack_vector":[[0.1309725344,-0.1074667498,-0.0107785594,0.0276298691,-0.0116772326,0.132095769,0.2009712458,-0.0300892219,-0.0367686711,-0.0019950387,0.0009139157,-0.0704189911,0.1308994293,-0.0656369627,0.0418399759,0.0496960171,0.2438631654,0.0002793015,0.0421701856,0.1250703931,-0.2402527481,0.0597258247,-0.0376505852,-0.02121328,0.1201612875,-0.0250211507,-0.049233757,-0.1850138307,-0.0049526026,-0.1047643498,0.0734600946,-0.1353887916,0.0476766601,-0.0817837715,-0.0166446697,-0.0223361515,0.1261545718,-0.1364414245,-0.0234570336,-0.0129068727,0.0292080306,-0.1719044894,-0.1760370284,-0.0571742728,0.0518418476,-0.048202794,0.0013655775,-0.0634189695,-0.0096024238,-0.2008617967,-0.1012400463,0.0256799366,-0.1013175249,-0.0030075083,-0.1921175271,0.1470160186,-0.1572393775,-0.0212041885,0.0392721891,-0.0835499689,-0.0709031448,0.0290792529,0.0785098672,0.0531281605,0.103428632,0.001365045,-0.1006636322,-0.1526265442,0.0536016524,0.0385584086,0.0924052224,-0.0642263889,0.0307677332,-0.1140625849,0.0030694287,-0.1371361762,0.14774324,0.0070487149,0.052202303,-0.1219553128,0.1172685772,0.1469006985,0.0579664297,0.1747715175,0.1091306284,0.1740745902,-0.1300691366,-0.0300664511,-0.0246663038,-0.0980675295,-0.1317305714,0.0564906374,0.0742815286,-0.051161468,-0.002465483,0.0206537228,-0.1461169422,0.1874029338,0.0329116844,-0.0782490522]],"hackathon_name":"Hack Cambridge Recurse","index":323,"project_description":"Creating an image by combining the colors that different cellphones obtain by scanning a QR.Checking the QR detectionAdministrator setting parametresUser screenshot viewOur application is the ideal complement for a multitudinary event, such as a concert or a sports competition. The goal is to display a gradial wave between two colors by combining the images that appear on tons of different phones.First of all, the administrator generates a QR by setting up the parameters of the animation such as resolution, number of frames, colors and speed. This person also determines where the QR will be projected, so he will also input information on the room, and on the QR.The next phase is at the time of the event. The administrator will display a QR and ask all the people in the venue to enter the website and upload a picture of the QR. Then, the server calculates the position of each phone and in what order should the images appear on the screen.Hack Cambridge Recurselaia freixas\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:30 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"eWave","project_tags":["css","javascript","python","html","flask","json"],"project_url":"https:\/\/devpost.com\/software\/ewave","keywords":"qr,administrator,also,appear,images,colors,event,display,information,ideal,gradial,goal,generates,frames,first,enter,determines,different,mosaic,creating"},{"level_0":324,"hack_vector":[[0.1441461742,-0.143677339,-0.0031619414,0.090753451,-0.0478572138,0.1758220196,0.1781615317,-0.0623086542,-0.0149309821,-0.0443725511,-0.005012332,0.0335714929,0.1157096624,-0.0624397546,-0.0195908342,0.0689598992,0.2751252353,0.0480659604,0.0358076766,0.0959293991,-0.1974161267,-0.001570111,-0.0374759212,-0.0435841642,0.1970674098,-0.0013026407,-0.0699882358,-0.1855282187,0.0182782002,-0.0898184404,0.033114057,-0.1110093072,0.0790349022,-0.0400530845,-0.0183742754,-0.0102600576,0.1381440759,-0.1028909758,0.0111768125,0.0836126208,0.065948002,-0.163366273,-0.18062976,-0.062123768,-0.0473374873,-0.0521285981,0.0274699163,0.0237445757,-0.0415105633,-0.1886401325,-0.0169378258,0.0328035057,-0.0870949104,-0.0659625456,-0.1138863787,0.139706865,-0.1545675695,0.0446807481,-0.0081619164,0.0323247053,-0.0173186045,0.0246673636,0.0435530283,0.0323253162,0.1315940171,-0.0287181959,-0.1481757313,-0.1798578054,0.0315429196,0.0293980651,0.0622416362,-0.0379044153,0.0025268449,-0.1348410845,-0.0778343305,-0.0646893904,0.1691206545,0.0242832657,0.093995288,-0.1415490806,0.0904958248,0.1533464044,0.0004247185,0.1715848893,0.1435717642,0.1605792195,-0.1673427522,0.0614477582,-0.015020946,-0.1141321659,-0.0649773553,0.1138887033,0.0185601115,0.0234159883,0.0696017519,-0.0745746419,-0.0730878487,0.1673635542,0.0977907777,-0.0454879627]],"hackathon_name":"Hack Cambridge Recurse","index":324,"project_description":"A multiplayer game in which you defeat your enemies with codeA multiplayer game in which you defeat your enemies with codeHack Cambridge RecurseAlasdair Hall\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:30 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Codebot Wars","project_tags":["python","javascript","react","jquery","html","css"],"project_url":"https:\/\/devpost.com\/software\/codebot-wars","keywords":"multiplayer,game,enemies,defeat,code"},{"level_0":325,"hack_vector":[[0.1555772573,-0.1012861207,-0.0350545906,0.0366387591,-0.0127239488,0.1193888709,0.2164774388,-0.0062342025,-0.0246194508,-0.0039810301,0.0074089174,-0.0677805319,0.1329175085,-0.0669558644,0.076058276,-0.0027153278,0.1878049821,-0.0139388023,0.0429917388,0.1296637654,-0.2545833588,0.0284979567,-0.0392292663,-0.0159241762,0.1120622233,-0.0319921188,-0.0299371593,-0.1775149852,-0.0217832141,-0.0818275362,0.0614972673,-0.1194014102,0.0274153203,-0.0898403078,-0.0225378536,-0.0165884607,0.1034946367,-0.14761585,-0.0747516826,-0.0004512296,0.0382750928,-0.1362409741,-0.1300373077,-0.0344382748,0.0714897811,-0.0602524355,0.010796045,-0.092203401,-0.0136091569,-0.2047854513,-0.1470839679,-0.0007580403,-0.1168859601,0.016294824,-0.1981697977,0.1680876464,-0.137506336,-0.0221587662,0.0340586267,-0.116422832,-0.0807269812,0.0287835225,0.0761720911,0.0507701151,0.1129077151,0.0159180928,-0.109257035,-0.1129713207,0.029253412,0.017156424,0.0647394136,-0.0506355017,0.0153831569,-0.1225481108,0.0391552113,-0.1406547725,0.174732849,-0.0076970193,0.0088958973,-0.1352365315,0.1189096943,0.1510220319,0.0653161779,0.1510631591,0.0974091589,0.2022926956,-0.0839009732,-0.030736072,-0.0057178219,-0.0796193928,-0.1564089358,0.0541113876,0.0970930755,-0.0443545878,-0.0044579948,0.0124656865,-0.1628229469,0.2197160572,0.0098834112,-0.060715504]],"hackathon_name":"Hack Cambridge Recurse","index":325,"project_description":"Use TensorFlow, Keras, OpenCV to train the machine to lock the laptop when owner leaves desk.Missing scenes from netflix when I temporarily leave the laptop.It uses deep learning to recognise the person via the laptop's webcam. After that, the daemon can be configured to do anything. For demo purposes, we are using it to pause netflix \/ youtube videos after 10 seconds. Another use case is to lock the laptop after a certain amount of time without the user sitting in front of the laptop. This is vital in a highly secure environment to avoid unauthorised access to data.Other potential applications:\nWe can see this being applied in areas where full attention of the user is required for high security reasons, such as in the following two use cases:Used a popular open-source project, Boss Sensor as inspiration to use face recognition via deep learning, training on examples of faces. The deep learning is performed by using Tensor flow and Keras. To get the video feed, we're using OpenCV.-- Using Tensor flow and Keras for deep learning. A huge number of training examples are required. Therefore, it is not as accurate yet as we'd like it to be. \n-- Getting OpenCV installed on a mac. This was a nightmare.-- Able to differentiate between different faces as opposed to just traditional face detection. This is able to recognise different faces for example the face of an authorised user vs. an unauthorised user.We've learned how to use Tensor flow for deep learning. We also learned about feature recognition and image manipulation.We would like to automate the learning process of the algorithm. Currently, we have to manually capture images and train the algorithm. Automating this process would mean a larger training dataset, resulting in higher accuracy.Hack Cambridge RecurseArgha Sarkar\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 06:56 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Face recognition to execute commands","project_tags":["opencv","bash","java"],"project_url":"https:\/\/devpost.com\/software\/automatic-face-recognition","keywords":"user,learning,face,recognition,deep,using,laptop,use,flow,tensor,training,learned,screen,faces,automatic,inspiration,process,requires,required,air"},{"level_0":326,"hack_vector":[[0.1450805962,-0.0892308205,-0.0237435829,0.0532892942,-0.0203873124,0.1471370459,0.2187045217,-0.0230039321,-0.0320613869,0.0073154001,0.0087752678,-0.0733572617,0.1392195076,-0.0741292685,0.0723622963,0.0219386593,0.2099606842,0.0103485063,0.0315145217,0.1227518842,-0.2269215584,0.0361318327,-0.0603788234,-0.0246353336,0.1290049702,-0.0130963605,-0.0435452722,-0.1980562657,-0.025194468,-0.0657205731,0.0738065466,-0.1238575354,0.0358043686,-0.0989145339,-0.0375770703,0.0097871274,0.118069984,-0.1296781003,-0.0474228784,0.0057883263,0.0386655554,-0.1489506662,-0.156799823,-0.0149008026,0.0602155402,-0.0372013561,0.0162461139,-0.0753749534,-0.0236701071,-0.216494441,-0.1203124374,0.0145792682,-0.1043130159,0.0158348717,-0.1639588326,0.1632576287,-0.1405987293,0.0061460352,0.0107413772,-0.0861839876,-0.0632594451,0.0264925789,0.0883050635,0.0544267483,0.1278356612,-0.006330953,-0.0944818929,-0.1347600222,0.0439318419,0.0095252432,0.0574052446,-0.0406995565,0.0204292927,-0.126764074,0.0141143585,-0.1116196513,0.1845599562,0.0015354004,0.0212515108,-0.1378054023,0.1338846236,0.1565455198,0.0883516297,0.1462894827,0.0993983224,0.2087691426,-0.0802914351,-0.0224855058,0.0106238462,-0.0872489586,-0.1534505785,0.056396421,0.0910677463,-0.0366858095,0.0067374445,-0.0006470665,-0.138886869,0.2247609049,0.0182040371,-0.0704551786]],"hackathon_name":"Hack Cambridge Recurse","index":326,"project_description":"We teach children to write in a fun way!We wanted to find an application of bots to help learning languages, with focus on early beginner (eg. children).The user gets to pick a category of images and then different images are showed to him\/her. The user should input the objects present in the image and compare the user's input with the results obtained from Computer Vision API.We built it using Node.js SDK and Microsoft Bot Framework and 2 of the Microsoft Cognitive Services.Setting up and connecting the APIs. Lack of enough example code and documentation for Microsoft Bot Framework.We have a bot!Working with a new technology stack.Implementing the Speech Recognition API and publish the bot on more platforms.Hack Cambridge RecurseFaraz Taheri\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:28 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"tech-miners","project_tags":["node.js","telegram"],"project_url":"https:\/\/devpost.com\/software\/tech-miners","keywords":"bot,user,microsoft,built,api,images,input,framework,find,eg,enough,example,working,focus,documentation,gets,help,image,early,computer"},{"level_0":327,"hack_vector":[[0.1355216056,-0.1134880334,-0.0277989339,0.061441958,-0.0288821179,0.1423378587,0.2026580572,-0.0397254936,-0.012141021,-0.0465406366,0.0152823916,-0.0237394217,0.1298134327,-0.0635345206,0.0342051238,0.0081706904,0.2346063554,0.0093376469,0.0378805771,0.1407092959,-0.2424497008,0.0152167436,-0.0359491669,-0.0143699339,0.1355525255,-0.0091176387,-0.0335880555,-0.1827868819,-0.0263867136,-0.0975508466,0.0525345877,-0.1276855916,0.0374438614,-0.0609818026,-0.0041205361,-0.0285191927,0.1183792427,-0.1281611472,-0.0496961735,0.0217938516,0.0638865456,-0.1432551295,-0.148791194,-0.0615155995,0.0255221333,-0.072153978,0.0121946363,-0.0419072323,-0.0517139211,-0.2137940675,-0.1103114858,0.0099377623,-0.0969289541,-0.0162583068,-0.1885894537,0.1558486223,-0.1433979124,-0.0207333695,0.0152981533,-0.0793662891,-0.0582000427,0.026749799,0.064004913,0.0236088689,0.1200030521,0.0184380915,-0.1256879866,-0.1405929923,0.0325155444,0.0268828999,0.0442487709,-0.0489807725,0.023502972,-0.1169330105,0.0006618463,-0.1024702713,0.173363477,0.0015317815,0.0285934154,-0.1481291652,0.1068507582,0.1669104993,0.035210833,0.1802597344,0.1121302918,0.2032329887,-0.1209383607,-0.0172108151,-0.0262000691,-0.078960903,-0.1247634962,0.0857437029,0.0775676668,-0.0182557628,0.0011543394,-0.0184894968,-0.1507882327,0.2302192897,0.0290016383,-0.0557355881]],"hackathon_name":"Hack Cambridge Recurse","index":327,"project_description":"Engaging VR game for Google Cardboard where you run in a maze in local party and try to hit opponents by jumpingMain menuJoin\/Host a sessionSelection of menu itemsInside mazeMeeting an enemyVR game where you had to do some physical exercises to achieve victory.In this game, you run around in a maze and if you find an enemy, you need to jump in real life to attack the foe.We used Google VR (Google Cardboard) together with Unity3d engineLocal networking is very tricky to implement when you can test it on your phone only which doesn't have to debug.VR is working nad we had no prior experience.VR and local network multiplayer implementation in UnitySingle player mode, mode weapons and challenges to get powerupsHack Cambridge RecurseAdomas Boruta\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:28 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MazeVR","project_tags":["unity","google-cardboard"],"project_url":"https:\/\/devpost.com\/software\/mazevr","keywords":"vr,mode,unity,challenges,google,local,game,working,foe,learned,jump,inspiration,implementation,implement,get,exercises,find,experience,engine,enemy"},{"level_0":328,"hack_vector":[[0.1626374722,-0.113905184,-0.0215854216,0.0477567501,-0.0046958555,0.1354622096,0.1975555867,-0.03730423,-0.0305128247,-0.01162499,0.0100788893,-0.0827713311,0.1512207538,-0.0695315227,0.0586636588,-0.0014460611,0.1952941269,-0.0101853041,0.0464792065,0.1331250519,-0.2422943562,0.0409499109,-0.0487387404,0.0028950116,0.1307273507,-0.0396489985,-0.0365632325,-0.1767816544,-0.045246724,-0.0904107466,0.0801117495,-0.1184518561,0.0339248814,-0.075931944,-0.024349859,-0.0237020981,0.1192401573,-0.1399236172,-0.0516790003,-0.0132189104,0.0630367175,-0.1343355775,-0.1503454596,-0.0249919482,0.0616200082,-0.0452849306,0.0138244797,-0.0861273184,-0.0314774923,-0.21285218,-0.1441139281,0.0290857647,-0.1103473678,0.0305580646,-0.209348157,0.1601429135,-0.1365434825,-0.0255217943,0.0241755471,-0.0987355709,-0.0730425045,0.0203657039,0.0674579218,0.0355571695,0.1082649454,0.0273010451,-0.0956624895,-0.1186627895,0.0117467707,0.0234994069,0.0687953979,-0.047801435,0.0265565123,-0.1163004264,0.0402814783,-0.0956826881,0.1792090237,-0.0077530388,0.0031069727,-0.1270651817,0.1131465882,0.1489634961,0.0507972278,0.1501328945,0.1050452292,0.2092490792,-0.0865851715,-0.0506017879,-0.0176606756,-0.0644169748,-0.1317862421,0.0627012327,0.0888878554,-0.0433469526,-0.019547062,0.0034857937,-0.1540046632,0.2372390777,0.0112839248,-0.0644433349]],"hackathon_name":"Hack Cambridge Recurse","index":328,"project_description":"A game about whistling. Fun, silly, and slightly addictiveDo you know the movie \"Guardians of the Galaxy\"? In it, there is a bad-ass ravager, Yondu, who commands a deadly arrow just by whistling. We wanted that.We have managed to build a library for recognizing whistles even in noisy environments, and have built three harmonizing games on it.We used some basic processing on the FFT supplied by the AnalyzerNodes in the Web Audio API, and used jaws.js to build nice games around it.For one, there was the challenge of processing the audio properly. Also, the inputs supplied by whistling were very different from any input we have worked before. Finally, whistling varies from person to person: we had to set up a way to adjust to each person's sound signature.We are really proud of having put together such efficient (reasonably fast and with good noise immunity) signal processing.I think we got much better at working quickly and efficiently in a team.Probably, we should polish it up greatly, and possibly, we should unify the visual style of the game. We also have plans to connect multiple input devices via WiFiHack Cambridge RecurseI implemented the engine for recognizing the whistling, and then I worked on getting the project all together.I implemented the \"Breakout\" game and helped a bit with pretty much all parts of the app.I worked on the \"Not so Flappy\" minigame and various other parts of the app.I worked on the Snake minigame and various other parts of the game.B\u00e1lint Kov\u00e1cs\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:24 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"eeiiaaoouuh","project_tags":["html5","jquery"],"project_url":"https:\/\/devpost.com\/software\/eeiiaaoouuh","keywords":"whistling,processing,person,built,used,proud,also,build,input,supplied,audio,games,yondu,game,galaxy,fft,finally,got,good,even"},{"level_0":329,"hack_vector":[[0.1563708335,-0.102313973,-0.0226054508,0.0566979945,-0.0187849663,0.1444912255,0.1979011595,-0.0399335846,-0.0119325593,-0.0215256941,0.0180060435,-0.0562029816,0.1430848837,-0.0773101076,0.0495025478,-0.0050192038,0.2092086077,-0.0058010928,0.0576536059,0.1140590012,-0.2351701558,0.0317947082,-0.0457118154,-0.0074770576,0.1282852739,-0.0407224037,-0.0336310528,-0.1842298806,-0.0307511073,-0.072446622,0.0665514469,-0.1157400832,0.0473082364,-0.0807483047,-0.032176625,-0.0047213077,0.1345154643,-0.1332630515,-0.0575189926,0.0160491299,0.052475702,-0.1376022846,-0.1533237696,-0.0302691236,0.0490158238,-0.0535278879,0.0244057458,-0.0769650713,-0.0293500908,-0.2181650698,-0.1434816867,0.0202248842,-0.1197422743,0.0056723668,-0.194182694,0.144620046,-0.142993167,-0.0163892433,0.0324336737,-0.0796654969,-0.0662219003,0.020294819,0.0770234093,0.0367758125,0.1193275899,0.0062770867,-0.101071246,-0.1216072813,0.019153988,0.0182800181,0.0627366006,-0.0524922572,0.0193783808,-0.1340889484,0.018987136,-0.1123783439,0.1986218989,0.0006245995,0.0186908096,-0.1479318142,0.1184012294,0.1525225937,0.0386153646,0.1661408395,0.1049880162,0.1957326382,-0.0999828056,-0.0223941244,-0.014694768,-0.0946631506,-0.1413720548,0.0652497858,0.07672555,-0.030543305,0.0116548678,-0.0154248001,-0.1368558407,0.2228178978,0.0351501554,-0.0680533126]],"hackathon_name":"Hack Cambridge Recurse","index":329,"project_description":"Atom plugin that lets you store code snippets for later use.Prototype of an Atom package that lets you store code snippets for later use to reduce code duplication and improve programming efficiency. Code snippets can be selected and stored in a database. This idea was based on this Github tutorial to build a clone of Sourcerer, an Atom plugin that gets relevant code snippets from StackOverflow (tutorial here: https:\/\/github.com\/blog\/2231-building-your-first-atom-plugin).We have extended this idea by implementing a database with MongoDB and adding various functions - as a user works, they can select code snippets to be inserted into the database and retrieve these snippets later; they can also compare selected snippets to existing entries in the database to avoid duplication. If a selected snippet already exists in the database it will not be saved. (There are some bugs but we are working on it)Work in progress for Hack Cambridge 2017.Hack Cambridge RecurseI worked on the main functions and programming logic for this project, added keyboard shortcuts etc. I barely knew any Javascript before today and I learned a lot.Sherri\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:19 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Stash","project_tags":["javascript"],"project_url":"https:\/\/devpost.com\/software\/stashprototype","keywords":"snippets,code,database,selected,atom,github,plugin,package,duplication,later,tutorial,idea,existing,extended,first,functions,entries,efficiency,exists,works"},{"level_0":330,"hack_vector":[[0.1420396864,-0.0960463881,-0.0376434326,0.0348406844,-0.0260042101,0.1593375504,0.1940131783,-0.043040067,-0.0020244331,-0.0276912209,0.0175464526,-0.0512889065,0.1252262741,-0.065440461,0.0394766293,0.0131263919,0.2410544902,0.0239749327,0.0398293808,0.11143516,-0.2279860228,0.0244107004,-0.0405101068,-0.0322632678,0.1077962443,-0.0139440885,-0.0353254788,-0.1846752316,-0.0225876626,-0.1059212312,0.0558470935,-0.1373604536,0.0406600684,-0.0919546634,-0.0084928693,-0.019309558,0.1227761284,-0.1314752251,-0.0578042157,0.0140319997,0.0478978939,-0.1345128715,-0.1605048627,-0.0435292907,0.0517230965,-0.0633518174,0.0193021577,-0.049164243,-0.0498305894,-0.2061786205,-0.1343362033,0.0173680168,-0.0940256044,-0.0370782353,-0.1876952201,0.1527443379,-0.1213384643,-0.0238140412,0.0429520048,-0.0808388218,-0.0600093603,0.0091785584,0.0841496885,0.0404176787,0.1132047474,0.0129823321,-0.1118443683,-0.1335229725,0.0424570777,0.0363818072,0.0773532763,-0.0547144562,0.0231775735,-0.1245736554,0.0072023426,-0.1305483729,0.1748751253,0.0185924172,0.0250994992,-0.1412267834,0.1180330813,0.1637983471,0.0444113687,0.1865451932,0.1064762771,0.1884939522,-0.1099607572,-0.0340961814,-0.0155596714,-0.0797101483,-0.1342666596,0.0548696332,0.0832879543,-0.0310236216,0.0049312036,-0.009798687,-0.1464845687,0.2310437262,0.0113350358,-0.087561667]],"hackathon_name":"Hack Cambridge Recurse","index":330,"project_description":"Get instant up to date events from your IoT devices from your smart home.Using the pusher feeds API you can get instant updates from your IoT devices with their own personal message.Examples:\n     - You have a pressure sensor on your doormat, it senses someone standing on top it. Appends a pusher feed saying \"You have a visitor!! Front door!\"I believe that Pusher Feeds have huge potential in the IoT and smart house industry as it is super easy, flexible and customisable to implement. It is responsive and provides simple instant alerts to when an event occurs which is very valued. Its simple implementation lets activists play and tinker and create their own perfect smart home ecosystem just the way they want it.Hack Cambridge RecurseConfigured Intel Edison and implemented Pusher service on ArduinoBrian Gunawan\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:17 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"homeFeeds","project_tags":["javascript","css","html","c++","intel-edison","arduino","windows-10","linux"],"project_url":"https:\/\/devpost.com\/software\/homefeeds","keywords":"pusher,feed,simple,instant,iot,appends,water,feeds,sensor,someone,smart,flexible,front,way,examples,home,homefeeds,house,houses,get"},{"level_0":331,"hack_vector":[[0.1567257643,-0.0995028093,-0.0352498777,0.0432304852,-0.0174531899,0.1412539631,0.1842980236,-0.0289536025,-0.0124643371,-0.0244998839,0.0132363085,-0.0767670274,0.1360833496,-0.0600779876,0.0676590353,0.004535194,0.1993962377,0.0019206455,0.0524395443,0.1152220592,-0.2327510118,0.0235033948,-0.0525996201,-0.0109422952,0.0968159735,-0.0307766777,-0.0309767872,-0.1745784581,-0.0445832089,-0.0907198563,0.0652354285,-0.1116671786,0.0397001095,-0.0899033397,-0.0178545229,-0.0068474622,0.1112770587,-0.1366543919,-0.0612876937,0.0046065026,0.0497047268,-0.1267157942,-0.1624495387,-0.0314812213,0.0602706596,-0.0691547841,0.0194248706,-0.084023416,-0.0375357158,-0.2257364094,-0.1581294686,0.0157913771,-0.1055626646,-0.008591244,-0.1987756342,0.159986943,-0.123912774,-0.0260301027,0.0437156856,-0.0934196934,-0.0787274241,0.0179326124,0.0682320818,0.0406276658,0.1060519293,0.0150501672,-0.1078906953,-0.1214312911,0.0214345381,0.0160628315,0.0704150945,-0.0510444716,0.0057171681,-0.1260723025,0.0227416754,-0.1071259826,0.1974106729,0.0075740595,0.010570216,-0.1421122998,0.1068083048,0.1589745879,0.0489721447,0.1598401219,0.1042110398,0.2058946341,-0.085710898,-0.0381951742,-0.0096710566,-0.0847981423,-0.1407909095,0.0604309328,0.0910870507,-0.0433595665,-0.0134155294,-0.0096267145,-0.1533201337,0.2456493378,0.0098075429,-0.0800890699]],"hackathon_name":"Hack Cambridge Recurse","index":331,"project_description":"An easier way to referenceMedical students already have tonnes of work on their plates: struggling with referencing essays shouldn't be as much of a bother as it is.It reads your essay, figures out the underlying topics and then sends you all the related reference papers it can find.I used the Microsoft Text Analysis tools, and obtained the API for Topic Analysis. I integrated this with the PubMed API, so that the reference papers could be accessed.The Microsoft API only works with a minimum of 100 documents sent at a time, so I had to sit with the sponsors to figure out how to get around this as you would usually only send it one document at a time.Learning a new language.I learned how to use HTML for the first time so that I could work on the front-end.It's far from perfect, so I plan on actually finishing HackRef. I want to be able to use it for my own essays.Hack Cambridge RecurseKhyati Gala\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:24 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HackRef","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/hackref","keywords":"api,time,microsoft,work,learned,essays,use,analysis,reference,papers,hackref,could,front,find,finishing,first,html,get,inspiration,integrated"},{"level_0":332,"hack_vector":[[0.1289237589,-0.0982648209,-0.020559961,0.0368620604,-0.0181910433,0.1569606662,0.1811830252,-0.0470340885,-0.0030900072,-0.0375309177,0.0100921504,-0.0600264035,0.1201314852,-0.0667154416,0.0276623331,0.0296824072,0.2579679787,0.0222940985,0.0439073406,0.1121614277,-0.2365292013,0.0338246226,-0.0382100902,-0.027448304,0.1148371622,-0.0189304352,-0.0412318185,-0.1927347332,-0.0246243477,-0.1108832881,0.0630328506,-0.1395405233,0.0558978952,-0.089520596,-0.0065148557,-0.033642862,0.1253538877,-0.1342339665,-0.0386801362,0.0080125388,0.0347999632,-0.1550816149,-0.171521455,-0.0575218014,0.037330538,-0.0667201281,0.0168765523,-0.0430690609,-0.0497123487,-0.2109006494,-0.1112238467,0.0228293296,-0.090484485,-0.0355733298,-0.18790555,0.1532892883,-0.131484136,-0.0178416464,0.0391517691,-0.0740253776,-0.0613704249,0.0108369738,0.0727747977,0.0354973003,0.1047914401,0.0158764068,-0.1182269901,-0.1481891721,0.0456694923,0.0486859418,0.0911770612,-0.0661925897,0.0398729518,-0.1297025979,0.0055336826,-0.1213832274,0.1684546173,0.0164981186,0.0507539809,-0.132446155,0.1108217463,0.1540781856,0.044860024,0.1811413765,0.1061226726,0.1702985018,-0.1262436062,-0.0349643193,-0.0291828346,-0.0841703266,-0.120532833,0.0600896403,0.0651910454,-0.0514822602,0.0020067748,-0.0018489276,-0.1354462951,0.2126768678,0.0279018525,-0.089847818]],"hackathon_name":"Hack Cambridge Recurse","index":332,"project_description":"A personal tour guide for the worldMain ViewPost your audio tourListen an audio tour by clicking the point on the mapHotel available tonight from SkyScannerYou're in Rome for a day. You want a whistle-stop tour from the best tour guides in Rome without the hassle of booking onto a tour and following a set route. Cue, Go.Record a short audio tour at a location eg \"You're standing outside Kings College Cambridge, it was founded in 1441.......\" Upload the audio with automatic geotaging. When anyone walks past this point they can click on your marker that you left to hear the audio tour.You can see all the available hotels in your area on your Go map. You can leave an audio review if you wish to as well.Hack Cambridge RecurseI worked on the android front end. Worked on ui, using the various api's and connecting the the nodejs database.Calvin Benton\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:18 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Go","project_tags":["node.js","express.js","android-studio","pusher","azure","amazon-web-services","skyscanner"],"project_url":"https:\/\/devpost.com\/software\/go-pdok9l","keywords":null},{"level_0":333,"hack_vector":[[0.1422621161,-0.1251608282,-0.0098879728,0.0687562227,-0.0451681092,0.1600875109,0.1970912814,-0.046896603,-0.0270087477,-0.0182564147,-0.0026516612,-0.0059720287,0.1355732679,-0.0812875703,0.0224016011,0.0721275583,0.2601659298,0.0320990272,0.0387153812,0.1094667017,-0.2157492638,0.0141255716,-0.0449369997,-0.0490162782,0.1573140323,-0.0149453916,-0.0670605823,-0.1874065548,0.0125216553,-0.0817532912,0.0414831005,-0.109135963,0.0652846023,-0.0662391782,-0.0336226113,0.0057019931,0.1450881511,-0.1182604283,-0.003432699,0.0647905022,0.0486107804,-0.1571663171,-0.1914797127,-0.0368233733,-0.0007990755,-0.0493935719,0.0314146541,-0.0299989916,-0.0210080575,-0.2116827518,-0.0617501587,0.0306579825,-0.1015768126,-0.043497432,-0.1404843181,0.1579331458,-0.1536076069,0.0438288562,0.002068802,-0.0016688945,-0.0347764678,0.028970778,0.0657671914,0.0651814863,0.1342773288,-0.0301760305,-0.1160281822,-0.165843755,0.0399134122,0.0106350612,0.0656437725,-0.0391679406,-0.0061247386,-0.1388584673,-0.0428731106,-0.0867290944,0.1837816685,0.0160755981,0.0672604963,-0.1436846405,0.1212444007,0.1650400907,0.0395331942,0.1595867127,0.1363808662,0.1793530434,-0.1288060695,0.0327381454,0.0078127282,-0.1101145819,-0.1102457196,0.0850169584,0.0497935601,-0.0023950676,0.0508187041,-0.0520947278,-0.0947788283,0.1711622775,0.075306043,-0.0527629703]],"hackathon_name":"Hack Cambridge Recurse","index":333,"project_description":"Aggregate feeds for yourself and others.The idea is instead of having a server running 24\/7 to fetch new feeds for users, making every user's device the aggregator for everyone.With Aggregator, you canPowered by Pusher APIHack Cambridge RecurseKang Cheng\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:24 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Aggregator","project_tags":["swift","pusher"],"project_url":"https:\/\/devpost.com\/software\/aggregator-lr9uz8","keywords":"aggregator,channel,article,check,new,list,feeds,users,fetch,api,channels,create,device,every,everyone,idea,user,instead,making,others"},{"level_0":334,"hack_vector":[[0.1684977561,-0.0996071547,-0.0155393733,0.0773627013,-0.0303493068,0.1879571229,0.1976014525,-0.0509054512,-0.0120037366,-0.010676791,-0.0068425187,-0.0287787355,0.1287909448,-0.0678606033,0.0489967018,0.0298103131,0.2246035635,0.0413856208,0.0454619527,0.0948877558,-0.1993463635,0.0201311521,-0.055036027,-0.0460146032,0.1648026705,0.0000232515,-0.0420074351,-0.2018888444,-0.0165858734,-0.0625539571,0.0525274239,-0.1314797699,0.0647757649,-0.0965513811,-0.0309934225,0.0242745541,0.1366379112,-0.1187598109,-0.0412858203,0.0520309657,0.0557079911,-0.1680170745,-0.164675504,-0.0229619835,-0.0029051488,-0.0329213254,0.0215593744,-0.0401707813,-0.0447373986,-0.2034099102,-0.0935168788,0.0258859023,-0.1093240231,-0.0352266803,-0.1235817298,0.1610547453,-0.1434375793,0.045298405,-0.0013417149,-0.018845655,-0.0456659943,0.0201576278,0.0619003847,0.0529277287,0.1456334293,-0.026912462,-0.1352075189,-0.1539108753,0.0291480478,0.0099580353,0.0728778765,-0.0437321439,0.0127058886,-0.1516133249,-0.0141536491,-0.0800663829,0.2025772631,0.0156570375,0.0481869355,-0.1494602263,0.1164850444,0.1604319215,0.0721671209,0.1472011954,0.1128824577,0.1849780083,-0.101775229,0.0311607383,0.0373997986,-0.0926512703,-0.117443651,0.0809014365,0.0586640649,-0.0086075915,0.0540293977,-0.0431617014,-0.0982479826,0.2228400707,0.0384999812,-0.0644466504]],"hackathon_name":"Hack Cambridge Recurse","index":334,"project_description":"Audio generated by your emotions (Microsoft Emotion API)It's our first time using JavaScript. We wanted to make something using music that reacts (mirrors) your mood. So we used Microsoft's Emotion API and Tone.js.Hack Cambridge RecurseI worked on the Emotion APIAwesome-Welles\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:19 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"soundfeel","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/soundfeel","keywords":"using,wanted,mirrors,emotion,first,javascript,js,make,microsoft,mood,music,reacts,something,time,tone,used,api"},{"level_0":335,"hack_vector":[[0.1441704333,-0.1131547838,-0.0243720114,0.054933019,-0.0256385803,0.1436308175,0.2003205121,-0.0416193642,-0.0124280257,-0.0023057933,0.0163701549,-0.0442712493,0.1424268931,-0.0761753246,0.0571165644,0.0115686255,0.2362855375,0.0163718872,0.0425649919,0.1067781374,-0.2312564403,0.0407981053,-0.0456253216,-0.0262609385,0.1337094754,-0.0207479242,-0.0359937213,-0.203759402,-0.0035359112,-0.0702810287,0.0610205568,-0.1412225068,0.044355046,-0.0912450179,-0.0281565934,-0.0055927751,0.1199516952,-0.1409538239,-0.0540209152,0.0031848524,0.0237242952,-0.157367304,-0.1627994478,-0.0362039804,0.031851694,-0.0468427092,0.0130113196,-0.0576912872,-0.024176456,-0.1956564784,-0.1251268238,0.0115678199,-0.1075249687,-0.0175545197,-0.1735130548,0.153935492,-0.1315745413,-0.001847772,0.0222659893,-0.0718976855,-0.060677357,0.0211404115,0.0912400484,0.060373947,0.1043840051,-0.0000511848,-0.0978565291,-0.1343007535,0.0404397361,0.0208042562,0.0762151778,-0.0558169596,0.0450530201,-0.1229595616,0.013127462,-0.1309091598,0.1829309165,0.00372742,0.0354119353,-0.136633411,0.1369189471,0.1598106474,0.0631958917,0.1793464571,0.1026897803,0.1890538931,-0.1175540015,-0.0206321329,-0.008658628,-0.0816511288,-0.1263202876,0.0613409355,0.0825767294,-0.0280139726,0.0326903947,-0.0195422638,-0.133597061,0.2075107545,0.0307295602,-0.0868784189]],"hackathon_name":"Hack Cambridge Recurse","index":335,"project_description":"An application to quantify your productivity level and compare it with other developers.ProductivityPal tmAn application to quantify your productivity level and compare it with other developers.Feature list:Automated repo detectionCounts lines of code written via gitCounts wpm, words written, and other metrics like whatpulse.-Detects focused window to detect IDE\/program used \n(for filtering by wpm written in ide) etc.-Detects websites visited and whether they are productive\/unproductive\n(machine learning trained on 'productive' and 'unproductive' data)-Compare productivity with others in your company\/network and see \nwhat percentile you are in!Client:\nMonitors productivity, uploads productivity data to serverServer:\ncompares productivity data between users, rankingsJSON transfer format for a data upload to the server (must authenticate with the server first):server upload url is (address)\/productivity\/add_record\n{\n    'time_start': sometimestamp,\n    'time_end': sometimestamp,\n    'time_productive': sometimedelta\n}Hack Cambridge RecurseEthan Dunsmore\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:18 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Productivity Pal","project_tags":["javascript","python","html","css","django"],"project_url":"https:\/\/devpost.com\/software\/hackcambridge-5zgmxf","keywords":"productivity,server,data,productive,time,written,compare,wpm,counts,upload,unproductive,ide,sometimestamp,detects,json,focused,like,first,git,level"},{"level_0":336,"hack_vector":[[0.1299652159,-0.0980255231,-0.0257824846,0.0322987698,-0.0112592625,0.1186315864,0.2133037597,-0.0119902315,-0.0222738609,-0.0059232842,0.0208444633,-0.0757963434,0.1378118247,-0.0739161074,0.0743343234,-0.0002287594,0.1994903684,-0.0221806355,0.0403525345,0.1325558424,-0.2543942034,0.0368456692,-0.0420942008,-0.0105056735,0.0993900448,-0.0371104069,-0.0288172383,-0.1736070663,-0.0190803818,-0.0881074443,0.0707416162,-0.1141756177,0.0183228366,-0.0804758444,-0.020775171,-0.0150182042,0.1056215391,-0.1463629156,-0.0583847649,-0.0160305426,0.0339139514,-0.1332080066,-0.1377916187,-0.0335646309,0.0863461867,-0.0505893975,0.0107625993,-0.0870488361,-0.0171797108,-0.2085298002,-0.1467244476,0.0107360817,-0.1083825976,0.0229597464,-0.210161835,0.1521971524,-0.1328867972,-0.0364280902,0.0374332927,-0.1246882677,-0.0794241801,0.0287474208,0.0837815553,0.0494583212,0.1064632908,0.0213322546,-0.0853932574,-0.1171839759,0.0351883657,0.018133413,0.055996418,-0.0512598157,0.0296026245,-0.1124914661,0.0365148783,-0.1379715949,0.1631747037,-0.0044953781,0.0005983968,-0.1360858083,0.1301605999,0.1597017199,0.0580241941,0.1621383578,0.0898618922,0.2095227242,-0.0888807178,-0.0477107763,-0.0299476031,-0.0751612708,-0.1602786481,0.0506083556,0.100131698,-0.0456810296,-0.0168386772,0.028988637,-0.1675780416,0.2178948373,0.0062660128,-0.065816395]],"hackathon_name":"Hack Cambridge Recurse","index":336,"project_description":"SciChat pairs members of the general public with academics in a live one-to-one chat sessionThe scientific community grew to communicate research among its peers but outreach to the general public is still sparse. This is mainly due to the complex nature of modern scientific findings which makes them difficult to break down to a simple level. Alongside this, opportunities to have a dialogue with experts is often limited. \nWe think that everyone benefits from the outcome of scientific studies and therefore a quick and simple way of communicating the results needs to be created. Through a live chat, the general public is able to learn about modern research and ask any questions they have. This also helps scientists to communicate current findings in an understandable fashion.SciChat works by connecting members of the public with scientists in the areas they are interested in. By searching keywords, the users are matched with corresponding experts and taken to a live chat where they can discuss the topic of interest in a conversational manner.We developed SciChat as a javascript-based web application without any dependency on a back-end. For our app we needed a database to store our users base as well as a user-authentication system. We used Firebase for that purpose which provides a fully functional API with all backend resources SciChat requires. The chat client module of our app has been implemented using the PeerJS library, which provides a rich API for achieving efficient WebRTC p2p chat communication through a mediator server provided by PeerJS.We\u2019d like to display recommended papers (relevant to the selected area of interest) to the user if they are waiting to be connected to another member, however we had some challenges using the APIs of scientific journals, and so plan to implement this feature in future.Creating a functioning prototype of our idea within the timeframe of 24 hours. Implementing a chat interface that pairs users based on similar interests\/research fields via tags.We can do a lot of stuff in 24 hours!\nThe biologists in the group learned to code in html, javascript and the basic structure of creating a website.To refine the current website, we need to improve upon usability as well as implement numerous extra features we did not have time to integrate.\nIn addition to public-to-academic communication, we hope to add a scientist-to-scientist communication to the platform. Scientists would be able to display a profile including information about their research along with links to publications and professional websites. \nWe would also like to add a reputation system where academics can rate the engagement of the user they chatted with, and vice versa. This will allow for a more sophisticated pairing algorithm in the future. We also hope this will further incentivise the use of the platform.\nThere are several ways in which data generated may be used, such as understanding trending topics and creating user statistics (average rating, number of chats)Hack Cambridge RecurseOmar Wagih\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:17 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SciChat","project_tags":["javascript","firebase","jquery","bootstrap","webrtc"],"project_url":"https:\/\/devpost.com\/software\/scichat","keywords":"chat,user,scientific,scichat,research,public,scientists,communication,users,creating,also,provides,implement,platform,peerjs,modern,live,scientist,like,learned"},{"level_0":337,"hack_vector":[[0.1450634003,-0.0944168791,-0.0308046304,0.0511961766,-0.0207498837,0.1401353478,0.1835508049,-0.028215088,-0.0122879576,-0.03332204,0.0056695882,-0.0749394745,0.1423227638,-0.0643077269,0.0608114339,-0.0074157175,0.1995207071,0.0004363502,0.0432743914,0.1310530454,-0.2386039346,0.0254409295,-0.0357658528,-0.0051991087,0.1148266643,-0.0197827611,-0.0272454266,-0.1664260924,-0.0392444953,-0.097637035,0.0598297827,-0.1123382896,0.033987496,-0.081199646,-0.0132472133,-0.0303165782,0.1196362898,-0.1452942193,-0.0732851923,-0.0092563266,0.0592486709,-0.117572628,-0.1372934282,-0.0324269272,0.0618469417,-0.0550450273,0.0158481039,-0.0766593739,-0.0296632592,-0.2187969238,-0.1586827189,0.0308089368,-0.106343627,0.0014283737,-0.201021418,0.1626076102,-0.1159390286,-0.0280247703,0.0379893556,-0.1060113385,-0.0748112202,0.0191846006,0.0675041676,0.0312034618,0.1085412353,0.0310689565,-0.0999884009,-0.1267082393,0.0173737518,0.024938643,0.0638064891,-0.0417000726,0.0180116519,-0.1239981055,0.0326758511,-0.1031775475,0.1834111065,0.0012244628,-0.0035491146,-0.1410859823,0.1035454869,0.1609956771,0.0527436659,0.159783721,0.1096625328,0.2048734277,-0.0790241286,-0.0445764363,-0.0251693819,-0.0643821061,-0.1408077031,0.0656433329,0.0995048583,-0.0423398465,-0.0073365569,0.0047594188,-0.1648193449,0.2672388852,0.0026441701,-0.0740320459]],"hackathon_name":"Hack Cambridge Recurse","index":337,"project_description":"Dismiss alarms by being expressiveAlarm started ringing, start the challengesSet the AlarmSmile :)We all hate waking up in the morning, so it's no wonder snoozing the alarm happens more often than we'd all like. What's worse is canceling the alarm by mistake then waking up hours later realising you missed some important event because of a badly designed alarm clock application, and your dreadful morning grogginess.The world deserves an alarm clock application that does what it's supposed to do: wake you up no matter what!HapiAlarm puts a twist in how the alarm is dismissed; you have to do it with your face -- and be expressive. The app requires you to do a series of challenges; look into the phone's front camera and show the emotions the alarm clock asks you to -- smile, look surprised, or even show your true morning feelings and make a sad face. Once you've done a number of these, the alarm stops!We created the Android App using Android Studio and the SDK tools to implement the UI and most of the functionality, while for interpreting facial expressions we've sent queries to the Microsoft Cognitive Emotion API.We haven't had much prior experience with Android Development, so figuring out how to do some things (like opening a camera preview, snapping pictures periodically without storing them) took some effort. Another issue we had was that the camera was returning the images rotated by 90 degrees, and while we knew this we had no idea the Microsoft Congitive API doesn't work on images where the faces are rotated, so it took us some time to figure out why our app wasn't working :)Making this app work decently well in under 24 hours!How to work with the Android Development tools.Hack Cambridge RecurseTudor Tiplea\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:13 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hapi Alarm","project_tags":["android-studio","android","java"],"project_url":"https:\/\/devpost.com\/software\/hapi-alarm","keywords":"alarm,challenges,app,camera,android,clock,morning,make,work,development,tools,ringtone,show,pictures,microsoft,face,took,detect,rotated,look"},{"level_0":338,"hack_vector":[[0.1567309648,-0.1228212863,-0.0319459103,0.0553245731,-0.038951356,0.1669579893,0.1824629605,-0.0522198416,0.0052186903,-0.0401291363,-0.0039524594,-0.0227111652,0.1376082599,-0.0729260668,0.0194868874,0.0420109779,0.2505576015,0.0333342552,0.0361808054,0.1003600657,-0.219862178,0.0020311226,-0.0397777185,-0.0298862588,0.1634978652,-0.0183479711,-0.0410264432,-0.1769037396,-0.0007062342,-0.0977197289,0.0433014221,-0.1362375766,0.0643766671,-0.0616601706,-0.0172650702,-0.0163390692,0.1365880966,-0.1311454922,-0.0390362702,0.0327814966,0.0541410185,-0.1326238215,-0.1683124006,-0.0335101299,0.0083166184,-0.0582684167,0.0356451236,-0.0310973171,-0.035165906,-0.2041578889,-0.0972601175,0.0247998573,-0.1007810682,-0.0606613867,-0.1615859419,0.1659205854,-0.1301941127,0.0126739796,0.0105841579,-0.0246727914,-0.0439445674,0.0219732579,0.0595447496,0.0374557674,0.1256979555,-0.0045500509,-0.1266296208,-0.1616914719,0.0416911207,0.0345709249,0.082650952,-0.0381635837,0.0152879208,-0.1444980502,-0.0216898192,-0.0925334617,0.1863270253,0.0220823437,0.0482588448,-0.1390099525,0.102057986,0.1696438044,0.0258049183,0.17469576,0.1295095086,0.1703674197,-0.1216390282,0.0212493595,-0.0173949134,-0.097029388,-0.1025786251,0.0869805068,0.0636785477,-0.0147539433,0.0430205986,-0.0413862392,-0.1177148595,0.2262181789,0.0564313158,-0.0797363147]],"hackathon_name":"Hack Cambridge Recurse","index":338,"project_description":"Speed up eating out: once you enter a restaurant just scan your table's QR code and place your orderMain dishesStart pageStartersEating out should be faster and splitting the bill a lot less painfulLet's you quickly order at participating restaurants and see what your friends are gettingThis prototype was created all with JS\/HTML\/CSS & firebase.Native appHack Cambridge RecurseDora Palfi\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:14 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"I'm hungree","project_tags":["html","css","javascript","firebase","jquery","intellij-idea","github"],"project_url":"https:\/\/devpost.com\/software\/cambridge-restaurants","keywords":"splitting,see,app,bill,built,challenges,created,css,eating,faster,firebase,friends,getting,html,hungree,inspiration,js,learned,less,let"},{"level_0":339,"hack_vector":[[0.143630743,-0.0884487703,-0.0247267336,0.0386691131,-0.0069233608,0.1368559897,0.2089342326,-0.0280388705,-0.0244918,-0.0045017069,0.02304345,-0.086133875,0.1427770406,-0.0677136332,0.0748968497,-0.0032672158,0.2039334923,-0.0064875535,0.0443985425,0.127165854,-0.2394774258,0.0551597029,-0.0439551175,-0.0128714293,0.1033870131,-0.0349301845,-0.0304830913,-0.190488711,-0.0347442701,-0.0769111067,0.0863657817,-0.1202080995,0.0298185851,-0.0966375619,-0.0182770155,-0.0125894137,0.1129428372,-0.1352629364,-0.0609086342,-0.0252052881,0.0337702297,-0.1480028778,-0.1482270807,-0.0256336834,0.0732145235,-0.0357909314,0.0045885458,-0.0884518474,-0.0210952498,-0.2063542604,-0.1468751878,0.0165202264,-0.1055779457,0.0239460524,-0.2030081004,0.1469620764,-0.1285487413,-0.0251176301,0.0420306846,-0.1176991686,-0.0784560218,0.0247342996,0.0900690705,0.0463975184,0.1036973,0.0232947525,-0.0882349685,-0.1215988174,0.035003189,0.0247152764,0.0667744651,-0.0495925844,0.0394556299,-0.1170956194,0.0334416814,-0.1356837898,0.1686832607,-0.0110997325,0.0097440025,-0.1277091354,0.1230973825,0.1492357105,0.0705669224,0.1577917635,0.0879071131,0.1967511475,-0.084522672,-0.0576549247,-0.0157950334,-0.0763132647,-0.1544115096,0.0491956845,0.0898253694,-0.0592807643,-0.009369228,0.0253723934,-0.1562426239,0.2234799713,-0.0024843011,-0.074395217]],"hackathon_name":"Hack Cambridge Recurse","index":339,"project_description":"Procedural social song generation based on your mood; mash with the crowd, feel the music.We live to challenge ourselves to use technologies we have never used before. We came up with a fun and social application that utilised some of these tools.SoundSparrow is a fun and social application designed to let people interact through music. Everyone has a unique tune that is augmented based on your mood! Mash with nearby sparrows to create unique new tunes by mixing the music.SoundSparrow generates a persistent UUID for each phone and uses this to seed a random number generator. In turn, this is used to algorithmically generate a song. We change musical elements based on the emotion of the user; this is done using the Microsoft Cognitive Services emotion module and sending an image taken by the user. We broadcast GAP advertising packets that contain the UUID and emotion of each user; these are picked up by all other devices and the songs are merged and played. Azure was used in order to rapidly host the photos for emotive analysis.Working with Android can be challenging at times, an example can be seen when attempting to implement the Bluetooth algorithm. An advertising packet can only fit 31 bytes of user data, and despite the lightweight mentality taken when considering the design, this created difficulty when deciding what information to send.Working on separate key areas of the project independently and subsequently being able to seamlessly merge the components together. Being able to communicate in both directions in real time between multiple Android devices through Bluetooth.We learned a lot about the mechanics of Android development, and now know common mistakes to avoid in future. Also gained knowledge of development in all aspects of the application using brand new tools; such as Azure and Microsoft APIs.Next would be to take the social aspects to the next level, by sharing user details including social networking sites through the existing communication.\nAdd OpenGL to the visualisation.\nWork of the UX.Hack Cambridge RecurseI implemented the Microsoft Cognitive Services API for handling emotion capture. I also worked implementing the camera in Android and passing the user image to Azure.I worked on the BLE discovery side of the app. My portion will put user data that we use to generate the songs into a GAP advertising packet and retrieve the data of other users. It was challenging as I wasn't 100% comfortable with Android on starting and Bluetooth, especially on Android, has a lot that can go wrong.I worked on the procedural algorithmic tunes generation. Using the midi format i created algorithms allowing to procosess unique user ids into musical tunes. I also worked on the UI for the application.Mayank Gupta\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 06:24 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SoundSparrow","project_tags":["android","android-studio","bluetooth","midi.js","azure","json"],"project_url":"https:\/\/devpost.com\/software\/soundsparrow","keywords":"user,social,application,soundsparrow,next,android,emotion,used,fun,based,bluetooth,able,aspects,microsoft,music,new,devices,development,taken,azure"},{"level_0":340,"hack_vector":[[0.165953964,-0.1350660175,-0.0035687056,0.0864160582,-0.0304353759,0.170307532,0.1903370321,-0.0633390695,-0.0278497469,-0.013251056,0.0072272005,0.0016917866,0.157558322,-0.0865971595,0.0206406675,0.0095374938,0.2314654738,0.0100270892,0.0632622167,0.0863559991,-0.2085107714,0.0212117787,-0.0444678403,-0.0166141614,0.1890621781,-0.0261979979,-0.0498847403,-0.1866063476,-0.0025287813,-0.0707451999,0.0651905388,-0.1113747135,0.0667632222,-0.0701871663,-0.0433134995,-0.0011038765,0.1494005471,-0.1218384057,-0.029437026,0.0378289372,0.0749647617,-0.1433389038,-0.1618048102,-0.0116316397,-0.004550192,-0.0203439072,0.0272388849,-0.044041872,-0.0233651623,-0.1975642592,-0.0917683914,0.0460745469,-0.1218807474,-0.0128356619,-0.1604352742,0.1483944952,-0.1604504138,0.0334803984,-0.0007904653,-0.0104948096,-0.0306612253,0.0316521563,0.0699794069,0.0405763499,0.1410554051,-0.0161276292,-0.1205108613,-0.1469389647,0.0032526762,0.0199693665,0.0640506893,-0.0262385383,0.0137880836,-0.1526444405,-0.0233088024,-0.0716908574,0.2110561579,0.0132992156,0.0469987728,-0.1480664462,0.1186449528,0.1462041438,0.0282492377,0.152354002,0.1428484321,0.187241897,-0.1118061319,0.0258073471,0.0005853622,-0.0918695033,-0.1021533161,0.0987710431,0.0534129068,0.0131407259,0.0547668822,-0.0605106167,-0.0951426774,0.1980059147,0.0695402548,-0.0480135418]],"hackathon_name":"Hack Cambridge Recurse","index":340,"project_description":"Gather round, grab your phone, and race.Chao racerCrowd-controlled unity game through a web app that runs everywhereWe wrote some C#, and some javascript, helped by many many naps and the awesome pusher team.Getting an idea - we only started after dinner.Making it workUnity. C#. Js.Further awesomeness.Hack Cambridge RecurseMatt Burman\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:09 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Crowd Racer","project_tags":["unity","pusher","c#","javascript","web","json"],"project_url":"https:\/\/devpost.com\/software\/crowd-racer","keywords":"unity,many,racer,crowd,wrote,controlled,getting,game,everywhere,dinner,chao,idea,challenges,built,awesomeness,awesome,app,helped,javascript,inspiration"},{"level_0":341,"hack_vector":[[0.1483899504,-0.0982951298,-0.0331208706,0.0339279361,-0.0164694823,0.1313056797,0.1903436035,-0.0231593959,-0.0144606717,-0.0067893872,0.0182833485,-0.0843980387,0.1465423703,-0.0583807863,0.0811234042,-0.0088131847,0.1847204119,-0.0148069225,0.0376741998,0.1278726906,-0.2473129034,0.0303692743,-0.0367632695,-0.0010717009,0.104425326,-0.0291817002,-0.0185998268,-0.1601765454,-0.0281468183,-0.0914784074,0.0688006431,-0.1173718274,0.0180276204,-0.0786096454,-0.0128482087,-0.0264050849,0.1067204252,-0.1501368731,-0.0734610111,-0.0271678194,0.0432494171,-0.1245038956,-0.1338718683,-0.0269927196,0.077036649,-0.0439720079,0.0036731665,-0.0844285935,-0.0150882667,-0.2063693553,-0.1639020741,0.0101943249,-0.1103718802,0.018776875,-0.2188421637,0.161921069,-0.1161554381,-0.0373844169,0.047622636,-0.1226604059,-0.0834070072,0.0160115659,0.0795587748,0.04262973,0.0963605642,0.0358713157,-0.0879732817,-0.1176374853,0.0271202829,0.0269921757,0.0709754974,-0.0447957516,0.0299311522,-0.1126090065,0.0386453867,-0.1315566152,0.1693688631,-0.0026484947,-0.0164927598,-0.1244286448,0.1151281074,0.156286031,0.0551709011,0.1632157713,0.0957078487,0.2036730349,-0.0830054954,-0.0575226359,-0.0239287131,-0.0646475703,-0.1519590169,0.0516101308,0.1104316935,-0.0570746325,-0.0145297796,0.0241576787,-0.1656345278,0.252240181,-0.0057004308,-0.0746187195]],"hackathon_name":"Hack Cambridge Recurse","index":341,"project_description":"With machine learning and analytics, we bring the possibilities of automated personalised studying to every student.ArchitectureSync an accountLogin with GoogleProgress RatingSample ConversationInitial ScreenHow the icon fits into a menuChemistry, Mathematics, QUANTUM physics, Biology... the list goes on, recursing into countless topics more... We've got less than an ARM's length of time to our exams, yet we're flooded by the need to keep thinking about what to focus on, and how we would absorb the knowledge into our heads -- how do we push the FRONTIER of our knowledge and what should we study first?But yet, why do we have to be the ones wasting our jet brains on making these decisions?We believe that the tediousness of planning and prioritising what to study, when to study and how study is unnecessary and often messy. We should be spending our time on the things that matter - learning with greater depth or spending quality time with our friends.Improvable is a platform which takes care of this for you - it learns about you as you learn about the world. It provides you with practice questions for your exams and knows what you are good at and bad at, adapting to your abilities and reinforcing the concepts you have freshly learnt through personalised notifications.But what good is that in a boring interface? Improvable is more than a platform - it's a lively and lovely chat bot and personalised learning buddy. It tells jokes, keeps track of your learning and accelerates your learning just for you!Within each session, users will be available to review their performances by sharing, rating and comparing their statistics against the past, or their friends. Scoring is based on each session and provides a dynamic, interactive and accurate metric for fast and motivating feedback.Distilling the ethos of every inspiring teacher-pupil relationship was at the heart of Improvable. From then, we've tessellated, out, creating complex ORIGAMI folds, adding humour and personality to solid facts whilst keeping the interface fresh, crisp and as sharp as an ARGON bulb. Each of the four stages has been carefully crafted before being PUSHed to fulfil the gestalt of what learning can be. Using a powerful MICROSOFT azure server, Improvable was designed to be fast and responsive, giving the student full responsibility and MANpower over the STUDIO of study.We changed our ideas midway after realising that creating a learning buddy would be much more interactive and intuitive than our initial straight-laced platform, and had to quickly adjust our mindset and code. What better way would there be than for the student to forge their own path of discovery of learning?We wanted to allow the writer free reign over the product, with natural language of their own - this proved to be a challenge that needed pure PUSHERS to overcome in pure javascript.Our learning buddy has spread joy and knowledge to the people around us. We've relished the opportunity to imbue each of our own contrasting personalities into Improvable, ensuring that there's something for everybody.Our first bot built for most of us, and definitely lots more about DirectLine and the Microsoft Azure APIs for bots and AI. Was an accelerated 24 hours of learning for all of us! Seeing, interacting and constantly developing the bot was a rewarding experience for all, and hopefully the first of many similar ones to come.Getting it out to students, teachers and users everywhere! \nWe understand that not every student can afford to have personalised feedback from teachers and private tutors all the time - why not make such a service accessible to all students just through a click of a button?Hack Cambridge RecurseI designed the architecture of the service and created the structure and communication of the back-end, passing queries into the bot and outputting the result. Semantic intent was achieved using NLP, which was optimised for speed.I made a bot that teaches Math and Physics!I worked on creating the algorithm for adaptive content and a back-end scoring system using a probabilistic model. Also on integration of the bot into the android app using the Direct Line API.I worked on the Front End of the Android app, integrating Google Sign-In and Profiles, creating a messaging facility and getting started on the data visualisation. I helped to overcome the concurrency issues and problems with integrating the Direct Line API - that was tricky!dyth\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 04:36 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Improvable","project_tags":["javascript","azure","android","java","natural-language-processing"],"project_url":"https:\/\/devpost.com\/software\/improvable","keywords":"learning,improvable,study,time,personalised,buddy,first,us,bot,student,would,platform,knowledge,friends,good,spending,built,session,microsoft,exams"},{"level_0":342,"hack_vector":[[0.1617997587,-0.1180604026,-0.0323679708,0.059771806,-0.034383364,0.1619272083,0.1958726346,-0.0419199876,-0.0188936554,-0.0072731283,-0.0010707747,-0.0311477222,0.1317078769,-0.0902659744,0.0373974703,0.0400001667,0.238463819,0.0260462351,0.045853477,0.0960637629,-0.2187369466,0.0168495066,-0.0461658128,-0.0512297153,0.1390659064,-0.014231205,-0.0506553724,-0.1985312551,-0.006071981,-0.0793309584,0.0413405895,-0.1276088357,0.0662090331,-0.0993956551,-0.0381791629,0.0023021889,0.1309053153,-0.1348667145,-0.0400634706,0.0535360388,0.0535283312,-0.1441882253,-0.1818103343,-0.0251624417,0.0249753203,-0.0455054753,0.0328678451,-0.0515556857,-0.039809294,-0.2099180818,-0.1142391413,0.024147816,-0.105935514,-0.046749983,-0.1440988332,0.1726124436,-0.1304116696,0.02949249,0.0067323837,-0.0242165141,-0.0473800637,0.014551254,0.0716132,0.0635993183,0.1359310448,-0.0241101962,-0.1236725897,-0.1336307228,0.0328922234,0.0125266919,0.0811854601,-0.0444687307,-0.0128281377,-0.1486433446,-0.0078820847,-0.09536805,0.1975383759,0.0294428449,0.0416420996,-0.1402898133,0.1367323399,0.1646950841,0.0566657297,0.1553656161,0.1185268685,0.1898580343,-0.0917946026,0.0190476961,0.0286004022,-0.0883355811,-0.1180466712,0.067545183,0.0662712902,-0.006149889,0.0385673977,-0.0506791472,-0.1072988585,0.1913565695,0.0506038405,-0.066932261]],"hackathon_name":"Hack Cambridge Recurse","index":342,"project_description":"Slack while scanning for flights!Finding flights for larger groups is often hard. Let's make it simple!Searching flights given departing, arrival city and dates.Flask back-end with Pusher's Feeds API.Skyscanner API's response is not the cleanest. Feeds API has little documentation.How to structure projects on my own.Hack Cambridge Recursejermenkoo\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 06:58 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Slackscanner","project_tags":["python","html"],"project_url":"https:\/\/devpost.com\/software\/slackscanner","keywords":"api,flights,feeds,structure,departing,flask,finding,end,documentation,dates,groups,cleanest,city,challenges,built,back,arrival,given,hard,slackscanner"},{"level_0":343,"hack_vector":[[0.1306777149,-0.1290286034,-0.0062229182,0.0754231066,-0.0281936564,0.1671801209,0.1862818897,-0.0372948311,-0.0245208833,-0.0403545424,-0.0027053191,-0.0210000612,0.1271046847,-0.0856975242,0.0050061387,0.0655229911,0.2617113292,0.024379598,0.0554984435,0.103593044,-0.2192848325,0.0285193287,-0.0332145914,-0.0570602641,0.1331540644,-0.0249791816,-0.0748004392,-0.1878201813,0.0108966501,-0.0793905109,0.0460810103,-0.111802645,0.0559395254,-0.0577515848,-0.0233880654,0.0020990006,0.1394665688,-0.1277249902,-0.0086646397,0.0521916449,0.0605436042,-0.1652962714,-0.1913276315,-0.0404284373,0.0154741155,-0.0407807119,0.0274528787,-0.0289032795,-0.030537609,-0.2151277363,-0.0753572062,0.0465119779,-0.0943032354,-0.0428951122,-0.1627352536,0.147525683,-0.1398952454,0.0148133533,0.0184989776,-0.0200459622,-0.0427934043,0.0289297681,0.0677778348,0.0626781806,0.1402462572,-0.0089847809,-0.107429564,-0.164962098,0.0370953307,0.0202071834,0.0798453838,-0.0508943386,0.013676296,-0.1401384622,-0.0412785597,-0.0912509039,0.1719893366,0.0214940812,0.0551068485,-0.1444815248,0.1272534728,0.1648346335,0.0177862588,0.1730197519,0.1194343045,0.1908164322,-0.1273751557,0.0105360094,-0.01052202,-0.1063971668,-0.115388453,0.0768892765,0.0423308574,-0.0154688796,0.0440616608,-0.0354076214,-0.107751444,0.1900852472,0.0617521591,-0.0599857531]],"hackathon_name":"Hack Cambridge Recurse","index":343,"project_description":"A web app that allows users to have a live feed of what's going on in their cityA simple hack completed in the early hours of Hack Cambridge 2017. The skeleton of a web app that allows users to have a live feed of what's going on in their cityHack Cambridge RecurseJonathan Williams\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 06:56 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"What's the Latest?","project_tags":["html","javascript"],"project_url":"https:\/\/devpost.com\/software\/hc2017","keywords":"hack,cambridge,web,users,skeleton,simple,live,hours,going,feed,early,completed,city,app,allows"},{"level_0":344,"hack_vector":[[0.1568029225,-0.1455162317,0.0008659854,0.088118121,-0.0392629318,0.168350786,0.1879160404,-0.0507461131,-0.0365223028,-0.013786111,0.0061684549,0.006670496,0.1409859806,-0.0659924522,0.0239826664,0.0402164385,0.2415242344,0.0222096834,0.0492592268,0.1000652164,-0.21887137,0.01298129,-0.0452075116,-0.0268482156,0.1797193885,-0.0235484652,-0.0609966554,-0.1905135363,0.0049691843,-0.0761751533,0.0613889135,-0.1114201248,0.053045094,-0.055847127,-0.0358973593,-0.0068463259,0.1361976713,-0.1163098589,-0.0155776087,0.0514824353,0.0645875037,-0.1570876092,-0.1644215435,-0.0394987129,-0.0096664354,-0.0360241942,0.0238676537,-0.0172891766,-0.0229430422,-0.1993406862,-0.0581390187,0.0313210189,-0.1111179143,-0.019642815,-0.1551722735,0.1533115357,-0.1573348939,0.0416875444,-0.0008667833,-0.0050642388,-0.0319295861,0.0284565669,0.051606223,0.0514780208,0.1359208226,-0.018460108,-0.1241129637,-0.1628284752,0.0185758248,0.0135618672,0.0617781579,-0.0315292478,0.0137114311,-0.1373518407,-0.0456167385,-0.0782367438,0.1929849684,0.0111732865,0.0632473081,-0.1411789358,0.1094079539,0.1563842446,0.0200951919,0.1589772552,0.1504477561,0.192843318,-0.1384160966,0.0289292317,-0.011234846,-0.100140363,-0.1032855064,0.1071875244,0.0511179939,0.0015682831,0.0512702167,-0.0561958849,-0.092496641,0.1977793574,0.0792827606,-0.0438353084]],"hackathon_name":"Hack Cambridge Recurse","index":344,"project_description":"Short puzzle game with a side of misteryMC Escher Principles of IllusionLets you explore an immersive worldUsing Blender for 3D modelling and Unity to create the mechanicsMaking our camera shift its perspectiveFinished all the functionalities we plannedNew VR techniques and practicesUpdate it with more levelsHack Cambridge RecurseCosmin Nicolae Bresug\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 06:41 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"The Tower of Babel","project_tags":["unity","blender","c#"],"project_url":"https:\/\/devpost.com\/software\/the-tower-of-babel","keywords":null},{"level_0":345,"hack_vector":[[0.16727072,-0.1186987311,-0.0132086203,0.0760757923,-0.0162387248,0.1677137315,0.2132182717,-0.05954355,-0.0350898542,0.0139923664,0.0070685195,-0.0332146995,0.1447615027,-0.0807315707,0.0420733579,0.0085212216,0.217610985,-0.0043032155,0.0574555434,0.0923634395,-0.2149950266,0.04812558,-0.0517102405,-0.0143668558,0.1741992533,-0.0298711061,-0.0442323573,-0.2061972767,-0.018972002,-0.0415329635,0.0806046575,-0.1306889206,0.0665288419,-0.0856714994,-0.0598627254,0.0152648445,0.1357379854,-0.1171973422,-0.0329825804,0.0319299586,0.0441463813,-0.161091581,-0.1594480425,-0.0181915127,0.0156531949,-0.0251554996,0.0144983642,-0.0581745803,-0.0203624386,-0.2004590482,-0.1022639126,0.0217596572,-0.1250238568,0.0156827271,-0.1487559527,0.1345887035,-0.1695142239,0.0341486298,-0.0014957011,-0.0386057757,-0.0526686087,0.0341033861,0.0736722127,0.0519477613,0.1280772388,-0.019567091,-0.1160636619,-0.1346640885,0.0183530543,0.015480537,0.0723914132,-0.0457521155,0.0289701782,-0.1455444843,-0.0015277911,-0.0972746164,0.2070925087,0.0014321988,0.0563097484,-0.1402101815,0.1347877234,0.1409318149,0.0606581643,0.1510864794,0.1200106889,0.1826983094,-0.1093056053,0.0115062576,0.0153144477,-0.1006373316,-0.1296705753,0.0743735433,0.0640423,-0.0143685061,0.0535350591,-0.0409910269,-0.0976355001,0.1876980364,0.065878287,-0.054977674]],"hackathon_name":"Hack Cambridge Recurse","index":345,"project_description":"Project for HackCambridge 2017 - GUI for models in TensorflowLogoMultilayer Perceptron ExampleConvolution NN Exampleby Dao Zhou, Minxuan Xie, Renqiao Zhang, Qiuying LaiHelping beginners and students to understand the structure of Tensorflow better by providing a GUI where standard neural net models written in Tensorflow (Python) can be generated.This uses MNIST Data as an example. debug*.py shows how the models can be trained and used.Dependencies:\ntensorflow, jinja2, flask, opencvExamples:Further Instructions:Hack Cambridge RecurseI worked on the backend. I set up the python server using Flask and produce the tensorflow model python file using template engine with parameters received from frontend.Qiuying Lai\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 05:42 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"EasyTensor","project_tags":["javascript","python","html"],"project_url":"https:\/\/devpost.com\/software\/easytensor","keywords":"model,models,tensorflow,py,output,use,debug,server,gui,generate,predict,python,file,directory,tensorboard,launch,cnn,dir,digit,lai"},{"level_0":346,"hack_vector":[[0.1512235403,-0.1103528216,-0.0323128067,0.04126136,-0.0130023696,0.1358434558,0.1925964355,-0.0246937107,-0.026315406,-0.0093099708,0.0057392395,-0.0803292692,0.1375703365,-0.0736780688,0.066555649,0.0080226138,0.2077394426,-0.0113984095,0.0469106883,0.120577693,-0.2455078512,0.0322182514,-0.0467036366,-0.0099293925,0.1160535291,-0.0408779271,-0.0332157537,-0.1809598655,-0.0359235033,-0.0866715536,0.0726870298,-0.1095995679,0.041546654,-0.092507042,-0.0372841097,-0.0172224604,0.1130572408,-0.1415983886,-0.0505531691,-0.0043002795,0.0439843535,-0.1222502962,-0.1523585767,-0.0209400002,0.071126394,-0.0540430099,0.0206731092,-0.076823011,-0.0209482927,-0.2218153477,-0.1463085413,0.0119074918,-0.110625796,0.0115729822,-0.1921399981,0.1514509618,-0.1337656379,-0.0193863045,0.0330897048,-0.0903855264,-0.0717676356,0.0250675566,0.0718082041,0.0400929004,0.1084808707,0.0074993302,-0.1009305269,-0.1247361153,0.0175858885,0.0158993918,0.0707339868,-0.049308978,0.0147902658,-0.1297771335,0.021053778,-0.1181677133,0.1897401661,0.0007723963,0.0168325733,-0.136884138,0.1249404103,0.1529038399,0.0501972958,0.1659127772,0.1066625044,0.2036586702,-0.0841493309,-0.0237455163,-0.0186021347,-0.0803383067,-0.1438876092,0.0630853176,0.0894856751,-0.0417741239,-0.0066203224,-0.0028099392,-0.1484080404,0.2325276136,0.0245189592,-0.0760200918]],"hackathon_name":"Hack Cambridge Recurse","index":346,"project_description":"Natural Language Teaching Assistant, that provides teaching materials after a short coversation with the userThe ideea came from Diner, who worked with learnig materials platforms before.The webapp will have a short discussion with the user, who can state if he wants to learn about a certain programming language, or if he wans examples, or it can ask for a coding challange.The JavaScript front-end calls the LUIS API in order to process the natural language. After that it intercepts the resulted JSON file and it parses it and makes the relevant calls to the C# controller.The novelty of the API made it quite a challange to harness all it's power.\nThe server handles often resulted in bad gateways.\nRecognising short answers out of context (i.e. ~What difficulty level would you be interested in? ~Intermediate.)\nAnd many many more.The robust controller and database model.\nUser Interface.\nHigh LUIS comprehension.How to use bots.\nHow to integrate multiple APIs.\nHow to solve unsolvable issues.\nHow to tackle challanges as a team.Sensei is shooting for the stars.\nIt will become even more wise, once he learns about the infinite power of the internet.Hack Cambridge RecurseTrained the LUIS api and made sure it was integrated correctly. Gathered curriculum materials.I have handled the back-end part of the application.I built the frontend of the application in React.jsBogdan Muresan\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 06:31 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Code Sensei","project_tags":["c#","javascript","sql"],"project_url":"https:\/\/devpost.com\/software\/code-sensei","keywords":"short,controller,resulted,challange,luis,calls,many,sensei,user,language,api,power,file,gateways,examples,handles,harness,front,would,high"},{"level_0":347,"hack_vector":[[0.1411345452,-0.1194944531,-0.02853778,0.0533384345,-0.0320268385,0.1268549711,0.1896750629,-0.0179151874,-0.0295091514,0.0051590279,0.0048694513,-0.0490772873,0.1411005259,-0.0676348805,0.0638612807,0.0140482793,0.2067686319,0.0119346296,0.0494103618,0.1023395583,-0.2417681962,0.0330253169,-0.0413707644,-0.0210404992,0.1161767393,-0.0215255674,-0.0419668667,-0.1843004823,-0.0064590336,-0.077982612,0.05683925,-0.1369422227,0.0227588043,-0.0754259899,-0.0244318843,-0.003589059,0.1071777344,-0.1474792659,-0.0674359202,0.0198153239,0.0205264166,-0.1599708945,-0.1562082469,-0.040641401,0.0315770991,-0.0644364357,0.0064452784,-0.0632969886,-0.0169121809,-0.1923934519,-0.1251407564,-0.0005216493,-0.1076098084,-0.0089647314,-0.1881618053,0.1540627331,-0.1413586736,-0.0022203506,0.0292052869,-0.0765955895,-0.0738712475,0.0341072902,0.0648620725,0.077605404,0.1073962301,0.0115969498,-0.1111776605,-0.1298426688,0.0384705029,0.0025081616,0.0715868697,-0.0685674921,0.0277745277,-0.1167380959,0.0216711126,-0.1405153275,0.1780124903,0.0046381787,0.0419239663,-0.1430684477,0.1393744498,0.1649230421,0.0664585903,0.1688806415,0.1088012159,0.2013591528,-0.1209403872,-0.0125894789,-0.0058787707,-0.0948053747,-0.1231271699,0.0628465042,0.0909804553,-0.0453018174,0.0275932401,-0.0130856102,-0.163512215,0.2176242769,0.0317602605,-0.0760236233]],"hackathon_name":"Hack Cambridge Recurse","index":347,"project_description":"Extraction of real-time UK energy data made simplewe convert this...via command line tools (to be abstracted in the future)into a really simple CSV data formatBMReports hosts a large repository of real-time and historical UK power data. This includes information about the usage of wind, solar, coal, hydro currently being used by the UK, how much power is France sending to the UK or vice-versa via interconnectors etc. This information can be used by economists, energy researchers and policy makers to determine consumer behaviour via energy usage, and is used as backing for public policy decisions.However, this data is held in a convoluted format, requiring users to go through over 200 pages of documentation to get the necessary real-time or historical energy data. We have came together and developed a really simple tool that effectively exports the energy data you need in the CSV data format. This allows anyone, including amateur researchers and budding economist to get quick and easy access to the data you really need.RTEnergy stands for Real Time UK Energy Data ToolHack Cambridge RecurseJian Wong\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 05:17 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"RTEnergy","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/real-time-uk-energy-data","keywords":"data,energy,uk,used,real,time,researchers,need,policy,power,format,really,information,get,historical,tool,usage,via,decisions,easy"},{"level_0":348,"hack_vector":[[0.1407135725,-0.0808609352,-0.0248054378,0.032505583,-0.0060832622,0.1236023456,0.1982098818,-0.0125158587,-0.0395026505,0.0074803736,0.0208081529,-0.0982871279,0.1403934658,-0.0656891242,0.0826313719,0.0021632565,0.1970805079,-0.0123523325,0.0347557776,0.1320257932,-0.2401322424,0.0424442776,-0.0468348339,-0.008899712,0.103787303,-0.0298873205,-0.0311540253,-0.1862439811,-0.0324743986,-0.0820987597,0.0805858448,-0.1114106551,0.0223320238,-0.1027861908,-0.0158207025,-0.0094540874,0.1049982011,-0.139519453,-0.0588887185,-0.0233734176,0.0339859277,-0.137584269,-0.1548325717,-0.0201260485,0.0838558823,-0.038666904,0.0039069396,-0.0934330747,-0.011377465,-0.2140769064,-0.1456419975,0.0099414811,-0.1051376984,0.0223520286,-0.2034566551,0.1641570777,-0.1274386793,-0.0195696466,0.0457745641,-0.1237842664,-0.0767575428,0.0272154827,0.0842988193,0.0551626012,0.1091822758,0.0177317727,-0.0896428525,-0.1220531389,0.0318368524,0.0115948301,0.0728153214,-0.0423090383,0.0233611632,-0.1129370034,0.0377362743,-0.1322160214,0.1707064956,-0.0122789415,0.0077889399,-0.1222545356,0.1250704229,0.150394097,0.0767585486,0.150915131,0.0876557007,0.2020002753,-0.0806699395,-0.0590527207,-0.0176492482,-0.0722169578,-0.1595869809,0.0453589298,0.0976242647,-0.0571355075,-0.01602122,0.0319973044,-0.160905838,0.2271193713,-0.0001088985,-0.0755992457]],"hackathon_name":"Hack Cambridge Recurse","index":348,"project_description":"Audience Analyzer offers a clear perspective on how your speech was perceived by those who listened to you.We conceived our small application by taking into consideration the desire of many people to develop their public speaking abilities and their need to gain an insight into how diverse audiences perceive them.The application prompts the user to upload a number of images from his own computer and using the Microsoft Cognitive Services, it provides a coefficient between 0 and 1 according to the intensity of the emotions displayed by people in pictures. It can offer the most valuable insight if the images all include the same audience at different moments in a presentation.Using the online resources published by Microsoft (e.g. documentation and references of the Emotion API) and Visual Studio, we build a simple Windows Form Application, consisting of two forms, one of which contains the form for uploading images, while the other one displays the results.One of the biggest challenges we encountered was making the different pieces of the application fall into place. While one of us tried to build the UI, someone else explored how to make use of the Emotion API and the other one worked on converting the resulting JSON into a useful format for further processing.Taking into account our inexperience and the amount of time we spent researching online the abilities of the tools we planned to use, getting the application to work without crashing might be regarded as an accomplishment itself. Also, we would say that we worked quite well as a team, learned new things and enjoyed ourselves.We now know how to make use of the Cognitive Services API, how to convert the JSON into the wanted form and how to integrate these pieces into an Windows Forms Application.We will definitely try to enhance the user interface and offer a more in-depth analysis of the results given by the Emotion API and we are considering offering advice to our users as to how to hone their public speaking skills.Hack Cambridge RecurseI worked on the backend, by creating the connection with Microsoft Cognitive Services. Also, I worked on merging the backend structure with the user interface.Marilena Bescuca\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 04:27 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Audience Analyzer","project_tags":["c#","visual-studio"],"project_url":"https:\/\/devpost.com\/software\/audience-analyzer","keywords":"application,one,api,images,emotion,use,form,abilities,taking,challenges,pieces,cognitive,insight,build,speaking,offer,online,services,people,forms"},{"level_0":349,"hack_vector":[[0.1307027042,-0.0894753784,-0.026193494,0.0348598585,-0.0180398673,0.1207930893,0.1979248524,-0.0190502405,-0.0243503861,-0.015106855,0.0150374956,-0.0836164951,0.1434739679,-0.0654093847,0.064973183,0.0107888635,0.2111421227,-0.0040230691,0.0390360393,0.1388108432,-0.2398981303,0.0375144146,-0.041376628,-0.0115457037,0.1039531678,-0.0185742844,-0.0320648029,-0.1751021147,-0.0193219613,-0.0978672132,0.0638069585,-0.1164958999,0.0317865983,-0.0842312351,-0.0059902458,-0.0249753818,0.113418974,-0.1429588497,-0.0628780723,-0.0160309877,0.0355905704,-0.135918662,-0.1466198266,-0.0407174863,0.0661545694,-0.0603205673,0.0073407069,-0.0831403732,-0.0141345505,-0.2080448568,-0.1463607401,0.0133598661,-0.103267312,0.0035544236,-0.2030441165,0.1675426364,-0.1287120134,-0.0272250921,0.0412222408,-0.1177858934,-0.0721910596,0.0242826436,0.0822081119,0.0544620901,0.1032894403,0.0245640073,-0.094994992,-0.1299626231,0.0388024822,0.0225957409,0.0679823384,-0.0514007732,0.0220619943,-0.1108991206,0.0316894278,-0.1336278617,0.1669799089,-0.0060867742,0.0124141928,-0.1324003488,0.1148350462,0.1545089781,0.0665449649,0.160263896,0.1009939164,0.1934280992,-0.0994893387,-0.0525576584,-0.0297428817,-0.0785186663,-0.1484915763,0.0494312197,0.105851002,-0.0511864014,-0.008826538,0.0199157465,-0.1734912992,0.231202051,0.007371366,-0.0803668499]],"hackathon_name":"Hack Cambridge Recurse","index":349,"project_description":"Use our app to automatically read out the water quality values from a Litmus testsource: Wikipediawhat the app sees, handwriting just for comparison, not used by the appextracting only the relevant bits and ph valueextracting only the relevant bits and ph valueextracting only the relevant bits and ph valueextracting only the relevant bits and ph valueBeing able to check how clean your water is, is crucial for many people - especially people in developing countries that often lack access to clean water sources. However, test sticks covered with chemicals that change color  depending on the properties of the water (like the famous Litmus test for the ph-value) are very cheap to produce and easy to use. However, reading out the correct values can be a bit tricky and since many people actually own smartphones anyway we wanted to come up with a way to combine the two.Our App automates the process of reading out the values from the color coding of a mock up test stick. Just focus with your camera and the app will tell you the ph-value associated with the sample you provided.We used OpenCv in C++ for the technical part of the app. First we normalize the input image (similar to what happens when you scan QR codes). This means that even slightly tilted or rotated input works fine with the algorithm (most of the time :P). As the next step we extract the color values from the normalized image by averaging over certain areas.We have stored a table containing color codes for various chemicals and ph values, so that then we are able to perform a simple optimization in order to find the ph value that matches the theoretical data best.The app itself is written in a mix of Swift 3 (for the interface) and ObjectiveC (to communicate with our C++ code).Neither of us had experience in mobile development, so getting to grips with Swift and ObjectiveC was a struggle.\nDoing a whitebalance like color correction for bad lighting was also harder than expected.Writing our first app and being able to do realtime image processing of a video feed on mobile device.Basics of image processing with OpenCV and mobile app development.We'd like to improve the accuracy for the normalization of the image, both the perspective and the color.Hack Cambridge RecurseBenjamin Cabrera\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:42 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"WhatTheColor","project_tags":["opencv","c++","swift","ios"],"project_url":"https:\/\/devpost.com\/software\/whatthecolor","keywords":"app,color,image,values,ph,test,people,value,able,mobile,water,like,objectivec,next,chemicals,opencv,development,first,processing,reading"},{"level_0":350,"hack_vector":[[0.1368713677,-0.1090994328,-0.0131436326,0.065380834,-0.0394567735,0.1642129421,0.1851140708,-0.0527443923,0.0016040865,-0.0506946892,0.0206192266,-0.0198367331,0.127422139,-0.0672878772,0.0317169763,0.0150427977,0.2522683442,0.0313562043,0.050497964,0.1169087291,-0.2245975584,0.0120171104,-0.0464965552,-0.0324520022,0.1224302948,-0.0085248128,-0.0416188948,-0.1851046085,-0.0184124038,-0.1015828326,0.041265931,-0.1189638451,0.0500312522,-0.0811158046,-0.0107441256,-0.025821751,0.1313964576,-0.1334630102,-0.0520328581,0.0302641355,0.0457908139,-0.1301517189,-0.1600819081,-0.0503298044,0.0194324981,-0.0728463754,0.0243557058,-0.0339574143,-0.0490462184,-0.2172839493,-0.10597945,0.023207942,-0.0984726325,-0.0518600643,-0.1671049744,0.1566729546,-0.127596572,-0.0003970366,0.0276648719,-0.0556536503,-0.0429057181,0.0162452701,0.0801258162,0.037916027,0.1140510589,0.0051199938,-0.1278931201,-0.1469793618,0.0305589642,0.0340244062,0.0637100786,-0.0416482165,0.0181586966,-0.1398354173,-0.0239235703,-0.1039909944,0.1922653913,0.0195369013,0.0385760069,-0.1573273689,0.1066045091,0.1617717594,0.0342761837,0.1741560698,0.121237658,0.1863237619,-0.1234707907,-0.0240942333,-0.0287958998,-0.0898668244,-0.131999433,0.0747844726,0.0799184069,-0.0209046248,0.0246001892,-0.0394675769,-0.1252756268,0.2229328603,0.0389109179,-0.0797881261]],"hackathon_name":"Hack Cambridge Recurse","index":350,"project_description":"Give your snail mail wingsRegister a deviceName your deviceMail status!A desire to instantly feel the reassurance of having mail waiting for you (especially if it arrives far away - which isn't uncommon in Cambridge colleges)An email notification, whenever you have mail in your pigeonholeSome embedded hardware running Lua, talking to an online service with which you have an account.Connecting hardware to the internet.It works!Various hardware platforms and how they integrate with external devices.Slick hardware, push notification on mobileHack Cambridge RecurseJoshua Send\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:32 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"PidgePing","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/pidgeping","keywords":"hardware,mail,notification,works,integrate,inspiration,get,feel,far,external,especially,embedded,email,devices,desire,connecting,colleges,challenges,cambridge,built"},{"level_0":351,"hack_vector":[[0.1492518038,-0.0906441212,-0.024446303,0.0479328334,-0.0139903035,0.1180415228,0.207073912,-0.0257194415,-0.0298755262,-0.0141898422,0.0170123093,-0.0640647858,0.1477621794,-0.0661676824,0.0646786168,-0.0266897883,0.1800779551,-0.0235896669,0.0519819111,0.1415412128,-0.2472854406,0.0288191456,-0.0422808826,0.0078695584,0.1183092147,-0.0276619177,-0.0267885253,-0.162504673,-0.0311648156,-0.0974468589,0.064610146,-0.1132302135,0.0239508636,-0.0735970289,-0.0047152606,-0.0214084499,0.1192917675,-0.1449008733,-0.074932009,-0.0095666647,0.0650225207,-0.1278900802,-0.1278833598,-0.0326923095,0.0617342517,-0.0536382012,0.0075093713,-0.1041083187,-0.0210092571,-0.2003335506,-0.1580039412,0.0213193037,-0.1190090701,0.0322716869,-0.219282344,0.1593540162,-0.1453347951,-0.0342657417,0.0349807404,-0.1254330575,-0.0730854794,0.0273186155,0.0734596774,0.0353571549,0.1140131131,0.030253185,-0.0995535702,-0.1123227179,0.0130210351,0.0227071382,0.0509950556,-0.0433050506,0.0165741872,-0.1156485081,0.0508072861,-0.1145977527,0.1786854416,-0.0084328465,-0.0112355333,-0.1373236626,0.1065766811,0.1443784684,0.0588317811,0.1420505345,0.1065048054,0.2108475268,-0.0837286264,-0.0509493276,-0.0234844573,-0.0615379587,-0.1448652148,0.0615259558,0.1054277048,-0.035282366,-0.0204212796,0.0146754198,-0.1720467061,0.237774983,0.0021473069,-0.0484118871]],"hackathon_name":"Hack Cambridge Recurse","index":351,"project_description":"Virtual IDE with LeapMotion integration.Last year we used a device called myo to allow users to play space invaders and pong by using hand gestures as the 'controllers'. This year, we carried on the theme of exploring how human interaction with computers will change in the future.Its a 3 - dimensional IDE which incorporates mouseless interaction.We used an Oculus Rift and a Leap Motion device.We did everything in java. We used the JOGL library to communicate directly to an Oculus Rift. We also, used the jovr library to translate java into OpenGL. Thankfully the interaction between the leap motion device was also done in java.A LOT of challenges were overcome. First, the Oculus Rift demands a lot of graphical processing power. Out of three laptops we could only run it on a mac. Oculus has dropped all support for mac users which meant we could only run the Oculus on very old drivers. Hence, documentation was rather hard to come by. In addition to this, since we were running older drivers we could not take advantage of easier VR techniques such as WebVr. Hence, we were forced to use JOGL bindings to write directly to the oculus rift display and JOVR to read the IMU data from Oculus.  Thus, we have completed a vr project in java!I think the most important thing is - we did it ! We've had this idea for a very long time and we ran into so many problems. At certain points it looked as if the idea was achievable and we would be left with partial bits of code . However, we never ever gave up and tried absolutely everything. To incorporate the leap motion as well, is an added bonus since it enhances the unique property of our project.Vr requires a lot of processing power  and where there's a will there's a way ! Seriously, having to use the Oculus where there is no support and being forced to use technology we weren't used to was an absolute pain! But we regret nothing because we achieved an amazing product in the end.V-de is a working concept that has the potential to redefine the relationship between humans and computers. So far it's and IDE for developers. Imagine if you could see the effects of your code whilst you are coding. All achievable in the Oculus. This would help greatly with designers - no more having to complie and refresh.Hack Cambridge RecurseNathan Ling\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:40 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"V-De","project_tags":["oculus","leap-motion","java"],"project_url":"https:\/\/devpost.com\/software\/v-de","keywords":"oculus,used,java,rift,could,leap,motion,vr,interaction,device,use,lot,library,jogl,year,power,processing,project,mac,forced"},{"level_0":352,"hack_vector":[[0.1555758566,-0.1037703827,-0.0270163435,0.0312559046,-0.007600781,0.1203179359,0.213566035,-0.0184228085,-0.0326235965,0.0104784742,0.0042358171,-0.08043769,0.1419723183,-0.0818617567,0.0768634677,-0.0004163488,0.1877703369,-0.0196398087,0.0409862474,0.1283602715,-0.2452942729,0.0420276821,-0.0502724014,-0.0112329125,0.1314126253,-0.0277380459,-0.0277736634,-0.1737577766,-0.0200104918,-0.077522397,0.0609105453,-0.1283412576,0.0331302136,-0.0942643359,-0.0287559293,-0.0136401746,0.110197857,-0.1503639966,-0.0668500587,-0.0198891349,0.0403565466,-0.1420998871,-0.1464054883,-0.0157820992,0.0697598234,-0.0351762474,0.0072502857,-0.1002879515,-0.0133634778,-0.197769016,-0.1487497836,0.0176006034,-0.1169497743,0.032256905,-0.1909537613,0.1645436734,-0.1384054124,-0.0134248612,0.0152562307,-0.1093444154,-0.0717850626,0.0330152474,0.0841275305,0.0528111383,0.1140752211,0.0101767331,-0.1040120274,-0.119740285,0.0295667816,0.0256943572,0.0753505751,-0.0462980457,0.0236935876,-0.1256307214,0.0490457676,-0.1261277348,0.1686180085,0.0023767278,0.0062327264,-0.1212250814,0.1362637281,0.1480095387,0.0858756304,0.1443147063,0.094294779,0.2027719319,-0.0761665329,-0.033974275,0.0001882905,-0.0667883754,-0.1414330155,0.0493424796,0.1070313603,-0.0467189774,0.0021073532,0.0108938608,-0.1573767066,0.2232329249,0.0038229979,-0.0640548095]],"hackathon_name":"Hack Cambridge Recurse","index":352,"project_description":"Videos in eMotionVideo calls such as Skype, Google Hangouts, and WeChat have revolutionised communication, in business, socially, and in many other applications. Yet despite the huge uptake, there remains a lack of support for the visually impaired. We believe that the user experience of the visually impaired would be greatly enhanced by providing feedback through facial recognition and interpretation of the expressions of the people they are talking to.eMotion aims to address the lack of support for the visually impaired by harnessing a Microsoft Cognitive API to provide real-time information on facial expressions during a video call. The API interprets a still image of the video call and calculates the likelihood of different emotions. A customisable sound-effect is then played to inform the user of the most likely emotion.The peer2peer connection is established and maintained using WebRTC, Node.js, and socket.io. Video streams are embedded in the html code using Javascript, which also powers the back-end.A key issue was that domains that we created were unable to stream video because the location was not considered secure enough. Socket.io is very hard to implement on cloud systems. The Microsoft API was incredibly useful, but involved a steep learning curve.We are proud of how quickly we were able to adapt to challenges outside of our usual comfort zones by trying out new technologies and languages.Coming from a wide variety of backgrounds, we were each able to learn a great deal about each other's skillsets.Hack Cambridge RecurseI worked on our version of the Emotion-API and helped with css and html.ErmeHarrier\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:41 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"eMotion","project_tags":["javascript","html","css","node.js","socket.io","webrtc","azure","google-app-engine","jquery"],"project_url":"https:\/\/devpost.com\/software\/emotion","keywords":"video,api,visually,impaired,io,support,call,challenges,emotion,expressions,facial,lack,microsoft,peer,proud,socket,able,using,user,deal"},{"level_0":353,"hack_vector":[[0.1379117966,-0.1242471188,-0.0255898107,0.0142917931,-0.0177866668,0.1110061482,0.203080073,-0.0141864792,-0.0113426317,-0.0057255779,0.0163076818,-0.0658476725,0.1326661408,-0.0654989779,0.0739830881,0.0099716727,0.2109209299,-0.0047006598,0.0353160277,0.1292231679,-0.2644798458,0.0354166478,-0.0260309223,-0.0269293208,0.0913579985,-0.0314630941,-0.021468861,-0.1724251509,0.0014618278,-0.1097054929,0.0592622496,-0.1244223341,0.0214648563,-0.0954049453,-0.010504243,-0.0489587933,0.0945265368,-0.1613791436,-0.0767562836,-0.0318956748,0.0219592769,-0.1412100792,-0.12631841,-0.0494015999,0.0810191631,-0.04429489,0.0098549351,-0.076540783,-0.0243301131,-0.1952534616,-0.1497183293,0.007821261,-0.1124210581,-0.0125203012,-0.1991873831,0.1569759995,-0.1099569798,-0.0384146422,0.0497586317,-0.1113040373,-0.0722638443,0.0238718428,0.0812174976,0.0565476976,0.0867066979,0.025851991,-0.1036174223,-0.1175184622,0.0392740704,0.0295090936,0.0754659027,-0.0590718985,0.0393321216,-0.1215432137,0.0191268492,-0.1677305996,0.1478069872,0.0055543543,0.0106281973,-0.1294026822,0.1316633672,0.1610235274,0.0512998737,0.1800222993,0.0960827693,0.1983604729,-0.0929209962,-0.0294987373,-0.0348207988,-0.0721332282,-0.1406415552,0.0526873432,0.1001189128,-0.0596199818,-0.0029184683,0.0191403106,-0.1668504179,0.2063699216,-0.0049497834,-0.0743328258]],"hackathon_name":"Hack Cambridge Recurse","index":353,"project_description":"Getting from what you know to what you want to knowA web app to find literature to get you from what you know to what you want to know as efficiently as possible. Become familiar with a new field, understand a collaborators publication or check key publications for your literature review - all quickly and efficiently.\nIntroductionThink of all possible knowledge as a (very) high dimensional hyperspace. Any publication will occupy some subspace of this hyperspace. Conventional literature searches provide the publications that intersect some subspace, usually defined by a keywords. More recent social media\/bot approaches try to interpret the subspace the user is familiar with and suggest publications that exist at or just outside the boundary of this familiarity. Our service provides a means of bridging between the subspace of knowledge which the user knows and their search subspace. This is done by presenting the minimum necessary publications required for the user to traverse between these subsapces.Think of all possible knowledge as a (very) high dimensional hyperspace. Any publication will occupy some subspace of this hyperspace. Conventional literature searches provide the publications that intersect some subspace, usually defined by a keywords. More recent social media\/bot approaches try to interpret the subspace the user is familiar with and suggest publications that exist at or just outside the boundary of this familiarity. Our service provides a means of bridging between the subspace of knowledge which the user knows and their search subspace. This is done by presenting the minimum necessary publications required for the user to traverse between these subsapces.Publication subspace coverage is approximated as nodes and the hyperspace is projected onto a network with distances between nodes as approximations to the distances within the hyperspace.These distance estimates are an aggregations of several factors including whether the papers are citation\/reference connected (first degree connection), how many shared cited\/referencing papers they have (second degree connections) and overlap of keywords. More could include text analysis of abstract\/full text analysis; author input; experint input; user input or others.A shortest path is found on a network of unity weight edges for distances below a threshold and weights penalised above unity for distances above the threshold. This threshold is to model the users ability to move outside his field of knowledge. So papers they find comfortable learning are included but papers that they would find challeneging are penalised.Hack Cambridge RecurseJeremy Minton\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:41 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"knowledge-direct","project_tags":["sqlite","python","flask"],"project_url":"https:\/\/devpost.com\/software\/knowledge-direct-w9slvg","keywords":"subspace,publications,user,knowledge,hyperspace,distances,papers,publication,literature,keywords,input,possible,threshold,outside,find,familiar,data,conventional,provides,know"},{"level_0":354,"hack_vector":[[0.1671788394,-0.1421658397,0.0138359303,0.0950559676,-0.0132494476,0.1830177605,0.1745985001,-0.0604442582,-0.0307065565,-0.0134364404,0.0028086093,-0.0140257273,0.1416958272,-0.0976348221,0.0062428336,0.049903851,0.2450162321,0.0116628595,0.0782409236,0.0728584826,-0.211652115,0.0202649403,-0.0646378249,-0.0358231924,0.1804542691,-0.0451891869,-0.0728523061,-0.1977937073,0.0010879427,-0.0813173205,0.0538903959,-0.1138900816,0.0887010247,-0.0685651675,-0.0551175363,0.014946579,0.1422701776,-0.1236974001,0.005658919,0.0609495342,0.0739913583,-0.1356785744,-0.1940620244,-0.0156834628,-0.0148675023,-0.0288207065,0.0366651826,-0.0325643346,-0.0207897127,-0.2016773522,-0.0655599758,0.0546175465,-0.1135673374,-0.0121423667,-0.1363390237,0.1377166659,-0.1638669074,0.0390631929,-0.0056980252,0.0084449928,-0.0369219892,0.0230556298,0.0599927641,0.0628672689,0.1432515234,-0.0266984776,-0.1144401431,-0.1574568301,0.0022277755,0.0182591006,0.08295881,-0.0405334011,-0.0023746642,-0.1517578959,-0.0242621284,-0.0455692783,0.212539494,0.0398666635,0.0660283342,-0.1362308413,0.1199640259,0.1432464421,0.0225369558,0.1318199188,0.1448017955,0.1789178997,-0.1089462563,0.0270427093,0.00396524,-0.0956355631,-0.0884708688,0.0894992724,0.0342868604,0.0154388482,0.0476840772,-0.0761767402,-0.068666108,0.164628461,0.0964018852,-0.0540365018]],"hackathon_name":"Hack Cambridge Recurse","index":354,"project_description":"Reversing turing test.Not time, sorry. Maybe next time!Hack Cambridge RecurseI worked with Node.js to develop the back end of the chat room, as well as a bit of scripting on the front endKonstantin Wuenscher\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:39 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"turing talk","project_tags":["javascript","python"],"project_url":"https:\/\/devpost.com\/software\/turing-talk","keywords":"time,next,turing,talk,sorry,ran,proud,maybe,learned,inspiration,challenges,built,accomplishments"},{"level_0":355,"hack_vector":[[0.1378345639,-0.0654079542,-0.0366984829,0.0481021702,-0.0076666754,0.151406154,0.2157395035,-0.0301273409,-0.034218844,0.008474743,0.0233289134,-0.0922567621,0.1367660165,-0.0784581378,0.0855803639,-0.0023935288,0.2030021697,0.0040311525,0.0390773788,0.1136860028,-0.2116000652,0.06098352,-0.0589661375,-0.0201030355,0.1044691056,-0.0171524547,-0.0306417607,-0.2051943243,-0.047254093,-0.0517525822,0.0916806161,-0.127461791,0.0451584607,-0.1119413152,-0.0324611515,0.0168605167,0.1222742274,-0.1209251881,-0.0511118211,-0.0092472602,0.0301066115,-0.1580738723,-0.1639465988,-0.0087043056,0.076216355,-0.0321611241,0.0108651463,-0.082681112,-0.0325731859,-0.2220279425,-0.1411184967,0.0040067174,-0.0960202441,0.025490582,-0.1771714836,0.1407479644,-0.1389314979,-0.0045141834,0.0283194277,-0.1087634191,-0.0716319457,0.0227696784,0.0967397392,0.0463648476,0.1109329835,-0.0046201013,-0.0808064118,-0.1138856709,0.0488046519,0.0125256833,0.0568070859,-0.0480533876,0.0279531963,-0.1202098057,0.0283874869,-0.1284704953,0.1803311259,-0.0052381777,0.0212108325,-0.1343093961,0.1334782541,0.1513245106,0.0977731571,0.1611586511,0.0766135678,0.1886214167,-0.084407866,-0.045488935,0.0099857794,-0.0999267697,-0.1669389606,0.0414962247,0.0928187072,-0.0482457951,0.0053368681,0.0165707283,-0.1381631941,0.2153743058,0.0089661805,-0.0783117935]],"hackathon_name":"Hack Cambridge Recurse","index":355,"project_description":"Post to Instagram directly from the web with automatically generated hash tags using Microsoft Computer Vision APIWeb application interfaceUploaded ImageGenerated Hash TagsPosted to InstagramAs an active Instagram user, I found it tedious to add the 'obvious' hash tags in the caption of every photo I post. This inspired me to create an app that would automatically generate the hash tags for me based on the image context. I also wanted a method of posting to Instagram through a different platform (not only restricted to my IPhone Instagram App).InstaVision is a web application that allows users to upload a photo, automatically generate hash tags with the click of a button and post the photo to their Instagram account.I used Microsoft Cognitive Services Computer Vision API to analyse the uploaded image and return a list of keywords which are converted into hashtags that are inserted into the caption.\nI built the back-end using PHP and various third party APIs such as Imgur API for uploading an image to cloud temporarily and NXS API for posting to Instagram.\nFor the front-end, I used Javascript\/JQuery and AJAX for submitting form data to the API endpoint and handling image uploads, and I used HTML\/CSS and the Bootstrap framework for the basic user interface.I learnt a lot about the Microsoft Cognitive Services and it's various APIs and how to utilise them in PHP. I also learnt how to handle file uploads and send requests to the API using AJAX.Hack Cambridge RecurseI worked on the project on my ownBrian Min\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:39 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"InstaVision","project_tags":["php","javascript","html"],"project_url":"https:\/\/devpost.com\/software\/instavision","keywords":"image,api,instagram,php,using,file,hash,imgur,posting,photo,cognitive,application,services,microsoft,tags,various,end,uploaded,uploading,uploads"},{"level_0":356,"hack_vector":[[0.1234710962,-0.112171188,-0.0104617001,0.0381429717,-0.0262544714,0.1344627291,0.1963237971,-0.0304174703,-0.0317670517,-0.0103577767,0.0236366,-0.0504279286,0.1345738024,-0.0732529759,0.0539463162,0.0319094509,0.2297337502,0.0127690118,0.0429129153,0.1154097989,-0.2203050256,0.0379187241,-0.05557945,-0.0413731597,0.1161428094,-0.0173206739,-0.0476668552,-0.1961735934,-0.0084195575,-0.091511704,0.0540650412,-0.1276409924,0.037638668,-0.0903086811,-0.0161211211,-0.0065279137,0.1193548962,-0.1393519044,-0.0473349541,0.0198931657,0.0276726559,-0.1524312049,-0.1725377291,-0.0411366373,0.0326488651,-0.0643161088,0.0174124409,-0.0542953014,-0.0319248848,-0.2114243507,-0.1227968633,0.0271470491,-0.1061144471,-0.0240426566,-0.1677394658,0.1675617248,-0.1365407258,0.0060832663,0.0262144525,-0.0813413933,-0.0559237041,0.0260254834,0.0689091682,0.0844651386,0.1160300598,0.0023847693,-0.1103615761,-0.1380468011,0.0365320705,-0.0011800902,0.0684230775,-0.0571007989,0.0228811521,-0.122926183,0.0155601278,-0.1193071753,0.179703638,0.0060980753,0.0454323068,-0.1444845051,0.1398650259,0.1615853608,0.0726168975,0.1591804177,0.1163256988,0.1941454411,-0.1197791025,-0.0380166359,-0.0064593926,-0.0851712674,-0.1355820298,0.0534228273,0.0950543359,-0.042205479,0.0162425637,-0.0271065999,-0.1520794183,0.2029774785,0.0209548622,-0.0808519498]],"hackathon_name":"Hack Cambridge Recurse","index":356,"project_description":"Display the sky scanner flights with the airline safety ratingsSome of the flights on sky scanner includes airlines which have very poor safety ratings. We want the users to travel safely so have removed the airlines which have poor safety ratingsUses the IATA API for getting airline safety ratings for SkyScanner flightsWe used IATA Api to get the safety ratings along with airlineratings.com. We pulled all the flight data between two airports from sky scanner and got their respective safety ratings. Then display that to the userUsing the pusher api to update the data in real time.Make air travel safe again.Never fly with Air Canada Express, Bangladesh Biman.We are going to make the UI nicer and implement this as a chrome extension. Only show results above a certain safety ratingHack Cambridge RecurseArgha Sarkar\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:40 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Airline safety","project_tags":["pusher","skyscanner","python","html5","css3","javascript"],"project_url":"https:\/\/devpost.com\/software\/airlines-safety","keywords":"safety,ratings,airlines,api,make,sky,poor,flights,data,scanner,iata,travel,air,biman,express,got,going,getting,get,fly"},{"level_0":357,"hack_vector":[[0.1648876369,-0.0991761461,-0.032002151,0.0715209991,-0.0111942701,0.1646890789,0.219172582,-0.0388493054,-0.0350428633,0.0046900734,0.0006118069,-0.0553119667,0.1377726048,-0.0692567229,0.06653364,-0.0170022845,0.188658759,0.0059883655,0.0393990539,0.114119783,-0.2153023332,0.0317220427,-0.052547276,0.0045631812,0.1741854548,-0.0074417903,-0.0312802233,-0.1984146386,-0.0449836142,-0.0533427931,0.0881193206,-0.1360454857,0.0402484462,-0.0940742046,-0.0430466458,0.005016102,0.1199272498,-0.1206770912,-0.0500477739,0.0006951182,0.0689587146,-0.1518672556,-0.1458466947,-0.0060906904,0.0472311303,-0.013891479,0.0091803912,-0.0692703426,-0.04242393,-0.2130660117,-0.1147931144,0.0163946506,-0.1050821766,0.0360733196,-0.1687852293,0.1545340419,-0.1490472108,0.0099961152,-0.0049247448,-0.0734502822,-0.0628790781,0.0236812253,0.072813116,0.0189232733,0.1352981478,0.0009977223,-0.1113680676,-0.1263424903,0.0269023851,0.0158582907,0.0536685288,-0.0354936048,0.0334213041,-0.1341044605,0.0172648747,-0.0855635256,0.1911479533,-0.0027450183,0.022211412,-0.1363701075,0.1223442405,0.1450783312,0.0854466856,0.1571536213,0.1034879237,0.2167496979,-0.0725946426,-0.0073732333,0.0179008506,-0.0728587881,-0.1381609142,0.0762025937,0.0892265514,-0.0234213043,0.0109870303,-0.0110070398,-0.1261158586,0.241585061,0.0150516136,-0.0506763533]],"hackathon_name":"Hack Cambridge Recurse","index":357,"project_description":"Smash your opponent with haevy emotions! Hilarious party game powered by Microsoft Emotion API and custom C++ engine!We had so much fun exploring the Microsoft Cognitive Services, we actually decided to create a game out of it!Collect weapons and defenses, activate them by a specific emotion to beat your opponent!We created a custom C++ game engine and connected through Node.js to the Microsoft Emotion API.Pretty hard to connect Node.js and C++ (we ended up using a custom REST service and the Microsoft C++ REST SDK).Definitely the Microsoft API, lots of C++ and everything around it.Lots of fun for everybody ;-)Hack Cambridge RecurseI developed the game, using SFML and a game framework I had developed previously to add the graphics, physics, and game mechanics. I left the tricky integration of the Microsoft Cognitive API to Jan!Jan Mattfeld\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:37 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Face.off","project_tags":["c++","node.js"],"project_url":"https:\/\/devpost.com\/software\/face-off-3teic9","keywords":"microsoft,node,custom,fun,game,js,lots,emotion,rest,api,built,created,definitely,defenses,decided,activate,actually,create,cognitive,around"},{"level_0":358,"hack_vector":[[0.1461843401,-0.116303958,-0.0260494724,0.0441827253,-0.0124553973,0.1339330226,0.197751686,-0.027604986,-0.0215837061,-0.0007084844,0.0043048542,-0.0513314828,0.1261057109,-0.059840586,0.0522975661,0.0090029994,0.2056809068,-0.0023842081,0.0508701541,0.1170382947,-0.2534564137,0.0405392945,-0.0281222351,-0.0153203327,0.1246257499,-0.0247155372,-0.0361558944,-0.1849075556,-0.0033449112,-0.0890524685,0.0633866861,-0.1407733411,0.0333872288,-0.0803127438,-0.0184872337,-0.0286417585,0.1100389436,-0.1546391696,-0.0593040548,-0.0047105923,0.0341652259,-0.1615383774,-0.1475715637,-0.0522982478,0.0430924781,-0.0477454662,-0.0041821995,-0.0713649392,-0.0135798352,-0.1922894716,-0.1318630576,0.0161234196,-0.1148989722,0.0060754749,-0.1999866813,0.1543427557,-0.1448557228,-0.016885642,0.0368174762,-0.0908492878,-0.0806320757,0.0245816708,0.0711503178,0.0568968132,0.1062243432,0.020806415,-0.1059489027,-0.1306553185,0.0391470529,0.031691011,0.0867354795,-0.0662161037,0.0383782797,-0.1256743222,0.0228971075,-0.136227563,0.1640964597,0.005923742,0.0291960426,-0.1309804022,0.1227003038,0.1462713778,0.0582715012,0.1729361117,0.1128840372,0.1978958398,-0.1147698313,-0.030044755,-0.0178978089,-0.069376491,-0.135637477,0.0623852462,0.0950218067,-0.0521747582,0.0069277463,0.0061816019,-0.1492592841,0.2116557956,0.0194263626,-0.0670108125]],"hackathon_name":"Hack Cambridge Recurse","index":358,"project_description":"Hack Cambridge 2017 - Real-time Event-based Monitoring System for Seniors and Elderly using Neural NetworksHack Cambridge 2017Real-time Event-based Monitoring System for Seniors and Elderly using Neural NetworksTeam:\nCristian Axenie, Simeon Kostadinov, Mark MathewsIt has been estimated that 33% of people age 65 will fall. At around 80, that increases to 50%. In\ncase of a fall, seniors who receive help within an hour have a better rate of survival and, the faster\nhelp arrives, the less likely an injury will lead to hospitalization or the need to move into a long-term\ncare facility. In such cases fast visual detection of abnormal motion patterns is crucial.In this project we propose the use of a novel embedded Dynamic Vision Sensor (eDVS) for the task of classifying falls. Opposite from\nstandard cameras which provide a time sequenced stream of frames, the eDVS provides only relative\nchanges in a scene, given by individual events at the pixel level. Using this different encoding scheme\nthe eDVS brings advantages over standard cameras. First, there is no redundancy in the data received\nfrom the sensor, only changes are reported. Second, as only events are considered the eDVS data rate is\nhigh. Third, the power consumption of the overall system is small, as just a low-end microcontroller is\nused to fetch events from the sensor and can ultimately run for long time periods in a battery powered\nsetup. This project investigates how can we exploit the eDVS fast response time and low-redundancy\nin making decisions about elderly motion.The computation backend will be realized with a neural network classificator to detect fall and filter outliers. The data will\nbe provided from 2 stimuli (blinking LEDs at different frequencies) and will represent the actual position of the person wearing them.\nThe changes in position of the stimuli will encode the possible positions corresponding to falls or normal cases.We will use Microsoft Azure ML Studio to implement a MLP binary classifier for the 4 (2 stimuli x 2 Cartesian coordinates - (x,y) in the field of view) dimensional input. We labelled the data with Fall (F) and No Fall (NF).Hack Cambridge RecurseCristian Axenie\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:33 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"neural_fall_detection","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/neural_fall_detection","keywords":"edvs,fall,time,data,stimuli,changes,events,sensor,seniors,neural,falls,motion,cases,fast,using,rate,cameras,standard,long,system"},{"level_0":359,"hack_vector":[[0.1315496713,-0.0863382444,-0.0370342322,0.038910795,-0.0262507349,0.1478057355,0.1922737062,-0.0305258892,0.0058945124,-0.0366121903,0.0101433471,-0.0627437159,0.1209844351,-0.0629012063,0.0482781678,0.0062545962,0.2292047739,0.018292712,0.0406714007,0.1275056154,-0.2429188043,0.0198591258,-0.0318263806,-0.0205991156,0.1049827188,-0.0101390444,-0.0333553255,-0.1723237336,-0.0188723132,-0.106901519,0.0541347489,-0.1309363097,0.0317847021,-0.0776307657,0.0008909497,-0.0234905034,0.1188142672,-0.1400336921,-0.0580779612,0.0020289049,0.0401241593,-0.142095536,-0.1503676325,-0.0577540733,0.0590827428,-0.0720472485,0.0055516916,-0.0565224141,-0.0389036015,-0.2140454054,-0.1412868649,0.0200648047,-0.0932042524,-0.0257154889,-0.2025516778,0.1595781893,-0.1205144972,-0.0389494114,0.042996496,-0.0998603627,-0.0718321502,0.0095356908,0.0761160776,0.0346412398,0.1026213393,0.0286411867,-0.1012825221,-0.1320469975,0.0469316393,0.0405697785,0.0693165883,-0.0591761284,0.0318068787,-0.1153679192,0.0223403219,-0.1290968359,0.1567577273,0.0082812477,0.0095144706,-0.1432324201,0.1049600765,0.1627530009,0.0511911586,0.1898974627,0.0916814804,0.1968291253,-0.1064195335,-0.0454690941,-0.0305534657,-0.0740202516,-0.1356455982,0.0523996502,0.0907596648,-0.0463008508,-0.0086834617,0.018248938,-0.1588872075,0.2373401523,0.0017410448,-0.0868949369]],"hackathon_name":"Hack Cambridge Recurse","index":359,"project_description":"Generate a single link that live-feeds your position for a set amount of time. Bridges cross-platform friend-finding.Online trackingMobile trackingHave you ever tried to lead a pub crawl? Or struggled with finding your friends at a music festival? There's a lot of apps that try to fix this problem, e.g. Find My Friends for iOS. They all share one massive drawback though: everyone needs to be using the same app. We fix that.Once followFeed is installed on your device (we've developed it cross-platform using ionic framework), you're only a few clicks away from sharing your location live. You enter an event title, a start and stop time for tracking. The app will then run in the background of your device for the chosen time. And here's the crux: you are then given a URL that you can share with anyone to follow you in their web browser on whatever device. Without installing any apps.The interface also allows you to add scheduled paths, which can be great for pub crawls etc. We also provide a chat feed using Pusher Feeds API (this is currently not working online due to pythonanywhere.com restrictions for free users). But it works locally and on any paid host.We expect to make millions on this.Hack Cambridge RecurseJulius Bier Kirkegaard\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:21 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"followFeed","project_tags":["javascript","css","html","python"],"project_url":"https:\/\/devpost.com\/software\/followfeed-server","keywords":"device,using,fix,app,time,followfeed,apps,pub,friends,also,share,feeds,event,ever,everyone,expect,feed,works,festival,find"},{"level_0":360,"hack_vector":[[0.1327593178,-0.0898324102,-0.0235237535,0.0221380349,-0.0200502966,0.1375153065,0.2065241337,-0.0281491596,-0.0167803504,-0.0024909442,0.0301169176,-0.0735945702,0.1306759864,-0.0667328611,0.0675939023,0.0258148387,0.2320786864,0.00583723,0.0273212697,0.1270648241,-0.239482075,0.0258107912,-0.0479786284,-0.0271429215,0.0961242765,-0.0278759245,-0.0289509334,-0.1932063252,-0.0146581903,-0.0969988331,0.0703491494,-0.1174503937,0.0265718643,-0.0964521095,-0.0140661737,-0.0006922988,0.1072583646,-0.1333916634,-0.045074515,-0.0050235842,0.0212948322,-0.1325015575,-0.1568883657,-0.0307925865,0.0746048614,-0.0570460819,0.0162126496,-0.0621907227,-0.0242482442,-0.2196185738,-0.1270082742,-0.0007772051,-0.1009223089,-0.0129222367,-0.1844591647,0.156446591,-0.125362128,-0.0225336254,0.0389977582,-0.0982679352,-0.0606986545,0.0182351992,0.0879493654,0.0601460226,0.1145527065,0.0072352984,-0.0929404721,-0.1321133077,0.0472066738,0.0067597101,0.06145484,-0.0501070581,0.0305743143,-0.1142506301,0.0128392922,-0.1472337395,0.1686852276,-0.0022433191,0.021637544,-0.1386175305,0.1382858306,0.169975698,0.057990633,0.1812591702,0.0890467614,0.201390937,-0.0973642096,-0.0358848944,-0.0246655885,-0.0840686038,-0.1565820724,0.0488638356,0.0872554183,-0.0475900844,-0.0126504209,0.0152299516,-0.1517960429,0.2081668377,0.0094701564,-0.0864194557]],"hackathon_name":"Hack Cambridge Recurse","index":360,"project_description":"From the Botteam to the TopUser profileUser profileThe command list for Cam BotThe Cam Bot outputThe Cam Bot outputInspired by Hack Cambridge to add more detail to each Slack account to make the team forming process faster and easier. Allowing you to join or create a team that will give you the top hackathon experience.The bot collects information about each user when they join the Slack group, taking information from their Github and Devpost accounts, as well as mentor and team statuses.By talking to the Cam Bot on the Slack account you can find out more about individual users and get lists of mentors or people looking for a team (which you can filter depending on any language requirements).When you ask about a specific user the Cam Bot will send you screenshots of the user's Github and Devpost pages, their team and mentor statuses, the languages they know, and links to their Github, Devpost and LinkedIn account. You can ask the bot for a list of mentors or people looking for a team, which you can then explore individually in  more detail. You can also update your team status, and view your profile.We are running two Node.js servers that exchange data via a REST API.One is used to control the chatbot itself and manage chat session data. It uses the Microsoft Bot Framework, which allows us to deploy our bot to several platforms easily - we currently have Slack and Facebook Messenger integration (although the primary use should be via Slack).Our second server manages user profiles, authentication, user OAuth tokens for 3rd party API integrations, and handles rendering of user image-dashboards - we are using a headless WebKit, PhantomJS, to render screenshots of new users' GitHub and Devpost previews. It later serves these assets for the chatbot controller to use them.\nHere we also handle team formations and persist user data.The Cam Bot can already be used in any Slack group, as long as the Slack admin adds Cam Bot to the group.\nHope to incorporate Facebook messenger. Extend the use of Team HackerBot for other team building applications, such as tech startups etc.Hack Cambridge RecurseMade the back-end for our two servers and added chatbot integration with REST APIs for reusability.Alice Grout-Smith\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:35 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Team HackerBot","project_tags":["javascript","express.js","phantomjs","jquery","bootstrap"],"project_url":"https:\/\/devpost.com\/software\/team-hackerbot","keywords":"team,bot,user,slack,cam,github,devpost,use,data,account,group,mentors,mentor,facebook,people,looking,detail,hackerbot,screenshots,chatbot"},{"level_0":361,"hack_vector":[[0.1412382573,-0.0889084712,-0.0297946669,0.0423894376,-0.0207113791,0.126540482,0.1984674484,-0.0225647073,-0.0255462304,-0.002416668,0.0164554175,-0.0760494769,0.162569657,-0.0691307038,0.0781714171,-0.0233925804,0.1866371036,-0.0122784749,0.0410474092,0.1243419573,-0.2347011268,0.0396005996,-0.0395781137,-0.0017234584,0.1191654503,-0.0311228484,-0.0238542203,-0.1726724952,-0.032213334,-0.0781053752,0.0670697987,-0.1236403063,0.0194547549,-0.0798711181,-0.0228859112,-0.0081964359,0.1222360879,-0.1431719959,-0.0702140182,-0.0085609574,0.045055639,-0.1272616386,-0.1381012648,-0.0171609614,0.0695251152,-0.0465058051,0.0162197817,-0.0906357616,-0.0200584531,-0.2006636709,-0.1613028198,0.0049224393,-0.1140705645,0.0259954873,-0.2094630301,0.1614781022,-0.1272880733,-0.0264774263,0.0391957834,-0.1170503646,-0.0821367428,0.0149376355,0.0816139877,0.0497316197,0.1103237271,0.0297986194,-0.080893673,-0.1160321757,0.0262576267,0.0123587204,0.0622605979,-0.0506953895,0.0261634495,-0.1092428267,0.0503366105,-0.1281382143,0.1810815185,-0.0038057819,-0.0074703996,-0.1302837431,0.1280834526,0.1613508612,0.0652065203,0.1526297629,0.0990812406,0.1998327225,-0.0869527087,-0.0517938025,-0.0068766419,-0.0738573074,-0.1552077085,0.0492791049,0.1049755141,-0.0381285623,-0.0059315185,0.0026488455,-0.1670079827,0.239948526,0.0049682446,-0.0670298412]],"hackathon_name":"Hack Cambridge Recurse","index":361,"project_description":"Personalised health advice via facebook\/skype\/slack. Make informed decisions backed by your data!Input data via interactive chatbotintuitive data presentation for analysisWe noticed that minor medical conditions often are hard to pin down. Examples include skin irritation, indigestion, or migraine. To make matters worse, the causes for such symptoms are unique to each person. Therefore, we set out on a simple and yet challenging task to create personalised data tracking that is accessible to everyone.In addition, we realised that the same platform can be used to make informed decisions about our lives. In my personal dataset that was uploaded to the server we saw that productivity suffers from alcohol. (More subtile correlations were excluded for privacy reasons)Briefly, it interactively collects users data via chat-bots (slack\/facebook\/skype) and present analysed data back to the users. The user can pick the objectives he is interested in and our server picks the most important questions to ask. When there is enough data, the platform suggests an informed decision.We started off by brainstorming ideas through the email conversation, which was started by the organising team. Hence, we already knew what we wanted to do when we arrived \u2013 some conceptual design was followed by flowcharts and the build began. With 2-4 hours of sleep, the team was up and running for most of the time. The time was well spent and we have succeeded to make an MVP!We encountered 3 main challenges : the Bot itself is stateless, and integrating State into such a complex system makes for a very sensitive process of compile-run-debug, which often times turned frustrating. Debugging seemed somewhat difficult since the system seemed to behave differently locally and on azure, so we needed to deploy and use the bot itself to get messages. The second problem was getting the Scala web back-end to connect to SQL Server, which was incredibly difficult (had to basically write an entire Java wrapper library) due to poor compatibility between Scala and JDBC. Our last problem was not getting the Amazon Alexa to work, which we attribute to the fact that the bot turned out to be a lot more complex to build than we had thought and so we ran out of time.Add security layers, make it fully scalable, add dynamic NLP using MS Cog Services. More statistical analysis and data visualisation. Continue using it ourselves and recommend it to our friendsTry chatting on HackCambridge slack channel with bot \"@knowyourself2\" (HackCambridge Team)Hack Cambridge RecurseI coded the bot backend of this software, using C#, MS Azure and SQL Server. Implemented using MS Bot Framework. Features and inspiration were commonWorked on the JS data visualisation and website front end;\nContributed to idea brainstormingKarolis Misiunas\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:33 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"KnowUrSelf","project_tags":["scala","c#","jquery","java","sql","azure","heroku","github"],"project_url":"https:\/\/devpost.com\/software\/knowurself","keywords":"make,use,data,bot,team,time,managed,end,users,server,difficult,fully,build,built,different,challenges,poor,slack,chat,ran"},{"level_0":362,"hack_vector":[[0.1273478568,-0.0896663964,-0.032635659,0.0304419603,-0.0234802235,0.1400289834,0.205688417,-0.0334606431,-0.0068358751,-0.0202187337,0.0223677512,-0.0665948465,0.1274885386,-0.0712405145,0.0600880682,0.0133038452,0.2281991988,0.0042561665,0.038708128,0.1253210455,-0.2343030572,0.0341963172,-0.0378169157,-0.0278499834,0.0966413766,-0.0141437715,-0.0285147987,-0.1812535375,-0.0136022381,-0.0966622904,0.0570561625,-0.1313546747,0.0293380097,-0.0885411277,-0.0067550228,-0.0171773303,0.1139195338,-0.1420004666,-0.0594111159,-0.0082942573,0.0350652523,-0.1420562714,-0.1480093151,-0.040697284,0.0657428429,-0.0552738979,0.0145365335,-0.0675880536,-0.035139285,-0.2105325758,-0.1432630867,0.0168767143,-0.0965238735,-0.0126402788,-0.1982372701,0.1568509936,-0.1209109575,-0.0319904611,0.0386014543,-0.1088838875,-0.0690169632,0.0149063291,0.0883645862,0.0517770909,0.1068940088,0.0211707558,-0.0940507203,-0.1294243485,0.0464272276,0.025941059,0.0680624694,-0.0570379794,0.0370450169,-0.1192586496,0.0270660501,-0.1385229677,0.1601254642,0.0038988157,0.0129310973,-0.1378128827,0.127809152,0.1640460193,0.0637392104,0.1825588346,0.089075774,0.1917933226,-0.1062292457,-0.0500778221,-0.0225325078,-0.076284878,-0.148602441,0.0497816429,0.0936197042,-0.0455547869,-0.0064509585,0.0173585638,-0.158210814,0.2235135585,-0.001403068,-0.0836586431]],"hackathon_name":"Hack Cambridge Recurse","index":362,"project_description":"Intelligent music playlist composed from your guests\u00b4 interests in a single clickLanding pageDemoWhether at parties, conferences, or meetings, we often need to generate music that a large group of people will like. We'd prefer to be able to do this without explicitly requiring the user to specify songs (as we can do in a collaborative playlist, for instance), instead automatically fetching the user's song preferences which already exist in their Spotify account.It generates a link that the organizer can share with the guests and allows them to login with their Spotify credentials only and automatically saves their preferences. We don't store any personal information.We integrated seamless OAuth 2.0 authentication which allows organizers and guests one-click access to our app. \nWith a carefully tuned and tailored algorithm for analyzing your audiences\u00b4 musical preferences, the app automatically creates and populates playlists on your Spotify account specially curated for your event.Built using Node on a JS stack, and deployed in the cloud, our solution scales to meet the demand of any event.Authentication is hard. Sessions are hard too. Deployment is also hard. Getting database schemas in order.\nTuning algorithm to give the most relevant matches.We have a fully functional app at the end of 24 hours that is poses a solution to a real-life challenge.  We\u00b4ve overcome all our challengesRapid prototyping on a Javascript stack, user experience and responsive apps. Spotify API and information retrieval.We are excited to work with event organizers (especially hackathons) to bring personalized entertainment to your event!Hack Cambridge RecurseI did the frontend, worked on the database and the express enpoints.OAuth, session management, deploymentDaniel Carmona\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:32 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Crowdify: Music from everyone.","project_tags":["node.js","mongodb","spotify","ejs","express.js","passport","oauth","love"],"project_url":"https:\/\/devpost.com\/software\/crowdify-a3hnok","keywords":"spotify,event,app,preferences,automatically,hard,user,algorithm,allows,organizers,stack,account,playlist,challenges,solution,guests,authentication,information,click,built"},{"level_0":363,"hack_vector":[[0.15586555,-0.1267511845,-0.0294523649,0.041226007,-0.0162419509,0.1165334284,0.2000668049,-0.015966069,-0.0271504708,0.0063727121,0.0139292879,-0.0619253367,0.1462668926,-0.0614262111,0.0735364333,-0.0062141917,0.1853423864,-0.0229069386,0.0420971178,0.1324374825,-0.2663642168,0.0271761715,-0.0369646698,0.0040943353,0.125103265,-0.0307103246,-0.0275124405,-0.1610297859,-0.0119348606,-0.0976106673,0.0667832568,-0.1193461269,0.0137814051,-0.072396487,-0.0107864989,-0.0356614031,0.0960715413,-0.1575825363,-0.0730029047,-0.0288698655,0.0422797836,-0.1323422641,-0.1280055791,-0.0324875191,0.0633480698,-0.0452620126,-0.0047271647,-0.0880379677,-0.0030649304,-0.1915096492,-0.1456117034,0.0096050967,-0.1170650423,0.0222792458,-0.2188640088,0.1651872844,-0.1331855953,-0.0300806165,0.0364723243,-0.111055322,-0.0733858645,0.0353657007,0.0734857023,0.050485447,0.0965326354,0.0333815292,-0.1054657623,-0.1193318218,0.0203442983,0.0265043955,0.0695400238,-0.041521892,0.0315249264,-0.1146969199,0.0339710154,-0.1335903257,0.1634773612,-0.0082305996,-0.0032631541,-0.1262230277,0.1182400286,0.150424853,0.0535221696,0.1588899493,0.1067738011,0.2118552476,-0.0903880298,-0.0404769517,-0.0295658652,-0.057950452,-0.1344115883,0.064373523,0.110889174,-0.04884414,-0.0068634348,0.0178238023,-0.1677761525,0.2303584665,0.0067173946,-0.0617473088]],"hackathon_name":"Hack Cambridge Recurse","index":363,"project_description":"Large scale simulation of immigration in World of WarcraftRecently, immigration has become a subject of controversy and political turmoil. We live in a world where walls are built while people leave their homes, seeking for help. Our endeavour was to model the migration of individuals in a fictional universe, in order to showcase the dynamic way in which people immigrate, and how this impacts the population and living standards in each country. This kind of simulation would be the answer to many \"What if...?\" questions governments, scientists or economists could ask. These answers would not only allow proactive measures to be taken, but could save lives.Using SpatialOS, we have built a large scale simulation of migration in the magical World of Warcraft. The current model consists of 10 countries between which thousands of people migrate. The phenomenon is based on both personal and regional characteristics, each movement having a certain probability of occurring at any given time. The model is flexible and permits simulation based on customizable parameters, making it a useful tool for governments which want to be prepared for an influx of immigrants, or in case of natural disasters or even war. Or if somebody decides to build a wall.We built the project using C# and integrating the map and movement of people in unity, and used SpatialOS to run the simulation at large scale. Starting from a simple model of random migration, we then used probability theory and population dynamics to mathematically describe the phenomenon.Learning the structure and functionality of SpatialOS and integrating it with unity were two of the major challenges we faced. Finding a relatively simple mathematical model to realistically describe immigration was also a challenging task.We learned how to use SpatiolOS and integrate it with unity. Even though the learning process took a lot of time and we faced a lot of challenges, we managed to fix many of the bugs and to deliver a functional product.The hackathon has been an invaluable learning experience, as we started from scratch with SpatialOS and spent the first few hours of the hackathon learning its structure, functionality and particularities. We also read various research papers on immigration, population dynamics and migration modeling. Besides, we improved our knowledge of C# and learned unity.The next important steps are building larger maps and modeling more parameters which determine the probability of migration. By introducing these features, we will increase the flexibility of the platform, making it able to simulate migration at continent and even global level. Also, a nicer interface!Hack Cambridge RecurseTeodora Stoleru\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 06:09 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SpatialLink","project_tags":["c#","unity"],"project_url":"https:\/\/devpost.com\/software\/spatiallink","keywords":"migration,model,spatialos,learning,simulation,unity,people,built,probability,population,even,challenges,immigration,also,learned,phenomenon,world,parameters,next,movement"},{"level_0":364,"hack_vector":[[0.1274443567,-0.1212969199,-0.0251077097,0.0512005351,-0.0333986729,0.1420924962,0.210343644,-0.0241268836,-0.0356662646,-0.0268349424,0.0112456344,-0.0264724586,0.1437899023,-0.071853891,0.0297904033,0.0322808363,0.256095171,0.0137815885,0.0310941301,0.131722331,-0.2338454872,0.0348394439,-0.0270692911,-0.0381323472,0.1384458095,-0.0135991676,-0.0567079224,-0.1878169626,-0.0027496747,-0.1010391191,0.0617319718,-0.1263571233,0.0416711234,-0.0658887103,-0.0118267704,-0.0244845208,0.1326650381,-0.1253474951,-0.0290190559,0.0197604503,0.0530932024,-0.1554474831,-0.1665928513,-0.053600397,0.0406007096,-0.0550468527,0.017250197,-0.0443593562,-0.0284802243,-0.2056127638,-0.0910256729,0.0202743579,-0.0914312676,-0.0265827887,-0.1762933284,0.1624154896,-0.1405815333,-0.0087556085,0.0321014933,-0.0676328838,-0.0493416674,0.0274608433,0.0739936307,0.0476152822,0.1192034706,-0.0002972129,-0.106384851,-0.149209246,0.0490470082,0.0298648644,0.0636327863,-0.0429882631,0.0143813714,-0.116003491,-0.023123825,-0.1253107488,0.1624614298,0.004473933,0.0464354716,-0.1346541196,0.1161082536,0.1654989123,0.0365039371,0.175872311,0.1198555753,0.1883582473,-0.1310240179,-0.0196259934,-0.0206582062,-0.1003169194,-0.1328478605,0.0712238327,0.0692763329,-0.0200196691,0.0186069272,-0.011689784,-0.1461280733,0.1967217177,0.0413833894,-0.0606766269]],"hackathon_name":"Hack Cambridge Recurse","index":364,"project_description":"A cool interactive sound based web game, allowing for collaborative music makingThe idea stemmed from wanting an easy yet melodic way to collaboratively create music over the internet!The user is presented with a harmonic table whereby they are free to place pieces down in order to create music. These pieces create a pulse which create the music, and that goes through the table changing the pitch in varying degrees depending on its direction.There are several different pieces, from the simple Start and Stop, to pieces likeHack Cambridge RecurseGwen Wong\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:32 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hexhogg","project_tags":["html","javascript","firebase","midi.js","create.js","jquery"],"project_url":"https:\/\/devpost.com\/software\/hexhogg","keywords":"create,music,pulse,pieces,js,direction,different,sent,gets,place,table,order,interface,time,harmonic,idea,internet,free,game,inspiration"},{"level_0":365,"hack_vector":[[0.1240672022,-0.0995025337,-0.029724976,0.0436198041,-0.0332577415,0.150885731,0.2047655582,-0.0320617557,-0.0011740046,-0.0441911407,0.0213806387,-0.0472187549,0.1263051331,-0.0570553243,0.0652868897,0.0124476729,0.2382516712,0.018075997,0.0336389467,0.127001375,-0.2293440551,0.0256755427,-0.0417933799,-0.0324740037,0.1048599705,-0.0071903062,-0.0201419145,-0.188417539,-0.0332464725,-0.0921572298,0.057181105,-0.1263154596,0.0344681777,-0.0940890834,-0.0112839593,-0.0157184526,0.1167715862,-0.1332178861,-0.0608927347,0.010018874,0.0363250375,-0.1365548372,-0.1521416157,-0.0499228127,0.0486732237,-0.0752984211,0.0203851741,-0.0507172905,-0.0448009074,-0.2200872898,-0.121928893,0.0004210662,-0.0912537798,-0.0359841473,-0.1771997958,0.1703472733,-0.1270540506,-0.0167218726,0.0323359855,-0.0934716314,-0.0715388954,0.0170571059,0.076984711,0.0382124893,0.1090678796,0.0137926647,-0.1128983274,-0.1427199692,0.0511268005,0.0214458704,0.0500808172,-0.0485459603,0.0289594829,-0.1242247224,-0.0052565122,-0.1210802123,0.1838058829,0.003586211,0.03357343,-0.1433157027,0.1100055277,0.1696078479,0.0553167015,0.1737938523,0.1023665518,0.1862763166,-0.1085506529,-0.0284702349,-0.0127575919,-0.0837183446,-0.1483176053,0.0689299628,0.0886473954,-0.0373565145,-0.0004106128,-0.0099956011,-0.145699963,0.2280573398,0.0147613743,-0.0764608234]],"hackathon_name":"Hack Cambridge Recurse","index":365,"project_description":"Listen to the music your mood wants you to listen to.Pikachu happinessHacking teamWho hasn't ever felt stressed and wanted to listen to peaceful music? Or perhaps felt really excited and wanted to have epic music ful-surround and imagine to be driving in the middle of a Highlands-like landscape? Well, wouldn't it be cool to turn on the laptop, ask him for music and immediately have the music you want without having to ask him to?Moodsic reads your face using a camera (eg your laptops webcam) and learns your mood. Then it uses this info to pick an appropriate music for your mood.We used Microsoft's Cognitive API* for the facial recognition and a .NET environment for the development (C#, XMAL, WPF). For the music selection we used Rhythm API by Gracenote Developer. Finally, the songs are directly downloaded from YouTube.Ordered from easier to harder to implement:Hack Cambridge RecurseWebcam integration, interface designArnau Canyadell\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:31 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Moodsic","project_tags":["c#",".net","xaml"],"project_url":"https:\/\/devpost.com\/software\/moodsic-rx6ihq","keywords":"music,mood,user,environment,want,sorry,listen,use,challenges,used,new,felt,moodsic,songs,genre,environments,ask,using,wpf,api"},{"level_0":366,"hack_vector":[[0.1341120154,-0.1001628861,-0.0336118601,0.0153362844,-0.0264848266,0.1233024448,0.210142687,-0.0125604412,-0.0204002708,0.0056106113,0.0180374477,-0.0656575784,0.1295326501,-0.0597822666,0.0843696818,0.02162138,0.22348167,0.0107843373,0.019092422,0.1259049475,-0.2415232509,0.034737099,-0.0384133048,-0.0351070724,0.0959156677,-0.0174229052,-0.0307228509,-0.1906740069,0.0016516882,-0.0902321339,0.0636011884,-0.1298709661,0.0127542941,-0.0991720557,-0.0039660693,-0.0158640184,0.0927990451,-0.1449026763,-0.069313243,-0.0223752968,0.0070395474,-0.1545285732,-0.1375506371,-0.0336487517,0.0670344755,-0.0442363732,0.0050786077,-0.0740083456,-0.0205048155,-0.1928737015,-0.1316915303,0.0065753399,-0.0984841511,-0.0180355143,-0.1810514778,0.1756091118,-0.1065961272,-0.0137096457,0.038833227,-0.1101380661,-0.0718952119,0.0323919281,0.0821090415,0.0726955086,0.1008803025,0.0175672434,-0.1048445627,-0.13018547,0.048668623,0.0183237046,0.078629218,-0.0460515283,0.0509469435,-0.1214918867,0.0218719412,-0.1658850908,0.1508866251,-0.0117912749,0.0215627756,-0.1216841266,0.1409549862,0.1629329771,0.0805570558,0.1690744609,0.0860313252,0.1929336637,-0.1022498831,-0.0447544493,-0.0196738709,-0.0759996176,-0.1529820859,0.0487783663,0.0923228562,-0.065483585,0.0072288611,0.0314638764,-0.1661622524,0.2177151144,-0.0086377263,-0.0858408213]],"hackathon_name":"Hack Cambridge Recurse","index":366,"project_description":"We are biased to the information we are exposed to in our social network bubbles. Social Bubbles solves thatRecently we experienced several events where a lot of us were surprised with the outcomes (eg. Brexit, US presidential elections). Most\/all of our friends generally share our opinions on social media. There must be a way we can statistically assess this to help us form unbiased opinions.Social Bubbles allows a user to input a phrase, and uses their network to visualise the social bubbles in their network. The social bubbles will also make inferences about what likely opinions your friends might have, and how likely you are to see people with different views on your Facebook Feed.Social Bubbles takes the facebook friendships, friends posts and their connections of a user using machine learning (K-Mediods) to cluster the posts into groups. We filter the posts by the provided phrase. We then consider the Sentiment of each post using Microsoft Cognitive Services. We finally classify the users (based on their posts assignments) to different clusters using a Bayesian Classifier.The result is displayed finally on a D3 Web interface with useful graph statistics such as network percentage, groups interconnectedness and top works per cluster.Retrieving the Facebook Data\nTweeking our clustering algorithm\nData mining\/cleaningHack Cambridge RecurseClustering and classifyingIzz Abudaka\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:32 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Social Bubbles","project_tags":["python","nltk","scipy","d3.js","natural-language-processing","facebook-graph"],"project_url":"https:\/\/devpost.com\/software\/social-bubbles","keywords":"social,posts,bubbles,us,facebook,opinions,network,friends,using,user,finally,different,phrase,likely,cluster,data,groups,form,elections,graph"},{"level_0":367,"hack_vector":[[0.147354424,-0.1057857946,-0.0214347746,0.056223888,-0.0211088601,0.1493816376,0.2176731378,-0.0208204519,-0.0284120254,0.0023717009,0.0119440826,-0.0586799122,0.1395612359,-0.0685296804,0.0611752644,0.0316532403,0.2273733765,0.0157426782,0.0308251753,0.1204908118,-0.2334047109,0.0409087762,-0.0518611521,-0.0338960774,0.1299657822,-0.0260390881,-0.0463950671,-0.2087551057,-0.019756034,-0.0657761246,0.0703145266,-0.1191162691,0.0436431728,-0.1028570607,-0.0303888172,0.009337157,0.1127061546,-0.1267947704,-0.0435197949,0.0147820543,0.0289603863,-0.1609125137,-0.166402325,-0.0249154717,0.0463560447,-0.0381926969,0.0118152816,-0.0613105744,-0.0235368684,-0.2060217261,-0.1092979386,0.0016444938,-0.104419589,-0.0058193724,-0.1580940485,0.1503008008,-0.1390786022,0.0095475623,0.0260177292,-0.0749075264,-0.0649101585,0.0356003232,0.0842018351,0.0596229136,0.1243036315,-0.005872136,-0.1081300452,-0.1435814947,0.0423282757,0.0065361424,0.0600112267,-0.0482372306,0.0256254617,-0.1285324693,-0.0078115542,-0.1309374422,0.183243677,-0.0050127204,0.0431626365,-0.1345233917,0.1347406954,0.1599003971,0.0720276833,0.1539869457,0.098561652,0.1971356124,-0.0923376903,-0.0003763338,0.0058100284,-0.0985874012,-0.1430911422,0.0678064674,0.0659480467,-0.0372147262,0.0225977842,-0.0110771293,-0.1381846368,0.2098343968,0.0289630052,-0.0662602633]],"hackathon_name":"Hack Cambridge Recurse","index":367,"project_description":"Use the emotions of anger and happiness to run local commandsI was trying to create a new way of interacting with power users by adding the ability to run terminal commands based on emotions.Constantly monitors user facial expressions. If the user is angry or surprised, the program can run terminal command lines.I used JavaFX in combination with Microsoft Emotions API and OpenCV to analyse facial expressions of the user, and run appropriate terminal commands.Dependency problems.Learned more about JavaFX, OpenCV, and the Microsoft Emotions API.Expand selection of emotional commands. Allow program to run in the background.Hack Cambridge RecurseNicholas Capel\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:31 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"FaceControl","project_tags":["html","java","css","javascript"],"project_url":"https:\/\/devpost.com\/software\/facecontrol","keywords":"run,emotions,user,commands,terminal,opencv,expressions,javafx,learned,microsoft,facial,program,api,appropriate,command,dependency,adding,create,constantly,allow"},{"level_0":368,"hack_vector":[[0.1309725344,-0.1074667498,-0.0107785594,0.0276298691,-0.0116772326,0.132095769,0.2009712458,-0.0300892219,-0.0367686711,-0.0019950387,0.0009139157,-0.0704189911,0.1308994293,-0.0656369627,0.0418399759,0.0496960171,0.2438631654,0.0002793015,0.0421701856,0.1250703931,-0.2402527481,0.0597258247,-0.0376505852,-0.02121328,0.1201612875,-0.0250211507,-0.049233757,-0.1850138307,-0.0049526026,-0.1047643498,0.0734600946,-0.1353887916,0.0476766601,-0.0817837715,-0.0166446697,-0.0223361515,0.1261545718,-0.1364414245,-0.0234570336,-0.0129068727,0.0292080306,-0.1719044894,-0.1760370284,-0.0571742728,0.0518418476,-0.048202794,0.0013655775,-0.0634189695,-0.0096024238,-0.2008617967,-0.1012400463,0.0256799366,-0.1013175249,-0.0030075083,-0.1921175271,0.1470160186,-0.1572393775,-0.0212041885,0.0392721891,-0.0835499689,-0.0709031448,0.0290792529,0.0785098672,0.0531281605,0.103428632,0.001365045,-0.1006636322,-0.1526265442,0.0536016524,0.0385584086,0.0924052224,-0.0642263889,0.0307677332,-0.1140625849,0.0030694287,-0.1371361762,0.14774324,0.0070487149,0.052202303,-0.1219553128,0.1172685772,0.1469006985,0.0579664297,0.1747715175,0.1091306284,0.1740745902,-0.1300691366,-0.0300664511,-0.0246663038,-0.0980675295,-0.1317305714,0.0564906374,0.0742815286,-0.051161468,-0.002465483,0.0206537228,-0.1461169422,0.1874029338,0.0329116844,-0.0782490522]],"hackathon_name":"Hack Cambridge Recurse","index":368,"project_description":"Creating an image by combining the colors that different cellphones obtain by scanning a QR.Checking the QR detectionAdministrator setting parametresUser screenshot viewOur application is the ideal complement for a multitudinary event, such as a concert or a sports competition. The goal is to display a gradial wave between two colors by combining the images that appear on tons of different phones.First of all, the administrator generates a QR by setting up the parameters of the animation such as resolution, number of frames, colors and speed. This person also determines where the QR will be projected, so he will also input information on the room, and on the QR.The next phase is at the time of the event. The administrator will display a QR and ask all the people in the venue to enter the website and upload a picture of the QR. Then, the server calculates the position of each phone and in what order should the images appear on the screen.Hack Cambridge Recurselaia freixas\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:30 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"eWave","project_tags":["css","javascript","python","html","flask","json"],"project_url":"https:\/\/devpost.com\/software\/ewave","keywords":"qr,administrator,also,appear,images,colors,event,display,information,ideal,gradial,goal,generates,frames,first,enter,determines,different,mosaic,creating"},{"level_0":369,"hack_vector":[[0.1441461742,-0.143677339,-0.0031619414,0.090753451,-0.0478572138,0.1758220196,0.1781615317,-0.0623086542,-0.0149309821,-0.0443725511,-0.005012332,0.0335714929,0.1157096624,-0.0624397546,-0.0195908342,0.0689598992,0.2751252353,0.0480659604,0.0358076766,0.0959293991,-0.1974161267,-0.001570111,-0.0374759212,-0.0435841642,0.1970674098,-0.0013026407,-0.0699882358,-0.1855282187,0.0182782002,-0.0898184404,0.033114057,-0.1110093072,0.0790349022,-0.0400530845,-0.0183742754,-0.0102600576,0.1381440759,-0.1028909758,0.0111768125,0.0836126208,0.065948002,-0.163366273,-0.18062976,-0.062123768,-0.0473374873,-0.0521285981,0.0274699163,0.0237445757,-0.0415105633,-0.1886401325,-0.0169378258,0.0328035057,-0.0870949104,-0.0659625456,-0.1138863787,0.139706865,-0.1545675695,0.0446807481,-0.0081619164,0.0323247053,-0.0173186045,0.0246673636,0.0435530283,0.0323253162,0.1315940171,-0.0287181959,-0.1481757313,-0.1798578054,0.0315429196,0.0293980651,0.0622416362,-0.0379044153,0.0025268449,-0.1348410845,-0.0778343305,-0.0646893904,0.1691206545,0.0242832657,0.093995288,-0.1415490806,0.0904958248,0.1533464044,0.0004247185,0.1715848893,0.1435717642,0.1605792195,-0.1673427522,0.0614477582,-0.015020946,-0.1141321659,-0.0649773553,0.1138887033,0.0185601115,0.0234159883,0.0696017519,-0.0745746419,-0.0730878487,0.1673635542,0.0977907777,-0.0454879627]],"hackathon_name":"Hack Cambridge Recurse","index":369,"project_description":"A multiplayer game in which you defeat your enemies with codeA multiplayer game in which you defeat your enemies with codeHack Cambridge RecurseAlasdair Hall\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:30 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Codebot Wars","project_tags":["python","javascript","react","jquery","html","css"],"project_url":"https:\/\/devpost.com\/software\/codebot-wars","keywords":"multiplayer,game,enemies,defeat,code"},{"level_0":370,"hack_vector":[[0.1555772573,-0.1012861207,-0.0350545906,0.0366387591,-0.0127239488,0.1193888709,0.2164774388,-0.0062342025,-0.0246194508,-0.0039810301,0.0074089174,-0.0677805319,0.1329175085,-0.0669558644,0.076058276,-0.0027153278,0.1878049821,-0.0139388023,0.0429917388,0.1296637654,-0.2545833588,0.0284979567,-0.0392292663,-0.0159241762,0.1120622233,-0.0319921188,-0.0299371593,-0.1775149852,-0.0217832141,-0.0818275362,0.0614972673,-0.1194014102,0.0274153203,-0.0898403078,-0.0225378536,-0.0165884607,0.1034946367,-0.14761585,-0.0747516826,-0.0004512296,0.0382750928,-0.1362409741,-0.1300373077,-0.0344382748,0.0714897811,-0.0602524355,0.010796045,-0.092203401,-0.0136091569,-0.2047854513,-0.1470839679,-0.0007580403,-0.1168859601,0.016294824,-0.1981697977,0.1680876464,-0.137506336,-0.0221587662,0.0340586267,-0.116422832,-0.0807269812,0.0287835225,0.0761720911,0.0507701151,0.1129077151,0.0159180928,-0.109257035,-0.1129713207,0.029253412,0.017156424,0.0647394136,-0.0506355017,0.0153831569,-0.1225481108,0.0391552113,-0.1406547725,0.174732849,-0.0076970193,0.0088958973,-0.1352365315,0.1189096943,0.1510220319,0.0653161779,0.1510631591,0.0974091589,0.2022926956,-0.0839009732,-0.030736072,-0.0057178219,-0.0796193928,-0.1564089358,0.0541113876,0.0970930755,-0.0443545878,-0.0044579948,0.0124656865,-0.1628229469,0.2197160572,0.0098834112,-0.060715504]],"hackathon_name":"Hack Cambridge Recurse","index":370,"project_description":"Use TensorFlow, Keras, OpenCV to train the machine to lock the laptop when owner leaves desk.Missing scenes from netflix when I temporarily leave the laptop.It uses deep learning to recognise the person via the laptop's webcam. After that, the daemon can be configured to do anything. For demo purposes, we are using it to pause netflix \/ youtube videos after 10 seconds. Another use case is to lock the laptop after a certain amount of time without the user sitting in front of the laptop. This is vital in a highly secure environment to avoid unauthorised access to data.Other potential applications:\nWe can see this being applied in areas where full attention of the user is required for high security reasons, such as in the following two use cases:Used a popular open-source project, Boss Sensor as inspiration to use face recognition via deep learning, training on examples of faces. The deep learning is performed by using Tensor flow and Keras. To get the video feed, we're using OpenCV.-- Using Tensor flow and Keras for deep learning. A huge number of training examples are required. Therefore, it is not as accurate yet as we'd like it to be. \n-- Getting OpenCV installed on a mac. This was a nightmare.-- Able to differentiate between different faces as opposed to just traditional face detection. This is able to recognise different faces for example the face of an authorised user vs. an unauthorised user.We've learned how to use Tensor flow for deep learning. We also learned about feature recognition and image manipulation.We would like to automate the learning process of the algorithm. Currently, we have to manually capture images and train the algorithm. Automating this process would mean a larger training dataset, resulting in higher accuracy.Hack Cambridge RecurseArgha Sarkar\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 06:56 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Face recognition to execute commands","project_tags":["opencv","bash","java"],"project_url":"https:\/\/devpost.com\/software\/automatic-face-recognition","keywords":"user,learning,face,recognition,deep,using,laptop,use,flow,tensor,training,learned,screen,faces,automatic,inspiration,process,requires,required,air"},{"level_0":371,"hack_vector":[[0.1450805962,-0.0892308205,-0.0237435829,0.0532892942,-0.0203873124,0.1471370459,0.2187045217,-0.0230039321,-0.0320613869,0.0073154001,0.0087752678,-0.0733572617,0.1392195076,-0.0741292685,0.0723622963,0.0219386593,0.2099606842,0.0103485063,0.0315145217,0.1227518842,-0.2269215584,0.0361318327,-0.0603788234,-0.0246353336,0.1290049702,-0.0130963605,-0.0435452722,-0.1980562657,-0.025194468,-0.0657205731,0.0738065466,-0.1238575354,0.0358043686,-0.0989145339,-0.0375770703,0.0097871274,0.118069984,-0.1296781003,-0.0474228784,0.0057883263,0.0386655554,-0.1489506662,-0.156799823,-0.0149008026,0.0602155402,-0.0372013561,0.0162461139,-0.0753749534,-0.0236701071,-0.216494441,-0.1203124374,0.0145792682,-0.1043130159,0.0158348717,-0.1639588326,0.1632576287,-0.1405987293,0.0061460352,0.0107413772,-0.0861839876,-0.0632594451,0.0264925789,0.0883050635,0.0544267483,0.1278356612,-0.006330953,-0.0944818929,-0.1347600222,0.0439318419,0.0095252432,0.0574052446,-0.0406995565,0.0204292927,-0.126764074,0.0141143585,-0.1116196513,0.1845599562,0.0015354004,0.0212515108,-0.1378054023,0.1338846236,0.1565455198,0.0883516297,0.1462894827,0.0993983224,0.2087691426,-0.0802914351,-0.0224855058,0.0106238462,-0.0872489586,-0.1534505785,0.056396421,0.0910677463,-0.0366858095,0.0067374445,-0.0006470665,-0.138886869,0.2247609049,0.0182040371,-0.0704551786]],"hackathon_name":"Hack Cambridge Recurse","index":371,"project_description":"We teach children to write in a fun way!We wanted to find an application of bots to help learning languages, with focus on early beginner (eg. children).The user gets to pick a category of images and then different images are showed to him\/her. The user should input the objects present in the image and compare the user's input with the results obtained from Computer Vision API.We built it using Node.js SDK and Microsoft Bot Framework and 2 of the Microsoft Cognitive Services.Setting up and connecting the APIs. Lack of enough example code and documentation for Microsoft Bot Framework.We have a bot!Working with a new technology stack.Implementing the Speech Recognition API and publish the bot on more platforms.Hack Cambridge RecurseFaraz Taheri\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:28 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"tech-miners","project_tags":["node.js","telegram"],"project_url":"https:\/\/devpost.com\/software\/tech-miners","keywords":"bot,user,microsoft,built,api,images,input,framework,find,eg,enough,example,working,focus,documentation,gets,help,image,early,computer"},{"level_0":372,"hack_vector":[[0.1355216056,-0.1134880334,-0.0277989339,0.061441958,-0.0288821179,0.1423378587,0.2026580572,-0.0397254936,-0.012141021,-0.0465406366,0.0152823916,-0.0237394217,0.1298134327,-0.0635345206,0.0342051238,0.0081706904,0.2346063554,0.0093376469,0.0378805771,0.1407092959,-0.2424497008,0.0152167436,-0.0359491669,-0.0143699339,0.1355525255,-0.0091176387,-0.0335880555,-0.1827868819,-0.0263867136,-0.0975508466,0.0525345877,-0.1276855916,0.0374438614,-0.0609818026,-0.0041205361,-0.0285191927,0.1183792427,-0.1281611472,-0.0496961735,0.0217938516,0.0638865456,-0.1432551295,-0.148791194,-0.0615155995,0.0255221333,-0.072153978,0.0121946363,-0.0419072323,-0.0517139211,-0.2137940675,-0.1103114858,0.0099377623,-0.0969289541,-0.0162583068,-0.1885894537,0.1558486223,-0.1433979124,-0.0207333695,0.0152981533,-0.0793662891,-0.0582000427,0.026749799,0.064004913,0.0236088689,0.1200030521,0.0184380915,-0.1256879866,-0.1405929923,0.0325155444,0.0268828999,0.0442487709,-0.0489807725,0.023502972,-0.1169330105,0.0006618463,-0.1024702713,0.173363477,0.0015317815,0.0285934154,-0.1481291652,0.1068507582,0.1669104993,0.035210833,0.1802597344,0.1121302918,0.2032329887,-0.1209383607,-0.0172108151,-0.0262000691,-0.078960903,-0.1247634962,0.0857437029,0.0775676668,-0.0182557628,0.0011543394,-0.0184894968,-0.1507882327,0.2302192897,0.0290016383,-0.0557355881]],"hackathon_name":"Hack Cambridge Recurse","index":372,"project_description":"Engaging VR game for Google Cardboard where you run in a maze in local party and try to hit opponents by jumpingMain menuJoin\/Host a sessionSelection of menu itemsInside mazeMeeting an enemyVR game where you had to do some physical exercises to achieve victory.In this game, you run around in a maze and if you find an enemy, you need to jump in real life to attack the foe.We used Google VR (Google Cardboard) together with Unity3d engineLocal networking is very tricky to implement when you can test it on your phone only which doesn't have to debug.VR is working nad we had no prior experience.VR and local network multiplayer implementation in UnitySingle player mode, mode weapons and challenges to get powerupsHack Cambridge RecurseAdomas Boruta\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:28 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MazeVR","project_tags":["unity","google-cardboard"],"project_url":"https:\/\/devpost.com\/software\/mazevr","keywords":"vr,mode,unity,challenges,google,local,game,working,foe,learned,jump,inspiration,implementation,implement,get,exercises,find,experience,engine,enemy"},{"level_0":373,"hack_vector":[[0.149261415,-0.1370631903,0.0048042461,0.0927128568,-0.0457600802,0.1707670689,0.1852642447,-0.0610270873,-0.0336536765,-0.007135693,0.0123651382,0.0245413333,0.131493032,-0.0773892403,0.0314412005,0.0457159504,0.2483794987,0.0390854664,0.0542317852,0.0832418054,-0.1913223267,0.0255904086,-0.0516247563,-0.0624278858,0.162479654,-0.0179121755,-0.0568550266,-0.2147410065,0.0113306446,-0.0481048264,0.0418604352,-0.119589068,0.0722011626,-0.0748357773,-0.0514876246,0.0196823347,0.1434881091,-0.1041535735,-0.01730836,0.0837688819,0.0440969877,-0.1626383215,-0.1811041385,-0.0326643214,-0.0319043994,-0.0305840671,0.0395562127,-0.0139031345,-0.0318506397,-0.1928322315,-0.05017782,0.0224345252,-0.1135997027,-0.042564407,-0.0996276438,0.1454741806,-0.1493005157,0.0754237399,-0.0109858736,0.026585985,-0.024497455,0.0225202776,0.0565543845,0.0781616643,0.140874058,-0.0437103733,-0.1231334284,-0.1576453596,0.0209967773,-0.0063940575,0.0638541207,-0.0423419178,0.0088091651,-0.1511419863,-0.0527815297,-0.0856703222,0.2011720985,0.0217890479,0.0893117711,-0.1453759968,0.1402767897,0.1571803838,0.0400965288,0.1513728201,0.1419315636,0.1695649177,-0.1365099251,0.0485891812,0.0248469245,-0.110373497,-0.1100536212,0.090912573,0.0402755067,0.002859927,0.0817633569,-0.0889119655,-0.0575287081,0.1508345157,0.0921504796,-0.0494527854]],"hackathon_name":"R.U. Hacking? Mini Hack!","index":373,"project_description":"Discord bot for posting crud.Posts crud to Discord.\nLink for adding: https:\/\/discordapp.com\/oauth2\/authorize?client_id=273888371208617985&scope=bot&permissions=0Commands:\nUploading image to DM with caption - saves\/setup sticker\n!liststickers - DMs stickers\n!sticker  - requests stickerR.U. Hacking? Mini Hack!Andriux\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 25, 2017 02:24 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"CrudpostBot","project_tags":["javascript","node.js"],"project_url":"https:\/\/devpost.com\/software\/crudpostbot-ma9td2","keywords":"sticker,uploading,dms,authorize,bot,caption,client,com,commands,crud,crudpostbot,discord,discordapp,dm,https,stickers,id,image,link,liststickers"},{"level_0":374,"hack_vector":[[0.1679870486,-0.1614789069,0.0188288521,0.0946511105,-0.0353800915,0.1702339202,0.1582802832,-0.065140672,-0.0384254791,-0.0177960992,-0.0020202266,0.0218827836,0.1331414729,-0.0721866339,0.0019680748,0.0624805279,0.2415754497,0.0269155931,0.0673316941,0.0865304247,-0.1982250065,0.0255327728,-0.042076733,-0.0515558384,0.1862383485,-0.0256444532,-0.0647389665,-0.1919428259,0.0208335742,-0.0623905547,0.0368009806,-0.1145163625,0.077937074,-0.0512355678,-0.0428174399,0.0034884203,0.1486945897,-0.1141693294,-0.0028766098,0.0839548782,0.0633832812,-0.1685449034,-0.1920326501,-0.0469430313,-0.04910855,-0.0237842873,0.0294758324,-0.0109517518,-0.018096339,-0.1818372905,-0.0430574976,0.0413849391,-0.1202904135,-0.0351716839,-0.1189647913,0.146601513,-0.152803719,0.0689484179,-0.010995199,0.0399054736,-0.0225388724,0.0201553591,0.0478442907,0.0766358897,0.1409085095,-0.0358431712,-0.1360058337,-0.1738867462,0.0086126849,0.0162901748,0.0871608257,-0.0441882946,0.0039405567,-0.1438477933,-0.0576548427,-0.0650124848,0.1905079484,0.0254230257,0.0890373737,-0.1300398856,0.1168562844,0.1468572915,0.0118170064,0.1497769952,0.1484468877,0.1638000607,-0.1467791796,0.0493309014,0.0107203359,-0.1034463122,-0.0762962997,0.1003966779,0.0303963367,-0.0013171153,0.0809229389,-0.0910561085,-0.0526920147,0.1542287469,0.1014779136,-0.0435012169]],"hackathon_name":"R.U. Hacking? Mini Hack!","index":374,"project_description":"Markov Chain Bot that runs on twitterProject for MiniHack Hackathon at the University of Reading on the 25th of January 2017.Created by James McCartney (@jsmuk), Lucy Firman (@mikotohe2) and Jamie Luckett (@jimjam707)R.U. Hacking? Mini Hack!Jamie Luckett\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 25, 2017 02:20 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MiniHack","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/minihack","keywords":"minihack,university,jsmuk,dependencies,firman,hackathon,james,jamie,january,jimjam,luckett,tweepy,lucy,mccartney,mikotohe,project,reading,th,created"},{"level_0":375,"hack_vector":[[0.1671948135,-0.1593759507,0.00503331,0.0856100246,-0.0384999029,0.1670212448,0.1864912063,-0.0680779591,-0.0309219398,-0.0076730559,0.0029959942,0.0249113515,0.1370985061,-0.076302208,0.0091862166,0.0604732968,0.2392152697,0.0206575841,0.0504399948,0.0818997622,-0.2052687854,0.0215234179,-0.0428974032,-0.0487099327,0.1732960045,-0.0232530423,-0.057657633,-0.1918884665,0.0128729371,-0.0655114204,0.0378374718,-0.1102869287,0.0764574185,-0.0642062873,-0.0527980216,0.0001211044,0.1373769939,-0.1185472086,-0.0227036513,0.0750682577,0.0536515489,-0.1506935656,-0.1646168977,-0.0320099331,-0.0355868116,-0.0350358561,0.0318916738,-0.0151795913,-0.0265124403,-0.18148081,-0.056812793,0.034416195,-0.1205427423,-0.0365145318,-0.1053335965,0.1405287981,-0.1568199694,0.059630964,-0.0138432328,0.0284651909,-0.0274855867,0.0344836339,0.0529932007,0.0719202608,0.1392129958,-0.0392434709,-0.1427603811,-0.1542868167,0.0069712284,0.0046076602,0.0627145916,-0.0386865288,0.0044485265,-0.1562459767,-0.054492902,-0.0758373365,0.2047205865,0.0183866583,0.0771308467,-0.1468266845,0.1356569082,0.1562588513,0.0200454947,0.1429832876,0.1530701369,0.1737676263,-0.1364897192,0.0602588765,0.0190051198,-0.104659453,-0.0967718214,0.1068043485,0.0382574424,0.0096710436,0.0753009841,-0.0874465853,-0.0744277686,0.1687073559,0.0961633846,-0.0402153917]],"hackathon_name":"R.U. Hacking? Mini Hack!","index":375,"project_description":"Stack based programming language prototypeBoredomCan do variable bindings and run functions defined in the standard library. Has string, float, and arbitrarily sized integer types.Cargo buildTimeWorking language prorotype in 6 hoursMemory safety is hardProbably nothingR.U. Hacking? Mini Hack!Lucille Blumire\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 25, 2017 02:29 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"mimir","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/mimir","keywords":"working,defined,integer,inspiration,hours,hard,functions,float,challenges,learned,cargo,built,build,boredom,bindings,arbitrarily,language,library,variable,run"},{"level_0":376,"hack_vector":[[0.1587211043,-0.1048879996,-0.035869237,0.0614463538,-0.0222439226,0.1427044719,0.1932206005,-0.0227874722,-0.0256549586,-0.0222847126,0.0080658384,-0.0544590652,0.1456578374,-0.0706616268,0.0589730553,0.0001152138,0.2082424164,-0.0057306122,0.0505970307,0.1194210425,-0.2338955849,0.0179378167,-0.0491715297,-0.0123614809,0.122823678,-0.034481626,-0.0375200734,-0.1744579524,-0.0396572836,-0.0776575655,0.0616961978,-0.1046655178,0.0452232026,-0.0769727826,-0.0275156256,-0.0001694243,0.124457255,-0.1304615438,-0.0530764647,0.0189272445,0.0624417774,-0.1216455773,-0.1552117169,-0.0183783993,0.0541018769,-0.0621619746,0.0231763367,-0.0733092055,-0.0282239355,-0.2224085629,-0.1386873573,0.0068317368,-0.1067939103,0.0024115408,-0.1893236786,0.1464516222,-0.138239488,-0.0162107591,0.0326484405,-0.0764793009,-0.065188989,0.0254563428,0.0678672045,0.0315409712,0.1231224015,0.004589777,-0.1063336954,-0.1303490251,0.0111540761,0.0127427792,0.0628066882,-0.0455406643,-0.0031152542,-0.1293823719,0.008536567,-0.1083719507,0.2037386745,0.0033651276,0.0135134421,-0.1456888169,0.1117204875,0.162136957,0.0378404483,0.1621056348,0.1072016433,0.2075641006,-0.0967323482,-0.0096779251,-0.0109363412,-0.0952381417,-0.1448343098,0.0778900012,0.0789249912,-0.020822091,0.0059504332,-0.01886658,-0.1429338604,0.2487776875,0.035687644,-0.0626007318]],"hackathon_name":"R.U. Hacking? Mini Hack!","index":376,"project_description":"A very very micro Integrated Developer EnvironmentI wanted an IDE that worked exactly how I wanted it to.It can open a file that you can edit and has syntax highlighting. It can also run files with hashbang!I wrote it in python using tkinter to create the window and pygments to achieve syntax highlighting.One problem was learning how to make only 1 line of text's syntax highlighting redone every time the user types new values in order to ensure that the program did not run too slow.It works more or less flawlessly.I've learnt how to create a windows in python.Implement the ability to edit multiple files , configurable themes and implement build rules.R.U. Hacking? Mini Hack!I did all of it.Ethan Webb\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 25, 2017 02:21 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Micro-IDE","project_tags":["python","pygments"],"project_url":"https:\/\/devpost.com\/software\/micro-ide","keywords":"syntax,highlighting,ide,edit,run,python,wanted,implement,files,create,hashbang,wrote,inspiration,learned,learning,learnt,less,flawlessly,exactly,file"},{"level_0":377,"hack_vector":[[0.1442270428,-0.1070714667,-0.0241342261,0.0682942197,-0.0181877129,0.1265800297,0.195599854,-0.0182031374,-0.0414086804,-0.0153599838,0.0197828468,-0.0325094797,0.1555964351,-0.0686101019,0.0556658916,-0.0231449474,0.1807032079,-0.0202305894,0.0533230677,0.1335693747,-0.2412450016,0.0124185495,-0.0333271325,0.0035940383,0.1436091065,-0.0261699893,-0.0366574004,-0.1709047556,-0.0230540726,-0.0861006081,0.0594288372,-0.1107012779,0.0199950244,-0.052894637,-0.0043490985,-0.0122443652,0.1107087657,-0.1357263923,-0.0614384785,0.0020311719,0.0797739774,-0.129182905,-0.1402005106,-0.0269154124,0.0429488979,-0.0402544178,0.0077114808,-0.0833819136,-0.0169510879,-0.2118215114,-0.1290517002,0.0225030761,-0.1109791175,0.0219510924,-0.2205602527,0.1693021804,-0.1440649778,-0.0201771203,0.0266152713,-0.1025530398,-0.0654825494,0.0321516208,0.0616911501,0.038090568,0.1288324744,0.0333802514,-0.1014877781,-0.1275089979,0.0197978485,0.0088713933,0.0506406799,-0.0336344838,0.0152948266,-0.1116151363,0.0338916071,-0.1024206877,0.1765004098,-0.0070031649,0.0020731918,-0.1398980021,0.1096730158,0.1586815119,0.0506191626,0.1575281322,0.1184166297,0.2275580764,-0.0864923373,-0.040739689,-0.0196460169,-0.0669333413,-0.1452818811,0.0739737228,0.1010591313,-0.0280052852,-0.0091898311,-0.0030207508,-0.1722105145,0.2407088727,0.0162441749,-0.0466985479]],"hackathon_name":"R.U. Hacking? Mini Hack!","index":377,"project_description":"Side scrolling plat-former built in 3 hoursWe wanted to make a game. However, it's our first experience in game development, therefore we decided to create a game with a simplistic art style, similar to limbo. We wanted to try and recreate an atmospheric and somewhat creepy experience that Limbo was able to capture. At the same time, we understood that our ambition to create such a game in just three hours, with our limited experience, was a long shot! Hence we were also inspired by games such as 'The Binding of Isaac' created in game-jams of their own in extremely short time frames. This resulted in us learning how to use 'gamemaker' as a game engine and 'GIMP' for level design. The short time frame allowed us to appreciate the task to create quality games. Whilst under such time constraints we were unable to include an initial key feature of ours which was to use sophisticated light mechanics. Unfortunately, our constraints didn't allow us enough time to learn how to use open GL shaders. However, despite this, we were still happy to create a functional prototype of our initial level. We managed to design the level and character externally and then implement the separate code we wrote in gamemaker.R.U. Hacking? Mini Hack!James Riley\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 25, 2017 02:26 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Equinox","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/equinox-bu2kv1","keywords":"game,time,create,use,us,level,experience,initial,constraints,games,gamemaker,limbo,short,design,however,wanted,character,hence,happy,gl"},{"level_0":378,"hack_vector":[[0.1571089774,-0.162381798,0.019782573,0.1088751405,-0.0450913683,0.1717492491,0.1634923667,-0.0547224209,-0.0354936644,-0.0272763036,-0.012447184,0.0515746437,0.1266278028,-0.0725886673,-0.0191654637,0.0751634538,0.2473990023,0.0455156304,0.0545170866,0.0639977381,-0.1761281192,0.0025385411,-0.0445344895,-0.0560087375,0.19490318,-0.0192674659,-0.078072302,-0.1812327802,0.0258882605,-0.0680579096,0.0332542621,-0.0924712345,0.0868111923,-0.037975233,-0.0458134636,0.0199339427,0.1458610743,-0.0983557254,0.0162759293,0.1080044731,0.0703676865,-0.1543626189,-0.1814546585,-0.0363620855,-0.0632671192,-0.0363300964,0.0467957556,0.0094420398,-0.0206659958,-0.1747163236,-0.0107962387,0.0474807806,-0.1078603715,-0.0602445863,-0.0885817483,0.1416408867,-0.1630793214,0.0778084546,-0.0211541373,0.071752362,-0.0067070634,0.0359717794,0.0336851627,0.06127204,0.1536787152,-0.0497543775,-0.1397566497,-0.1683389843,0.0015272893,0.0030819876,0.0624721684,-0.0257740468,-0.0185260158,-0.1452762336,-0.0845393538,-0.0374026746,0.1937700659,0.034370929,0.0993126631,-0.1474548876,0.1039559245,0.1499124318,-0.0074224584,0.1286917478,0.1590287685,0.1599356085,-0.1447708756,0.0872114971,0.0138073387,-0.1201002896,-0.0637053177,0.1189968288,0.0008960443,0.0387431271,0.0875975266,-0.1072640866,-0.0452795103,0.1388643086,0.1217130572,-0.0272607319]],"hackathon_name":"R.U. Hacking? Mini Hack!","index":378,"project_description":"6 Hours building a Bejeweled like game using javaR.U. Hacking? Mini Hack!Suhail Parmar\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 25, 2017 02:26 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Bejeweled_kinda","project_tags":["java","eclipse"],"project_url":"https:\/\/devpost.com\/software\/bejeweled_kinda","keywords":"ran,proud,next,learned,kinda,inspiration,finishing,challenges,built,bejeweled,accomplishments"},{"level_0":379,"hack_vector":[[0.1292965114,-0.0945951194,-0.0372992717,0.0106056202,-0.0238449723,0.1198070049,0.1995056272,-0.0115048662,-0.0029822667,-0.0332998037,0.0071955863,-0.0791584924,0.1143523827,-0.061503306,0.0525575653,0.0303761289,0.2303697169,0.0114588421,0.0245785788,0.1421639323,-0.2478469312,0.0243780632,-0.0349075943,-0.0300861932,0.0802137479,-0.0156117305,-0.0257236846,-0.1719540209,-0.0170618687,-0.1120930091,0.0435847603,-0.1232668832,0.0274238549,-0.0884991214,0.0005270296,-0.0330161937,0.1036087796,-0.1525742412,-0.0619278662,-0.0042611035,0.0242747255,-0.1336582452,-0.1477751881,-0.0586105697,0.0820822045,-0.0907823592,0.0145686772,-0.0635564476,-0.0406242535,-0.2201749235,-0.1451633126,0.0055198572,-0.0898816437,-0.0310327969,-0.1874314696,0.1652057022,-0.1060276255,-0.0424831212,0.0453591868,-0.1118693501,-0.0757835284,0.015254071,0.0742399246,0.0453154966,0.100048095,0.0175200347,-0.1026387364,-0.1278028488,0.0526582077,0.0252215806,0.0702200159,-0.0631181896,0.0199888609,-0.1123664752,0.0180252604,-0.1464990675,0.1536940485,0.0110714957,0.0186338536,-0.1333806515,0.1176986024,0.1661569327,0.0483522043,0.1802104115,0.0878101289,0.1896808296,-0.105910629,-0.0426062681,-0.0339953601,-0.0800427645,-0.145886898,0.0524277501,0.090880774,-0.0559098125,-0.0210919064,0.0182771515,-0.1677191556,0.2287120521,-0.0040232656,-0.0848886967]],"hackathon_name":"DurHack","index":379,"project_description":"Alexa skill lets you know when to leave for a flight based on check-in rules and traffic, along with baggage\/food infBoth of us fly a lot. Check-in rules vary from airline to airline, and depending on where you go, so it's nice to have one place to ask.We ask the user for a flight number, and then send a series of API calls to the FlightAware interface. This lets us know where the flight is going, coming from, what airline it is, etc. With the origin and destination, we class the flight as European, Domestic, or International. We then lookup what the baggage and check-in rules are for this airline, for this type of flight. We also determine how long it would take to get to the airport by the user's preferred method, using the Google Maps Directions API.With this and the check-in information, we then determine when the user should leave home. The user can then ask follow-up questions about their bag allowance, and whether meals are served onboard, which will then be answered.It works. Miraculously.Alexa is really limited in terms of understanding speech. You need to template every conceivable way someone could phrase the question, there is no built-in aliasing.In the Alexa skills API there is no way to retrieve the location of the user, not even the address hardcoded into the Alexa account. These details are exposed to only a small set of industry API users, such as Uber, granting an unfair competitive advantage.Apple are dicks. When charging a mobile device through a Macbook, they reduce the charge amperage for any non-Apple device. I suppose if you're incapable of building quick charge into your own products, you can still look good by making everything else charge slowly.More follow-up questions. Pulling your flight number from email confirmation so that you can just ask about \"my flight\", without having to specify.DurHackSimon Vahr\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:19 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Elloplane","project_tags":["alexa","flightaware","amazon-web-services","google-maps"],"project_url":"https:\/\/devpost.com\/software\/elloplane","keywords":"flight,user,api,airline,ask,check,charge,alexa,questions,determine,number,rules,apple,follow,device,us,way,every,industry,domestic"},{"level_0":380,"hack_vector":[[0.1352855414,-0.0934006721,-0.0313551351,0.0309253149,-0.016718287,0.1142158359,0.1962213218,-0.0108606545,-0.026013989,-0.0083130766,0.0154918507,-0.0892810747,0.1429391056,-0.069143258,0.077316314,-0.0062965434,0.1925292164,-0.0108633647,0.0416242816,0.1272170097,-0.243446067,0.0421393625,-0.0417432636,-0.0097235953,0.0934955329,-0.0314909928,-0.0260501243,-0.1712852865,-0.0275078174,-0.0902365968,0.0639357492,-0.1203417704,0.0176786352,-0.0837204978,-0.0121111907,-0.0190306753,0.1077954546,-0.1492624879,-0.0747020543,-0.0159512218,0.0352183171,-0.132946685,-0.1447669566,-0.0283356272,0.0751625448,-0.0570849627,0.0112949507,-0.0949752107,-0.0146761034,-0.2016803175,-0.1627874374,0.0097735403,-0.1069912314,0.0173363686,-0.2126169801,0.1621504873,-0.1236577258,-0.0345343128,0.043947015,-0.1262819618,-0.0820353627,0.0248413645,0.0791642293,0.0543890148,0.1053972915,0.0296220426,-0.0859125182,-0.1156439409,0.0290393028,0.0154697942,0.0682281628,-0.0541087762,0.0244434085,-0.1111383066,0.0520944856,-0.1364153177,0.1671463847,-0.0024341953,-0.0005443047,-0.1263480932,0.1284145862,0.1548385471,0.068513751,0.1573029757,0.0935554057,0.199655965,-0.087522015,-0.0559038669,-0.0216279812,-0.07057219,-0.1460059136,0.0452182889,0.1045804024,-0.0559152961,-0.0156662408,0.0167498831,-0.1782430559,0.2361200303,-0.0044694431,-0.0768474936]],"hackathon_name":"DurHack","index":380,"project_description":"Don't let a night out make you careless! Use Safety App to show you the safest way home in Durham.HeatmapGiven recent events, we feel it is important for Durham students to find their way home safely after a night out. With the release of lots of data by Durham County Council, we thought this provided an opportunity to improve the safety of students in Durham.After a heavy night out, it's important to get home safe. This means following lit streets - and, particularly in Durham - staying away from the river, and being conscious of traffic. Get Home Safe combines the familiarity and ubiquity of Google Maps with never-before-seen data points from Durham County Council to show clubbers the safest route home after a night out.\nGet Home Safe highlights the density of streetlights and traffic across County Durham to visually indicate to the user the safest path through the city.Get Home Safe is a web app using node.js and MySQL on the backend, and revolves largely around the free Google Maps API on the frontend. Each team member took care of separate parts of the project, including developing the backend, populating the database, interpreting and visualising the data, and taking care of the front end. \nOur database contains approximately 80,000 entries - each representing the coordinates of a street light in County Durham. Upon loading the web app, the backend dynamically sends the required entries to the user, depending on their map viewport.One of the initial challenges was converting the data into a usable format. The coordinates had to be bulk converted from 'easting and northing' format to 'longitude and latitude', which is no small task when there are 80,000 points to convert! We then had to load these into the database, which proved to be difficult due to the sheer number of entries.\nAnother idea we had was to reduce the number of data points with a clustering algorithm. However, due to time constraints, it proved unfeasible to comprehend all the complex modules and techniques that would be required.\nWe attempted to map each data point to a street - this in itself proved difficult due to the method by which Google Maps stores information about its streets and the sheer processing power this would require.\nWe used Google's API to plot lines on the roads that were lit (i.e. that had street lights on them), and this work (although incomplete) can be seen on the Lit Roads page.Our interface is user friendly, responsive and well optimised. Having a nearly finished - and, crucially, usable - product in such a short space of time is something to be proud of, and we feel that our product could be tweaked and released as a commercial app. \nThe map data is surprisingly responsive - by dynamically loading the data points that are needed and then using Google's API to convert this to a heatmap means the work done by the browser is far less than that if we were to load all 80,000 data points into the webpage.Using Git is something many of us had not experienced before, but now we feel we have a certain level of ability and are able to use it in future projects.\nnode.js runs the backend of our project, and we have learnt more about making a 'static' site using Express.\nWe learnt adaptable skills in how to take third party APIs and put these together to realise a complete idea.The plan is to further develop the Lit Roads idea, to best show the user the safest route home. We could also further optimise the site to work on small mobile devices. \nWe could even use more data from other county councils to expand our reach, or to include other Durham data such as footfall, and combine all this to find even safer routes home.DurHackI attempted to use a clustering algorithm to condense data. I formalized the use of the google maps api using javascript.AXGreenen\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:51 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Get Home Safe","project_tags":["node.js","google-maps","html5","css","javascript","mysql","bootstrap"],"project_url":"https:\/\/devpost.com\/software\/get-home-safe","keywords":"data,home,durham,county,google,points,get,safe,lit,user,using,backend,night,street,database,idea,due,entries,could,safest"},{"level_0":381,"hack_vector":[[0.1462266743,-0.1033834517,-0.0161593519,0.0450187661,-0.0213780403,0.1329238415,0.2009663582,-0.0310288388,-0.0393356085,0.004650678,0.0172579885,-0.0755524784,0.1462453753,-0.0720154569,0.0673293471,0.0280495733,0.2175341398,0.0027335731,0.039878007,0.1220863909,-0.2245020866,0.0525201112,-0.0606240556,-0.0230488572,0.1207761541,-0.0243898556,-0.0394863114,-0.1967202574,-0.0275420118,-0.0767101794,0.0637406111,-0.1206613779,0.0411073342,-0.096837081,-0.0223394185,0.0015356038,0.1223301068,-0.1400170624,-0.0561607443,0.0114689711,0.0281445924,-0.1580263376,-0.1671681106,-0.0226067603,0.0395936817,-0.0528975613,0.0143986847,-0.0747591332,-0.018693801,-0.2076298743,-0.1322632879,0.0134560894,-0.1089609712,0.0067961183,-0.1762485951,0.1589490473,-0.1402276307,0.00990267,0.025860941,-0.0865494385,-0.0661339089,0.0305920895,0.0744065791,0.074850224,0.1124698669,0.0007428409,-0.1043152809,-0.1336271912,0.0284777731,-0.0019911793,0.0679497719,-0.0542713031,0.0193180852,-0.1210861951,0.0270407982,-0.1190726906,0.1886797994,-0.0063192379,0.039694909,-0.1283751726,0.1388758421,0.1531182379,0.0781884715,0.1453493088,0.1099187657,0.186712116,-0.1112742126,-0.0281833429,0.0018791364,-0.0893855691,-0.132718429,0.0604900531,0.0899788961,-0.0433732793,0.0146571482,-0.0153759653,-0.1467777938,0.2156963199,0.0267696902,-0.0725721866]],"hackathon_name":"DurHack","index":381,"project_description":"Data Visualizations of particular datasets provided by Durham County CouncilThe website we have built visualizes places in Durham County where you can find access to the internet, car parks, public libraries and cemeteries.We obtained CSV websites from Data Mill North, converted the Easting and Northing coordinates to Latitiude and Longitude and then used Google Maps API to plot markers on the map. Quite simple actually :)The datasets did not provide Latitudes and Longitudes and so we had to convert the Easting and Northing coordinates into Latitude and Longitude. We had to make sure that the conversion presereved the format of the dataset.DurHackI worked with the Google Maps API and one of the provided data sets for visualizing some locations on the website's map. I was also involved in developing the idea and the name of the project.Rifad Lafir\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 06:54 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"WiLife","project_tags":["google-maps","html","javascript"],"project_url":"https:\/\/devpost.com\/software\/durhamvisualisations","keywords":"longitude,built,easting,coordinates,northing,websites,data,internet,google,format,find,durham,datasets,dataset,csv,latitude,county,converted,convert,conversion"},{"level_0":382,"hack_vector":[[0.1366064548,-0.119947277,-0.0121247713,0.0500171743,-0.028525291,0.1344589144,0.2127836198,-0.0199797601,-0.0335271619,-0.0101230796,0.0148786381,-0.0375678353,0.1365825832,-0.0732211396,0.0457676835,0.0485065989,0.2374093235,0.0067526707,0.0424941666,0.122739628,-0.2371141911,0.0344095305,-0.0488011315,-0.0413341038,0.1255698949,-0.0210058019,-0.058080215,-0.1821102798,0.0054514143,-0.0991853774,0.0555273369,-0.1132690907,0.0427755974,-0.0720779002,-0.0167636015,-0.0080644367,0.1267735958,-0.1343189627,-0.0288137458,0.0243753809,0.0401417837,-0.1569050848,-0.1685129553,-0.0450139232,0.0379902199,-0.0528257564,0.0189606901,-0.0570853315,-0.012406081,-0.2046326101,-0.0956480578,0.0208571367,-0.1067135185,-0.0104392935,-0.177436173,0.1563029885,-0.1524893641,0.00237602,0.0351906568,-0.0718825608,-0.0535018332,0.0330571607,0.0834303349,0.0688269585,0.1226962283,-0.0044806991,-0.1135381237,-0.152878806,0.0413738675,0.0198425706,0.0650248453,-0.0490765236,0.0036142766,-0.1195415109,-0.0087335967,-0.1317880601,0.1682013422,0.0095832106,0.0486779213,-0.1451685727,0.1242017597,0.1632913947,0.0473487675,0.160407111,0.1185278967,0.1939729303,-0.1271970868,-0.0121441698,-0.0173402317,-0.1083487645,-0.1343497634,0.0683959872,0.0771885589,-0.0265954677,0.0191228352,-0.0076778317,-0.1441704631,0.1826185882,0.0413257331,-0.0627267286]],"hackathon_name":"DurHack","index":382,"project_description":"Gives the user a comparison between cycling and taking the bus along a given route.We aimed to create a website which could compare the ease of cycling along a given route with taking the bus, given criteria such as distance elevation change. Though not finished and polished, we have a solid foundation on which the service could be built in order for the user to make informed decisions on which mode of transport to use.DurHackRoss Knapman\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:58 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Transport Comparison","project_tags":["python","html","css","flask","openstreetmap","google-maps","github"],"project_url":"https:\/\/devpost.com\/software\/durhack2017-9wk25e","keywords":"could,given,website,finished,along,built,bus,change,compare,create,criteria,cycling,decisions,distance,ease,elevation,foundation,user,informed,make"},{"level_0":383,"hack_vector":[[0.1478668898,-0.0933641568,-0.0272211321,0.0336925574,-0.0228890833,0.1336340606,0.2003684193,-0.0279707592,-0.0182479508,-0.0218380019,0.0078041134,-0.0709328428,0.1417786032,-0.0712621063,0.0511798784,-0.0063552693,0.2066480368,-0.0019651949,0.0524184182,0.1203500107,-0.240586713,0.0289589949,-0.0359419994,-0.015071433,0.1015130877,-0.0259055775,-0.0340789221,-0.1631722003,-0.0184975117,-0.1055663675,0.0576562136,-0.1258349419,0.0266891271,-0.0711199716,-0.0122414939,-0.0226059016,0.1245545074,-0.1456315368,-0.0696506575,0.0041680429,0.051384192,-0.1299230009,-0.1387997717,-0.0431428179,0.0637116879,-0.0718371719,0.0179137085,-0.0769000798,-0.0273915306,-0.2032961398,-0.1573078632,0.0255590472,-0.1106693596,0.0041332687,-0.2101198286,0.1568237692,-0.1312455535,-0.0355528556,0.0391364805,-0.1036708206,-0.0759931207,0.0187573414,0.0750299618,0.046946682,0.11320474,0.0228279587,-0.0966672525,-0.1201799139,0.0243712738,0.0277883932,0.0701426193,-0.0556184873,0.0147017557,-0.1166518927,0.0393662117,-0.1285592318,0.1731326133,0.0173772816,0.0053257914,-0.1414655596,0.1157158464,0.157190457,0.0445664041,0.1613988578,0.1088386998,0.2007938623,-0.0994893834,-0.0430345349,-0.0236872323,-0.0786985159,-0.1373285055,0.0522648245,0.0943700895,-0.037573453,-0.0076548066,0.0094343768,-0.1679609716,0.2370874435,0.010217757,-0.0738606751]],"hackathon_name":"DurHack","index":383,"project_description":"Looking for card data near youHave you ever gone into a store, or a restaurant, and realised that you didn't have cash on you? That's where our inspiration comes from.Our native android app takes card machine data from across the web, and plots on a map whether nearby restaurants and shops in Durham take card. It also plots nearby ATM machines, so you can easily spot where your closest cashpoint is. It keeps itself up to date by collecting user feedback.We used python as a server, also to scrape the data that we need from the web. The frontend is built in react-native.The biggest challenge we ran into was collecting the data. This kind of application hasn't been done before, so the data was difficult to collect. The solution was to scrape from LINK (for ATM data), as well as American Express credit card locater. This means that not every shop\/restaurant is covered. This is why we came up with the idea of crowd-sourcing. As you can see from the app, the majority are covered. However, once people start using it, the idea is that the database will just keep growing and growing.Producing an app like no other. This is something that is not in the market, and highly useful on a day to day basis.We spent a lot of time setting up our environments, so having stuff installed pre-hack is a must. Also, we overestimated how much data was out there. However, our workarounds to these problems have contributed to a successful hack.We're adding support for Apple\/Android pay, as well as more debit cards. This functionality is already in place, however we are waiting for an authentication code from MasterCard.DurHackLeah Clark\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:58 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Cardopedia","project_tags":["react-native","flask","python","javascript"],"project_url":"https:\/\/devpost.com\/software\/cardopedia","keywords":"data,app,however,also,card,ran,restaurant,collecting,covered,plots,nearby,day,native,growing,hack,idea,scrape,inspiration,built,well"},{"level_0":384,"hack_vector":[[0.1275677532,-0.1087792814,-0.0371296331,0.0173168499,-0.0235640332,0.1129265502,0.1784512401,-0.0211395696,0.0023228521,-0.0525343232,0.0140254181,-0.0751725957,0.1294559389,-0.0596521087,0.0491442382,0.0139198033,0.212141782,0.0016592877,0.0338289998,0.1406166404,-0.2465727776,0.0261943135,-0.0264893919,-0.0221516863,0.0747169852,-0.024255652,-0.021177033,-0.1523204446,-0.027887566,-0.1238884255,0.0403718166,-0.1196389571,0.0253546052,-0.0704317093,0.0073508872,-0.0502382778,0.109511286,-0.1573322266,-0.0737729296,-0.0137513177,0.0381451212,-0.1162702292,-0.1465025097,-0.0561371893,0.0713159516,-0.087997593,0.020083528,-0.0729858205,-0.0360685661,-0.2105574161,-0.1646107584,0.0129102133,-0.0943657607,-0.0296469834,-0.2168035209,0.168818891,-0.1004656404,-0.0589444786,0.0572930947,-0.12010701,-0.081910193,0.0113215074,0.0725449026,0.0407684073,0.0907271355,0.0420804881,-0.1003766358,-0.1199030876,0.0369804874,0.0363857932,0.0734805092,-0.0620068721,0.0184039455,-0.1086541638,0.0296265166,-0.1296008676,0.1547679454,0.0059839729,-0.0012720291,-0.1333080977,0.1054714397,0.1652008891,0.0323110335,0.1803990006,0.0944494978,0.1858943105,-0.1016773582,-0.0635283664,-0.0438889042,-0.0697851032,-0.1382012814,0.0473666415,0.0998197123,-0.0586484,-0.0299673788,0.0059559438,-0.1854396164,0.2408591062,-0.0068716505,-0.0889044255]],"hackathon_name":"DurHack","index":384,"project_description":"DUber - Providing a safe journey home for the students of Durham University.Durham is wonderful place but one thing it lacks is good public transport and taxi services. Meaning that every night many students very far from home are strander, drunk, cold and incapable of looking after themselves after a night out. Yet they still make the arduous journey in the middle of the night intoxicated back to their colleges. This can be especially dangerous if you have to go through dark wooded areas of if you are by yourself.Many times I have had to take my friends home on a 30minute walk or just stumbled across collapsed men and women in the street who were too drunk to go home. The student union had an answer to this. A night bus, it would pick you up no matter where you are and take you home for \u00a32. Problem is that is not advertised well (ask anyone if they know what it is, they likely won't - the number is hidden on a 95 page document), notoriously difficult to get hold of and not very user friendly to use (you have to describe where you are to the driver over the phone = nightmare). Factor in the fact that your drunk and you can see why students don't use this excellent service and put themselves at risk by going home.The night bus is the safe way for lone students to get around Durham safely:When studying late in the library to get home\nTo get to and from the train station late at night\nTo travel between colleges\nTo get to or from late bars and nightclubs\nYou\u2019re visiting friends\nAt the cinema or theatreDUber is essentially an SOS get me home now app. Let me set the scene, a student on night out decided that it would be wise to down a bottle of vodka and now needs to head home. He lives in the hill college, half an hour away. He pulls out the app, hits the pick me up button. The nightbus driver is pinged his picture, location and the student is given an ETA. The driver and the student both get eachothers numbers and can contact eachother if the student or driver can't find each other. The App handles the payment and whether the student paid. We get all the data from CIS so the driver and the union know exactly who are using the service.The app consists of two major components. An app which the driver and student will use and a PHP REST API. The API scrapes the student data from Durham username and password and handles all the DB operations and provides the endpoints which the app relies on.Operating around the constrains of the universities systems was the only challenge we faced. Trying to get a way to authenticated on Durham's portal using students passwords and username was quite a challenge. (This was omitted from this release due to security concerns, will be work on and put back in at a future date)We have a working app and the API is functional. Although both need refining we have proven that it is feasible and intend on carrying on development on the project and handing it over to the student union.There is a genuine potential here. I have called the nightbus to get many of my friends home. But hardly anyone knows about it. I have seen many people frantically try to ring cab companies or call an actual uber. Only to be disappointed. If they are really really really lucky they will run into a rep that will take them home. But if not they are stranded and if they are in the hill colleges they have a good half hour walk just to get home. We intend on developing this fully and giving it to the union for free. I think this will be especially helpful for freshers and will significantly increase the safety of students.DurHackMaksud Rahman\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:56 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"DUber","project_tags":["php","swift","json","mysql","objective-c"],"project_url":"https:\/\/devpost.com\/software\/duber-0et241","keywords":"home,get,student,night,app,driver,students,many,durham,union,friends,colleges,use,take,drunk,really,api,late,data,handles"},{"level_0":385,"hack_vector":[[0.1531391293,-0.1238308102,-0.020063309,0.0662159622,-0.0244906694,0.154639706,0.198398754,-0.0466322638,-0.017346831,-0.0242931377,0.0100840917,-0.0443626791,0.139339745,-0.067727156,0.0401059687,0.013294531,0.2273607999,0.0127792694,0.0459068194,0.1170072556,-0.2373450696,0.0323481672,-0.0423484966,-0.0216493737,0.1346770525,-0.022564996,-0.0460900441,-0.1845038086,-0.0154488524,-0.0922246054,0.0561941341,-0.1236168966,0.0465107001,-0.0727914497,-0.0135760531,-0.0219024718,0.1292811632,-0.1453696787,-0.0477574654,0.0139347501,0.0563102216,-0.1517579257,-0.1633651406,-0.0404044762,0.030939851,-0.0450463556,0.0192485135,-0.05893768,-0.0326256156,-0.2077140957,-0.1263998449,0.0345028229,-0.109182559,-0.0077017196,-0.1928874403,0.1551924497,-0.1350944489,-0.0100663044,0.0347787701,-0.0714229047,-0.068392843,0.0191249102,0.0712217987,0.0424170457,0.1100550741,0.0199775044,-0.1053006649,-0.1353229284,0.0201644041,0.0273876227,0.0727443993,-0.0495780744,0.0284015983,-0.1316277087,0.0091952495,-0.1068680286,0.1765335202,0.0088172648,0.0280243549,-0.1341367513,0.1148681045,0.1553197503,0.0422058292,0.1678648293,0.1177631468,0.19708547,-0.1133713126,-0.0224877577,-0.0235949829,-0.0758719891,-0.1173249111,0.0742522627,0.0745613798,-0.0331326351,0.0132601401,-0.0176616628,-0.1392466873,0.2253122628,0.0264671538,-0.0624173768]],"hackathon_name":"DurHack","index":385,"project_description":"A real world stealth game based in Durham.We are simple men, we saw cameras, we liked.Takes traffic camera data and where they can see, and is able to detect if you would have been seen.We pressed the green arrow button and gradle went to town..Ryan.\nLack of John.\nOverambitious project.\nGoogle play OAuth.\nBlocking image reads.\nSettings bar being a pain.\nCold outside.\nToms laptop.Managing with only one hour of sleep.Get more than one of sleep.Safety Mode (allows you to stay safe on a potentially dangerous walk home)\nBugfixes\nOptimizations\nUpdated GraphicsDurHackI worked on the backend (which was my first time deploying a Django project). I also assisted with the android app (mostly linking the backend with the app, and dealing with the custom geofencing).Oliver McLeod\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:56 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"DurHide","project_tags":["java","android","python","css","javascript"],"project_url":"https:\/\/devpost.com\/software\/durhide","keywords":"sleep,one,would,google,gradle,graphics,green,home,hour,image,durhide,inspiration,john,lack,laptop,learned,get,detect,managing,data"},{"level_0":386,"hack_vector":[[0.1532839984,-0.1135115251,-0.0194104444,0.0512241796,-0.0123219555,0.1450383514,0.1894875169,-0.0424208343,-0.0331572704,0.0090026967,0.0266949795,-0.0770838633,0.1512981802,-0.0678837746,0.0721507519,0.0127207423,0.2116996348,-0.0028962425,0.0473083369,0.1055743024,-0.2315260917,0.0560567006,-0.0523486659,-0.0141477082,0.1232449636,-0.0383136496,-0.0320007168,-0.2041186392,-0.0341274627,-0.0733483508,0.0914696157,-0.1268722713,0.0411325358,-0.0916876197,-0.0273623671,-0.0107656205,0.1148363575,-0.1362364292,-0.0436556563,-0.0134416493,0.0408786684,-0.1547315866,-0.1764599383,-0.0239288285,0.0414066501,-0.0332451239,0.009205007,-0.0735891387,-0.0192532744,-0.206901148,-0.1309692562,0.0157003757,-0.1057180539,0.0138834873,-0.1997090429,0.1457919031,-0.1433873326,-0.0064873802,0.0368129648,-0.0859901831,-0.0735121146,0.025166804,0.0800629333,0.0532541834,0.1030915752,0.0110857794,-0.0925929993,-0.1284603775,0.026661776,0.0146200024,0.0813991949,-0.0506242961,0.0320632644,-0.1191873178,0.023495838,-0.1204929277,0.1838231534,0.0010937465,0.0324245133,-0.1237990856,0.1292072684,0.1535743624,0.0622102246,0.1631426215,0.1081256792,0.1944390535,-0.1070075855,-0.0331426561,-0.0099509778,-0.0827702209,-0.1247751787,0.0640619919,0.0830731615,-0.0461495332,0.0039195926,-0.0030691975,-0.1362515986,0.2109327316,0.0231103096,-0.0782074928]],"hackathon_name":"DurHack","index":386,"project_description":"Zombie Survival MLH ProjectSpritesheet TilesSpritesheet text and charactersMap of Durham roadsWater in DurhamInitial population densityYou went to Durhack, Zombies came, Mitchel is a meme, survive!Warning: In \"Beta\"DurHackGit Setup\nGraphics\nMainManagement\nInitialPlayerSetupI helped!\npresentation, data and events related classes! wooooo!I worked on importing map data, by using the google static maps api and a matlab script to edit and improve it. I then worked together with Callum on the Java Map class, that contains the map representation and infection spreading algorithms. Finally I wrote a method to colour code and visualise the infection percentage on the map.I did something to do with events and event manager, also wrote some stories and events. Helped with data conversions. Half of presentation done by me as wellI with Daniel wrote the map class, which simulated virus spread through the population of Durham as time passed and held global city data, and myself wrote the location class which stored location data for landmarks around the city. The virus simulation was quite challenging to get to work convincingly as the wrong balance of variables would mean its spread would grind to a halt. I also cleaned up the people and main classes to make them more easily readable and wrote the event triggers for random encounters.Jordan Craig\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:19 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ZomSurv","project_tags":["java","matlab"],"project_url":"https:\/\/devpost.com\/software\/zomsurv","keywords":"zomsurv,zombies,went,warning,survive,story,mitchel,meme,durhack,docs,came,beta"},{"level_0":387,"hack_vector":[[0.1342182755,-0.1047802418,-0.0204277541,0.0358146504,-0.0261494629,0.1346109211,0.204317376,-0.0309722777,-0.0229954142,-0.016266685,0.015544611,-0.0516011864,0.1282420307,-0.0668964759,0.0497050099,0.0324834399,0.2406849861,0.0057695876,0.0376114473,0.1265683025,-0.239652127,0.0331732966,-0.0416105241,-0.0349692963,0.1083818376,-0.0212791003,-0.039397195,-0.1931602359,-0.012781796,-0.0962436423,0.0566020124,-0.1227205694,0.0409118123,-0.0859107822,-0.0196379833,-0.014446483,0.1115920693,-0.1365203112,-0.0479534678,0.0137533145,0.0247486215,-0.1480534673,-0.1568172276,-0.0500132293,0.0465328805,-0.0710868463,0.0115722483,-0.0565101765,-0.0223282874,-0.2091735005,-0.1195794791,0.0115522882,-0.1016212106,-0.0172428992,-0.1765121967,0.1603587717,-0.1400060505,-0.0094639659,0.0301948432,-0.0877098143,-0.0680650175,0.0265499,0.0742632225,0.0597950704,0.1112715974,0.0038505143,-0.1140574291,-0.1375728548,0.0417356938,0.0201658513,0.0678028464,-0.0578388162,0.0192283709,-0.1197471842,0.0079152752,-0.1313439459,0.1718242913,0.0025066871,0.0424890704,-0.1398846805,0.1284781247,0.160419181,0.0556768328,0.17216748,0.111280635,0.1928036958,-0.1196716875,-0.026542712,-0.0177811086,-0.0898958296,-0.1441932768,0.0605158322,0.0832369924,-0.0346857533,0.0004790313,-0.0053678402,-0.1538653523,0.2064484507,0.0304927379,-0.0809997991]],"hackathon_name":"DurHack","index":387,"project_description":"An online tool to model pedestrian traffic, simulating crowds based on historical data from the place, date and time.No-one likes arriving in town only to find you can't move for the crowds around you. Our online tool allows you to easily check how busy your destination is likely to be, in the same way to checking the weather forecast, without having to leave the house.The tool queries historical data of footfall on selected days, months and times, in specified locations, to calculate average footfalls in certain conditions, and show the user what the footfall is likely to be. This footfall is modelled as crowding agents, displayed upon a map of the specified location, with the agents avoiding obstacles such as buildings.We used Coffeescript for modelling the boids, with the database in SQL, and JS and PHP scripts linking it together with google maps.DurHackgenieirock\n          started this project\n\n          \n            \u2014\n            \n\n                Jan 29, 2017 07:44 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Pedestrian Congestion","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/pedestrian-congestion","keywords":"database,footfall,leave,google,crowding,modelling,maps,map,scripts,server,boids,specified,together,likely,agent,agents,js,tool,obstacles,historical"},{"level_0":388,"hack_vector":[[0.1358644366,-0.1708131284,-0.0058221635,0.051543463,-0.032103084,0.1395111382,0.185717836,-0.0984400585,-0.0252431184,0.0044657979,0.0514624678,0.0236338358,0.1242306903,-0.0438385382,0.0913197473,-0.0151182748,0.2118406445,0.0039329664,0.0461860746,0.0901526138,-0.212927863,0.0746847168,-0.0295707881,-0.0355224237,0.1156430393,-0.0153093562,-0.0015743973,-0.2024766505,0.0011141071,-0.0642808005,0.0647807717,-0.1666608304,0.036260359,-0.0824158117,-0.0377102494,-0.0725746825,0.1110093743,-0.1287579834,-0.0730348751,-0.011388544,0.018242659,-0.1624401212,-0.1190223694,-0.077373594,-0.0046661291,-0.0053569069,0.0260042381,-0.021162495,-0.0593233258,-0.1633240879,-0.0870537981,-0.0078982124,-0.1284354031,-0.0058479942,-0.1390818506,0.1422736496,-0.1118139103,0.0337745138,0.0132084982,-0.0372446887,-0.0590650216,-0.0002978744,0.0752640888,0.0645688847,0.0690502301,0.0024625969,-0.1427103132,-0.1247586533,0.0395259596,0.0321867801,0.07151182,-0.0567614846,0.0871771425,-0.1427502483,-0.0158436354,-0.1678303927,0.171415478,0.0201210827,0.0713572726,-0.1276900768,0.1580734849,0.1652599573,0.0341272317,0.2051961869,0.1628880501,0.1562301517,-0.1639071852,-0.0285265222,-0.0085065467,-0.079452984,-0.1396129578,0.0877411067,0.12574929,-0.0572835244,0.0628173649,-0.0647921637,-0.0937359929,0.1697147936,0.0343391113,-0.0601408444]],"hackathon_name":"Code for the Kingdom Nashville 2017","index":388,"project_description":"'Empower Heroes' is a Web VR App used to educate Youth on ways to Serve Their Homeless Community.Iframe Element with 360 curved-imageWeb VR, The Contributor (newspaper), FaithUnity (newspaper), Room In The Inn (mission).Educates Youth on Ways to Serve Their Homeless Community.Here's an open-source look at my HTML, JS, and A-Frame Engine:<!DOCTYPE html>< a-animation attribute=\"rotation\" dur=\"10000\" fill=\"forwards\" to=\"0 180 0\" repeat=\"indefinite\">\n  --><!-- NIGHT TIME IMAGE - Donate to Homeless by volunteering with 'Room In The Inn' -->- Doug Old (3\/11\/2017)<\/p>\n\n<p>function Contributor(){ \n    \/* Variable for &#39;Contributor Vendors&#39; element <em>\/\n    var Vendors = document.getElementById(&quot;CONTRIBUTOR&quot;);\n    Vendors.style.visibility=&#39;visible&#39;;\n     \/<\/em> Variable for the &#39;Close&#39; [X] element *\/\n    var X = document.getElementById(&quot;Close&quot;);\n    X.style.visibility=&#39;visible&#39;;\n    }<\/p>\n<pre class=\"language-nolang\"><code>function RITI(){\n\/* Variable for &#39;Room in the Inn&#39; element *\/\nvar RITI = document.getElementById(&#39;RITI&#39;);\nRITI.style.visibility=&#39;visible&#39;; \n\/* Variable for the &#39;Close&#39; [X] element *\/\nvar X = document.getElementById(&quot;Close&quot;);\nX.style.visibility=&#39;visible&#39;;\n}\n\nfunction CloseAll(){ \n\/* Variable for &#39;Contributor Vendors&#39; element *\/\nvar Vendors = document.getElementById(&quot;CONTRIBUTOR&quot;);\nVendors.style.visibility=&#39;hidden&#39;;\n\/* Variable for the &#39;Close&#39; [X] element *\/\nvar X = document.getElementById(&quot;Close&quot;);\nX.style.visibility=&#39;hidden&#39;;\n\/* Variable for &#39;Room in the Inn&#39; element *\/\nvar RITI = document.getElementById(&#39;RITI&#39;);\nRITI.style.visibility=&#39;hidden&#39;; \n}\n<\/code><\/pre>\n<p>The A-Frame Engine only runs on Firefox web browsers.Developing Ministry App for Youth Groups, and Giving Honor to Veteran David HernandezA-Frame Engines allow user interaction with inline JS Event Handlers.Once the webpage is published, our team hopes churches will enjoy using it as an online resource for Youth Ministry.Code for the Kingdom Nashville 2017Cody Taylor\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 11:28 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Empower Heroes","project_tags":["html","javascript","photoshop"],"project_url":"https:\/\/devpost.com\/software\/empower-heroes","keywords":null},{"level_0":389,"hack_vector":[[0.134546876,-0.0994434878,-0.0288819857,0.0310482383,-0.0242914893,0.1238914207,0.2016242743,-0.0158520266,-0.0162691828,-0.0208095554,0.0128325922,-0.0551531985,0.129689917,-0.0660685152,0.0614417754,0.0196822956,0.2282180488,0.0079358444,0.0293468684,0.1230983064,-0.2397982627,0.0151594654,-0.0463313535,-0.0261027105,0.0852365866,-0.0248665418,-0.0275417622,-0.1770563573,-0.0034551881,-0.0888238326,0.0555546843,-0.1220833212,0.0188017786,-0.0788647905,-0.0222120341,-0.0049500004,0.1090775877,-0.1476600617,-0.0538062304,0.0096407719,0.0195420068,-0.1262016892,-0.1515424997,-0.033045277,0.0662121028,-0.0796538517,0.0190694444,-0.0648847669,-0.0365375131,-0.2202317715,-0.1227868646,-0.0061498187,-0.0957119614,-0.0224384964,-0.1761442125,0.1618054211,-0.1210587323,-0.0180825833,0.0211400911,-0.0907920226,-0.0687306225,0.0327080898,0.0798449069,0.0608469695,0.1225871444,-0.0054556308,-0.1071133241,-0.1292114258,0.0417163968,0.0090163499,0.0604467355,-0.0481023788,0.0231155548,-0.122560814,0.0008440002,-0.1458168328,0.1825994253,0.0113019235,0.0274926554,-0.1441503018,0.1398742646,0.1751558036,0.0459018201,0.1716066152,0.0945405811,0.2029447407,-0.1093641892,-0.0233317446,-0.029655518,-0.0933505967,-0.1633536667,0.067957297,0.0907054991,-0.0425205678,0.0014296382,0.0088635534,-0.1517897844,0.2268056422,0.0206734687,-0.0741938055]],"hackathon_name":"Code for the Kingdom Nashville 2017","index":389,"project_description":"Nashville Neighbors is an Amazon Alexa skill to present local Nashville area community resource information to usersNashville Neighbors is an Amazon Alexa skill used to present local Nashville area community resource information to users.  Users can ask for a list of categories of local community resources.  They can also ask for a list of organizations by category as well as details of a specific organization.Nashville Neighbors is an Amazon Alexa skill that was built using Node.js on AWS Lambda. The Serverless framework is used to automate the creation of AWS resources.  We used the data.nashville.gov API to retrieve data about community resources in Nashville.We love our city.  We want to make information about community resources in Nashville easily accessible in order to inform and equip citizens of Nashville.  For example, a user may want to know where they can make a food donation in Nashville and not know where to go or who to contact.  A social worker may want location information about resources in a certain community.  A citizen of Nashville may just need information about the public Nashville community and what's available to them.  Nashville Neighbors accomplishes all these things.Code for the Kingdom Nashville 2017Susan Smith\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 11, 2017 08:26 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Nashville Neighbors","project_tags":["javascript","node.js","alexa","amazon-alexa"],"project_url":"https:\/\/devpost.com\/software\/nashvilleneighbors","keywords":"nashville,community,resources,information,used,neighbors,want,may,local,list,know,aws,make,ask,data,skill,amazon,alexa,users,city"},{"level_0":390,"hack_vector":[[0.134898141,-0.1111052111,-0.0261582509,0.0350209475,-0.0263430178,0.1337468773,0.2137728631,-0.0346771963,-0.0200214759,-0.0037699377,0.0221410282,-0.0503504686,0.1321903467,-0.0654432699,0.0755213127,0.0018877088,0.2160434276,-0.0059496383,0.0350124091,0.1285161823,-0.2369966209,0.0518250428,-0.0381026827,-0.0221664719,0.1104037315,-0.0199890025,-0.0184453633,-0.1913585365,-0.0215650629,-0.0783293992,0.0634214878,-0.1356392354,0.0286395326,-0.0941050574,-0.0214050077,-0.0198562443,0.1169767603,-0.1397501677,-0.0631919578,-0.0064048483,0.0283295587,-0.1526861787,-0.141832009,-0.0482460335,0.0618069023,-0.0450224318,0.0132004619,-0.0653064325,-0.0379606448,-0.2035515606,-0.1341092288,-0.0010086946,-0.1098598093,0.002407511,-0.1865650117,0.1506774575,-0.1268667728,-0.0147958705,0.0292539187,-0.0971504673,-0.0741276816,0.0166051183,0.0812915489,0.0499611124,0.1009605154,0.0064020748,-0.1037653759,-0.1232131124,0.043412447,0.0188395809,0.0605070926,-0.0578974076,0.0427469537,-0.1193396971,0.0146413287,-0.1478964686,0.1659344733,0.0005595264,0.0253554694,-0.1357263774,0.1367563903,0.1655905247,0.0600704215,0.1824617535,0.1010082215,0.1892529279,-0.110370554,-0.0354035087,-0.0084212646,-0.0842028633,-0.1585703343,0.0596601889,0.0991291478,-0.0436973758,0.0082751494,0.0010307158,-0.1457772255,0.2115316242,0.0126747815,-0.0655328557]],"hackathon_name":"Code for the Kingdom Nashville 2017","index":390,"project_description":"We increase bible engagement by matching song lyrics to bible verses in one simple search.As the world becomes increasingly technical, it is important for Christians to have bible and worship music digital resources to remain relevant. Scripturally Sound is inspired by worship leaders who need to support a pastor's message, reference scriptures when introducing a song, and digging deeper in the songs they sing about. It's also inspired by fulfilling the curiosity of Christians who want to know the story behind the song.Scripturally Sound provides scriptural references and topics of the songs used for worship, and the Christian songs that they may listen to on the radio or streaming services. It allows Christians to be more discerning of the music that they listen to.We build an API and admin backend in rails. We built a data import script in Node.js. We build the front end in ES6 Javascript, using the pug templating language.We plan on building the database to be robust, with thousands of songs, and more scriptures per song. We will create an API that would show the lyric to scripture relationship line by line, and create lyric inspired-bible studies for subscribers. Scripturally Sound could potentially be referenced by Christian music artist after their concerts, providing their fans with a biblical resource that allows them to grow deeper spiritually. It can scale to be a resource for Christian schools K-12, filmmakers who need songs to for movie scores, and for worship schools. Scripturally Sound is a Project Music program headed by the Entrepreneur Center.https:\/\/github.com\/mellowfish\/c4tkCode for the Kingdom Nashville 2017Contributed to Backend. Created a web scraper with NodeJS, Express and Cheerio. Scrapes song title, artists, lyrics and scripture references from website and sends data in JSON format to our backend API.\nWeb Scraper Code: https:\/\/github.com\/konradgnat\/C4TK-Nashville-2017\/blob\/master\/server.jsKim Lannear\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 02:29 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Scripturally Sound","project_tags":["ruby-on-rails","html","css"],"project_url":"https:\/\/devpost.com\/software\/scripturally-sound","keywords":"songs,sound,scripturally,bible,music,worship,api,christians,song,christian,inspired,database,line,create,scriptures,lyric,deeper,schools,resource,need"},{"level_0":391,"hack_vector":[[0.1572282463,-0.1240703687,-0.0115108006,0.0921085849,-0.0334653705,0.1753864139,0.1947107315,-0.0713682398,-0.0358001702,-0.0047051525,0.0128085287,-0.0122096967,0.1544498652,-0.086125806,0.0234057382,0.0346874446,0.2402496785,0.0164680835,0.0580589026,0.0880992115,-0.1967676133,0.0356016904,-0.058019314,-0.0286546219,0.1700650454,-0.0213048365,-0.061907772,-0.197893098,-0.0058117793,-0.0535331592,0.06621214,-0.1160052046,0.0719421655,-0.0615753718,-0.0511683412,0.0169064011,0.1482497156,-0.1053049192,-0.0113274707,0.0487237498,0.0567610301,-0.1485103518,-0.1847254783,-0.0131030614,-0.012226305,-0.0302734114,0.0254329816,-0.0360393003,-0.0191469043,-0.201301828,-0.0761174485,0.0306962579,-0.1116402224,-0.0039292569,-0.1399312615,0.1376558542,-0.1635314673,0.0436559096,-0.0049592606,-0.0086737284,-0.036952436,0.0340087563,0.0763681084,0.0661328286,0.1330292225,-0.0236608163,-0.1112673581,-0.1545732319,0.0134800198,0.0138826901,0.0629629418,-0.0339889415,0.0122162476,-0.1384539157,-0.0296051987,-0.0763891712,0.2103324533,0.0073784962,0.0676644892,-0.1469051093,0.1267373115,0.1529297978,0.0436741188,0.1523185372,0.1335672438,0.1811463833,-0.1277897209,0.0140501894,0.0067596184,-0.1120716035,-0.1150690764,0.0874346048,0.0540933907,-0.0015671944,0.0628023669,-0.0546138287,-0.0886614844,0.186535567,0.0840651616,-0.0623146966]],"hackathon_name":"Code for the Kingdom Nashville 2017","index":391,"project_description":"A mobile-friendly web app which workers in the medical mission field can use to track equipment data.todo...repos: https:\/\/bitbucket.org\/medicalequipmenttrackerCode for the Kingdom Nashville 2017I worked on deployment, created DynomoDB database in AWS, and aided with C# and CSS. First time working with AWS and .NET CoreKyle Willett\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 03:14 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"TECH Medical Equipment Tracker","project_tags":[".net","angular.js","amazon-dynamodb","azure"],"project_url":"https:\/\/devpost.com\/software\/tech-medical-equipment-tracker","keywords":"tracker,todo,bitbucket,built,challenges,equipment,https,inspiration,learned,medical,medicalequipmenttracker,next,org,proud,ran,repos,tech,accomplishments"},{"level_0":392,"hack_vector":[[0.1455297768,-0.1472882479,0.0206070356,0.0922773704,-0.0520431772,0.1564886421,0.1595961452,-0.049478814,-0.0430150703,-0.0256263092,-0.016143309,0.0429582596,0.1243837252,-0.079516843,-0.0190964639,0.1039665416,0.2609219253,0.0447330065,0.0514700338,0.0781288594,-0.1712225229,0.0030570398,-0.0493021533,-0.0645051301,0.1846745014,-0.0190907065,-0.0852806121,-0.1767442077,0.0358564146,-0.0698261037,0.0182514023,-0.0819097012,0.0895640701,-0.0371789448,-0.0454447977,0.0266093723,0.1530910134,-0.0915357918,0.0267583635,0.1101023927,0.0516850762,-0.1495188773,-0.1921962649,-0.0342157558,-0.0650724396,-0.0506075099,0.0479915142,0.0093041509,-0.0028845752,-0.1797478199,0.0008264345,0.0432352088,-0.1072283536,-0.061263442,-0.0794800967,0.1452202201,-0.1674766839,0.0905448571,-0.0227730852,0.0716754794,-0.0053091878,0.0410327613,0.0338381864,0.0816791207,0.1456440091,-0.0603427961,-0.1359655112,-0.1839129925,0.0075024539,-0.002886822,0.0663624108,-0.0302494187,-0.0279885512,-0.1409265846,-0.0814855546,-0.0427248925,0.1879449338,0.0217658542,0.1167875826,-0.1420009732,0.1015533432,0.1487363577,0.0080151446,0.1246498153,0.1596885175,0.1450807303,-0.1544769704,0.0842565596,0.0125923734,-0.1282933056,-0.0700359419,0.1118354797,0.0037773577,0.029542977,0.0895948112,-0.1003777832,-0.0466189086,0.1245301664,0.1345570385,-0.0388696492]],"hackathon_name":"Code for the Kingdom Nashville 2017","index":392,"project_description":"Helping the next generation memorize scriptureCode for the Kingdom Nashville 2017Ryan Means\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 03:16 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Alexa Scripture Memory","project_tags":["node.js","alexa","particle","amazon-dynamodb"],"project_url":"https:\/\/devpost.com\/software\/alexa-scripture-memory","keywords":"alexa,limitations,aws,next,lambda,skills,sdk,voice,building,cases,information,god,generation,first,etc,enabling,edge,dynamo,db,custom"},{"level_0":393,"hack_vector":[[0.157667011,-0.1344356388,-0.0104541816,0.0753363892,-0.0332838222,0.1657553315,0.1906892061,-0.0712847337,-0.0245717838,-0.0059207622,0.0208173487,-0.0116194673,0.1446242183,-0.0718007609,0.03532077,0.0457801782,0.2471299917,0.015099992,0.0489604957,0.1014922187,-0.2187998593,0.032837674,-0.0512534194,-0.0364207588,0.144456476,-0.0150818471,-0.0490074269,-0.1941399276,0.0072784321,-0.0809763521,0.0594372191,-0.1227400601,0.0638641343,-0.069339551,-0.0356374718,-0.0084937206,0.1361298859,-0.1294084042,-0.0269557051,0.0438744314,0.0470751785,-0.1518186182,-0.1760563105,-0.0343886018,-0.0000897996,-0.0353975408,0.0246077161,-0.0381041169,-0.0252224002,-0.1962684691,-0.0900914073,0.02813554,-0.1118174493,-0.0226526372,-0.1471869349,0.1464109719,-0.1439944506,0.0289224181,0.0069591897,-0.0211516116,-0.0413324423,0.0231460016,0.0807528198,0.0703947246,0.1269240975,-0.021144513,-0.1202794984,-0.1517585218,0.0254119802,0.0267956574,0.0708411559,-0.0412056483,0.0142511055,-0.1392988861,-0.0343047492,-0.0978354588,0.1979721636,0.0207202453,0.0563253202,-0.1427390724,0.1320270151,0.1635817885,0.0342623033,0.1593401432,0.1340442002,0.1818924844,-0.1419605911,0.0089489603,-0.0100532416,-0.100163132,-0.114803046,0.086815536,0.0647414997,-0.0110085607,0.0482479893,-0.0374803506,-0.0958059132,0.1848320365,0.0677659139,-0.0626549125]],"hackathon_name":"Code for the Kingdom Nashville 2017","index":393,"project_description":"A web based app supporting the volunteers at Home Street HomeHome Street HomeLocates, coordinates, and tracks volunteer interactions with homeless camps in and around NashvilleMVC.net with MaterializeReact and jQuery conflicted and .net Core not working well with Azure SQLWe shipped a MVPUse easiest and fastest tool available technologyHome Sweet Home will field test and then we will iterate on feedbackCode for the Kingdom Nashville 2017Phillip Glidewell\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 03:21 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Homeful","project_tags":["c#",".net","azure","jquery","google-maps","javascript"],"project_url":"https:\/\/devpost.com\/software\/homeful","keywords":"home,net,working,jquery,interactions,inspiration,homeless,homeful,field,feedback,fastest,easiest,core,coordinates,conflicted,challenges,camps,built,azure,available"},{"level_0":394,"hack_vector":[[0.1446235627,-0.1285525411,-0.0086831544,0.0670356825,-0.0450355895,0.1457034498,0.197454825,-0.0323416516,-0.0354247056,-0.0293447413,0.0064416858,-0.0087617375,0.1463414878,-0.0737679154,0.0289826617,0.0508689731,0.2430602461,0.0228203293,0.0423819087,0.11121732,-0.2171084732,0.013585465,-0.0493409596,-0.0413443409,0.1434028,-0.0203364808,-0.0648168251,-0.1766179502,0.0080414591,-0.0937395021,0.0456649996,-0.1015439704,0.049836006,-0.0574857071,-0.0211014785,-0.0029315986,0.1468627751,-0.1225855723,-0.0273282155,0.0456282236,0.0579262562,-0.1385437399,-0.1727342308,-0.0358774997,0.0087345708,-0.0551130734,0.0332538672,-0.0370044596,-0.0160101485,-0.2018028647,-0.0782252848,0.0298549067,-0.1082633436,-0.0325679518,-0.1601070017,0.1643033326,-0.1504366249,0.0293748472,0.0129041914,-0.0268482603,-0.0399011001,0.0364697166,0.0661756173,0.0652601123,0.1375479549,-0.0154954894,-0.1180065721,-0.1583308429,0.0242512319,0.0112671824,0.0593955591,-0.0300360564,-0.0025515554,-0.1372469068,-0.0391077176,-0.0973967165,0.1871545166,0.0115938522,0.0506757163,-0.1518771946,0.109321624,0.1668082476,0.0279154126,0.1549781263,0.1467984617,0.18978706,-0.1301340163,0.0078120814,-0.0140372477,-0.1135444567,-0.1303167641,0.0928326175,0.072006084,-0.0034635677,0.042407535,-0.04670237,-0.1207193211,0.2055144906,0.0667595491,-0.0531851947]],"hackathon_name":"Code for the Kingdom Nashville 2017","index":394,"project_description":"Giving Encouragement. Delivering Mail.We know one of the challenges that homeless people face is the lack of a permanent address.We use a raspberry Pi with a servos and biometric scanners to create an easy way to set up mailboxes that have minimal security,Code for the Kingdom Nashville 2017Scott Burleson\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 03:27 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Barnabas Box","project_tags":["raspberry-pi","node.js","javascript","python"],"project_url":"https:\/\/devpost.com\/software\/barnabas-box","keywords":"challenges,way,learned,address,barnabas,biometric,box,built,create,easy,face,homeless,inspiration,know,lack,mailboxes,use,minimal,next,one"},{"level_0":395,"hack_vector":[[0.1546174437,-0.1236617193,-0.0002651532,0.0886833146,-0.0508420393,0.1723754406,0.1692865044,-0.0573167726,-0.0153914774,-0.0452520289,-0.0022277941,0.0125020817,0.1365650147,-0.0735487342,-0.0028175698,0.0675318837,0.2576017082,0.0464269556,0.0483431555,0.0961887687,-0.1959159225,0.0054410375,-0.0457495935,-0.0434301756,0.1582485139,-0.020322131,-0.0634692535,-0.1793776155,0.0078465994,-0.0826638341,0.0324489065,-0.092327632,0.0816392675,-0.0445836596,-0.0246436819,0.0070880018,0.1640899777,-0.1108228415,-0.0065636486,0.0785345882,0.0608132742,-0.1456585079,-0.1809449494,-0.0418706574,-0.0286593381,-0.060795527,0.0438723192,-0.0083518373,-0.0252749324,-0.2062122226,-0.057101354,0.0329026841,-0.1107046902,-0.0554744825,-0.1299645305,0.1495452672,-0.1496950537,0.0463882759,0.0092610093,0.0210247636,-0.0281192251,0.0221446082,0.0532519855,0.0547481477,0.1342340261,-0.0304035041,-0.1239672899,-0.171762675,0.0159532782,0.0119262096,0.0597431324,-0.0361332521,-0.0114713898,-0.1436904371,-0.0603561588,-0.070880644,0.200279355,0.0194074996,0.0758193508,-0.1543587744,0.0926111564,0.1656352878,0.0012772144,0.1549220979,0.1492812932,0.1626819372,-0.1467580497,0.0460917503,-0.0089386972,-0.1250093132,-0.0994644985,0.1089139357,0.0266462229,0.0062818504,0.0628739744,-0.0712262541,-0.0761939287,0.1857547313,0.1035171077,-0.0525656082]],"hackathon_name":"Code for the Kingdom Nashville 2017","index":395,"project_description":"Let's move saying  \"I will pray for you\" into an app that helps you actually pray and practice James 5:16.Continued development.Code for the Kingdom Nashville 2017Adam Murray\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2017 08:55 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AvailsMuch","project_tags":["react-native"],"project_url":"https:\/\/devpost.com\/software\/availsmuch","keywords":"ran,proud,next,learned,inspiration,development,continued,challenges,built,availsmuch,accomplishments"},{"level_0":396,"hack_vector":[[0.1382056922,-0.0846651345,-0.0190388784,0.0569110848,-0.0027136519,0.164994821,0.2151911855,-0.0680657849,-0.0411749817,0.0171116535,0.0210975204,-0.0829979107,0.1565163285,-0.0928970054,0.0551399924,0.0002122486,0.2223157436,-0.0107718958,0.047872141,0.1000243053,-0.210204348,0.0741547346,-0.0563855022,-0.0075557651,0.1397146434,-0.0288837533,-0.0448793396,-0.1979721785,-0.0356290154,-0.0574026108,0.102088064,-0.1395535916,0.0580736846,-0.0842029154,-0.0558563508,0.0021234052,0.1387963295,-0.1157194003,-0.0215046965,-0.006902121,0.0488547571,-0.1544576287,-0.1726926863,-0.0081764115,0.0563562177,-0.0137124909,0.0127674052,-0.0742193386,-0.0243766345,-0.2075763494,-0.125220418,0.0295969415,-0.1044586524,0.0474506766,-0.1811796874,0.1273023188,-0.1618541181,-0.0041767014,0.011755296,-0.086813204,-0.0629669204,0.0188771077,0.0997943431,0.0448478833,0.112216033,-0.0026424434,-0.0700008646,-0.1223417073,0.03492897,0.0299072601,0.0686904192,-0.0478974469,0.0400651507,-0.1230228841,0.0310668238,-0.1035568714,0.1866009831,0.0016723524,0.0277331024,-0.1266818792,0.1453203112,0.1437042058,0.080720976,0.1589677781,0.1014376879,0.1839647442,-0.1003317758,-0.0459911674,0.001929843,-0.0915501416,-0.1439215243,0.0421020277,0.0811946392,-0.0320750475,0.0135035096,0.0022578314,-0.1238258034,0.1970010996,0.0337680355,-0.0752107799]],"hackathon_name":"Hack the Holidays 2","index":396,"project_description":"Mobile web-app based Christmas crackersThe app allows two users to pull a christmas cracker, and the phone with the greatest acceleration wins.\nA joke from \/r\/Jokes or \/r\/programmerhumor is also displayed to the user after pulling the cracker.The server is a Node.js application using Express and SocketIO. MongoDB is used for the database, providing user -and match data storage, with Mongoose providing a model layer between the code and DB.\nVue.js allowing us to operate a single page web app with real updating features, using Webpack, vue-loader and many other modules to combine all of the Vue components into a single file. The client also uses the HTML5 acceleration API to measure data from the accelerometer.\nThe server runs on AWS Lightsail, with pm2 for managing the node application, mongoDB running in the same VM, and Apache as a reverse proxy.Hack the Holidays 2I worked mainly on the front end, as well as setting up the backend structure, and the build system with Vue for the front end.I worked on introducing real-time leaderboards, and creating a matchmaking system that would work efficiently with MongoDB server.I worked on the Node.js server and created the joke finding script.Tim Stallard\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 18, 2016 06:26 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"eCracker","project_tags":["node.js","mongodb","amazon-web-services","reddit","socket.io","express.js","linux","mongoose"],"project_url":"https:\/\/devpost.com\/software\/ecracker","keywords":"vue,js,acceleration,app,application,data,phone,cracker,node,server,single,mongodb,providing,api,user,html,also,using,greatest,db"},{"level_0":397,"hack_vector":[[0.131030798,-0.0899526328,-0.0305246562,0.0402337648,-0.0185139738,0.1190522313,0.1847199649,-0.0213516988,-0.0299928449,-0.0240869112,0.0229810681,-0.0783823207,0.1547596008,-0.072503604,0.0690173432,0.01579036,0.2106662691,-0.015883442,0.0420939215,0.1400229633,-0.2337818891,0.0238781068,-0.0536383726,-0.0070153554,0.1073688269,-0.0338302255,-0.0353554077,-0.1692595482,-0.0334262848,-0.0951483995,0.0671059936,-0.1057249904,0.0261243749,-0.0749852285,-0.0101959221,-0.0017308928,0.116932638,-0.1360815316,-0.0479696393,-0.0046659494,0.0491961464,-0.114946045,-0.1667414308,-0.0160935372,0.0623217523,-0.0680333674,0.0232410282,-0.0901280791,-0.0139417546,-0.2257463932,-0.1442680657,0.01571838,-0.1004093364,0.004472658,-0.2128373533,0.1677188575,-0.1337549686,-0.023450084,0.0354182757,-0.1143204197,-0.0698203519,0.0329053923,0.0739398673,0.0580733083,0.1170925274,0.0218169428,-0.0863624886,-0.1336792558,0.0240128934,0.0006630506,0.0618625842,-0.038965214,0.007044611,-0.1080345213,0.0365703739,-0.1016685292,0.1882087886,-0.0117713595,0.005711304,-0.1335107684,0.1139115319,0.1637329608,0.057235878,0.1513845026,0.1031176969,0.2020356059,-0.0930730402,-0.0530155264,-0.0258768834,-0.0762597919,-0.1460775286,0.0573332272,0.1000178009,-0.0319575369,-0.0193352625,0.0036244497,-0.1666181833,0.2359840125,0.0156488679,-0.0752494782]],"hackathon_name":"Hack the Holidays 2","index":397,"project_description":"Helping devs meet up with easeDevelopers can choose a location on the map, and create a dialogue box explaining their event. The event is then pin-pointed on a map with details including the exact location and any other information the developer deems necessary to include. These then update on the site for all to see.This was built using a number of things. We used JavaScript and jQuery to produce the scripts that take in the locations and allow the developers to upload their events. HTML and CSS was used to create the front end, with the help of bootstrap to keep it looking nice.We found that some of the things didn't work as we had initially expected, and we had to work out our own way around them. For example some of the scripts wouldn't upload the correct data to the dialogue boxes, and so we had to find out why this was happening, and fix it.We're proud of being able to work together well as a team to produce the product that we set out to make.Bootstrap was a new feature to all of us in the team, and we had to learn how to work with it to make the project look nice and do what we want it to do.Hack the Holidays 2Rai Ismail\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 18, 2016 06:36 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"DevsConnect","project_tags":["javascript","jquery","html","css","bootstrap","esri"],"project_url":"https:\/\/devpost.com\/software\/devsconnect","keywords":"work,built,dialogue,developers,nice,event,produce,location,proud,create,scripts,make,map,team,things,upload,bootstrap,used,explaining,example"},{"level_0":398,"hack_vector":[[0.1573601663,-0.1067122743,-0.0177432224,0.0422173291,-0.0010918966,0.1410862803,0.2033445537,-0.0351658389,-0.0362409763,-0.0097083375,0.0089862039,-0.071548894,0.140323922,-0.0819726437,0.0431997254,0.0097877551,0.2165113539,-0.012174543,0.0527297445,0.1201373786,-0.2357605398,0.0413633063,-0.0413168333,-0.0115059605,0.1322701573,-0.0385166854,-0.0421497002,-0.1859796941,-0.0319487862,-0.0922295451,0.0720209107,-0.1192174256,0.0546951108,-0.0859731138,-0.0245108195,-0.0213602725,0.1217737272,-0.1416893452,-0.0396900997,0.0027770305,0.0578541718,-0.1451631635,-0.1633741111,-0.026983628,0.064313136,-0.0393696167,0.017124936,-0.0770908222,-0.0286558177,-0.2112413347,-0.1364268064,0.027186377,-0.109935686,0.0139385099,-0.2024867684,0.151672855,-0.1444737017,-0.0172741767,0.0346151926,-0.0909921005,-0.064075239,0.0160095431,0.0726735815,0.0339450538,0.1195585504,0.0119337747,-0.1048182845,-0.1241694689,0.025291793,0.0273931958,0.080704391,-0.0532910153,0.0058768089,-0.1294084191,0.0280108135,-0.1131149456,0.1755248904,0.0053731874,0.0263870601,-0.1270510405,0.1211763397,0.148522824,0.0474087968,0.1595430076,0.1088239551,0.1970790774,-0.0989117995,-0.0255265534,-0.014762382,-0.0838761777,-0.1353073716,0.0600003004,0.0790118203,-0.0308311153,-0.0090521351,-0.0064718253,-0.1496053189,0.2089546621,0.0297354944,-0.0619140454]],"hackathon_name":"Hack the Holidays 2","index":398,"project_description":"A small web-based game about guessing songs as quick as possible, with the use of Spotify API.The main part of the gameCan you guess the song?Maybe not...Welcome page\"What the Hack Am I Hearing?\" is a small web-based game about guessing Christmas songs as quick as possible. One has 30 seconds to guess the name of each song played. The faster one guesses, the more points they get.This project has been made using HTML5, CSS3 and Javascript. jQuery was used for the front-end and Spotify Web API to grab the Christmas tracks. The design of the website was, of course, inspired by the Hack the Holidays 2 counterpart.The main challenge was learning on how to use Spotify's API, especially the process of grabbing the essential data and parsing it. Another difficulty I experienced was with jQuery, where some components refused to cooperate. However, I have managed to successfully overcome these issues, making this game playable.NOTE: The game will not function without an access token, which is why you will not be able to play the version hosted on GitHub.Hack the Holidays 2Artur Komoter\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 18, 2016 06:44 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"What the Hack Am I Hearing?","project_tags":["javascript","html","css"],"project_url":"https:\/\/devpost.com\/software\/wthaih","keywords":"hack,game,web,hearing,api,jquery,christmas,spotify,one,without,get,faster,front,function,guess,github,grab,grabbing,essential,guesses"},{"level_0":399,"hack_vector":[[0.1564354151,-0.0945619941,-0.0251885783,0.0642102733,-0.0163374227,0.1517689526,0.2021289617,-0.0426941849,-0.030895941,-0.0099624917,0.0156620815,-0.0633996502,0.1552554071,-0.08889319,0.0688758716,-0.0316025242,0.1961006522,-0.0141789215,0.051726006,0.1159521639,-0.2241838574,0.032581985,-0.0525763854,-0.0037413167,0.1478647441,-0.0318133086,-0.0295735896,-0.1817795485,-0.0421616696,-0.0724346265,0.0665231273,-0.1261990815,0.0430033393,-0.0779119506,-0.0340574421,0.0001264381,0.1333511919,-0.1311090887,-0.0577005297,0.0094307465,0.0692150667,-0.1262308955,-0.1488141418,0.0026684366,0.0494056046,-0.0333329663,0.0263537969,-0.0840981454,-0.0340910666,-0.2149901539,-0.1444139481,0.021412205,-0.1131067201,0.0323521197,-0.1899496466,0.149834767,-0.1426115334,-0.0031593191,0.0118360594,-0.0884797648,-0.0658355877,0.0228423085,0.074856326,0.0379419848,0.1289310008,0.0146604674,-0.0941405743,-0.1181186289,0.0065510436,0.0132727083,0.0632412434,-0.041056253,0.0229395516,-0.1359074265,0.0453740507,-0.092239134,0.199013561,0.0063920151,0.0064483909,-0.1360495239,0.133506164,0.1517978162,0.0677404553,0.1483113319,0.10524562,0.1971874386,-0.0839449614,-0.0371298119,-0.0018793842,-0.0773317292,-0.1449581981,0.0559418835,0.0912310556,-0.0247363467,0.0137063991,-0.0170928277,-0.1357007325,0.2358282208,0.0203581508,-0.0603711978]],"hackathon_name":"Hack the Holidays 2","index":399,"project_description":"A game to compare tweetsYou enter 2 twitter names and then you get a random tweet and you have to guess who it was that tweeted itInitially we wrote a functioning backend using ASP .NET core, however we ran into problems when trying to deploy to Azure. Hence we decided to rebuild it using Node.js and express which we deployed successfully to Heroku. Our frontend is a single page app powered by Vue.jsOur attempts to deploy ASP .NET Core to a Microsoft Azure server failed which we were unable to fix.\nWe eventually figured out how to get Vue.js 2.0 to work, having had to upgrade from version 1.x.We did sleep briefly this year, following our own advice from last year.Our MVP was ready more than a hour before the end of the hackathon.Microsoft breaks our stuff.\nHow to access REST APIs in C#Hack the Holidays 2I started the backend and worked out the api authorization, aditionally I did the design\/styleI worked on parts of the Vue.js frontend as well as parts of the Node.js backend.Emily Peregrine\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 18, 2016 06:23 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Who Tweeted It","project_tags":["node.js","jquery","css","html5"],"project_url":"https:\/\/devpost.com\/software\/who-tweeted-it","keywords":"js,year,tweeted,get,microsoft,net,ran,core,azure,deploy,asp,vue,using,attempts,guess,accomplishments,functioning,frontend,advice,following"},{"level_0":400,"hack_vector":[[0.1461018622,-0.0991659611,-0.0360827595,0.0436781943,-0.0231603757,0.1441707313,0.1978269368,-0.0352478437,-0.0122313667,-0.0203452259,0.0081064198,-0.0744688734,0.1466759592,-0.0747776255,0.0665675923,0.0007906732,0.2116185427,-0.0065372931,0.0417358428,0.1257048547,-0.2316793352,0.0282877237,-0.0488554649,-0.0045687822,0.1205322593,-0.0240440574,-0.0293472055,-0.1667905152,-0.0356592871,-0.0832407847,0.0631896555,-0.1237615719,0.0297946949,-0.0834600106,-0.0305184461,-0.0151178511,0.1204124913,-0.1369609535,-0.0604550913,-0.0139951399,0.049681671,-0.1183921248,-0.1436955631,-0.0136635276,0.0695603117,-0.0576121584,0.0169977602,-0.0751029775,-0.0296027549,-0.216320917,-0.1476560384,0.0157152433,-0.1021502167,0.0103521189,-0.1958634257,0.1608844995,-0.1248307899,-0.0284519736,0.0247161295,-0.0985302702,-0.0728966519,0.0236659888,0.08069437,0.0396707468,0.1101080105,0.0177472755,-0.0918057859,-0.1313542873,0.0225075707,0.0258840304,0.064349249,-0.0406577326,0.0233617239,-0.1232618615,0.0244939718,-0.1020343751,0.1940365434,-0.0000057286,-0.0017514867,-0.1379254758,0.11913836,0.160223484,0.0595070086,0.1611017287,0.0977175161,0.1999759078,-0.0859875157,-0.0421734862,-0.0136943581,-0.0761544034,-0.1487696767,0.059530016,0.099476926,-0.0333093405,-0.0012686945,0.0040948302,-0.1498478651,0.2539017797,0.0122833634,-0.0812014192]],"hackathon_name":"Hack the Holidays 2","index":400,"project_description":"Presents, presents and more presents - Stellar gift recommendationsIt's a week before Christmas, and like all student's we haven't done our shopping and don't know what to get everyone. Instead of trawling across Amazon like the rest of our ilk, we decided to create a program to do it for us! secret santas can be hard, what if we buy our sister the wrong present, or even worse ... our mum!!!the current basic version takes in tags which the user can choose 5 of for the person they are buying a present and the algorith returns 5 presents it thinks the person will enjoy.We created most of the logic in Python, running it all on a Django web server.Amazon web services didn't want to play nice with Django! After one of us spent most of Saturday and some of Sunday trying to make it work, we decided to give it a rest and present it locally!Hack the Holidays 2Synchronizing static files to django for js, and CSS.honestly... I got it working :P Built the django server, delegated different functions and plugged it in, and wrote the recommendation engine including the recommendation algorithm.\nWorked with Python, Django, HTML, CSS and JS.Will Kingsnorth\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 18, 2016 07:24 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"GiftNinja","project_tags":["django","python","html5"],"project_url":"https:\/\/devpost.com\/software\/giftninja","keywords":"present,person,us,like,rest,decided,django,amazon,web,buy,built,logic,locally,algorith,know,instead,inspiration,ilk,hard,give"},{"level_0":401,"hack_vector":[[0.163360551,-0.1510456353,-0.0154136308,0.0805133134,-0.0471466631,0.1641822755,0.1787469238,-0.0500086993,-0.0248664822,-0.0322450027,-0.0116137126,0.0131583875,0.1249685809,-0.0742580146,0.0011366322,0.07409174,0.2658893764,0.0285718814,0.0404187776,0.0827586576,-0.2099152058,-0.0000453311,-0.0387229808,-0.054653611,0.1528807282,-0.0128073823,-0.0692511946,-0.1717894375,0.0192340072,-0.088091515,0.0289682541,-0.1055914164,0.0753395483,-0.0629748628,-0.0399079695,-0.003137314,0.1394843757,-0.1280697733,-0.0107234763,0.0810250863,0.0573833846,-0.1352010071,-0.1815242618,-0.0338711068,-0.0109636169,-0.0588709898,0.0359617621,-0.0178799182,-0.0283107962,-0.2016988844,-0.0550752208,0.0300578754,-0.0952539891,-0.0699128583,-0.1156565174,0.1459587812,-0.1414471269,0.0386861861,0.0058696773,0.0185167398,-0.036457926,0.0357423425,0.0609077848,0.0626421124,0.1445762217,-0.0417541675,-0.1425246,-0.1594944298,0.0200873408,0.022194244,0.0836890638,-0.0350583494,-0.0193843655,-0.1532131881,-0.0762330368,-0.084913671,0.1976608187,0.0403479487,0.0829918161,-0.1395339072,0.1175236776,0.1576076746,0.000923195,0.1512664109,0.1387169212,0.1670144498,-0.1406559348,0.0564047731,-0.0082837353,-0.118943207,-0.0980429798,0.1028287113,0.0283943098,0.0131510729,0.0682537407,-0.0625527054,-0.0724894553,0.1758939624,0.0949160233,-0.0443861522]],"hackathon_name":"Hack the Holidays 2","index":401,"project_description":"Alexa, how lively is Hardwired?Just ask her how danceable a song is and she will reply with a percentage of danceability!Hack the Holidays 2Stanley York\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 18, 2016 07:34 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"alexify","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/alexify","keywords":"spotify,soon,song,skill,reply,percentage,danceable,danceability,ask,alexify,alexa"},{"level_0":402,"hack_vector":[[0.1437524259,-0.1010314822,-0.0232415851,0.0483655967,-0.0240653381,0.1321475953,0.1950850338,-0.03215947,-0.0322438665,-0.016927246,0.0188522805,-0.0664778724,0.1443424225,-0.0608997494,0.0764722377,-0.010121257,0.1943844408,-0.0090735508,0.0440631919,0.1324472278,-0.2355706096,0.0369200706,-0.0440700166,-0.0121078733,0.1075896546,-0.0186520759,-0.0336959139,-0.1665226221,-0.0347837023,-0.0941786915,0.06174336,-0.1212257296,0.0192620549,-0.0771063343,-0.0094128307,-0.0248069447,0.1248729751,-0.14351134,-0.0725798905,-0.0039703078,0.0560977347,-0.133871302,-0.1371308714,-0.0358523279,0.0566810295,-0.051212918,0.0147852777,-0.0805951282,-0.0287624933,-0.2050885409,-0.1480784565,0.0238855053,-0.1123464257,0.0175011382,-0.2020471245,0.1604599357,-0.128664881,-0.0201775692,0.0377383679,-0.1128062233,-0.0736605152,0.0197327025,0.0703778267,0.0497107618,0.1092442721,0.0244850125,-0.1012069806,-0.1187677607,0.0143823568,0.0194733758,0.0634813234,-0.045194041,0.0250975098,-0.1223816723,0.0366348848,-0.1210114062,0.1752358973,-0.0015257969,-0.0037904428,-0.1375572532,0.1179038733,0.1592520922,0.0609225258,0.1552198976,0.1139704585,0.2003378421,-0.1038390696,-0.0598882288,-0.0172120519,-0.0736551955,-0.1502358615,0.0593276471,0.1107662916,-0.0417187363,-0.003588656,0.0040947516,-0.1612176001,0.2461506873,0.0010177128,-0.0602881573]],"hackathon_name":"Hack the Holidays 2","index":402,"project_description":"Using floppy drives to make Christmas musicOur nearly finished modelWe wanted a Christmasy version of this: https:\/\/www.youtube.com\/watch?v=cM_sAxrAu7QPlays music by pulsing the stepper motor driving the floppy driver read-write head at the specific frequency of the note we want to play.We power it using a hacked apart and soldered ATX power supply four pin power cable, and we are using an Arduino to pulse the motor control pins on the data connector of the floppy drive, and we flashed the Ardiuno with the music as part of the instructions.We wrote a system to stream audio over USB from a computer to the Arduino, but we then discovered that our USB-serial adaptor is broken, so we have no way of communicating with the Arduino without connecting a laptop to the same Arduino microcontroller that's connected to an ATX power supply, which we suspected could start a fire. (So we completely abandoned that idea).Therefore, we tried to make a MIDI interpreter in Python to convert MIDI audio instruction files into a list of notes and their durations, but we didn't manage to get it working in the time. Our demo involved music flashed onto the Arduino, which is not the most elegant way of communicating with it but we got the speakers working so we wanted to demonstrate that.Also, the sound is really quiet, so we made some hollow boxes that slightly improve the volume. We experimented with drinks cans but we found them to be less effective and sharper to work with.Hack the Holidays 2Benji Marshall\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 18, 2016 06:44 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Musical Floppies","project_tags":["c++","python","arduino"],"project_url":"https:\/\/devpost.com\/software\/musical-floppies","keywords":"arduino,power,floppy,music,drive,midi,motor,supply,flashed,serial,audio,atx,usb,using,wanted,apart,way,without,work,working"},{"level_0":403,"hack_vector":[[0.1378158331,-0.1416907907,-0.0320969857,0.0306870602,-0.0172734074,0.1109650657,0.1687254757,-0.0353883244,-0.0057787201,-0.0349635892,0.0100837499,-0.0749741048,0.1442977339,-0.0492599122,0.0740913823,0.0142232478,0.20343633,-0.017585434,0.0358357579,0.1310398281,-0.2555263638,0.0413447395,-0.0317591242,-0.0072229584,0.0890357569,-0.0375062823,-0.0171853118,-0.1577498764,-0.0363786332,-0.1147864535,0.0687877685,-0.1256799847,0.0311648268,-0.0688566342,-0.0057727038,-0.0623095632,0.0995200798,-0.1590968817,-0.0598767176,-0.032246802,0.046807237,-0.1237885281,-0.1507923305,-0.0439166836,0.0569844618,-0.0581321083,0.0187253412,-0.0799638554,-0.038321875,-0.210055232,-0.1576757282,0.0136926454,-0.0959349945,-0.011054378,-0.2230406404,0.1545708627,-0.1045342758,-0.0441516936,0.0463577956,-0.1017433703,-0.0890188888,0.0210192371,0.0610904396,0.0333988145,0.0782044828,0.035874445,-0.0980405733,-0.1230399758,0.0254470035,0.0329977907,0.083859086,-0.0579459332,0.0322123505,-0.114453502,0.0192000251,-0.1175468713,0.1726288646,0.0151951816,0.0037966408,-0.1216050163,0.1105244458,0.1641397178,0.0234069768,0.1733310819,0.1146014407,0.1945737451,-0.1027412042,-0.0520079769,-0.0363083743,-0.0711797625,-0.127450645,0.0684390888,0.1087806299,-0.0589908585,-0.0203257184,0.0000516847,-0.1606480479,0.2446451485,-0.0015974484,-0.0747817457]],"hackathon_name":"Hack the Holidays 2","index":403,"project_description":"Ride in a slay just like santa!in VRlmaooooooTwas the night before Christmas, when all through the house\nNot a creature was stirring, not even a mouse.\nThe stockings were hung by the chimney with care,\nIn hopes that St Nicholas soon would be there.The children were nestled all snug in their beds,\nWhile visions of sugar-plums danced in their heads.\nAnd mamma in her \u2018kerchief, and I in my cap,\nHad just settled our brains for a long winter\u2019s nap.When out on the lawn there arose such a clatter,\nI sprang from the bed to see what was the matter.\nAway to the window I flew like a flash,\nTore open the shutters and threw up the sash.The moon on the breast of the new-fallen snow\nGave the lustre of mid-day to objects below.\nWhen, what to my wondering eyes should appear,\nBut a miniature sleigh, and eight tiny reindeer.With a little old driver, so lively and quick,\nI knew in a moment it must be St Nick.\nMore rapid than eagles his coursers they came,\nAnd he whistled, and shouted, and called them by name!\"Now, Dasher! now, Dancer! now, Prancer and Vixen!\nOn, Comet! On, Cupid! on, Donner and Blitzen!\nTo the top of the porch! to the top of the wall!\nNow dash away! Dash away! Dash away all!\"As dry leaves that before the wild hurricane fly,\nWhen they meet with an obstacle, mount to the sky.\nSo up to the house-top the coursers they flew,\nWith the sleigh full of Toys, and St Nicholas too.And then, in a twinkling, I heard on the roof\nThe prancing and pawing of each little hoof.\nAs I drew in my head, and was turning around,\nDown the chimney St Nicholas came with a bound.He was dressed all in fur, from his head to his foot,\nAnd his clothes were all tarnished with ashes and soot.\nA bundle of Toys he had flung on his back,\nAnd he looked like a peddler, just opening his pack.His eyes-how they twinkled! his dimples how merry!\nHis cheeks were like roses, his nose like a cherry!\nHis droll little mouth was drawn up like a bow,\nAnd the beard of his chin was as white as the snow.The stump of a pipe he held tight in his teeth,\nAnd the smoke it encircled his head like a wreath.\nHe had a broad face and a little round belly,\nThat shook when he laughed, like a bowlful of jelly!He was chubby and plump, a right jolly old elf,\nAnd I laughed when I saw him, in spite of myself!\nA wink of his eye and a twist of his head,\nSoon gave me to know I had nothing to dread.He spoke not a word, but went straight to his work,\nAnd filled all the stockings, then turned with a jerk.\nAnd laying his finger aside of his nose,\nAnd giving a nod, up the chimney he rose!He sprang to his sleigh, to his team gave a whistle,\nAnd away they all flew like the down of a thistle.\nBut I heard him exclaim, \u2018ere he drove out of sight,\n\"Happy Christmas to all, and to all a good-night!\"Hack the Holidays 2Cathryn Dunicliff\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 18, 2016 07:43 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Slayyylmao ride","project_tags":["spotify","unity","c#","javascript","digitalocean","python"],"project_url":"https:\/\/devpost.com\/software\/slayyylmao-ride","keywords":"like,away,head,little,st,chimney,dash,top,flew,gave,nicholas,sleigh,old,christmas,toys,soon,snow,nose,stockings,sprang"},{"level_0":404,"hack_vector":[[0.1467660069,-0.0884729251,-0.0386836417,0.0263317078,-0.0163573362,0.1291891485,0.2045753151,-0.0238332842,-0.0241746884,-0.0050067864,0.0094068786,-0.0842364207,0.1373193562,-0.0678589866,0.0662127808,-0.0031912406,0.1995067894,-0.0094425427,0.0438075066,0.1238466203,-0.2405905724,0.0332879424,-0.0428536721,-0.0102995066,0.0997592807,-0.0267217569,-0.0324086994,-0.1675965786,-0.0296634939,-0.0946600139,0.0645222738,-0.1244551614,0.0265372228,-0.085350208,-0.0150915552,-0.0205283407,0.1153134406,-0.1425768584,-0.0607330017,-0.012394526,0.0537706353,-0.1302535236,-0.1500847042,-0.0324327536,0.0842238814,-0.0557414442,0.0118628703,-0.0900352895,-0.0254830346,-0.2100924104,-0.1556775868,0.0171297584,-0.1027533412,0.0160911307,-0.2160874158,0.1591283381,-0.1261338443,-0.0407112204,0.0449162237,-0.1151836887,-0.0801403672,0.0115358811,0.0819399431,0.0380855165,0.1081828102,0.0218230449,-0.0875589103,-0.1172620654,0.0361988619,0.030858526,0.0738963261,-0.0515941903,0.010274657,-0.1129056141,0.0414779894,-0.1344421208,0.1662574857,0.0129401274,0.0003627942,-0.1242344826,0.1151829213,0.1523811817,0.0601822063,0.163903594,0.0979401171,0.204037264,-0.0838865489,-0.0503721125,-0.0127427364,-0.0744010806,-0.1457648724,0.0465585776,0.1016270369,-0.0451704487,-0.024306275,0.0229565538,-0.1657656878,0.2347648293,-0.0039247195,-0.0739804432]],"hackathon_name":"Hack the Holidays 2","index":404,"project_description":"With our website you can find a preview of a song and see it's cool representation in particles and frequency waves !As it was our first hackathon, we wanted to make something simple and beautiful. The idea was to create something small and then add to it more and more if we have time. As the result, our project has a lot of small bits that are responsible for different parts of it.It connects to Spotify.com via it's API and plays a song. While the song is on, the app translates some song's data (frequencies, volume) to the website which does some visual effects which depend on the sent data.Our code is 90-95% javascript. It was sort of a challenge for us as we both did not have a lot of experience in js. We picked it on purpose as hackathons are about learning, are not they ?Stay awake for 35 hoursWe managed to split our work so both of us had stuff to do all the time. Also, we are satisfied with the result, it is way better than we expected.Lots of javascript !We plan at least to clean the code. Also, a login page can be made as soon as Spotify allows to play full songs from other websites. By now, a link that contains the version which was submitted on Hack the Holidays 2 is attached.Hack the Holidays 2Worked with Spotify Web API and Web Audio API with JavaScript to get a song from spotify, to analyze the song based on frequency, to get the frequency values and to draw a histogram of the song which changes around 20 times per second. Created an app which searches for a song on spotify and if the song was not found, the user will be notified.Artjoms Gorpincenko\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 18, 2016 07:54 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Songs from Spotify","project_tags":["three.js","spotify","javascript","jquery","html5","html","css3","css"],"project_url":"https:\/\/devpost.com\/software\/songs-from-spotify-4jadfu","keywords":"song,spotify,lot,time,javascript,data,result,small,something,songs,code,us,also,beautiful,hack,effects,expected,experience,first,frequencies"},{"level_0":405,"hack_vector":[[0.1692775488,-0.1314655691,-0.0200626962,0.0588953644,-0.0276557561,0.1529144347,0.1633842587,-0.0304216761,0.0068056779,-0.0741171464,-0.0003723943,-0.0404892638,0.1268228292,-0.0677207336,0.0299741197,0.0177738946,0.2314745039,0.0185065791,0.0578570925,0.1275267303,-0.2393651307,-0.0077826981,-0.0396757126,-0.0287212487,0.1251934171,-0.0307271928,-0.0341931544,-0.1574232131,-0.0253456309,-0.1209113747,0.0271500256,-0.1057927534,0.0470203497,-0.0682897419,-0.0188289732,-0.0276376326,0.1272723526,-0.1495121568,-0.0601590686,0.037518166,0.0677612647,-0.1023959219,-0.1425558627,-0.0476321951,0.0339079574,-0.0978684574,0.0401907675,-0.0399641469,-0.0515889376,-0.2208603323,-0.1364380568,0.0244492833,-0.1087322533,-0.0425621159,-0.1698788553,0.1698440313,-0.1092894226,-0.0259938389,0.0271822754,-0.0546914078,-0.0604377389,0.0114641069,0.0496564172,0.0355470404,0.1205276921,0.0149398465,-0.1366624385,-0.1446243078,-0.0062505305,0.029498769,0.0690958649,-0.048066929,-0.0103302998,-0.1339845508,-0.0015510054,-0.0773586854,0.2017546147,0.023401197,0.0131907612,-0.1567716449,0.0931895301,0.174102366,-0.0029075465,0.159743458,0.1182805896,0.1896671951,-0.1078559607,0.0009480179,-0.0323655978,-0.0784335658,-0.1119781733,0.0915128142,0.0633956939,-0.009974692,0.0047312914,-0.0452230386,-0.1299316585,0.246781081,0.0402622744,-0.0711659193]],"hackathon_name":"Hack the Holidays 2","index":405,"project_description":"it doesn't quite work, but at least we triedWe're not quite sureIt can show you the world (If you know what you're doing)We're not quite sure ourselvesWell, all of them pretty much.Getting this farDon't hold on to that hope that you will actually finish it. It'll just make it more painfl in the end.\nAlso, dont write infinite while loops in unsaved codeThe recycling binHack the Holidays 2Andrew Martin\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 18, 2016 07:55 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"santa scrolly quick type thingy","project_tags":["javascript","esri"],"project_url":"https:\/\/devpost.com\/software\/santa-scrolly-quick-type-thingy","keywords":"sure,quite,write,far,inspiration,infinite,hope,hold,getting,finish,end,learned,dont,code,challenges,built,bin,also,actually,know"},{"level_0":406,"hack_vector":[[0.1383461803,-0.1492482871,0.0023282755,0.0825097263,-0.0390871353,0.1539789438,0.1850516945,-0.0383293368,-0.0365464501,-0.0175001901,0.0026541953,0.0174123608,0.1393662244,-0.0687711388,0.0284173433,0.0623600818,0.2538996637,0.0251748282,0.0454764254,0.0944861919,-0.2205384076,0.0069810576,-0.0501770079,-0.0486137867,0.1549744904,-0.0268169325,-0.0659325197,-0.1899724305,0.0121502401,-0.0854852572,0.0562238693,-0.1054793224,0.0569384992,-0.0554363653,-0.0441388786,0.0052279457,0.1261776239,-0.1120672449,0.0003454951,0.0637517869,0.046089761,-0.1365686655,-0.1712484062,-0.0321381092,-0.0118068736,-0.0573632605,0.0370563716,-0.0206230022,-0.0217429083,-0.2068106383,-0.0375659652,0.0172476601,-0.1029595807,-0.0432546251,-0.1266398877,0.1593860835,-0.1580340862,0.0452920124,-0.0067429165,0.0093124481,-0.0347940624,0.0431084707,0.0531272329,0.0654886216,0.1384472549,-0.03253939,-0.1303419024,-0.171598807,0.0287398472,0.000602386,0.0547137856,-0.0303209722,0.0015351981,-0.1416240036,-0.0643055663,-0.0856120959,0.198990643,0.0235328563,0.0824704617,-0.1520306319,0.1244749203,0.1663041562,0.0153641049,0.1457905024,0.1548195928,0.1855555624,-0.1324994862,0.0454671942,-0.0068967491,-0.1153086424,-0.1189177483,0.1077045128,0.0463628396,0.0031676893,0.0456635654,-0.065494962,-0.0921077505,0.1669578254,0.0893357024,-0.0492611118]],"hackathon_name":"Hack the Holidays 2","index":406,"project_description":"Christmas themed Interpreted programming languageunwrapping numbers, evaluations, strings. \n    Declaring variables. \n    Cannot unwrap variables. \nTo add a new function. \n1. Add a new elif statement in the Lexer \n2. Add a new if statement to parse itHack the Holidays 2Peter Walkington\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 18, 2016 07:57 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SantaScript","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/santascript","keywords":"add,unwrap,new,var,statement,variables,features,cannot,code,declaring,elif,endif,evaluations,examples,world,function,hello,numbers,parse,santascript"},{"level_0":407,"hack_vector":[[0.1438263655,-0.0891775936,-0.0472451374,0.0266881716,-0.0241129361,0.1273688525,0.1953883618,-0.025388144,0.0046601868,-0.0385816395,0.008530871,-0.06959185,0.1159065366,-0.0565062687,0.0693895593,0.0011720117,0.2176486403,0.0070578773,0.0316332169,0.1328194141,-0.2369756103,0.0240410585,-0.0411596037,-0.0151733709,0.0767368004,-0.0141533557,-0.017062692,-0.1634553224,-0.0420144685,-0.1060894951,0.044179529,-0.1214326024,0.031433031,-0.0998676717,-0.0078630382,-0.027918227,0.1108639762,-0.1404605508,-0.0781333223,-0.0053240811,0.0379561856,-0.1171042621,-0.1372065693,-0.0477584079,0.0783207864,-0.0880621076,0.0211632047,-0.0731227174,-0.0463873632,-0.2122477889,-0.1568729132,-0.0029498809,-0.098217316,-0.0266191103,-0.1916404963,0.1587728709,-0.1068058833,-0.048082687,0.049108848,-0.1080970466,-0.0803832263,0.0141179673,0.0837607607,0.0249781478,0.0995993689,0.0143713271,-0.1150860488,-0.1144226417,0.0355713665,0.0311941002,0.0611556247,-0.0521177687,0.010108985,-0.1178184822,0.0218345616,-0.1354400665,0.1774289012,0.0098710218,0.0007784105,-0.1479455531,0.1063489318,0.1700799763,0.044810649,0.1806160808,0.0956520885,0.1888301075,-0.093280904,-0.0352471247,-0.0188407861,-0.0807058737,-0.153902024,0.058179386,0.10139139,-0.0320786722,-0.0189835858,0.0065522543,-0.1691704094,0.2504576743,-0.0017998276,-0.0849041045]],"hackathon_name":"Hack the Holidays 2","index":407,"project_description":"A hotline for telling you whether you should leave the room\"Christmas shoppers visiting Britain's fourth largest shopping centre, Bluewater, found themselves in traffic hell\"We often have great trouble telling whether or not we should be in a room, especially around christmas. Wouldn't it be so much easier if we could phone a number, and it tell us whether to stay or leave?You call our hotline, it will listen for sound until you press #. If it detects christmas music, it'll let you know that the room is okay to be in, if it doesn't detect any music it says so, and if it detects non-christmas music it tells you to leave.The Spotify API is used to get a list of christmasy songs and store them in an array. Nexmo is then used to receive incoming calls, and forwards them to our Node app. It records a section of the call and sends it to the ACRCloud music recognition API. It then compares the response with our list of christmas songs, and sends a text-to-speech response using Nexmo.Nexmo has its quirks (but it ultimately pretty great). ACRCloud is horrible.It works.For some of us it was Javascript, others it was how to use specific APIs. We all learned something different.Get out.Hack the Holidays 2I worked out how to use the wonderful ACRCloudLearned Javascript and how to use API's with it. (Spotify, ACRCloud)Nexmo integrationScott Street\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 18, 2016 07:58 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Get out","project_tags":["node.js","nexmo","spotify"],"project_url":"https:\/\/devpost.com\/software\/get-out","keywords":"music,christmas,nexmo,get,list,whether,leave,learned,great,response,room,sends,songs,detects,acrcloud,used,api,call,us,challenges"},{"level_0":408,"hack_vector":[[0.1501783878,-0.1473258585,-0.0002083422,0.0682532564,-0.0449726135,0.1558127701,0.1699803472,-0.0398137011,-0.0298304688,-0.0230861269,-0.0107040182,0.0058622854,0.132861048,-0.0688102543,0.013966809,0.0626771152,0.2497577816,0.0347387753,0.05465848,0.0982716382,-0.212191835,0.0022135256,-0.0387765244,-0.0583613925,0.1589440703,-0.0235818177,-0.0650879517,-0.1757584661,0.0223294515,-0.0938403383,0.0312789567,-0.1068319231,0.0659199879,-0.053841643,-0.0398242027,-0.0070236856,0.1391349435,-0.1197788045,-0.0120034423,0.0862193629,0.0616907626,-0.1457027346,-0.1761881113,-0.0491516106,-0.0142488461,-0.0663368404,0.0445104651,-0.0142174484,-0.0255186111,-0.1962507665,-0.0712279454,0.0304845273,-0.1111724526,-0.0540801138,-0.1315983385,0.1666782647,-0.1421768516,0.0492448695,0.0024113785,0.0213156398,-0.0325941257,0.0245264266,0.0338501818,0.0723909661,0.1371911466,-0.0328605473,-0.1254830956,-0.1696751565,0.0134788724,0.0086664613,0.0799650922,-0.0455501564,-0.0225593802,-0.1382366717,-0.0513703339,-0.0715423375,0.2014108598,0.0380539037,0.0740349516,-0.1428091228,0.1129011363,0.1628526896,0.0062450832,0.1480000913,0.1623132378,0.1800369918,-0.1397869736,0.0466761664,0.0015656571,-0.1014682949,-0.0989413485,0.0989114046,0.0437609926,0.0100423386,0.0626313388,-0.081459187,-0.08587116,0.186332345,0.0865202919,-0.055876676]],"hackathon_name":"Hack the Holidays 2","index":408,"project_description":"Wisdom from our Hackathon gurusample-wisdomJoeSays something like Joe wouldWith no help from JoePreventing Joe seeing it prematurelyJoe not seeing it prematurelyJoe is unobservant when helping Luana with gitRefreshing the page for more wisdom from JoeHack the Holidays 2Rob Ede\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 18, 2016 07:59 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Joe Nash Wisdom","project_tags":["ruby","sinatra","html","css"],"project_url":"https:\/\/devpost.com\/software\/josh-nash-wisdom","keywords":"joe,seeing,prematurely,wisdom,would,like,built,challenges,git,help,helping,inspiration,josh,learned,nash,luana,next,page,preventing,proud"},{"level_0":409,"hack_vector":[[0.1310360134,-0.0695842654,-0.0245816577,0.0375706032,-0.0129112853,0.1436689645,0.223655805,-0.0302664824,-0.0306172892,-0.0050729802,0.0203425996,-0.0804020986,0.1273462623,-0.0733508691,0.0738349408,0.015667012,0.2267470509,0.000642708,0.0361762643,0.1234612763,-0.2255205214,0.0504172891,-0.0537019446,-0.0294739529,0.094455108,-0.0176286232,-0.0295320433,-0.1983397901,-0.0374836363,-0.0759905055,0.0739876255,-0.1256522685,0.0434988439,-0.1029311717,-0.0241679549,0.0019753319,0.1185389906,-0.1239215806,-0.0464153662,0.000303414,0.0311569739,-0.151128009,-0.1605223119,-0.0315869451,0.0742643699,-0.0551856495,0.0096177831,-0.0719851851,-0.0278300457,-0.2172791362,-0.1215589792,-0.0006094127,-0.0969912037,0.0073409709,-0.1758224964,0.1486495286,-0.1475919485,-0.0139452973,0.0301376134,-0.1072441265,-0.0711596161,0.0211444311,0.0933943093,0.0450869463,0.1184748709,0.0008884555,-0.0948151946,-0.1279822588,0.0543488711,0.0176757034,0.0563488342,-0.0527994633,0.0220848918,-0.1202651709,0.0214773063,-0.1401260048,0.1712092161,0.0017380494,0.0284132194,-0.1335609853,0.1329689175,0.1564223319,0.085269995,0.1645124555,0.0878037363,0.1846438646,-0.0961519182,-0.0336739793,-0.0045866766,-0.0983657017,-0.1658880562,0.0457569137,0.0889045075,-0.0422314927,-0.0106764045,0.0154827554,-0.1496374309,0.2077022642,0.0149391061,-0.0757198855]],"hackathon_name":"Hack the Holidays 2","index":409,"project_description":"When you want to discover christmas musicthe inspiration behind this development was to allow anyone to have access to Spotify music on the go without the need of using mobile data or having Spotify premiumthe program allows you to call a number which connects you to a call that plays a Spotify playlist full of Christmas songswe built the system using the python programming language and the all the API's needed to allow an audio file to be converted into a .wav file type while including SMS messages that informed the user about the song what was playingHack the Holidays 2Worked on the implementation of spotify using the spotipy library. I made a couple of custom object types to make working with playlists and tracks easier.Also did the Nexmo implementation using a socket connection to play the media back to the phone call. As well as using the Nexmo-python rest library to send SMSsWorking on speech to text api, Watson, Microsft Bing speech service and python speech SDK. Taking microphone input of LPCM 16KHz to file to be transcribed and sent to websocket for processing.Aaron Osher\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 18, 2016 08:00 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Christmas Music Hotline","project_tags":["python","json","nexmo","amazon-web-services","spotify"],"project_url":"https:\/\/devpost.com\/software\/christmas-music-hotline","keywords":"using,spotify,call,songs,number,inspiration,playing,allow,apis,built,christmas,file,hotline,learned,music,access,speech,user,system,text"},{"level_0":410,"hack_vector":[[0.1426640004,-0.1510815769,0.0244215168,0.0967466906,-0.0542791747,0.1575829834,0.1549572051,-0.0510038063,-0.0396556482,-0.0318544954,-0.013722552,0.0561332032,0.1206407845,-0.0827325061,-0.0272326265,0.110442102,0.2620364726,0.0456920005,0.0539926104,0.0662390143,-0.1618180722,-0.005954477,-0.0516743734,-0.0745473653,0.1819822788,-0.0184926782,-0.0887806416,-0.1698259562,0.0410151556,-0.07210242,0.0082264841,-0.0740220696,0.0935510099,-0.0373136774,-0.0428784378,0.0309158489,0.1484301388,-0.0880271569,0.0298670083,0.1212278754,0.0559243597,-0.1393525898,-0.1891795397,-0.0264870748,-0.0750522166,-0.0541848615,0.0540491454,0.0134021342,-0.0066935513,-0.1738756001,0.0121529037,0.046110671,-0.1002729908,-0.0778195411,-0.063472718,0.1388423145,-0.1626178622,0.0936806276,-0.0226586573,0.0890946761,0.0051984596,0.0444667414,0.0314028375,0.0835139975,0.1523009688,-0.0667933896,-0.1417176872,-0.182976231,0.0054892963,-0.0087800343,0.0621850565,-0.0245238896,-0.0382768922,-0.1468237489,-0.0934106708,-0.0295802448,0.1912938356,0.0287494529,0.1199086979,-0.1408289075,0.0996905863,0.1421601474,-0.0032963941,0.1131579801,0.1609966606,0.1341406405,-0.1498083919,0.0999370888,0.014294724,-0.1294270456,-0.0560586937,0.1155796796,-0.0075752921,0.0442746133,0.0965576172,-0.1179485098,-0.0394822508,0.1112242714,0.1392094195,-0.0331938714]],"hackathon_name":"Hack the Holidays 2","index":410,"project_description":"Xmas InfoHack the Holidays 2Chloe Collins\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 18, 2016 08:26 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"asksanta","project_tags":["html","css","javascript"],"project_url":"https:\/\/devpost.com\/software\/asksanta","keywords":"asksanta"},{"level_0":411,"hack_vector":[[0.1327368915,-0.1362712532,0.0175015889,0.1013542786,-0.050593961,0.1494000703,0.1644639373,-0.0412107371,-0.044589445,-0.0332907401,-0.0070671327,0.0474022962,0.1315889359,-0.0848821551,-0.0103508132,0.0655532703,0.251604259,0.0296266358,0.0650260523,0.0787031651,-0.1967991441,-0.0014877019,-0.0373965576,-0.0548624359,0.1615270227,-0.0193347055,-0.0810276046,-0.1764382571,0.0313478298,-0.0807738677,0.0275330972,-0.0851680934,0.0766419321,-0.0373796374,-0.0305337589,0.016184397,0.1610230953,-0.1071421579,0.0100145331,0.1007556543,0.0690175965,-0.1488907188,-0.1874773502,-0.0280471854,-0.0455043726,-0.0447388329,0.0493089408,-0.0229657106,-0.0050172396,-0.1981026232,-0.0264354926,0.0491267331,-0.1041087881,-0.0528622605,-0.1330638528,0.1451607794,-0.1692675203,0.0712783486,-0.0045330701,0.0444182307,-0.0060787657,0.0372454673,0.0502269678,0.06014359,0.1618953198,-0.0465958454,-0.118305929,-0.1703927368,0.0158966966,0.0027424167,0.0638509244,-0.0282102916,-0.0288567431,-0.1538441479,-0.0652302727,-0.054952912,0.1953392923,0.0339366496,0.0905561745,-0.1535571665,0.1071454436,0.1524827629,0.0057442444,0.1438408494,0.164592877,0.1672250032,-0.1413833499,0.0588324592,0.0001159871,-0.1259124279,-0.0930027217,0.1091721877,0.0268827155,0.0272314437,0.0689758882,-0.0917172432,-0.069614768,0.1416708082,0.1156101003,-0.032389719]],"hackathon_name":"Hack the Holidays 2","index":411,"project_description":"An innovative approach to motivating a team.An innovative approach to motivating a team for a hackathon.Hack the Holidays 2Reiss Jones\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 18, 2016 09:19 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"The Noot Alarm","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/the-noot-alarm","keywords":"team,motivating,innovative,hackathon,approach"},{"level_0":412,"hack_vector":[[0.1471861005,-0.1340400875,0.0034745785,0.0735427961,-0.042232506,0.1581237763,0.1929707378,-0.0531922877,-0.0325115882,-0.02162374,0.0079377154,0.0183026232,0.1373662502,-0.0837231651,0.0156294219,0.0624013022,0.2491283715,0.0261245873,0.0506328866,0.093539007,-0.1980784833,0.0086238952,-0.0521667004,-0.0479148626,0.1663854569,-0.016914431,-0.0604456626,-0.1853387654,0.0156598128,-0.0822973102,0.0373442993,-0.1053532735,0.0713902339,-0.0569163635,-0.02866669,0.0069967145,0.1446191072,-0.1095130369,-0.0108111445,0.0659831241,0.0588011295,-0.1465985477,-0.1782990843,-0.0307212211,-0.0207193643,-0.0455957241,0.0396950915,-0.0209274366,-0.0251397565,-0.2001649886,-0.0538040251,0.0358918905,-0.1135579422,-0.0505409129,-0.1306118518,0.1539119929,-0.162944153,0.0561268032,-0.0075351056,0.012181229,-0.0176353566,0.0407927893,0.0579863936,0.0653629079,0.1468155086,-0.0338085704,-0.1361487955,-0.1685525179,0.0235398859,0.0068623074,0.0608949661,-0.0284232721,-0.0077498322,-0.1484543085,-0.0488971807,-0.0735670403,0.1931258589,0.0199432317,0.0757157132,-0.1526722014,0.1161607429,0.1637997627,0.0284581799,0.1488493234,0.1519147903,0.1724480391,-0.1338053048,0.0441789329,-0.0009690839,-0.1138871536,-0.1088273078,0.1009707376,0.0466221049,0.0106122941,0.0636147335,-0.0771752968,-0.0934240967,0.1728989482,0.086235404,-0.0466538519]],"hackathon_name":"Porticode","index":412,"project_description":"You have to impress an octocat using only coloursoctopuses communicate by changing their coloursits a gameunity, Arduino, serial portsserial portsstaying up all night and finishing the projectusing new hardware, serial communication, unity librariesthat's itPorticodeYuvesh Tulsiani\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 11, 2016 05:07 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Blush","project_tags":["unity","lilypad","adafruit","github"],"project_url":"https:\/\/devpost.com\/software\/blush","keywords":"serial,ports,unity,using,hardware,arduino,blush,built,challenges,changing,colours,communicate,communication,finishing,game,learned,inspiration,libraries,new,next"},{"level_0":413,"hack_vector":[[0.1508436799,-0.1081840843,-0.0360377952,0.0439403988,-0.0111376988,0.1375945061,0.205084458,-0.029494999,-0.0260100123,-0.0073938752,0.0169040766,-0.0708156377,0.1407372057,-0.0765319914,0.0611073412,0.0051805675,0.2150542289,-0.0160059854,0.0378423333,0.12577115,-0.2473595887,0.0293982849,-0.0483282134,-0.0044974084,0.1281827688,-0.0311380792,-0.0332540236,-0.1825671792,-0.0332503319,-0.0898321718,0.0781160891,-0.1269844323,0.037064977,-0.0781411305,-0.0250724349,-0.0166469272,0.1113348305,-0.1344108284,-0.0404365025,-0.0072177937,0.0555575453,-0.1270466298,-0.1611834019,-0.0313174874,0.0655340999,-0.0497553088,0.0107415086,-0.0679185241,-0.0281113088,-0.2131436765,-0.1286279559,0.0052437969,-0.1017342359,0.0160868503,-0.2040976286,0.1505833715,-0.1457531005,-0.0275961999,0.0188452601,-0.0996729061,-0.0684310347,0.0246784706,0.0799653605,0.0326233543,0.1131327674,0.0103257541,-0.0991676301,-0.1234469637,0.0353310034,0.0259868354,0.0606239885,-0.0424141176,0.0202636868,-0.1135744303,0.0224346723,-0.119274646,0.1717124581,0.0045858435,0.0110323988,-0.1321933568,0.1185450777,0.1615148038,0.0512929745,0.1762841493,0.0984858796,0.2040731013,-0.095590882,-0.0325162038,-0.0204185639,-0.0859293863,-0.1390262991,0.0620791242,0.0942740664,-0.0262050275,-0.0111840898,0.0058611222,-0.1503463387,0.2188845873,0.0256387927,-0.0683615953]],"hackathon_name":"Porticode","index":413,"project_description":"Chrome extension directing you to a random Wikipedia page; you have 4 clicks to get to a certain German Chancellor...By Table 10!I believe the Wikipedia Game originated from the glory that is 4chan.org. That's where I first heard of it anyway. And everything is more fun with automatic integration.Sends you to a random Wikipedia article, whereupon you have 4 clicks to make it to the page on Adolf Hitler.Using JavaScript and Chrome's API for extensions. Also a tiny bit of HTML and CSS to make things pretteh.The counter for number of clicks randomly resetting or failing to; understanding JavaScript syntax.Sending messages back and forth between a background process and a main process to keep track of which links have been visited in the current game. Learning JavaScript in a few hours (applies to our entire team) and actually implementing pretty much the entire thing in the language.How to use JavaScript lolImplementing difficulty levels that limit number of clicks further as well as the implementation of a timer to increase tension. Beyond that, integrating multiplayer functionality in which you play in real-time with a friend (seeing which articles they end up on) would be awesome as well.PorticodeMain game logic (Interface and Background JavaScript files).Helped with HTML and JavaScriptSondre Agledahl\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 11, 2016 05:42 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"The Wikipedia Game (Table 10)","project_tags":["javascript","chrome","html","css"],"project_url":"https:\/\/devpost.com\/software\/the-wikipedia-game","keywords":"javascript,wikipedia,clicks,game,make,well,implementing,entire,process,number,friend,everything,extensions,failing,first,forth,would,fun,functionality,glory"},{"level_0":414,"hack_vector":[[0.16058667,-0.1182095483,-0.0430401787,0.0467745401,-0.0138496794,0.1276152134,0.1828079075,-0.0311531033,-0.0109139262,-0.0430530645,0.0022641604,-0.075320825,0.1492622644,-0.0570984222,0.0609821118,-0.020157041,0.1810804307,-0.0079258587,0.0459976792,0.131034717,-0.2381891906,0.0271222349,-0.0346767306,0.0079623442,0.1074021161,-0.036385905,-0.0252680294,-0.1538660228,-0.059912242,-0.099654533,0.0752538294,-0.1109775826,0.0309509169,-0.0664229915,-0.0159409773,-0.0399873033,0.114014402,-0.1425707042,-0.0658269152,-0.0170828961,0.0778798088,-0.112661697,-0.1394201666,-0.0308690984,0.0710005239,-0.059926793,0.0204749964,-0.0889834017,-0.0458829664,-0.2185423672,-0.1710017771,0.0212575793,-0.1022525281,0.0139710847,-0.2238015682,0.1603554338,-0.1181596965,-0.0565539412,0.0405105986,-0.1065177768,-0.0859083235,0.0119147478,0.0607709102,0.0029907483,0.0969434604,0.0403877161,-0.0975866467,-0.1033449918,0.0070222267,0.0342988521,0.0626076758,-0.0475863256,0.0087874718,-0.1144837216,0.0314941183,-0.0944767669,0.1807236373,0.0018025556,-0.021504011,-0.136215955,0.0907600224,0.1549710333,0.0273369048,0.1643255353,0.1017172709,0.2158086151,-0.0745837912,-0.0488145985,-0.0202366784,-0.0690157637,-0.1331354082,0.0681586191,0.0957713276,-0.0354403965,-0.0368195064,-0.0043023578,-0.1690824181,0.2634291649,-0.0044353078,-0.0644283071]],"hackathon_name":"Porticode","index":414,"project_description":"Game Boy Todo List in CSee how useful it is on a day-to-day basisThe home menuYou can even change user! (*feature coming soon)I love Game Boys! I own quite a lot of them, and I've been wanting to write a game for one for quite a while. I have this flash cartridge that lets you run whatever you want on the Game Boy.Because I'm really bad at coming up with game ideas, I ended up making something 'useful' instead!It's a todo list that runs on a Game Boy! Because the Game Boy is such a versatile platform, this software is compatible with the original GB, the Color, and all models of the Advance.I used the GBDK - it's a set of compilers and linkers for targeting the Game Boy (and other z80-like processors). The last release was in 2002, and even trying to compile it for Mac was a huge pain. I eventually found some binaries that somebody had uploaded to a forum in 2006 and used them.GBDK has a load of helper functions for doing stuff on the Game Boy. The means rendering text and using cout is pretty simple! But it doesn't have enough helper functions to handle something like displaying a menu. I had to write that myself (and it's horrible).I had all kinds of problems with missing header files. This problem was compounded by the fact that I literally have no idea when it comes to C. The biggest blocker was not being able to clear the screen. The way all the >10 year old docs said it should be done just didn't work. It still doesn't work, and I have no idea why.I got a working rom, and it runs on real hardware! (but not in an emulator for some reason)C isn't all that bad, but it is mostly. I'm motivated to keep learning it and get better, then eventually I'll work on a proper game!I keep reading everywhere that the only way I'm truly going to be able to get fine control over what I want to do is with assembly programming. The docs and tutorials around asm on the Game Boy are actually really good - much better than with GBDK.I really just need to find the time to learn now!PorticodeI learnt how to use GBDK a bit, and why people use higher level languages than C.Scott Street\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 11, 2016 05:55 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"GBTLC","project_tags":["c"],"project_url":"https:\/\/devpost.com\/software\/gbtlc","keywords":"game,boy,really,work,gbdk,get,quite,write,keep,idea,helper,like,something,functions,eventually,docs,better,bad,runs,able"},{"level_0":415,"hack_vector":[[0.1255867034,-0.0946817175,-0.0253183357,0.038942337,-0.0206249002,0.1219431162,0.1993421912,-0.0082832305,-0.0217686445,-0.0257460866,0.0145172384,-0.0700310394,0.1406583041,-0.0669288635,0.0657978132,0.0117838001,0.2095469534,-0.0011771773,0.0396293625,0.1388121098,-0.2430932522,0.0288572144,-0.0415060855,-0.0212976187,0.1020419523,-0.0256762411,-0.0340162851,-0.1713660657,-0.0198797453,-0.0969751552,0.0570119992,-0.1073062271,0.0269562099,-0.0732804388,-0.007327877,-0.0105521381,0.1167935058,-0.1467079222,-0.0546823144,-0.0001480756,0.0398764014,-0.1361463368,-0.150834918,-0.0399020389,0.0624386184,-0.0697527453,0.0217561647,-0.077741541,-0.0178412963,-0.2210108489,-0.1470831037,0.0157142319,-0.1106076092,-0.0000980011,-0.2028381228,0.1668427885,-0.1338064671,-0.0252543557,0.0484619513,-0.1130397543,-0.0772373676,0.0323087983,0.070267491,0.0548065268,0.1093925312,0.0260337144,-0.0932872146,-0.1322102845,0.0268005282,0.0049208123,0.0588266402,-0.0510153547,0.0163360592,-0.1119745672,0.0310989581,-0.1243371293,0.1707339585,-0.0039495942,0.0137300827,-0.1438739598,0.1157561466,0.1651588827,0.05162156,0.1576217711,0.1046125218,0.2027634531,-0.1003065631,-0.0382722504,-0.0259803236,-0.0785910115,-0.1491592377,0.0615016408,0.090848662,-0.0433987938,-0.0091055818,0.0086155869,-0.1689499617,0.2277389467,0.0100859823,-0.0677326396]],"hackathon_name":"Porticode","index":415,"project_description":"Don't waste extra money on bikesTable 19Some people use bikes to travel around London but sometimes you may have to spend more than you want to. The tfl bike system charges extra for not parking in the bike after 30 minutes. The purpose of the app is to provide a route to be able to park the bike every 30 mins, avoiding any extra charges.We started by using android studio to create an app using google maps. The next step we took was creating tracking system so that the app knows the current location of the user. We then added configurations so that the user can click to the destination they want to go to. The first major challenge we experienced was creating a JSON parser specifically for tfl\u2019s bike point API. After spending a long time we finally managed. After that we had to fiddle around with the Async settings which delayed us a bit further. We then had to build a second parser for google API so that we could accurately calculate the timings between several points. We then wrote an algorithm that would find the most effective route between a start and end point which also saves money for the user in the process.Biggest takeaway from this project was learning how to write a JSON parser and then using the information to provide live updates and feedback.This can help more people to consider cycling instead of using more polluting methods of transport as they would save money in the process too.Porticodealekseyrozh Rozhnov\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 11, 2016 05:54 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"BudgetBikes","project_tags":["android-studio","java","android","google-maps"],"project_url":"https:\/\/devpost.com\/software\/budgetbikes","keywords":"using,bike,user,parser,app,json,tfl,point,provide,creating,route,people,charges,money,extra,system,process,would,want,around"},{"level_0":416,"hack_vector":[[0.1446942538,-0.0738210529,-0.0407348536,0.0394724011,-0.0186629184,0.1317510903,0.195994541,-0.029169336,-0.0258778818,-0.0060500507,0.014780825,-0.0949489921,0.1551168412,-0.0751909092,0.0801416487,-0.0240869969,0.1897233427,-0.011595061,0.0359763019,0.1229128987,-0.2190392166,0.0404908843,-0.0522557534,0.0079230294,0.1174250692,-0.0237194989,-0.0218932182,-0.1697071642,-0.050491605,-0.0686565712,0.0693271607,-0.1261065453,0.0283025652,-0.0870335549,-0.0292332899,-0.0078860987,0.1234899536,-0.1342063248,-0.068455331,-0.0154338256,0.0448859893,-0.1223131642,-0.1465180367,-0.00831227,0.080108285,-0.0524891503,0.017972691,-0.092307128,-0.0326608866,-0.212067008,-0.1644695252,0.0027758512,-0.1026950702,0.0353215039,-0.2018395364,0.1562337428,-0.123394452,-0.0319171287,0.0315097235,-0.1248064041,-0.0828061402,0.0134416651,0.0863102078,0.0340911187,0.1039733291,0.0206342097,-0.0825114995,-0.1130592749,0.0286956206,0.0228829533,0.0633469075,-0.0473798253,0.0222839136,-0.1116586551,0.0548657477,-0.1200593412,0.1858026981,-0.00261847,-0.0031231649,-0.125817731,0.1255901903,0.1577551663,0.0776253641,0.1522326916,0.0875173956,0.1904105395,-0.0885064751,-0.0591391176,-0.0074926708,-0.0835293755,-0.1578240842,0.0445020311,0.1078301296,-0.043328926,-0.0063112765,0.0096827531,-0.1611871123,0.2531268299,0.0069901631,-0.0758489892]],"hackathon_name":"Porticode","index":416,"project_description":"Alexa's weird friendWe are Table 18Alexa is very formal. You cannot mess around it with and gives very straightforward answers most of the time. So we decided to build a skill for Alexa that allows her to be more informal with users. We called it Nancy because we invoke it by saying \"Alexa, tell Nancy to do something\".Nancy can recite poems, narrate 2 line horror stories, flirt with you and motivate you with inspirational quotes.We are using Amazon Web Services to host a lambda function which does work. Alexa looks for the particular keywords like 'scare', 'motivate', 'flirt' and 'recite'. The keyword is then sent over to our lambda function which uses it query the approriate database (for 'scare' it would query the database containing horror stories, for 'motivate' it would query the database containing motivational quotes...you get the idea). Once a result is received a lambda response is sent back to Alexa which reads out the response. We also have a website dedicated to Nancy which is built using HTML, CSS, Bootstrap and javascript. The website will be pulishedScarping data from the internet was big challenge we had to over come. We had to alter our source code multiple times to scrap the appropriate data from different websties and return JSON data. Configuring Alexa was also  a big challenge due to intermittent drops in WiFi. We spent 4 hours trying to figure out why Alexa would not pick up our skill only to find out that the account was in English US and Alexa was in English UK. Furthermore, due to Amazon's policy, our skill will only be fully downloadable to everybody once it has been reviewed by them.We successfully programmed the Alexa to do what we wanted it to doWe learnt a lot of new things today like how to scrap data from websites and how to work on back end services like AWS. We learnt programming languages like Node.js and python.PorticodeI scraped data for 2 line horror stories and programmed the lambda function to query databases based on keywordsI scraped the data for the programmers flirt jokes and made the logo using Photoshop. I also helped with the HTML and CSS of the web page.I scraped the data for the motivational quotes and made the background image and icons for the landing page. I also helped with the HTML\/CSS and helped troubleshoot some issues of getting the Echo to run our skill.I worked on the front end and I supplied the project with scrapped data for the haiku database. I worked on the website, on its format, design and animations.Rifad Lafir\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 11, 2016 03:41 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Nancy","project_tags":["node.js","python","html5","css3","javascript","bootstrap"],"project_url":"https:\/\/devpost.com\/software\/nancy","keywords":"alexa,like,nancy,data,would,database,lambda,motivate,skill,query,sent,scrap,scare,containing,response,english,quotes,due,flirt,function"},{"level_0":417,"hack_vector":[[0.1386558861,-0.0791581199,-0.0352787487,0.0380446799,-0.0239845924,0.1316257268,0.2119583637,-0.0246201828,-0.0288019739,-0.0031867395,0.0140562244,-0.0781283081,0.1411157399,-0.0695749372,0.06771072,0.0023938578,0.2173173577,-0.0048434013,0.0300396923,0.1296289116,-0.230572775,0.0315463729,-0.0520428903,-0.0076664272,0.1112785488,-0.0086435014,-0.0338155366,-0.1738442928,-0.024982119,-0.0875259861,0.0638606474,-0.1248226911,0.0278531145,-0.0910798013,-0.0241565648,-0.0090695582,0.1214417517,-0.133517459,-0.0553670377,-0.0019824165,0.040676102,-0.1239550263,-0.1527171135,-0.0277904533,0.0756403655,-0.0624861196,0.0115006771,-0.0818900019,-0.0287184492,-0.2157258242,-0.1364438236,0.0093797352,-0.0959215015,0.0074234144,-0.1845787168,0.1590943485,-0.1311619729,-0.0240577739,0.0248579383,-0.1077724248,-0.0647842064,0.0219700709,0.0926721245,0.0453604609,0.1158204153,0.0035950665,-0.0955019668,-0.1241050288,0.0412133336,0.0215319712,0.0598294362,-0.0392838903,0.0093728378,-0.1163740605,0.0245776996,-0.1281704158,0.1799368262,0.0068387124,0.0091258427,-0.1394145638,0.1275134385,0.1632844955,0.0732662752,0.1590113342,0.0983980894,0.1958956122,-0.0974237993,-0.0459514298,-0.0161622074,-0.0890368745,-0.1599970162,0.0501010157,0.1051854119,-0.03143657,-0.0044396403,0.013689978,-0.1574821919,0.2348172963,0.0122332396,-0.0743090436]],"hackathon_name":"Porticode","index":417,"project_description":"Sumantha helps you catch up with your slack channels, showing you the last most important messages.\/catchup commandTable: 11We all love Slack, but sometimes in big teams it is impossible to keep up with all the messages.Sumantha works with a Slack command '\/catchup' or by contacting her as with other bots. Sumantha is also accessible through a Echo Skill, which makes it really convenient to use.We are using a AWS Lambda function that gets POSTS requests from the Bot and answers back with the most important messages. In order to calculate the relevance of the messages, we take into account several parameters:Debugging a Lambda function and formatting data so the Echo is able to read it. Also, parsing the input for the Slack bot.Developing a working product of an idea with a useful outcome.Using the Slack API, Bot SDK, Alexa SDK and AWS Lambda functions to create a voice application. We've also learnt to value which are the important factors in a conversation and how to gather these data.*Improving the algorithm to make it work with high volumes of messages.\n*Being available in the Echo Store and as a Slack app.PorticodeMarti Serra\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 11, 2016 05:42 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Sumantha","project_tags":["node.js","amazon-web-services","amazon-alexa"],"project_url":"https:\/\/devpost.com\/software\/sumantha","keywords":"messages,slack,sumantha,lambda,bot,also,echo,using,data,function,sdk,important,aws,debugging,developing,discussion,create,works,factors,convenient"},{"level_0":418,"hack_vector":[[0.1315526515,-0.1034292802,-0.0237857085,0.0448292531,-0.0283027831,0.1354878098,0.187688753,-0.0266885068,-0.024988519,-0.0202763844,0.0151551357,-0.0472642109,0.1366430372,-0.0704595149,0.0502093919,0.0415278077,0.2237351388,0.0054019149,0.0392163023,0.1299896687,-0.2382624149,0.0084101586,-0.0471256897,-0.0276773907,0.1216075346,-0.0187148955,-0.0437635742,-0.1807928979,-0.0110178217,-0.0950471312,0.0561000071,-0.1059275493,0.034714777,-0.0743436143,-0.0194475744,-0.0062901047,0.1123745143,-0.1353462934,-0.043637488,0.0209284816,0.0346133411,-0.1322844923,-0.1613518447,-0.0369333923,0.0408721641,-0.0775509626,0.0083511584,-0.0574908182,-0.0192962959,-0.232057333,-0.115596205,0.021014411,-0.0990908444,-0.0231580827,-0.1827058494,0.1814508736,-0.1393731087,0.0046268916,0.0143472049,-0.0772724748,-0.0551563986,0.0320870206,0.0608059242,0.073245123,0.1259979755,0.0042767413,-0.1135409921,-0.1472080499,0.0375071242,0.0072471416,0.062231198,-0.0433002263,0.0061996626,-0.1212245226,0.0023476791,-0.0961504504,0.1870926321,-0.0064950692,0.0300665516,-0.1502797455,0.1170349717,0.1653102487,0.055989366,0.1598588973,0.1133579388,0.2084664851,-0.1078202426,-0.0288267359,-0.0207046997,-0.0804956183,-0.1465424001,0.0684526339,0.0921396017,-0.0373161696,-0.0006867567,-0.0064196931,-0.14598988,0.2235562354,0.0353912935,-0.0780841112]],"hackathon_name":"Porticode","index":418,"project_description":"Don't waste time in the airport - Meet new people!Landing PageMember PageSearch FormChatThe need to find something to do with our time while waiting in an airport for a planeAirMate pairs you with other people who are waiting for the same flight in the airport. This guarantees that you can make new friends and make use of all your time in a fun and interactive way. This can also provide opportunities of adventures with strangers in other countries.We built it with a framework for PHP called Laravel, and we integrated the SkyScanner APISome trouble implementing the SkyScanner API and the chats for the airportsWe managed to implement all the main features that we planned for this hackathonWe learned how to use the SkyScanner APIIntegrate the hotel and car rental services from the SkyScanner APIPorticodeCosmin Nicolae Bresug\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 11, 2016 05:05 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AirMate","project_tags":["laravel","php","html5","bootstrap","jquery"],"project_url":"https:\/\/devpost.com\/software\/airmate-0q4ov5","keywords":"skyscanner,api,make,use,time,airmate,airport,waiting,built,learned,way,friends,fun,hackathon,guarantees,flight,hotel,framework,chats,find"},{"level_0":419,"hack_vector":[[0.1487855762,-0.1688125432,0.0212584697,0.0917527825,-0.056401588,0.1532047689,0.1541952044,-0.0641803965,-0.0346965715,-0.0251470637,0.0008088589,0.0648956001,0.1249092296,-0.0752490461,-0.0081766983,0.0926584899,0.2574571371,0.0387485512,0.0542149507,0.0667717829,-0.1761601418,0.0016006691,-0.047931511,-0.0736520514,0.1757005751,-0.020975545,-0.0751706809,-0.1764696687,0.0470076911,-0.0765071586,0.0144921206,-0.0874160528,0.0861074552,-0.041263625,-0.0372388363,0.0113119557,0.1427364647,-0.0987737998,0.0119707258,0.1048577055,0.0530133173,-0.1440617889,-0.1814195812,-0.0357254706,-0.0771813318,-0.0419827476,0.0533610098,0.0124756135,-0.0121087236,-0.1648219079,-0.0032545098,0.0418979637,-0.110637933,-0.0746104866,-0.0746682212,0.1408277154,-0.1520262212,0.0888243616,-0.0157759022,0.0809054673,-0.002181482,0.0392278917,0.036525853,0.0864453688,0.1415614635,-0.0585924722,-0.1486557126,-0.1782009602,0.0037384445,-0.0030885199,0.0674705356,-0.0262340195,-0.0174350273,-0.1536048651,-0.0886321887,-0.052985318,0.1917389631,0.0318130851,0.1138467789,-0.1393527687,0.1102738008,0.1489408463,-0.0059471224,0.1301849633,0.1699158996,0.1404546648,-0.1583316475,0.0888798088,0.0073717637,-0.119651176,-0.0591696985,0.1202724576,0.0109789399,0.0327260643,0.1014040634,-0.1197186559,-0.0442383885,0.1181494668,0.1248779222,-0.0367083549]],"hackathon_name":"Porticode","index":419,"project_description":"Secret SantaSecret Santa websiteTeam members: \nYi Xuan Sim\nMiruna Serian\nJohann klopp\nMantas PastolisTable Number = 16PorticodeYi Xuan Sim\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 11, 2016 05:48 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ucl-secret-santa","project_tags":["html","python","css","javascript"],"project_url":"https:\/\/devpost.com\/software\/ucl-secret-santa","keywords":"secret,santa,klopp,mantas,members,miruna,number,pastolis,yi,xuan,serian,sim,table,team,ucl,website,johann"},{"level_0":420,"hack_vector":[[0.1525351554,-0.0974578187,-0.0306845233,0.0396956578,-0.0257170759,0.1242439896,0.1884604543,-0.0098486179,-0.0243679341,-0.0254898295,0.0070604412,-0.0734788179,0.1405695677,-0.0699529126,0.0613890365,0.003749531,0.203057006,-0.0013556252,0.0483562499,0.1352562755,-0.2412741333,0.0104969144,-0.0426734388,-0.0182238426,0.1062914655,-0.0238657687,-0.0369606949,-0.1601132601,-0.0167640541,-0.0998839512,0.0428859629,-0.1090444252,0.02041528,-0.073518075,-0.0026019814,-0.009685671,0.1181144342,-0.1467276365,-0.0654521585,0.0068317368,0.0607347228,-0.122858353,-0.1516334713,-0.0316366889,0.0636602715,-0.0712042749,0.0196319036,-0.0857091695,-0.0219529774,-0.2163207084,-0.1553269029,0.0231171176,-0.1066430509,-0.0094146077,-0.2030890137,0.1746793836,-0.1139400303,-0.0269633234,0.0361050479,-0.0963485092,-0.0613889098,0.0224555265,0.0677122697,0.0539814346,0.1226735786,0.0168677736,-0.1006810144,-0.1285777241,0.0193348993,0.0106328074,0.0684052929,-0.0407264717,-0.00061153,-0.1200557947,0.0336780436,-0.1145254895,0.1795258373,0.0062030409,-0.0005411779,-0.1400001943,0.1121839806,0.1660271436,0.0474780239,0.1581111103,0.1020564288,0.2090064287,-0.0896941796,-0.0388022289,-0.0215976927,-0.0749818161,-0.1355997026,0.0597060472,0.0981393829,-0.0365127549,-0.005610242,-0.0002550775,-0.1687779278,0.2506734431,0.0027617286,-0.0728541389]],"hackathon_name":"Porticode","index":420,"project_description":"repository for porticode ;)We are table 14 by the way.\nOur website is supposed to be a  get-away from pressure sort of website. There are literally tons of apps helping people -particularly students be on top of their studies or work, so we thought why not create something to ease the break free process ?! It's actually our first time ever doing web dev so we opted for a template at first, but it took us AGES to tailor every single line of code !! We wanted then to use an api so that when the user chooses one sort of destination, the website connects to google places API to collect information about all nearby attractions matching that destination type. We went through some tutorials and managed to use the API but we could not parse JSON on javascript so it ended up a bit basic! Quite proud of how far we learned though!PorticodeEsraa Dandash\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 11, 2016 05:26 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Snake Tech","project_tags":["javascript","css","html","php"],"project_url":"https:\/\/devpost.com\/software\/snakeescape","keywords":"website,api,destination,sort,use,first,get,ever,every,far,free,helping,google,ease,information,javascript,json,learned,line,ended"},{"level_0":421,"hack_vector":[[0.1280307472,-0.1021548212,-0.0190846175,0.0432284139,-0.0454157665,0.1474072635,0.2024178803,-0.0126215229,-0.0080820536,-0.0406456403,0.0119738448,-0.0250446461,0.1225205883,-0.0540312156,0.0359028243,0.0493710823,0.2629707456,0.0295243692,0.031778194,0.1212310567,-0.2331743985,0.0110100545,-0.0407479033,-0.039087601,0.1089598835,-0.0153153362,-0.0453755893,-0.172938779,-0.002243503,-0.1161020994,0.0400129594,-0.1102289557,0.0363410525,-0.0751185417,0.0048488053,-0.0056921528,0.1286618561,-0.1273308992,-0.0406198129,0.0286610313,0.0337031558,-0.1413247734,-0.1605113745,-0.0581352934,0.0432998575,-0.0850793272,0.0193262026,-0.0325185061,-0.0276841111,-0.2070831209,-0.0875611901,0.0006571368,-0.0930264294,-0.0594426617,-0.1758843958,0.151465565,-0.1362236738,-0.0175982881,0.0529422089,-0.0625039712,-0.0571565665,0.0238446835,0.0750206858,0.0433625206,0.1165359393,0.0005217936,-0.1187869012,-0.1655544937,0.0551820993,0.0225284137,0.0610096939,-0.0521777906,0.0075653968,-0.1205042154,-0.0364732705,-0.1448124647,0.1642624289,0.015741609,0.0502637997,-0.1457531452,0.1007229984,0.1725499332,0.0217152815,0.1810387671,0.1205054969,0.1786531508,-0.1381463408,0.0034700637,-0.0322172977,-0.1131184548,-0.1396294832,0.0815949365,0.0656986535,-0.0187823884,0.01016807,-0.0120912483,-0.1421434432,0.2153368592,0.0438466258,-0.0686466321]],"hackathon_name":"Porticode","index":421,"project_description":"An easy and very pleasant  way to make a playlist of your favorite articles.After you register, you can create your own playlist, by simply adding the urls of the article that you want to add.Future Modifications: When a new article is add to a playlist, it should be possible to access the audio file of that article, which should be automatically made.PorticodeMaria Nicolae\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 11, 2016 05:39 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Articles - Table 7","project_tags":["django","python"],"project_url":"https:\/\/devpost.com\/software\/articles-up3rg9","keywords":"article,add,playlist,want,file,adding,audio,automatically,create,future,urls,made,modifications,new,possible,register,simply,access"},{"level_0":422,"hack_vector":[[0.163664028,-0.1222075373,-0.0265209079,0.0596876591,-0.0216519739,0.1530003697,0.1972316802,-0.050910797,-0.0194977708,-0.0053258291,0.0161999874,-0.0576868467,0.1567109376,-0.0624629371,0.0725800246,0.0032651729,0.2032334954,-0.0015953431,0.0399634056,0.1243539229,-0.2377429456,0.0312588215,-0.0472751297,-0.012567414,0.1341111958,-0.0184369553,-0.0232527647,-0.1815208048,-0.0303994641,-0.0801755637,0.0735246763,-0.1310421675,0.0349451415,-0.0819968954,-0.0325142853,-0.0240195096,0.1137720644,-0.1435837895,-0.060203243,-0.0026327998,0.0576737523,-0.1254576445,-0.1472440362,-0.0283061657,0.0441788584,-0.0422571599,0.01516301,-0.0694499463,-0.0362185352,-0.2157953829,-0.1333919615,0.0141206682,-0.1123587787,0.0008021654,-0.1792323142,0.1663843989,-0.1273338348,-0.0043787053,0.0156567059,-0.0775842741,-0.0656535476,0.021270493,0.0704208612,0.0496736653,0.1118201464,0.0106850341,-0.108885318,-0.1277677715,0.0258371104,0.0152404485,0.0631183609,-0.034151081,0.0222044569,-0.1251327693,0.0078056664,-0.1037362888,0.1975063533,0.0099214222,0.0125934016,-0.136952579,0.1225065365,0.1658472121,0.0507814735,0.1518400759,0.1168329567,0.205660522,-0.0870403498,-0.0248521138,-0.0046041221,-0.0705358759,-0.1340682656,0.0723373815,0.0992962122,-0.0323547125,0.0090632886,-0.0114880567,-0.1365994662,0.2326274961,0.0174863804,-0.0652942434]],"hackathon_name":"Porticode","index":422,"project_description":"Animated helper for GithubyaytentacleblinkearsspintrashsaveWe were inspired by the classic Clippy helper in Microsoft Word.Our app provides hints in a similar way, but for Github instead of Word.As well as randomised 'at rest' animations, Octocat and Hu-bot make action-specific animations, e.g. when you save, delete and search.Naomi built the app using atom, html, css and javascript. Asiyla created the animations using gimp and spriter.Neither of us had dealt with animations before, we didn't event know what a sprite sheet was! We ran into some technical issues with uniform image sizes on the spritesheets and figuring out atom.We especially like Mona's ears animation, she's so cute!How to animate, yay!What's next - more animations and more actions!PorticodeCreated the animations for Hubot and Octocat.Adding Octocat and Hubot to Atom and a bit of logic to make the animations show up when they make sense.Asiyla Radwan\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 11, 2016 05:38 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Octoclippy","project_tags":["photoshop","javascript","html","css","gimp"],"project_url":"https:\/\/devpost.com\/software\/octoclippy","keywords":"animations,word,using,app,atom,image,inspired,instead,hu,ears,html,hints,helper,github,gimp,figuring,event,especially,yay,delete"},{"level_0":423,"hack_vector":[[0.1433304995,-0.1484177411,0.0202568173,0.0971260667,-0.0582916997,0.1595111042,0.164056614,-0.0528134741,-0.033183977,-0.0296618249,-0.0086940872,0.0595470518,0.1225912347,-0.0825478435,-0.0193924457,0.102157861,0.2617587745,0.0451239087,0.052643232,0.0713257194,-0.1671743393,-0.0075564235,-0.0522624366,-0.0704348087,0.1822379082,-0.0139212096,-0.0849524885,-0.169808194,0.0441431701,-0.0700105578,0.0102271577,-0.0770075321,0.0868939161,-0.039624434,-0.0442452244,0.0320560224,0.1504636407,-0.0895358473,0.025296174,0.1178509817,0.05445024,-0.1395485252,-0.1848686337,-0.0312134363,-0.0697762594,-0.0554205179,0.0515537784,0.0122298766,-0.0088677919,-0.1763009727,0.0053015864,0.0430837162,-0.1045011133,-0.0739263445,-0.0695221797,0.1440515369,-0.1632887274,0.0899108648,-0.0240040794,0.0833384097,0.0032589717,0.0412540399,0.039341379,0.0842216462,0.1501750499,-0.0656452179,-0.1393410414,-0.180335328,0.0103644105,-0.0081541594,0.0541005209,-0.0220560711,-0.034628652,-0.1436136365,-0.0922292918,-0.0359061062,0.1932414919,0.0274254344,0.112250939,-0.1472695321,0.1000074297,0.1480253786,-0.0015982818,0.1187392101,0.1593572199,0.1424777061,-0.1487137079,0.0942718461,0.0162727814,-0.1274681687,-0.0634260923,0.1147878841,0.0014945007,0.0473742075,0.0973182395,-0.1129731834,-0.041365467,0.1134075671,0.1346215904,-0.0328445174]],"hackathon_name":"Porticode","index":423,"project_description":"Collaboration platform for organising partiesTable: 20PorticodeAlexandru Bondor\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 11, 2016 05:37 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"pubview","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/pubview","keywords":"table,ran,pubview,proud,next,learned,inspiration,challenges,built,accomplishments"},{"level_0":424,"hack_vector":[[0.1173156425,-0.1055141017,-0.0276012216,0.0135521702,-0.0207525138,0.1027433872,0.1909683794,-0.0021532446,-0.0225009378,-0.0291072633,0.0125907781,-0.070798412,0.1313349903,-0.0660494566,0.057168223,0.0447420888,0.2280078232,-0.0052675493,0.0282326434,0.1480504274,-0.2490920871,0.0157327037,-0.0374006219,-0.0346770436,0.089120619,-0.0272618718,-0.0354528166,-0.1684185714,-0.0084836297,-0.1174953803,0.048499167,-0.1062694639,0.0268015135,-0.0737253204,0.0008403316,-0.0201355331,0.0996674597,-0.1503614038,-0.0420059152,-0.0007572394,0.0279722176,-0.1258301586,-0.1624176204,-0.0452290662,0.0675609037,-0.0896732211,0.0152820535,-0.0724967197,-0.0144296056,-0.2252816707,-0.1347180754,0.0104631931,-0.0917302296,-0.0310968123,-0.2008921504,0.1799168587,-0.1240649149,-0.0320244357,0.0431243405,-0.1084845439,-0.067848146,0.030641336,0.0626618415,0.0670798719,0.1101543754,0.0175146833,-0.0982505381,-0.1380884498,0.0428905673,0.0037993835,0.0670069754,-0.0545525849,0.0023300676,-0.1039619669,0.0196801741,-0.1265140474,0.161755383,-0.0059306468,0.0217298511,-0.1366325915,0.118081823,0.167406261,0.0481457226,0.1701120585,0.0971115753,0.2041673213,-0.1042268202,-0.0387758128,-0.034332376,-0.0764787868,-0.1458034664,0.0534563884,0.0953200534,-0.0468148068,-0.0293757077,0.0120712779,-0.1805296093,0.2128176838,0.0101087689,-0.085670203]],"hackathon_name":"Porticode","index":424,"project_description":"Save time and effort on the stresses of life's logisticsScreenshot of webpageTable 13We want to make organising meetings as easy and cost efficient as possible. We all want to meet our friends but the stresses of arranging a place to meet can make this very difficult for us. Meetings Planner lets users arrange meetings at a click of a button.Meetings planner is a website where the user inputs the locations of the people who want to meet and the dates between which they are all available. Meetings Planner then finds the cheapest place for the users to meet, guaranteeing that one user in the group does not have to take a flight at all.We used the skyscanner api to access the flight times and javascript to sort the information.No one in the team had ever used javascript or html so we had to learn the languages from scratch.The Meetings Planner does return the cheapest destination to meet and the total travel cost for the group.How to make websites and what API's are and how to use them.It would be good if Meetings Planner could find the cheapest location for the group to meet without one person in the group to not have to travel. Meetings Planner could also find cheap hotels in the area using a live pricing.PorticodeAsmita Jain\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 11, 2016 05:21 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Meetings Planner","project_tags":["javascript","html5","css","skyscanner"],"project_url":"https:\/\/devpost.com\/software\/meetings-planner","keywords":"meetings,planner,meet,group,want,cheapest,make,one,place,travel,flight,find,could,used,user,users,api,javascript,cost,ever"},{"level_0":425,"hack_vector":[[0.143836543,-0.1090296581,-0.0278973449,0.0472198054,-0.0315976739,0.1349408478,0.1911782324,-0.0322977565,-0.0025977017,-0.0478311442,0.0188273862,-0.0368960202,0.1301509142,-0.0622002073,0.050135266,0.0158881024,0.2297843248,0.0144050084,0.0406404808,0.1289248168,-0.2315432876,0.0149483262,-0.0541382246,-0.0295340177,0.1064745039,-0.0175448153,-0.0276457258,-0.1668634415,-0.0189129077,-0.1033193171,0.0318234004,-0.1134908125,0.0412157513,-0.0781545937,-0.0065935878,-0.0104096541,0.1263078898,-0.1434692293,-0.0663721561,0.0237843078,0.0420649275,-0.1274065226,-0.1475622356,-0.0428426713,0.0395987667,-0.0938381925,0.0324513875,-0.0549578853,-0.0474089868,-0.2130372077,-0.1346184462,0.0017521464,-0.1053015664,-0.030193625,-0.1686139554,0.1610990614,-0.1221488789,-0.0230377465,0.0366101414,-0.0794758946,-0.0674401,0.0263340008,0.0755890831,0.0462021604,0.1119911745,0.0033350799,-0.1330646873,-0.1431009322,0.0197789483,0.0219261944,0.0554791279,-0.0502840318,0.0108216684,-0.1297628582,-0.0031263002,-0.1169729456,0.1996930391,0.0130587565,0.0289214905,-0.152125448,0.1132687554,0.1715648025,0.0272998288,0.1621361822,0.1113684699,0.1843157113,-0.1260933578,-0.0118587855,-0.0269845426,-0.0924865305,-0.1392474473,0.0845978186,0.0790737048,-0.0218167063,0.0144207133,-0.0305012614,-0.1453976631,0.2401736528,0.0304798018,-0.0708278269]],"hackathon_name":"Porticode","index":425,"project_description":"Webapp that can recognise bananas and crisp flavours.24We wanted to make an app that tells you whether bananas were ripe or not, and if not ripe, would let you know how long it would to take to ripen.It can tell you if a picture has a banana in it.\nIt can also tell you the flavour of crisps in an image.JS, HTML, CSS, CLARIFAI, and WEBCAMJS.Api we were using couldn't differentiate between different hues on banana skin accurately enough...\nSo we pivoted into analysis of chip flavours.PorticodeAmmar Shaqeel\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 11, 2016 05:36 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Bananalyser","project_tags":["javascript","clarifai","html","css3"],"project_url":"https:\/\/devpost.com\/software\/bananalyser","keywords":"would,tell,banana,ripe,api,app,flavours,flavour,enough,differentiate,different,css,crisps,clarifai,chip,hues,challenges,built,bananas,also"},{"level_0":426,"hack_vector":[[0.1511803865,-0.1499198228,0.0175163317,0.0874919221,-0.0555799864,0.1562753618,0.1685190052,-0.045448143,-0.0406910516,-0.0315311328,-0.0158451647,0.0458488055,0.1239029989,-0.0834466368,-0.0212242901,0.1057604179,0.2642152309,0.0406930074,0.0516409911,0.0759946629,-0.1735283434,-0.002774715,-0.0513503999,-0.0715429187,0.1787320524,-0.0173796713,-0.0880234241,-0.162459448,0.043509163,-0.080013752,0.0069741146,-0.0811676681,0.0863074586,-0.0393349305,-0.0378369503,0.0255084392,0.1541910172,-0.0960244313,0.0195757132,0.1102096364,0.0594224259,-0.1441945434,-0.1895076483,-0.0307788569,-0.0619692728,-0.0567912608,0.0481518991,0.0063332696,-0.0041750879,-0.171734497,-0.0010672908,0.0439344049,-0.1043138802,-0.0700830147,-0.0793498456,0.141233623,-0.1659763455,0.0822481215,-0.0193321928,0.0733447745,-0.0036597869,0.0459583998,0.0403339677,0.0841694921,0.1519240737,-0.0629484728,-0.1425818354,-0.1827744991,0.0095022125,-0.0006647792,0.0659260973,-0.0259070825,-0.0376120359,-0.1452191919,-0.088439621,-0.0475870594,0.1843053252,0.0312979817,0.1064227447,-0.1384815276,0.0997594297,0.1449858695,-0.0005951908,0.1218520552,0.1611069143,0.1389447302,-0.1518542916,0.0911705568,0.0124410437,-0.1310527623,-0.0632261261,0.1131701916,0.005241957,0.0416696593,0.0944043696,-0.1087481827,-0.0510021448,0.1273771971,0.1276073307,-0.0308807455]],"hackathon_name":"Porticode","index":426,"project_description":"The robot that is terrified of everythingPorticodeDiane Magnin\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 11, 2016 05:27 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ScreamBot","project_tags":["hardware","raspberry-pi"],"project_url":"https:\/\/devpost.com\/software\/screambot","keywords":"good,cough,sensor,wrote,challenges,inspiration,loud,horror,hardware,multiple,noises,protagonist,screaming,different,video,us,batteries,generally,external,anything"},{"level_0":427,"hack_vector":[[0.1646548659,-0.1241271347,-0.0250970069,0.063458629,-0.0270364061,0.1486891657,0.2002818882,-0.0354445539,-0.0185694546,-0.0164468214,0.015414523,-0.0489741564,0.1495855898,-0.0736993626,0.0613628179,0.0030014152,0.214048788,0.0051513794,0.0542892888,0.1104942337,-0.228699401,0.03880357,-0.0517850928,-0.0207870975,0.1277340055,-0.0285184011,-0.041027315,-0.1767835617,-0.0164064057,-0.0848725364,0.0604266673,-0.1148102134,0.0480224267,-0.0802044049,-0.0209901016,-0.0103855375,0.131702438,-0.1447884142,-0.0590788387,0.0045396704,0.0515083633,-0.1435748488,-0.1578695327,-0.0161685925,0.0374172889,-0.0479344539,0.0232504718,-0.0711519271,-0.0246365685,-0.2062449455,-0.140178293,0.0267737396,-0.1125507504,0.0021286162,-0.1819457263,0.1469084024,-0.13405855,-0.0060477629,0.039177604,-0.0707344636,-0.0681313723,0.0315707177,0.0777819827,0.0471145734,0.104801178,0.0077814497,-0.1067101657,-0.1319538206,0.0091303065,0.0233265962,0.0742180645,-0.0434531085,0.0134885795,-0.1414907873,0.0055522118,-0.1121390462,0.197187379,0.0129534956,0.023814952,-0.1390390843,0.1190394089,0.1540866494,0.0447366945,0.1545581371,0.1205972508,0.1928413957,-0.1128139123,-0.0174476486,-0.013745755,-0.095396854,-0.1278478801,0.0773656815,0.0857545212,-0.025962187,0.0321330614,-0.0288168266,-0.1319014579,0.2261713445,0.0280213356,-0.0653367192]],"hackathon_name":"Porticode","index":427,"project_description":"A web-based antidepressant.After spending the whole day searching for how to implement a database using Java, I got severe depression because I didn't understand Java and database. Suddenly, I realised that I needed an anti-depressant which could save me from certain boredom. The idea of creating a dynamic web app which uses the Reddit API and Python to show gifs of funny animals crossed my mind!It chooses and displays pictures of cute cute animals.Python and boredom.Sometimes images could not be displayed due to format incompatibility.I am not depressed anymore.Cats are scared of cucumbers.Include wider variety of pictures.PorticodeRosetta Wanyue Zhang\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 11, 2016 05:14 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Funny Animal","project_tags":["python","json"],"project_url":"https:\/\/devpost.com\/software\/funny-animal","keywords":"funny,boredom,pictures,database,could,java,python,cute,animals,displayed,displays,due,depressed,depressant,day,dynamic,format,depression,wider,cucumbers"},{"level_0":428,"hack_vector":[[0.1518100798,-0.0932489783,-0.0332776234,0.0485363156,-0.0126653044,0.12660034,0.195520699,-0.0261050314,-0.0323232897,-0.0209056009,0.0156540591,-0.0700646266,0.1552284509,-0.0587053858,0.0649072975,-0.0361072049,0.1774606109,-0.0207451861,0.0522487089,0.1382020861,-0.2386974096,0.0210939553,-0.0415471643,0.0174850579,0.1239796877,-0.0261641704,-0.0311980117,-0.1538539529,-0.0394277945,-0.1021073312,0.0784324184,-0.1105741039,0.0140736923,-0.0655267313,-0.001466678,-0.0229509175,0.1149447188,-0.1370967925,-0.06765154,-0.0192533452,0.0813482702,-0.1186591163,-0.1292560995,-0.0260745194,0.0682593286,-0.0525969379,0.0057836901,-0.0971083418,-0.0278529879,-0.2101455629,-0.1583812237,0.02493334,-0.109564364,0.0341514833,-0.2302152961,0.1629879028,-0.1346942633,-0.0472235829,0.0388564244,-0.1243676171,-0.0722794831,0.0233145189,0.0675743446,0.0276375357,0.1116908491,0.0416389555,-0.0951881707,-0.1132768691,0.0069056517,0.0233266558,0.0528705083,-0.0349633321,0.020842446,-0.1063045189,0.0459492244,-0.1040411964,0.1792238653,-0.0089932941,-0.0182980914,-0.1325017661,0.0939904153,0.1411813498,0.049319379,0.1478201896,0.1043065041,0.2213305682,-0.0764782205,-0.0609878935,-0.0287834257,-0.0553539582,-0.1362830848,0.0613994971,0.1073329151,-0.0356413908,-0.0299652126,0.0186516214,-0.173302263,0.2564461529,-0.0103743672,-0.0531456545]],"hackathon_name":"Porticode","index":428,"project_description":"Quantum Leap Website & GameWhile looking through the hardware that MLH had to offer at the hackathon, we found the Leap Motion. After playing around with the demo functions for a while, we could see that it was an incredibly versatile piece of technology. Inspired by its ability to so closely replicate games such as Sevens and Squash, we wanted to create a virtual version. Because of the sci-fi like aspects of the concept, we decided to go with a space theme for the game.Originally we wanted to create a web app, using Python or Javascript. However, we soon discovered numerous difficulties associated with accessing the data from the Leap Motion over the web. So instead, we decided to use Unity to develop and offline game that could connect straight to the Leap Motion. None of us had ever used Unity before, so we had quite a lot of trouble getting anything off the ground at first. Eventually, we actually started to figure things out, and before any of us knew it, we had a (semi) functioning space-based squash game. Just having the game wasn't enough, I mean, how could anyone play it if it was offline?Well, from our previous attempts to make a web app, we already had some semblance of a web page on which we would have uploaded our game. We decided that instead of abandoning all of that work, we would instead convert it into a landing page, on which people could download the game, as well as see a trailer and behind the scenes photos from our work on Quantum-Leap.Overall, we really had an amazing time working together to create this fun little project. We all learned a whole load of stuff that we would never have really had the chance to even see, much less use and explore for a whole 24 hours - to top it all off, we actually managed to achieve, not one, but 2 different finished products that we are all very proud of.Table 1.PorticodeWorked on the unity and the C# code behind that as well. It was my first time using both Unity and C#.Christa Lafiguera\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 11, 2016 04:05 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"quantum-leap","project_tags":["html","css","bootstrap","javascript","unity","c#"],"project_url":"https:\/\/devpost.com\/software\/quantum-leap","keywords":null},{"level_0":429,"hack_vector":[[0.1583514959,-0.1177394241,-0.0310543831,0.0541941263,-0.0275863465,0.1456234902,0.179243505,-0.0411187336,-0.0158267301,-0.0316099487,-0.0042448509,-0.0375315249,0.147485137,-0.0865956098,0.0317451805,0.0248043686,0.2272991538,0.0007893123,0.0470179431,0.1138605103,-0.22336182,0.000029377,-0.0507940948,-0.0119307823,0.1582521349,-0.0293777473,-0.0410262458,-0.1618721038,-0.020235097,-0.088661544,0.0490655378,-0.1198889911,0.0552061312,-0.0632474795,-0.0325754955,-0.0054157428,0.1328077763,-0.1331213266,-0.0333257578,0.0243514683,0.0643580481,-0.1093702316,-0.1663083583,-0.0121634305,0.0252451841,-0.0628746897,0.0324865766,-0.0637388527,-0.0285282023,-0.2166209221,-0.1165625229,0.0239193439,-0.1062188447,-0.0234062951,-0.1795902848,0.1683422029,-0.1404446959,0.007971745,0.0006034875,-0.0480743945,-0.0399817936,0.0281514414,0.0601086281,0.042104423,0.1334695965,-0.0071972827,-0.1212669685,-0.1479431838,0.018667059,0.0176367089,0.0741326362,-0.0329636745,-0.0032982014,-0.1405637562,0.0086146118,-0.0809824541,0.2088261545,0.0068361354,0.0310942121,-0.1458434612,0.1111949384,0.1676798016,0.0362581126,0.1627941579,0.121618025,0.1950308233,-0.1038537994,0.0020364574,-0.0079081738,-0.0910561159,-0.1206496432,0.0842219368,0.0830431506,-0.0055990601,0.0236549471,-0.0391658694,-0.133448571,0.2355903238,0.0543593168,-0.0728796571]],"hackathon_name":"Porticode","index":429,"project_description":"A quick peek at whether your friends can afford to go out1 (I think)Being brokeWatch your friends beg for money, and help them. Relieves peer pressure.HTML5\/CSS\/JS\/jQueryIt was hard to make it do the thing. Everything is hard.Looks pretty good, does the thing.Everything! APIs, Javascript, CSS - all the things we used.A good nap.PorticodeEdited some of the main html program and javascript. Managed Github RepositoryJoseph Higgins\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 11, 2016 04:59 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Banking with Friends","project_tags":["html5"],"project_url":"https:\/\/devpost.com\/software\/banking-with-friends","keywords":"css,everything,thing,hard,good,friends,inspiration,html,help,watch,jquery,challenges,built,broke,beg,banking,apis,javascript,js,used"},{"level_0":430,"hack_vector":[[0.152476117,-0.1012483165,-0.0319824629,0.0425389186,-0.0152524821,0.1457841992,0.1992638111,-0.0434805714,-0.0145706972,-0.0322327837,0.0108234305,-0.0698101744,0.1378025264,-0.0734554678,0.0445432588,0.0109222792,0.2247972935,0.0021816392,0.0430414118,0.1255392879,-0.2347318679,0.0239029396,-0.0514321811,-0.0090943854,0.1272365749,-0.0220159106,-0.0372214913,-0.1700419933,-0.023885062,-0.089741841,0.0525179021,-0.1196079925,0.047444202,-0.0781930834,-0.0156924948,-0.0234012119,0.1252588332,-0.144741267,-0.0546024367,-0.0031112982,0.0506740101,-0.1273466051,-0.1700926274,-0.0245408267,0.0519531257,-0.0595813952,0.017739825,-0.0766976848,-0.0215074085,-0.2169418782,-0.1375470161,0.0333499499,-0.105689384,-0.0019282252,-0.1956795603,0.1714663208,-0.130019322,-0.0141121671,0.0261323582,-0.0950690657,-0.0649756193,0.0234843586,0.0847239867,0.0420856364,0.1127080247,0.0244794805,-0.1068790779,-0.1344795376,0.03119478,0.0375893787,0.072761789,-0.0340365358,0.022480391,-0.1326008737,0.0238801353,-0.1022215486,0.180522874,0.0016932819,0.0186733305,-0.125298664,0.1074275449,0.1494351327,0.0579989105,0.1592069864,0.1063735411,0.1867344528,-0.0963334516,-0.0423522405,-0.0297975652,-0.072981894,-0.1279803365,0.0603375919,0.0937563702,-0.0461946428,0.0023041002,-0.0102190999,-0.1535058022,0.2365284711,0.0133907739,-0.0769574344]],"hackathon_name":"Porticode","index":430,"project_description":"Your laptop stickers are evaluated with OpenCV. You are given a 'hacker score', so you can compare with others.^ ^ ^Most of us have stickers on their laptop. And who does not think they have the coolest. Well, know you can find out if you are right with the use of our app.Using OpenCV to calculate a 'hacker score' based on the stickers you have on your laptop cover.The project was build with Android Studio and OpenCV.OpenCV was a pain to get to work.We are proud to have a project version running before the submission deadline.It was a fun project to learn about OpenCV and App development.Spread the word and get people using the first version of the app.\nRecognise different stickers and count the numbers of Hackathons attended.PorticodeWorked on the backend of the project. Provided basic source code for each of the main functions and helped tackle counting pixel problem.carlo3247\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 11, 2016 04:26 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Swagathon","project_tags":["android-studio","opencv"],"project_url":"https:\/\/devpost.com\/software\/swagathon-uif10m","keywords":"opencv,app,stickers,project,laptop,version,using,get,proud,development,hacker,hackathons,fun,first,find,different,work,deadline,cover,inspiration"},{"level_0":431,"hack_vector":[[0.1526416689,-0.098793067,-0.0255421065,0.0389069282,-0.032863263,0.1284287721,0.1921067089,-0.0194252376,-0.0155197429,-0.019741429,0.0029357504,-0.0636648908,0.1477867067,-0.0586122796,0.0677078292,0.0045313057,0.1931912005,0.0050138477,0.0419301651,0.1362752616,-0.2417330295,0.01174419,-0.0452739336,-0.0192516949,0.1118583381,-0.0189089477,-0.0263187438,-0.1531136632,-0.018464718,-0.1078223661,0.0404029861,-0.1067855507,0.0236550327,-0.0764988586,-0.0051839245,-0.0214314647,0.1233960986,-0.153518036,-0.0752846301,0.0035187718,0.0601747483,-0.1201760247,-0.1329251975,-0.0357935913,0.0595295317,-0.0737776086,0.0219213124,-0.081222862,-0.0244935378,-0.204123646,-0.1551556736,0.0107549019,-0.1166572347,-0.0056658974,-0.1984384656,0.1788697094,-0.1250902116,-0.0310797077,0.0382716358,-0.0941341743,-0.0655620173,0.0117657818,0.0674695894,0.045446787,0.1175434813,0.0214426648,-0.1044436768,-0.1339980811,0.0177238546,0.020895021,0.0619860925,-0.0477754585,-0.0020453327,-0.1236044988,0.0234619565,-0.118711628,0.1830794215,0.0109683694,-0.0129782846,-0.1443832815,0.1040804163,0.1650500596,0.0493811257,0.1510483921,0.1103708223,0.2050620317,-0.0949035734,-0.0257320981,-0.0158394836,-0.0734024346,-0.141925022,0.0690605417,0.099276498,-0.0280336123,-0.0109558366,-0.0047221798,-0.1657316387,0.2559739947,0.0058913734,-0.067601651]],"hackathon_name":"Porticode","index":431,"project_description":"No more passwards .Making few steps into biometric verification !At the moment, companies around the world are looking for new ways of securing accounts and payments . Passwords become more and more ineffective and everyone is looking for a solution to use instead of the classic PINs and passwords.\nBiometric verification is the future and that's why we wanted to do something with face recognition.\nOur plan was to log into an account from a page made by us using face recognition. However we did not achieve that. We ran into some problems :We tried to implement biometric verification into simple html pages, but it was kind of difficult or maybe impossible.\nHowever, we are proud of the fact that we made some code that works ! And it recognises your face! Also,it prints our 1 or 0 into a text file if it found a face or not( 1 if it found , or 0 if it didn't). \n What we have learnt :We are table number 13PorticodeCarmen Ib\u0103nescu\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 11, 2016 04:42 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"!Faced","project_tags":["matlab"],"project_url":"https:\/\/devpost.com\/software\/faced","keywords":"face,matlab,recognition,project,found,light,time,however,passwords,difficult,page,button,html,biometric,work,made,us,use,works,verification"},{"level_0":432,"hack_vector":[[0.1339403689,-0.1088371426,-0.0255927052,0.032482706,-0.0237326901,0.1334548593,0.2000315189,-0.0248980243,-0.003897279,-0.0281101149,0.0154812587,-0.061186295,0.1301297247,-0.0629613027,0.0600728728,0.0198464077,0.2200533003,-0.0015780624,0.0315672532,0.1278226227,-0.2469289005,0.0222424958,-0.0362360217,-0.0264217462,0.1029099897,-0.0274427347,-0.023386281,-0.1766270697,-0.0208011307,-0.1031407863,0.059907265,-0.1072078571,0.0337019451,-0.084372066,-0.0172821265,-0.021886766,0.1058890671,-0.1489619613,-0.0569247529,-0.0047385348,0.0326399133,-0.1266603172,-0.1427753866,-0.0447081476,0.0676352531,-0.0682025403,0.0133394832,-0.0630309805,-0.0277323313,-0.2216798216,-0.1460698098,0.0169929694,-0.1017539576,-0.0199441947,-0.1942872703,0.1633706689,-0.1232177839,-0.0348983258,0.0388560668,-0.0992227048,-0.0767870918,0.0191484764,0.0740178525,0.0424711406,0.1045797914,0.0194209069,-0.1025695726,-0.1302096695,0.0375002995,0.0259008147,0.0586950034,-0.053691607,0.0206731651,-0.1198441759,0.0099191153,-0.123189792,0.1712057889,0.0033717109,0.010037899,-0.1450317353,0.1185578108,0.1656457484,0.0402165875,0.1753684133,0.1008175611,0.2092204094,-0.0954754651,-0.0303287786,-0.0319445468,-0.0729297176,-0.1489656568,0.0630473942,0.0907834321,-0.0384663716,-0.0176770911,0.0080311894,-0.160288617,0.2331899405,0.0121238185,-0.0797522441]],"hackathon_name":"Porticode","index":432,"project_description":"All services you can imagine are in one place. Just a chat message away.Table 17I always wanted to be a king. Not necessarily in order to wear a crown and have a nice throne, but to be able to say orders and they would be done. Now, this vision comes true. Just text your Concierge (butler, assistant etc) what you need to have done and, within limits, this will be done.The base idea was to connect people who need simple services like cleaning, car repair, plumber services etc. with sole traders in order to help the people get their stuff done and on the other hand to give competitive advantage for suppliers who have a hard time competing with huge firms already dominating the market. The idea evolved to incorporating all different services like cab calling, flight booking, and ordering food.The app is only and as much as a chat. You text the virtual Concierge who then analyses it, agrees details of the order with you, and the service in its way. The whole magic happens in the background where the server is looking for contractors for your order and makes all necessary arrangements.Power of Kotlin, NLP, Java, MySQL, and love to tech!Backend + Lack of time :))Held through and did not give up.Kotlin, more Android Development. Teamwork pays off more than sole freelancingFull integration with Uber, Skyscanner, Deliveroo.\nAndroid Pay or some other mobile payment system\nAdd any other service that comes to mind!!!PorticodeTomasz Czernuszenko\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 11, 2016 04:35 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Mobile Concierge - You are the King!","project_tags":["android","natural-language-processing","php","mysql"],"project_url":"https:\/\/devpost.com\/software\/mobile-concierge-you-are-the-king","keywords":"done,order,concierge,services,kotlin,sole,king,give,like,mobile,etc,need,idea,comes,service,people,android,text,time,background"},{"level_0":433,"hack_vector":[[0.1546750665,-0.1276628673,-0.0263732299,0.0339520648,-0.0179169644,0.1282641888,0.1947864294,-0.0381609723,-0.0179151949,0.0039217668,0.0146654341,-0.0495862328,0.1292620599,-0.0639354438,0.0700472295,0.0026740439,0.2076666653,-0.001563933,0.0508525968,0.1081466973,-0.2492178231,0.0481630787,-0.0309889223,-0.0241163336,0.1110554412,-0.0301490743,-0.0251266994,-0.1869005114,0.0029121835,-0.0790826678,0.0626754537,-0.1451848894,0.0261963271,-0.0898894742,-0.0321558826,-0.0393455178,0.1061714143,-0.1555349678,-0.0804117098,-0.006693786,0.0178008992,-0.1553686261,-0.1357041299,-0.0475822128,0.0505039692,-0.0443514436,0.0063081766,-0.0648820847,-0.0209893417,-0.1817797273,-0.1367616504,0.0064683612,-0.1207228005,0.0011577588,-0.1836020648,0.1564233005,-0.1218682304,-0.0049629323,0.0263054948,-0.0823784322,-0.0730420798,0.0189057477,0.078782551,0.0715309903,0.1000348032,0.0089313975,-0.1147558913,-0.1201187149,0.0372416414,0.0301826131,0.0873770565,-0.0638770312,0.0436539948,-0.1325721443,0.017399272,-0.1552820653,0.1702923626,0.0086306119,0.0303879902,-0.1310556829,0.1424423903,0.1544005275,0.0537768602,0.1765709519,0.1168060005,0.1905370355,-0.1226116642,-0.0264428798,-0.0155605068,-0.0759816617,-0.1379030645,0.0584748462,0.1072347686,-0.0545983501,0.027410211,-0.0048198286,-0.1378980279,0.2060909569,0.0183917135,-0.0763079822]],"hackathon_name":"#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open data","index":433,"project_description":"get out challenge #OpenDataHack hydroelectric projectionsHow?HidroNext Team:Hydroelectricity is the most important renewable source in Europe (and worldwide) but, currently climate services for this activity are focusing on wind, solar, etc.   (at least in the R&D programs as Copernicus, H2020,etc.). This sector is currently using climate records for decision making processes as planning of maintenance, evaluation of investment operations, design of the plants (power, etc.), planning of the sector, etc. They are not using seasonal forecasts and long term climate change projections (valuable for this long live assets). The main reason for that it this sector requires river flow as the most important Essential climate Variable, and this variable should be generated with hydrological models, that requires a lot of information (land uses, digital elevation model, etc.) However, two projects are providing this information (in demo mode). SWICCA (Service for Water Indicators in Climate Change Adaptation) offers readily available climate-impact data to speed up the workflow in climate-change adaptation of water management across Europe. ECMWF Web Coverage Service (WCS) is delivering 30 day projections. HydroNext will run in a free web portal. It will allow users to enter the location of the plant they wish to study and some basic parameters (power, reservoir capacity, etc.). Combining this information with river flow data adquired online  from SWICCA and WCS it will generate the next information:HydroNext will boost the demand of climate information in Europa, focusing on private sector and actors that don\u00b4t make use of climate change projections and seasonal forecast.The business model will be FREEMIUM. A free web portal will allow to generate the consultations indicated previously. Premium services will include computation of hydro cascade systems , study of the sediments, etc.The portal is running. It has been developed using Dwango. Visualizations make use of C3.js. All data from SWICCA and WCS are adquired trhougth web services. Algorithms for computing energy generation and other indicators are python functions.Everything is in https:\/\/github.com\/OpenDataHack\/HydroNEXTWhat have you accomplished during the OpenDataHack?#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open dataJorge Paz Jimenez\nOlga Mar\u00eda Serrano RamosDesign of the application, algorithms for generating energy data from river flow data, coordenates, processing of temporal series, access to WCS ECMWF data, etc. ....Olga Mar\u00eda Serrano Ramos\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 07, 2017 03:25 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HydroNEXT","project_tags":["python","html","javascript","css","django"],"project_url":"https:\/\/devpost.com\/software\/hydronext","keywords":"climate,etc,swicca,information,data,web,wcs,sector,using,change,flow,energy,river,generation,next,services,portal,application,copernicus,projections"},{"level_0":434,"hack_vector":[[0.1466800272,-0.108968243,-0.0354637355,0.0396999903,-0.0229972191,0.113505803,0.1892559528,-0.0182432048,-0.0264019407,0.012881266,0.0179920457,-0.0829418153,0.1514112502,-0.0610936359,0.0914782137,-0.0230384488,0.1772813946,-0.011372841,0.040697936,0.1091653407,-0.2438527644,0.0425724871,-0.0441798344,-0.0004252678,0.1057648733,-0.0294349622,-0.0242166743,-0.1756096929,-0.0212052558,-0.0726766214,0.0755578503,-0.129998818,0.008439282,-0.0859453455,-0.0221341811,-0.0207898263,0.0993522406,-0.1553474665,-0.085438922,-0.0228109416,0.0252435561,-0.1369282454,-0.1347976625,-0.0198727101,0.061798308,-0.0453460515,0.0064575071,-0.094044067,-0.0129103651,-0.1852645576,-0.1670130044,0.002156442,-0.1121342331,0.0271172561,-0.2094026655,0.1633307636,-0.1187813058,-0.0209626947,0.0349297896,-0.1194037646,-0.0858710557,0.0269279908,0.080895707,0.0630971864,0.0947497711,0.0299349558,-0.0893821716,-0.1077043191,0.0214024968,0.0151777724,0.0740884691,-0.0498424955,0.042031806,-0.1147232354,0.0517699569,-0.1438644826,0.1791840643,-0.0009809554,0.0014333209,-0.1228308454,0.137047708,0.1539186686,0.0730475709,0.1508418918,0.0998909324,0.2043643594,-0.0934716687,-0.0534105673,-0.014255899,-0.0686722174,-0.13738662,0.0519352742,0.1144537479,-0.0562442094,0.0078985048,0.010194866,-0.1674644351,0.2412846088,-0.0028511586,-0.0768676102]],"hackathon_name":"#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open data","index":434,"project_description":"Reading Bus data + Weather data + Machine learning = more efficient management, maintenance, and supportWe were impressed with the approach of Reading Buses to make their data open and available. \nWe wanted to use their data to show that open data creates win-win situations between the public sector, \nthe private sector, and civil society. It was our ambition to create a real, value-adding product for \nReading Buses using ECMWF data.Our model predicts probability of accidents for buses on bus lines in response to weather conditions.\nKey data sets we combined included line routes and Claims data from Reading buses alongside Weather \ndata from the MARS archive in particular data sets relating to Total Column Ozone, Precipitation, \nSonw fall and Evaporation.We used data on bus collisions from 2001 to 2016 and ECMWF data from MARS extracted via the python API. \nWe started off with exploratory data analysis in R and plotly (included as html).\nModels were built in R using generalised linear models with lasso and ridge regression, \ncross-validation for hold-out test and validation datasets, and plots.\nWe identified the key words of our challege to be \u201cpredicting breakdowns\u201d. Following this on a qualitative \nlevel we brainstormed a series of questions using the S.Mm.A.R.T (specific, Measures, Motivation, Actions, Routes) \nacrynom. Questions we asked included where were major claims occuring? What are the quantities and measures of the Claims? \nEtc. We then identified data sets that we could combine to help us answer these questions and form hypotheses.Cleaning the bus data was challenging, and it would have been nice to get the MARS data directly into R.\nHowever, the python API did a great job in the end! Perhaps we should come back to the dataset and write an\nR package implementation of the Web API library?Built a model with an out-of-sample AUC of 0.76! AUC is a measure of predictive accuracy, \nwith 0.5 being random and 1 being a perfect prediction. 0.76 indicates a pretty decent result for a real-world, \nlarge-scale dataset like this. Quite a bit better than we had initially anticipated!Predicting Accidents for Reading Buses\"How to extract MARS data via the python API, and how to deal with NetCDF format data in R.\nIf we could start all over again we would force John to stay with us the weekend ;)\nMore of his domain expertise on the could have benefited a lot!\" -Laurens\"I learnt a lot about how to use data to back up hypotheses. Coming from a strategic background, working alongside data scientists gave me my first taste of hands-on cleaning of data and using data i nreal time to inform (or invalidate) hypotheses.\" - Rajesh\"Weather dataset can be very varied and correlate to even bus crashes.\"  - Gordon\"There is so much potential for interdisciplinary collaborations. Everybody had a different background and skills which were all important in getting the analysis done!\" - FionaWe are pretty confident that Reading Buses will be interested in using our model. \nWe are handing over code and model, and hope that there will be opportunities to build on this work in the future! \nOther data can be included to improve the model, such as bus operations, special events in Reading, and time of the day. We are interested in learning more about developing this work in the Reading buses innovator programme, testing our work in small scale pilots within Reading buses and working with the Finance, Engineering and Marketing teams to build economic models around our products. We also brainstormed a number of ideas around both the customer experience and acquisition of more customers.Additional Data sets...Expand predictive analytics within Reading Buses...Write an R package for accessing ECMWF data? (rOpenSci)#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open dataI suggested the project, worked on data extraction, data cleaning, and algorithm training. It was great getting to know the python API and I was very happy with the results of the model.I enjoyed working with people from different backgrounds, where some of us focused on creating a solution using code while others were concerned with visualising the results and framing a narrative around it!Well done team :)Laurens Geffert\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 04, 2017 09:55 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Accident and break-down prediction for Reading Buses","project_tags":["r","javascript","google-maps","google"],"project_url":"https:\/\/devpost.com\/software\/accident-and-break-down-prediction-for-reading-buses","keywords":"data,reading,buses,bus,model,using,com,api,sets,mars,included,weather,gmail,fiona,dataset,hypotheses,ecmwf,models,python,questions"},{"level_0":435,"hack_vector":[[0.1444470882,-0.1434668601,-0.0200440083,0.049554117,-0.0248595141,0.1256418824,0.1906484962,-0.0440160446,-0.0394970812,0.0188893043,0.0312042087,-0.0387267768,0.1384719163,-0.0552694276,0.0909615234,-0.0073992228,0.2036417872,-0.0029544791,0.0410335883,0.1061111838,-0.2341787666,0.0666503906,-0.0358424112,-0.0277941264,0.1187541783,-0.022215927,-0.0160454139,-0.2070129514,-0.0051504434,-0.0603450835,0.0695287064,-0.1505876482,0.0260155536,-0.0951851457,-0.0294740312,-0.0387479439,0.1022486687,-0.1491088569,-0.0819019303,-0.0104755256,0.0148688937,-0.165029034,-0.1385276169,-0.0414752625,0.0280195214,-0.0211770665,0.008545843,-0.0564281084,-0.0231664442,-0.1735607386,-0.1211167574,-0.0125929182,-0.1172604337,0.0069666519,-0.1663416922,0.1491050869,-0.1189039126,0.0155834127,0.0269685145,-0.0785463601,-0.0676409528,0.0202194173,0.0779517069,0.0760361329,0.08985883,0.0077548786,-0.1174134761,-0.1227033287,0.0330317318,0.0133549012,0.0801788047,-0.0589212738,0.0627448633,-0.1319126636,0.0121694189,-0.1677478552,0.1743507534,-0.0001681872,0.04977623,-0.1182542369,0.1595717967,0.1580595225,0.0666413605,0.1822682172,0.1227493212,0.1771585941,-0.1345768571,-0.0232824981,-0.0076480466,-0.0814661831,-0.1336193234,0.0673608705,0.1116040647,-0.058452256,0.0487843864,-0.02903926,-0.1339695752,0.2004456967,0.0218921918,-0.0707027987]],"hackathon_name":"#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open data","index":435,"project_description":"Prevent future epidemics after droughts and floods by knowing where to deploy fresh water in high-risk zones of KenyaDeploy freshwater here to avoid epidemicsEpidemic risk zonesDrought indicesRainfallMany African countries suffer from poor water supply and drainage, which in turn leads to flash floods and droughts. Both flash floods and droughts in affected areas are very likely to cause disease outbreaks, added to the original problem of lack or surplus of water. Therefore, by using rainfall predictions it is possible to predict the likelihood of disease, droughts, water shortage problems and floods. Predicting the possibility of these hazards then allows emergency response teams to make informed decisions on where to best deploy emergency resources. \nThe protection system uses the following data elements:\n\u00b7         Spatial Population coverage\/villages\n\u00b7         Medical centres\n\u00b7         Cholera cases (per region)\n\u00b7         Rainfall prediction\n\u00b7         Drought index (SPI)\n\u00b7         Poverty\n\u00b7         Livestock\n\u00b7         Accessibility to waterLanguages:\nJava script \/ d3js, leaflet;\nPython;\nFortran;\nMARS scripting;\nSystems:\nArcGIS\/ArcMAP;\nQGIS;District\/villages boundary and population;\nMedical centres;\nCholera cases (per region);\nERAInterim Total Precipitation;\nStandardised Precipitation Index (using ERAInterim precipitation);\nPoverty;\nLivestock density;\nRiver\/Water bodies\/Water Points;\nAccessibility to water;ECMWF (http:\/\/apps.ecmwf.int\/datasets\/);\nWorld Resources Institute (http:\/\/www.wri.org\/resources\/data_sets);\nFAO (http:\/\/www.fao.org\/home\/en\/);\nHDX (https:\/\/data.humdata.org);\nCWT;#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open dataI've contributed by collecting, processing and analysing ECWMF precipitation data wich is used for the forecast data, historical reanalysis data and to calculate the forecasted flood and drought index.I've contributed to develop the idea of the WDPS, collect, process and analyse the data, and the user interface developmentContributed with the idea, then the implementation of the interactive map using javascript, and contributed to the implementation of the inference engine.Damien Decremer\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 07, 2017 06:06 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Water Disease Prevention System","project_tags":["javascript","d3.js","python","leaflet.js"],"project_url":"https:\/\/devpost.com\/software\/water-disease-prevention-system","keywords":"water,data,droughts,http,floods,precipitation,disease,resources,org,per,www,population,poverty,livestock,protection,rainfall,medical,flash,index,fao"},{"level_0":436,"hack_vector":[[0.1504168957,-0.1527081579,-0.0246410258,0.0475918986,-0.0299412496,0.1190324128,0.1761641055,-0.0240556356,-0.0368008465,0.0244706701,0.0293628387,-0.0428964533,0.1412857175,-0.0436038002,0.1003965735,0.0053243437,0.2155380845,0.0191851668,0.0286380872,0.1023406833,-0.2387007624,0.0481388606,-0.0462133326,-0.0362620875,0.1138013676,-0.0233035926,-0.0262081306,-0.2126244605,0.0097613726,-0.0655404776,0.0741640627,-0.1474165469,0.0151912151,-0.1049185619,-0.032730341,-0.0290520657,0.0879709423,-0.1520922482,-0.0848013163,-0.004355547,-0.0056259604,-0.1567084938,-0.1441439986,-0.0351284817,0.0244442113,-0.0368415341,0.0095729027,-0.0501450114,-0.0205241404,-0.173443988,-0.1153939143,-0.027320344,-0.1112511307,-0.023520112,-0.1450584233,0.1692103595,-0.102339983,0.0324884281,0.0245926492,-0.0679934248,-0.0672074556,0.0395915136,0.0715836212,0.1033900529,0.0870807022,-0.0001156213,-0.1248134673,-0.1266252548,0.0265321452,-0.0007357771,0.0867278203,-0.046529144,0.0641381666,-0.1288255453,-0.0120804636,-0.170635879,0.1876254529,-0.0001126658,0.0621441677,-0.1114949733,0.160614714,0.1577412337,0.0604772381,0.1628187597,0.1251799613,0.1768287271,-0.1315640956,-0.0153567959,-0.0134269604,-0.0825189427,-0.1275403798,0.0728397816,0.1027260944,-0.0591083914,0.0688999072,-0.0316106156,-0.1207799017,0.2020558566,0.0234767124,-0.0841080993]],"hackathon_name":"#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open data","index":436,"project_description":"#african#animals#migration#aam#krugerbuffalo#kruger#buffaloTotal precipitationAre animals better at weather forecasting than human beings?Study the impact of weather precipitation on animal migration - Kruger buffalo.\nWe extracted data of landcover, migration of buffaloes and precipitation, then used QGIS to visualise them and tried to see the relationship of these information.QGISExtracting netcdf datasets from ECMWF server directly and finding the usage of netcdf files.\nUsing GIS to visualise.Learned how to use GISQGIS\nHow to extract data from ECMWF\nHaving funDevelop more details and consider more attributes that may influence the migration of animals.\nAnalyse the weather and landcover to predict the optimal route of migration and help animals move to prevent from extinction.\nUse the research on different areas, e.g. tourism, animal protection.#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open dataKamalkanth Behera\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 11:17 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"African Animals Migration","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/african-animals-migration-ikupcd","keywords":null},{"level_0":437,"hack_vector":[[0.1496479511,-0.1579401493,0.0118416473,0.1044272259,-0.0536413081,0.1570002288,0.1582894921,-0.0503563881,-0.0411698334,-0.0126546044,-0.0118953288,0.0607643239,0.1120952591,-0.0702466369,-0.0061579123,0.0784667432,0.2515825927,0.0483528227,0.051522024,0.0592656247,-0.170458138,0.0117414566,-0.0402169563,-0.0738423467,0.1807225049,-0.0128630456,-0.0819728449,-0.1913575381,0.0515582301,-0.0541226752,0.0165995266,-0.096436061,0.0823543072,-0.0562266,-0.0460288674,0.0179829951,0.1438124627,-0.1034822315,-0.005183999,0.1143618748,0.0442136675,-0.1671877354,-0.171742186,-0.0326374061,-0.0698145702,-0.0290016606,0.0418117344,0.0125683593,-0.0116271004,-0.1639755219,-0.0087592984,0.0333184637,-0.1105772629,-0.0730865225,-0.0658050105,0.1334165186,-0.1480422467,0.103679955,-0.0196117833,0.0786180645,-0.0039398321,0.0402290709,0.0337636508,0.0893406644,0.1404208392,-0.0648553073,-0.143423155,-0.1636253148,0.0066542062,-0.0092925699,0.0706328452,-0.0341905728,-0.0063712066,-0.1615448147,-0.0874957219,-0.0695742816,0.1894031167,0.0233997796,0.1184524521,-0.1349425763,0.1192817539,0.1387233585,0.0123563493,0.1366028637,0.1654746681,0.1361769587,-0.1555325389,0.1022216976,0.0219549723,-0.1260558069,-0.0637310892,0.1144454181,0.0122844679,0.031980373,0.1277250946,-0.1190663651,-0.0357593931,0.1220524237,0.1217209771,-0.0311201476]],"hackathon_name":"#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open data","index":437,"project_description":"just exploringengg project#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open dataSankhadeep Sarkar\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 08, 2017 06:02 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"smart systems","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/smart-systems","keywords":"systems,smart,ran,proud,project,next,learned,inspiration,engg,challenges,built,accomplishments"},{"level_0":438,"hack_vector":[[0.1491048038,-0.1428956091,-0.0324358158,0.0449695364,-0.027439462,0.1181816533,0.1773114502,-0.0261914991,-0.0378313735,0.0217357669,0.026153475,-0.0522428602,0.1453018039,-0.0476162694,0.0968998596,0.0021271792,0.211962834,0.0085690627,0.0296633784,0.1083503962,-0.2452541888,0.0435551964,-0.0412590764,-0.027555855,0.1117872298,-0.0247988328,-0.026814051,-0.2042428404,0.0030042618,-0.072491914,0.0783054084,-0.1454349309,0.0140202343,-0.0970294401,-0.0305986218,-0.0323661491,0.0892939121,-0.1520474106,-0.0805957988,-0.006377066,0.0054682987,-0.1484169662,-0.148672089,-0.0302415565,0.0341159143,-0.0375951789,0.0074388469,-0.0611142628,-0.0149524994,-0.1799155474,-0.124949351,-0.0216193814,-0.1074001119,-0.0145267835,-0.1658274382,0.1688461602,-0.1071925387,0.0211044233,0.0254606232,-0.0785026625,-0.0709685758,0.0378509164,0.0731029585,0.0925253034,0.0935538709,0.0059681395,-0.1154855341,-0.1233543232,0.02895795,0.0045258859,0.0870018825,-0.0441217721,0.0545017123,-0.1255699843,-0.0003606355,-0.162597701,0.1859559268,-0.0002871478,0.0474473126,-0.1106799692,0.1560453027,0.1574355364,0.061997477,0.16647093,0.1226785704,0.1854724139,-0.1226779222,-0.0237573851,-0.0171030015,-0.0775705874,-0.1302547008,0.0670034662,0.1089423299,-0.0586496592,0.0501485094,-0.018917324,-0.1322090477,0.2106723189,0.0198486466,-0.0834834352]],"hackathon_name":"#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open data","index":438,"project_description":"#african#animals#migration#aam#krugerbuffalo#kruger#buffaloTotal precipitationAre animals better at weather forecasting than human beings?Study the impact of weather precipitation on animal migration - Kruger buffalo.\nWe extracted data of landcover, migration of buffaloes and precipitation, then used QGIS to visualise them and tried to see the relationship of these information.QGISExtracting netcdf datasets from ECMWF server directly and finding the usage of netcdf files.\nUsing GIS to visualise.Learned how to use GISQGIS\nHow to extract data from ECMWF\nHaving funDevelop more details and consider more attributes that may influence the migration of animals.\nAnalyse the weather and landcover to predict the optimal route of migration and help animals move to prevent from extinction.\nUse the research on different areas, e.g. tourism, animal protection.#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open dataIt was great to work in the team and learned a lot from the discussion and downloading data. The best thing is making friends with two creative genius, and working with them to win a prize.Ken Lu\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 11:03 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"African Animals Migration","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/african-animals-migration","keywords":null},{"level_0":439,"hack_vector":[[0.1623392701,-0.1746186465,0.0109890699,0.1134409532,-0.0440468229,0.1688100249,0.1491607279,-0.0806529671,-0.0420878232,-0.008269107,0.0021687974,0.06242406,0.1116183102,-0.0663571283,0.0153161967,0.0371709056,0.2249621749,0.0373408943,0.0682329834,0.0428870581,-0.1670181006,0.0255009905,-0.0375810564,-0.0693629906,0.1796976179,-0.0182520002,-0.0597420782,-0.1969740689,0.0357949547,-0.0326448269,0.0274490081,-0.1197353303,0.0820217133,-0.0591098107,-0.0604925863,0.0008469916,0.1432409286,-0.1069207564,-0.0259480011,0.1054024696,0.0535676479,-0.1646967083,-0.1621235907,-0.0299028326,-0.0758954212,-0.0060748439,0.0435332134,0.0075812857,-0.0277245268,-0.1644285172,-0.0305419173,0.0321533941,-0.1225924119,-0.0532406159,-0.0648397207,0.1230531409,-0.1377445459,0.1082442924,-0.0243905466,0.0775608718,-0.0079148076,0.025674697,0.0318701752,0.0835132524,0.1323577315,-0.0561811328,-0.1467812508,-0.1486937553,-0.0064991037,-0.004010655,0.0789953768,-0.0393500812,0.0139681185,-0.1768412143,-0.0731143728,-0.0729310662,0.201619029,0.0315875299,0.1135101244,-0.129937768,0.1372113973,0.1346010417,0.0132209109,0.1483751386,0.1734391898,0.1357037723,-0.1530170888,0.0908123329,0.0280526113,-0.1093489304,-0.0675216168,0.1124781668,0.0360176712,0.0121276043,0.1382828206,-0.1380175501,-0.0201678444,0.1328212321,0.109830685,-0.0287869722]],"hackathon_name":"#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open data","index":439,"project_description":"https:\/\/paper.dropbox.com\/doc\/Project-Submission-8K9mqbPtBEdTXwM4M43f6https:\/\/paper.dropbox.com\/doc\/Project-Submission-8K9mqbPtBEdTXwM4M43f6#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open dataZack Clark-Kington\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 09:15 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Bus Viewer","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/bus-viewer","keywords":"submission,project,paper,mqbptbedtxwm,https,dropbox,doc,com"},{"level_0":440,"hack_vector":[[0.1507972181,-0.124347724,-0.0289685745,0.0470392518,-0.0333824195,0.1516527832,0.1663078219,-0.0417894647,0.006415314,-0.0473863594,0.0109645696,-0.0458215736,0.1221756414,-0.0493448749,0.0446705446,0.0291541815,0.2482221425,0.0410653204,0.0272641461,0.1190331653,-0.2434565127,0.009590189,-0.0436803289,-0.0367770046,0.1085998639,-0.0105034448,-0.0336575694,-0.1824324578,-0.0139737837,-0.1192572862,0.0382120535,-0.1334622353,0.0401278585,-0.0810208172,0.0002126621,-0.0376277454,0.1131041571,-0.1499905288,-0.0668729916,0.0188687257,0.0301270671,-0.1378290951,-0.1527424902,-0.0575925037,0.0217721146,-0.0864263922,0.0157800354,-0.0258852541,-0.0561251342,-0.2036074996,-0.1182375699,0.002099911,-0.0899559408,-0.055672273,-0.1604771167,0.1638870686,-0.102072753,-0.0148677574,0.0325745419,-0.0650003105,-0.0645424277,0.011121274,0.0655009151,0.052909907,0.0949958339,0.0177630391,-0.1407297999,-0.1461468637,0.0288401954,0.0385394506,0.0756380409,-0.0597045012,0.0346021764,-0.1273161769,-0.0078815566,-0.1279282421,0.177653268,0.0154723348,0.0396598615,-0.1361150891,0.1141455695,0.1728212088,0.0320020542,0.1799255311,0.1102121845,0.178163588,-0.1315321475,-0.013162951,-0.033846125,-0.0814479813,-0.1057437956,0.0766102299,0.0755797401,-0.0473103821,0.0204939861,-0.0256058406,-0.1396424174,0.2398827672,0.0230056085,-0.0889984667]],"hackathon_name":"#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open data","index":440,"project_description":"You'll laugh, you'll cry but you won't hurl the next time you find your dream cruise on Totes maBoats.When you're searching for a cruise, you buy based on dates and price. But when you get off the boat, what you remember is either fun in the sun or non-stop queasiness.Why do we not think about the weather? Well, now you can.Search major cruise lines for dates and pricing, and correlate that with reliable weather data.Pour over massive amounts of data and write scripts to organise all of it.Engaging ui#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open dataLorin Thwaits\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 08:59 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Totes maBoates","project_tags":["ruby-on-rails","postgresql"],"project_url":"https:\/\/devpost.com\/software\/totes-maboates","keywords":"data,weather,cruise,dates,either,maboates,lines,inspiration,get,fun,engaging,write,massive,correlate,buy,built,boat,based,major,next"},{"level_0":441,"hack_vector":[[0.1308014542,-0.1208062544,-0.0210570395,0.0394626185,-0.01809345,0.1315181255,0.1971833259,-0.0262949113,-0.0249520242,-0.0006882995,0.0241462048,-0.0680186823,0.133166939,-0.066444546,0.0604927912,0.0257688556,0.2234670073,0.0008039508,0.0411815643,0.1247417182,-0.2443989366,0.0529521666,-0.0365932435,-0.0208601542,0.109169811,-0.0230124425,-0.0369612388,-0.1872295737,-0.0003547537,-0.0877888948,0.064441964,-0.1220958903,0.0321077816,-0.0881351903,-0.0130453994,-0.028142564,0.1101222187,-0.150666073,-0.0538101681,-0.0175220743,0.0255223829,-0.1591872871,-0.1581575572,-0.0497216135,0.0578895807,-0.0414264612,0.0077832416,-0.0581974238,-0.0118268421,-0.2002562433,-0.1307267547,0.016836727,-0.1086634099,-0.0007956882,-0.2012969851,0.1553309262,-0.1243913397,-0.0186676513,0.0493343212,-0.099153161,-0.0680821314,0.0246376116,0.0854125544,0.0690300092,0.0918129459,0.0211416725,-0.0937088206,-0.132539928,0.039682243,0.021267524,0.074780263,-0.054830566,0.0425386317,-0.1133616716,0.0115797995,-0.1471809596,0.1568440944,-0.0045364196,0.0308550633,-0.1302837133,0.1278093159,0.1604283005,0.0534808412,0.1841453612,0.1040735915,0.1888988018,-0.1192337722,-0.0410052799,-0.0305030867,-0.0817422941,-0.1364546418,0.0589383617,0.0915618241,-0.0550212264,0.0151959118,0.0070492569,-0.1553496122,0.205581516,0.0162238423,-0.0790224224]],"hackathon_name":"#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open data","index":441,"project_description":"A compact carbon comparison appThe aim of our project is to raise awareness of the overuse of resources\nand high emissions across the world, which are driving climate change and\ndestroying habitats world-over. In order to motivate this, we have developed\na Shiny App which enables the user to input details of their journeys, including\nmode of transport, starting location, end destination, and then compare their\nconsequent carbon footprint with the national average of their home country. By\ngiving the app the element of comparison, it becomes less of a negative thing\nand gains an aspect of improvement and competition.The app has been designed in Shiny App (because none of us have any expertise\nin app or website development), using R, using emissions data from the World\nBank for the per capita country averages. We also used World Bank data on\nautomobile emissions for various brands, models and fuel types and similarly\nfor buses, trains and aeroplanes. By inputting the start location and end\ndestination of their journeys, the app calculates the journey distance for the\nchosen mode of transport and thereby finds the resulting CO2 emissions.Finally, the app compares the total journey emissions against the national\naverage, where it can be decided whether the user has beaten their nation or\nnot.Lack of expertise in app or web development. Different coding language expertise.The variety of parameters choosable in the app. For example, when travelling by car,\nthe user is able to specify brand, model type, year, fuel type... and more!How to use Shiny App and calculate carbon emissions for almost any journey, via\nvarious modes of transport.Ideally, we would also like to include calculations of the CO2 emissions\nresulting from household gas and electricity usage and factors concerning waste\nand food miles, in order to get a complete picture. It would also have been good\nto make an actual app or game, for nicer user interfacing.#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open dataJoe Wallwork\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 08:04 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Can you beat the average?","project_tags":["r"],"project_url":"https:\/\/devpost.com\/software\/can-you-beat-the-average","keywords":"app,emissions,world,user,transport,average,also,journey,shiny,expertise,development,order,resulting,carbon,country,bank,destination,location,data,mode"},{"level_0":442,"hack_vector":[[0.1544822901,-0.1469366103,-0.0184524599,0.0823165774,-0.0315268375,0.1572351158,0.1962345541,-0.0441849008,-0.0385599658,0.0075792288,0.003154916,0.0039548692,0.1345072091,-0.0608705133,0.0440615639,0.0200186148,0.234567672,0.0292802174,0.0534424521,0.0781942233,-0.2164979577,0.0354451016,-0.0448830277,-0.0389678888,0.1636474878,-0.0099635739,-0.0578691959,-0.2031843215,0.0223580338,-0.0638958365,0.0684684888,-0.1473549157,0.0477997288,-0.0722312033,-0.0354811475,-0.0027763506,0.1243215427,-0.1240582019,-0.0359879285,0.0433861017,0.0460367501,-0.1823444813,-0.1670493335,-0.0435757712,-0.0117971655,-0.0315400176,0.0126422616,-0.0274801515,-0.0261842869,-0.1724255681,-0.0707969293,0.0088903708,-0.1108394414,-0.0253236182,-0.1401085407,0.1485508531,-0.1538131237,0.0395104736,0.0025908009,-0.0086408788,-0.0438748375,0.0382272415,0.0626487285,0.0712662861,0.1256450862,-0.0213316791,-0.1318914145,-0.147179693,0.027786646,0.0168721322,0.0782964006,-0.0467693582,0.0354609936,-0.1379410475,-0.0353834368,-0.1209980845,0.1886699498,0.0235924087,0.0739023462,-0.1359103471,0.1333434731,0.1517200321,0.044389084,0.1659264266,0.1390430778,0.1849327385,-0.1441910267,0.0375680216,0.0071352865,-0.1025826335,-0.0965391919,0.0941584632,0.0643825307,-0.0055158464,0.0792816728,-0.0503570959,-0.0986113101,0.1837832332,0.0603728667,-0.0531127937]],"hackathon_name":"#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open data","index":442,"project_description":"3D visualisation\/game using atmospheric data from ECMWFNoneCan move around a procedurally generated scene, tracking metrics associated with a 3D zone.Online IDE at playcanvas.comUnable to shrink weatherdata that a browser can handleNoneFirst time using itMore gamification and integration of data#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open datacan k\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 07:13 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Weatherbirds","project_tags":["playcanvas","webgl","javascript"],"project_url":"https:\/\/devpost.com\/software\/weatherbirds","keywords":"none,zone,first,inspiration,ide,handle,generated,gamification,data,learned,com,challenges,built,browser,associated,around,integration,metrics,weatherdata,move"},{"level_0":443,"hack_vector":[[0.1494619548,-0.1506676525,-0.0192525554,0.0797960311,-0.0474206656,0.1583818495,0.1841199845,-0.0399755985,-0.0419279262,0.0120534953,-0.0048359921,0.0020573097,0.1326523423,-0.058664646,0.0472364128,0.0224113744,0.2551709712,0.0517152511,0.0433038808,0.056849014,-0.2088848799,0.0506860688,-0.0376938805,-0.0612744801,0.1460550129,-0.0005017648,-0.0735290721,-0.2097361982,0.0361882374,-0.070388034,0.0668750629,-0.156992659,0.0467709564,-0.0797535479,-0.0360557102,-0.0114367912,0.1328196824,-0.1210238039,-0.0439464003,0.0551207922,0.0286561325,-0.1980465353,-0.167590633,-0.0448594019,-0.0266367029,-0.024533378,0.0162749663,-0.0189580452,-0.0348639227,-0.149547711,-0.0592008755,0.0152389677,-0.0957709327,-0.0434198752,-0.1158874258,0.1423498839,-0.1359776556,0.0556964278,0.0063315094,0.0101981582,-0.0458173603,0.0379698165,0.0647852495,0.0854109377,0.114647463,-0.030972518,-0.1338916123,-0.1481929868,0.0296680145,0.0280194469,0.0955422223,-0.05179625,0.0466106161,-0.1496220529,-0.0459175892,-0.1448404789,0.1758206785,0.0349662602,0.0962271839,-0.1216325313,0.1460453123,0.14836061,0.0516580418,0.1575205922,0.1432715058,0.1535141021,-0.1590933502,0.0382044613,0.0175714921,-0.1194794849,-0.0794489458,0.0842567012,0.0478512719,-0.0183852967,0.1116778553,-0.0532582849,-0.0855249166,0.1672480702,0.0570598468,-0.0607566126]],"hackathon_name":"#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open data","index":443,"project_description":"A Story Teller that generates a random story based on weather data from ECMWF.A Story Teller that generates a random story based on weather data from ECMWF.#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open dataNathan Windisch\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 05, 2017 06:00 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"WeatherTales","project_tags":["python","r","shell"],"project_url":"https:\/\/devpost.com\/software\/weathertales","keywords":"story,weather,teller,storyteller,random,opendatahack,generates,ecmwf,data,based"},{"level_0":444,"hack_vector":[[0.1407609284,-0.0906158462,-0.0255461019,0.0349512957,-0.0179284513,0.134640947,0.2071569264,-0.0308563616,-0.0158590265,-0.0037707142,0.0267465934,-0.0693954676,0.1357823461,-0.0701387227,0.0674651191,-0.0035385429,0.213637799,-0.0079335663,0.0438964963,0.1230972931,-0.2418542057,0.040104419,-0.0447058044,-0.0140947439,0.0979267061,-0.0268948637,-0.0248758998,-0.1851779222,-0.0158755984,-0.0858896524,0.0699143708,-0.1226156056,0.0280749444,-0.0899497941,-0.0205668192,-0.0145731987,0.1089981496,-0.1428253651,-0.0665805787,-0.0113460915,0.0267304033,-0.135491088,-0.1408379227,-0.0370699354,0.0726872236,-0.0563790277,0.0085742995,-0.0775656998,-0.0226775184,-0.2082601935,-0.1487355679,0.0098989913,-0.1091351509,0.0084637674,-0.1964104921,0.1503454447,-0.1245634556,-0.0298963785,0.0362699293,-0.1117769256,-0.0698900893,0.0184239559,0.0931043178,0.0550224707,0.1047363132,0.0133889355,-0.0935131311,-0.1189476252,0.0397407003,0.0242076889,0.0617209822,-0.0516658574,0.0329256766,-0.1164764315,0.0299826823,-0.1478407532,0.1742631793,0.0054534408,0.0162103344,-0.1374974102,0.1317795366,0.1581064314,0.05747132,0.1707425863,0.0952623188,0.2004815936,-0.0991223305,-0.0466426425,-0.0263352487,-0.0812564716,-0.1510883421,0.0486145504,0.0986102149,-0.0465290509,-0.0023761997,0.0197637361,-0.1564764082,0.2161442786,0.0085468153,-0.0825611204]],"hackathon_name":"#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open data","index":444,"project_description":"Will provide you with the ideal destinations for holiday based on your parameters of weather conditionsMany young people are not too fussed in terms of where they want to go on holiday as much as they are concerned about having good weather. For this reason, this app will take your weather preferences as filters first, and then find suitable cities for you to visit.Holideal will be in charge of suggesting you the best holiday given specific parametersThe flask Web-Server serves requests coming from the Web-app, ios app, and android app in an easier to digest format than ECMWF.The web interface will allow you to use Holideal in a tinder-like fashion, by specifying weather parameteres such as surface temperature, cloud coverage, sea temperature, and other parameters. Once these are set, the user is presented a restricted dataset that fits his filters. Then you get the chance reject or accept locations. Rejected ones will not be shown to the user again, while accepted ones will be able to be viewed later on a separate page to review his\/her choices.The mobile interfaces (ios and android) will also serve the same functionality, allowing the user to swipe choices left (reject) and right (accept).We used Flask for the Web-app interface, as well as an api\nReact Native used for both iOS, and AndroidWe found the dataset fairly difficult to get used to. For this reason, we decided to serve requests as part of our Flask server\nThe fact that we were developing for 3 platforms was also fairly difficult and in retrospect, quite ambitious\nInteracting Flask with javascript is not the most pleasant experience.Time constrained completion of tasks that we've never touched before (API, ECMWF, etc)\nA functioning app that runs cleanly and smoothly (none of us are web developers)How to interact flask with javascript, bootstrap, etc in order to make web apps\nDistributing data across different devices from a central server\nAccessing and reading NETCDF4 files as well as its fairly complex apiImplement our functionality for more cities in europe\nImplement flight and hotel price checkers, and perhaps a further filter on this when users want to swipeTeam name & members#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open dataAndroid and iOS versions of app and NodeJS server for REST API weather data.Simion Putina\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 04, 2017 01:34 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HoliDeal","project_tags":["python","flask","react","bootstrap","html","node.js"],"project_url":"https:\/\/devpost.com\/software\/holideal","keywords":"web,app,flask,holideal,used,android,server,fairly,api,user,ios,weather,reason,requests,holiday,cities,choices,dataset,difficult,reject"},{"level_0":445,"hack_vector":[[0.1522068083,-0.1588236243,-0.0011527133,0.0941140652,-0.0533111989,0.1509833485,0.1622161418,-0.0438602939,-0.0410475358,-0.0062906584,-0.0007881262,0.0452423058,0.119392857,-0.0697930381,0.0192832518,0.0705239996,0.2542760372,0.0453574359,0.0465985537,0.0666199178,-0.1866996735,0.0107250102,-0.0463240668,-0.0751223788,0.1627693772,-0.0126429722,-0.0743723586,-0.2005845308,0.0454882607,-0.0575083084,0.0232491326,-0.1058535501,0.0724822059,-0.0702920184,-0.0441309959,0.0094805565,0.1302158535,-0.1112763286,-0.0227003284,0.0986747369,0.033129476,-0.1612779796,-0.1710977554,-0.0302254669,-0.0541339852,-0.0376904085,0.0406402089,0.0038947884,-0.0183206424,-0.1694145054,-0.0226702914,0.01373195,-0.1064679474,-0.0749569908,-0.0729887933,0.1451462209,-0.136736691,0.0958277658,-0.0119414637,0.0558303595,-0.0139915952,0.0438102931,0.0429719165,0.1004257128,0.1357352287,-0.0590979867,-0.1533687264,-0.1598554105,0.0096982913,-0.0074967174,0.0782949701,-0.0357912853,0.0010177136,-0.1603503972,-0.0812316611,-0.0938563645,0.1977167428,0.0217899196,0.1169616655,-0.1327281445,0.1310697198,0.1485852152,0.0222301688,0.1388785839,0.154074803,0.1443419009,-0.156853348,0.0837815925,0.0150775388,-0.12543495,-0.0784082934,0.1080555096,0.0239597782,0.0154368216,0.1250464171,-0.1007231399,-0.0503932647,0.1370875537,0.1096895114,-0.0455814414]],"hackathon_name":"#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open data","index":445,"project_description":"How does weather affect delays to Reading buses?#OpenDataHack @ECMWF - Beyond weather: explore creative uses of open dataJames Shaw\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 04, 2017 11:26 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Reading bus service quality","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/reading-bus-service-quality","keywords":"service,reading,ran,quality,proud,next,learned,inspiration,challenges,bus,built,accomplishments"},{"level_0":446,"hack_vector":[[0.1622321904,-0.1655395329,0.003313585,0.0805713758,-0.036427103,0.1575024575,0.180847019,-0.055263415,-0.0354416519,-0.03352708,-0.0056575094,0.0362719372,0.1218361109,-0.0708316118,-0.0178399812,0.0704302937,0.2610581815,0.0341114365,0.0512696207,0.0893268138,-0.2082005292,-0.0000674898,-0.0417050496,-0.0442309529,0.1857049614,-0.0183133353,-0.0741583258,-0.1791741699,0.0299580321,-0.0971861109,0.0314026587,-0.1183119565,0.0720063597,-0.0404268764,-0.0259984918,-0.0107941488,0.1363886297,-0.1150482371,0.0055529522,0.0734445825,0.073559083,-0.1525731534,-0.1849821359,-0.0522917062,-0.0388745442,-0.0537393689,0.0393742397,-0.0057797437,-0.0294462722,-0.1856155992,-0.0175108183,0.0393444598,-0.1019763798,-0.05281372,-0.12095204,0.1555897146,-0.1593900025,0.0410453826,-0.0113721667,0.0373728648,-0.0182752982,0.0320359096,0.0424450785,0.0519223399,0.1404868066,-0.0307841655,-0.1509702802,-0.1705869138,0.0242200531,0.0224507526,0.0730079114,-0.0320014693,-0.0026204304,-0.1438135952,-0.0661540776,-0.0678715184,0.1748463511,0.0367078446,0.0997374058,-0.1349695623,0.1035915241,0.1517104506,-0.0059647569,0.1537513882,0.1594276726,0.1645914614,-0.1511878818,0.0589634404,-0.0104944827,-0.1084270328,-0.0630811676,0.1134204268,0.0225705244,0.0151747139,0.057850752,-0.0823585987,-0.0801331699,0.1455962062,0.0973460004,-0.0375001095]],"hackathon_name":"Hackers at Cambridge Game Gig","index":446,"project_description":"The best game everyWorms are amazingLets you play as a worm, in a large galaxyUsing UnityRan out of timeStarting somewhereEverytingworm-galaxy 2Hackers at Cambridge Game GigAlastair Toft\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 02, 2016 10:04 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"worm-galaxy Table 8","project_tags":["unity"],"project_url":"https:\/\/devpost.com\/software\/worm-galaxy","keywords":"galaxy,worm,ran,worms,lets,amazing,built,challenges,everyting,inspiration,large,learned,next,play,proud,somewhere,starting,table,time,unity"},{"level_0":447,"hack_vector":[[0.1610744745,-0.1680545807,0.0057174875,0.0958810747,-0.0401276201,0.1764843315,0.173483476,-0.0611800551,-0.0301366542,-0.0350861587,-0.0081982901,0.046118401,0.1283829659,-0.0763403475,-0.0176413767,0.0609712414,0.2602417171,0.0434255078,0.058036454,0.0766542703,-0.1923320442,0.0049193343,-0.033041507,-0.0567104854,0.2020611614,-0.0163515471,-0.073039569,-0.1830053478,0.0295284931,-0.0765118524,0.0319285356,-0.1220499277,0.0785953924,-0.0391516499,-0.0379947573,-0.0010325861,0.1471110731,-0.1093425602,0.0090399617,0.0881087855,0.0742299631,-0.158621341,-0.1854452193,-0.044524394,-0.0560562089,-0.0383050479,0.0376468375,0.0061015268,-0.0333819501,-0.179793328,-0.0184277482,0.0459212549,-0.099632442,-0.0656619295,-0.1066702306,0.1456535608,-0.1531796902,0.0606167056,-0.0155114615,0.0598121434,-0.0115411105,0.0304734297,0.0370492749,0.0584949218,0.1433100849,-0.0346958004,-0.1402511299,-0.1714507788,0.0163084827,0.0189708676,0.0764283836,-0.0320913941,-0.0008958873,-0.1479297727,-0.0725369826,-0.0494336039,0.1796047986,0.0337359123,0.0974498913,-0.1355752051,0.1057572886,0.1465420276,-0.0023696336,0.1454713494,0.1521029472,0.1520006359,-0.1484925598,0.0711612552,0.0060931491,-0.1026194394,-0.0569270663,0.1142465323,0.0093560778,0.0222733095,0.0826300979,-0.0969326273,-0.0538644232,0.1383173466,0.1008133218,-0.0335737504]],"hackathon_name":"Hackers at Cambridge Game Gig","index":447,"project_description":"a multiplayer emoji-based side-scrolling platformer scripting gamewe're at table five lolHackers at Cambridge Game GigTim (blob8108)\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 02, 2016 11:51 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"emoji wizard 5","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/emoji-wizard","keywords":"table,lol,five"},{"level_0":448,"hack_vector":[[0.1498271376,-0.1253018081,-0.0305635724,0.0487780459,-0.0197156016,0.1539652348,0.1739893556,-0.0382126942,-0.0144067295,-0.0438779928,0.0140060233,-0.0414630584,0.1342611015,-0.0510807298,0.0293701999,0.0238118283,0.2378551364,0.0199227352,0.0333016962,0.1272570491,-0.2389282584,-0.0026917467,-0.0387019366,-0.006105945,0.1505484432,-0.0187490601,-0.0359329134,-0.1767124683,-0.024494173,-0.1151809692,0.0571659319,-0.1357052922,0.038709335,-0.0562500022,-0.0007823351,-0.0299761686,0.1101547256,-0.1358640343,-0.0356083177,0.0035639096,0.0625848249,-0.1300834119,-0.1663660258,-0.0539903156,0.0299589932,-0.0706953034,0.0116611226,-0.0274469722,-0.0449411571,-0.2209014297,-0.09991052,0.0101715019,-0.0888105407,-0.036704652,-0.1952424496,0.1706587076,-0.1277780831,-0.0226551518,0.0287520997,-0.0696871579,-0.0595732294,0.0179359354,0.0498352721,0.0306774341,0.1071924269,0.0294477548,-0.1248513609,-0.157279253,0.0379053317,0.0282793455,0.0708084553,-0.0440291949,0.0287582893,-0.1082285494,-0.0070773521,-0.0990847796,0.1705792546,0.005999824,0.0400495343,-0.1292099059,0.0921247005,0.1674241126,0.0208164863,0.1878272742,0.1167135313,0.1947410107,-0.1208262295,-0.0190904494,-0.0411017686,-0.0728761032,-0.1082859188,0.088065356,0.0736076683,-0.0365883186,-0.0056564528,-0.0187724549,-0.146335125,0.2398425341,0.032643903,-0.0753575116]],"hackathon_name":"Hackers at Cambridge Game Gig","index":448,"project_description":"Experience the hectic life of a student at Cambridge, spend your time wisely juggling the facets of your life.We wanted to make a Guitarhero-style game, where tasks and events rush at you at the same time and you have to judge what to prioritise. Unlike Guitarhero, you can't hit every note (or event). Like the game Reigns, you make decisions between rounds and these affect how far you get in the game, whether you'll graduate, how far you make it up the boaty ladder and more.Used pixi for javascript as the game framework. All of the code, graphics and music was made entirely by our team of four.Hackers at Cambridge Game GigRichard Tynan\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 02, 2016 11:59 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"CamSim - Table 7","project_tags":["javascript"],"project_url":"https:\/\/devpost.com\/software\/camsim","keywords":"game,make,far,guitarhero,inspiration,graphics,graduate,get,framework,four,whether,every,events,event,entirely,decisions,code,built,boaty,hit"},{"level_0":449,"hack_vector":[[0.1598923057,-0.139812842,-0.0172607768,0.0597796366,-0.0268016998,0.1500238925,0.1864255667,-0.0416526981,-0.0162642319,-0.0325167477,0.0100087188,-0.0352642909,0.1495472193,-0.051768709,0.0438472107,0.0025864397,0.2183018774,0.0023767988,0.0482600443,0.1183800325,-0.2387884408,0.0269547924,-0.0353916362,-0.0066593844,0.144692421,-0.0305544902,-0.0338500887,-0.1696625501,-0.0265736151,-0.0986322165,0.0652001575,-0.119749099,0.0331474468,-0.0660111681,-0.0155059379,-0.028585352,0.1219422892,-0.1381791979,-0.0535317995,0.0041242521,0.0685673133,-0.1393410861,-0.153154701,-0.0493686125,0.0291183479,-0.0498263538,0.0146359745,-0.056997709,-0.0341341943,-0.1987280101,-0.1253871173,0.0253293011,-0.1148715466,-0.0094189951,-0.1996119022,0.1617842019,-0.1329354942,-0.0244567525,0.0352451466,-0.0695959479,-0.0728132054,0.0203671083,0.0576922596,0.0317362212,0.1101356223,0.0251394808,-0.1204651371,-0.1431619227,0.0136211198,0.0287094899,0.0688713789,-0.0449359529,0.030622676,-0.1240746528,-0.0034901008,-0.1026199684,0.1862073988,0.0050374167,0.0203938521,-0.1309463382,0.101466693,0.1588164568,0.0199443735,0.1666688174,0.126795873,0.2037105262,-0.1103202552,-0.0208400693,-0.0216275882,-0.0710663572,-0.1130047366,0.0905169472,0.0731077865,-0.0287815593,0.003156763,-0.0245544799,-0.1453195065,0.2454026192,0.0239085071,-0.0561996885]],"hackathon_name":"Hackers at Cambridge Game Gig","index":449,"project_description":"Kill rabbits or be killed.David had made a tower defense game before and we thought it would be cool to make one with a twist.Don't get eaten by rabbits.\nRaise your offspring on the corpses of your dead enemies!\nDominate the world with cabbages!Using Gamemaker.\nAssets were created on a digital drawing software.Describing the behaviour of the sprites. We had to do trial and error and multiple rounds of troubleshooting before making something that worked.The rabbits move!! Fluffy rabbits.Making games is hard work!We might extend it so that the story can reach its conclusion. Also adding more tower defense mechanics to extend the playing time!Hackers at Cambridge Game GigJingyao Zhang\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 02, 2016 12:10 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Cabbage @ Table 5","project_tags":["gamemaker"],"project_url":"https:\/\/devpost.com\/software\/cabbage","keywords":"rabbits,tower,making,extend,defense,enemies,digital,dominate,drawing,eaten,would,error,fluffy,game,gamemaker,games,describing,dead,hard,david"},{"level_0":450,"hack_vector":[[0.1686504632,-0.1570906341,-0.012010308,0.0700923353,-0.0259168297,0.1588928699,0.1985206306,-0.0392466486,-0.0426961407,-0.016932521,-0.007664891,-0.013273689,0.1503232419,-0.067772612,0.0175541025,0.0109133488,0.2222286612,0.0141108651,0.0546492897,0.1122732684,-0.2296696156,0.011025032,-0.0291412417,-0.0106338682,0.1863016933,-0.0229664948,-0.0538547672,-0.1735485941,0.0006819632,-0.0996221304,0.0591345727,-0.131198898,0.0407558382,-0.0446215831,-0.0277254768,-0.0228896923,0.1269389689,-0.1314145476,-0.0309276786,0.0284421928,0.0857796595,-0.1452666968,-0.1572312117,-0.0436549336,0.0101798791,-0.0411762148,0.0168979596,-0.033182364,-0.0255094804,-0.1935796589,-0.0914807543,0.0356731154,-0.1165647805,-0.0086394409,-0.1802992076,0.1685283631,-0.1576766968,0.00136228,0.0071537355,-0.0322655179,-0.0514143184,0.0338057764,0.0413152277,0.0382421724,0.1305919886,0.012524073,-0.1218462065,-0.1489173323,0.0067757908,0.0238628462,0.0716255531,-0.0354975536,0.015726259,-0.1239851192,-0.0158156157,-0.0824836344,0.175623104,0.0179408137,0.0411156788,-0.1331282556,0.1073367074,0.1518790871,0.0210100859,0.163855806,0.1432908028,0.2071196586,-0.1132813096,0.01162339,-0.0159276668,-0.0750719011,-0.0969971642,0.0947350338,0.061466258,-0.0088105714,0.023769822,-0.0411526226,-0.1345214397,0.2178821415,0.0519555025,-0.0453049242]],"hackathon_name":"Hackers at Cambridge Game Gig","index":450,"project_description":"Shoot the enemies and survive!Shooting game FPSShoot the aliensUsing Java and the Game Engine created by our group: EngineXAs our engine is built from scratch, a lot of problems arose. One of them is that we don't have enough time to implement everything, especially soundA Game Engine from scratch.More rounds. Rather than the Survival mode!Hackers at Cambridge Game GigAlbert BUi\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 02, 2016 12:48 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Tanks vs. Aliens - Table by the Locker","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/tanks-vs-aliens","keywords":"engine,game,scratch,aliens,built,especially,inspiration,implement,group,fps,everything,vs,enough,learned,enginex,created,challenges,arose,java,locker"},{"level_0":451,"hack_vector":[[0.1575395465,-0.1388151348,-0.0062404871,0.0623584427,-0.0209746137,0.1573567539,0.1860656738,-0.040858794,-0.0202647354,-0.0264346041,0.0024618572,-0.0216170643,0.1307427585,-0.063711375,0.0214974247,0.0354541466,0.2428641766,0.0243572574,0.0513921157,0.1140598282,-0.2365651578,0.009855927,-0.0462187529,-0.0215830524,0.1657663733,-0.0314232595,-0.0524015948,-0.1932556182,-0.0072227917,-0.1024334654,0.05742158,-0.1232705489,0.0574743375,-0.0599072278,-0.0203417633,-0.0163963623,0.119270876,-0.1301750541,-0.0180512983,0.0270089991,0.0569611602,-0.1466798782,-0.1708548218,-0.0536862053,0.0012762533,-0.0658376366,0.0200965721,-0.0297775306,-0.0287462566,-0.2126966566,-0.0778536946,0.02696204,-0.1075914949,-0.0250814762,-0.168805927,0.1640063077,-0.1544787884,0.0076748263,0.0124602178,-0.0323626027,-0.0512460172,0.0248576459,0.0473597609,0.0409594625,0.1166469678,0.003955326,-0.1288401484,-0.1622857451,0.024915779,0.0221317392,0.0724993497,-0.0477461852,0.0211887434,-0.1265977174,-0.0114649059,-0.0919875726,0.1808766723,0.0136864344,0.0636443347,-0.1396630853,0.1017391533,0.15655002,0.0244354121,0.1700504273,0.1374421269,0.1969586611,-0.1231469437,0.0045965295,-0.0213789865,-0.0853383765,-0.1003555059,0.0939473063,0.0566378534,-0.0234489832,0.0132458378,-0.039603468,-0.1247646958,0.2000214756,0.0550479293,-0.0694829449]],"hackathon_name":"Hackers at Cambridge Game Gig","index":451,"project_description":"Collect Coins in record time!Collect as many coins as possibleCollect points before the clock runs out. Yellow coins give you points, purple coins add to your time, enemies reduce your score. You also earn points each second (for staying alive).I build it using Unity3dLearning to code in C sharp.Building the gameThinking about the user experience, not just if the game worksI am thinking of developing a next level for the gameHackers at Cambridge Game GigVaska Atta-Darkua\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 02, 2016 12:34 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"CoinCollect_by_the lockers_and_door","project_tags":["unity"],"project_url":"https:\/\/devpost.com\/software\/coincollect","keywords":"game,points,coins,next,thinking,collect,yellow,coincollect,experience,enemies,earn,developing,code,inspiration,clock,challenges,built,building,build,also"},{"level_0":452,"hack_vector":[[0.1480380595,-0.1444089562,-0.0138195967,0.0589023978,-0.0381165706,0.1501831561,0.1827648431,-0.0490331426,-0.038275443,-0.0157680176,0.0045087379,-0.0024554015,0.1404240727,-0.0628697649,0.0251028296,0.0288377851,0.2355892956,0.0272192005,0.0477061272,0.1014101058,-0.2220257968,0.0154912034,-0.02827668,-0.0363880694,0.1537762731,-0.0124774035,-0.0478181355,-0.1857507527,-0.0005671043,-0.0900947824,0.0571273193,-0.1353704333,0.0518890657,-0.0576457269,-0.0294235125,-0.0327211842,0.1320701391,-0.1236675605,-0.032395985,0.0473057106,0.0647643059,-0.1572591662,-0.1719730943,-0.0564928576,-0.0030778225,-0.0531549267,0.0287830178,-0.0272842888,-0.0366318412,-0.1942302436,-0.0851532221,0.0205090977,-0.1082818285,-0.0356997214,-0.1677702665,0.1743633449,-0.1523298472,0.0325024575,0.0059901383,-0.0183826163,-0.0420855433,0.0250785146,0.04138726,0.0536712557,0.1289615929,-0.0083425995,-0.1274393797,-0.15239577,0.0260197893,0.0224929415,0.0765251219,-0.0430490747,0.0074124523,-0.1390580237,-0.0328932069,-0.0932584628,0.1877959669,0.0229989812,0.0661917999,-0.1357359886,0.115357399,0.1611049324,0.0261626877,0.1656695455,0.1573580056,0.1856089979,-0.1380506903,0.0150968423,-0.0000225021,-0.0926253572,-0.1091352254,0.0966191813,0.0636338145,-0.0168800801,0.0406704433,-0.0586332716,-0.1099033281,0.1978496462,0.0627677813,-0.0547144637]],"hackathon_name":"Hackers at Cambridge Game Gig","index":452,"project_description":"Thrust from the 80s but nowThis is it pretty muchThrust from the 1980sFly a rocket ship to save an ogre from an evil turret infested planetUsing unity, blood, sweat and tearsIt genuinely made us feel sick at one pointOur turret follows the playerHow to use UnityMore levels, more fun and hats for your spaceshipsWe got the sound from www.freesound.orgHackers at Cambridge Game GigMasterObvious Lazarus\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 02, 2016 01:32 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Thrust^2 - Table 1","project_tags":["unity","c#","gimp","mspaint"],"project_url":"https:\/\/devpost.com\/software\/thrust-2","keywords":"unity,turret,thrust,www,fun,levels,learned,inspiration,infested,hats,got,genuinely,follows,freesound,next,fly,feel,evil,challenges,built"},{"level_0":453,"hack_vector":[[0.1524288207,-0.1473431885,-0.0038959014,0.0783611163,-0.023476474,0.1565033495,0.1826592684,-0.0406372659,-0.0461714417,-0.0296616871,-0.0020943424,-0.0095569473,0.1390275508,-0.071484603,0.0078346096,0.0456981547,0.2480535358,0.0229938552,0.054077331,0.1119478866,-0.2185818106,0.0202553831,-0.0327182822,-0.0347905792,0.1702378541,-0.0287719276,-0.0608287267,-0.1948747486,-0.0055883927,-0.0846798345,0.0556970648,-0.1211395115,0.0607387982,-0.0509758592,-0.0339359231,-0.0115300659,0.135897696,-0.1214123443,-0.0060929605,0.0603919774,0.0703557134,-0.1559447795,-0.1870113462,-0.0483531952,-0.0036339618,-0.0564513654,0.027780544,-0.0252714623,-0.0272498094,-0.2127371281,-0.0585736297,0.0230644457,-0.1024712399,-0.0326532423,-0.1547951996,0.165294975,-0.1590913534,0.0247871932,0.0049084742,-0.0104380632,-0.0388567075,0.0242155734,0.0414854214,0.0521093383,0.1383840591,-0.0116675552,-0.1249783486,-0.1586067528,0.0244773123,0.0109742703,0.0744485557,-0.0459362231,0.0031527076,-0.1288596392,-0.0367523767,-0.0777399912,0.1864619553,0.0119999424,0.0787403658,-0.1328947395,0.1148529649,0.1548616737,0.0152507527,0.1612236649,0.1386428773,0.1799399853,-0.1394428015,0.0193485338,-0.0111051649,-0.1014074907,-0.1007911861,0.091813907,0.0387826525,-0.0108687272,0.0306526478,-0.0543856584,-0.1089403927,0.1793599725,0.0808731616,-0.0500751846]],"hackathon_name":"Hackers at Cambridge Game Gig","index":453,"project_description":"A game about kicking balls into enemies made for the HaC Game GigCore gameplayIt does its bestUnity, Monodevelop, Krita, Audacity, Windows CalculatorLast table to the right looking from the entrance (next to the lockers)Visit the Github link to download the latest build and its build_dataHackers at Cambridge Game GigI've done everything myself.Jakub Perlin\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 02, 2016 01:34 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Balls and Running","project_tags":["unity"],"project_url":"https:\/\/devpost.com\/software\/balls-and-running","keywords":"build,windows,visit,best,calculator,data,download,entrance,game,github,krita,last,latest,link,lockers,looking,monodevelop,next,play,right"},{"level_0":454,"hack_vector":[[0.1720943451,-0.1585493684,-0.0112706525,0.0801086873,-0.0211970396,0.1544439644,0.2003697604,-0.0406888723,-0.0401923694,-0.0116147799,-0.003428499,0.0013461974,0.1340648979,-0.0684553981,0.0266127065,0.022731103,0.226579681,0.0074828099,0.0550261885,0.1043156832,-0.2289040238,0.0169439092,-0.036029052,-0.0097760027,0.1916669458,-0.0219694618,-0.0526521988,-0.1849665195,-0.0010075888,-0.0753278956,0.0659024045,-0.1228007227,0.0559760891,-0.0574373528,-0.0410586894,-0.0184736662,0.1238612533,-0.1254047006,-0.023617778,0.037996944,0.0701972544,-0.157917276,-0.1630670428,-0.0463603958,-0.0012672343,-0.0332371071,0.0144033786,-0.0375548862,-0.0209471267,-0.1967713982,-0.070830375,0.0265242793,-0.1202461421,-0.0080237063,-0.1622085869,0.1631478518,-0.1662676632,0.0281499345,-0.0106397271,-0.015325414,-0.0391241983,0.0369622596,0.0508322157,0.0351564214,0.1299189627,-0.0098538632,-0.1403000653,-0.1459265202,0.0132289678,0.0245215259,0.0660286173,-0.0291174706,0.0144420266,-0.1366090178,-0.0256289504,-0.0821858943,0.1854789108,0.0051826905,0.0543191321,-0.1398568451,0.110879831,0.1495372206,0.0259666331,0.1648892164,0.1454353184,0.1976428777,-0.1239240766,0.0329926908,-0.0060717333,-0.0897199139,-0.1008296162,0.106208019,0.0621929877,-0.0019985249,0.0394640304,-0.0506933779,-0.1055989787,0.190774262,0.0692567751,-0.0368472226]],"hackathon_name":"Hackers at Cambridge Game Gig","index":454,"project_description":"OdlyShadedGrassLandsRedCuboidAttack2Look at that blue sphere go (by firing orange spheres and torquing of the odly rendered grasslands)Learning unity via a project, to potentially use it for a larger game.Simulates the travesties of a redcuboid attack in the odly shaded grasslands.Using unity.Not knowing unity.Learning unity.Some familiarity with unity and C#.OrangeCuboids??Hackers at Cambridge Game GigBenjamin Norman\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 02, 2016 02:08 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"OdlyShadedGrassLandsRedCuboidAttack on Table2","project_tags":["unity"],"project_url":"https:\/\/devpost.com\/software\/odlyshadedgrasslandsredcubiodattack","keywords":"unity,learning,via,next,attack,built,challenges,familiarity,game,grasslands,inspiration,knowing,larger,learned,odly,using,odlyshadedgrasslandsredcubiodattack,orangecuboids,potentially,project"},{"level_0":455,"hack_vector":[[0.1518414319,-0.1366643608,-0.0072037946,0.0759825036,-0.0410944186,0.1560834497,0.1816769987,-0.03810836,-0.0296612941,-0.0223076735,0.002382844,0.0087124249,0.1437914073,-0.0629410595,0.0199905671,0.0329312533,0.2407936156,0.0301380791,0.0526994616,0.1120673865,-0.2249062359,0.0138049079,-0.0369716734,-0.025200896,0.1703959405,-0.0192203019,-0.052516602,-0.1836502105,0.0062696538,-0.086926043,0.0378125235,-0.1254906356,0.0508188158,-0.053677924,-0.0174270775,-0.0119806323,0.1396740228,-0.1230060756,-0.0277613774,0.0470294878,0.0658003613,-0.1535084844,-0.1758952439,-0.054090362,-0.0064589866,-0.0468727015,0.0233106595,-0.0277429819,-0.024773974,-0.1902441829,-0.072969459,0.0166036934,-0.1177929044,-0.0324122123,-0.162827611,0.1634327918,-0.1497699916,0.0280877668,0.0175965708,-0.0142258098,-0.0413706228,0.0232271329,0.0522062555,0.0523661263,0.129447937,-0.0050962889,-0.123562105,-0.1709021777,0.0247630365,0.0144217703,0.0703076944,-0.0413154699,0.0086441953,-0.1300781518,-0.0359125249,-0.0958146006,0.186779514,0.0170501638,0.0602345914,-0.1357416064,0.1051660329,0.1644263864,0.0201464314,0.1669174731,0.1493586004,0.1850748509,-0.136958614,0.0200871117,-0.0062983786,-0.0939862803,-0.1086804867,0.1042165086,0.0548987687,-0.0066771917,0.0465976074,-0.0620112717,-0.1079336181,0.2018344253,0.0713058785,-0.0472627953]],"hackathon_name":"Hackers at Cambridge Game Gig","index":455,"project_description":"Experience the struggle of an everyday Girton studentThe daily cycle into townCan you cycle down Huntingdon Road without getting caught by zombies?Unity, C#Running out of time to create more complex gameBringing zombies into CambridgeCycling is difficultNext goal: make it to your supervision untouched by the undeadHackers at Cambridge Game GigMonica Dayao\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 02, 2016 02:14 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hunted On Road - Table 3","project_tags":["c#","unity"],"project_url":"https:\/\/devpost.com\/software\/hunted-on-road-table-3","keywords":"zombies,road,next,cycle,cambridge,caught,challenges,complex,create,hunted,built,cycling,daily,bringing,difficult,game,getting,goal,huntingdon,without"},{"level_0":456,"hack_vector":[[0.1557903141,-0.1565336585,0.0116547877,0.0858733803,-0.0410642214,0.1591897607,0.1681394279,-0.0470900834,-0.0429580286,-0.0291433521,-0.0122884652,0.029464215,0.1304295808,-0.0756122395,-0.0223537013,0.0876113921,0.2681384981,0.0433077551,0.0543244369,0.0929978192,-0.1918732226,0.008318807,-0.0414545536,-0.0506718606,0.1890313476,-0.0174055956,-0.08375559,-0.1824915111,0.0270423852,-0.0877165347,0.0288366899,-0.1059896201,0.0807269365,-0.0470873788,-0.030823376,0.0037081514,0.1451548487,-0.107452631,0.0133535778,0.0812905133,0.0623805374,-0.1581492871,-0.1957009137,-0.0443944559,-0.0442043059,-0.0473992005,0.0348606408,-0.0014291656,-0.0160467476,-0.1820040941,-0.0209784675,0.0451383591,-0.1045908779,-0.0613076799,-0.1099880263,0.157469064,-0.1583439112,0.0598750524,-0.0053302441,0.0448182635,-0.0135515444,0.0372535326,0.0380350277,0.0708704591,0.1404484063,-0.0355812721,-0.1395434141,-0.1780957431,0.012961302,0.0106819104,0.0794064701,-0.0335659161,-0.0136202648,-0.1380681247,-0.0704074875,-0.0547583625,0.1803827286,0.0207064562,0.10016644,-0.1350830346,0.1024233177,0.1474774778,0.0072371918,0.139604494,0.1541222185,0.1594960243,-0.1499187797,0.0585468709,0.0016578439,-0.111637041,-0.0697875395,0.109232083,0.0132213105,0.0193595272,0.0685087964,-0.0870885029,-0.0723078921,0.1473931819,0.1101500094,-0.0436759479]],"hackathon_name":"Hackers at Cambridge Game Gig","index":456,"project_description":"Collect the tokens without getting trappedCubes move around, changing the colours of the floor tilesUnityHackers at Cambridge Game Gigwenyingw\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 02, 2016 02:19 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Red & Blue (Table 2)","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/red-blue","keywords":"unity,tiles,around,blue,built,challenges,changing,colours,cubes,floor,inspiration,learned,move,next,proud,ran,red,accomplishments"},{"level_0":457,"hack_vector":[[0.1502943188,-0.1438281238,-0.0104751373,0.0577335693,-0.0261479747,0.1320702583,0.1841860265,-0.039697621,-0.0424996987,-0.01839724,0.0163484588,-0.0322215259,0.1424406171,-0.0694444329,0.0421625413,0.0251450837,0.2297405154,-0.0041857408,0.0484364666,0.1250684708,-0.2394547462,0.0309020281,-0.0363178104,-0.0237228964,0.138431415,-0.0299058519,-0.0436917208,-0.184462741,-0.0112443194,-0.092715241,0.0556109622,-0.1224734858,0.0437433422,-0.0696576461,-0.0230647866,-0.0300374608,0.1229607761,-0.1405693144,-0.042537313,0.0202248897,0.0527817905,-0.1394173503,-0.1726941466,-0.0407321602,0.0205834731,-0.0481583811,0.018505035,-0.0564454868,-0.0162611939,-0.2052618116,-0.1027297154,0.0199522339,-0.1083604097,-0.0136811649,-0.1826261282,0.162245512,-0.140387848,0.0115717594,0.0168052427,-0.0573854111,-0.0506665185,0.0298265815,0.0621164367,0.0616448224,0.1236067042,0.0041911644,-0.1197510958,-0.1419850737,0.0222186353,0.0172848143,0.079818815,-0.0431901552,0.0132866604,-0.1313073784,-0.0071022804,-0.108390525,0.1824217737,0.0087937536,0.0471736826,-0.1303746998,0.1283428222,0.1601578146,0.0342700481,0.1686083525,0.1349668801,0.1893899292,-0.1279039383,-0.0219634958,-0.0216489639,-0.0876523629,-0.1266264766,0.0786575377,0.0883540437,-0.0307685658,0.0205106307,-0.0367539711,-0.1337896734,0.2050452679,0.0480931364,-0.0610463247]],"hackathon_name":"Hackers at Cambridge Game Gig","index":457,"project_description":"Lasers, spaceships, angry aliens and a black hole.The GameThe darkness of the Universe.The players have the full power to move two spaceships, in Churchill (the good guys) and Trinity (the bad guys) colours, around in the dark universe filled with white aliens shaking of anger. There is also an opportunity to shot red lasers and try to avoid a vigorously moving black hole.The team quickly maximized its efficiency by distributing areas of responsibility: gameplay, graphical design and sorting out github issues.Github.Teamwork and that we (Anirudh) managed to get the lasers to work.How github is meant to be used.Simulation of gravitational pull from the black hole.Hackers at Cambridge Game GigAletta Csapo\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 02, 2016 02:23 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Laser-Wars, table 4","project_tags":["unity","javascript","c#","git"],"project_url":"https:\/\/devpost.com\/software\/laser-wars","keywords":"github,lasers,black,hole,guys,universe,efficiency,filled,full,gameplay,good,get,design,graphical,gravitational,inspiration,distributing,dark,darkness,laser"},{"level_0":458,"hack_vector":[[0.1557640135,-0.1625189036,0.0176823679,0.106741704,-0.0497753397,0.162598893,0.1552297026,-0.0484205335,-0.0385666788,-0.0343181118,-0.0170649737,0.0655572042,0.1199366301,-0.0772723332,-0.0399018489,0.0897204727,0.2585947216,0.0543388054,0.0559593253,0.0683863387,-0.1662094146,-0.0065963515,-0.0382776782,-0.0610027201,0.202376321,-0.0182654969,-0.0870489553,-0.1768093258,0.0403721742,-0.070064202,0.0149445534,-0.0886587724,0.0910786763,-0.0301090758,-0.0392572209,0.0278980192,0.1496617496,-0.0949624032,0.0280486811,0.1182133555,0.0672483146,-0.1524024606,-0.1913549006,-0.0359488241,-0.0737819374,-0.0412578881,0.0489664786,0.0157704428,-0.0148798963,-0.1742458493,0.0022805706,0.0498205945,-0.1028061584,-0.0780777484,-0.0786777958,0.1412217319,-0.1584893614,0.0835873112,-0.0250359885,0.0879465416,0.0027462598,0.0390705578,0.0247721169,0.0677257106,0.1484438926,-0.0539969318,-0.1353994459,-0.17287682,0.0024201393,-0.0036321366,0.06238994,-0.0241384078,-0.0266456995,-0.1412761509,-0.091221109,-0.0273195803,0.1795395911,0.0280901548,0.1116318479,-0.1388811916,0.0955990255,0.1410863996,-0.0127379755,0.1288704872,0.1571983695,0.1428930312,-0.1459016353,0.0990361348,0.0115432777,-0.1186422408,-0.0473294444,0.1225418001,-0.0153585868,0.0475370102,0.0913635418,-0.1201775521,-0.0357685871,0.1144028157,0.1327433139,-0.0244336892]],"hackathon_name":"Hackers at Cambridge Game Gig","index":458,"project_description":"Quality bantergreat project woooohoooHackers at Cambridge Game Gigbu214\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 02, 2016 02:33 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Fighting in Hawaii - table 4","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/fighting-physics","keywords":"woooohooo,project,great"},{"level_0":459,"hack_vector":[[0.1599383801,-0.1665391922,0.0085211825,0.1098622307,-0.0352402627,0.167693764,0.1641158164,-0.0515999757,-0.039500583,-0.0327806324,-0.0069734021,0.0518667214,0.1316387504,-0.0809645057,-0.0273204204,0.0614393987,0.2505500317,0.0399951376,0.0655545294,0.0799527392,-0.1937340945,0.0054487698,-0.0331709236,-0.0437820889,0.2064613849,-0.0284887422,-0.0790597647,-0.1944514215,0.0198154543,-0.0719536915,0.03607741,-0.1088680327,0.0828637034,-0.0318726003,-0.0387435742,0.0076043815,0.1415558457,-0.099812679,0.0126514016,0.0905126929,0.0823505595,-0.163710326,-0.1863958091,-0.047544457,-0.057841558,-0.0318158716,0.0376413539,0.008011274,-0.0266693793,-0.1802663058,-0.0132763907,0.0469520278,-0.1054920778,-0.0504001044,-0.1148720533,0.1420836598,-0.1631169617,0.0596358217,-0.0174493566,0.0581679195,-0.0163496267,0.0338775404,0.0254589617,0.0521543249,0.1463484913,-0.0320709236,-0.1353467852,-0.1691432595,0.0088279964,0.0084714238,0.0648010373,-0.0359645337,-0.0034006422,-0.1364302188,-0.0676896796,-0.038131997,0.1795300096,0.0217622072,0.0991706252,-0.1395073086,0.0974361449,0.1467344314,-0.0069484655,0.1483793855,0.1512952149,0.16836752,-0.1405736655,0.0728780627,0.004114022,-0.1059610397,-0.058311183,0.1226077974,-0.0052566812,0.0284259021,0.0702750459,-0.097709991,-0.0619183332,0.1399836391,0.118594341,-0.0294772722]],"hackathon_name":"Hackers at Cambridge Game Gig","index":459,"project_description":"Kill spaceships in time to musicWe made this game!Hackers at Cambridge Game GigProgramming\nMusic\nLevel design\nGraphics\nSound effectsSamuel Silvester\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 02, 2016 02:38 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Space Space Shoot Revolution - Table 7","project_tags":["c++"],"project_url":"https:\/\/devpost.com\/software\/space-space-shoot-revolution","keywords":"made,game"},{"level_0":460,"hack_vector":[[0.1607215554,-0.1604542732,0.0042105545,0.0793627799,-0.0271540377,0.1538144052,0.1817853302,-0.0338671282,-0.031276945,-0.0258914717,-0.0081999097,0.0021888032,0.1521726251,-0.0659217834,0.0045336084,0.0253912434,0.2338484079,0.016152896,0.0579603054,0.1084939316,-0.2398241162,0.0058326926,-0.0212641712,-0.0217617135,0.1756300628,-0.0324067511,-0.0571732484,-0.179176271,0.0033913285,-0.1102936268,0.062477801,-0.1094533205,0.0482161678,-0.0454299077,-0.0227267966,-0.0292212851,0.1250833124,-0.136190623,-0.0175709557,0.033798147,0.0817107409,-0.1381737441,-0.1533322036,-0.0521764793,0.0060198302,-0.0466834418,0.0203082152,-0.0307451654,-0.0235661101,-0.200464353,-0.0864067599,0.0395526886,-0.1174039766,-0.0306275021,-0.182620436,0.1625322253,-0.1552067399,-0.0065977979,0.0199031811,-0.0184829105,-0.0384442881,0.0256820526,0.0386547595,0.0285544749,0.1307841837,0.0055793016,-0.1175564677,-0.1499453932,0.0042215153,0.0203191508,0.0680084825,-0.0416350998,0.0027022136,-0.1274757832,-0.0327180289,-0.0813440233,0.1792681068,0.0189270657,0.0403197221,-0.1501349807,0.1000481993,0.1552368253,-0.0063736029,0.1655205935,0.1487327218,0.2175712734,-0.1127409339,0.0263828263,-0.0233098306,-0.0761206448,-0.0926889032,0.1043805107,0.0439100303,0.0052465419,0.0086158775,-0.0444090329,-0.1291432977,0.2030356079,0.0631394163,-0.0472528934]],"hackathon_name":"Hackers at Cambridge Game Gig","index":460,"project_description":"A short and simple, but fun game involving spitting lasersA game played many years ago as children.3 levels. Each one harder than the last. Same premise.GameMaker Studio 2 in an hour.The time limit.Actually making something that works.Start new projects earlier if the old one seems broken.More innovation!Hackers at Cambridge Game GigJulia Bibik\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 02, 2016 02:45 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Spitter (PCCL012)","project_tags":["gamemaker"],"project_url":"https:\/\/devpost.com\/software\/spitter-pccl012","keywords":"one,years,gamemaker,learned,last,inspiration,innovation,hour,harder,game,limit,earlier,children,challenges,built,broken,ago,actually,levels,making"},{"level_0":461,"hack_vector":[[0.1529608965,-0.1501915604,-0.008762585,0.0658829212,-0.0248592887,0.1505528241,0.1824841946,-0.0403560847,-0.0288818721,-0.0142028695,-0.0004145074,-0.0123534352,0.1437242478,-0.0600477941,0.0253376924,0.0386670977,0.2360337079,0.0208878685,0.0438340195,0.1169147417,-0.2298691273,0.024716245,-0.0306338891,-0.0239670351,0.1770876944,-0.0166369379,-0.0459547229,-0.1905897409,0.0049651028,-0.1013526171,0.0596004054,-0.138124153,0.0572844334,-0.0584856048,-0.0223077275,-0.0216108151,0.1265205592,-0.134036079,-0.021036312,0.0252183788,0.0556514002,-0.1554105878,-0.1676820815,-0.0546381213,-0.0020071429,-0.0422629789,0.0162210576,-0.0313600712,-0.0267400332,-0.201982826,-0.0871338695,0.0316157378,-0.112038292,-0.0315804593,-0.1642749757,0.1646196842,-0.1494895965,0.015192817,0.008636998,-0.0294222049,-0.0443739332,0.0277893003,0.0464621633,0.0559931658,0.1218191087,0.0030345735,-0.1228885278,-0.1612619758,0.0285545047,0.0202223975,0.0803072155,-0.0480661802,0.017142985,-0.1239723414,-0.0173781551,-0.0865826085,0.1738465428,0.0135154501,0.0571991317,-0.1426570565,0.1093451381,0.1656732112,0.0307168588,0.16948466,0.140824005,0.1863998026,-0.1321219355,0.0106932167,-0.0149589088,-0.0844062567,-0.1080602929,0.0942628458,0.0649135187,-0.0146066463,0.0277132187,-0.0444719829,-0.1228696853,0.1980696917,0.0542390235,-0.0609924309]],"hackathon_name":"Hackers at Cambridge Game Gig","index":461,"project_description":"Short-sighted PAC-MAN. Recall the maze, collect all the scrummy strawberries and avoid the ghost at all costs!Freaky ghostGhost follows the player by finding the shortest path using breadth-first search. You earn points by collecting food before the ghost catche up to youFinishing a very small project after changing our idea multiple timesFirst time using Lua and Love2D!Create some new levels and more complicated mazesHackers at Cambridge Game GigKamile Matulenaite\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 02, 2016 02:45 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HiddenGhosts (Lockers)","project_tags":["lua"],"project_url":"https:\/\/devpost.com\/software\/hiddenghosts","keywords":"using,ghost,first,finding,hiddenghosts,food,follows,finishing,earn,learned,create,complicated,collecting,changing,catche,breadth,idea,levels,times,points"},{"level_0":462,"hack_vector":[[0.147467494,-0.1480578482,-0.0128634842,0.073826313,-0.0373369642,0.1465134472,0.1854486912,-0.0456381366,-0.0259876326,-0.022905618,0.009959098,0.0033423442,0.1454584002,-0.0649968684,0.0347835682,0.018528888,0.2248927355,0.0041406732,0.0566199198,0.1182880029,-0.2477163076,0.0139171537,-0.0250605829,-0.0278550126,0.1402215511,-0.0268991478,-0.0474179871,-0.1773692966,0.0065252678,-0.0908906832,0.0565094389,-0.1161034778,0.0365781896,-0.0498612598,-0.0202267654,-0.0359970629,0.1221449971,-0.139741376,-0.0412086323,0.0299245454,0.0659695938,-0.145189926,-0.1528146714,-0.0495505631,0.0139741935,-0.0376387574,0.0152042657,-0.04259184,-0.0242932327,-0.2002605051,-0.1021088064,0.0291690063,-0.1160886288,-0.0238957144,-0.1878282577,0.1603916138,-0.1397625655,0.0126927914,0.0145322215,-0.0377346762,-0.0457543507,0.029461585,0.0522174574,0.0499467663,0.1283530295,0.0043275375,-0.1165417209,-0.144415915,0.0175581425,0.0233314168,0.0681219548,-0.0380818285,0.0139222322,-0.1429766268,-0.0321303383,-0.0990956351,0.1827861816,0.0143847978,0.0277523324,-0.1458764374,0.1160361543,0.1611961275,0.0171534792,0.170124948,0.1416145414,0.2137095332,-0.1198107377,0.0012246636,-0.0235899817,-0.0790368468,-0.1265552342,0.096281521,0.0769483671,-0.0173524264,0.0284109693,-0.0347009115,-0.1224610507,0.213634789,0.0487557277,-0.0466187298]],"hackathon_name":"Hackers at Cambridge Game Gig","index":462,"project_description":"Stumbling across a trove of ancient Aztec treasure, our valiant explorer must forge their way to the temple's heartAs keen adventurers in South America, this story of a brave adventurer really resonates with us and will surely appeal to all who have ever wished to treasure-hunt in mysterious temples themselves.A simple but charming platformer about an explorer in an Aztec temple.GameMaker Studio 2, with lots of problems with the nascent software!Source control is completely broken.Working around broken source control.Much.Adding many more levels.Hackers at Cambridge Game GigJulia Bibik\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 02, 2016 12:09 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Aztec Quest: Curse of the Winged Serpent (PCCL012)","project_tags":["gamemaker"],"project_url":"https:\/\/devpost.com\/software\/aztec-quest-curse-of-the-winged-serpent","keywords":"aztec,broken,source,control,working,completely,learned,keen,inspiration,hunt,gamemaker,explorer,ever,curse,challenges,charming,lots,built,brave,around"},{"level_0":463,"hack_vector":[[0.1703793555,-0.1526314467,0.0013117297,0.0819497034,-0.0230236817,0.1604173183,0.1855195314,-0.0601679273,-0.043782644,-0.0197892692,0.0060156547,-0.0049609407,0.1436389387,-0.0735986978,0.0042775422,0.0529655404,0.2545415163,0.0223810505,0.052305948,0.1051872969,-0.2085900009,0.0324655771,-0.0451506041,-0.0287162606,0.1862586886,-0.0341312066,-0.0657401383,-0.2048392147,-0.0052742492,-0.0759933069,0.0647131801,-0.1181003749,0.0766646788,-0.0584871471,-0.0340091623,-0.0038384625,0.1383608729,-0.1113147587,0.0026495231,0.0479285605,0.0741223469,-0.1744926572,-0.1969575882,-0.0409770086,-0.0191517491,-0.0290983319,0.0306981169,-0.0241628066,-0.0288023837,-0.1971297413,-0.054356508,0.0369556248,-0.1074057743,-0.022092279,-0.149631083,0.1496266425,-0.1603880823,0.0337930955,-0.0012568724,0.0051762266,-0.0346092843,0.0286249183,0.0507484451,0.044488661,0.1323175579,-0.0205284804,-0.1269633472,-0.1591089666,0.0166348331,0.0151506569,0.0738715008,-0.0379450843,0.0099970717,-0.1300949156,-0.0424586385,-0.0693901703,0.1843536645,0.0113333333,0.0797514915,-0.1269625276,0.1093736812,0.1482532918,0.0140515044,0.1574555486,0.136735484,0.1758520156,-0.1354660094,0.0317984633,0.000914685,-0.1084062904,-0.0808835179,0.1044674069,0.0202376377,0.0023563623,0.0406120718,-0.0658146739,-0.0882164016,0.1665884107,0.0828274712,-0.0464819111]],"hackathon_name":"Hackers at Cambridge Game Gig","index":463,"project_description":"Shoot them allDucks ducks ducks and VR :DAllows user to shoot randomly flying ducksUnityHackers at Cambridge Game GigI worked on the main game logic and all the game effects. I was also in charge of the integration with Oculus DK2Karolina Zulys\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 02, 2016 02:54 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Duck Hunt VR - Table 6","project_tags":["unity"],"project_url":"https:\/\/devpost.com\/software\/duck-shooter-2dir7s","keywords":"ducks,vr,user,allows,built,challenges,duck,flying,inspiration,learned,next,proud,ran,randomly,shoot,shooter,unity,accomplishments"},{"level_0":464,"hack_vector":[[0.1545436978,-0.1630675942,0.0196683668,0.0996746197,-0.0453423671,0.1635189354,0.160450235,-0.0533728823,-0.0450501628,-0.0337310024,-0.0140051981,0.0581120327,0.1226123944,-0.0757819489,-0.0406105556,0.0932616666,0.260209471,0.0522812232,0.0545399524,0.0734629706,-0.166366294,-0.0018377628,-0.0413784236,-0.0569176599,0.203695029,-0.0183721464,-0.0869080201,-0.1804783642,0.0326178819,-0.0734589621,0.0224154312,-0.0938525125,0.0893553495,-0.0265270993,-0.03719569,0.0181070045,0.1468461901,-0.0885398537,0.0323008783,0.1091813445,0.0737819672,-0.1582840681,-0.1929177493,-0.0436068401,-0.0695411712,-0.0414521471,0.0475746281,0.0219058916,-0.0215262081,-0.1722714901,0.0108845057,0.0459147394,-0.0993825272,-0.066935733,-0.083853364,0.1442491561,-0.1624634713,0.0746896416,-0.023421742,0.0817925707,0.0006828707,0.0345326811,0.0239740107,0.0606140979,0.1488795429,-0.0505315252,-0.140954271,-0.1767443419,0.0071293535,0.0034580112,0.0634010285,-0.028788805,-0.0206272062,-0.134842813,-0.0913585126,-0.0313707776,0.1749999821,0.0259215534,0.1165257916,-0.1346632093,0.0946958587,0.1417257488,-0.0129031949,0.1335290521,0.1557884365,0.1474549919,-0.1538278013,0.090128161,0.0090779662,-0.1217037514,-0.0480028018,0.1217384338,-0.0173788071,0.0399055779,0.0814480111,-0.1098460481,-0.0459583662,0.1204024479,0.1316336542,-0.0282659288]],"hackathon_name":"Hackers at Cambridge Game Gig","index":464,"project_description":"DRILL THE PLANETSCambridge Game GigHackers at Cambridge Game GigGeorge Prosser\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 02, 2016 02:57 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"drill_planet @ table NaN","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/drill_planet","keywords":"gig,game,cambridge"},{"level_0":465,"hack_vector":[[0.150761649,-0.1204050109,-0.0341109149,0.0458001979,-0.0115745803,0.1128701493,0.1991443783,-0.0156760942,-0.0341982506,-0.0185435805,0.0016283877,-0.0559070893,0.1404092312,-0.0679087788,0.0557700172,-0.008349116,0.1881967634,-0.0204940103,0.0491819531,0.1418288648,-0.2627333999,0.0195861515,-0.0308719296,0.0083973473,0.1308525056,-0.0292790011,-0.0360869877,-0.15677692,-0.0225169193,-0.1017779931,0.0603871308,-0.1209017858,0.0173865985,-0.058036495,-0.0072888541,-0.0376361534,0.1068649292,-0.1489742547,-0.0612794049,-0.0128133781,0.0702342987,-0.1339583397,-0.1406100541,-0.0425863564,0.0643622279,-0.0545534156,0.0044576661,-0.0892636552,-0.0186099671,-0.2070427686,-0.1326338798,0.0206345394,-0.1081942394,0.0209971014,-0.2292347699,0.1702874303,-0.1401985884,-0.034346994,0.0283629224,-0.1048090234,-0.0723592266,0.0290907957,0.0603495538,0.03166233,0.1112019345,0.0359211415,-0.1029707417,-0.119911693,0.0274254866,0.0266338661,0.0672524571,-0.0455104448,0.0174289867,-0.1099457815,0.0393927656,-0.1131341308,0.1587091833,-0.0026224055,0.000238306,-0.1280455291,0.1045124978,0.1505933702,0.0445427299,0.1642384082,0.1080645546,0.219471693,-0.0907831192,-0.0434089229,-0.030853441,-0.0605259351,-0.1290011555,0.0677019283,0.1019175276,-0.0421057604,-0.0232337508,0.0162306819,-0.1726332009,0.2316033542,0.0081884107,-0.0489761904]],"hackathon_name":"Hackers at Cambridge Game Gig","index":465,"project_description":"A first-person, competitive version of the classic game.In a Hackathon five years ago, Adomas developed a competitive version Snake for two players in 2D. This is a variation on that, but with a first-person viewpoint and in a 3D environment.It is version of snake where 2 players compete to be the last one standing in a walled area. When a player hits a wall, they lose a unit of their length until they \"die\". Players gain units of length by eating apples and can obtain a temporary speed boost power-up. This is advantageous as bumping into the other player's head causes them to lose units of length in their snake - however this collision also causes you to lose a unit. The game ends when one of the players loses all of their length.We used the engine Unity and the language C# to develop this game.There were problems with getting the chain of spheres representing the snake to move together smoothly, but the problems were fixed relatively easily. Another issue was typing errors in the code, which cost a lot of time for something very simple. Another significant challenge was the time pressure. We had a lot of ideas we wanted to put into this, but unfortunately we ran out of time to complete them.We are proud of what we managed to do in this time and are quite happy with how it looks given our lack of design experience.We learnt how to actually develop games using the Unity engine and about writing algorithms for a basic AI for the computer to play instead of another human player.We were planning to add a computer controlled snake who avoids obstacles and managed to complete a possible algorithm, however we ran out of time to implement this into the game. We also planned to include in-game menus and a scoring system. We are planning to port this for use on VR headsets such as the Oculus Rift.Hackers at Cambridge Game GigJason Joykutty\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 02, 2016 02:27 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Snake Logic Wars (table by the lockers)","project_tags":["unity"],"project_url":"https:\/\/devpost.com\/software\/snake-logic-wars","keywords":"snake,time,length,game,players,lose,player,another,ran,problems,complete,computer,develop,engine,planning,one,managed,lot,causes,however"},{"level_0":466,"hack_vector":[[0.1474037319,-0.1276945025,-0.0163916051,0.0416472442,-0.0227713343,0.1328906715,0.1933528036,-0.0332696699,-0.0359435305,-0.0080940528,0.0066181864,-0.0463950709,0.1436915696,-0.0668404251,0.0446901582,0.0417673141,0.2272536308,0.0046566883,0.0416578315,0.1303223968,-0.2373616546,0.0275481474,-0.0523339398,-0.0220504478,0.1415675431,-0.0247339532,-0.053519249,-0.1728641242,0.0001328391,-0.0961286575,0.0516635031,-0.1204694137,0.0384803042,-0.0721419379,-0.0163239017,-0.0189923253,0.1241486892,-0.1375670731,-0.0424351729,0.0094313305,0.0437448137,-0.1504340619,-0.1687634885,-0.0409063138,0.03003796,-0.0580058582,0.0137269488,-0.0529470555,-0.0161093939,-0.1980424821,-0.1060410663,0.022471223,-0.1148614809,-0.0039854776,-0.1772332489,0.1701577753,-0.1429467797,0.0063351612,0.0261618532,-0.0646933913,-0.0589223839,0.0356931537,0.0619304106,0.0727737471,0.1098155603,0.0033493596,-0.1189787388,-0.1543248147,0.0260626785,0.015048244,0.0762612373,-0.0461978614,0.0212453492,-0.1259304434,-0.0006388273,-0.1123683378,0.1831448525,-0.002254134,0.0422809422,-0.1278667003,0.1193574369,0.1562063545,0.0502606854,0.1552156657,0.1294173598,0.1948999017,-0.1256738454,-0.0202541146,-0.0179497823,-0.0835378394,-0.1226854175,0.0750508755,0.0889462307,-0.0373090841,0.0268453024,-0.0203267485,-0.145725593,0.2217226774,0.0385473818,-0.0692760646]],"hackathon_name":"HackNotts 2016","index":466,"project_description":"From *some* of the producers of mlh.sexy and plusnet.sexy, now anyone can create these delightful sites.Over the years, many .sexy websites have emerged from the minds of young, inspired artisans on their craft. We decided it was about time we put the power of .sexy into the hands of the people.Allows you to get a subdomain, upload pictures and create a .sexy page. (For example, http:\/\/pandelis.sexy)We used the sheer power of the One True Dev Language. Plus some modules which are written in the One True Dev Language.Nobody likes Jade. Jade sucks.Welcome the world.HackNotts 2016Daniel Jones\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 27, 2016 05:01 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"is-so.sexy","project_tags":["javascript","mongodb","react","html","css","node.js","express.js"],"project_url":"https:\/\/devpost.com\/software\/is-so-sexy","keywords":"sexy,one,language,jade,true,dev,power,young,hands,many,likes,inspired,inspiration,http,get,modules,example,emerged,decided,create"},{"level_0":467,"hack_vector":[[0.1430574805,-0.1355463564,-0.0159324482,0.056528639,-0.0212900359,0.1522350758,0.1892731488,-0.0385286584,-0.0327228233,-0.0242689867,-0.0044961227,-0.0273705833,0.1328356266,-0.073381193,0.0218166988,0.0393306427,0.2340412587,0.003560947,0.0543505214,0.1144414991,-0.2381433547,0.0181618221,-0.0414338112,-0.0199993346,0.1631715447,-0.0204456989,-0.0511221103,-0.1726820469,-0.000492092,-0.0991477519,0.046055492,-0.1381045431,0.0537072495,-0.0507977977,-0.0195850637,-0.0214703921,0.1313523203,-0.1390399188,-0.017223021,0.0232366472,0.0650767162,-0.1524015516,-0.1850716323,-0.0535912849,0.0143531309,-0.0582235567,0.0115991496,-0.0421071239,-0.0202416498,-0.2085541636,-0.0813489556,0.0300629437,-0.1041438282,-0.0129778115,-0.1855520457,0.1664717793,-0.1615272462,0.0035986034,0.010948645,-0.045510035,-0.0564075485,0.0258191433,0.0541572645,0.0512549393,0.1232421473,0.0067722029,-0.1191555038,-0.1654046923,0.0391159952,0.0368149616,0.0831806958,-0.0507230647,0.0169513579,-0.1267352402,-0.0055156429,-0.0926521122,0.1698043346,0.0240528733,0.0543128364,-0.1289531738,0.1068496034,0.1559016407,0.0410306714,0.1700337976,0.1319095343,0.1846117228,-0.1285713613,-0.006113491,-0.0166299026,-0.0862572044,-0.1062185913,0.0814803243,0.0753806084,-0.0318424255,0.0183940642,-0.027178023,-0.128208369,0.1973900199,0.0544895902,-0.0584635809]],"hackathon_name":"HackNotts 2016","index":467,"project_description":"Time travelling side-scroller inspired by Re:ZeroInside a cavernWinning at the castleLosing, lost in a forestA sudden pit of doppelgangersWe developed a side-stroller in Java over 24 hours using awt as our rendering package.The goal of the small game is to get to the castle at the end of the level (Somewhere to the right). If you make a mistake then you can re-wind time at the cost of Sanity.Controls are W, S, A, D for movement and E for rewinding time by 3 seconds.HackNotts 2016James Kime\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 27, 2016 05:33 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Code-Zero","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/code-zero","keywords":"time,zero,make,castle,code,controls,cost,developed,end,game,get,goal,hours,java,level,mistake,wind,movement,package,rendering"},{"level_0":468,"hack_vector":[[0.1506007463,-0.121697627,-0.0295346975,0.0543829501,-0.037580274,0.1427824944,0.1759266108,-0.0346940607,-0.0016574233,-0.0568419099,-0.0044158739,-0.0284278151,0.1327224374,-0.0627992898,0.0328462459,0.0211096704,0.2441323251,0.0200424548,0.0431821384,0.1250014603,-0.2400774211,0.0025536402,-0.0361675322,-0.0253778398,0.1192866564,-0.022608066,-0.0435502082,-0.1590272635,-0.0185545888,-0.1169548035,0.0350205489,-0.1154404953,0.0415118709,-0.0645137057,-0.0062477863,-0.0270228479,0.1329356879,-0.1377118975,-0.0493183024,0.0323095806,0.0616252348,-0.122702077,-0.1592404693,-0.0480524898,0.0282526948,-0.0814472139,0.031756945,-0.0466732047,-0.0434114598,-0.2108006477,-0.1194935292,0.020395387,-0.102615118,-0.0452263914,-0.182020098,0.1562254727,-0.119592756,-0.0196404066,0.038287513,-0.048892431,-0.0595859326,0.0197820775,0.0598681979,0.0296905246,0.1164567322,0.0072003468,-0.1239173338,-0.1448131204,0.0202508997,0.0254342239,0.0699495152,-0.0500303358,0.0034099771,-0.1306812018,-0.0079242652,-0.104860954,0.1882648021,0.0186253525,0.0260712411,-0.1497347951,0.1024233773,0.1706213653,0.0097331963,0.178275153,0.1267508864,0.1952263713,-0.1183898523,-0.0002845429,-0.0245649125,-0.0864488259,-0.1131973863,0.0838611573,0.0756974518,-0.014031034,0.0116152111,-0.0337116309,-0.14729096,0.2446865588,0.0355255418,-0.0703398213]],"hackathon_name":"HackNotts 2016","index":468,"project_description":"Random Octocat Generatorthe originalwe thought of a punny domain name, and we had to think of something to put on it. Everyone's favorite aquatic feline obviously was the first thing that came to mind.You click the button, you get a Cat. You click it again, you get another cat.So much grepping.\nSo much.Making a website appear online in 24 hours is hard. AWS made it easy.\nYou can never have too many octocats. Thanks GitHub!Who knows??????\nMoar cats?!?!?!?!?!?!?!?!?HackNotts 2016Kai Barclay\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 27, 2016 06:04 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"hacktocat.com","project_tags":["html","javascript","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/hacktocat-com","keywords":"get,cat,much,click,website,domain,grepping,github,first,feline,favorite,everyone,easy,com,hard,challenges,cats,came,button,built"},{"level_0":469,"hack_vector":[[0.1373151988,-0.0916706026,-0.0245744139,0.0520280041,-0.0164781548,0.1402079314,0.2018516213,-0.0433964655,-0.0371258892,0.0164454319,0.0250358991,-0.0740134791,0.1571222991,-0.0692823157,0.0779077783,-0.0073027192,0.2158196419,0.0041695596,0.0425809585,0.1065115929,-0.224329114,0.0611037873,-0.0536248796,-0.0127848769,0.1180705503,-0.0235170349,-0.0328258052,-0.2068431824,-0.0299342852,-0.0606909767,0.0953049362,-0.1432769895,0.0343911014,-0.0961574465,-0.0384947024,-0.0046442416,0.1226650253,-0.1263388991,-0.0531999506,-0.0115017304,0.0302156862,-0.157058239,-0.1603229493,-0.0228737108,0.0459460393,-0.0367884561,0.0073530483,-0.0774326324,-0.0266318396,-0.1980994195,-0.1289435029,-0.0005815122,-0.1052120775,0.0199623797,-0.1817500442,0.1470489204,-0.1482326537,-0.0013400139,0.021805713,-0.090407759,-0.0692331865,0.0301247295,0.0938593,0.0543308519,0.1061721593,0.0000627123,-0.0857821181,-0.1246182695,0.0359171294,0.0184533298,0.0689610839,-0.0498762652,0.0451632328,-0.1157490611,0.0215266198,-0.1346048564,0.1899213046,0.0001707969,0.0307845436,-0.1272642016,0.1426945031,0.1489877552,0.0812568218,0.1571569443,0.1038779989,0.1869571209,-0.1057598367,-0.0428256392,0.0002374109,-0.0874606073,-0.1462682784,0.0547247939,0.0902694315,-0.0434430316,0.0173839256,0.0012455365,-0.1368386298,0.2122828513,0.0224640109,-0.0808483288]],"hackathon_name":"HackNotts 2016","index":469,"project_description":"AudioAffair is a music visualiser that decomposes audio files and uses data points to create dynamic images on LEDsWindows media player animationsDynamically generates basic shapes based off audio files and displays them on an LED matrix powered by a raspberry pi.We used python with the aubio framework (to sample audio files)Running our code on an (old) raspberry pi, running multiple bits of code concurrently, selecting audio information that would make for distinct animations for any file.Scraping data from audio files and dumping them into numpy arrays; getting a raspberry pi hooked up to 36 LEDs and having them update in sync with each other.A lot about audio libraries and signal processing, merging git branches and multiprocessing in pythonMoving from an LED matrix to a more advanced renderer (OpenGL?) and using more data points from files to seed our algorithms (signal energy, amplitude differential etc).HackNotts 2016I worked on the audio sampling, data point selection and recording, and making sure the code ran on the raspberry piI worked on taking the sound input and converting it into a pulsating imageI did research in the different types of music libraries available for Python and added functionality in the source code to allow the LED display to update dynamically in response to variations in the music rhythm and tempo.Rahul Soni\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 27, 2016 06:07 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AudioAffair","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/audioaffair-ybn4qv","keywords":"audio,files,pi,raspberry,code,python,matrix,running,signal,animations,led,data,framework,generates,differential,file,getting,etc,energy,dynamically"},{"level_0":470,"hack_vector":[[0.1374139339,-0.0926607251,-0.0305248722,0.041475378,-0.0150790764,0.1288244128,0.1972759068,-0.0247144569,-0.0245883111,-0.0108535374,0.0164101906,-0.0757576227,0.1515715718,-0.0750698224,0.0686986893,-0.0108129643,0.1985570937,-0.0146357417,0.0462564453,0.1299879104,-0.2411453724,0.0373702794,-0.0411434136,-0.0041908631,0.1146563068,-0.0317659676,-0.0321782418,-0.1733665466,-0.0314028338,-0.0916153938,0.0739783794,-0.1189524382,0.0253306981,-0.0807526782,-0.0202974901,-0.016479969,0.1187747419,-0.1399467885,-0.0598489419,-0.0119981095,0.0483705848,-0.126885578,-0.1447890997,-0.024911372,0.0697220042,-0.0513034463,0.0123913018,-0.0888615102,-0.0220717397,-0.2121607065,-0.1549941897,0.0203093868,-0.1100329459,0.0199304577,-0.2117991149,0.1613185257,-0.1327666789,-0.0283928495,0.035202086,-0.1124956757,-0.0754716396,0.0247826707,0.0778059959,0.0472092852,0.1086693481,0.0262007434,-0.0869040042,-0.1188055202,0.024767613,0.0191400945,0.0645807609,-0.0463220552,0.0236542802,-0.1132716313,0.0437566601,-0.115725711,0.1782791317,-0.0034061889,-0.0020076677,-0.136705175,0.1217487678,0.1551955342,0.060378436,0.1538884789,0.1037891209,0.2051830888,-0.0835628659,-0.0567386225,-0.0169061627,-0.0679442137,-0.1511520743,0.0506440699,0.1034889594,-0.0388548188,-0.0121926544,0.0128792571,-0.1631926298,0.2315173894,0.0074972161,-0.0707454681]],"hackathon_name":"HackNotts 2016","index":470,"project_description":"a party-oriented music queueing system for spotifyThe original idea for roombox came from a common frustration at parties - everyone loves Spotify, but why doesn't it allow other people to queue songs in a playlist? Eventually, we became fed up with constantly queueing songs for others, and decided to build roombox, a simple room-based queueing system for Spotify.roombox allows users to create password-protected rooms, which in turn creates a playlist in their Spotify account. Other people can then join that room and queue songs into that playlist - the idea being that Spotify plays through whatever has been queued in order, removing the need for someone to oversee the music.For the backend, we used Flask - a powerful template-driven Python web framework designed with modularity and scalability in mind. This allowed us to build roombox up from just a home page without really needing to modify our existing code. This definitely made the development process go a little more smoothly, as well as providing a lot of useful inbuilt stuff.For the frontend, we elected to use a framework called MaterializeCSS - this was perfect for a variety of reasons:Honestly, the development went quite smoothly all things considered. We ran into an issue where a bug in our code caused the database into an odd state, resulting in errors when performing queries - because we weren't storing any valuable data at that stage in development, we could work around the problem by deleting the database until we fixed the bug. In general, we found that database management was the most difficult part of the project to implement. Aside from that, there were no show-stopping issues, and we were able to get roombox finished relatively quickly.Developing roombox taught us a lot about front-end development more than anything; making sure the site was straightforward, ensuring the next steps were obvious, et cetera. We found that a lot of our time was spent rearranging things on the frontend to remove unnecessary steps, and fixing usability issues with the layout (like putting the search bar above the queue, where previously it was below and could end up off-screen). Additionally, it was nice to learn how the Spotify Web API works, and we learned a lot about how to make requests (and parse the response) using the popular requests library available on pip.We have thrown around the idea of preparing roombox for public use - the idea seems to be popular with people who have had it demonstrated to them, and the site is pretty close to being ready for public consumption - we just need to finish implementing little \"polish\" things (like auto playlist deletion after a given time, and the ability for the host to delete things from the queue).HackNotts 2016worked mostly on frontend stuff and some serverside (writing the init script for the Flask server, etc.)worked on backend, including authorisation and communication with Spotify API and database managementToby Jones\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 27, 2016 06:16 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"roombox","project_tags":["flask","postgresql","python"],"project_url":"https:\/\/devpost.com\/software\/roombox","keywords":"roombox,us,spotify,lot,site,queue,time,playlist,things,development,idea,create,issues,flask,database,project,songs,layout,found,allowed"},{"level_0":471,"hack_vector":[[0.1554480791,-0.0898607671,-0.0304963142,0.0462070666,-0.0163537804,0.1225306168,0.1969915479,-0.0236844178,-0.0325768106,0.0079240324,0.0195676647,-0.0752670914,0.1562441438,-0.07730221,0.081207633,-0.0193836149,0.1784220934,-0.0223617125,0.0470333025,0.1236478388,-0.238792643,0.0326639451,-0.0515913777,0.0021220811,0.1176728755,-0.0366686508,-0.027312547,-0.1700222194,-0.0322318971,-0.0754804835,0.0736742988,-0.1121162474,0.0211239476,-0.0811984986,-0.0288635753,-0.0025450215,0.1151577458,-0.1391154379,-0.0695825294,-0.0074442541,0.0496075489,-0.1205255166,-0.1404030919,-0.0069265906,0.0680324659,-0.0435977802,0.0152589604,-0.102672264,-0.0116456868,-0.2060721964,-0.160569042,0.0160582904,-0.1193564758,0.0356813595,-0.2085492611,0.1549438387,-0.135185346,-0.0182894859,0.0248606633,-0.1081957817,-0.0668503046,0.0268053897,0.0796122551,0.0515779294,0.1198562905,0.0127498461,-0.0857602879,-0.1092844382,0.0166868735,0.0044137402,0.0578536168,-0.0378188491,0.0131509025,-0.1161390617,0.053614825,-0.1177111641,0.1903991848,-0.0051783724,-0.0095161116,-0.1375552416,0.1300283521,0.1556288749,0.0675212443,0.1479611993,0.099807106,0.2172230035,-0.0754556581,-0.0422770567,-0.0089666713,-0.072731562,-0.1483014673,0.0538179241,0.1075853258,-0.0342528149,-0.0064638644,0.0076901126,-0.1643675715,0.2397583127,0.0089257173,-0.0681483969]],"hackathon_name":"HackNotts 2016","index":471,"project_description":"An assistant for documenting hackathons!We found that documenting hackathons outside of GitHub was very tough, and it was easy to forget to note down some of the more sentimental things that happened. Initially, we planned on using Alexa to note down milestones and events, but as this later became less of an option, APIs were suggested to us.It acts to help hackathon attendees document tweets, commits, and milestones, and presents these in a final summary table.We built the frontend using core HTML initially, neglecting to style the website until core functionality was in place. We also endeavoured to implement the Twitter and GitHub APIs. We allowed users to store what they wanted to document in MongoDB, and endeavoured to parse Twitter and GitHub data into this database too.Making sense of both the Twitter API and GitHub API were a challenge. Parsing the Twitter data was also a nightmare! We had no previous experience using these APIs. Interfacing between PHP and HTML proved a challenge, since the website was very heavy on both reading and writing database data.We are proud of making the APIs work and integrating all our work together! We believe that with a quick and easy setup, this could be a tool that we all use during hackathons.We learned about new APIs, building forms, and using databases. In particular, Simon began to understand PHP, and while Darren had experience in this before, he learned about the most effective ways to use database data in a website.Integrate more APIs into Hacker Tracker to make it a stronger platform for many people use it as a platform to document their previous hackathons! It also has social network potential.HackNotts 2016I built the server-side backend of this website in PHP and the ability to store user data submitted in a MongoDB database. Whilst I had some experience working with MongoDB and PHP before, linking the two technologies together was unfamiliar territory which made the whole experience rather challenging. Having said that, I have learnt lots of new things such as the MongoDB PHP drivers, browser sessions, Composer and the Twitter API.Tzen Szen Toh\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 27, 2016 06:06 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hacker Tracker","project_tags":["html","css","php","javascript","twitter","git","github","mongodb","bootstrap","jquery"],"project_url":"https:\/\/devpost.com\/software\/hacker-tracker-ewutrx","keywords":"apis,twitter,using,github,data,database,website,learned,use,also,document,hackathons,core,hacker,php,platform,note,easy,previous,experience"},{"level_0":472,"hack_vector":[[0.1572011709,-0.1526473165,-0.001006703,0.0929428115,-0.0371518768,0.1726851761,0.1933695227,-0.0554267429,-0.0415202454,-0.0128308274,0.0043811314,0.0118678212,0.14038831,-0.0716987476,0.0168223474,0.050709933,0.2544151545,0.0304509792,0.049524013,0.0835605338,-0.2061858028,0.0325152352,-0.0461036228,-0.0360350572,0.176237151,-0.0175143052,-0.0709872842,-0.1921198964,0.0102388794,-0.0805020258,0.0572839305,-0.1187719852,0.0711100474,-0.0609816052,-0.0325158574,-0.0038113892,0.1470224261,-0.1128923148,-0.0074242977,0.0499148928,0.0644676685,-0.1667021662,-0.1836533546,-0.0346157178,-0.0247537196,-0.023372354,0.0314293616,-0.0207403786,-0.0255909078,-0.1861552596,-0.0364832357,0.0392806605,-0.1025823876,-0.0297837295,-0.1314937472,0.1361040026,-0.1618505716,0.0443553291,0.0094732558,0.0184237268,-0.0320449136,0.0387379862,0.058806695,0.0498809256,0.1290985942,-0.0279988945,-0.129160583,-0.1639804691,0.0189234465,0.0198518839,0.0736028999,-0.0311766807,0.0143215666,-0.1487503797,-0.0581545532,-0.085310638,0.1855392605,0.0228480231,0.0871092826,-0.1385877132,0.1137167066,0.1541884542,0.0209689345,0.1530309618,0.1510719806,0.1647273153,-0.1454753429,0.0411471464,-0.0021999814,-0.1164673865,-0.0895681605,0.1074875295,0.0320060402,0.0007218467,0.0717016011,-0.061349865,-0.0834693536,0.1695217043,0.0853413865,-0.0392724127]],"hackathon_name":"HackNotts 2016","index":472,"project_description":"A physics based puzzle game based of a water simulation. Push a ball around by touching the waterHackNotts 2016I wrote the water simulation core, wave push mechanics and image manipulation code,Daniel Whittaker\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 27, 2016 06:31 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Aqua-Mazing","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/aqua-mazing","keywords":null},{"level_0":473,"hack_vector":[[0.1626274884,-0.1179000288,-0.0066379923,0.0378676951,-0.0139647825,0.1527500153,0.1838266999,-0.0469265692,-0.0273687746,0.0013024587,0.0194631182,-0.0758117512,0.1409894824,-0.0775030479,0.0555886328,0.0318915285,0.2269012779,-0.0063225608,0.0527647883,0.104618974,-0.2349945158,0.0434993692,-0.0574106053,-0.0117986882,0.1395918429,-0.0422484353,-0.0344714373,-0.1942386925,-0.0247755386,-0.0923363641,0.0719528794,-0.117972739,0.0566238835,-0.1028497219,-0.0283777136,-0.0189619623,0.1243878305,-0.1437568963,-0.038692493,-0.0066363346,0.0374073908,-0.140817225,-0.1786867231,-0.0253970679,0.0436025187,-0.0379429795,0.0189465228,-0.0622348301,-0.0139674898,-0.2080505639,-0.1190833077,0.0275333133,-0.115515776,0.0077784997,-0.1951303184,0.1561517566,-0.145182386,0.0046781702,0.0282266196,-0.0732295886,-0.0595037714,0.0146171972,0.0774705186,0.0577841364,0.1070836782,0.0052073388,-0.1080258116,-0.1404084265,0.0232866667,0.0271199867,0.0907571688,-0.0484084561,0.0241757929,-0.1351549029,0.0179484989,-0.1149735078,0.183704555,0.0101580266,0.0418304317,-0.123055622,0.1182087734,0.1501198411,0.0530222245,0.1608493328,0.1204794422,0.1749227494,-0.113329187,-0.0278946087,-0.015239045,-0.0884287208,-0.11829146,0.0649499968,0.0826085135,-0.0404491499,0.010417656,-0.0156606864,-0.1216506809,0.1988960654,0.0401316918,-0.0779123455]],"hackathon_name":"HackNotts 2016","index":473,"project_description":"Accelerate your reading by skipping the boring parts. Action, action!plotScan your books, newspapers and documents. Quickly find sections that involve drama and action. Interesting parts are easy to find by searching for the highlighted paragraphs.It even enables you to have a look at different plots of the underlying features as well as giving you the opportunity of highlighting the word type structure and frequency of your document.The project was implemented by:HackNotts 2016I started by doing the back-end data processing and moved over to the XML management that represents our results on the website.I helped with the software for counting different types of words (e.g verbs, nouns and punctuation types), as well as the calculation of the action coefficient and general graph plot for the website.I worked on the Flask front end and some of the back end tooJannik Steinmann\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 27, 2016 06:32 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Action Action!","project_tags":["python","nltk","flask"],"project_url":"https:\/\/devpost.com\/software\/nlp-analysis","keywords":"action,different,find,features,even,implemented,highlighting,highlighted,giving,frequency,extracted,enables,well,easy,drama,documents,document,diverse,books,amount"},{"level_0":474,"hack_vector":[[0.1601246893,-0.0970218554,-0.0081300968,0.070339255,-0.0391980335,0.1419745535,0.1862006932,-0.0272688773,-0.0344044492,-0.0307837315,0.0114295529,-0.0330288261,0.1428313851,-0.0727483407,0.0346650332,0.0277143773,0.228214249,0.0053047216,0.0468405001,0.1300295144,-0.226309821,-0.0018817706,-0.0601863563,-0.0229179487,0.1323152632,-0.0227213725,-0.0563592687,-0.1696160883,-0.0142621193,-0.1030065641,0.0364364572,-0.0927189663,0.0381348357,-0.0639404207,-0.009373636,0.0051521538,0.1348042041,-0.1299800724,-0.0392001532,0.0506360717,0.0711250231,-0.1169016808,-0.1632817835,-0.0293965638,0.0281669758,-0.0791683197,0.0298847854,-0.065552555,-0.0274031367,-0.2201690674,-0.1020292938,0.0231835004,-0.1071145535,-0.014045571,-0.1794028729,0.1693996638,-0.1431732923,-0.0008235145,0.0175779965,-0.0622251444,-0.0406357162,0.0189233515,0.0694344789,0.0550059602,0.1485566646,-0.0081187328,-0.124800168,-0.1498703063,0.0117121916,0.0068778982,0.0566845722,-0.0353076458,-0.0179391447,-0.1278865933,0.0032045089,-0.0973721966,0.2001745999,0.0111171724,0.0268798359,-0.1541174054,0.109657526,0.1685272306,0.0303744525,0.1423824131,0.1230095103,0.2059144676,-0.115267612,-0.01596977,-0.0181176141,-0.099742271,-0.1323976368,0.0787124708,0.0698884875,-0.0032760166,0.0062493393,-0.0284107383,-0.1375022531,0.2270811945,0.0498034954,-0.05378085]],"hackathon_name":"HackNotts 2016","index":474,"project_description":"A simple skill for Alexa which holds information on hacknotts2016We came up we a load of ideas of how to use Alexa. They were either already built in or impossible due to limitation in the technology.Eventually we found an idea that we could work with. Make the slackbot but on Alexa. We've tried to make it flow as best as possible.We hope you like it.HackNotts 2016Johnathan\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 27, 2016 06:31 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"hackNottsAlexa","project_tags":["javascript"],"project_url":"https:\/\/devpost.com\/software\/hacknottsalexa","keywords":"alexa,make,hacknottsalexa,already,best,built,came,could,due,either,eventually,flow,found,work,use,idea,ideas,impossible,like,limitation"},{"level_0":475,"hack_vector":[[0.1463635862,-0.1167235151,-0.0258931667,0.0389512107,-0.0241862666,0.1373315006,0.2045984864,-0.0286173392,-0.0218661446,-0.0236247685,-0.0132362898,-0.0534610376,0.1382079124,-0.0722175613,0.0465980694,0.0247423667,0.2203041613,0.0022830951,0.0452915244,0.1183639765,-0.2422875315,0.0335562378,-0.0359586254,-0.0263062082,0.1189076155,-0.0338140316,-0.0435974784,-0.1611174345,-0.0221703053,-0.1012934744,0.0468724705,-0.1215769425,0.0466617607,-0.0721983016,-0.0247093625,-0.0264708884,0.1338483542,-0.1422533691,-0.0481496342,0.0111198891,0.0533237532,-0.143172726,-0.1583817452,-0.0415721647,0.0550988279,-0.0594011918,0.0233938918,-0.0702317283,-0.0211480744,-0.2016733885,-0.1259392351,0.0211692937,-0.1123640463,-0.0082618305,-0.1955331564,0.1534015983,-0.1454299241,-0.0225309599,0.0422301218,-0.0691418648,-0.0751036853,0.0201518945,0.0647356361,0.0323239341,0.1116944104,0.0087152561,-0.1076685637,-0.1375123411,0.0347953364,0.0338829122,0.0785530508,-0.0615100935,0.0031082775,-0.1306263059,0.010774523,-0.1251266152,0.1685911864,0.0157355443,0.0224758051,-0.1368466765,0.1149629951,0.1600891203,0.0422516689,0.1691179127,0.1236125305,0.1934314221,-0.1039017737,-0.0048491191,-0.0044112643,-0.0921917483,-0.1333532482,0.0655559003,0.0851773396,-0.0329037495,-0.0005555113,-0.0112460544,-0.1597631872,0.2251517624,0.0338571742,-0.0633314103]],"hackathon_name":"HackNotts 2016","index":475,"project_description":"Do you know the prevalence of online harassment?Online Harassment is a serious issue, but awareness needs to be raised.The site features a short quiz designed to test the user's knowledge regarding online harassment. It is scored immediately, with the form marking answers correct or incorrect. At the bottom of the page, there is a link to #HackHarassment's brochure, where the information for the quiz was found. It also links to the #HackHarassment's challenge.domain + HTML + jotform + AWS = website!!!Initially I was going to have a large set of questions and randomize the questions that appear each time the site is loaded, but incorperating the jotform element into javscript was a bit harder than expected. It will definitely be a part of future versions.HackNotts 2016Kai Barclay\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 27, 2016 06:40 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"hacksnothate.com","project_tags":["amazon-web-services","html","jotform"],"project_url":"https:\/\/devpost.com\/software\/hacksnothate-com","keywords":"jotform,site,questions,quiz,future,online,hackharassment,harassment,going,goals,domain,found,form,features,harder,expected,element,website,definitely,designed"},{"level_0":476,"hack_vector":[[0.1527100056,-0.088089928,-0.0410834849,0.0575377047,-0.0167361367,0.1523064077,0.2021443099,-0.0455254465,-0.0319827907,-0.00745402,0.0131478962,-0.0689339563,0.1451343894,-0.0818309337,0.0638982728,-0.0159252547,0.2110194117,-0.0146952178,0.0399093144,0.1163842976,-0.221123904,0.0275691971,-0.0490644202,0.0049715587,0.1392288059,-0.0186225772,-0.0267157909,-0.1803596616,-0.040026281,-0.0615721792,0.0723507851,-0.129457593,0.0398877896,-0.0838982463,-0.0467955768,-0.0061315699,0.122711271,-0.1265880466,-0.0479793102,0.0028538755,0.0601103976,-0.1163135245,-0.1602797806,-0.0070080222,0.0683776289,-0.0431048423,0.0145328939,-0.0725202486,-0.0331436619,-0.2254765183,-0.1317695975,0.0035791518,-0.0995310843,0.0226622578,-0.1826354265,0.1543271095,-0.1375307292,-0.0158701912,0.0075487471,-0.0928319246,-0.0650271997,0.0205721967,0.0888823047,0.0252654366,0.1245908812,-0.0001038472,-0.0971691161,-0.119580321,0.0317043923,0.0282941535,0.0604035147,-0.0306024477,0.017220851,-0.1279903054,0.0196391605,-0.1038371027,0.1995296925,0.0076779877,0.0105863744,-0.1330604255,0.1321762502,0.1572152972,0.0646703392,0.1688972265,0.0971284285,0.1959070414,-0.0888775513,-0.0333137959,-0.0079937214,-0.0891504586,-0.1551128328,0.0573423095,0.0999206677,-0.0215518028,0.0084476722,-0.0041434597,-0.1360419691,0.2383222133,0.0311072785,-0.0701854974]],"hackathon_name":"HackNotts 2016","index":476,"project_description":"People who didn't get to play Werewolf last night,if voice commanding time!Werewolf is an amazing game.Combine it with Alexa's voice command and a little (huge actually) amount of Python in the backend and you get countless hours of fun.Calls into Alexa's API in order to simulate the host of a werewolf game.The backend is fully supported by AWS,while Alexa makes calls to our Flask server to get the whole story of the werewolf.Then,it parses the info into our front end written in html,css and js in order to provide mobile users with a GUILambda - handles Alexa integration\nGame Server - EC2\nRoute53 for static routing\nCloudWatch\nS3 with CloudFront to serve silent mp3 files for timing.alexaplaywerewolf.comGet alexa to understand how to run our gameLearning how to use Alexa Python SDK in order to develop our project.A lot about Alexa,how it works and what you can use it for.Ui imporvements and a lot of code cleaning.HackNotts 2016Contributed to develop the idea, define game dynamics and role assignment as well as wrote the speeches.Front and Backend Development using HTML,CSS,JS and FlaskAndrei Tuta\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 27, 2016 06:40 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Alexa the Werewolf","project_tags":["amazon-alexa","python","html5","css3","javascript","flask","amazon-web-services","json"],"project_url":"https:\/\/devpost.com\/software\/alexa-the-werewolf","keywords":"alexa,werewolf,game,order,get,backend,python,lot,server,challenge,calls,aws,use,fully,css,fun,front,flask,files,gui"},{"level_0":477,"hack_vector":[[0.1479759365,-0.1464860588,-0.0111112623,0.0775862485,-0.0469757803,0.160163179,0.1885142177,-0.049363561,-0.0292487387,-0.0385125205,0.0086577442,0.0103636626,0.137613073,-0.0709011853,0.0147309266,0.0599217564,0.2617396116,0.0254753232,0.0383327156,0.0953290612,-0.2128852606,0.0086706942,-0.0435941406,-0.0528851114,0.1551224887,-0.013958835,-0.0585010462,-0.1810908616,0.0117716072,-0.0956188366,0.0436690561,-0.1115780026,0.0627246127,-0.0490373746,-0.0202492252,-0.0076408642,0.1421897411,-0.1198349074,-0.008616087,0.0607114546,0.0677770227,-0.1480587274,-0.1832544655,-0.0417607836,-0.0154176764,-0.0546721667,0.0321719982,-0.0170980357,-0.0307419337,-0.2005823702,-0.0528741218,0.0251671616,-0.0926827937,-0.0509579405,-0.1455625296,0.157833159,-0.1514908969,0.0336571932,0.0009546321,-0.0002089794,-0.0350363962,0.0278785285,0.0619406849,0.0564442538,0.1394459307,-0.0193377417,-0.1328652799,-0.169123888,0.0305912606,0.0202113297,0.0609695427,-0.0357328393,0.0001966736,-0.1391899437,-0.0563559309,-0.0896345749,0.1829133928,0.0259025954,0.0709756762,-0.1403555423,0.1134308875,0.1687699556,0.0122834621,0.1649792194,0.1432310343,0.1698783785,-0.1462987065,0.031321086,-0.0087873032,-0.1147737801,-0.0963621885,0.1062593013,0.0412264243,0.0034738733,0.0502876453,-0.0638475865,-0.0952389538,0.1807112843,0.0761772692,-0.0435506478]],"hackathon_name":"HackNotts 2016","index":477,"project_description":"A 21st century visualiserWe started off wanting to make a game based on the music that you're listening to. We ended up making a music visualiser optimised for edm with special events or kicks and drops.loads and loads of jsjavascript is 90% bsHackNotts 2016Jonathan Balls\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 27, 2016 06:46 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"DubRace","project_tags":["javascript"],"project_url":"https:\/\/devpost.com\/software\/dubrace","keywords":"music,loads,wanting,javascript,based,bs,built,challenges,drops,dubrace,edm,ended,events,game,inspiration,kicks,js,visualiser,learned,listening"},{"level_0":478,"hack_vector":[[0.1555038542,-0.1194016114,-0.0231346022,0.0487203822,-0.0283188298,0.1331363171,0.1928665042,-0.0322368518,-0.0228363592,-0.0007272785,0.0114261508,-0.0486050993,0.1536975205,-0.0688955113,0.0657970607,-0.0012735476,0.2005980164,0.0013750785,0.0542368516,0.1111607179,-0.2352022082,0.0363629051,-0.0391412862,-0.0185401402,0.1299689561,-0.0229104124,-0.0302750245,-0.1782891899,-0.0124208201,-0.082335189,0.0523084998,-0.1349176764,0.0309284758,-0.0800575018,-0.0235192627,-0.0142820776,0.1188061759,-0.1461867243,-0.0728153959,0.0107981181,0.0443328172,-0.1473302692,-0.1534124017,-0.0370900482,0.0344188586,-0.0549719855,0.0134472419,-0.0764904842,-0.020766411,-0.1912899613,-0.1473481804,0.0158399846,-0.1218779683,-0.0050093844,-0.1920114458,0.1657894701,-0.1361210644,-0.0108388821,0.0315629654,-0.0788075998,-0.0710604042,0.026780311,0.0711613372,0.0638590902,0.1119809449,0.0124996202,-0.1087421998,-0.128792122,0.0250316691,0.0167474113,0.0759376511,-0.0541900136,0.0182901975,-0.1213343516,0.0273796581,-0.1213372946,0.186902076,0.0127228796,0.0190656446,-0.1377646029,0.1294133961,0.1615166366,0.0595770441,0.154019624,0.1182953641,0.1973278075,-0.1048857421,-0.0209116917,0.0033158264,-0.077676028,-0.1259275675,0.0619276688,0.0946154147,-0.0314873457,0.0205107238,-0.0217583664,-0.1566899121,0.2246534079,0.0212802682,-0.0712978169]],"hackathon_name":"HackNotts 2016","index":478,"project_description":"Generative Transaction Art using Algorithmically-Generated Data from Nationwidep17We were reading up on big-data science and statistics but got bored by chapter 2. Our focus moved away from trying to visualise trends to simply making pretty art instead. Unfortunately, both of us stopped drawing professionally at age 7 and our skills haven't developed since then.It takes an aggregated data-set provided by Nationwide and animates the income, outgoings and balance over time into a so-called polar-coordinates-color-overlay-awesome-graph.Javascript + MagicFuchsia vs Magenta...Realising that neither Fuchsia nor Magenta were suitable and instead choosing Mauvish Crimson.Color theory is hard.The ability to throw new data at the running program in real time and have the graph(s) keep getting drawn. This could also be adapted for stock market visualisations.\nMaking it work in ($browsers - $browsers[chrome]) would be cool, too.HackNotts 2016Rob Ede\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 27, 2016 06:47 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Transaction Nebulae","project_tags":["javascript","html5","css3","canvas"],"project_url":"https:\/\/devpost.com\/software\/generative-transaction-art","keywords":"data,making,time,instead,graph,fuchsia,browsers,color,magenta,away,developed,drawing,drawn,focus,age,getting,got,adapted,hard,income"},{"level_0":479,"hack_vector":[[0.1470018029,-0.0710545406,-0.0277974978,0.0392483994,-0.0131675089,0.1311285645,0.1958599836,-0.0256051999,-0.028772343,-0.0107583553,0.0198575929,-0.0949922726,0.1411583722,-0.0745298937,0.0742733926,-0.0084426692,0.1998516023,-0.0115576414,0.0389823802,0.1303791553,-0.2245581299,0.0370198563,-0.0497126132,-0.0063855061,0.1029768661,-0.0235846955,-0.0214503091,-0.1804674715,-0.0459807254,-0.0785103366,0.0672331825,-0.1116242483,0.0342535228,-0.0949975327,-0.0238192808,-0.0108398702,0.1160055324,-0.1326902956,-0.0619781278,-0.0053467918,0.0469753928,-0.1239603981,-0.155798614,-0.0190699156,0.0833441913,-0.0544210598,0.0145810619,-0.0879299715,-0.0297440253,-0.2225635648,-0.1557438821,0.008565004,-0.1017777845,0.0237592999,-0.1972152889,0.155065164,-0.1260316968,-0.0305879973,0.0331062973,-0.1201691553,-0.0740680546,0.0091371872,0.0873528644,0.0326298065,0.1179481819,0.012290624,-0.0864927322,-0.1166704819,0.0329200327,0.0192636941,0.0642402172,-0.0508573167,0.0090865036,-0.1159691811,0.0442981645,-0.12089286,0.1803755462,0.0001654926,-0.0004200528,-0.1303341389,0.1251814216,0.1557856947,0.0732586905,0.1616845131,0.0853200257,0.1998631805,-0.0860340148,-0.052880656,-0.0168194566,-0.0817414448,-0.1605115831,0.0443439409,0.1003984883,-0.043325007,-0.0223600846,0.0101590455,-0.1607968956,0.2425408512,0.0049621197,-0.077243425]],"hackathon_name":"HackNotts 2016","index":479,"project_description":"Banking made for the 21st centuryWe saw what you could do with Alexa and seeing the talk by Capital One made it obvious to us. We wanted to see the future and the only way to do that is by inventing it.We built a skill for Alexa using Python as our backend and flask-ask to interact with and create the skill for Alexa. You can call commands such as \"Alexa, show me my balance in Retirement\", \"Alexa ask banking to show me my financial report\", \"Alexa ask banking to remind me that I owe John \u00a310\", and \"Alexa ask banking to buy me a chicken using account Credit Card\"We built this over a 24 hour hackathon using Flask-ask, Python, Json and Requests. \nArron and I worked on the backend side using the Capital One API. Ollie and Chris worked on the Alexa front end.The Alexa API regularly timed out due to poor wifi or other issues. To overcome this we set up a mobile hotspot to circumnavigate the bad internet.Making Alexa understand and respond to requests made by humans. This was one of the more challenging aspects, despite the Alexa API supporting this. Because of the issues we had with the API it was difficult for us to develop a basic working Alexa application fast.We learned how to use object orientated design within Python and how to effectively work with the Alexa and Capital One API.Since Capital One only have a hackathon API we might not be able to develop much on it, however, the future of banking is clearly to bring it into the home and to use IOT devices such as Amazon Echo\/Dot and we are glad to have been at the edge of technology.Thanks to some good comments from Capital One, we will be continuing this project.HackNotts 2016I worked on the backend with Arron, I created functions which acted like API following the Unix Philosophy to allow the Alexa team to easily implement the capital one functions in their programs. Specifically I created:\nHow much you owe someone and the ability to owe someone an amountAbility to find a users account using natural language processing which allowed the user to search for \"savings account\", \"ID: 5f9568fmae\", \"account with balance \u00a3500\" or any other parameters that are unique to the account.Ability to purchase products from sellers that support capital oneCreate a financial reportWorked with Brandon on processing the nessie API and making the endpoints for Alexa.Specifically on the OOP aspect of the system. Making the Bills, Account, and Transfers Classes. Parsing multiple accounts from Nessie, and converting that into a list of objects making it easier for both the backend and front end to work multiple pieces of data.Actually set up the Alexa. Very proud of it. aMEIzing.I was working with the Amazon Alexa API and integrating the backend Python functions that Aaron and Brandon worked on with the Alexa Christos set up. I created the utterances and intents that forwarded commands given to Alexa to the appropriate python functions that formatted responses, and then sent those responses back to Alexa.Brandon Skerritt\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 27, 2016 06:59 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"bank-of-alexa","project_tags":["python","flask","alexa","capital-one"],"project_url":"https:\/\/devpost.com\/software\/bank-of-alexa","keywords":null},{"level_0":480,"hack_vector":[[0.1482234895,-0.0909525007,-0.0362054221,0.0397788957,-0.0166633409,0.12018691,0.2007711679,-0.0205698628,-0.0302324351,-0.008615436,0.0085517569,-0.068331182,0.1448694617,-0.0702956468,0.069720462,-0.0173885562,0.1906917542,-0.011303843,0.0464185365,0.1279823482,-0.2432980388,0.0263009388,-0.0432155505,-0.0029543987,0.1105903015,-0.0283830967,-0.0292139091,-0.1677690595,-0.0250734054,-0.0923241526,0.0644552559,-0.1189237162,0.0229692999,-0.0762100443,-0.0223274417,-0.0151160033,0.1174605936,-0.143990621,-0.0700298473,-0.0096650645,0.0511613488,-0.1190111861,-0.1359945834,-0.021629706,0.0710730478,-0.0580325164,0.0156758707,-0.0976759866,-0.0156634282,-0.2090887576,-0.1528630555,0.0147704715,-0.1105084717,0.0245314799,-0.2086963803,0.1632262468,-0.1338905394,-0.0296803005,0.029667221,-0.1105439067,-0.0733427852,0.021685604,0.0796408057,0.040862415,0.1156562939,0.020886289,-0.0925729051,-0.116316855,0.0248579942,0.0209001787,0.0647116154,-0.0451698229,0.0164101105,-0.1168668494,0.0494400077,-0.1252221763,0.1782176197,0.0009769734,-0.0021535477,-0.1350083947,0.1205137223,0.1523704231,0.0622469671,0.158949405,0.1047497988,0.2123804986,-0.0820669085,-0.045133803,-0.0197385885,-0.0658634156,-0.1485775262,0.0561662391,0.1079380438,-0.0392633379,-0.018499082,0.0117756175,-0.1689382792,0.2393524051,0.0049320627,-0.070640415]],"hackathon_name":"HackNotts 2016","index":480,"project_description":"First you use it, then you want it, next you get it.We are basically a bunch of creative students who thought hard about the small life hacks that people will like. Pebble was a new gadget for most of the team and we wanted to explore what we could do with it.HotPebble is made up of 3 simple utilities function.Use Cases:There are two main components to this project, the client-side pebble application and the server scripts to handle client data. The client-side pebble application is built in pure C, the highest level language in the world ;). The server scripts are built in Python and caters separately to both macOS and Windows. The macOS scripts uses Python libraries such as pyautogui and pynput, whereas the Windows scripts uses the win32api.The pebble app collects accelerometer data and performs on-device processing to eliminate jitter and smoothen out spikes in orientation values. The app then pipes the data via Bluetooth serial to a server listening on a laptop, which interprets the data to perform the various commands that HotPebble is capable of. This includes scrolling the active window, sending media keys such as Play\/Stop, Next\/Previous Track, volume control and simple presentation shortcuts.It was a difficult process to connect pebble applications to non-mobile devices as there was no official API support for direct connection. We had to rely on an external Python library (libpebble2) to accomplish it. The documentation was not very extensive and not much resources\/examples were available online. Therefore, we had to spend a lot of time figuring out how to implement the functionalities that we desire.It was our first hackathon together as a team even though we had known each other for more than a year. It was an amazing experience as we got to learn about each other better.We are super proud to have completed what we had set out to do. It will definitely be a memorable time and a start for many more great hackathon experiences to come.Learning to work well in a team. Finding workarounds to technical obstacles that we face. Helping each other solve problems. Managing our expectations and time.HackNotts 2016Wayne Tsui\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 27, 2016 07:00 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HotPebble","project_tags":["python","c","pebble"],"project_url":"https:\/\/devpost.com\/software\/hotpebble-68wm4n","keywords":"pebble,scripts,data,hotpebble,server,client,python,team,volume,simple,next,built,media,control,time,side,start,stop,scrolling,macos"},{"level_0":481,"hack_vector":[[0.1622065306,-0.1520747691,0.0006830195,0.0969020724,-0.0419072621,0.1731264144,0.175871402,-0.0738413855,-0.0427447818,-0.0156822521,-0.0015936301,0.0337770171,0.1355611235,-0.0744939372,0.0015361176,0.0483449362,0.248417452,0.0305515118,0.0631977022,0.0813634768,-0.1872055382,0.0053147464,-0.0454293713,-0.046685759,0.19260481,-0.015918389,-0.0686800629,-0.1903854907,0.0163783245,-0.0675960556,0.0468389578,-0.1169738173,0.0777846202,-0.0487677008,-0.0406471454,0.0061096945,0.142240271,-0.0971992761,0.0032212702,0.0866430029,0.0813907608,-0.150042817,-0.1828461438,-0.031210687,-0.0498473905,-0.0376702435,0.0377931781,-0.0080078254,-0.0267459322,-0.1896759421,-0.0333675407,0.0359051563,-0.1072720215,-0.0454312935,-0.1142139509,0.1444722265,-0.1652684659,0.0670620054,-0.0189805124,0.0507338382,-0.0071022944,0.0297529306,0.0384464934,0.0562025793,0.1482249647,-0.0425335281,-0.1349057406,-0.1627939492,0.0101755867,0.0034236566,0.0727966279,-0.0299554132,-0.0104983347,-0.1471235156,-0.0624155998,-0.0539616011,0.2016997635,0.0285386778,0.0923004895,-0.1381429583,0.1094713435,0.1423563361,0.012324444,0.1471724063,0.1601093411,0.1703273356,-0.1406590492,0.0650932863,0.0143180536,-0.1038825959,-0.0714026913,0.1050375476,0.0336474068,0.0277018696,0.0757245496,-0.0964349806,-0.0616703257,0.1547253579,0.1007615179,-0.040905416]],"hackathon_name":"HackNotts 2016","index":481,"project_description":"Top Down 2d Shooting survival gameFat ZombieI finished my first game starting from scratch with just c++ and sfmlGitHub: https:\/\/github.com\/chtorr97\/HackNotts16.gitHackNotts 2016Davide Finozzi\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 27, 2016 07:05 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"(SKIP THIS) Fat Zombies (SKIP THIS)","project_tags":["c++"],"project_url":"https:\/\/devpost.com\/software\/zombiesurvival","keywords":"github,starting,sfml,scratch,proud,https,hacknotts,git,game,first,finished,com,chtorr,accomplishments"},{"level_0":482,"hack_vector":[[0.1707187146,-0.1284102201,-0.0199052878,0.0650893971,-0.0293632876,0.1522294134,0.1856028885,-0.0386009254,-0.0105502456,-0.0239523444,0.0075722425,-0.0321039259,0.1326863915,-0.0652905852,0.0572708063,0.0023299791,0.2243042439,0.0154400999,0.0547980666,0.1071659029,-0.2353649139,0.0198586229,-0.042283684,-0.0277151261,0.1342815459,-0.0251577776,-0.0317344069,-0.1872776002,-0.0154117979,-0.0874691457,0.0488239639,-0.1155831963,0.048340112,-0.1006283239,-0.0304433368,-0.0236994214,0.1230530441,-0.1408637017,-0.0689094663,0.0210788809,0.053385146,-0.1328455806,-0.1466980726,-0.0358035266,0.0332047045,-0.051229395,0.0225749481,-0.0538226329,-0.0363910906,-0.2050986588,-0.124257572,0.014906236,-0.116188325,-0.0239704382,-0.1648038775,0.1590681374,-0.1221160665,0.000068001,0.0288994685,-0.0504584238,-0.0589400195,0.0170546286,0.0733138546,0.0417591482,0.1182330251,-0.001640365,-0.1326376498,-0.1371702999,0.0115751317,0.0290741175,0.075671047,-0.0455165282,0.0134530822,-0.147314176,-0.0091425357,-0.1191066429,0.2027544677,0.0195546802,0.0317937806,-0.1455185115,0.1195368543,0.1564166546,0.0347532518,0.1661363393,0.1242378652,0.1963026971,-0.1020903885,0.0073245275,-0.0080810534,-0.0795373172,-0.1247241795,0.0847662091,0.0795486718,-0.0211198926,0.0310678426,-0.0360582061,-0.1176180765,0.2303772718,0.0340314955,-0.0670472533]],"hackathon_name":"HackNotts 2016","index":482,"project_description":"Robot reindog that you can talk to and give commandsThe fully completed cardboard robot. Whats next, Robot Wars?Our (excluding Stephen) hack from last year, now for a similar robot sequel (including Stephen).Walkies. Play dead. You give it commands and it does it.Lots of tape. Not GIT. Anything but GIT.Gravity, things falling apart, number of pictures, the adhesiveness of certain materials. Ghosts possibly, probably?Competent Amazon Alexa integration. It looks really sad. Face detection.How to doFully integrated face recognition for walkies.HackNotts 2016Facial  recognition, design, some hardware stuffRobert Mason\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 27, 2016 07:18 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Clausiosity Rover 2: The Woofening","project_tags":["raspberry-pi","arduino","amazon-web-services","amazon-alexa","java","python"],"project_url":"https:\/\/devpost.com\/software\/clausiosity-rover-2-the-woofening","keywords":"walkies,stephen,git,face,year,dead,hack,gravity,give,ghosts,fully,falling,excluding,detection,commands,competent,inspiration,clausiosity,challenges,certain"},{"level_0":483,"hack_vector":[[0.1526396424,-0.1090011224,-0.0315807238,0.0432777554,-0.0151471756,0.1416386962,0.1984842122,-0.0534526594,-0.0151525158,-0.0168924741,0.0120652104,-0.0570362806,0.1425968111,-0.0752461776,0.0546555854,-0.0003006099,0.2108328193,-0.0178781152,0.0454391278,0.1284636706,-0.2389100641,0.0298129711,-0.0364869907,-0.0143585159,0.130046919,-0.0214141738,-0.0213382039,-0.1715068072,-0.0186275691,-0.0870706066,0.0604829639,-0.1306567788,0.0462545715,-0.0736807883,-0.029152615,-0.0321372226,0.1216927841,-0.1447324455,-0.0525255837,-0.0019479393,0.0633779913,-0.1245958656,-0.1496553719,-0.0334186889,0.0548547767,-0.0429088622,0.0143738082,-0.0768202394,-0.0296073575,-0.2101204395,-0.1484857798,0.0215425417,-0.1093059778,0.0092264777,-0.198216483,0.1630475372,-0.1310679764,-0.0259436779,0.0130241113,-0.089624621,-0.061252255,0.0054525491,0.0840384737,0.0359146371,0.1198789477,0.0113705061,-0.1011163667,-0.1232677549,0.0312394258,0.0398524515,0.0713768825,-0.046576269,0.0165030118,-0.1296416819,0.0247777011,-0.106554918,0.1827183217,0.0100445515,-0.0000639218,-0.1342849284,0.1214679778,0.157680884,0.049723044,0.1740931571,0.1028261855,0.1993826479,-0.0973415002,-0.0359513164,-0.0166038517,-0.0688033625,-0.1410517395,0.0574223846,0.1009529456,-0.0269644447,-0.0048773536,-0.0074904128,-0.1453221291,0.2292855233,0.0157894697,-0.072130084]],"hackathon_name":"OxfordHack","index":483,"project_description":"Enable researchers and students to use professional latex typesetting and a shared whiteboard to exchange ideas.collaboard is collborative tool allowing researchers to collaborate using LaTeX and a shared whiteboardif no room exists, it is createdmessages are previewed as you type. drawing on the right appear in realtime in the browsers of other participantsBen and I are both PhD students in science subjects and have experienced phases when our supervisors have been traveling for a while. However, when skyping with them it is often difficult to convey mathematical ideas, as most chat are not able to properly typeset equations or able to easily share sketches.It's basically a chat room with extra support for latex and a whiteboard. The idea is that you're skyping with your supervisor, open the chat room on your laptop and tablet and use the laptop to write equations and the tablet to draw sketches. Everything appears in realtime at the other end.We use node.js with express.js and socket.io for the backend, the front end is written in angular2 with typescript.A few... not really knowing angular or node at all was the main one.Doing our first hackathon and actually submitting something!Never mess with angular routers....Better layout on small phone screens, export to latex\/pdf documents.OxfordHackI worked equally with Florian on all parts of the app. First hackathon, first socket.io app, first all-nighter coding ;-). Great experience.Florian Wechsung\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:23 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"collaboard","project_tags":["node.js","socket.io","express.js","azure","typescript"],"project_url":"https:\/\/devpost.com\/software\/collaboard","keywords":"chat,angular,able,js,node,equations,end,room,latex,sketches,skyping,laptop,use,tablet,built,export,knowing,accomplishments,io,inspiration"},{"level_0":484,"hack_vector":[[0.1468453556,-0.0977537036,-0.0365637913,0.0143375304,-0.0115044406,0.1179563031,0.2079392076,-0.0117722442,-0.0186497569,0.0050182203,0.002975866,-0.095693782,0.1278371364,-0.0565875657,0.0897075012,0.002462571,0.1911734939,0.0017967616,0.0326639749,0.1327748746,-0.2486939728,0.0435396619,-0.0426651575,-0.0205416549,0.0900570229,-0.0189479664,-0.0248288456,-0.1743145883,-0.025609944,-0.0984567478,0.069824487,-0.1325236857,0.0181333423,-0.1072150767,-0.0159407761,-0.0308764037,0.0980461761,-0.1534812301,-0.0762635022,-0.0264768507,0.0298311953,-0.1399329454,-0.1310242712,-0.0411771238,0.0880077109,-0.0544442758,0.0081964163,-0.0906305239,-0.0291385055,-0.2001854777,-0.161138162,0.0078232279,-0.1087358147,0.0086856373,-0.1905634701,0.1650892645,-0.1150690168,-0.0343651734,0.0434071459,-0.12102516,-0.082598798,0.0194657743,0.0779097304,0.0497173853,0.0940367803,0.0211407263,-0.0971713737,-0.1106888726,0.0382053927,0.0232757609,0.0761844888,-0.0565452985,0.0267689191,-0.1160569787,0.0416711159,-0.1506966352,0.158478111,0.0089084888,-0.0003830058,-0.1257809997,0.1242053732,0.1518428922,0.0772684738,0.1552775502,0.0940591991,0.2005434483,-0.077181235,-0.0457059257,-0.0063235536,-0.0657374933,-0.1466896385,0.0432790443,0.1130900756,-0.0580776297,-0.0187368561,0.0275684167,-0.1684425175,0.2280957848,-0.0216533896,-0.0769632831]],"hackathon_name":"OxfordHack","index":484,"project_description":"Automatically generating instrumental music for given lyricsLots of people are creative enough to write awesome lyrics, but they lack the musical knowledge to create songs with them. What if we had a program to generate a good song depending on the text input?\nThat's exactly what AutoDJ does.Using Microsoft's Text Analysis API from Cognitive Services, we analyse the key-phrases of the input text given by the user. We also look if it is happy \/ sad, using the sentiment analysis feature of the API. \nWe compare the resulted features against a large collection of song lyrics, using the cosine similarity measure. The first few best matches are then fed into a Restricted Boltzmann Machine algorithm that generates a new song from them.First we downloaded a large number of popular songs from YouTube (the instrumentals only) and their lyrics separately from different websites. \nThen we have a script that calls Microsoft's Text Analysis API and gets the key phrases for the user input, and compares it using the cosine similarity measure with the key phrases from all the lyrics downloaded.\nWe take the instrumental songs of the best matches (encoded as .mid) and feed them into the neural network that generates a new .mid with similar sounding.It's very hard to generate new music, as this is a cutting-edge current research topic.\nIt is also very hard (and thus unreliable) to convert mp3s into midis. We had some troubles doing that, and even now it's not too accurate.\nOf course we also had the usual issues with permissions, dependencies, etc., but who doesn't have those ?Actually managing to complete a pipeline user -> algorithm -> result -> user.Quite a lot. Mostly about neural networks and language processing.Some extra features could be implemented such as improving the accuracy of similarity, by taking more details into account. Also we could have more than just happy\/sad sentiments, and maybe even analyse the main topic of the text.OxfordHackAlex Radu\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:01 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AutoDJ","project_tags":["python","midi.js","nltk","machine-learning","requests","beautiful-soup","php","css3"],"project_url":"https:\/\/devpost.com\/software\/autodj-i87zrp","keywords":null},{"level_0":485,"hack_vector":[[0.1444113404,-0.097645402,-0.0317421257,0.0310075488,-0.0110722249,0.1301573366,0.2001763284,-0.0284937639,-0.0239139665,-0.0183018763,0.0067172595,-0.0891488418,0.1359177977,-0.0656084642,0.0672021136,0.0019111595,0.2035289854,-0.0060503324,0.0377657153,0.1355957836,-0.2421643734,0.040555533,-0.0404899307,-0.0123796994,0.1004873365,-0.0207666121,-0.0233363137,-0.1733617932,-0.0432503559,-0.1013280153,0.0698833019,-0.1264976859,0.0342523642,-0.0890661329,-0.0160036664,-0.0375962965,0.1143169105,-0.1475429237,-0.0654313713,-0.0216265358,0.0485744402,-0.1294575483,-0.1406529546,-0.0365347266,0.0786064342,-0.058455158,0.0109714661,-0.0827529207,-0.0348371565,-0.2158905566,-0.1504798084,0.011362168,-0.0997031555,0.0078634266,-0.1982512176,0.1581356227,-0.1258829981,-0.0388845317,0.0360586829,-0.1156023145,-0.075929299,0.0148507291,0.0761699006,0.0285733901,0.0995199382,0.021964794,-0.0991580263,-0.1178465933,0.0322161876,0.0349132121,0.0706603378,-0.0550137684,0.0196581148,-0.1194489747,0.0321926437,-0.1257910579,0.1674438566,0.0034785459,0.0030887655,-0.1287754923,0.1159507111,0.1528320909,0.0640718937,0.1657722741,0.0963459313,0.1955422163,-0.0869849175,-0.0478351451,-0.0217600595,-0.0737238824,-0.1460759491,0.052376993,0.1021838933,-0.0519093052,-0.0257047769,0.016576333,-0.1630916446,0.2379320413,0.001692598,-0.0756181329]],"hackathon_name":"OxfordHack","index":485,"project_description":"Rubber-band gun that shoots you if you look too happyTry not to laugh when faced with this!We're a team formed of CS students, a mathematician and an engineer. We have some very mixed skill sets, and so wanted to do something which everybody could work on. We had the idea of making some kind of catapult controlled by an Arduino, and that evolved into this.Players sit around the gun in a semi-circle. A camera moves back and forth taking photos of the players. If it detects that a player is laughing or looking too happy, the gun points towards them and shoots them!Works best when paired with a funny video playing in the centre of the players (thus the name \"Don't Laugh\").We have a Python script running which sends serial signals to an Arduino. The Arduino then moves the servos on which the camera and gun are mounted, as well as the servo used to pull the trigger. It uses OpenCV to take photos from a webcam mounted on a servo and the Microsoft Cognitive Services emotion API.When a photo is taken from the webcam, it's passed to the emotion API which returns a value for how happy the players are. If a particular player is looking too happy, the Python script tells the Arduino to move the gun and then shoot them!OpenCV is hard, especially with Python 3. It was also difficult to mount the servos on an assembly of some kind. We ended up using a beer bottle!It works! And the accuracy is actually pretty good. If there's one person in the group that's laughing, the gun will aim at that person and shoot.The gun also makes fake movements, just to freak the players out - you really don't know if it's going to hit you or not!All of us learned something different. Some learned Python, others OpenCV, and other Arduino programming.We're planning to develop more mini games and add more modes to the game.OxfordHackI worked on developing the idea, and the Python code to interface with the Arduino via serial.I worked with the hardware, making the gun, fitting the servos and programming the Arduino.I wrote the high-level logic and fit everyone else's pieces together.I wrote the interface to the Microsoft Cognitive Services API.Scott Street\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:28 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Don't Laugh","project_tags":["python","opencv","arduino","microsoft-project-oxford"],"project_url":"https:\/\/devpost.com\/software\/don-t-laugh","keywords":null},{"level_0":486,"hack_vector":[[0.1299781948,-0.1150126159,-0.0191680398,0.0413651019,-0.0302542448,0.1503633708,0.1964039207,-0.0318680033,-0.0136540979,-0.0303414296,0.010498153,-0.0435040332,0.1214775145,-0.0581087917,0.0453727059,0.0359481871,0.2610945106,0.0221238174,0.0318383463,0.1312425137,-0.2441515028,0.0319974348,-0.0314475112,-0.0272977054,0.1222563609,-0.0181742739,-0.0378913097,-0.1898063868,-0.0161598045,-0.1049265414,0.0647378191,-0.1282030344,0.0373990759,-0.0754168704,-0.0081690913,-0.0354009271,0.1147237271,-0.1308001131,-0.035470888,-0.0000250666,0.0307388548,-0.156019479,-0.1603978425,-0.0672032684,0.0419875048,-0.06522654,0.0060874536,-0.0302500892,-0.0314102247,-0.2083962113,-0.0915878862,0.008962458,-0.0915308073,-0.0332688428,-0.1862154752,0.159079656,-0.1335946172,-0.0104081519,0.034421999,-0.0700441971,-0.0602051392,0.0192927215,0.0664841831,0.0371725038,0.0998938307,0.0148329549,-0.110959284,-0.156722188,0.0537249073,0.0340284146,0.0733715966,-0.0545902438,0.0387574583,-0.1165945679,-0.0124586178,-0.1329911649,0.1521684527,0.0027349815,0.0484450981,-0.1315312833,0.1096261814,0.1651730537,0.0343766175,0.1928835809,0.1155046746,0.1843998581,-0.1354672313,-0.0226630904,-0.0356406309,-0.0846711695,-0.1280061901,0.076354064,0.0733996406,-0.041610457,0.0040763654,0.0035821756,-0.1360012591,0.2118428648,0.0326605812,-0.0786603317]],"hackathon_name":"OxfordHack","index":486,"project_description":"Cast spells to defeat the other houses in this challenging geo-based magical experiencePlay LumosCast SpellsMap player selectHouse pointsThe magical world of Harry PotterEnter the digital world of Play Lumos on your mobile (webbrowser). You add your name and then you will be randomly assigned to a house. You enter the map of the location and select a opponent. After confirming by the opponent the magic begins, you need to cast spells to each other. When you win a duel, your house get points.Wizard powersImplementing the map... many more...Creating a wizardry playful game for mobile in the web browser that let's people play with there friends.Java-script, using Esri APIMastering the dark arts of programming further to make the app more ready for releasing it to muggles.playlumos.com (still pending...)OxfordHackSaskia Freeke\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:21 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Play Lumos","project_tags":["javascript","jquery","php","esri","sql"],"project_url":"https:\/\/devpost.com\/software\/play-lumon","keywords":"play,world,map,mobile,opponent,house,enter,begins,browser,lumon,location,add,let,api,learned,java,inspiration,implementing,app,arts"},{"level_0":487,"hack_vector":[[0.1477148533,-0.0808298513,-0.0364039987,0.0362088233,-0.0094018932,0.1339504719,0.1862617433,-0.0295869261,-0.0210667476,-0.0072463737,0.0140279746,-0.09091077,0.1399488598,-0.0709739178,0.0652112365,-0.0013540527,0.1906399578,-0.0113236923,0.0480784178,0.1243644506,-0.23638165,0.0305072572,-0.0488732457,-0.0012900283,0.1127243787,-0.0296634492,-0.0275701378,-0.1756850034,-0.0436029248,-0.0853104442,0.0706201047,-0.1190113053,0.0357732736,-0.0860102698,-0.0177404378,-0.0071008066,0.1122978479,-0.1375244856,-0.0564600565,-0.0085314466,0.051670216,-0.1291623265,-0.1623146236,-0.0240017083,0.0651682392,-0.05734355,0.0118865361,-0.0905651376,-0.023513522,-0.2229334414,-0.1619889289,0.0215467196,-0.1061634719,0.0176345576,-0.2170265764,0.1592359096,-0.1350883245,-0.026009107,0.0337171443,-0.1086649522,-0.0735925809,0.0181792416,0.0717951804,0.040028207,0.11325562,0.0218429733,-0.0907392427,-0.1205179095,0.0280938819,0.0167497341,0.0751924068,-0.0503545515,0.0100287646,-0.1133652553,0.0540466122,-0.1041009575,0.1818428189,0.0013015979,0.0024541561,-0.1333268881,0.1110536531,0.1536130905,0.0677318722,0.1586861461,0.0935544893,0.2076988369,-0.0787132159,-0.0498004034,-0.0087949773,-0.0671243593,-0.1398583949,0.0499942303,0.0983315334,-0.0473065823,-0.0229008999,0.0111856097,-0.1610903144,0.2413353324,0.003631297,-0.0817539915]],"hackathon_name":"OxfordHack","index":487,"project_description":"Adventure just got easier.Meeting each other and making friends lead to the discussion of something almost every university student has on their bucket lists: backpacking. Wandering off on your own without any plan seems like fun, but we realised that as adventurous as we may be, some things such as finding cheap places to stay at along the route are quite necessary. Alas, Bag'Packers was born.This web app takes in the details of your trip, and proposes a route you could take during your journey. It also proposes an itinerary for you, taking into account how much hiking you would have done in a day, and shows you various options for cheap hostels and places to stay at where you'd be stopping your day's hike.Using sky scanner and google's API. Written in Python and integrated in Django.\n HTML, CSS and JavasScript for front end.Every one coded in python for the first time and it was also our first time using an API. The Skyscanner API was particularly difficult, especially for the hotel search.We were able to complete a working prototype despite our lack of experience, and managing to actually use the Skyscanner API.python, api , teamwork, how to stay up all night to finish the work.to keep improving on what we have built to make it better and simpler with more features. Also create a mobile app.OxfordHackI worked on the backend, with the Skyscanner API. It was my first time coding in Python (and at all), so it was daunting at first but I had loads of fun.I worked on the front-end by developing the landing page and Google Map integration. And also in the backend by creating the project with Django framework, and merging the other contributions.I worked on the Google Maps API integration. This let the website get the route from origin to destination. It then split the route into parts defined by the user, so that we could search for hotels around each part.This is the first time that I have used an API with Python and it was a challenge to work out how to get the right data from the Google API.The information from Google was in a JSON format, which was completely unfamiliar to me, so I also had to learn how to parse and unparse JSON files in Python.Overall, I really enjoyed working in the team, and I am proud of how much progress we have made.This was a magical first hackathon!Suyash Kabra\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:17 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"BagPackers","project_tags":["django","python","javascript","skyscanner"],"project_url":"https:\/\/devpost.com\/software\/bagpackers","keywords":"api,python,also,stay,first,app,places,day,route,every,cheap,skyscanner,built,proposes,time,using,google,hostels,inspiration,django"},{"level_0":488,"hack_vector":[[0.1245466173,-0.1053719446,-0.0205390081,0.0182285961,-0.0202799179,0.1186957732,0.2126443684,-0.0181482695,-0.0227815714,-0.0078120762,0.0237768572,-0.0566893853,0.1314398199,-0.0690560341,0.0639808401,0.0467778035,0.2336179614,-0.0031941601,0.0319500901,0.1303058416,-0.2436401397,0.0326283164,-0.0482439511,-0.0329085067,0.0940659121,-0.0350962728,-0.0352193676,-0.1823398024,-0.0019457478,-0.0959363431,0.0647317693,-0.1086762697,0.0298503675,-0.0862907097,-0.0123844845,-0.0119091757,0.1089659035,-0.1374796182,-0.0380386338,-0.011023256,0.0207691882,-0.1472387314,-0.1599003971,-0.0447542779,0.0730070546,-0.0565305911,0.0195065141,-0.067254439,-0.0108486116,-0.2069537193,-0.1217747182,0.0069854623,-0.1092383862,-0.0138437012,-0.1979575902,0.1548884213,-0.1362339258,-0.0189535525,0.0479173847,-0.0992776379,-0.0653018951,0.0308620222,0.0863354355,0.061712604,0.1050036475,0.0031596052,-0.0936308801,-0.1401887387,0.0529378206,0.0120937508,0.0641406402,-0.0531407781,0.0211176407,-0.1100630835,0.0041079917,-0.1541683376,0.1582502574,-0.0022122103,0.0292516816,-0.1343041062,0.1259131581,0.1660345048,0.0483521223,0.1798264384,0.106894508,0.202025339,-0.1113668829,-0.0238199346,-0.0297011714,-0.0895804241,-0.1520692259,0.0633112714,0.0898618326,-0.0399678163,-0.0080016777,0.013321748,-0.1580357701,0.1980675906,0.0222083908,-0.0731074437]],"hackathon_name":"OxfordHack","index":488,"project_description":"Allowing users to find a safe space online.UI: Options page for the Trigger ReplacerPage with no changes madeInstances of \"Murder\" replaced with \"Harass\"Another example where \"Fuck\" is replaced with \"Oops\"Online harassment has many forms, and one of them is the possibility of the malicious triggering of vulnerable individuals. Trigger warning are becoming more and more mainstream and we wanted a safe space to be available online for such vulnerable users. #HackHarassmentTrigger Replacer allows the user to type up a list of words that trigger them, and the words they would like them to be replaced with. The user can remove and reset the list of words as they wish, and Chrome will save them for future reference without the user having to input them each time.We used a Chrome extension and their APIs to create a JavaScript code with jQuery elements which is injected on all tabs. An HTML file was made to create the options page of the extension for the user to edit their trigger words.OxfordHackAkash Trivedi\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:29 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Trigger Replacer","project_tags":["javascript","json","html","jquery"],"project_url":"https:\/\/devpost.com\/software\/trigger-replacer","keywords":"words,user,trigger,extension,chrome,create,html,one,page,edit,elements,space,code,click,replacer,replaced,online,time,wish,works"},{"level_0":489,"hack_vector":[[0.1506955773,-0.1303392053,-0.0342259146,0.0426876433,-0.0220710821,0.1250059605,0.1753663421,-0.0259259231,-0.0053283726,-0.0328955017,0.0105087422,-0.0650147349,0.1522409767,-0.0586247407,0.0615405962,0.0046615237,0.1910748482,-0.0125041185,0.0431326106,0.1331360638,-0.2516784966,0.0229571909,-0.0257055741,-0.0120563731,0.1114025787,-0.0369284041,-0.0187357422,-0.162368238,-0.0336224996,-0.1028731614,0.066685155,-0.1085537821,0.0311753657,-0.0677293614,-0.0142738717,-0.03803657,0.1090086475,-0.1553536505,-0.0658647716,-0.0093998844,0.0562495552,-0.1190156788,-0.138574183,-0.0406892113,0.0614182465,-0.0627678186,0.0134721752,-0.0748215094,-0.0290026478,-0.2168984264,-0.1698540598,0.0153691908,-0.1080853418,-0.0082570128,-0.219950363,0.164827615,-0.1166305542,-0.0468117408,0.0420018919,-0.101494357,-0.0830519944,0.0166046266,0.0570747964,0.0374432802,0.1014341637,0.0324795283,-0.096379891,-0.1185539439,0.0135130668,0.0231780186,0.0669693574,-0.0561525412,0.013306818,-0.1128033251,0.0169459898,-0.1039493978,0.1786282808,-0.0032265915,-0.0128716584,-0.1404150426,0.1021256223,0.1615509689,0.0239786711,0.171743229,0.0983887166,0.2113744318,-0.0881227255,-0.0377242863,-0.0284111761,-0.0669344738,-0.1354209185,0.0694912523,0.0894304737,-0.0388972312,-0.0215234514,-0.0006109115,-0.1625603437,0.2490473837,0.0075483886,-0.0729339495]],"hackathon_name":"OxfordHack","index":489,"project_description":"Personal view on the loneliness of the moonsnapshotsnapshotsnapshotsnapshotsnapshotsnapshotThe moon has always been inspirational to people at all ages, but is always too far away and too distant. It's magnificent, but looking at it, I felt kind of sad, and in between this sadness and admiration I started planing this experience.By reading the thoughts of the moon and the stars around, we will be able to see how lonely the moon feels, and how at the end is revealed that our perception is a key factor, and that we should need to learn to view things differently to understand better, and realize that we can be so hard on ourself and so wrong without reason.With this experience, maybe with an improved version will be better, I also expect people to understand other persons feelings, fomenting the empathy by understanding the moon, which is a character that everyone know and no one have bad feelings against, and with this experience open minds to what other people can feel, and trying to drive to a place where expressing this feelings or emotions is more normal and accepted than as in the current world we live nowadays.I coded it all in C++ from scratch. Used the SFML libraries to help on thinks like the audio, or the window management, but mostly coded all the game by myself from scratch.I arrived at the hackathon late after taking a taxi, bus, flight, another bus (for 4 hours), and some good walking, and started coding right away. It's been exhausting and haven't had time to iterate and improve the game.Having it finished. With less history and features than I would have liked to add, but finished.LAST MINUTE UPDATE, BUILDS FOR ANDROID VERSION ARE WORKING!!!That I love making games, and that may help delivering stories.It will disappear on the horizon, and came again every night, alone, but finally knowing that all the little dots in the sky love, appreciate and need her. \nOn my side I would like to deliver the original complete history that I intended to deliver adding more content to this experience and making it grow bigger.OxfordHackGen\u00eds Bayona\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 03:01 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Moon","project_tags":["c++","gimp"],"project_url":"https:\/\/devpost.com\/software\/moon","keywords":null},{"level_0":490,"hack_vector":[[0.1410447508,-0.0760001093,-0.0392370485,0.0304869618,-0.0079293568,0.1384937316,0.2084487677,-0.0348311141,-0.0327933393,0.013077857,0.0099962857,-0.1003969461,0.1371086538,-0.076147005,0.0800153613,-0.0051197507,0.2017453164,-0.0026175533,0.0367558151,0.1112512797,-0.226935342,0.0533285774,-0.0547688343,-0.0113912746,0.1072580889,-0.0149157736,-0.0285496265,-0.1869363636,-0.0401946567,-0.0742140785,0.0824918672,-0.1442625523,0.0349959992,-0.1038857251,-0.0396763347,-0.0075332569,0.1158938855,-0.1317492276,-0.058451388,-0.0161224548,0.0349221081,-0.1440788507,-0.1561257541,-0.0155098513,0.0780601129,-0.0443221591,0.0058926521,-0.0861553177,-0.0293629207,-0.2069679648,-0.1482725292,0.0109309228,-0.0967540368,0.0296610426,-0.1843883097,0.1523251683,-0.1377035975,-0.0167470723,0.0181138832,-0.1106340662,-0.0756431371,0.0216291305,0.0913694277,0.0466575883,0.109162882,0.0036845182,-0.0875514597,-0.113124311,0.0436209589,0.0285871327,0.0716915205,-0.0519059561,0.0281842556,-0.1166873872,0.0467599817,-0.1249566525,0.1769662797,0.0091716098,0.0130005786,-0.1252569258,0.1394807845,0.1478209794,0.098165594,0.1563571095,0.0890633911,0.1927058101,-0.0813577697,-0.0500031337,0.0075213588,-0.077331394,-0.1511937827,0.0371105857,0.106171526,-0.0507239327,-0.0064776163,0.0195266753,-0.1517845541,0.2292031944,-0.0002657747,-0.0852262005]],"hackathon_name":"OxfordHack","index":490,"project_description":"How happy are you at events?Event data analysis with Microsoft Cognitive Services Emotions API and outputting it in a geolocation aware format using Esri maps API.Takes a simple two-field input: a link to a Facebook album with photos from an event and a location. Analyses photos in the album and evaluates emotions of people present on the photos. Plots a point on a 2D map and displays information about the event gathered from the Emotions API.A broad overview of our application is basically getting all the photos from Facebook and then passing the links on to the backend for further processing. The backend calls the Microsoft Cognitive API's for every image and does some minor data processing on the returned values and gives it back to the user. But it was even harder to implement this simple workflow. We started with just calling the cognitive api's through JavaScript but it took a lot of time to send all the images and do required calculations. So we thought of sending a message to an AWS SQS queue and wrote a Go server, which is attached to the queue and when it receives new messages, it calls the API for all the images concurrently thus bringing our execution time from about 10secs to 1-2secs. Apart from that we run node.js server on an EC2 instance and the frontend is written in Angular.js, HTML5 and CSS.The major challenges were basically related to concurrency in Go, eliminating data races, avoiding null pointers and reduce the number of goroutines. Also understanding the AWS SDK for Go lang was a big challenge and setting up the Simple Queue Service wasn't easy as well.Efficient use of multiple APIs and actually harnessing the power of Go and Amazon AWS.User registration, added functionality to save your map even when the session has expired.OxfordHackI worked on the frontend using Angular.js, HTML and CSS. I used the Facebook Graph API and the ArcGIS API.Abhinav Mishra\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 05:25 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hackathon Happiness","project_tags":["html5","amazon-web-services","go","node.js","angular.js","behavioral-media-networks-cognitive-insights","facebook-graph","express.js","esri","javascript","npm"],"project_url":"https:\/\/devpost.com\/software\/hackathon-happiness","keywords":"api,photos,go,emotions,data,simple,event,queue,cognitive,aws,microsoft,server,basically,secs,calls,facebook,challenges,processing,even,map"},{"level_0":491,"hack_vector":[[0.1533129811,-0.1096790209,-0.0225086752,0.0529711992,-0.0224969778,0.137242943,0.2000298053,-0.0156991296,-0.0301310569,0.0059759598,0.0107802385,-0.0616269447,0.1485116333,-0.0841964036,0.0665023029,0.0160327125,0.2237782031,0.0049933395,0.0498988628,0.1104467884,-0.2376945764,0.0333854221,-0.0503789149,-0.028072115,0.1372139603,-0.0264435392,-0.0437557139,-0.1943395734,-0.0040140087,-0.0803940818,0.0529278703,-0.1251046807,0.0465099588,-0.0962901115,-0.0319278613,-0.0049904352,0.1194711253,-0.142958656,-0.058194682,0.0077068172,0.0302046053,-0.1424066722,-0.159504205,-0.0170223229,0.0417751633,-0.0473857112,0.0170481354,-0.0716590658,-0.0043338528,-0.1984581649,-0.1258438826,0.0124311149,-0.1133063287,-0.0028540087,-0.1667431593,0.1624730378,-0.1360607892,0.0069050454,0.0267703291,-0.0748379678,-0.0604217574,0.0334573463,0.0807538405,0.0706628636,0.1141897291,-0.0015024393,-0.1050870344,-0.1388560385,0.0261547342,0.0119630927,0.0815980136,-0.0468684323,0.0129761659,-0.1326560378,0.0195633508,-0.1277322769,0.189758569,0.0062191822,0.0390434563,-0.131975159,0.1367013305,0.1538754106,0.0728676692,0.1496619135,0.1151683107,0.1867335141,-0.1021757796,-0.011404681,-0.0037712259,-0.0892446786,-0.132577613,0.0589597635,0.087522544,-0.033164829,0.0348915234,-0.0167496279,-0.1403043419,0.209656179,0.0396551117,-0.0814801008]],"hackathon_name":"OxfordHack","index":491,"project_description":"#facebook#posts#machinelearning#choose#best#photo#to#postFeatures:the reactions of Facebooktells which photo will gain the most attentionused machine learning to analyze Facebook photos and learned which tags make the most successful photos; the website outputs the best photo from a given setran out of memory, not enough time to debug the model, Django usagethe website gives some good predictionsteam members should stay together and collaboratedeveloping more sensitive featuresOxfordHackNeural networkI created the django website (although only small parts of the layout are mine), database, data model, machine learning model, API integration for Microsoft Visual Analysis and Facebook Graph (good docs, happy to learn those), feature extractionAna Gabriela Pandrea\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:34 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Fameboost","project_tags":["facebook","python","css","django","github","numpy","scikit-learn"],"project_url":"https:\/\/devpost.com\/software\/fameboost-jbp1qf","keywords":"website,ran,photo,photos,features,facebook,learned,collaborate,inspiration,good,gives,given,gain,analyze,attention,challenges,fameboost,built,learning,enough"},{"level_0":492,"hack_vector":[[0.1435276717,-0.0985240042,-0.0359288827,0.0218938682,-0.0162016898,0.1188599318,0.2086613476,-0.0186048523,-0.0153001286,-0.0059610456,0.0227588899,-0.0761063322,0.1289669126,-0.0625330582,0.0829483196,0.0041627507,0.1944460124,-0.0050585028,0.0322237052,0.1418376416,-0.2475970238,0.0277955588,-0.045652248,-0.0187288336,0.0990324095,-0.0158965681,-0.0201530121,-0.1794686615,-0.0218887608,-0.0904275551,0.0615096726,-0.1236592829,0.0132061504,-0.0997409001,-0.0080829449,-0.0197816268,0.0908975527,-0.1546806246,-0.0830264986,-0.0238695331,0.0196089167,-0.1312308908,-0.1311891675,-0.0379413664,0.0754952431,-0.066253759,0.0025902542,-0.084676072,-0.0283697881,-0.2077435404,-0.1562066227,0.0065955608,-0.1072786003,-0.0019475491,-0.1904102862,0.1785795987,-0.1145325825,-0.0289406925,0.0316989087,-0.1263923198,-0.0754069239,0.0266595948,0.0777170062,0.0679586753,0.0998929664,0.0273988768,-0.111048542,-0.1121138185,0.0345743038,0.0149547607,0.0638964102,-0.0485627763,0.0362363271,-0.1155412197,0.0397778079,-0.1331935972,0.1619544923,-0.0138553623,0.0007525057,-0.1347763389,0.1240418851,0.1557390541,0.076466307,0.1539093852,0.0783091336,0.2057605982,-0.0854194239,-0.0596244968,-0.0213266686,-0.0561679825,-0.1519792974,0.0474376753,0.1090481505,-0.0565962531,-0.0164914038,0.0260154083,-0.1684546173,0.2273425609,-0.0144903967,-0.0779425427]],"hackathon_name":"OxfordHack","index":492,"project_description":"Google Analytics for the real world! Get demographics and sentiment of people in front of your ads at public places.crowd reactions dashboardage distributionsentiment over timegender distributionsentiment over time with frames and extracted facesWe are bringing the capabilities of services like Google Analytics into the real world!\nAllowing businesses to explore how people interact with billboards, posters and ads has tremendous value. \nAnd with our application, we can give the insights that people need to better target their audience in the physical world.We are using the Microsoft Cognitive Services to analyze video footages of people around things like billboards, posters or other kinds of advertisements. \nUsing this footages, we can analyze facial features and determine how people react to whatever they are looking at. \nSo we also can determine demographics such as age, gender and other characteristics to give insights into how the target audience looks like.Video footages are processed with the Microsoft Cognitive Services APIs.First, we process the video file to find the different faces through the video.\nThen we generate frames for every point in the video where faces are recognized.These images are then slightly enhanced and go through further processing by the Faces API and Emotion API. \nThis data is then aggregated using react.js and highchart to provide clear characteristics about the audience reactions and demographics. We could even tell you how many people wear glasses.Since we currently don't have a system with cameras attached to advertisements in places such as the London Underground, we don't have these footages to analyze. Therefore, we used timelaps videos of public places as a replacement. The charts shown in the images are based on this footage: https:\/\/www.youtube.com\/watch?v=ZpHRp-WgQ0w.Even though we did not have much experience in the area of video processing, we accomplished fairly good results and were able to work with video footage without further problems.The tool-chain that we built to generate the final data has grown very quickly and has several intermediate steps. With this established tool-chain, it is easy to process further videos.We learned how to process video footage with the Microsoft Cognitive Services and how to use external libraries to generate images for specific frames in a video. We were astonished how fast we could achieve good results using the Microsoft Cognitive Services without training a dedicated model for this task.Currently we can track faces in the video of people in front of ads, but we can't say whether they look on their phone, at the ad or somewhere else. As a next step we want to build a custom face recognition model that also computes for each face the probability that this person ist actually looking at the ad. Furthermore, our current platform can process complete video files. This can be extended with an endpoint, which consumes video streams in real time.OxfordHackNico Ring\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:29 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"crowd-reactions","project_tags":["javascript","python","react","redux","flask"],"project_url":"https:\/\/devpost.com\/software\/crowd-reactions","keywords":"video,people,services,process,footages,cognitive,using,microsoft,faces,footage,analyze,generate,like,audience,images,reactions,learned,characteristics,real,even"},{"level_0":493,"hack_vector":[[0.1491627991,-0.118546553,-0.0451919772,0.0400026329,-0.0262787901,0.1097938046,0.1893919855,-0.0171094034,-0.0276126731,-0.0103986319,0.0232919529,-0.0623841919,0.1486364156,-0.0725702867,0.0909268633,-0.0052500837,0.1958331466,-0.0228373948,0.041128166,0.1214960814,-0.2432559729,0.020833943,-0.0442858376,-0.0129044764,0.1088097468,-0.0326868594,-0.0183080696,-0.1687255949,-0.0154212853,-0.0790004656,0.0526012927,-0.1180315837,0.0243939962,-0.0811717361,-0.0224811547,-0.0182450432,0.1056193784,-0.1488274932,-0.0777310729,-0.00679392,0.0364752188,-0.112570025,-0.1447372288,-0.013445707,0.0588676408,-0.0580239706,0.0273437332,-0.0866116509,-0.0100741684,-0.2053420544,-0.1515419036,-0.0121746296,-0.1131349355,0.0015009581,-0.1990436614,0.168466419,-0.1191093177,-0.0142709799,0.0322768837,-0.1036807448,-0.0721875653,0.0349831581,0.0804047808,0.0637938604,0.1072554514,0.0145481145,-0.1066786349,-0.1194799319,0.0170343593,0.0070914114,0.0696823895,-0.038797453,0.0193280503,-0.1233598143,0.0321796499,-0.1374120265,0.1900317371,-0.0049733724,0.0090834526,-0.1310335547,0.1324755996,0.167200014,0.0530272797,0.1687134057,0.1038918942,0.1897771955,-0.1006641835,-0.0301883128,-0.02161243,-0.0831789151,-0.1454613358,0.0628377497,0.1108669192,-0.0382803045,0.0193269607,-0.010895106,-0.1591748595,0.2359238118,0.0199406538,-0.0743952021]],"hackathon_name":"OxfordHack","index":493,"project_description":"A tool that clinicians can use to help interpret ECGs and differentiate between arrhythmias.Our team logo!Welcome to our site!It always challenging for medical students and new doctors to interpret electrocardiograms (ECGs) given how often they are used in clinical practice.HeartBeat helps them to interpret ECGs and differentiate between cardiac arrhythmias. It is a tool that they can use on top of their existing clinical knowledge in order to confirm the interpretation of the ECG.We used a cardiac arrhythmia dataset from UC Irvine and taught our classifier to differentiate between normal ECGs and ECGs showing cardiac arrhythmias (eg heart attacks, heart blocks, sinus tachycardia, etc.).It was challenging to figure out what to teach the classifier, how to input the data, and how to structure it neatly. Connecting everyone's work was challenging too (front-end, machine learning algorithm, and back-end).We're proud that we could work together to get our project done within 24 hours! Teaching a machine to distinguish between the presence and absence of cardiac arrhythmias and classifying it was technically challenging.We learnt a lot about Python, ECGs, scikit-learn, and machine learning!Instead of uploading csv files to input the data, it would be cool to just upload images so that pictures are just needed in order to interpret the ECGs.OxfordHackTzen Szen Toh\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 05:21 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HeartBeat","project_tags":["javascript","python","html","css","amazon-web-services","machine-learning","adobe-illustrator","scikit-learn"],"project_url":"https:\/\/devpost.com\/software\/heartbeat-fg29wr","keywords":"ecgs,challenging,cardiac,arrhythmias,interpret,machine,order,differentiate,data,proud,end,learning,clinical,heartbeat,work,input,used,heart,classifier,figure"},{"level_0":494,"hack_vector":[[0.1349301785,-0.0888681412,-0.01898841,0.0525129065,-0.0087774983,0.1359191537,0.2022331059,-0.0225408096,-0.0494403392,-0.0159580205,0.0101695182,-0.0765073672,0.1412757486,-0.0699044317,0.0467292741,0.0054420303,0.2139167339,-0.0144099891,0.0477915742,0.1362307966,-0.2340400219,0.0532325543,-0.0337334238,-0.0024635752,0.1247692108,-0.027017504,-0.0466892421,-0.1778111905,-0.0340249203,-0.0907314345,0.076339893,-0.119801417,0.0353904404,-0.070665814,-0.0145846214,-0.0217855517,0.1308383644,-0.1294501126,-0.0416763201,-0.0056609856,0.0634673387,-0.1525360197,-0.1551015228,-0.0407622047,0.0680165887,-0.0385603048,0.0062932726,-0.0792610869,-0.0163767375,-0.2105695456,-0.1194249466,0.0257953964,-0.1014270559,0.0339036435,-0.2142677903,0.1528184265,-0.1481293142,-0.0263126809,0.0377972126,-0.1120547131,-0.0710496679,0.0183436107,0.077500321,0.0326654986,0.1183558255,0.0217197873,-0.0912890136,-0.133787185,0.0368742459,0.0324348025,0.0694307238,-0.050667271,0.0220275428,-0.1093543172,0.0294054337,-0.1219832525,0.1583655328,-0.0073813256,0.0191546883,-0.1256890148,0.1114169136,0.1491938829,0.0554998107,0.1650755554,0.1089450866,0.1913715601,-0.1068933383,-0.0554892197,-0.0240817312,-0.0889395401,-0.1509453803,0.0562234931,0.0861457288,-0.0435636751,-0.0158865154,0.0193343405,-0.1613669991,0.2245500833,0.0214451272,-0.0568863787]],"hackathon_name":"OxfordHack","index":494,"project_description":"A fun iPhone game based on the tilt of the phoneWe were inspired by a meme we saw during chemistry class that depicted a squirrel with its arms in the air captioned, \"Interpretive Dance\".The application is an IOS app, that uses the core motion framework to allow for a ball on the screen to be rolled around by tilting the phone. The goal of the game is to make the ball follow a highlighted path.Using the phone's accelerometer, we determined the components of gravity acting on the phone, and extended that to the motion of the ball.Our initial idea was to create an app that tracks the iPhone using the accelerometer and gyroscope. This app would guide the user to move in such a way as to simulate dancing. It proved to be very difficult to track the location of the phone in 3D space, so we ended up using the accelerometer reading to make a ball roll on the screen. The idea of the ball following the a line on the screen remained, just without the simulation of dancing. Of course, nothing is preventing the user from dancing while playing the game...In working on this project we created a level interface that makes level selection very smooth and easy on both the front and back end. However, we were not able to fully utilize it, nor create all the levels we desired.We improved our skills in swift and learned a lot of Linear Algebra during our initial attempt to create a dancing game.We hope to work out the formulas that the dancing portion of the game requires.OxfordHackDesigner and ArtistDrew Neely\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 04:12 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Jitterbug","project_tags":["swift","xcode","uikit","ios"],"project_url":"https:\/\/devpost.com\/software\/jitterbug","keywords":"dancing,ball,game,phone,accelerometer,using,app,create,screen,learned,level,make,motion,idea,initial,user,back,air,follow,following"},{"level_0":495,"hack_vector":[[0.1392958909,-0.1464406699,-0.0129152481,0.0655990094,-0.05340188,0.1499974132,0.1825874746,-0.036837969,-0.0224823281,-0.0358496606,-0.0068200049,0.0099834893,0.1302377284,-0.0787287205,0.019407915,0.0925565064,0.2666429877,0.0362363122,0.0413203351,0.1090803519,-0.2161777914,-0.0005956487,-0.0389591828,-0.0713021159,0.1417993307,-0.0219320431,-0.0670661703,-0.1799215376,0.0232153349,-0.0946821049,0.0275064893,-0.0937113166,0.0656128749,-0.0515829735,-0.0226458088,-0.001232191,0.1311551183,-0.1187923625,-0.0038953093,0.0702533722,0.0510438718,-0.1479293853,-0.1903862208,-0.0383860096,-0.0149387699,-0.0607987754,0.0458700098,-0.0211015884,-0.0118458755,-0.205674395,-0.0528104044,0.0292819366,-0.0984772593,-0.0756388083,-0.133180961,0.1651031524,-0.1421100646,0.044876039,0.0090243984,0.0196601246,-0.0292589273,0.0422930233,0.0457107499,0.0689790398,0.1340111792,-0.0322841704,-0.126544103,-0.1763082147,0.0322346538,0.0023790083,0.0696142539,-0.0329678692,-0.0179337133,-0.1437784582,-0.0604257621,-0.079088971,0.1809002906,0.0177881401,0.0756000876,-0.1443677545,0.1133425385,0.1708914042,0.0147594614,0.1623012125,0.1455521286,0.1753294617,-0.1283030361,0.0587424487,-0.0005705215,-0.110681355,-0.0924436152,0.0996125787,0.0393157862,0.0046540014,0.052324485,-0.0639833659,-0.1041401327,0.1693597436,0.0843062848,-0.0622070208]],"hackathon_name":"OxfordHack","index":495,"project_description":"A little spell to fix people's problemsAssist people with dementia in their day-to-day lives.It learns from the person's actions and reminds the user whereOxfordHackNikita Voloboev\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:02 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Novis Obliviate","project_tags":["swift","ios","python","love","machine-learning"],"project_url":"https:\/\/devpost.com\/software\/novis-obliviate","keywords":"day,user,reminds,actions,assist,built,challenges,dementia,inspiration,learned,learns,lives,next,novis,obligate,people,person,proud,ran,accomplishments"},{"level_0":496,"hack_vector":[[0.1575190574,-0.1422422677,-0.0182727985,0.0776723325,-0.0408334844,0.1619114578,0.1881208569,-0.0417324118,-0.0210203882,-0.0223766044,0.0150599433,0.0062080706,0.1414337605,-0.0732829869,0.0314608887,0.0513846576,0.2615357637,0.0233156253,0.0404345058,0.1028797477,-0.2263084352,0.0054880059,-0.0458376706,-0.0474081784,0.1495401263,-0.0243884027,-0.0558139794,-0.1917513609,0.0192929599,-0.085229747,0.0479623601,-0.1060535312,0.0537453666,-0.0700898096,-0.0271545369,0.0048843073,0.1242524609,-0.126217559,-0.0294090044,0.0459564887,0.0406549647,-0.1346338093,-0.1688675135,-0.0257755928,-0.0008705976,-0.0476667173,0.0252896231,-0.0298482757,-0.0181300957,-0.2032543272,-0.0698753893,0.0183254033,-0.1037655175,-0.0598462485,-0.133401379,0.1557351351,-0.1287349463,0.0317969061,0.0147394007,-0.0058116778,-0.0347640961,0.0448453501,0.0701643452,0.0729584917,0.1311196387,-0.0247913729,-0.1337237209,-0.161654368,0.0236546472,0.006989514,0.0672487542,-0.0230380166,0.0140315108,-0.1430391967,-0.0549164712,-0.1047745869,0.2016975582,0.0070898347,0.0645230338,-0.1443510801,0.1275811195,0.1665059924,0.0173627064,0.162952885,0.128546074,0.1857049763,-0.1213131621,0.0327884927,-0.0189295411,-0.098509863,-0.1099408269,0.0970157832,0.0487570204,-0.0051899883,0.0623017177,-0.0472002625,-0.1015098691,0.191339165,0.0758364648,-0.0639024973]],"hackathon_name":"OxfordHack","index":496,"project_description":"A personal development network, connecting entrepreneurial students, graduates and life adventurersSolving EducationA social network where you can share specific content, setup meetings with people of interest, mentoring, advising, meeting in person.Trial and errorServer-client syncing, ui, cssWe learned stuffWe learned how to make instasearch!Further devOxfordHackNikolai Drouzine\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 07:53 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"fypster2","project_tags":["meteor.js","react","javascript"],"project_url":"https:\/\/devpost.com\/software\/fypster2-b8mav5","keywords":"learned,ui,education,interest,instasearch,inspiration,fypster,error,dev,meeting,css,content,client,challenges,built,advising,make,meetings,trial,setup"},{"level_0":497,"hack_vector":[[0.1770425141,-0.1235776097,-0.0233923197,0.0761557668,-0.0293247793,0.1640075892,0.2014776468,-0.0516882762,-0.0169779677,-0.0051899417,-0.0027071657,-0.0328501835,0.1499953121,-0.0800729543,0.0523695685,0.0092617627,0.2124203444,0.0140266651,0.0451472476,0.10351374,-0.2217873484,0.0314093232,-0.053737022,-0.0222844835,0.1562972516,-0.0295465514,-0.0416282378,-0.1791671962,-0.017096933,-0.068503961,0.0640680641,-0.1181907952,0.0581613667,-0.068993479,-0.0465177819,0.0046681771,0.1423641145,-0.1348816901,-0.0393217355,0.0310246069,0.0586867891,-0.1489047706,-0.1594488025,-0.0116254501,0.0226623546,-0.0341903344,0.0261741187,-0.0702478662,-0.0318235196,-0.2096052766,-0.1235431135,0.0264539383,-0.1194221675,0.0001039402,-0.1623430848,0.1496477723,-0.1464770883,0.0182553772,-0.0003013589,-0.0305746067,-0.0507934913,0.0236140229,0.0733376667,0.0405945741,0.1221508011,-0.017257968,-0.1075981557,-0.1276928931,0.0123696662,0.0208250023,0.0689288229,-0.039274022,0.0087924935,-0.1461072415,0.0011682342,-0.0893337354,0.2039535642,0.0140699297,0.0188150331,-0.1486222148,0.1294746101,0.159954235,0.0450805351,0.1575157642,0.1194776595,0.200554356,-0.1038940325,0.0091221752,0.0100945644,-0.0963713676,-0.1236842871,0.0782687515,0.0724318251,-0.0077968002,0.0401811562,-0.0390807018,-0.1070768237,0.2189150006,0.0467444025,-0.0585890003]],"hackathon_name":"OxfordHack","index":497,"project_description":"Project for OxfordHack 2016. Social network inside a building using its plans. Using ArcGIS API.Inspiration\nBeing able to find relevant people in hackathon venuesWhat it does\nLocallize and show people on a building planHow I built it\nWith my sweat and bloodChallenges I ran into\nDeploying Node.JS serverAccomplishments that I'm proud of\nSocket managing, server-client communicationWhat I learned\nSome JS, deploying is a bitchWhat's next for hackersmap\nA Database and more interactivityBuilt With\nJSOxfordHackIvaylo Hristov\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 07:37 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"hackersmap","project_tags":["javascript","css","html","angular.js","socket.io","esri","express.js"],"project_url":"https:\/\/devpost.com\/software\/hackersmap-jsktwr","keywords":"js,server,deploying,built,people,venues,client,find,database,communication,challenges,hackersmap,building,blood,bitch,accomplishments,hackathon,interactivity,inspiration,sweat"},{"level_0":498,"hack_vector":[[0.1259857416,-0.1137789115,-0.0269709453,0.036198467,-0.0148751941,0.132735014,0.1959549189,-0.0242681187,0.0015249231,-0.0272211079,0.0146233905,-0.0606543943,0.1361174434,-0.0755231604,0.0479529947,0.0145344967,0.2225220501,-0.0110338246,0.046334587,0.1254894435,-0.251436621,0.039682325,-0.0342490785,-0.0137422737,0.111608088,-0.0283223912,-0.0282251984,-0.1716309786,-0.0148817403,-0.1114794016,0.0542865023,-0.1294781119,0.0429886542,-0.0814978629,-0.0045597828,-0.0312122758,0.1163581833,-0.1552814394,-0.0533243679,-0.0170974601,0.0396272354,-0.1356221288,-0.1483635157,-0.0531843975,0.0666416362,-0.0531928837,0.0163267013,-0.0680170432,-0.0323680416,-0.2043884397,-0.1531071663,0.0211666767,-0.1092619449,-0.0147962375,-0.2116383314,0.1471297294,-0.1242207661,-0.0487686135,0.0520421341,-0.107323952,-0.0762475878,0.0196051951,0.0803564116,0.0394754261,0.0934821591,0.0290072542,-0.0929394364,-0.1294452846,0.036718905,0.035567686,0.0706368312,-0.0628554001,0.0340233743,-0.1153344959,0.024378635,-0.129231438,0.1607798785,0.0118304472,0.0058604628,-0.1417329311,0.1143043041,0.1679474115,0.0396084115,0.179188624,0.0980338827,0.1879846603,-0.0981892571,-0.0389847904,-0.0328760482,-0.0752342716,-0.1368581355,0.0599002391,0.0877136365,-0.0333111174,-0.0073882188,0.0059797708,-0.1623379141,0.2175116837,0.0165843032,-0.0723369345]],"hackathon_name":"OxfordHack","index":498,"project_description":"An app where you can anonymously vote to change a playlist or skip songs while at a group listening session or partyExample playlist (page scrolled down)Example playlist (top of page)The ability to have everyone engaged in a music based social experience by contributing together ideas and interests.\nListen to playlists that the majority will enjoy.\nAvoid upsetting someone by offending them if you don't like their taste in music (anonymous voting feature)Has built in library of music that can be found with search bar (type in artists, songs, genres etc...)\nIf a user does not like a certain playlist, artist, song etc they can vote to skip (anonymously) what is currently playing (MVP version), if the majority also vote to skip then this action takes place\nIf someone suggests a playlist, artist etc in the search bar, a popup appears which asks users if they agree - if the majority agree then the suggested request becomes the current music optionFirstly, developed\/mind mapped ideas fully using business model template\nBack end build by linking youtube feature\nLogo design by graphic designer after thorough consultation and discussion\nFront end developing following a mock up draft\nConnecting the back and front ends to finalise the MVPBuilding a front end with no experience was a challenge\nFirst time using YouTube related database\nSmall team, little time and multiple super interesting ideas (if there was more time a great website could be produced!)Finished the MVP of the app, it looks really cool and works for the time we had been givenIntegrating YouTube with back end\nFront end developing skills\nDedication!If this could be developed with a bigger team, this would be an excellent project, which could potentially change the \"social gathering\" scene - such as a chilled Friday in the office, going out clubbing, or just hanging out at home with friends - as they say, \"music is a piece of art, that goes in the ears and straight to the heart\"OxfordHackAhmed Deyab\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:03 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"choice","project_tags":["node.js","html","css","javascript","youtube","bootstrap","adobe-illustrator","websockets","jquery"],"project_url":"https:\/\/devpost.com\/software\/choice","keywords":"end,music,front,time,mvp,majority,etc,back,ideas,youtube,could,playlist,developed,search,built,skip,agree,social,someone,like"},{"level_0":499,"hack_vector":[[0.1409665942,-0.1063722149,-0.0356465802,0.0495897532,-0.0296298023,0.1429319084,0.2027751356,-0.0318171903,-0.0179738794,-0.0186098423,0.0133172059,-0.0425491966,0.1350750327,-0.065378435,0.0565876774,0.0186992027,0.2371419072,0.0076185539,0.0357578285,0.1242103279,-0.2360860109,0.026385583,-0.0458510593,-0.0249665938,0.1177134737,-0.0183273703,-0.0387572385,-0.1838238388,-0.0174830426,-0.0857720375,0.0576638505,-0.1303979605,0.036130812,-0.0787845179,-0.0212118328,-0.0131187346,0.1151041612,-0.130996123,-0.0552753769,0.0170893334,0.0396357477,-0.1403506994,-0.155836001,-0.0335207693,0.0464271754,-0.0604337379,0.0153095322,-0.056445349,-0.0375119336,-0.2050930709,-0.1170079038,-0.0026657584,-0.0976253226,-0.0167353451,-0.1713865101,0.1561273932,-0.1286008954,-0.0039769607,0.0222295485,-0.0732581019,-0.0635440573,0.0283490084,0.0757498294,0.0481097475,0.1140735969,0.0006120048,-0.1161552593,-0.142403692,0.0398402996,0.0227043685,0.0643772706,-0.0478974245,0.0240623113,-0.1313755959,-0.0046444279,-0.1301463246,0.1895436049,0.0072892839,0.0335443579,-0.1357154846,0.1317776889,0.1670559347,0.0500656329,0.1702933162,0.113555029,0.1938415021,-0.1185514331,-0.0148607465,-0.0121701891,-0.0944806784,-0.1455707252,0.0715949312,0.0893226713,-0.028415205,0.02241759,-0.0150908558,-0.1374716163,0.2283997387,0.034106236,-0.0716920048]],"hackathon_name":"OxfordHack","index":499,"project_description":"A way of reading your favorite headlines in the format of the Star Wars intro scroller... Lets make news great again.After recently incredibly depressing news, I wanted a way of reading headlines without making you not want to get out of bed.It shows you the daily headlines, currently from bbc news (in future imported from your feedly) and displays them in a star wars intro scroller.Currently in Processing, porting to p5.js and creating a web interfaceXML parsing can be a problem.\nFonts not working in Processing.\n when starting to port to javascript had some probelms with objects and parseing.Rotating text in the X axis.Port to p5.js make nice web interface where you can use feedly to import news.\nput on www.maythenewsbewithyou.comOxfordHackBevis Halsey-Perry\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:29 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"May The News Be With You","project_tags":["processing","javascript","css3"],"project_url":"https:\/\/devpost.com\/software\/may-the-news-be-with-you","keywords":"news,headlines,feedly,processing,currently,interface,port,js,web,intro,javascript,inspiration,incredibly,learned,make,imported,import,future,get,may"},{"level_0":500,"hack_vector":[[0.1424633861,-0.134462297,-0.0140899261,0.0589280613,-0.0298538171,0.1453396529,0.2084335536,-0.0348087177,-0.0444124639,0.0023564289,-0.00195758,-0.0190093666,0.1340876818,-0.0760485232,0.0389411598,0.0516813584,0.2555514276,0.0282306895,0.0423333049,0.1057727337,-0.2197280377,0.0301960912,-0.0583286062,-0.0442780256,0.1587404609,-0.0064962474,-0.0673635453,-0.1937857121,0.0144046163,-0.0913762227,0.0583039038,-0.1437947899,0.0589508452,-0.0747210458,-0.0307482425,0.0049671233,0.1282119751,-0.1168103814,-0.0171147753,0.0470491014,0.039518632,-0.1750322729,-0.1807574481,-0.039439898,-0.0048135305,-0.0623749755,0.023823956,-0.0370580964,-0.0264356509,-0.188739419,-0.0653349832,0.0196383279,-0.1007105112,-0.0289399251,-0.1336054057,0.1584948599,-0.169724524,0.0387671441,-0.0037226309,-0.0197869428,-0.0398230925,0.0567681491,0.0557513051,0.0793775171,0.1245487109,-0.0295211487,-0.1287839711,-0.1591668576,0.0300298221,0.0101750763,0.0747668594,-0.0456107929,0.0166448541,-0.1309999675,-0.0231396277,-0.0982861072,0.1854809374,0.020324083,0.0860016868,-0.1347619742,0.1306841224,0.1519116908,0.062655583,0.1417252719,0.1362485737,0.1719709188,-0.1401244551,0.0269799139,0.0061556087,-0.1039908156,-0.0988374874,0.0798816681,0.0585948639,-0.0073840027,0.06054781,-0.0414067917,-0.1106013656,0.1695731878,0.0654406622,-0.0619050562]],"hackathon_name":"OxfordHack","index":500,"project_description":"Reconstruct 3D models of objects from any videoIt reconstructs a 3D point cloud from a given video sequence containing a certain object.We extracted the frames from the video and used VisualSFm library to reconstruct the point cloud from them.OxfordHackCornelia Secelean\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:19 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Semantic SFM","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/semantic-sfm","keywords":"cloud,point,video,visualsfm,learned,built,certain,challenges,containing,extracted,frames,given,inspiration,next,library,object,proud,ran,reconstruct,reconstructs"},{"level_0":501,"hack_vector":[[0.1260794103,-0.0907159224,-0.0303825792,0.0385352522,-0.0181411579,0.1179487407,0.2043116391,-0.0153892785,-0.0144810146,-0.0110363448,0.0309927464,-0.0640289187,0.14189291,-0.0659118071,0.0867654681,-0.0154239414,0.1900481582,-0.0103531564,0.0450467318,0.1295932084,-0.242306307,0.035085585,-0.0417312756,-0.0183384363,0.0889094919,-0.0240293723,-0.0180417318,-0.1807965189,-0.0215651542,-0.0869539604,0.063965328,-0.1127176434,0.0214548558,-0.0925846398,-0.0088979546,-0.0157954041,0.1026644632,-0.1448570937,-0.0817464516,-0.0150130996,0.0320750214,-0.1348693371,-0.1308760792,-0.0344255865,0.074546814,-0.0497150198,0.0112891644,-0.0904226303,-0.0273762736,-0.2096367478,-0.164008528,0.0077528409,-0.1108343676,0.0048349295,-0.2014945894,0.1608359367,-0.1168620139,-0.032106597,0.0485230424,-0.1267688572,-0.0806555748,0.0262398366,0.0841125175,0.0538676344,0.1018057391,0.0263786819,-0.0931739584,-0.1130578145,0.0345978327,0.0117186913,0.0505845435,-0.0516623557,0.0296986103,-0.116415374,0.0356035158,-0.1394636929,0.1731587499,-0.0057228468,0.0002878745,-0.1424457878,0.1268831044,0.1575351208,0.0710124969,0.1592119187,0.0915295109,0.2098661512,-0.0786734745,-0.0505286865,-0.0209202375,-0.0679352656,-0.1640674174,0.0505779274,0.1078660339,-0.0515383482,-0.0090603298,0.016918825,-0.1732953787,0.2285140902,-0.0086358292,-0.0729287937]],"hackathon_name":"OxfordHack","index":501,"project_description":"An app for vulnerable mental health patients: allows monitoring of emotional states and offer individualised adviceOur whiteboard planWe are studying medicine, biomedical sciences, economics and computer science. As a multidisciplinary team, we wanted to incorporate all 4 areas to create an app which helps mental health patients. Depression and anxiety disorder cost $1 trillion per year (WHO), so this app could have medical and financial implications.Our research indicated that mood diary apps currently on the market require individuals to input their own emotional state. Research has shown that patients with mental health difficulties may not perceive their own emotional state accurately. As a result, we wanted to use software to analyse this instead.The app is a mood diary to monitor emotional states, allowing people to record their daily feelings and difficulties. This  feeds into Microsoft API to analyse text to check whether the sentiment was negative or positive, and offers advice for specific treatment goals. For example, it will direct patients displaying suicidal tendencies to the Samaritans hotline, provide patients with panic attacks management advice.If patients have 7 negatives in a row, they are prompted to call their psychiatrist or a close family member\/friend via the Dialler. If patients input positive entries, only these will be listed on the front page.We planned on a white board for 2 hours to determine our main goals: a simple and accessible app. We built an Android app using Android Studio, and used Material Design combined with many libraries. This allowed us to use web Microsoft API (Text Analysis) for cognitive services.Using retrofit (a library for android development), we were able to send requests to the API, which gave us a sentiment score. This enabled us to know how positive\/negative the user is feeling, as well as keywords to determine possible reasons for these extreme emotions. This prompted users with tailored advice.We used this to display all positive stories on the front page, whilst hiding negative messages from sight. However, if the user entered a large number of negative messages over a long period of time, this could indicate deteriorating mental health. The Dialler would then be launched to contact a friend\/doctor.We used support libraries to make our application backward compatible, whilst still giving the material design to older phones. Libraries called RXJava and RXAndroid gave us cleaner code when developing.We used Adobe Illustrator to design a Material Design inspired app icon, and generated multiple different pixel densities. This allows for the icon to be viewed on a greater number of devies.Timing was very difficult, as we had created an ambitious project with many goals. Furthermore, some of us had never coded before. We intended to use Muse, but we could not access the technology for the 24 hours. The Pebble watches did not have pulse detection so we could not incorporate this.We tried to augment the new Microsoft API with IBM Watson Tone Analyser API, to give us a larger variety of emotions to select from. Potentially, this would have allowed us to assign percentages to measure the weighting of specific emotional states. However, due to the 24 hours time constraints, IBM were unable to accept our request for the beta trial in time.Three of us learnt how to code for the first time in only 24 hours at our very first hackathon. Our computer scientist learnt how to use the Microsoft API having never used it before. Also, he had never coded on Ubuntu Linux before during a hackathon.Those who had never coded before learnt basic programming skills, and our computer scientist learnt aspects of medicine and psychiatry.Incorporate Muse technology to analyse strong emotions via brain activity, or measuring pulse via a smartwatch. These would prompt patients to open their diary and log a new entry via a notification.Furthermore, we would have liked to incorporate location features with SkyScanner API to allow individuals to recommend hotels, restaurants, doctors etc. for people with similar mental health conditions. Also, location features with Esri could allow individuals to form local support groups, which has been shown to be beneficial.We would have liked to incorporate the Microsoft API more closely to pick up specific keywords, and offer even more specific tips to patients. This could be further improved with IBM Watson's API.A final touch would be to add a customisable personalised motivational wall on the front page. Patients could submit their own images, including motivational quotes and their favourite photos. This would aim to improve mental wellbeing over the long term.OxfordHackNot associated with this failure.Kushal Mansatta\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:29 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Museful","project_tags":["android","microsoft-project-oxford"],"project_url":"https:\/\/devpost.com\/software\/museful-rxao8z","keywords":"api,patients,us,could,would,app,incorporate,used,mental,microsoft,time,specific,positive,use,emotional,design,negative,via,learnt,health"},{"level_0":502,"hack_vector":[[0.1456458569,-0.0899410173,-0.0335087217,0.0190313645,-0.0156188151,0.1231234968,0.2093447745,-0.0278307069,-0.0175423007,0.0023131662,0.0101605058,-0.0822848454,0.1324625313,-0.0737735629,0.0741312951,-0.0018647737,0.1973751932,-0.0090326061,0.0375331044,0.125467509,-0.2423245609,0.039573241,-0.0392930582,-0.0199998021,0.1002445668,-0.0158047341,-0.0187765975,-0.1720642895,-0.0158526767,-0.090395987,0.0587495491,-0.1306003183,0.0304518305,-0.1014192626,-0.0210759621,-0.0281556156,0.1089253575,-0.1512732804,-0.0755754486,-0.0182890948,0.036082875,-0.1369871348,-0.137415722,-0.0367970541,0.078927137,-0.0502951406,0.006492971,-0.0890660509,-0.024008207,-0.1966413707,-0.167737022,0.0151557364,-0.1121019796,0.0111558214,-0.1952667981,0.1675047427,-0.1238850057,-0.0311622508,0.0300819334,-0.1145289466,-0.0708220601,0.0139479563,0.0904621184,0.0507294796,0.1060646996,0.0143089229,-0.0969604701,-0.1075747386,0.0374993421,0.0336384103,0.0712480694,-0.0526733026,0.019161813,-0.120035477,0.0461282209,-0.1425392777,0.1644031405,0.0103369402,-0.0078479759,-0.1295043677,0.132697165,0.1548177451,0.0765209571,0.1632712483,0.0916753337,0.1999889463,-0.0811602175,-0.0444936194,-0.0042608962,-0.0637039021,-0.1465123296,0.0408760272,0.114164032,-0.0429885387,-0.0090061259,0.0165533107,-0.1667421013,0.2269120216,-0.0092890561,-0.0771830603]],"hackathon_name":"OxfordHack","index":502,"project_description":"Search for local events quickly and intuitively using voice recognition.Our team was inspired by the fact that there are so many social websites that provide services like dating, chatting, finding jobs, connecting with friends, listening to music etc and for each of those there is one particular service that is exceptionally popular. However, there is no one service when it comes to events. There are several sites that offer a range of event suggestions but hosts either have to pay, be popular enough or sell tickets to them. The only platform that hosts events for free without any specific conditions is facebook. However, there is no functions to recommend events in your area. If you are looking for something specific, facebook is convenient, but not if you need inspiration on a friday night!Our app takes voice input from the user, like \u201cshow me events in london\u201d and suggests events nearby sorted by categories like \u201cconcerts\u201d, \u201cfood markets\u201d, \u201cseasonal\u201d, along with time etc.With the aim of using voice recognition to find local events for users\nThe build consisted of a two-prong approach, involving an Android front-end and a Java based backend.\nThe Android front end component involved multiple API's, including Google's Speech Recognition, Facebook's Graph API for JSON retrieval of event data, as well as MonkeyLearn API for natural language processing elements.\nThe backend is written in Java using the Spring Boot framework for accessible REST calls. It is calling the Facebook Graph Event API to pull a list of events in the area, which is then filtering using calls to a trained NLP model on MonkeyLearn. The Endpoint is then exposed using ngrok.-Multiple rewrites and builds were executed due to numerous compatibility issues, but all were analyzd and resolved\n-- Natural Language Processing: it is very hard to categorise the event names and descriptions for some events on facebook and put them into appropriate categories. Hard coding words is not an efficient approach therefore we used machine learning that uses a bag of words method. This method, however, is still not error-prone and relies on labelled data.-Excellent work distribution involving everyone's own strengths, with particular focus on redundancies incase an approach failed.\n-- We are very proud of the team spirit, we quickly found each other, decided on the topic and divided the tasks. There were no major conflict of opinions and everybody contributed significant knowledge and expertise to this project and everything went smoothly until the end.OxfordHackAndroid front endYijie Xu\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:51 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Event5","project_tags":["android-studio","facebook-graph","java","json"],"project_url":"https:\/\/devpost.com\/software\/event5-m8n9p1","keywords":"events,facebook,event,api,using,like,involving,end,approach,however,processing,natural,method,specific,monkeylearn,multiple,service,everyone,data,recognition"},{"level_0":503,"hack_vector":[[0.1425216496,-0.1048568338,-0.03293138,0.0318943746,-0.0227125194,0.1278081834,0.1913179904,-0.0227639731,-0.0018972895,-0.0411742888,0.0072809099,-0.0599808246,0.1339234412,-0.0564942472,0.0483016595,0.004869502,0.2063713372,-0.0107632009,0.0404033661,0.1389306933,-0.2514950335,0.0066528786,-0.0330293924,-0.004849554,0.1113454252,-0.0334132873,-0.0244952124,-0.1526922435,-0.0234208014,-0.1221056059,0.0483129323,-0.1073040292,0.0259241071,-0.0617724173,0.0006545792,-0.0317160971,0.1130118519,-0.1548740864,-0.0615237914,-0.0042567858,0.0560301021,-0.1144055277,-0.1278486997,-0.0430579819,0.0715055168,-0.077370666,0.0162940938,-0.074586764,-0.0297643375,-0.2163753808,-0.1532977074,0.0172659662,-0.1030260772,-0.0081206542,-0.2182130218,0.1646806449,-0.1195505783,-0.0547752865,0.0461909771,-0.1120380461,-0.0820888206,0.0121194879,0.0620138422,0.0267670136,0.107935369,0.0357627347,-0.1056608856,-0.1309331656,0.0251058005,0.0330584235,0.0650651678,-0.0555138662,0.0139166554,-0.1161998883,0.0251646806,-0.116576001,0.1688759476,0.0032824578,-0.0038788042,-0.1356824934,0.0976637304,0.1576712281,0.0267024245,0.1673591137,0.1028609425,0.2052806318,-0.0998202488,-0.0418704376,-0.0472067483,-0.0658377931,-0.141390115,0.0681241602,0.0892982334,-0.0383350179,-0.0342469104,0.0166780259,-0.1691109687,0.2517815232,0.0065544322,-0.066433005]],"hackathon_name":"OxfordHack","index":503,"project_description":"A super multiplayer about the four houses on Hogwarts, competing to see which one is the bestPlaying all togetherChoose your houseInitial screenPlaying with the mobile phoneDying as the time goes byWe wanted to do a big multiplayer game, where everyone could participate, and as this hackathon was inspired in the Harry Potter world, we finally did a competitive multiplayer where the public can support their favourite team too helping them winning (or making the others to lose!)You just need to register for a team and play with three more people of other houses. If you are the last alive, you will win your round and you will bring glory to your house. \nThe game will have as well a final round where only the best player of each house will be able to demonstrate their abilities in a last, amazing combat, that will be the last to decide which is the best house among the others. Will it be Gryffindor? Hufflepuff? Ravenclaw? or Slytherin?We built it with JS (nodeJS, phaserJS, ...) in order to be able to play it online on canvas, with our mobile phones. The phones will be our gamepads and the server will have the only screen where all the action will take place.We did not decide how to finally do this game until we had few hours left, so we actually had not a lot of time to build everything. Our project was really ambicious, and even if we did not succeed in finish everything, we are happy with the final result (it's really funny!)We did a lot of team work, we did not sleep a lot and we had fun designing, programming and playing the game. It was totally worth it!We learned more about JS and multiplayer online.We want to finish adding all our ideas and after it, we will see :)OxfordHackAlice Nara\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:24 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"PotterSmash","project_tags":["phaser.js","javascript","node.js"],"project_url":"https:\/\/devpost.com\/software\/pottersmash","keywords":null},{"level_0":504,"hack_vector":[[0.164301917,-0.1149260923,-0.0287085623,0.0352083407,-0.007347702,0.1343758404,0.2076746821,-0.0340341553,-0.0167547073,-0.0059025469,0.0083799539,-0.0744796842,0.1352764517,-0.06710352,0.0723519996,-0.0013835676,0.201766029,-0.0121998293,0.0486641414,0.1230360344,-0.2531329989,0.0409340598,-0.0433062948,-0.0156231951,0.1053372398,-0.035201136,-0.0244337395,-0.1787131727,-0.0302565414,-0.0953446254,0.0730535761,-0.1240951493,0.0352509171,-0.0940003917,-0.0290011279,-0.0259070937,0.1042556092,-0.1479399949,-0.0659891218,-0.0190259889,0.0432935581,-0.1339048147,-0.136314407,-0.033979632,0.0699572563,-0.0509289913,0.0097718397,-0.0896994248,-0.0277530104,-0.2078055739,-0.1503908783,0.0176093895,-0.1129066944,0.0117377639,-0.1923312545,0.1529233605,-0.1319349855,-0.0346467197,0.031055795,-0.0982432067,-0.0780385733,0.0231390484,0.0810377672,0.0376259945,0.0986250788,0.0119867884,-0.1091805398,-0.1137231812,0.0239103287,0.0330129303,0.0710043982,-0.0520358123,0.0250025839,-0.1261995286,0.0293798484,-0.1294046044,0.175731048,0.0063697849,0.0064517809,-0.1352770627,0.123967126,0.1501240432,0.0540490896,0.162171796,0.0977329463,0.205422461,-0.0789773166,-0.0322329886,-0.0119555639,-0.0726667419,-0.136956811,0.0564960055,0.093984507,-0.0430101193,-0.0152043607,0.0117990617,-0.1565757543,0.2210615873,0.0037463508,-0.0759648457]],"hackathon_name":"OxfordHack","index":504,"project_description":"Computer VisionThis is a Computer Vision project aimed at understanding the contents of images. This has numerous applications, such as in robotics, driverless cars, medical diagnosis and image editing. In all this cases, machines need to perceive and understand their environment in a manner similar to humans.There are now cloud services, such as the Microsoft Cognitive Services API. However, these do not offer a detailed, per-pixel understanding of images, which is what my system does.The algorithm identifies the object class of every single pixel in the image. For example, it labels certain pixels as \"person\", and others as \"car\" and so on. Furthermore, it identifies unique instances of objects as well: So if there are multiple people, then it should identify each person separately.The core of the system is implemented using deep neural networks, and described in my research papers (I am a PhD student). I had already trained a model to perform Semantic and Instance Segmentation as part of my research and conference paper submission.In the hackathon, I built a web interface to it, so that a user could upload images, or specify links to images on the internet, and see their result on unconstrained images.This runs on the cloud, on a Titan X GPU using Cuda.I don't really know much about building websites.It seems to work! The algorithm had previously only been evaluated on academic datasets. Now it is being tested on random images from the internet.I learnt a bit about Flask and building websites in Python.There will be some improvements to the core recognition algorithm. Also, the \"Instance Segmentation\" part needs to deal better with occluding objects.OxfordHackbsanu753\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:29 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Semantic and Instance Segmentation","project_tags":["c++","python","flask"],"project_url":"https:\/\/devpost.com\/software\/semantic-and-instance-segmentation","keywords":"images,segmentation,algorithm,instance,services,research,cloud,core,semantic,person,identifies,image,built,system,building,part,understanding,using,internet,pixel"},{"level_0":505,"hack_vector":[[0.1395799667,-0.0944165736,-0.03311795,0.0327386074,-0.0122672403,0.1389890611,0.203822419,-0.03182083,-0.0346147642,0.0084994547,0.0132554164,-0.0834549963,0.1354445368,-0.0640313327,0.0606004708,0.0025934775,0.2123261541,-0.0020601407,0.0357238874,0.1184146106,-0.236138463,0.0380873457,-0.0474408306,0.0035898155,0.130167231,-0.0181067623,-0.0332945548,-0.1870328784,-0.0332733989,-0.088816829,0.0875970274,-0.1382232308,0.028387541,-0.0874906927,-0.0169517677,-0.0191498641,0.1025873199,-0.1334695518,-0.0443664864,-0.0160482507,0.0430868305,-0.1512497962,-0.1610370427,-0.0350893177,0.0633923933,-0.0500292368,0.0003793586,-0.0705188662,-0.0287355538,-0.2078480572,-0.128838703,0.0064391647,-0.0955348536,0.0197127946,-0.2108628899,0.1615365446,-0.1475640386,-0.0192471407,0.023959877,-0.1062823534,-0.0687312931,0.0203980207,0.0747668743,0.0381952487,0.1047235131,0.0219495818,-0.0988842994,-0.126412943,0.0437167697,0.0238913912,0.0722588152,-0.0505116507,0.0333918668,-0.1068926975,0.0348302685,-0.1268137097,0.166571185,0.0006299871,0.0281055998,-0.1223595887,0.121342577,0.1515411437,0.0737776011,0.1714187115,0.1019037962,0.202049017,-0.1024858281,-0.0440643877,-0.0138236955,-0.0750413612,-0.1279283613,0.0539524704,0.0964439809,-0.0473895594,-0.0143444901,0.0160063766,-0.1577974558,0.2216145694,0.0083807046,-0.0754759088]],"hackathon_name":"OxfordHack","index":505,"project_description":"A game where the aim is to travel as far as much as possible by plane using the skyscanner api for flight pricesOur inspiration was our love for travel and simple addictive games.Combining a simple plane game with real flights data with real data from the skyscanner api, skybreak lets you accomplish your dreams by flying all across the globe. Starting from London, you can pick your flight. The price of the flight you take is taken away from your wallet and the distance covered by your flight is added to your score. A flight corresponds to a game and the longer you remain on flight without hitting a cloud or falling off screen, the more money you gain.\nThis game is a combination  of strategy in terms of picking the best flights and gaming skills in terms of making a flight last as long as possible.We built it using node.js to get the flights data from the skyscanner api and C# with unity to create the front-end of the game.Getting the distance between two airports required getting a database of airports with their locations and using the latitude and longitude took us some time. We also had to learn C# and unity during the project and set up a webserver for highscores.Combining real world data with a simple game to make it fun and challenging.I learned C# and also how to use unity.Take off in one hour!OxfordHackI built the front-end of the game in C# and the user interface using unity.I worked on the backed storing highscore and using the Skyscanner API for flights.I worked on the high scoring system, specifically focused on converting the JSON format of storing data into usable data for Unity.Sixte de Maupeou d'Ableiges\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 04:38 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Skybreak","project_tags":["c#","unity","node.js"],"project_url":"https:\/\/devpost.com\/software\/skybreak","keywords":"flight,game,data,flights,real,unity,simple,take,distance,combining,skybreak,skyscanner,built,inspiration,getting,learned,api,also,using,airports"},{"level_0":506,"hack_vector":[[0.1438910365,-0.0952050164,-0.0307054818,0.0393198878,-0.0265047345,0.1267692,0.2034772336,-0.0216997303,-0.0173404943,-0.0110725071,0.0233288836,-0.0680419579,0.1417719722,-0.0663824454,0.0834462568,-0.0069787609,0.194920525,-0.0079547856,0.041686032,0.1308993101,-0.2463318557,0.0242591146,-0.0424021147,-0.0187988095,0.0932973772,-0.0247657895,-0.019970309,-0.1739796102,-0.0184989646,-0.0938634872,0.0613887794,-0.1130293906,0.015621637,-0.0855592638,-0.0057318853,-0.0166823734,0.1109313518,-0.1498708874,-0.0779867545,-0.0140315024,0.043174196,-0.1262247264,-0.1320452541,-0.0237069447,0.0727448612,-0.0511572585,0.0142543009,-0.0871703848,-0.0222503431,-0.2125855535,-0.1564615518,0.0114492001,-0.1066689342,0.0040046824,-0.2070809007,0.161446169,-0.1166673824,-0.0277441498,0.0368698575,-0.1129837707,-0.0734536499,0.0214588344,0.0813423917,0.0511769503,0.1108210236,0.022220606,-0.0913265124,-0.1182349101,0.0270592235,0.0144558419,0.0582700819,-0.0443297736,0.0249217954,-0.1231486276,0.0319251381,-0.1326190084,0.1716060787,0.0020447557,-0.0088253664,-0.1361250579,0.1238336936,0.1598767936,0.0618305653,0.1623983681,0.097011134,0.2084170282,-0.0815070346,-0.0467129052,-0.023738144,-0.0672030449,-0.1536484957,0.0581073351,0.1060559005,-0.0458992831,-0.0123685692,0.0171002522,-0.1595269144,0.2418034375,-0.0070056599,-0.0695448816]],"hackathon_name":"OxfordHack","index":506,"project_description":"With Microsoft's emotion API, we can gauge emotional reactions to gifs and measure mood without explicit questionsThe customized messageThe gifsAs we become more attached to our machines, our ability to become isolated and depressed grows. When our team saw the power of Microsoft's emotion API, we saw an opportunity to fight that trend.Our app presents the user with several funny gifs. After a second or two of display, we take a picture of the user's face and send it to Microsoft's API to gauge their response. By gathering this data over time, we can alert users when they begin to react less and less to originally amusing things, which could indicate mild depression.The app is composed of an express server and a mongodb backend. The pictures are taken on any built-in webcam.Browsers understandably make it very hard for websites to access computer hardware. It took many iterations, but we eventually found an approach that works for all platforms we've tested.As a team of mostly newbies, we're extremely proud of how we pulled together and built something significant out of technologies we'd never worked with before.From Git to Express, our whole team worked with new and interesting technologies. We learned a lot about programming and collaborative coding.The gifs need to be classified and some universal metrics need to be calculated. Measuring an individual's response only against their own history is prone to random fluctuation in short term moods and the quality of the gifs. We would also like to implement a feature that presents easy access to mental health resources to all and a community component that allows friends to support each other.OxfordHackJames Tautges\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:26 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Facial Response Tracker","project_tags":["express.js","microsoft-project-oxford","mongodb"],"project_url":"https:\/\/devpost.com\/software\/facial-response-tracker","keywords":"team,response,gifs,built,become,proud,saw,need,microsoft,express,technologies,presents,less,worked,app,api,user,access,learned,funny"},{"level_0":507,"hack_vector":[[0.1360273957,-0.0905866697,-0.0243350007,0.0444214828,-0.0211383756,0.1368174106,0.2019740492,-0.025822375,-0.0245924219,-0.01061635,0.0171405412,-0.0677705705,0.145268783,-0.0664712042,0.0644427389,0.0007134957,0.205618307,-0.0087562175,0.0452930331,0.1311921626,-0.2455582321,0.0357142575,-0.0389604867,-0.0087683145,0.101892516,-0.0276299436,-0.0359239317,-0.1691537946,-0.0203260593,-0.0946609005,0.0674628988,-0.1123070568,0.0237123612,-0.0767565295,-0.014080978,-0.0250098743,0.121786736,-0.1425842643,-0.0593358502,-0.0116277076,0.0477049164,-0.1285709292,-0.1418596804,-0.0350913852,0.0724645182,-0.0497937314,0.0124861989,-0.0817807168,-0.0140934819,-0.2097279876,-0.1420058161,0.021688642,-0.1111463681,0.015349647,-0.214016363,0.1633155495,-0.1289944053,-0.0255514346,0.0451461673,-0.1100705564,-0.0738475546,0.0201431569,0.0809274465,0.0465287566,0.1080094576,0.0253013223,-0.0864453763,-0.1251487434,0.0301010627,0.0234279633,0.0639727414,-0.0391093008,0.0214387886,-0.1205983013,0.0262728892,-0.1279218942,0.1738566011,0.0010385235,0.0011189515,-0.1362124681,0.1143853068,0.1575064063,0.0520183295,0.1568837464,0.1152333021,0.2027426362,-0.0910113156,-0.0553478338,-0.0261081178,-0.0732313991,-0.1592744291,0.057080593,0.1019825041,-0.0439557582,-0.0097413529,0.0187356304,-0.160247758,0.2318877578,0.0115345949,-0.0661557242]],"hackathon_name":"OxfordHack","index":507,"project_description":"The Uber for HipstersGarrelt is an ambitious hitchhiker! \nWhen going from London to Oxford it costs him a lot of money!\nThat's why Garrelt hitchhikers!\nGarrelt misses security, comfort and fun when traveling to his admired destination.\nWe build Hitchhacking to make hitchhiking great again!Hitchhacking connects millions of drivers with matching Hitchhikers.\nWe match the direction of the drivers route, with the admired direction of the Hitchhiker.\nBy using advanced similiarity matching, we prioritze a matching of people, who share the same interests.\nSpeech messages with each request help to keep an authentic environment.We build the app as an Android App in Java. The Backend is running on an Apache maschine only throug php scripts. The communication is realized over json. The database is a mysql database.We had to advance the app's usability to make it comfortable for both participants use the app throughout a longer route. Additionally the driver shouldn't be distracted while driving. Keeping the app simple was a main aspect of the development. Moreover, the algorithm to find the correct direction of drivers without them having to type in a destination was a challenge and has still some room for improvement.We're proud of the simplicity of our API and the fact of using speech massages as a function to make both participant into contact.We learned a lot about the work with gps targeted development and the small challenges when working in Android Studio.We will need to advance our algorithm for finding people with matching directions, to make it more functional in urban areas.\nWe would like to implement speech recoginition for having less interaction with the app through the driver.\nOur matching algorithm for common interest has some more room for improvement and should be implemented as a self learning one.OxfordHackAndroid appalex979k\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:23 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hitchhacking","project_tags":["java","android-studio","php","mysql","json"],"project_url":"https:\/\/devpost.com\/software\/hitchhacking","keywords":"app,matching,make,direction,hitchhacking,algorithm,garrelt,speech,drivers,proud,people,destination,development,database,driver,route,lot,learned,hitchhiker,hitchhikers"},{"level_0":508,"hack_vector":[[0.1187604815,-0.090573974,-0.0337626077,0.0269236304,-0.0234599002,0.1073182449,0.190009132,-0.0041322242,-0.0182538759,-0.011059002,0.0164184645,-0.0808761716,0.1355021,-0.061148081,0.0763475075,0.0081505775,0.2092813104,0.0046010059,0.0342973806,0.1290172189,-0.2516349256,0.0283463579,-0.048880361,-0.0141146481,0.0809268951,-0.0217135083,-0.0325515606,-0.1755189747,-0.0228164252,-0.1051453054,0.0573810264,-0.1249333173,0.0128167933,-0.0890713409,-0.0002096826,-0.0202203467,0.0953366309,-0.1487655491,-0.0693966672,-0.017874049,0.0236474629,-0.1347965747,-0.1523712426,-0.0377032459,0.0690135285,-0.0777102038,0.01087246,-0.0841634274,-0.0229195785,-0.2016694993,-0.147469312,-0.0007072236,-0.0942014381,-0.0040045152,-0.2130653113,0.1700657606,-0.1230270267,-0.0350029171,0.0456762165,-0.1234724447,-0.0816033855,0.0303216521,0.0767875165,0.0565695055,0.0958939567,0.0313337594,-0.0902378261,-0.1238579452,0.0400653929,0.0142386332,0.0670244619,-0.0565004498,0.0272905417,-0.1027394608,0.0420661978,-0.1391100287,0.1633571535,0.0030866072,0.0115873106,-0.1312662065,0.1218308657,0.1634413153,0.0728166178,0.1600890458,0.0943775922,0.2053353935,-0.0954910815,-0.0541212857,-0.024378771,-0.0692644939,-0.1424407512,0.0497025847,0.1055089161,-0.0545480885,-0.021651879,0.0189701393,-0.180868566,0.2313502282,-0.004736566,-0.0855579674]],"hackathon_name":"OxfordHack","index":508,"project_description":"Work out the best place to live by choosing the method and length of your commutePeople don't always live where they work, but also don't want to spend too long on the train or in the car to get there. This is a problem we are now facing after graduation and finding jobs in new places. If you know two locations it is easy enough to query directly, but with hundreds of places within a reasonable distance, it is very difficult to work out the best options. Commute allows you to input your workplace, an amount of time you are willing to commute for and a method of transport.Given your work destination, choose how you would like to commute and the maximum amount of time you are willing to travel. Commute will show a map of potential places to live, with options to visualise layers of geographic data from ArcGIS OpenData in .geojson format.We aggregated data from a number of sources on UK locations in order to build a database of locations, names, population sizes and distances. This allowed us to filter the number of queries beign passed to the Google Maps Distance Matrix to improve loading times (and save requests to our API key!) After getting the travel time with Google, we then plotted the map on the front end with the Esri API and used their layers and OpenData to add contextual information.Finding reliable data on place names in usable formats was difficult. We used a .csv file from GeoNames and an excel spreadsheet from a Government FOI request. Parsing this data and storing it in the database in an efficient way was one of the biggest challenges.Producing a list of reasonable results in a reasonable time, for a genuine problem we have recently experienced. It was fun to see locations along the main train lines highlighted - also highlights the limitations of public transport in rural areas!Neither of us had much prior experience in javascript, so using the Esri API was a challenge but a rewarding one.We want to add a number of features - house price data particularly would make the tool much more useful to a wider audience. We would also like to find more data sources and allow the user to filter the results based on these. Finally, we'd like to add a second destination option, for couples who want to find somewhere central to live.OxfordHackRebecca Morgan\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 04:26 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Commute","project_tags":["python","html","css","javascript","esri","google-maps","django"],"project_url":"https:\/\/devpost.com\/software\/commute","keywords":"data,commute,locations,time,would,also,number,places,reasonable,like,api,live,work,add,want,used,difficult,results,map,finding"},{"level_0":509,"hack_vector":[[0.1306354105,-0.0889604315,-0.0296587367,0.0192420799,-0.0176107399,0.1189942434,0.1953009218,-0.0101854568,-0.031361606,0.0026356648,0.0213096105,-0.0943012834,0.1356390417,-0.0664075017,0.0790097639,0.018189095,0.2141567916,-0.0009377798,0.0342327133,0.131576553,-0.2440503538,0.0402537622,-0.0493529104,-0.0229424555,0.089760296,-0.0227442514,-0.0336973071,-0.1831111312,-0.0168376956,-0.1057143956,0.0685706213,-0.1225359216,0.0212712716,-0.0952284187,-0.0001812215,-0.0174048357,0.102987282,-0.1446543485,-0.057202436,-0.0230252016,0.0282319728,-0.1434607059,-0.1588018686,-0.0345496275,0.0744477212,-0.0553864799,0.0062227626,-0.0840869769,-0.016651772,-0.2064976394,-0.1459594518,0.0126136029,-0.0972380415,0.001262932,-0.2049772292,0.163941443,-0.1226387694,-0.0286825672,0.0462990329,-0.1214241907,-0.0684419945,0.0226663761,0.0804125518,0.0665202141,0.1007354259,0.0215021539,-0.0898507684,-0.1266681105,0.0399264917,0.0160542913,0.0777769759,-0.0539233796,0.0238453336,-0.1051575318,0.0406975597,-0.1468226165,0.1517551392,-0.0004162563,0.0129432632,-0.1223635674,0.1262822598,0.1572380662,0.0775676668,0.1649673879,0.0918611661,0.1960921735,-0.0962490514,-0.0586029589,-0.0233067665,-0.0723881051,-0.1399448216,0.0420890674,0.1000176966,-0.0592066385,-0.0176060926,0.0275222454,-0.1696308702,0.2196617424,-0.0106316721,-0.0854390711]],"hackathon_name":"OxfordHack","index":509,"project_description":"Plan and optimise your journey based on your hobbies and interestsSkyScanner API inspired us to do something useful with it. Although there exist projects that use SkyScanner API to optimize travel path by the price or the distance, we wanted to optimize it by another variable that might be more meaningful to a person. That's why we came up with interest-based traveling salesman problem enabling end-users to find their optimal journey based on their interests, for example, museums, pubs or theaters.The webpage takes the user's list of interest and their location as a starting destination, along the dates and the preferred radius of travel. The output is a journey planned on the map based on their interests at the same time minimizing the prize with the SkyScanner.The website takes the user interests as an input along with a current location as a starting point for TSP problem. It uses Google Maps API to find the closest major cities within the specified radius and computes interest-related best cities to visit based on the average rating of the places on Google Maps. The cities are then passed onto SkyScanner API to search for the cheapest flights and routes. All combinations of these routes are passed onto the Traveling Salesmen Problem which computes the best path. The path and coordinates are then passed back to Esri API and displayed as a route on the map.We had all the components working separately but with the limit of time we found it difficult to join them together smoothly. Because of this, a lot of details we wanted to include had to be omitted (for example displaying details of the route which is a very easy and logical next step), so that we could present the full product. Also, we used a lot of separate components, which was a challenge with respect to time.We all value the technologies that we learned, and above all the sense of achievement that came from fully working product that we achieved through teamworkthe use of various APIs, Django, how to interface between front-end and back-endWe want to include more information about the journeys and most of all, add more variables to optimize for example weather information.OxfordHackJola Mirecka\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:23 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HobbyHack","project_tags":["python","javascript","google-maps","esri","skyscanner","json","django","jquery"],"project_url":"https:\/\/devpost.com\/software\/hobbyhack-plan-your-journey-based-on-your-hobbies","keywords":"based,api,skyscanner,interests,optimize,cities,time,problem,end,example,path,interest,passed,journey,google,details,routes,route,location,radius"},{"level_0":510,"hack_vector":[[0.1450537443,-0.1095772684,-0.0235592891,0.0418625958,-0.0183732212,0.1386988759,0.1968254149,-0.0379112959,-0.0201588329,-0.0100116497,0.0252453648,-0.0615945086,0.1443320662,-0.0725465864,0.0627954602,0.0120485621,0.2129823565,-0.0085851615,0.0454760902,0.1259463429,-0.2395677418,0.0326110981,-0.0438533276,-0.0209903643,0.1106159985,-0.0337074101,-0.0330754705,-0.1840431541,-0.0219828747,-0.0954534486,0.0662439838,-0.1135812998,0.037517257,-0.0838573799,-0.0065522087,-0.0107413083,0.1130910516,-0.1435597837,-0.0490746275,-0.0032742901,0.0470773876,-0.1372696608,-0.159533903,-0.0264166631,0.0549414977,-0.0431960225,0.0208799504,-0.0765020624,-0.0295332354,-0.2158569992,-0.1455906928,0.0227930415,-0.1089793742,-0.0056426995,-0.2054959238,0.1551698297,-0.1249769703,-0.0190551411,0.039388977,-0.0945111811,-0.0648460537,0.0215550829,0.0749576166,0.0531897694,0.1103179678,0.0203266703,-0.097010985,-0.1253305972,0.0256536379,0.010856105,0.0686660111,-0.0473689809,0.0254790243,-0.1256910563,0.0277965143,-0.1210967004,0.1754755527,0.0014547205,0.0103803128,-0.1379248053,0.1257282048,0.1664675176,0.0534985624,0.1704051793,0.1004808322,0.2031116784,-0.0932713524,-0.0404768437,-0.019051427,-0.0776740462,-0.1411148161,0.060379751,0.0891985744,-0.0387690775,-0.0059667076,-0.0028771891,-0.154495582,0.2184510827,0.0092254309,-0.0714054555]],"hackathon_name":"OxfordHack","index":510,"project_description":"Onliine shopping made even easierHomePageBeing busy. And lazy.We used the Tesco API to search and suggest relevant items to people using sorting algorithms. This allows users to sort their items by price and nutritional content such as Calories, Protein, Fat or Sugar.Since we are dependent on Tesco's website, we faced problems when we realised we couldn't log into an account programmatically. We also encountered problems when trying to connect the front and back-ends.Our continued belief in the project even though everything was telling us to switch tactics.[Hichame] Using the networking feature of a browser to see the types of requests and content being sent.\n[Hichame] [Tolu ] Using the Tesco API.\n[All of us] Working on a tech project with complete strangers.\n[Chining] How to make a website from scratch\n[Eleni] My first hackathon was a great experience. My team help me to understand deeper the algorithmic thinking since I am beginner with programming. Also, I get familiar with languages that I have never worked with before.Tracking the user over period of time in order to predict their future shopping habits. (The initial plan was to) Automate grocery shopping by allowing the user to select their favourite\/common items (such as milk or chocolate). Create a spotify type page where users can just click a button and have recipe or mood based meals such such as \"Comfort Food\" or \"Mexican Night\".OxfordHackI focused on front-end development. I designed a website for our team, including  homepage, user's information page and teammate introduction page.Tolulope Ogunremi\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:22 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"LazyShopper","project_tags":["python","html","css","javascript"],"project_url":"https:\/\/devpost.com\/software\/lazyshopper-2i7quy","keywords":"using,items,tesco,also,hichame,shopping,content,api,since,project,problems,us,user,users,website,faced,familiar,working,experience,everything"},{"level_0":511,"hack_vector":[[0.1576984078,-0.1048084572,-0.031528566,0.0405613706,-0.0203720853,0.1155661494,0.1794090271,-0.0173157956,-0.0105046127,-0.0186505113,0.0136344917,-0.0704940483,0.1452453285,-0.0608476475,0.0754080266,-0.022548778,0.1703881323,-0.0123150731,0.0490404591,0.1397282481,-0.2521856129,0.0082032746,-0.039431937,0.0016605352,0.109486945,-0.0315146334,-0.0238451455,-0.1542028338,-0.0208898541,-0.1070717871,0.0480836257,-0.1127662212,0.0113748796,-0.0725893229,0.0024919496,-0.0289012026,0.103266947,-0.159834668,-0.0867458582,-0.0166455414,0.0583136752,-0.1089763641,-0.1199758276,-0.0235752426,0.0647539273,-0.0585051626,0.0149713363,-0.0948658884,-0.0242584925,-0.2035577446,-0.1755753905,0.0227381736,-0.1146366224,0.0150322393,-0.222340554,0.1748150885,-0.1052285656,-0.0372605547,0.0388664305,-0.1180217117,-0.0771105736,0.016656721,0.0622810088,0.0478526317,0.1070513427,0.0434500203,-0.0954494625,-0.1124690995,0.0030979107,0.0168748647,0.0697916821,-0.043960318,0.0187472627,-0.1189636961,0.0576088801,-0.110901922,0.1767293066,0.0007604356,-0.0276237186,-0.1341059059,0.1061056852,0.1555841863,0.0494415909,0.1468902379,0.1035139561,0.2186551839,-0.0747219026,-0.0597365387,-0.0284651835,-0.0463972837,-0.1397834271,0.0590289459,0.1164992005,-0.0432892591,-0.019453926,0.0095831258,-0.1716954708,0.2607295811,-0.0153761394,-0.0680885017]],"hackathon_name":"OxfordHack","index":511,"project_description":"Travel web app which lets the user choose his destination in novel ways (predefined, adding and computer vision).Find your way, everyday!I remember the first time Shu looked at me. He couldn t contain himself. 2 words popped out of his mouth. Those words will remain forever as our team name: Sparky Lashes. Jokes aside, our inspiration came from the fact that google trip was supposed to be a big hit, but it failed. Miserably. We tried to better it. We succeeded. Then we failed. Stay tuned for our story...Everything, but what s supposed to actually do. Getting attractive locations? CHECKED. Getting distances? CHECKED. Routing? Double checked. Improving travel time? Well...we are all about sightseeing. We take our time.Sleepless hours, spilled blood and dead bugs are no far from the truth. Coming from a background involving hardcore C#-ing, C++ and Django, we thought about using none of those! 24 hours, of which 23 trying to understand what we were actually typing and one to write this epic story... Our salvation came in the form of API-s and open source. We will never forget our stranger friends. Not only we made the web, but it actually runs.Crazy words, blue screen due to 100+ tabs and sleep deprivation. Not to speak about each and single new line of code. At one point, Facebook refused our conversations. We thought about using git. But it was not hardcore enough. While we were trying to figure out javascript...we got into jquery.. We tried to run away from it, but we weren't fast enough. During morning hours, we had a moment of weakness in which we just collapsed. We woke up 15 minutes later, with no memory of our code. Of course, this did not stop us! We had to keep fighting! We had to prevail! Cheap version of red bull after cheap version of redbull and we were closer and closer to deploying our project. One thing we forgot. We forgot to learn Chinese (Microsoft Cognitive Services).. little did we know..We can type jquery in 3 different ways. We added 3 more languages, including a bit of Chinese. We mumbled-jumbled our way thought this hack. We proved ourselves brave and limitless. We attended countless challenges, being involved in machine learning and competitive programming as well as in actually finishing our hack. We even won some points for our houses.Except for the languages, to trust each other. I mean, I found it hard at first to let another pair of hands mess with my code.Fixing the totally not existing bugs. Solving the NP-complete part of it. Some glory along the way. Voice integration for ease of access and semi-AI just to take a part of the challenge of deciding what to visit next. We consider ourselves community inclined, therefore we will provide a way of gathering parties for sightseeing. The users would be able to rate guides and propose trips. And, of course, our services will always have a free version.Carry on and accio Nimbus!OxfordHackAndrei Iordache\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:17 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Accio Nimbus","project_tags":["html","javascript","jquery","gps","json","css"],"project_url":"https:\/\/devpost.com\/software\/accio-nimbus","keywords":"actually,code,words,thought,one,time,checked,way,hours,version,challenges,cheap,course,came,story,chinese,bugs,supposed,sightseeing,closer"},{"level_0":512,"hack_vector":[[0.1281816661,-0.105373539,-0.0123899709,0.0335751884,-0.0282275882,0.1144294664,0.2081396878,-0.0074535059,-0.0318217948,0.0039186417,0.0215333495,-0.0535848439,0.1371684372,-0.0663096532,0.0733429939,0.0211952552,0.2140142322,-0.0059022941,0.0409797579,0.1294918358,-0.2485057116,0.0378517658,-0.0419044085,-0.0286939312,0.1048010141,-0.0273721386,-0.0319775343,-0.1867137849,-0.0003043773,-0.0932441503,0.0549951047,-0.1121293306,0.0241717137,-0.0889496356,-0.0164204054,-0.0162594169,0.108139731,-0.1456663609,-0.0589572117,-0.0038302415,0.0206838287,-0.1476590186,-0.1467234045,-0.0442564376,0.0588589497,-0.054350052,0.0107791172,-0.073359713,-0.003824136,-0.1974642277,-0.1267011911,0.0042291405,-0.1156055853,0.003107351,-0.193678692,0.1655476689,-0.1413269639,-0.0077778618,0.0388871804,-0.0977418795,-0.0682172924,0.0279277302,0.0794900283,0.068082884,0.1105168015,0.0088691749,-0.1002207771,-0.1364227682,0.0420301147,0.0106501421,0.064707391,-0.0555862896,0.015062415,-0.1175807565,0.0164752863,-0.1467016041,0.1631176025,0.0019317786,0.0271623079,-0.1403328627,0.1321323216,0.1619028151,0.0617567264,0.162202701,0.1185896397,0.2016222775,-0.11162927,-0.0279759672,-0.0152003756,-0.0840053186,-0.1569542438,0.0612945892,0.1025048867,-0.0389381424,-0.0001761693,-0.0000050242,-0.1603702605,0.2027229667,0.0227333792,-0.069623284]],"hackathon_name":"OxfordHack","index":512,"project_description":"As birds flock together, Flock offers a service to coordinate meetings in an international scale for businessesSmall and medium-sized remote enterprises may struggle to find the best locale to set up a meeting with employees based in various different countries.It provides the optimum location for people to congregate at minimum expense, which is of special importance for SME companies, for whom profit margins may be tight and who have no or small headquarters in few and disparate cities.We made use of genetic search and optimization algorithms.Defining the problem in a formal way using mathematic notation, in order to convert to a appropriate representation for the genetic algorithms.Our solution was designed to be easily scalable, such that meetings involving larger groups would be handled with minimum additional effort.Application of genetic algorithms. The power of API as regards the quality of data available, is an influential element to the whole solution.Enhancing it by introducing more parameters to the search function to increase to specificity and the power of the model and provide more detailed search results. Introducing hotel costs could give more accurate estimate of the true expense. The Skyscanner API has not the ability to show indirect routes between chosen airports, which limits the effectiveness of our model. Therefore the inclusion of this feature to the API could improve our solution.OxfordHackOguzhan Yigit\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:18 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Flock","project_tags":["python","skyscanner"],"project_url":"https:\/\/devpost.com\/software\/flock-2ca08q","keywords":"search,genetic,algorithms,api,solution,expense,may,power,minimum,small,model,introducing,could,feature,estimate,enterprises,enhancing,employees,element,effort"},{"level_0":513,"hack_vector":[[0.1405130625,-0.1198953986,-0.0085246749,0.0590999909,-0.0373372324,0.1539432257,0.1945028454,-0.0403902717,-0.0223852172,-0.0215190221,0.0046992009,-0.0159729589,0.1248964965,-0.0838400647,0.0248951931,0.0788244307,0.2556118965,0.031004142,0.0449178107,0.1054729447,-0.2147554904,0.0180573761,-0.0560873412,-0.0608145222,0.1276909858,-0.0135262106,-0.0614467189,-0.1897854805,0.0072295126,-0.0916292891,0.0298115816,-0.1047609076,0.0672846213,-0.0815729499,-0.0299234018,0.0077761216,0.1315114647,-0.1252831519,-0.019892903,0.0561805032,0.0373486765,-0.1482673883,-0.1836372614,-0.0399773084,0.0092422785,-0.0660452843,0.0326281004,-0.0358522758,-0.022394713,-0.2115229964,-0.0808069929,0.0305684414,-0.107299,-0.0512747914,-0.1348713338,0.162636891,-0.1452254206,0.0311637856,0.0115036434,-0.0194876138,-0.0342756771,0.0318498686,0.0739845708,0.0811383575,0.1363224238,-0.0284819677,-0.1279332042,-0.1599059403,0.0329960994,0.0083191972,0.0651205406,-0.0446332581,-0.0103487419,-0.1347797662,-0.0276907329,-0.0966703966,0.188469857,0.0194999781,0.0644408986,-0.1563002616,0.1276791394,0.1701274365,0.0453467593,0.1587598026,0.1305693984,0.1846302897,-0.1189940944,0.0228161551,0.0044188313,-0.1055483967,-0.121351935,0.0796634778,0.0583296716,-0.0056457259,0.0376006179,-0.047468178,-0.1184986159,0.1809336096,0.0640438497,-0.0715305358]],"hackathon_name":"OxfordHack","index":513,"project_description":"Find trips without even searchingOur web service is integrated with the Google Calendar API and occasionally checks whether the user has some free time in the following month, and if they do, it tries to plan a trip for them using SkyScanner.OxfordHackAndreea Marzoca\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:20 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Trippin","project_tags":["node.js","google-calendar","skyscanner"],"project_url":"https:\/\/devpost.com\/software\/trippin-h2cwit","keywords":"whether,occasionally,calendar,checks,following,free,google,integrated,month,plan,web,service,skyscanner,time,tries,trip,user,using,api"},{"level_0":514,"hack_vector":[[0.1225325167,-0.0793775395,-0.0243865997,0.0243600197,-0.0217344631,0.1061591431,0.2006295323,0.0018966306,-0.0360604785,-0.0151653634,0.015959356,-0.0839914754,0.1379421353,-0.0675520599,0.076180622,0.0066684028,0.1994181424,-0.0071113813,0.0380725414,0.132990405,-0.2298167795,0.0362996049,-0.0488082655,-0.0251698755,0.0913589969,-0.0316328332,-0.0298277661,-0.1802799851,-0.0317777209,-0.0881562755,0.0569281355,-0.1018209234,0.0226185173,-0.0902743861,-0.0113138547,0.0006951551,0.1117764339,-0.1383395046,-0.0636934564,0.0038308743,0.0296047162,-0.1381474733,-0.1558857411,-0.0293326024,0.0729509592,-0.0765874088,0.0195701942,-0.0956175849,-0.0149833467,-0.2151381373,-0.1573671997,0.0075801783,-0.1048204303,0.0067072189,-0.1991310716,0.1707413048,-0.1327733696,-0.0236213431,0.0469451807,-0.12275289,-0.0809752047,0.0275887493,0.0707518533,0.0585807264,0.1132239178,0.0154342949,-0.093793869,-0.1275536567,0.0295589138,-0.0017289893,0.0614404939,-0.0579565018,0.0040418361,-0.1107160896,0.0469311737,-0.1298101693,0.1760243028,-0.0092462245,0.0165059157,-0.1329489052,0.128773436,0.1540721357,0.073667936,0.1489468962,0.1014475375,0.2031502128,-0.0933322832,-0.0432140753,-0.0114401635,-0.0777107179,-0.1557489634,0.0477641486,0.0976777673,-0.0482318141,-0.0222803652,0.0030176276,-0.1800846606,0.2308809906,0.0048750723,-0.0766927898]],"hackathon_name":"OxfordHack","index":514,"project_description":"Scrapes data from Skyscanner to identify peak travel periods to different regions.The original plan was to integrate both the Skyscanner API with the Esri API to come up with a hack that would allow people to identify peak travel periods to different popular destinations around the world. This would be useful to those who are avoiding the crowd, and who are looking for the cheaper destinations.It generates a heatmap on the WebGL API, which identifies the destinations with lots of flights, using a self-written Gaussian function. It draws data from the Skyscanner API to do so.The original idea was to use the Esri API; however, there were technical issues with parsing the data into a geolocation database object that can be rendered by the layer, so we migrated to the WebGL API, feeding it with the JSON data drawn from the Skyscanner API.The Esri API did not offer some of the functionalities that we needed, i.e. we could not process the data to be passed into the Layer, without having access to their server (which is a paid service). There were issues with making calls to the Skyscanner API, which was only resolved in the night. We had to manually write the gaussian blur for the heat map, before mapping it to the globe. After mapping it to the globe, we had to re-plot the points on the globe, without the data stacking.Despite the setbacks, we finally managed to complete the project, even though we had to start from scratch during the night.How difficult it is to hack into APIs without proper documentation and few features, as well as the difficulty in deploying to AWS.Mapping the data to history would allow people to plan their holidays in advance, so that they can make the best choices. We would also like to be able to write an algorithm that would identify the next best (nearest and cheapest) destination that people can look for as an alternative.OxfordHackSara Chen\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:19 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"jetblazinit","project_tags":["skyscanner","three.js","javascript","webgl-earth"],"project_url":"https:\/\/devpost.com\/software\/jetblazinit","keywords":"api,data,would,skyscanner,people,destinations,without,globe,esri,mapping,next,original,night,gaussian,layer,write,hack,identify,plan,issues"},{"level_0":515,"hack_vector":[[0.137209475,-0.0818670616,-0.0224946141,0.0484106466,-0.0206885599,0.1505085975,0.2136827111,-0.024404671,-0.0284693483,-0.0079170074,0.0226906538,-0.0684304982,0.1456864774,-0.0657132417,0.0717913136,0.0132005382,0.2260508239,0.0094257854,0.0298206918,0.1269178987,-0.2329452038,0.0329475254,-0.0525278449,-0.026273258,0.1128165498,-0.024757782,-0.0348169953,-0.1989445239,-0.0406676419,-0.0772801787,0.0811453834,-0.1139148995,0.0316948965,-0.0966161713,-0.0273858253,-0.0002364149,0.1157679111,-0.1201370582,-0.0482384376,0.0040828334,0.0398657583,-0.1356447488,-0.1538791656,-0.0248416942,0.0670551956,-0.0517258942,0.0156789757,-0.067040734,-0.0282719489,-0.2183770984,-0.1145928055,-0.0027961645,-0.0972828716,0.0021148585,-0.1752678156,0.1569883376,-0.1365130395,-0.0090186093,0.0300794244,-0.0967838839,-0.0650373325,0.0205187015,0.0868199915,0.0435745493,0.1204388663,0.0030214051,-0.0959473699,-0.1376395673,0.0482797921,0.0120127611,0.0489457436,-0.0417711958,0.0191736296,-0.117265664,0.0041165622,-0.1292890012,0.185519591,-0.0031013761,0.0255048014,-0.1366690546,0.1254767329,0.1643988043,0.0654198155,0.1550593078,0.1021238267,0.2030701041,-0.0909975767,-0.0275829919,-0.0056309015,-0.0930273086,-0.161607936,0.0607066378,0.0836370066,-0.036422018,-0.0043625883,0.0078647984,-0.144658953,0.2255460471,0.021677807,-0.0720441714]],"hackathon_name":"OxfordHack","index":515,"project_description":"Create websites with your voice!VoicerWe wanted to use the Microsoft Cognitive Services to build something.It allows you to create websites with your voice.\nYou say things like 'Set title, Oxford Hack' to add a title.\n'Add image of cookie', adds an image of a cookie.We used Django to build the server and parse the user's input.\nThe Bing search API provides us with the images to add to theWe needed to develop simple voice commands which reduce errors in detection while also being able to parse things on the backend.The detection is very accurate and pretty fast as well. The webpages look very good and are take seconds to set up.Detecting and parsing voice commands.Adding different templates for the webpages so that the user has more customisation options.OxfordHacki worked front endAnirudh Pillai\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:02 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Voicer","project_tags":["django","javascript"],"project_url":"https:\/\/devpost.com\/software\/voicer","keywords":"voice,add,cookie,set,webpages,image,commands,user,title,things,detection,build,parse,customisation,detecting,well,develop,different,django,create"},{"level_0":516,"hack_vector":[[0.1407069415,-0.1426720619,0.0063680494,0.0717200711,-0.0622830801,0.155552417,0.1685156524,-0.0461819805,-0.0308463927,-0.0140294908,-0.0008793208,0.0433455706,0.122762911,-0.0721392557,0.0018013703,0.0937656015,0.278088361,0.0539213344,0.0423331968,0.0799455419,-0.1829196513,-0.0047950228,-0.0510386489,-0.0762947425,0.1656664759,-0.0093579711,-0.0765577778,-0.1830044538,0.0563751347,-0.0931304172,0.0152855171,-0.1035114899,0.0746449977,-0.0578230321,-0.0270154271,0.0201034211,0.1370796561,-0.1000430733,0.0027286366,0.1001140326,0.0390099064,-0.1522835046,-0.1858308762,-0.0372870825,-0.0578450412,-0.0604832284,0.0461132601,0.0066646673,-0.0156801883,-0.1697739661,-0.0162124205,0.0333824083,-0.0982449576,-0.0913271159,-0.0819455013,0.1561661512,-0.1472341716,0.0811553523,-0.013710076,0.0631526932,-0.0029486183,0.0443364196,0.0385847427,0.0980713144,0.1377508342,-0.0592758358,-0.1408247203,-0.1837038249,0.0204710793,-0.0053923209,0.0734259039,-0.0279518273,-0.0139515288,-0.1464440674,-0.0828516707,-0.0735652968,0.1909014583,0.0325511284,0.1142665148,-0.1349143833,0.1148574725,0.152344808,0.017084673,0.1317215711,0.1592993736,0.1421458274,-0.1545255333,0.0780107677,0.0087416181,-0.1181436703,-0.067282252,0.1013901159,0.0146542238,0.0251045935,0.1010494605,-0.0962134749,-0.0579357073,0.1325442791,0.1096054241,-0.056034293]],"hackathon_name":"OxfordHack","index":516,"project_description":"Remove politics from social mediaRemove all political posts from your social mediaOxfordHackRashiq\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:03 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Censor","project_tags":["android"],"project_url":"https:\/\/devpost.com\/software\/censor","keywords":"social,remove,posts,political,media,inspiration"},{"level_0":517,"hack_vector":[[0.1345318258,-0.1387137622,-0.016713867,0.0431068912,-0.029521171,0.1299500167,0.1851640344,-0.0292979628,-0.01899115,-0.020633772,0.0027815811,-0.0367047079,0.126984939,-0.0563694648,0.0563445278,0.0273304675,0.2298839837,0.0124265691,0.0455243699,0.1285862774,-0.2437003106,0.0349921919,-0.0315117463,-0.036243476,0.1184108183,-0.0106799565,-0.035567157,-0.1803546697,0.0055050692,-0.1037558988,0.0504600964,-0.1313203275,0.032840997,-0.0826862529,-0.0160982404,-0.0376253091,0.1105802134,-0.1506367922,-0.05307322,0.0067476062,0.0299282596,-0.1499435306,-0.1523365378,-0.0642388612,0.0309355613,-0.0610354319,0.0120562185,-0.0507430658,-0.0270955637,-0.2014109492,-0.120205611,0.015865013,-0.1138303652,-0.0301750973,-0.1676605046,0.1716408879,-0.1245292276,-0.0019506159,0.0288328752,-0.0639922023,-0.0596969761,0.0261875466,0.0636826605,0.0639645159,0.104211852,0.006651443,-0.1239564717,-0.1446606368,0.0312382299,0.020602975,0.0841726139,-0.0558153167,0.0262978766,-0.1286702156,-0.0080521535,-0.1303565204,0.1709707677,0.0171627048,0.037598595,-0.1440364271,0.1268681884,0.1635822952,0.0430661328,0.177777499,0.1296292394,0.19521752,-0.1234992519,-0.0152532086,-0.0185255911,-0.075053066,-0.1281485111,0.0735123307,0.1036385968,-0.0395858325,0.0202597752,-0.0240652934,-0.1427783966,0.2108061463,0.0203827918,-0.074889794]],"hackathon_name":"OxfordHack","index":517,"project_description":"The worlds first political leadership insurance product.TyrannyEscapeThe millions of suffering Americans stuck under Trump.It allows customers to insure themselves against the rule of a tyrannical political leader. If a customer insures themselves against the rule of a particular election candidate, then in the event that that candidate wins the upcoming election, TyrannyEscape auto books them a flight out of the country, using the SkyScanner API, within 12 hours.Built by Mack - using python with the Skysanner API.Finding a way to scrape the internet for betting odds on upcoming election candidates.Integrating the SkyScanner API.There aren't that many left wing world leaders right now...Going global! And finding betting odds for election candidates further afield than Europe, so that TyrannyEscape can insure those with even more at stake in their leadership elections than us here in the West.OxfordHackOwen Mears\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:02 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"TyrannyEscape","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/tyrannyescape","keywords":"election,api,tyrannyescape,finding,insure,odds,using,upcoming,betting,rule,built,candidate,candidates,skyscanner,world,event,global,flight,europe,going"},{"level_0":518,"hack_vector":[[0.1436725706,-0.1155280173,-0.018494105,0.0868643969,-0.0438649654,0.1661137342,0.1995928138,-0.0549717471,-0.011149805,-0.0524287261,0.0160446074,-0.0141391447,0.1577091515,-0.0769233555,0.0473988727,0.0022524027,0.2374143302,0.0202891268,0.0553734936,0.1141881049,-0.2081430852,0.0230367798,-0.0477864109,-0.0291686598,0.1366288215,-0.0110934367,-0.0439159572,-0.1756769121,-0.0175906494,-0.0805153921,0.0455022603,-0.1197241694,0.0451996513,-0.0623162687,-0.0370515361,0.0052028503,0.1507849693,-0.1240714639,-0.0492082871,0.0409973226,0.0648554638,-0.1220359579,-0.1628479809,-0.0213770699,0.0082468633,-0.0631998777,0.0411300771,-0.0534647889,-0.0410851538,-0.2196106315,-0.112339586,0.0321699232,-0.1072546691,-0.0234585442,-0.1538150012,0.1592168957,-0.1400615871,0.0063857776,0.0110279322,-0.0439298637,-0.0626399443,0.034090694,0.0766701326,0.0487475656,0.1263262779,0.0029347311,-0.1097377613,-0.1468166411,0.011607537,0.0111686233,0.0476045758,-0.0291365683,0.0128577529,-0.1411023289,-0.0131518058,-0.0675396845,0.2150541991,0.0153386584,0.0316515565,-0.1575080007,0.119286254,0.1692120582,0.0388426781,0.1429314464,0.1322018951,0.1873928457,-0.1042312309,-0.0091096135,-0.0020924422,-0.089742206,-0.1321365684,0.0821713954,0.0732342526,-0.0002671956,0.0367007516,-0.0572950095,-0.1187378913,0.2246953547,0.0452344157,-0.0592924207]],"hackathon_name":"OxfordHack","index":518,"project_description":"Goofy BotThe idea originally was to build an app for family and friends to fix up a vacation based on various factors. Didn't work, had to pivot a few hours before submission.Goofs aroundUsed Node for the server side logic, microsoft bot framework, Facebook messenger platform,Don't want to rememberBuilt something that we won't be ashamed to submitSome vague idea about server side processinggit rm -rOxfordHackAayush  Chadha\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 05:48 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"OxBot","project_tags":["node.js"],"project_url":"https:\/\/devpost.com\/software\/oxbot","keywords":"idea,built,side,server,work,family,inspiration,hours,goofs,git,friends,framework,fix,facebook,factors,logic,challenges,build,bot,based"},{"level_0":519,"hack_vector":[[0.1548489779,-0.1122573987,-0.0348937437,0.0506117642,-0.0158038475,0.1265128255,0.1819100827,-0.0238458533,-0.017139649,-0.0321670771,-0.0038370006,-0.0657933354,0.1520385593,-0.0615718886,0.0620633923,-0.014803485,0.1794329733,-0.0112732844,0.0565060116,0.1219804585,-0.2403868586,0.0283720642,-0.039761249,0.0005705886,0.1106487736,-0.0388934873,-0.0299738608,-0.1515581459,-0.0475625284,-0.0936797932,0.0635649562,-0.1087585241,0.0403234512,-0.0652930439,-0.0215254035,-0.0271220244,0.1256770045,-0.1460909247,-0.0675403923,-0.0049512824,0.0678793415,-0.1219563112,-0.1420349926,-0.0270691086,0.0592927672,-0.0627137497,0.0193969812,-0.0950818732,-0.0274103843,-0.218323797,-0.165745005,0.0253734253,-0.1128078625,0.0129630547,-0.2156873345,0.1488172859,-0.1319616288,-0.0385729447,0.0455422066,-0.0973907784,-0.0838117227,0.0226203371,0.0573085733,0.0188533738,0.1012479812,0.024169961,-0.0965677649,-0.1153177023,0.0110975699,0.0268865973,0.0668827817,-0.0534802377,0.0010882518,-0.1237615943,0.031929519,-0.1012489274,0.1919282377,0.0069468399,-0.0051857606,-0.1423071325,0.0947835371,0.152554974,0.0384613127,0.1576041728,0.1151480004,0.20870848,-0.0831642672,-0.0329621322,-0.0148233166,-0.0826814026,-0.1377711147,0.0697350428,0.0998875797,-0.0392695554,-0.0148849552,-0.009373121,-0.1685396433,0.2605340183,0.0120875062,-0.0650976896]],"hackathon_name":"OxfordHack","index":519,"project_description":"A wand that reacts to movementSince this is a Harry Potter themed hackathon, I felt the need to create something matching the theme that allows us muggles to get a taste of what it's like to be a wizard.When the user moves the wand, the 7 LEDs change colour and pattern depending on it's orientation. Requires some enthusiatic acting and imagination.This uses an Arduino Uno, an accelerometer, 3 breadboards, 7 neopixels and a portable phone charger. I used code from an existing project featuring a wand that controls a tv, and edited it to fit the LEDs and the effects I wanted. Accelerometers are notoriously inconsistent so it took some time to get the numbers right- they were usually very different than the original code.Initially had some issues getting the LEDs going before realising I used the wrong resistor (took far too long to realise). Getting the values right took time. The main issue I am still dealing with is the consistency of the accelerometer- it sometimes gives off random numbers as feedback, which in turn calls functions at the wrong time. Because of this I had to remove a (very pretty!) rainbow function, as it was getting called randomly.Proud I got it all done in a reasonable time before the deadline! It's not my most ambitious project but it was a bit of fun.I've never used an accelerometer before so I learned how the values are read and used. I also learned a bit more about the neopixel library- mainly that it will be very difficult for me to write my own patterns for my LEDs.I would have loved to have taken this off the breadboard and onto an actual wand, but due to time and soldering constraints that was not to be. It would definitely be fun to do that in the future.OxfordHackLeah Thomas\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 05:47 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hacking is Magic","project_tags":["arduino"],"project_url":"https:\/\/devpost.com\/software\/hacking-is-magic","keywords":null},{"level_0":520,"hack_vector":[[0.1382989138,-0.0940691754,-0.0351734757,0.0251078773,-0.0079510752,0.119622916,0.1870563924,-0.0218111277,-0.0148329781,-0.0287020933,0.0167880636,-0.0873222798,0.1431694329,-0.0623278804,0.0686971694,-0.0009202352,0.2088027,-0.015447937,0.0397257172,0.1404325813,-0.2438133508,0.026703719,-0.0412795767,-0.0071910676,0.0943846852,-0.0405973084,-0.0218113028,-0.171737656,-0.0459036604,-0.1029755771,0.0761004537,-0.1127213761,0.031388022,-0.0780398473,-0.0047610551,-0.0230314657,0.102798298,-0.1409795582,-0.0500434004,-0.0237984154,0.0497136042,-0.1135175228,-0.1534394473,-0.0328669958,0.0771640241,-0.0714160129,0.0150340814,-0.086733602,-0.030042123,-0.2275282294,-0.1598683894,0.0069412543,-0.0975126624,-0.0054244585,-0.218331188,0.1554436982,-0.1244995669,-0.0497092009,0.049697645,-0.1193768084,-0.0781181529,0.0223492514,0.0677080974,0.0254530217,0.0962662548,0.0288508832,-0.0871137157,-0.1183490679,0.0276229363,0.0153972926,0.0691307262,-0.0510262921,0.0156769454,-0.1069085598,0.035818778,-0.1214930937,0.1740522981,-0.0040788297,-0.0010806728,-0.130674094,0.1043390185,0.1571769118,0.0404435545,0.1722711176,0.0909768939,0.2039380074,-0.0865767002,-0.0515867472,-0.0336907692,-0.0734146684,-0.1445778906,0.053055793,0.0961704403,-0.0419909172,-0.0389999188,0.0152640883,-0.171273157,0.236566022,0.0015000368,-0.0834178701]],"hackathon_name":"OxfordHack","index":520,"project_description":"Mindreading virtual card trick: you show the webpage, they name a card, you click the link, their card appears. MAGICFirst ever hack, learning using code academy as I went along. Wanted to produce a website that allowed anybody to do a magic trick with very little practice. Work as a professional magician, and want to change my answer after I perform from, 'sorry, I can't tell you how I did that' to 'here's something that you can learn'.It's an online magic trick. Read the instructions page first if you are using it. A person thinks of a card, or three people (one picks the colour, one picks the suit, one picks the value), they can change their mind as much as they want and you do not influence their decision. Whatever they say, when you click on the link a picture of their chosen card comes up.I used the code academy tutorial to learn how to initially write the basic code structure in html and css. Then I learnt how to put in the appropriate images and links onto the page, and on each letter. Didn't know what software to put the code that I had written into, so I just coded into the text file on my wordpress website on a new page. Started by coming up with a set of words that could be split into 4 instructions, to represent the four suits, with 13 characters in each instruction (minus spaces) to represent the 13 potential card values in each suit. Then coded each individual letter to correspond to each playing card (this took the bulk of the time as I had to attach an image link to every letter). I then reformatted all the information so that it was in one line as a sentence and added a title. Created a new instructions page and added a link to that. Then coded in the pictures and links, as well as centre lining the text and making it look nice. Finally I added a link from the instructions to my website (not coded during the hackathon), because... why not right?The biggest challenge I faced was convincing myself to start learning to code, then it was ensuring that all of the code was formatted and the website looked nice. Coming up with the word combination was difficult, as was ensuring that the link looked as much like one single hyperlink as possible.Finally got around to learning to code, and am now looking forward to working on many more exciting projects. Also proud to have come up with the idea and then gone on to execute it. Proud that it was all written in actual code rather than just editing the words on wordpress as I usually do with my website.How to use html\/css. How to create headings, change font sizes, import images, add hyperlinks, add image hyperlinks, reformat code to become one sentence, work continuously for a few hours without procrastinating.Definitely going to design some more magic tricks that people can do for their friends using the platform. Hope to make them even better and far more difficult to figure out. Maybe also mix coding with some real life magic tricks. Also hope to do a psychology page where people can take part in experiments (eg. implicit association tests) to see if they have implicit biases and how they compare to the rest of the population.OxfordHackRomil Depala\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 04:58 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Online Magic Trick - Amaze Your Friends","project_tags":["html","css"],"project_url":"https:\/\/devpost.com\/software\/online-magic-trick-amaze-your-friends","keywords":"code,one,page,link,magic,website,coded,instructions,card,change,also,letter,added,proud,using,learning,people,picks,trick,online"},{"level_0":521,"hack_vector":[[0.1424156874,-0.1143617705,-0.0225802697,0.0408278517,-0.0267292187,0.1444210112,0.2043815553,-0.0391926765,-0.0283829682,-0.0087220501,-0.006333509,-0.0556061007,0.1391439438,-0.078220427,0.0456778929,0.0245379265,0.2354101837,0.0113566089,0.0417301059,0.1203153208,-0.2348103821,0.0401100703,-0.0377022848,-0.0287698116,0.1329518259,-0.0202439409,-0.0460959934,-0.1810057908,-0.0154090282,-0.0934831947,0.05898536,-0.1356294453,0.0500607565,-0.0827522427,-0.0418806337,-0.0298103075,0.1323000044,-0.1375456154,-0.0425464101,0.0113036064,0.0398238227,-0.1481403857,-0.1555041671,-0.0394244418,0.0495520048,-0.0521075875,0.0176727735,-0.0601721555,-0.0287640598,-0.2028850913,-0.1197599098,0.0240617283,-0.1073545143,-0.0036357795,-0.173109144,0.16189605,-0.143226698,-0.0009983784,0.017399393,-0.0661752224,-0.0608734787,0.0171058439,0.0715576634,0.0507143773,0.1117296293,-0.0011532919,-0.1041379422,-0.1366877258,0.0333379097,0.0351918302,0.0811839029,-0.0591986775,0.0145259919,-0.1325849444,0.0086240564,-0.116426222,0.173709631,0.0111647584,0.0350995138,-0.135879457,0.1308138222,0.1536033005,0.0607912354,0.1664524823,0.1233845651,0.1873950064,-0.1144572198,-0.0195445251,-0.004471506,-0.086870268,-0.1402115971,0.059045855,0.0872005075,-0.0306283087,0.0139587577,-0.0157949086,-0.1379357874,0.2123656124,0.0353810899,-0.0754766539]],"hackathon_name":"OxfordHack","index":521,"project_description":"A quick way to access emergency contact numbers for your locationThe page. This is it.With increasing numbers of refugees coming across many countries, the importance of being able to access the emergency services at any point is vital.The site is a very light weight (<90KB) response in any language with the emergency service numbers for the area.The site runs a simple node.js backend for fetching the numbers and translating the strings, and it fetches all of the numbers from JSON.Keeping the load size low whilst ensuring it is clear what everything on the site does.Keeping the total page size <100KB while still being usefulWorking with AWS is more complicated than I original foresaw.Removing the font-awesome dependency to half the further decrease the delivery size (~25KB after removal)OxfordHackConnor Lurring\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 05:36 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Emergen-c","project_tags":["node.js"],"project_url":"https:\/\/devpost.com\/software\/emergen-c","keywords":"numbers,kb,size,site,emergency,keeping,awesome,accomplishments,js,inspiration,increasing,importance,half,foresaw,font,fetching,fetches,access,everything,ensuring"},{"level_0":522,"hack_vector":[[0.136207357,-0.092055209,-0.0326292627,0.0340087861,-0.0203708299,0.119561173,0.2034511119,-0.0123472475,-0.0323375873,-0.0066057392,0.0140851093,-0.078515932,0.1387261301,-0.0740704015,0.0668278411,0.0137890829,0.2131397873,-0.0061883726,0.0355049334,0.1373173445,-0.2400588691,0.0359170586,-0.0471775346,-0.0153483776,0.1117580011,-0.027310865,-0.0381800644,-0.1797703803,-0.0225233622,-0.0911245793,0.060973376,-0.1185135543,0.027002871,-0.086928688,-0.0131071704,-0.0053127981,0.1161203459,-0.1375309527,-0.0552130267,-0.0032884511,0.0367204696,-0.1406209767,-0.1598804593,-0.0300820079,0.0677961633,-0.0606937297,0.0163488481,-0.0835610554,-0.0164006129,-0.2079512924,-0.1407294422,0.0099107735,-0.105657585,0.006542007,-0.201221019,0.1635474265,-0.1347418427,-0.0214092024,0.0357749835,-0.1076529399,-0.070921436,0.0299123339,0.0785498098,0.0574029163,0.1124644205,0.0130571015,-0.095268853,-0.1282354146,0.0332873352,0.0129400212,0.0685604811,-0.0502668396,0.0169758163,-0.1107190549,0.0371497087,-0.1289940476,0.1681846827,-0.0079441238,0.0130981151,-0.1326232105,0.1262568384,0.1598854512,0.0680419803,0.162227124,0.0952803195,0.1965794563,-0.0984237939,-0.0439220779,-0.0146588041,-0.0822749734,-0.1463980079,0.049585443,0.0927480906,-0.0400702208,-0.0043659871,0.0108590079,-0.1674843132,0.2255172879,0.0128780017,-0.0755749494]],"hackathon_name":"OxfordHack","index":522,"project_description":"An application which filters 9GAG images based on users happiness level when they saw a particular image.In our opinion, 9GAG transformed from a website which has really funny images, to a website which is full of disgusting or sad things. We decided to improve this, focus more on the quality of a meme website.The application can get images from these kind of websites, for now in the prototype it has just predefined images, and it can monitor the users reaction to images whenever they open one, by taking a picture of them with the webcam, and using the Cognitive Service API, we detect their happiness level. In the end, pictures get ordered according to the average happiness level registered from users reactions.We built it using just Java, and different libraries of it (eg. JavaFX).The biggest challenge was to figure out what the binary image data actually means on the Microsoft API webpage, since no clear example was given.We are proud that in the end we make it to work, and also had the chance to use artificial intelligence in our project.We learned a lot about Java, Java FX and different libraries.The next step for Emotion filter is to be deployed in websites and work together with the database of images, to be able to sort them according to happiness.OxfordHackCsongor Barabasi\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 05:23 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Emotion Filter","project_tags":["java","excel","json"],"project_url":"https:\/\/devpost.com\/software\/emotion-fileter","keywords":"images,happiness,website,java,built,get,learned,level,libraries,next,end,emotion,different,proud,work,users,according,using,api,websites"},{"level_0":523,"hack_vector":[[0.1651556045,-0.1152659059,-0.0150097003,0.0665809363,-0.0184428729,0.1614717394,0.1927814484,-0.0424854569,-0.0228588469,-0.0142261721,0.0173823722,-0.047752142,0.1391202062,-0.075285688,0.0478812233,0.0227665249,0.222096771,0.00842903,0.0575874411,0.1092507839,-0.2315322608,0.0306175295,-0.0396291614,-0.0315268673,0.123199001,-0.0307854209,-0.0361445472,-0.1924104691,-0.019608669,-0.0766849816,0.0627836362,-0.0994072184,0.0538106263,-0.0922663286,-0.0368204117,-0.0063962941,0.1247819141,-0.1335374266,-0.052106753,0.0268220883,0.0504649393,-0.1372633278,-0.1582385153,-0.0318518803,0.0418280214,-0.0438454747,0.0212812498,-0.0608391166,-0.0216706842,-0.2209370732,-0.1275443435,0.0236712936,-0.1209192798,-0.0189434458,-0.1723055989,0.1591582149,-0.1321892142,0.004305698,0.0291247759,-0.0554272942,-0.0494070463,0.022662187,0.0751879662,0.0582398437,0.1272994727,-0.0037092352,-0.1158917919,-0.1333722025,0.013717277,0.0116418423,0.0638517514,-0.0382488258,0.0039452636,-0.1373600662,-0.0064440994,-0.1088260114,0.2033197135,0.0002214364,0.0300199408,-0.1516231447,0.1261904836,0.1621904224,0.0369792581,0.1621335745,0.1152190045,0.2027609199,-0.0896383449,0.0003964925,-0.0112647843,-0.084289737,-0.1352938712,0.0764374062,0.0624627993,-0.0296230819,0.022876706,-0.0181537867,-0.12575984,0.2158150971,0.0410600789,-0.0694528893]],"hackathon_name":"OxfordHack","index":523,"project_description":"A note taking app powered by AIWe all use Note taking apps like Evernote or Google Keep (some of us use them pretty heavily), but AI\/Machine Learning could make the experience more richer and user friendly.Android Studio and Project Oxford APIsMicrosoft's website isn't showing the subscription page where you can access subscription keys for other APIs, so not able to use the other API's at the momentMany things about AI, ML and NLPComplete this app, polish it and launch it for public next year!OxfordHackI worked on building the Android appSuyash Srijan\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 19, 2016 11:02 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AINotes","project_tags":["android","java","microsoft-project-oxford"],"project_url":"https:\/\/devpost.com\/software\/ainotes","keywords":"use,ai,todo,notes,next,user,offer,apis,note,nlp,subscription,year,generate,google,information,heavily,improve,extract,inspiration,keep"},{"level_0":524,"hack_vector":[[0.1416747123,-0.093059577,-0.0157956593,0.0508020855,-0.0140203498,0.1331713647,0.1971833855,-0.0272968952,-0.0399925075,-0.0037540402,0.02432275,-0.0720902458,0.154603824,-0.0695902258,0.0607674532,-0.0001548,0.2061834335,-0.0112609658,0.0525612757,0.137479648,-0.2446812987,0.0449217707,-0.0426219702,-0.0050851917,0.1201675832,-0.0315011106,-0.0466322303,-0.1755950898,-0.0166970994,-0.0897151083,0.0748405829,-0.1125755683,0.0291062631,-0.0754063725,-0.0051949448,-0.0176124331,0.1261241883,-0.1345809698,-0.0507965833,-0.014015099,0.0534988344,-0.1473623067,-0.157403931,-0.0329088978,0.0605533868,-0.0353260115,0.0053652101,-0.0864450634,-0.0074238572,-0.2063959837,-0.1346699893,0.0264577493,-0.113661103,0.0273420084,-0.218905285,0.1554831415,-0.1374050826,-0.0176317953,0.0463323332,-0.1096513793,-0.0643155947,0.0274509229,0.085098803,0.057057023,0.1070732549,0.0247936323,-0.0859878734,-0.1337899417,0.0259854328,0.0243066028,0.0682599321,-0.0390000157,0.0284405854,-0.1078362092,0.0277418215,-0.1288469434,0.1683713943,-0.0078770341,0.0105848648,-0.127321735,0.1113061979,0.1487400532,0.0574503392,0.1534826905,0.1089983955,0.202115804,-0.0951399878,-0.0603381656,-0.0277594905,-0.0758691877,-0.1445972472,0.0533114634,0.0955903754,-0.051371403,0.0033493733,0.0194928981,-0.1552660763,0.2203798294,0.0118261585,-0.0634931028]],"hackathon_name":"OxfordHack","index":524,"project_description":"Easy typing for everyone.LogoOccasionally, we find ourselves tapping the wrong button on the relatively small software keyboard on our smartphones. Thus was born the idea of a new input for phones - a way of typing that would get rid of the typing aspect entirely by streamlining the process.FineType allows the user to input text characters purely through the use of hand motions and without the use of an on-screen keyboard.We used Java and the Android Studio IDE to build FineType.We found that the process of switching between groups of characters and between the characters inside each group a tedious process that kept bugging out for us. Eventually, the fix was found as a time delay for switching.We're proud of the way we graphically represented to the user when they switched between the blocks of characters and which block they were on.We learned how to access accelerometer readings from an Android phone, along with negating gravity in accelerometer equations. We also learned how to create a GUI interface in Android Studio, an IDE with which we had no experience at all for creating apps - in fact, we created our first ever mobile app here at OxfordHack.FineType's next steps would be to smooth the user experience by reducing the amount of errors that come from unexpected diagonal movement, smoothing the amount of noise experienced by the app from random movement, and adding features like capitalization, spacing, and repeating characters in a row.OxfordHackI worked full-stackI worked full stack for FineTypeTyler  Xu\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 04:55 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"FineType","project_tags":["java","android-studio"],"project_url":"https:\/\/devpost.com\/software\/finetype","keywords":"characters,finetype,process,user,learned,android,accelerometer,switching,experience,next,movement,keyboard,studio,found,proud,app,would,ide,typing,way"},{"level_0":525,"hack_vector":[[0.1559005827,-0.108696498,-0.0256949533,0.0470146835,-0.0125733316,0.1302821487,0.2026638985,-0.0227946714,-0.0273603275,0.004056911,0.0092744576,-0.0736095086,0.1432419866,-0.0663777664,0.0749969035,-0.0159042366,0.1782404631,-0.0120326774,0.0536605082,0.1078979895,-0.252024591,0.0343662612,-0.0418276787,-0.0069278423,0.1082097515,-0.034888342,-0.0297054462,-0.1722333729,-0.0319059007,-0.0868942887,0.075306721,-0.116338402,0.0220213346,-0.0859096423,-0.03007764,-0.0236030035,0.1047997251,-0.1523428857,-0.0750167817,-0.0090187816,0.044899147,-0.1300378293,-0.1283068061,-0.0255634505,0.0691499487,-0.0480064563,0.0083091035,-0.0931677297,-0.0173483118,-0.1998490542,-0.1541059911,0.0121030509,-0.1183677912,0.0279934369,-0.2099979818,0.1550935358,-0.1406292468,-0.0252552647,0.0383089483,-0.1081386879,-0.0793165565,0.0230287276,0.0743916631,0.046957612,0.1065388247,0.0276928525,-0.0994847566,-0.1068498045,0.0166671872,0.0228875373,0.0655873194,-0.0535833091,0.0191210564,-0.1208026558,0.0444008484,-0.1313337088,0.1802143902,0.0046404018,0.0024018306,-0.1393899918,0.1249748841,0.1509492099,0.0614318773,0.1498425007,0.1071158946,0.2196945846,-0.0785293356,-0.0338151492,-0.0111208893,-0.0671254545,-0.1410860866,0.058434464,0.1036306843,-0.0470787846,-0.0125025902,0.0156782568,-0.1634558439,0.2314871699,0.0074504572,-0.0620039403]],"hackathon_name":"OxfordHack","index":525,"project_description":"Telepathy-enabled computing using the Muse EEG Headband.We wanted to explore what can be achieved in terms of thought-based computer control using the Muse Headband.One can use the headband's accelerometer to control the cursor, but the thought pattern classification subsystem does not work very well, as it is very hard to collect clean training data without a pure lab environment (e.g. no distractions, etc.).We also built a simple prototype of an interface which would allow a user to track how focused they are during their work. If someone were to, perhaps, spend a long time working without being productive, this app could provide insights into why this was the case: it would highlight cases when a user would have trouble focusing.We used Python and Ruby, as well as the Muse research tools. For the data analysis, we used Jupyter and scikit-learn. For the perfect UX and design, we leveraged Comic Sans MS\u2122 and a patented marquee implementation.It's very difficult to analyze and classify traces of EEG activity in such a limited timeframe. Moreover, collecting clean data with no distractions is nearly impossible in hackathon conditions.We collected quite a lot of data of people performing various activities while wearing the Muse headband. The accelerometer-based computer control interface also works quite well!EEG-powered human-computer interaction is possible, i.e., the signal does exist in the data. With appropriate training data collection and analysis, one could definitely build a real-time computer control system using EEG.We would like to improve our data collection conditions, and build a more robust pipeline for the data cleaning.OxfordHackFirst time working this closely with custom hardware, and definitely the first time analyzing EEG data. This was a blast to work on, despite the fact that the results still require more polish before being capable of working in practice.Some tangential contributions to the mouse tracking software and the dashboard for the EEG activity.Ioan Andrei Barsan\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 04:37 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"We Use Muse","project_tags":["ruby","python","scikit-learn","muse"],"project_url":"https:\/\/devpost.com\/software\/we-use-muse","keywords":"data,would,control,muse,computer,well,eeg,headband,build,built,clean,collection,quite,conditions,based,could,analysis,distractions,interface,also"},{"level_0":526,"hack_vector":[[0.1548544019,-0.1101784483,-0.0361278728,0.0560622886,-0.0324758813,0.1504632533,0.1967678815,-0.0405745767,-0.015213036,-0.0079225954,0.0147493863,-0.047686439,0.1444719583,-0.0611271486,0.0712920576,0.0041765594,0.2204079777,0.0096354913,0.0390447229,0.1077621877,-0.2239599079,0.0308197346,-0.0513940938,-0.0160473827,0.1286487728,-0.0224665552,-0.0289267339,-0.1851094663,-0.024574725,-0.0723709092,0.0645201132,-0.1240534782,0.0365447067,-0.0938338265,-0.0413902886,-0.0067085233,0.1238440424,-0.1287723333,-0.0639966801,0.0104101375,0.0378629491,-0.1287001967,-0.1506649405,-0.0220465716,0.0493019521,-0.0512878336,0.0225480869,-0.0641449243,-0.0263367742,-0.2074145526,-0.1259918958,-0.0012491267,-0.1090179235,-0.0134079475,-0.1713705361,0.1545030177,-0.1271981597,-0.0037594712,0.029975595,-0.067823641,-0.0641824231,0.0226640739,0.0866426975,0.0446675122,0.1112919077,-0.0053837607,-0.112269327,-0.1333962083,0.0321434289,0.0212492552,0.0694899336,-0.0404811166,0.0198799483,-0.1312527061,-0.0038598122,-0.1260925084,0.2034635544,0.0037946608,0.0280903466,-0.142690897,0.1258909702,0.1624496132,0.0508327298,0.1706695706,0.1178634688,0.1884189844,-0.1078622043,-0.0128508545,-0.0056062639,-0.0948998779,-0.1469480544,0.0686678439,0.0943201557,-0.0242359526,0.0281909276,-0.0196097177,-0.1333538443,0.2378912121,0.0315158255,-0.0807260349]],"hackathon_name":"OxfordHack","index":526,"project_description":"Super simple CDN, just include it inline with your resource calls. It auto scales over the AWS infrastructureCDN landing page and instructionsSimulated results with a slow server response timeWe wanted to get a better understanding of the features of AWS and learn about how incoming traffic can be managed and routed across multiple machinesIt takes your remote assets and caches them on our high speed SSD backed AWS infrastructureIt uses express to accept incoming traffic and caches the content it finds to disk.It auto scales and uses some really cool advanced AWS featuresTidy up the code base and probably privatise it for my own use because it would be super expensive to run publicallyOxfordHackPandelis Zembashis\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 03:31 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Project Cambridge","project_tags":["express.js","node.js","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/project-cambridge","keywords":"aws,incoming,uses,traffic,features,caches,code,high,get,finds,express,expensive,disk,cool,content,would,cambridge,infrastructure,better,base"},{"level_0":527,"hack_vector":[[0.1365370452,-0.0677660108,-0.0415996611,0.0237966422,-0.0159892626,0.1434354633,0.2145381719,-0.0303250775,-0.0147646843,0.0010799306,0.0138216754,-0.0955610424,0.1252119988,-0.0576956905,0.0874912962,0.0015854795,0.2084097564,0.0112100141,0.0254566725,0.1206913292,-0.2201592773,0.0503332652,-0.0527918451,-0.023729885,0.1006234437,-0.0019552489,-0.0197734665,-0.1932778209,-0.0429408327,-0.0805610344,0.0709360689,-0.1386166215,0.0360313319,-0.1210825816,-0.0162018705,-0.0113015631,0.1070792228,-0.1362542957,-0.0752268508,-0.0200333446,0.0187945589,-0.1482636631,-0.1420947462,-0.0280027259,0.073849529,-0.0523212068,0.0016719571,-0.0810284764,-0.0372416712,-0.2046134919,-0.1482341588,-0.0006617241,-0.0928403735,-0.0034586678,-0.1716139317,0.1604505926,-0.1229642853,-0.0194227286,0.0356435403,-0.120453842,-0.0781604201,0.0142986905,0.0926922783,0.0456876494,0.0971157849,0.0113118272,-0.10605634,-0.118460685,0.054145582,0.0293836556,0.0710597485,-0.0557722859,0.0345192328,-0.119716987,0.034318123,-0.1435897648,0.1675260663,-0.0048172316,0.0177442301,-0.1277466565,0.1234721616,0.1488835067,0.1047248542,0.1593259722,0.0788440257,0.1810133904,-0.0879812241,-0.0503160432,0.0055601522,-0.078955926,-0.1589842737,0.0342381485,0.108653605,-0.0563400127,-0.0062673977,0.0263001118,-0.1577431411,0.2346444875,-0.0148658315,-0.0928703547]],"hackathon_name":"OxfordHack","index":527,"project_description":"If your life was a movie, which would be the soundtrack of it? Use Tune My life to discover it!Home pagePhotos obtained, want to generate a playlist?Generating playlist...If your life was a movie, which would be the soundtrack of it? Tune my life is a platform which collects your Instagram photos and, after running computer vision on the photos, generates the perfect Spotify \nplaylist that matches with your photos' story.We wanted to develop something using sentiment analysis.Tune my life collects your Instagram photos and, after running computer vision on the photos, generates the perfect Spotify playlist that matches with your photos' story.We built the platform with Python and used Flask for the server. The photos are obtained using the Instagram API and then processed with Microsoft cognitive services in order to apply the sentiment analysis and retrieve the data. Finally, the playlist is generated using the Spotify API according to parameters such as acousticness, danceability, loudness, tempo, balance, etc.API's restrictions (Pending approval of instagram to give public access), how to determine the music attributes from the parameters obtained when running cognitive analysis over the images, deploying to the servertl;dr -> It works!\nWe have used some technologies that we hadn't use before and the results are pretty accurate.How to use Spotify's API, Instagram's and Microsoft cognitive services. Also we did some research related to the topic we discovered relations between feelings and music attributes.OxfordHackI worked on the backend, merging the APIs data and defining the main workflow. Configured Instagram APIvictor perez\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 03:27 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Tune my life","project_tags":["python","flask","html5","javascript","css3","jquery","spotify"],"project_url":"https:\/\/devpost.com\/software\/tune-my-life","keywords":"photos,instagram,life,api,spotify,using,use,tune,cognitive,running,playlist,analysis,microsoft,platform,generates,collects,perfect,computer,related,parameters"},{"level_0":528,"hack_vector":[[0.1412142068,-0.1181172431,-0.0298696961,0.0358219147,-0.0044521433,0.120277144,0.2075894177,-0.0175159127,-0.0371482968,-0.0233694445,0.0004080972,-0.0690803006,0.1405463368,-0.0622688159,0.0478746854,0.0089631546,0.2114634365,-0.0159382485,0.0387184098,0.1470452249,-0.2514030337,0.0437018573,-0.0250393394,0.0029982675,0.1342034489,-0.0345164835,-0.035358239,-0.1729638278,-0.0389409512,-0.0972960666,0.082291007,-0.124365285,0.0331398062,-0.0592035539,-0.0105112037,-0.0392482132,0.1109118909,-0.1362138391,-0.0340383165,-0.020611858,0.0626540259,-0.1559370756,-0.1530223042,-0.0549834557,0.0699132383,-0.0560622253,0.0015477861,-0.0681431592,-0.0248029865,-0.2153132558,-0.1210961118,0.0111523578,-0.0965413526,0.0187897012,-0.2280936092,0.154777959,-0.1518297195,-0.0424766093,0.036185395,-0.1063909307,-0.0767061114,0.0238916036,0.0564071573,0.0121542756,0.0996928439,0.0287252087,-0.0939668939,-0.1265802979,0.0420373045,0.0290812943,0.0669984967,-0.0577975512,0.0209619589,-0.0971716493,0.0209183041,-0.1201532185,0.1463449001,-0.0121074831,0.0192729961,-0.1219241619,0.0949741304,0.1494713724,0.0370580256,0.1815286726,0.0996265262,0.2034667283,-0.1103570089,-0.0349851996,-0.0283112768,-0.0830114037,-0.1314783841,0.0676057488,0.0821153447,-0.0413697772,-0.0334270261,0.0181769002,-0.1675791144,0.2154004723,0.0174906887,-0.0538977869]],"hackathon_name":"OxfordHack","index":528,"project_description":"3d magic castle gameThis is a game with a magic theme to fit the theme of the hackathon. In this game the character has to follow game hints that lead to the player answering the phone to a friend who sends information about the location of a portal to a magical world. The way 3d graphics engines work greatly interests me so for fun, instead of using a program like unity that does the 3d for you, for this project I aimed to create a 3d game using just JavaScript, jQuery, HTML, paint images and screenshots I would take of 3d objects.\n I created 3D objects using SkectchUp then screenshotted these scenery models from lots of different angles and used JavaScript and jQuery to control when these images were displayed to create a 3d game experience for the user. I also used Photoshop to make the images backgrounds transparent where appropriate. The game includes some third person scenes in which the players width and height is multiplied by scalar values based on its y-coordinate to create perspective and show when the player is close or far away. This scene also includes some quick first person moments which occur when an object of great importance to the games story appears and the user is able to view this item in first person. This was done to make sure the user sees this object up close and notices it. As the player opens the portal the world distorts a bit to empathise the magical powers of the portal. Magic dust also appears above the flashing portal. Once the portal is opened the magical world is all in first person. The player is transported to a magical castle which they can freely walk up and down one corridor of. The corridor appears clear at first but as soon as the player starts to walk an enchanted floating hat appears. \nWhen making the game I came across many challenges. One of these was that the number of screenshots needed to make a smooth running 3D game was too large. I had to compromise and limit the number of images used to a reasonable number. I also struggled with problems caused by code written for different stages of the game affecting thing in a part of the game they were not intended for. The solution to this was to give each stage of the game a boolean variable that tracks if it should have started running yet or not. This helped me keep track of which stage of the game the user was in and what code should and shouldn\u2019t run for this stage of the game. \nThe main thing I leant was how to make the 3d for the first person scene in the game (in the castle scene). In the future, to expand on the game I could make the game longer so that you can explore more of the castle.OxfordHackHannah Sheard\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 19, 2016 11:19 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Portal to a Magical Castle Game","project_tags":["javascript","jquery","html"],"project_url":"https:\/\/devpost.com\/software\/portal-to-a-magical-castle-game","keywords":"game,first,portal,make,person,player,also,magical,appears,user,images,scene,stage,castle,create,used,world,using,number,running"},{"level_0":529,"hack_vector":[[0.1360273957,-0.0905866697,-0.0243350007,0.0444214828,-0.0211383756,0.1368174106,0.2019740492,-0.025822375,-0.0245924219,-0.01061635,0.0171405412,-0.0677705705,0.145268783,-0.0664712042,0.0644427389,0.0007134957,0.205618307,-0.0087562175,0.0452930331,0.1311921626,-0.2455582321,0.0357142575,-0.0389604867,-0.0087683145,0.101892516,-0.0276299436,-0.0359239317,-0.1691537946,-0.0203260593,-0.0946609005,0.0674628988,-0.1123070568,0.0237123612,-0.0767565295,-0.014080978,-0.0250098743,0.121786736,-0.1425842643,-0.0593358502,-0.0116277076,0.0477049164,-0.1285709292,-0.1418596804,-0.0350913852,0.0724645182,-0.0497937314,0.0124861989,-0.0817807168,-0.0140934819,-0.2097279876,-0.1420058161,0.021688642,-0.1111463681,0.015349647,-0.214016363,0.1633155495,-0.1289944053,-0.0255514346,0.0451461673,-0.1100705564,-0.0738475546,0.0201431569,0.0809274465,0.0465287566,0.1080094576,0.0253013223,-0.0864453763,-0.1251487434,0.0301010627,0.0234279633,0.0639727414,-0.0391093008,0.0214387886,-0.1205983013,0.0262728892,-0.1279218942,0.1738566011,0.0010385235,0.0011189515,-0.1362124681,0.1143853068,0.1575064063,0.0520183295,0.1568837464,0.1152333021,0.2027426362,-0.0910113156,-0.0553478338,-0.0261081178,-0.0732313991,-0.1592744291,0.057080593,0.1019825041,-0.0439557582,-0.0097413529,0.0187356304,-0.160247758,0.2318877578,0.0115345949,-0.0661557242]],"hackathon_name":"OxfordHack","index":529,"project_description":"The Uber for HipstersGarrelt is an ambitious hitchhiker! \nWhen going from London to Oxford it costs him a lot of money!\nThat's why Garrelt hitchhikers!\nGarrelt misses security, comfort and fun when traveling to his admired destination.\nWe build Hitchhacking to make hitchhiking great again!Hitchhacking connects millions of drivers with matching Hitchhikers.\nWe match the direction of the drivers route, with the admired direction of the Hitchhiker.\nBy using advanced similiarity matching, we prioritze a matching of people, who share the same interests.\nSpeech messages with each request help to keep an authentic environment.We build the app as an Android App in Java. The Backend is running on an Apache maschine only throug php scripts. The communication is realized over json. The database is a mysql database.We had to advance the app's usability to make it comfortable for both participants use the app throughout a longer route. Additionally the driver shouldn't be distracted while driving. Keeping the app simple was a main aspect of the development. Moreover, the algorithm to find the correct direction of drivers without them having to type in a destination was a challenge and has still some room for improvement.We're proud of the simplicity of our API and the fact of using speech massages as a function to make both participant into contact.We learned a lot about the work with gps targeted development and the small challenges when working in Android Studio.We will need to advance our algorithm for finding people with matching directions, to make it more functional in urban areas.\nWe would like to implement speech recoginition for having less interaction with the app through the driver.\nOur matching algorithm for common interest has some more room for improvement and should be implemented as a self learning one.OxfordHackAndroid appalex979k\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:23 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hitchhacking","project_tags":["java","android-studio","php","mysql","json"],"project_url":"https:\/\/devpost.com\/software\/hitchhacking","keywords":"app,matching,make,direction,hitchhacking,algorithm,garrelt,speech,drivers,proud,people,destination,development,database,driver,route,lot,learned,hitchhiker,hitchhikers"},{"level_0":530,"hack_vector":[[0.1187604815,-0.090573974,-0.0337626077,0.0269236304,-0.0234599002,0.1073182449,0.190009132,-0.0041322242,-0.0182538759,-0.011059002,0.0164184645,-0.0808761716,0.1355021,-0.061148081,0.0763475075,0.0081505775,0.2092813104,0.0046010059,0.0342973806,0.1290172189,-0.2516349256,0.0283463579,-0.048880361,-0.0141146481,0.0809268951,-0.0217135083,-0.0325515606,-0.1755189747,-0.0228164252,-0.1051453054,0.0573810264,-0.1249333173,0.0128167933,-0.0890713409,-0.0002096826,-0.0202203467,0.0953366309,-0.1487655491,-0.0693966672,-0.017874049,0.0236474629,-0.1347965747,-0.1523712426,-0.0377032459,0.0690135285,-0.0777102038,0.01087246,-0.0841634274,-0.0229195785,-0.2016694993,-0.147469312,-0.0007072236,-0.0942014381,-0.0040045152,-0.2130653113,0.1700657606,-0.1230270267,-0.0350029171,0.0456762165,-0.1234724447,-0.0816033855,0.0303216521,0.0767875165,0.0565695055,0.0958939567,0.0313337594,-0.0902378261,-0.1238579452,0.0400653929,0.0142386332,0.0670244619,-0.0565004498,0.0272905417,-0.1027394608,0.0420661978,-0.1391100287,0.1633571535,0.0030866072,0.0115873106,-0.1312662065,0.1218308657,0.1634413153,0.0728166178,0.1600890458,0.0943775922,0.2053353935,-0.0954910815,-0.0541212857,-0.024378771,-0.0692644939,-0.1424407512,0.0497025847,0.1055089161,-0.0545480885,-0.021651879,0.0189701393,-0.180868566,0.2313502282,-0.004736566,-0.0855579674]],"hackathon_name":"OxfordHack","index":530,"project_description":"Work out the best place to live by choosing the method and length of your commutePeople don't always live where they work, but also don't want to spend too long on the train or in the car to get there. This is a problem we are now facing after graduation and finding jobs in new places. If you know two locations it is easy enough to query directly, but with hundreds of places within a reasonable distance, it is very difficult to work out the best options. Commute allows you to input your workplace, an amount of time you are willing to commute for and a method of transport.Given your work destination, choose how you would like to commute and the maximum amount of time you are willing to travel. Commute will show a map of potential places to live, with options to visualise layers of geographic data from ArcGIS OpenData in .geojson format.We aggregated data from a number of sources on UK locations in order to build a database of locations, names, population sizes and distances. This allowed us to filter the number of queries beign passed to the Google Maps Distance Matrix to improve loading times (and save requests to our API key!) After getting the travel time with Google, we then plotted the map on the front end with the Esri API and used their layers and OpenData to add contextual information.Finding reliable data on place names in usable formats was difficult. We used a .csv file from GeoNames and an excel spreadsheet from a Government FOI request. Parsing this data and storing it in the database in an efficient way was one of the biggest challenges.Producing a list of reasonable results in a reasonable time, for a genuine problem we have recently experienced. It was fun to see locations along the main train lines highlighted - also highlights the limitations of public transport in rural areas!Neither of us had much prior experience in javascript, so using the Esri API was a challenge but a rewarding one.We want to add a number of features - house price data particularly would make the tool much more useful to a wider audience. We would also like to find more data sources and allow the user to filter the results based on these. Finally, we'd like to add a second destination option, for couples who want to find somewhere central to live.OxfordHackRebecca Morgan\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 04:26 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Commute","project_tags":["python","html","css","javascript","esri","google-maps","django"],"project_url":"https:\/\/devpost.com\/software\/commute","keywords":"data,commute,locations,time,would,also,number,places,reasonable,like,api,live,work,add,want,used,difficult,results,map,finding"},{"level_0":531,"hack_vector":[[0.1306354105,-0.0889604315,-0.0296587367,0.0192420799,-0.0176107399,0.1189942434,0.1953009218,-0.0101854568,-0.031361606,0.0026356648,0.0213096105,-0.0943012834,0.1356390417,-0.0664075017,0.0790097639,0.018189095,0.2141567916,-0.0009377798,0.0342327133,0.131576553,-0.2440503538,0.0402537622,-0.0493529104,-0.0229424555,0.089760296,-0.0227442514,-0.0336973071,-0.1831111312,-0.0168376956,-0.1057143956,0.0685706213,-0.1225359216,0.0212712716,-0.0952284187,-0.0001812215,-0.0174048357,0.102987282,-0.1446543485,-0.057202436,-0.0230252016,0.0282319728,-0.1434607059,-0.1588018686,-0.0345496275,0.0744477212,-0.0553864799,0.0062227626,-0.0840869769,-0.016651772,-0.2064976394,-0.1459594518,0.0126136029,-0.0972380415,0.001262932,-0.2049772292,0.163941443,-0.1226387694,-0.0286825672,0.0462990329,-0.1214241907,-0.0684419945,0.0226663761,0.0804125518,0.0665202141,0.1007354259,0.0215021539,-0.0898507684,-0.1266681105,0.0399264917,0.0160542913,0.0777769759,-0.0539233796,0.0238453336,-0.1051575318,0.0406975597,-0.1468226165,0.1517551392,-0.0004162563,0.0129432632,-0.1223635674,0.1262822598,0.1572380662,0.0775676668,0.1649673879,0.0918611661,0.1960921735,-0.0962490514,-0.0586029589,-0.0233067665,-0.0723881051,-0.1399448216,0.0420890674,0.1000176966,-0.0592066385,-0.0176060926,0.0275222454,-0.1696308702,0.2196617424,-0.0106316721,-0.0854390711]],"hackathon_name":"OxfordHack","index":531,"project_description":"Plan and optimise your journey based on your hobbies and interestsSkyScanner API inspired us to do something useful with it. Although there exist projects that use SkyScanner API to optimize travel path by the price or the distance, we wanted to optimize it by another variable that might be more meaningful to a person. That's why we came up with interest-based traveling salesman problem enabling end-users to find their optimal journey based on their interests, for example, museums, pubs or theaters.The webpage takes the user's list of interest and their location as a starting destination, along the dates and the preferred radius of travel. The output is a journey planned on the map based on their interests at the same time minimizing the prize with the SkyScanner.The website takes the user interests as an input along with a current location as a starting point for TSP problem. It uses Google Maps API to find the closest major cities within the specified radius and computes interest-related best cities to visit based on the average rating of the places on Google Maps. The cities are then passed onto SkyScanner API to search for the cheapest flights and routes. All combinations of these routes are passed onto the Traveling Salesmen Problem which computes the best path. The path and coordinates are then passed back to Esri API and displayed as a route on the map.We had all the components working separately but with the limit of time we found it difficult to join them together smoothly. Because of this, a lot of details we wanted to include had to be omitted (for example displaying details of the route which is a very easy and logical next step), so that we could present the full product. Also, we used a lot of separate components, which was a challenge with respect to time.We all value the technologies that we learned, and above all the sense of achievement that came from fully working product that we achieved through teamworkthe use of various APIs, Django, how to interface between front-end and back-endWe want to include more information about the journeys and most of all, add more variables to optimize for example weather information.OxfordHackJola Mirecka\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:23 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HobbyHack","project_tags":["python","javascript","google-maps","esri","skyscanner","json","django","jquery"],"project_url":"https:\/\/devpost.com\/software\/hobbyhack-plan-your-journey-based-on-your-hobbies","keywords":"based,api,skyscanner,interests,optimize,cities,time,problem,end,example,path,interest,passed,journey,google,details,routes,route,location,radius"},{"level_0":532,"hack_vector":[[0.1450537443,-0.1095772684,-0.0235592891,0.0418625958,-0.0183732212,0.1386988759,0.1968254149,-0.0379112959,-0.0201588329,-0.0100116497,0.0252453648,-0.0615945086,0.1443320662,-0.0725465864,0.0627954602,0.0120485621,0.2129823565,-0.0085851615,0.0454760902,0.1259463429,-0.2395677418,0.0326110981,-0.0438533276,-0.0209903643,0.1106159985,-0.0337074101,-0.0330754705,-0.1840431541,-0.0219828747,-0.0954534486,0.0662439838,-0.1135812998,0.037517257,-0.0838573799,-0.0065522087,-0.0107413083,0.1130910516,-0.1435597837,-0.0490746275,-0.0032742901,0.0470773876,-0.1372696608,-0.159533903,-0.0264166631,0.0549414977,-0.0431960225,0.0208799504,-0.0765020624,-0.0295332354,-0.2158569992,-0.1455906928,0.0227930415,-0.1089793742,-0.0056426995,-0.2054959238,0.1551698297,-0.1249769703,-0.0190551411,0.039388977,-0.0945111811,-0.0648460537,0.0215550829,0.0749576166,0.0531897694,0.1103179678,0.0203266703,-0.097010985,-0.1253305972,0.0256536379,0.010856105,0.0686660111,-0.0473689809,0.0254790243,-0.1256910563,0.0277965143,-0.1210967004,0.1754755527,0.0014547205,0.0103803128,-0.1379248053,0.1257282048,0.1664675176,0.0534985624,0.1704051793,0.1004808322,0.2031116784,-0.0932713524,-0.0404768437,-0.019051427,-0.0776740462,-0.1411148161,0.060379751,0.0891985744,-0.0387690775,-0.0059667076,-0.0028771891,-0.154495582,0.2184510827,0.0092254309,-0.0714054555]],"hackathon_name":"OxfordHack","index":532,"project_description":"Onliine shopping made even easierHomePageBeing busy. And lazy.We used the Tesco API to search and suggest relevant items to people using sorting algorithms. This allows users to sort their items by price and nutritional content such as Calories, Protein, Fat or Sugar.Since we are dependent on Tesco's website, we faced problems when we realised we couldn't log into an account programmatically. We also encountered problems when trying to connect the front and back-ends.Our continued belief in the project even though everything was telling us to switch tactics.[Hichame] Using the networking feature of a browser to see the types of requests and content being sent.\n[Hichame] [Tolu ] Using the Tesco API.\n[All of us] Working on a tech project with complete strangers.\n[Chining] How to make a website from scratch\n[Eleni] My first hackathon was a great experience. My team help me to understand deeper the algorithmic thinking since I am beginner with programming. Also, I get familiar with languages that I have never worked with before.Tracking the user over period of time in order to predict their future shopping habits. (The initial plan was to) Automate grocery shopping by allowing the user to select their favourite\/common items (such as milk or chocolate). Create a spotify type page where users can just click a button and have recipe or mood based meals such such as \"Comfort Food\" or \"Mexican Night\".OxfordHackI focused on front-end development. I designed a website for our team, including  homepage, user's information page and teammate introduction page.Tolulope Ogunremi\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:22 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"LazyShopper","project_tags":["python","html","css","javascript"],"project_url":"https:\/\/devpost.com\/software\/lazyshopper-2i7quy","keywords":"using,items,tesco,also,hichame,shopping,content,api,since,project,problems,us,user,users,website,faced,familiar,working,experience,everything"},{"level_0":533,"hack_vector":[[0.1576984078,-0.1048084572,-0.031528566,0.0405613706,-0.0203720853,0.1155661494,0.1794090271,-0.0173157956,-0.0105046127,-0.0186505113,0.0136344917,-0.0704940483,0.1452453285,-0.0608476475,0.0754080266,-0.022548778,0.1703881323,-0.0123150731,0.0490404591,0.1397282481,-0.2521856129,0.0082032746,-0.039431937,0.0016605352,0.109486945,-0.0315146334,-0.0238451455,-0.1542028338,-0.0208898541,-0.1070717871,0.0480836257,-0.1127662212,0.0113748796,-0.0725893229,0.0024919496,-0.0289012026,0.103266947,-0.159834668,-0.0867458582,-0.0166455414,0.0583136752,-0.1089763641,-0.1199758276,-0.0235752426,0.0647539273,-0.0585051626,0.0149713363,-0.0948658884,-0.0242584925,-0.2035577446,-0.1755753905,0.0227381736,-0.1146366224,0.0150322393,-0.222340554,0.1748150885,-0.1052285656,-0.0372605547,0.0388664305,-0.1180217117,-0.0771105736,0.016656721,0.0622810088,0.0478526317,0.1070513427,0.0434500203,-0.0954494625,-0.1124690995,0.0030979107,0.0168748647,0.0697916821,-0.043960318,0.0187472627,-0.1189636961,0.0576088801,-0.110901922,0.1767293066,0.0007604356,-0.0276237186,-0.1341059059,0.1061056852,0.1555841863,0.0494415909,0.1468902379,0.1035139561,0.2186551839,-0.0747219026,-0.0597365387,-0.0284651835,-0.0463972837,-0.1397834271,0.0590289459,0.1164992005,-0.0432892591,-0.019453926,0.0095831258,-0.1716954708,0.2607295811,-0.0153761394,-0.0680885017]],"hackathon_name":"OxfordHack","index":533,"project_description":"Travel web app which lets the user choose his destination in novel ways (predefined, adding and computer vision).Find your way, everyday!I remember the first time Shu looked at me. He couldn t contain himself. 2 words popped out of his mouth. Those words will remain forever as our team name: Sparky Lashes. Jokes aside, our inspiration came from the fact that google trip was supposed to be a big hit, but it failed. Miserably. We tried to better it. We succeeded. Then we failed. Stay tuned for our story...Everything, but what s supposed to actually do. Getting attractive locations? CHECKED. Getting distances? CHECKED. Routing? Double checked. Improving travel time? Well...we are all about sightseeing. We take our time.Sleepless hours, spilled blood and dead bugs are no far from the truth. Coming from a background involving hardcore C#-ing, C++ and Django, we thought about using none of those! 24 hours, of which 23 trying to understand what we were actually typing and one to write this epic story... Our salvation came in the form of API-s and open source. We will never forget our stranger friends. Not only we made the web, but it actually runs.Crazy words, blue screen due to 100+ tabs and sleep deprivation. Not to speak about each and single new line of code. At one point, Facebook refused our conversations. We thought about using git. But it was not hardcore enough. While we were trying to figure out javascript...we got into jquery.. We tried to run away from it, but we weren't fast enough. During morning hours, we had a moment of weakness in which we just collapsed. We woke up 15 minutes later, with no memory of our code. Of course, this did not stop us! We had to keep fighting! We had to prevail! Cheap version of red bull after cheap version of redbull and we were closer and closer to deploying our project. One thing we forgot. We forgot to learn Chinese (Microsoft Cognitive Services).. little did we know..We can type jquery in 3 different ways. We added 3 more languages, including a bit of Chinese. We mumbled-jumbled our way thought this hack. We proved ourselves brave and limitless. We attended countless challenges, being involved in machine learning and competitive programming as well as in actually finishing our hack. We even won some points for our houses.Except for the languages, to trust each other. I mean, I found it hard at first to let another pair of hands mess with my code.Fixing the totally not existing bugs. Solving the NP-complete part of it. Some glory along the way. Voice integration for ease of access and semi-AI just to take a part of the challenge of deciding what to visit next. We consider ourselves community inclined, therefore we will provide a way of gathering parties for sightseeing. The users would be able to rate guides and propose trips. And, of course, our services will always have a free version.Carry on and accio Nimbus!OxfordHackAndrei Iordache\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:17 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Accio Nimbus","project_tags":["html","javascript","jquery","gps","json","css"],"project_url":"https:\/\/devpost.com\/software\/accio-nimbus","keywords":"actually,code,words,thought,one,time,checked,way,hours,version,challenges,cheap,course,came,story,chinese,bugs,supposed,sightseeing,closer"},{"level_0":534,"hack_vector":[[0.1281816661,-0.105373539,-0.0123899709,0.0335751884,-0.0282275882,0.1144294664,0.2081396878,-0.0074535059,-0.0318217948,0.0039186417,0.0215333495,-0.0535848439,0.1371684372,-0.0663096532,0.0733429939,0.0211952552,0.2140142322,-0.0059022941,0.0409797579,0.1294918358,-0.2485057116,0.0378517658,-0.0419044085,-0.0286939312,0.1048010141,-0.0273721386,-0.0319775343,-0.1867137849,-0.0003043773,-0.0932441503,0.0549951047,-0.1121293306,0.0241717137,-0.0889496356,-0.0164204054,-0.0162594169,0.108139731,-0.1456663609,-0.0589572117,-0.0038302415,0.0206838287,-0.1476590186,-0.1467234045,-0.0442564376,0.0588589497,-0.054350052,0.0107791172,-0.073359713,-0.003824136,-0.1974642277,-0.1267011911,0.0042291405,-0.1156055853,0.003107351,-0.193678692,0.1655476689,-0.1413269639,-0.0077778618,0.0388871804,-0.0977418795,-0.0682172924,0.0279277302,0.0794900283,0.068082884,0.1105168015,0.0088691749,-0.1002207771,-0.1364227682,0.0420301147,0.0106501421,0.064707391,-0.0555862896,0.015062415,-0.1175807565,0.0164752863,-0.1467016041,0.1631176025,0.0019317786,0.0271623079,-0.1403328627,0.1321323216,0.1619028151,0.0617567264,0.162202701,0.1185896397,0.2016222775,-0.11162927,-0.0279759672,-0.0152003756,-0.0840053186,-0.1569542438,0.0612945892,0.1025048867,-0.0389381424,-0.0001761693,-0.0000050242,-0.1603702605,0.2027229667,0.0227333792,-0.069623284]],"hackathon_name":"OxfordHack","index":534,"project_description":"As birds flock together, Flock offers a service to coordinate meetings in an international scale for businessesSmall and medium-sized remote enterprises may struggle to find the best locale to set up a meeting with employees based in various different countries.It provides the optimum location for people to congregate at minimum expense, which is of special importance for SME companies, for whom profit margins may be tight and who have no or small headquarters in few and disparate cities.We made use of genetic search and optimization algorithms.Defining the problem in a formal way using mathematic notation, in order to convert to a appropriate representation for the genetic algorithms.Our solution was designed to be easily scalable, such that meetings involving larger groups would be handled with minimum additional effort.Application of genetic algorithms. The power of API as regards the quality of data available, is an influential element to the whole solution.Enhancing it by introducing more parameters to the search function to increase to specificity and the power of the model and provide more detailed search results. Introducing hotel costs could give more accurate estimate of the true expense. The Skyscanner API has not the ability to show indirect routes between chosen airports, which limits the effectiveness of our model. Therefore the inclusion of this feature to the API could improve our solution.OxfordHackOguzhan Yigit\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:18 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Flock","project_tags":["python","skyscanner"],"project_url":"https:\/\/devpost.com\/software\/flock-2ca08q","keywords":"search,genetic,algorithms,api,solution,expense,may,power,minimum,small,model,introducing,could,feature,estimate,enterprises,enhancing,employees,element,effort"},{"level_0":535,"hack_vector":[[0.1405130625,-0.1198953986,-0.0085246749,0.0590999909,-0.0373372324,0.1539432257,0.1945028454,-0.0403902717,-0.0223852172,-0.0215190221,0.0046992009,-0.0159729589,0.1248964965,-0.0838400647,0.0248951931,0.0788244307,0.2556118965,0.031004142,0.0449178107,0.1054729447,-0.2147554904,0.0180573761,-0.0560873412,-0.0608145222,0.1276909858,-0.0135262106,-0.0614467189,-0.1897854805,0.0072295126,-0.0916292891,0.0298115816,-0.1047609076,0.0672846213,-0.0815729499,-0.0299234018,0.0077761216,0.1315114647,-0.1252831519,-0.019892903,0.0561805032,0.0373486765,-0.1482673883,-0.1836372614,-0.0399773084,0.0092422785,-0.0660452843,0.0326281004,-0.0358522758,-0.022394713,-0.2115229964,-0.0808069929,0.0305684414,-0.107299,-0.0512747914,-0.1348713338,0.162636891,-0.1452254206,0.0311637856,0.0115036434,-0.0194876138,-0.0342756771,0.0318498686,0.0739845708,0.0811383575,0.1363224238,-0.0284819677,-0.1279332042,-0.1599059403,0.0329960994,0.0083191972,0.0651205406,-0.0446332581,-0.0103487419,-0.1347797662,-0.0276907329,-0.0966703966,0.188469857,0.0194999781,0.0644408986,-0.1563002616,0.1276791394,0.1701274365,0.0453467593,0.1587598026,0.1305693984,0.1846302897,-0.1189940944,0.0228161551,0.0044188313,-0.1055483967,-0.121351935,0.0796634778,0.0583296716,-0.0056457259,0.0376006179,-0.047468178,-0.1184986159,0.1809336096,0.0640438497,-0.0715305358]],"hackathon_name":"OxfordHack","index":535,"project_description":"Find trips without even searchingOur web service is integrated with the Google Calendar API and occasionally checks whether the user has some free time in the following month, and if they do, it tries to plan a trip for them using SkyScanner.OxfordHackAndreea Marzoca\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:20 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Trippin","project_tags":["node.js","google-calendar","skyscanner"],"project_url":"https:\/\/devpost.com\/software\/trippin-h2cwit","keywords":"whether,occasionally,calendar,checks,following,free,google,integrated,month,plan,web,service,skyscanner,time,tries,trip,user,using,api"},{"level_0":536,"hack_vector":[[0.1225325167,-0.0793775395,-0.0243865997,0.0243600197,-0.0217344631,0.1061591431,0.2006295323,0.0018966306,-0.0360604785,-0.0151653634,0.015959356,-0.0839914754,0.1379421353,-0.0675520599,0.076180622,0.0066684028,0.1994181424,-0.0071113813,0.0380725414,0.132990405,-0.2298167795,0.0362996049,-0.0488082655,-0.0251698755,0.0913589969,-0.0316328332,-0.0298277661,-0.1802799851,-0.0317777209,-0.0881562755,0.0569281355,-0.1018209234,0.0226185173,-0.0902743861,-0.0113138547,0.0006951551,0.1117764339,-0.1383395046,-0.0636934564,0.0038308743,0.0296047162,-0.1381474733,-0.1558857411,-0.0293326024,0.0729509592,-0.0765874088,0.0195701942,-0.0956175849,-0.0149833467,-0.2151381373,-0.1573671997,0.0075801783,-0.1048204303,0.0067072189,-0.1991310716,0.1707413048,-0.1327733696,-0.0236213431,0.0469451807,-0.12275289,-0.0809752047,0.0275887493,0.0707518533,0.0585807264,0.1132239178,0.0154342949,-0.093793869,-0.1275536567,0.0295589138,-0.0017289893,0.0614404939,-0.0579565018,0.0040418361,-0.1107160896,0.0469311737,-0.1298101693,0.1760243028,-0.0092462245,0.0165059157,-0.1329489052,0.128773436,0.1540721357,0.073667936,0.1489468962,0.1014475375,0.2031502128,-0.0933322832,-0.0432140753,-0.0114401635,-0.0777107179,-0.1557489634,0.0477641486,0.0976777673,-0.0482318141,-0.0222803652,0.0030176276,-0.1800846606,0.2308809906,0.0048750723,-0.0766927898]],"hackathon_name":"OxfordHack","index":536,"project_description":"Scrapes data from Skyscanner to identify peak travel periods to different regions.The original plan was to integrate both the Skyscanner API with the Esri API to come up with a hack that would allow people to identify peak travel periods to different popular destinations around the world. This would be useful to those who are avoiding the crowd, and who are looking for the cheaper destinations.It generates a heatmap on the WebGL API, which identifies the destinations with lots of flights, using a self-written Gaussian function. It draws data from the Skyscanner API to do so.The original idea was to use the Esri API; however, there were technical issues with parsing the data into a geolocation database object that can be rendered by the layer, so we migrated to the WebGL API, feeding it with the JSON data drawn from the Skyscanner API.The Esri API did not offer some of the functionalities that we needed, i.e. we could not process the data to be passed into the Layer, without having access to their server (which is a paid service). There were issues with making calls to the Skyscanner API, which was only resolved in the night. We had to manually write the gaussian blur for the heat map, before mapping it to the globe. After mapping it to the globe, we had to re-plot the points on the globe, without the data stacking.Despite the setbacks, we finally managed to complete the project, even though we had to start from scratch during the night.How difficult it is to hack into APIs without proper documentation and few features, as well as the difficulty in deploying to AWS.Mapping the data to history would allow people to plan their holidays in advance, so that they can make the best choices. We would also like to be able to write an algorithm that would identify the next best (nearest and cheapest) destination that people can look for as an alternative.OxfordHackSara Chen\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:19 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"jetblazinit","project_tags":["skyscanner","three.js","javascript","webgl-earth"],"project_url":"https:\/\/devpost.com\/software\/jetblazinit","keywords":"api,data,would,skyscanner,people,destinations,without,globe,esri,mapping,next,original,night,gaussian,layer,write,hack,identify,plan,issues"},{"level_0":537,"hack_vector":[[0.137209475,-0.0818670616,-0.0224946141,0.0484106466,-0.0206885599,0.1505085975,0.2136827111,-0.024404671,-0.0284693483,-0.0079170074,0.0226906538,-0.0684304982,0.1456864774,-0.0657132417,0.0717913136,0.0132005382,0.2260508239,0.0094257854,0.0298206918,0.1269178987,-0.2329452038,0.0329475254,-0.0525278449,-0.026273258,0.1128165498,-0.024757782,-0.0348169953,-0.1989445239,-0.0406676419,-0.0772801787,0.0811453834,-0.1139148995,0.0316948965,-0.0966161713,-0.0273858253,-0.0002364149,0.1157679111,-0.1201370582,-0.0482384376,0.0040828334,0.0398657583,-0.1356447488,-0.1538791656,-0.0248416942,0.0670551956,-0.0517258942,0.0156789757,-0.067040734,-0.0282719489,-0.2183770984,-0.1145928055,-0.0027961645,-0.0972828716,0.0021148585,-0.1752678156,0.1569883376,-0.1365130395,-0.0090186093,0.0300794244,-0.0967838839,-0.0650373325,0.0205187015,0.0868199915,0.0435745493,0.1204388663,0.0030214051,-0.0959473699,-0.1376395673,0.0482797921,0.0120127611,0.0489457436,-0.0417711958,0.0191736296,-0.117265664,0.0041165622,-0.1292890012,0.185519591,-0.0031013761,0.0255048014,-0.1366690546,0.1254767329,0.1643988043,0.0654198155,0.1550593078,0.1021238267,0.2030701041,-0.0909975767,-0.0275829919,-0.0056309015,-0.0930273086,-0.161607936,0.0607066378,0.0836370066,-0.036422018,-0.0043625883,0.0078647984,-0.144658953,0.2255460471,0.021677807,-0.0720441714]],"hackathon_name":"OxfordHack","index":537,"project_description":"Create websites with your voice!VoicerWe wanted to use the Microsoft Cognitive Services to build something.It allows you to create websites with your voice.\nYou say things like 'Set title, Oxford Hack' to add a title.\n'Add image of cookie', adds an image of a cookie.We used Django to build the server and parse the user's input.\nThe Bing search API provides us with the images to add to theWe needed to develop simple voice commands which reduce errors in detection while also being able to parse things on the backend.The detection is very accurate and pretty fast as well. The webpages look very good and are take seconds to set up.Detecting and parsing voice commands.Adding different templates for the webpages so that the user has more customisation options.OxfordHacki worked front endAnirudh Pillai\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:02 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Voicer","project_tags":["django","javascript"],"project_url":"https:\/\/devpost.com\/software\/voicer","keywords":"voice,add,cookie,set,webpages,image,commands,user,title,things,detection,build,parse,customisation,detecting,well,develop,different,django,create"},{"level_0":538,"hack_vector":[[0.1407069415,-0.1426720619,0.0063680494,0.0717200711,-0.0622830801,0.155552417,0.1685156524,-0.0461819805,-0.0308463927,-0.0140294908,-0.0008793208,0.0433455706,0.122762911,-0.0721392557,0.0018013703,0.0937656015,0.278088361,0.0539213344,0.0423331968,0.0799455419,-0.1829196513,-0.0047950228,-0.0510386489,-0.0762947425,0.1656664759,-0.0093579711,-0.0765577778,-0.1830044538,0.0563751347,-0.0931304172,0.0152855171,-0.1035114899,0.0746449977,-0.0578230321,-0.0270154271,0.0201034211,0.1370796561,-0.1000430733,0.0027286366,0.1001140326,0.0390099064,-0.1522835046,-0.1858308762,-0.0372870825,-0.0578450412,-0.0604832284,0.0461132601,0.0066646673,-0.0156801883,-0.1697739661,-0.0162124205,0.0333824083,-0.0982449576,-0.0913271159,-0.0819455013,0.1561661512,-0.1472341716,0.0811553523,-0.013710076,0.0631526932,-0.0029486183,0.0443364196,0.0385847427,0.0980713144,0.1377508342,-0.0592758358,-0.1408247203,-0.1837038249,0.0204710793,-0.0053923209,0.0734259039,-0.0279518273,-0.0139515288,-0.1464440674,-0.0828516707,-0.0735652968,0.1909014583,0.0325511284,0.1142665148,-0.1349143833,0.1148574725,0.152344808,0.017084673,0.1317215711,0.1592993736,0.1421458274,-0.1545255333,0.0780107677,0.0087416181,-0.1181436703,-0.067282252,0.1013901159,0.0146542238,0.0251045935,0.1010494605,-0.0962134749,-0.0579357073,0.1325442791,0.1096054241,-0.056034293]],"hackathon_name":"OxfordHack","index":538,"project_description":"Remove politics from social mediaRemove all political posts from your social mediaOxfordHackRashiq\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:03 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Censor","project_tags":["android"],"project_url":"https:\/\/devpost.com\/software\/censor","keywords":"social,remove,posts,political,media,inspiration"},{"level_0":539,"hack_vector":[[0.1345318258,-0.1387137622,-0.016713867,0.0431068912,-0.029521171,0.1299500167,0.1851640344,-0.0292979628,-0.01899115,-0.020633772,0.0027815811,-0.0367047079,0.126984939,-0.0563694648,0.0563445278,0.0273304675,0.2298839837,0.0124265691,0.0455243699,0.1285862774,-0.2437003106,0.0349921919,-0.0315117463,-0.036243476,0.1184108183,-0.0106799565,-0.035567157,-0.1803546697,0.0055050692,-0.1037558988,0.0504600964,-0.1313203275,0.032840997,-0.0826862529,-0.0160982404,-0.0376253091,0.1105802134,-0.1506367922,-0.05307322,0.0067476062,0.0299282596,-0.1499435306,-0.1523365378,-0.0642388612,0.0309355613,-0.0610354319,0.0120562185,-0.0507430658,-0.0270955637,-0.2014109492,-0.120205611,0.015865013,-0.1138303652,-0.0301750973,-0.1676605046,0.1716408879,-0.1245292276,-0.0019506159,0.0288328752,-0.0639922023,-0.0596969761,0.0261875466,0.0636826605,0.0639645159,0.104211852,0.006651443,-0.1239564717,-0.1446606368,0.0312382299,0.020602975,0.0841726139,-0.0558153167,0.0262978766,-0.1286702156,-0.0080521535,-0.1303565204,0.1709707677,0.0171627048,0.037598595,-0.1440364271,0.1268681884,0.1635822952,0.0430661328,0.177777499,0.1296292394,0.19521752,-0.1234992519,-0.0152532086,-0.0185255911,-0.075053066,-0.1281485111,0.0735123307,0.1036385968,-0.0395858325,0.0202597752,-0.0240652934,-0.1427783966,0.2108061463,0.0203827918,-0.074889794]],"hackathon_name":"OxfordHack","index":539,"project_description":"The worlds first political leadership insurance product.TyrannyEscapeThe millions of suffering Americans stuck under Trump.It allows customers to insure themselves against the rule of a tyrannical political leader. If a customer insures themselves against the rule of a particular election candidate, then in the event that that candidate wins the upcoming election, TyrannyEscape auto books them a flight out of the country, using the SkyScanner API, within 12 hours.Built by Mack - using python with the Skysanner API.Finding a way to scrape the internet for betting odds on upcoming election candidates.Integrating the SkyScanner API.There aren't that many left wing world leaders right now...Going global! And finding betting odds for election candidates further afield than Europe, so that TyrannyEscape can insure those with even more at stake in their leadership elections than us here in the West.OxfordHackOwen Mears\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 06:02 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"TyrannyEscape","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/tyrannyescape","keywords":"election,api,tyrannyescape,finding,insure,odds,using,upcoming,betting,rule,built,candidate,candidates,skyscanner,world,event,global,flight,europe,going"},{"level_0":540,"hack_vector":[[0.1436725706,-0.1155280173,-0.018494105,0.0868643969,-0.0438649654,0.1661137342,0.1995928138,-0.0549717471,-0.011149805,-0.0524287261,0.0160446074,-0.0141391447,0.1577091515,-0.0769233555,0.0473988727,0.0022524027,0.2374143302,0.0202891268,0.0553734936,0.1141881049,-0.2081430852,0.0230367798,-0.0477864109,-0.0291686598,0.1366288215,-0.0110934367,-0.0439159572,-0.1756769121,-0.0175906494,-0.0805153921,0.0455022603,-0.1197241694,0.0451996513,-0.0623162687,-0.0370515361,0.0052028503,0.1507849693,-0.1240714639,-0.0492082871,0.0409973226,0.0648554638,-0.1220359579,-0.1628479809,-0.0213770699,0.0082468633,-0.0631998777,0.0411300771,-0.0534647889,-0.0410851538,-0.2196106315,-0.112339586,0.0321699232,-0.1072546691,-0.0234585442,-0.1538150012,0.1592168957,-0.1400615871,0.0063857776,0.0110279322,-0.0439298637,-0.0626399443,0.034090694,0.0766701326,0.0487475656,0.1263262779,0.0029347311,-0.1097377613,-0.1468166411,0.011607537,0.0111686233,0.0476045758,-0.0291365683,0.0128577529,-0.1411023289,-0.0131518058,-0.0675396845,0.2150541991,0.0153386584,0.0316515565,-0.1575080007,0.119286254,0.1692120582,0.0388426781,0.1429314464,0.1322018951,0.1873928457,-0.1042312309,-0.0091096135,-0.0020924422,-0.089742206,-0.1321365684,0.0821713954,0.0732342526,-0.0002671956,0.0367007516,-0.0572950095,-0.1187378913,0.2246953547,0.0452344157,-0.0592924207]],"hackathon_name":"OxfordHack","index":540,"project_description":"Goofy BotThe idea originally was to build an app for family and friends to fix up a vacation based on various factors. Didn't work, had to pivot a few hours before submission.Goofs aroundUsed Node for the server side logic, microsoft bot framework, Facebook messenger platform,Don't want to rememberBuilt something that we won't be ashamed to submitSome vague idea about server side processinggit rm -rOxfordHackAayush  Chadha\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 05:48 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"OxBot","project_tags":["node.js"],"project_url":"https:\/\/devpost.com\/software\/oxbot","keywords":"idea,built,side,server,work,family,inspiration,hours,goofs,git,friends,framework,fix,facebook,factors,logic,challenges,build,bot,based"},{"level_0":541,"hack_vector":[[0.1548489779,-0.1122573987,-0.0348937437,0.0506117642,-0.0158038475,0.1265128255,0.1819100827,-0.0238458533,-0.017139649,-0.0321670771,-0.0038370006,-0.0657933354,0.1520385593,-0.0615718886,0.0620633923,-0.014803485,0.1794329733,-0.0112732844,0.0565060116,0.1219804585,-0.2403868586,0.0283720642,-0.039761249,0.0005705886,0.1106487736,-0.0388934873,-0.0299738608,-0.1515581459,-0.0475625284,-0.0936797932,0.0635649562,-0.1087585241,0.0403234512,-0.0652930439,-0.0215254035,-0.0271220244,0.1256770045,-0.1460909247,-0.0675403923,-0.0049512824,0.0678793415,-0.1219563112,-0.1420349926,-0.0270691086,0.0592927672,-0.0627137497,0.0193969812,-0.0950818732,-0.0274103843,-0.218323797,-0.165745005,0.0253734253,-0.1128078625,0.0129630547,-0.2156873345,0.1488172859,-0.1319616288,-0.0385729447,0.0455422066,-0.0973907784,-0.0838117227,0.0226203371,0.0573085733,0.0188533738,0.1012479812,0.024169961,-0.0965677649,-0.1153177023,0.0110975699,0.0268865973,0.0668827817,-0.0534802377,0.0010882518,-0.1237615943,0.031929519,-0.1012489274,0.1919282377,0.0069468399,-0.0051857606,-0.1423071325,0.0947835371,0.152554974,0.0384613127,0.1576041728,0.1151480004,0.20870848,-0.0831642672,-0.0329621322,-0.0148233166,-0.0826814026,-0.1377711147,0.0697350428,0.0998875797,-0.0392695554,-0.0148849552,-0.009373121,-0.1685396433,0.2605340183,0.0120875062,-0.0650976896]],"hackathon_name":"OxfordHack","index":541,"project_description":"A wand that reacts to movementSince this is a Harry Potter themed hackathon, I felt the need to create something matching the theme that allows us muggles to get a taste of what it's like to be a wizard.When the user moves the wand, the 7 LEDs change colour and pattern depending on it's orientation. Requires some enthusiatic acting and imagination.This uses an Arduino Uno, an accelerometer, 3 breadboards, 7 neopixels and a portable phone charger. I used code from an existing project featuring a wand that controls a tv, and edited it to fit the LEDs and the effects I wanted. Accelerometers are notoriously inconsistent so it took some time to get the numbers right- they were usually very different than the original code.Initially had some issues getting the LEDs going before realising I used the wrong resistor (took far too long to realise). Getting the values right took time. The main issue I am still dealing with is the consistency of the accelerometer- it sometimes gives off random numbers as feedback, which in turn calls functions at the wrong time. Because of this I had to remove a (very pretty!) rainbow function, as it was getting called randomly.Proud I got it all done in a reasonable time before the deadline! It's not my most ambitious project but it was a bit of fun.I've never used an accelerometer before so I learned how the values are read and used. I also learned a bit more about the neopixel library- mainly that it will be very difficult for me to write my own patterns for my LEDs.I would have loved to have taken this off the breadboard and onto an actual wand, but due to time and soldering constraints that was not to be. It would definitely be fun to do that in the future.OxfordHackLeah Thomas\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 05:47 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hacking is Magic","project_tags":["arduino"],"project_url":"https:\/\/devpost.com\/software\/hacking-is-magic","keywords":null},{"level_0":542,"hack_vector":[[0.1382989138,-0.0940691754,-0.0351734757,0.0251078773,-0.0079510752,0.119622916,0.1870563924,-0.0218111277,-0.0148329781,-0.0287020933,0.0167880636,-0.0873222798,0.1431694329,-0.0623278804,0.0686971694,-0.0009202352,0.2088027,-0.015447937,0.0397257172,0.1404325813,-0.2438133508,0.026703719,-0.0412795767,-0.0071910676,0.0943846852,-0.0405973084,-0.0218113028,-0.171737656,-0.0459036604,-0.1029755771,0.0761004537,-0.1127213761,0.031388022,-0.0780398473,-0.0047610551,-0.0230314657,0.102798298,-0.1409795582,-0.0500434004,-0.0237984154,0.0497136042,-0.1135175228,-0.1534394473,-0.0328669958,0.0771640241,-0.0714160129,0.0150340814,-0.086733602,-0.030042123,-0.2275282294,-0.1598683894,0.0069412543,-0.0975126624,-0.0054244585,-0.218331188,0.1554436982,-0.1244995669,-0.0497092009,0.049697645,-0.1193768084,-0.0781181529,0.0223492514,0.0677080974,0.0254530217,0.0962662548,0.0288508832,-0.0871137157,-0.1183490679,0.0276229363,0.0153972926,0.0691307262,-0.0510262921,0.0156769454,-0.1069085598,0.035818778,-0.1214930937,0.1740522981,-0.0040788297,-0.0010806728,-0.130674094,0.1043390185,0.1571769118,0.0404435545,0.1722711176,0.0909768939,0.2039380074,-0.0865767002,-0.0515867472,-0.0336907692,-0.0734146684,-0.1445778906,0.053055793,0.0961704403,-0.0419909172,-0.0389999188,0.0152640883,-0.171273157,0.236566022,0.0015000368,-0.0834178701]],"hackathon_name":"OxfordHack","index":542,"project_description":"Mindreading virtual card trick: you show the webpage, they name a card, you click the link, their card appears. MAGICFirst ever hack, learning using code academy as I went along. Wanted to produce a website that allowed anybody to do a magic trick with very little practice. Work as a professional magician, and want to change my answer after I perform from, 'sorry, I can't tell you how I did that' to 'here's something that you can learn'.It's an online magic trick. Read the instructions page first if you are using it. A person thinks of a card, or three people (one picks the colour, one picks the suit, one picks the value), they can change their mind as much as they want and you do not influence their decision. Whatever they say, when you click on the link a picture of their chosen card comes up.I used the code academy tutorial to learn how to initially write the basic code structure in html and css. Then I learnt how to put in the appropriate images and links onto the page, and on each letter. Didn't know what software to put the code that I had written into, so I just coded into the text file on my wordpress website on a new page. Started by coming up with a set of words that could be split into 4 instructions, to represent the four suits, with 13 characters in each instruction (minus spaces) to represent the 13 potential card values in each suit. Then coded each individual letter to correspond to each playing card (this took the bulk of the time as I had to attach an image link to every letter). I then reformatted all the information so that it was in one line as a sentence and added a title. Created a new instructions page and added a link to that. Then coded in the pictures and links, as well as centre lining the text and making it look nice. Finally I added a link from the instructions to my website (not coded during the hackathon), because... why not right?The biggest challenge I faced was convincing myself to start learning to code, then it was ensuring that all of the code was formatted and the website looked nice. Coming up with the word combination was difficult, as was ensuring that the link looked as much like one single hyperlink as possible.Finally got around to learning to code, and am now looking forward to working on many more exciting projects. Also proud to have come up with the idea and then gone on to execute it. Proud that it was all written in actual code rather than just editing the words on wordpress as I usually do with my website.How to use html\/css. How to create headings, change font sizes, import images, add hyperlinks, add image hyperlinks, reformat code to become one sentence, work continuously for a few hours without procrastinating.Definitely going to design some more magic tricks that people can do for their friends using the platform. Hope to make them even better and far more difficult to figure out. Maybe also mix coding with some real life magic tricks. Also hope to do a psychology page where people can take part in experiments (eg. implicit association tests) to see if they have implicit biases and how they compare to the rest of the population.OxfordHackRomil Depala\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 04:58 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Online Magic Trick - Amaze Your Friends","project_tags":["html","css"],"project_url":"https:\/\/devpost.com\/software\/online-magic-trick-amaze-your-friends","keywords":"code,one,page,link,magic,website,coded,instructions,card,change,also,letter,added,proud,using,learning,people,picks,trick,online"},{"level_0":543,"hack_vector":[[0.1424156874,-0.1143617705,-0.0225802697,0.0408278517,-0.0267292187,0.1444210112,0.2043815553,-0.0391926765,-0.0283829682,-0.0087220501,-0.006333509,-0.0556061007,0.1391439438,-0.078220427,0.0456778929,0.0245379265,0.2354101837,0.0113566089,0.0417301059,0.1203153208,-0.2348103821,0.0401100703,-0.0377022848,-0.0287698116,0.1329518259,-0.0202439409,-0.0460959934,-0.1810057908,-0.0154090282,-0.0934831947,0.05898536,-0.1356294453,0.0500607565,-0.0827522427,-0.0418806337,-0.0298103075,0.1323000044,-0.1375456154,-0.0425464101,0.0113036064,0.0398238227,-0.1481403857,-0.1555041671,-0.0394244418,0.0495520048,-0.0521075875,0.0176727735,-0.0601721555,-0.0287640598,-0.2028850913,-0.1197599098,0.0240617283,-0.1073545143,-0.0036357795,-0.173109144,0.16189605,-0.143226698,-0.0009983784,0.017399393,-0.0661752224,-0.0608734787,0.0171058439,0.0715576634,0.0507143773,0.1117296293,-0.0011532919,-0.1041379422,-0.1366877258,0.0333379097,0.0351918302,0.0811839029,-0.0591986775,0.0145259919,-0.1325849444,0.0086240564,-0.116426222,0.173709631,0.0111647584,0.0350995138,-0.135879457,0.1308138222,0.1536033005,0.0607912354,0.1664524823,0.1233845651,0.1873950064,-0.1144572198,-0.0195445251,-0.004471506,-0.086870268,-0.1402115971,0.059045855,0.0872005075,-0.0306283087,0.0139587577,-0.0157949086,-0.1379357874,0.2123656124,0.0353810899,-0.0754766539]],"hackathon_name":"OxfordHack","index":543,"project_description":"A quick way to access emergency contact numbers for your locationThe page. This is it.With increasing numbers of refugees coming across many countries, the importance of being able to access the emergency services at any point is vital.The site is a very light weight (<90KB) response in any language with the emergency service numbers for the area.The site runs a simple node.js backend for fetching the numbers and translating the strings, and it fetches all of the numbers from JSON.Keeping the load size low whilst ensuring it is clear what everything on the site does.Keeping the total page size <100KB while still being usefulWorking with AWS is more complicated than I original foresaw.Removing the font-awesome dependency to half the further decrease the delivery size (~25KB after removal)OxfordHackConnor Lurring\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 05:36 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Emergen-c","project_tags":["node.js"],"project_url":"https:\/\/devpost.com\/software\/emergen-c","keywords":"numbers,kb,size,site,emergency,keeping,awesome,accomplishments,js,inspiration,increasing,importance,half,foresaw,font,fetching,fetches,access,everything,ensuring"},{"level_0":544,"hack_vector":[[0.136207357,-0.092055209,-0.0326292627,0.0340087861,-0.0203708299,0.119561173,0.2034511119,-0.0123472475,-0.0323375873,-0.0066057392,0.0140851093,-0.078515932,0.1387261301,-0.0740704015,0.0668278411,0.0137890829,0.2131397873,-0.0061883726,0.0355049334,0.1373173445,-0.2400588691,0.0359170586,-0.0471775346,-0.0153483776,0.1117580011,-0.027310865,-0.0381800644,-0.1797703803,-0.0225233622,-0.0911245793,0.060973376,-0.1185135543,0.027002871,-0.086928688,-0.0131071704,-0.0053127981,0.1161203459,-0.1375309527,-0.0552130267,-0.0032884511,0.0367204696,-0.1406209767,-0.1598804593,-0.0300820079,0.0677961633,-0.0606937297,0.0163488481,-0.0835610554,-0.0164006129,-0.2079512924,-0.1407294422,0.0099107735,-0.105657585,0.006542007,-0.201221019,0.1635474265,-0.1347418427,-0.0214092024,0.0357749835,-0.1076529399,-0.070921436,0.0299123339,0.0785498098,0.0574029163,0.1124644205,0.0130571015,-0.095268853,-0.1282354146,0.0332873352,0.0129400212,0.0685604811,-0.0502668396,0.0169758163,-0.1107190549,0.0371497087,-0.1289940476,0.1681846827,-0.0079441238,0.0130981151,-0.1326232105,0.1262568384,0.1598854512,0.0680419803,0.162227124,0.0952803195,0.1965794563,-0.0984237939,-0.0439220779,-0.0146588041,-0.0822749734,-0.1463980079,0.049585443,0.0927480906,-0.0400702208,-0.0043659871,0.0108590079,-0.1674843132,0.2255172879,0.0128780017,-0.0755749494]],"hackathon_name":"OxfordHack","index":544,"project_description":"An application which filters 9GAG images based on users happiness level when they saw a particular image.In our opinion, 9GAG transformed from a website which has really funny images, to a website which is full of disgusting or sad things. We decided to improve this, focus more on the quality of a meme website.The application can get images from these kind of websites, for now in the prototype it has just predefined images, and it can monitor the users reaction to images whenever they open one, by taking a picture of them with the webcam, and using the Cognitive Service API, we detect their happiness level. In the end, pictures get ordered according to the average happiness level registered from users reactions.We built it using just Java, and different libraries of it (eg. JavaFX).The biggest challenge was to figure out what the binary image data actually means on the Microsoft API webpage, since no clear example was given.We are proud that in the end we make it to work, and also had the chance to use artificial intelligence in our project.We learned a lot about Java, Java FX and different libraries.The next step for Emotion filter is to be deployed in websites and work together with the database of images, to be able to sort them according to happiness.OxfordHackCsongor Barabasi\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 05:23 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Emotion Filter","project_tags":["java","excel","json"],"project_url":"https:\/\/devpost.com\/software\/emotion-fileter","keywords":"images,happiness,website,java,built,get,learned,level,libraries,next,end,emotion,different,proud,work,users,according,using,api,websites"},{"level_0":545,"hack_vector":[[0.1651556045,-0.1152659059,-0.0150097003,0.0665809363,-0.0184428729,0.1614717394,0.1927814484,-0.0424854569,-0.0228588469,-0.0142261721,0.0173823722,-0.047752142,0.1391202062,-0.075285688,0.0478812233,0.0227665249,0.222096771,0.00842903,0.0575874411,0.1092507839,-0.2315322608,0.0306175295,-0.0396291614,-0.0315268673,0.123199001,-0.0307854209,-0.0361445472,-0.1924104691,-0.019608669,-0.0766849816,0.0627836362,-0.0994072184,0.0538106263,-0.0922663286,-0.0368204117,-0.0063962941,0.1247819141,-0.1335374266,-0.052106753,0.0268220883,0.0504649393,-0.1372633278,-0.1582385153,-0.0318518803,0.0418280214,-0.0438454747,0.0212812498,-0.0608391166,-0.0216706842,-0.2209370732,-0.1275443435,0.0236712936,-0.1209192798,-0.0189434458,-0.1723055989,0.1591582149,-0.1321892142,0.004305698,0.0291247759,-0.0554272942,-0.0494070463,0.022662187,0.0751879662,0.0582398437,0.1272994727,-0.0037092352,-0.1158917919,-0.1333722025,0.013717277,0.0116418423,0.0638517514,-0.0382488258,0.0039452636,-0.1373600662,-0.0064440994,-0.1088260114,0.2033197135,0.0002214364,0.0300199408,-0.1516231447,0.1261904836,0.1621904224,0.0369792581,0.1621335745,0.1152190045,0.2027609199,-0.0896383449,0.0003964925,-0.0112647843,-0.084289737,-0.1352938712,0.0764374062,0.0624627993,-0.0296230819,0.022876706,-0.0181537867,-0.12575984,0.2158150971,0.0410600789,-0.0694528893]],"hackathon_name":"OxfordHack","index":545,"project_description":"A note taking app powered by AIWe all use Note taking apps like Evernote or Google Keep (some of us use them pretty heavily), but AI\/Machine Learning could make the experience more richer and user friendly.Android Studio and Project Oxford APIsMicrosoft's website isn't showing the subscription page where you can access subscription keys for other APIs, so not able to use the other API's at the momentMany things about AI, ML and NLPComplete this app, polish it and launch it for public next year!OxfordHackI worked on building the Android appSuyash Srijan\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 19, 2016 11:02 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AINotes","project_tags":["android","java","microsoft-project-oxford"],"project_url":"https:\/\/devpost.com\/software\/ainotes","keywords":"use,ai,todo,notes,next,user,offer,apis,note,nlp,subscription,year,generate,google,information,heavily,improve,extract,inspiration,keep"},{"level_0":546,"hack_vector":[[0.1416747123,-0.093059577,-0.0157956593,0.0508020855,-0.0140203498,0.1331713647,0.1971833855,-0.0272968952,-0.0399925075,-0.0037540402,0.02432275,-0.0720902458,0.154603824,-0.0695902258,0.0607674532,-0.0001548,0.2061834335,-0.0112609658,0.0525612757,0.137479648,-0.2446812987,0.0449217707,-0.0426219702,-0.0050851917,0.1201675832,-0.0315011106,-0.0466322303,-0.1755950898,-0.0166970994,-0.0897151083,0.0748405829,-0.1125755683,0.0291062631,-0.0754063725,-0.0051949448,-0.0176124331,0.1261241883,-0.1345809698,-0.0507965833,-0.014015099,0.0534988344,-0.1473623067,-0.157403931,-0.0329088978,0.0605533868,-0.0353260115,0.0053652101,-0.0864450634,-0.0074238572,-0.2063959837,-0.1346699893,0.0264577493,-0.113661103,0.0273420084,-0.218905285,0.1554831415,-0.1374050826,-0.0176317953,0.0463323332,-0.1096513793,-0.0643155947,0.0274509229,0.085098803,0.057057023,0.1070732549,0.0247936323,-0.0859878734,-0.1337899417,0.0259854328,0.0243066028,0.0682599321,-0.0390000157,0.0284405854,-0.1078362092,0.0277418215,-0.1288469434,0.1683713943,-0.0078770341,0.0105848648,-0.127321735,0.1113061979,0.1487400532,0.0574503392,0.1534826905,0.1089983955,0.202115804,-0.0951399878,-0.0603381656,-0.0277594905,-0.0758691877,-0.1445972472,0.0533114634,0.0955903754,-0.051371403,0.0033493733,0.0194928981,-0.1552660763,0.2203798294,0.0118261585,-0.0634931028]],"hackathon_name":"OxfordHack","index":546,"project_description":"Easy typing for everyone.LogoOccasionally, we find ourselves tapping the wrong button on the relatively small software keyboard on our smartphones. Thus was born the idea of a new input for phones - a way of typing that would get rid of the typing aspect entirely by streamlining the process.FineType allows the user to input text characters purely through the use of hand motions and without the use of an on-screen keyboard.We used Java and the Android Studio IDE to build FineType.We found that the process of switching between groups of characters and between the characters inside each group a tedious process that kept bugging out for us. Eventually, the fix was found as a time delay for switching.We're proud of the way we graphically represented to the user when they switched between the blocks of characters and which block they were on.We learned how to access accelerometer readings from an Android phone, along with negating gravity in accelerometer equations. We also learned how to create a GUI interface in Android Studio, an IDE with which we had no experience at all for creating apps - in fact, we created our first ever mobile app here at OxfordHack.FineType's next steps would be to smooth the user experience by reducing the amount of errors that come from unexpected diagonal movement, smoothing the amount of noise experienced by the app from random movement, and adding features like capitalization, spacing, and repeating characters in a row.OxfordHackI worked full-stackI worked full stack for FineTypeTyler  Xu\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 04:55 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"FineType","project_tags":["java","android-studio"],"project_url":"https:\/\/devpost.com\/software\/finetype","keywords":"characters,finetype,process,user,learned,android,accelerometer,switching,experience,next,movement,keyboard,studio,found,proud,app,would,ide,typing,way"},{"level_0":547,"hack_vector":[[0.1559005827,-0.108696498,-0.0256949533,0.0470146835,-0.0125733316,0.1302821487,0.2026638985,-0.0227946714,-0.0273603275,0.004056911,0.0092744576,-0.0736095086,0.1432419866,-0.0663777664,0.0749969035,-0.0159042366,0.1782404631,-0.0120326774,0.0536605082,0.1078979895,-0.252024591,0.0343662612,-0.0418276787,-0.0069278423,0.1082097515,-0.034888342,-0.0297054462,-0.1722333729,-0.0319059007,-0.0868942887,0.075306721,-0.116338402,0.0220213346,-0.0859096423,-0.03007764,-0.0236030035,0.1047997251,-0.1523428857,-0.0750167817,-0.0090187816,0.044899147,-0.1300378293,-0.1283068061,-0.0255634505,0.0691499487,-0.0480064563,0.0083091035,-0.0931677297,-0.0173483118,-0.1998490542,-0.1541059911,0.0121030509,-0.1183677912,0.0279934369,-0.2099979818,0.1550935358,-0.1406292468,-0.0252552647,0.0383089483,-0.1081386879,-0.0793165565,0.0230287276,0.0743916631,0.046957612,0.1065388247,0.0276928525,-0.0994847566,-0.1068498045,0.0166671872,0.0228875373,0.0655873194,-0.0535833091,0.0191210564,-0.1208026558,0.0444008484,-0.1313337088,0.1802143902,0.0046404018,0.0024018306,-0.1393899918,0.1249748841,0.1509492099,0.0614318773,0.1498425007,0.1071158946,0.2196945846,-0.0785293356,-0.0338151492,-0.0111208893,-0.0671254545,-0.1410860866,0.058434464,0.1036306843,-0.0470787846,-0.0125025902,0.0156782568,-0.1634558439,0.2314871699,0.0074504572,-0.0620039403]],"hackathon_name":"OxfordHack","index":547,"project_description":"Telepathy-enabled computing using the Muse EEG Headband.We wanted to explore what can be achieved in terms of thought-based computer control using the Muse Headband.One can use the headband's accelerometer to control the cursor, but the thought pattern classification subsystem does not work very well, as it is very hard to collect clean training data without a pure lab environment (e.g. no distractions, etc.).We also built a simple prototype of an interface which would allow a user to track how focused they are during their work. If someone were to, perhaps, spend a long time working without being productive, this app could provide insights into why this was the case: it would highlight cases when a user would have trouble focusing.We used Python and Ruby, as well as the Muse research tools. For the data analysis, we used Jupyter and scikit-learn. For the perfect UX and design, we leveraged Comic Sans MS\u2122 and a patented marquee implementation.It's very difficult to analyze and classify traces of EEG activity in such a limited timeframe. Moreover, collecting clean data with no distractions is nearly impossible in hackathon conditions.We collected quite a lot of data of people performing various activities while wearing the Muse headband. The accelerometer-based computer control interface also works quite well!EEG-powered human-computer interaction is possible, i.e., the signal does exist in the data. With appropriate training data collection and analysis, one could definitely build a real-time computer control system using EEG.We would like to improve our data collection conditions, and build a more robust pipeline for the data cleaning.OxfordHackFirst time working this closely with custom hardware, and definitely the first time analyzing EEG data. This was a blast to work on, despite the fact that the results still require more polish before being capable of working in practice.Some tangential contributions to the mouse tracking software and the dashboard for the EEG activity.Ioan Andrei Barsan\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 04:37 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"We Use Muse","project_tags":["ruby","python","scikit-learn","muse"],"project_url":"https:\/\/devpost.com\/software\/we-use-muse","keywords":"data,would,control,muse,computer,well,eeg,headband,build,built,clean,collection,quite,conditions,based,could,analysis,distractions,interface,also"},{"level_0":548,"hack_vector":[[0.1548544019,-0.1101784483,-0.0361278728,0.0560622886,-0.0324758813,0.1504632533,0.1967678815,-0.0405745767,-0.015213036,-0.0079225954,0.0147493863,-0.047686439,0.1444719583,-0.0611271486,0.0712920576,0.0041765594,0.2204079777,0.0096354913,0.0390447229,0.1077621877,-0.2239599079,0.0308197346,-0.0513940938,-0.0160473827,0.1286487728,-0.0224665552,-0.0289267339,-0.1851094663,-0.024574725,-0.0723709092,0.0645201132,-0.1240534782,0.0365447067,-0.0938338265,-0.0413902886,-0.0067085233,0.1238440424,-0.1287723333,-0.0639966801,0.0104101375,0.0378629491,-0.1287001967,-0.1506649405,-0.0220465716,0.0493019521,-0.0512878336,0.0225480869,-0.0641449243,-0.0263367742,-0.2074145526,-0.1259918958,-0.0012491267,-0.1090179235,-0.0134079475,-0.1713705361,0.1545030177,-0.1271981597,-0.0037594712,0.029975595,-0.067823641,-0.0641824231,0.0226640739,0.0866426975,0.0446675122,0.1112919077,-0.0053837607,-0.112269327,-0.1333962083,0.0321434289,0.0212492552,0.0694899336,-0.0404811166,0.0198799483,-0.1312527061,-0.0038598122,-0.1260925084,0.2034635544,0.0037946608,0.0280903466,-0.142690897,0.1258909702,0.1624496132,0.0508327298,0.1706695706,0.1178634688,0.1884189844,-0.1078622043,-0.0128508545,-0.0056062639,-0.0948998779,-0.1469480544,0.0686678439,0.0943201557,-0.0242359526,0.0281909276,-0.0196097177,-0.1333538443,0.2378912121,0.0315158255,-0.0807260349]],"hackathon_name":"OxfordHack","index":548,"project_description":"Super simple CDN, just include it inline with your resource calls. It auto scales over the AWS infrastructureCDN landing page and instructionsSimulated results with a slow server response timeWe wanted to get a better understanding of the features of AWS and learn about how incoming traffic can be managed and routed across multiple machinesIt takes your remote assets and caches them on our high speed SSD backed AWS infrastructureIt uses express to accept incoming traffic and caches the content it finds to disk.It auto scales and uses some really cool advanced AWS featuresTidy up the code base and probably privatise it for my own use because it would be super expensive to run publicallyOxfordHackPandelis Zembashis\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 03:31 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Project Cambridge","project_tags":["express.js","node.js","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/project-cambridge","keywords":"aws,incoming,uses,traffic,features,caches,code,high,get,finds,express,expensive,disk,cool,content,would,cambridge,infrastructure,better,base"},{"level_0":549,"hack_vector":[[0.1365370452,-0.0677660108,-0.0415996611,0.0237966422,-0.0159892626,0.1434354633,0.2145381719,-0.0303250775,-0.0147646843,0.0010799306,0.0138216754,-0.0955610424,0.1252119988,-0.0576956905,0.0874912962,0.0015854795,0.2084097564,0.0112100141,0.0254566725,0.1206913292,-0.2201592773,0.0503332652,-0.0527918451,-0.023729885,0.1006234437,-0.0019552489,-0.0197734665,-0.1932778209,-0.0429408327,-0.0805610344,0.0709360689,-0.1386166215,0.0360313319,-0.1210825816,-0.0162018705,-0.0113015631,0.1070792228,-0.1362542957,-0.0752268508,-0.0200333446,0.0187945589,-0.1482636631,-0.1420947462,-0.0280027259,0.073849529,-0.0523212068,0.0016719571,-0.0810284764,-0.0372416712,-0.2046134919,-0.1482341588,-0.0006617241,-0.0928403735,-0.0034586678,-0.1716139317,0.1604505926,-0.1229642853,-0.0194227286,0.0356435403,-0.120453842,-0.0781604201,0.0142986905,0.0926922783,0.0456876494,0.0971157849,0.0113118272,-0.10605634,-0.118460685,0.054145582,0.0293836556,0.0710597485,-0.0557722859,0.0345192328,-0.119716987,0.034318123,-0.1435897648,0.1675260663,-0.0048172316,0.0177442301,-0.1277466565,0.1234721616,0.1488835067,0.1047248542,0.1593259722,0.0788440257,0.1810133904,-0.0879812241,-0.0503160432,0.0055601522,-0.078955926,-0.1589842737,0.0342381485,0.108653605,-0.0563400127,-0.0062673977,0.0263001118,-0.1577431411,0.2346444875,-0.0148658315,-0.0928703547]],"hackathon_name":"OxfordHack","index":549,"project_description":"If your life was a movie, which would be the soundtrack of it? Use Tune My life to discover it!Home pagePhotos obtained, want to generate a playlist?Generating playlist...If your life was a movie, which would be the soundtrack of it? Tune my life is a platform which collects your Instagram photos and, after running computer vision on the photos, generates the perfect Spotify \nplaylist that matches with your photos' story.We wanted to develop something using sentiment analysis.Tune my life collects your Instagram photos and, after running computer vision on the photos, generates the perfect Spotify playlist that matches with your photos' story.We built the platform with Python and used Flask for the server. The photos are obtained using the Instagram API and then processed with Microsoft cognitive services in order to apply the sentiment analysis and retrieve the data. Finally, the playlist is generated using the Spotify API according to parameters such as acousticness, danceability, loudness, tempo, balance, etc.API's restrictions (Pending approval of instagram to give public access), how to determine the music attributes from the parameters obtained when running cognitive analysis over the images, deploying to the servertl;dr -> It works!\nWe have used some technologies that we hadn't use before and the results are pretty accurate.How to use Spotify's API, Instagram's and Microsoft cognitive services. Also we did some research related to the topic we discovered relations between feelings and music attributes.OxfordHackI worked on the backend, merging the APIs data and defining the main workflow. Configured Instagram APIvictor perez\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 20, 2016 03:27 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Tune my life","project_tags":["python","flask","html5","javascript","css3","jquery","spotify"],"project_url":"https:\/\/devpost.com\/software\/tune-my-life","keywords":"photos,instagram,life,api,spotify,using,use,tune,cognitive,running,playlist,analysis,microsoft,platform,generates,collects,perfect,computer,related,parameters"},{"level_0":550,"hack_vector":[[0.1412142068,-0.1181172431,-0.0298696961,0.0358219147,-0.0044521433,0.120277144,0.2075894177,-0.0175159127,-0.0371482968,-0.0233694445,0.0004080972,-0.0690803006,0.1405463368,-0.0622688159,0.0478746854,0.0089631546,0.2114634365,-0.0159382485,0.0387184098,0.1470452249,-0.2514030337,0.0437018573,-0.0250393394,0.0029982675,0.1342034489,-0.0345164835,-0.035358239,-0.1729638278,-0.0389409512,-0.0972960666,0.082291007,-0.124365285,0.0331398062,-0.0592035539,-0.0105112037,-0.0392482132,0.1109118909,-0.1362138391,-0.0340383165,-0.020611858,0.0626540259,-0.1559370756,-0.1530223042,-0.0549834557,0.0699132383,-0.0560622253,0.0015477861,-0.0681431592,-0.0248029865,-0.2153132558,-0.1210961118,0.0111523578,-0.0965413526,0.0187897012,-0.2280936092,0.154777959,-0.1518297195,-0.0424766093,0.036185395,-0.1063909307,-0.0767061114,0.0238916036,0.0564071573,0.0121542756,0.0996928439,0.0287252087,-0.0939668939,-0.1265802979,0.0420373045,0.0290812943,0.0669984967,-0.0577975512,0.0209619589,-0.0971716493,0.0209183041,-0.1201532185,0.1463449001,-0.0121074831,0.0192729961,-0.1219241619,0.0949741304,0.1494713724,0.0370580256,0.1815286726,0.0996265262,0.2034667283,-0.1103570089,-0.0349851996,-0.0283112768,-0.0830114037,-0.1314783841,0.0676057488,0.0821153447,-0.0413697772,-0.0334270261,0.0181769002,-0.1675791144,0.2154004723,0.0174906887,-0.0538977869]],"hackathon_name":"OxfordHack","index":550,"project_description":"3d magic castle gameThis is a game with a magic theme to fit the theme of the hackathon. In this game the character has to follow game hints that lead to the player answering the phone to a friend who sends information about the location of a portal to a magical world. The way 3d graphics engines work greatly interests me so for fun, instead of using a program like unity that does the 3d for you, for this project I aimed to create a 3d game using just JavaScript, jQuery, HTML, paint images and screenshots I would take of 3d objects.\n I created 3D objects using SkectchUp then screenshotted these scenery models from lots of different angles and used JavaScript and jQuery to control when these images were displayed to create a 3d game experience for the user. I also used Photoshop to make the images backgrounds transparent where appropriate. The game includes some third person scenes in which the players width and height is multiplied by scalar values based on its y-coordinate to create perspective and show when the player is close or far away. This scene also includes some quick first person moments which occur when an object of great importance to the games story appears and the user is able to view this item in first person. This was done to make sure the user sees this object up close and notices it. As the player opens the portal the world distorts a bit to empathise the magical powers of the portal. Magic dust also appears above the flashing portal. Once the portal is opened the magical world is all in first person. The player is transported to a magical castle which they can freely walk up and down one corridor of. The corridor appears clear at first but as soon as the player starts to walk an enchanted floating hat appears. \nWhen making the game I came across many challenges. One of these was that the number of screenshots needed to make a smooth running 3D game was too large. I had to compromise and limit the number of images used to a reasonable number. I also struggled with problems caused by code written for different stages of the game affecting thing in a part of the game they were not intended for. The solution to this was to give each stage of the game a boolean variable that tracks if it should have started running yet or not. This helped me keep track of which stage of the game the user was in and what code should and shouldn\u2019t run for this stage of the game. \nThe main thing I leant was how to make the 3d for the first person scene in the game (in the castle scene). In the future, to expand on the game I could make the game longer so that you can explore more of the castle.OxfordHackHannah Sheard\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 19, 2016 11:19 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Portal to a Magical Castle Game","project_tags":["javascript","jquery","html"],"project_url":"https:\/\/devpost.com\/software\/portal-to-a-magical-castle-game","keywords":"game,first,portal,make,person,player,also,magical,appears,user,images,scene,stage,castle,create,used,world,using,number,running"},{"level_0":551,"hack_vector":[[0.146109581,-0.0994939208,-0.0243576653,0.0482970215,-0.0281378161,0.1532688737,0.2112080753,-0.0457121581,-0.0129795959,-0.0143859228,0.0225040372,-0.0456944518,0.1349901706,-0.0709814653,0.0562198907,0.0094497511,0.2304447591,0.0115504535,0.0405477993,0.1246371418,-0.2301982939,0.0409553647,-0.042521473,-0.0289461482,0.1079351902,-0.0178480241,-0.0308416486,-0.1852449626,-0.0066503435,-0.0899337456,0.0576197207,-0.1256331801,0.0369048193,-0.0836444274,-0.014818198,-0.0134098167,0.1253916174,-0.1369406432,-0.0594339557,0.0003441976,0.0389450938,-0.1420260966,-0.1463941485,-0.0382648334,0.0495811291,-0.0474951938,0.0151956957,-0.0591259114,-0.0295951273,-0.2048132867,-0.1324127764,0.0224413257,-0.1100040153,-0.0108081,-0.1782134026,0.1522628367,-0.1222746372,-0.0116567528,0.027577335,-0.0796430781,-0.0553532504,0.0185648948,0.0887739733,0.057112135,0.1159137487,0.0065888148,-0.1015878469,-0.1297265887,0.0343486853,0.0207540188,0.0624740794,-0.0420987159,0.031716954,-0.1282507628,0.0080996733,-0.1346005648,0.1752206087,0.0087003969,0.0157186743,-0.1470331252,0.131573379,0.167292133,0.0505201444,0.1779852509,0.1102893725,0.1969219148,-0.1059705466,-0.0345403329,-0.0177970361,-0.0804966986,-0.1505913436,0.0625790507,0.0904170498,-0.0327070579,0.017692022,-0.0039892611,-0.1422441602,0.2247353047,0.0116727762,-0.0753511488]],"hackathon_name":"GreatUniHack Fall 2016","index":551,"project_description":"Location based social meetup app for students. Exchange contact info instantly using your phone.Loneliness is widespread - recent research (M. Barker, D. Clarke and T. Cox) shows that loneliness is a chronic problem for 17% of students in Higher Education: i.e. in a university of 10,000 students, 1700 of them may well be suffering long-lasting feelings of loneliness. \nhttp:\/\/www.lboro.ac.uk\/services\/cds\/counselling\/common-problems\/loneliness\/User can either join or create new social meetup with others to do activities together like eating, studying or sports.\nAfter meeting up the app lets users exchange all contact information using NFC, so all it takes is just putting both phones close to each other.Using geolocalization and Estimote Beacons we built an Android app, that tries to tackle the problem of loneliness among students. We have used Amazon AWS to host our Node.js server (because node.js is the best dev language out there #jokesFromThePast #MLHSpring2015). We utilized Google Maps API for Android to show the user's current location and the events.Tap Tap Technology startup.GreatUniHack Fall 2016Android app's UIs design and development.Miko\u0142aj Wawrzyniak\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 12, 2016 06:12 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"StudentMag.net || TapTap Technology","project_tags":["java","android","javascript","node.js"],"project_url":"https:\/\/devpost.com\/software\/studentmag-net","keywords":"loneliness,students,app,tap,js,using,user,android,problem,built,node,feelings,exchange,www,events,estimote,either,geolocalization,host,google"},{"level_0":552,"hack_vector":[[0.1232525706,-0.0763480365,-0.0320106968,0.0335062593,-0.011483104,0.1233960837,0.2080469579,-0.0185684394,-0.0430346429,-0.0105672525,0.0097136647,-0.0819597021,0.1354590207,-0.0706748143,0.0579933263,0.0150405709,0.2069759369,-0.0184030775,0.0330755636,0.1451244503,-0.2313353568,0.0463816002,-0.0356410518,-0.0076061185,0.113384299,-0.0203756671,-0.0381318554,-0.1729497761,-0.0374380164,-0.0847561583,0.0699409619,-0.1164632589,0.0324335434,-0.075852856,-0.0168348905,-0.0117118666,0.1219891608,-0.1298042983,-0.040111091,-0.0041261343,0.0472414978,-0.1420853436,-0.1570090801,-0.0379651599,0.0782401711,-0.0540431924,0.0072963596,-0.0839760527,-0.0113463076,-0.2196751535,-0.1354559511,0.0149186486,-0.0997175425,0.0264043342,-0.2110206038,0.1582153291,-0.1468038857,-0.0263729319,0.0393865891,-0.1232235879,-0.0736241341,0.0210026782,0.0770598128,0.0404456817,0.1147505194,0.0166063998,-0.0854066089,-0.1257344335,0.0473628268,0.0187189914,0.0618845448,-0.0505659394,0.0097993119,-0.1016056687,0.039924562,-0.1230960339,0.1600700319,-0.0152883902,0.0135177113,-0.1314166188,0.1149766892,0.1572440267,0.0692645013,0.1681423187,0.0965562314,0.1982729137,-0.1015752479,-0.0532466955,-0.0149375303,-0.0860336423,-0.1630378813,0.0444649495,0.1030509397,-0.0426425897,-0.0236306097,0.0266453754,-0.1745274961,0.2223006934,0.0168222934,-0.0667452514]],"hackathon_name":"GreatUniHack Fall 2016","index":552,"project_description":"A simple and affordable way to see building spaces in VRThe Web UILanding PageThe idea arose at the Great Uni Hackathon 2016. The challenge announced by Noma was to create a solution to the following problem:How do we help a potential occupier understand size and available space options in a building without physically \ntaking them there?We began with the end user in mind. Who would actually be using this product?The operator is going to be the agencies trying to let the spaces in the buildings. The user would be anyone interested in occupying the building. We do not make assumptions about the technical abilities of either of these users. Hence we needed to devise something which was intuitive to use, but not too difficult to set up. Virtual reality is one option, as it allows the potential occupier to 'walk' around the office, and get a real feel for the size.We couldn't use an Oculus Rift. Here's why:We decided to go instead with the Google Cardboard:There are two parts to the system, the website, and the mobile application.The Website is for use by the operator - the building space retailer. It provides a very simple interface which allows the user to draw out the scene, and then see a very basic visualisation of how the scene might look in three dimensions. It provides options for visualising the scene, clearing any mistakes, and sending the data over to the mobile application.The mobile application was built for Android, and allowed the display to be configured for Virtual Reality. With simplicity in mind, the user only needs to launch the app, request the data from the website with a simple click, then put the phone in the headset to have a look around.The website was developed with the standard suite of web languages: HTML, CSS and JavaScript. For the CSS, we used Bootstrap to ensure that there was a consistent style guide, and to make the webpage pseudo-responsive. For the 3D modelling and display, we used three.js to provide a JavaScript wrapper for OpenGL. We also used jQuery to send AJAX requests to build the API.We took the following approach to building the website:The application was build with Unity, which provides tools to create Virtual Reality scenes. The application connected to the API and downloaded a matrix representing the geometry of the space. It then goes through the matrix and procedurally generates the space. The user is then able to move around the scene by using the phone's gyrometer, and by performing different actions.Who knows? :)GreatUniHack Fall 2016I was responsible for leading the team and building the website part of the application.Struan McDonough\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 03:33 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"VSpace","project_tags":["unity","html5","css3","javascript","jquery","php5","apache","three.js"],"project_url":"https:\/\/devpost.com\/software\/vspace","keywords":"application,website,create,virtual,unity,user,reality,phone,building,scene,matrix,space,mobile,api,around,use,used,would,using,provides"},{"level_0":553,"hack_vector":[[0.1421312988,-0.0931135565,-0.0293405056,0.0409193039,-0.0106134471,0.1333343983,0.2041679472,-0.0319463424,-0.0271123033,0.0040480322,0.017324293,-0.0790225118,0.145783782,-0.0671054572,0.0728713498,-0.0110257091,0.1959537864,-0.0184516646,0.0469956957,0.1234383062,-0.2393208593,0.0532117747,-0.0434445329,0.0027338949,0.118062526,-0.0284755155,-0.0276392363,-0.1772077382,-0.0312281381,-0.0789750069,0.0832326189,-0.1273838282,0.0286990758,-0.0881802291,-0.0211782977,-0.0184069015,0.1159467176,-0.1378845125,-0.061302565,-0.0255038422,0.0452491753,-0.1472129077,-0.1437577754,-0.0323539227,0.068204619,-0.0408989042,0.0032920388,-0.0881077424,-0.0177940372,-0.2030078322,-0.1517122537,0.0169624668,-0.1128142774,0.0327150561,-0.2158489823,0.1502320617,-0.1410975754,-0.0293892771,0.038194146,-0.1132508367,-0.0773848146,0.0239087027,0.0837015882,0.040479999,0.1000423431,0.0225766618,-0.0871681869,-0.1173441485,0.0310518946,0.0267787632,0.0680448934,-0.0480747223,0.0364613049,-0.1127118617,0.0410059765,-0.1289745718,0.1744037569,-0.0041844584,0.0028166631,-0.1285175532,0.119498834,0.1475953013,0.0665286109,0.1604874581,0.1000017449,0.1991659254,-0.0906490833,-0.0515625961,-0.0130051626,-0.0728791654,-0.1439146399,0.0524079129,0.1007994413,-0.045800101,-0.0058725583,0.0192400124,-0.1584977061,0.2282598764,0.0041526156,-0.0690107271]],"hackathon_name":"GreatUniHack Fall 2016","index":553,"project_description":"Extending human sensory perception to wi-fi signals with musicWimphonyWe have all had thoughts of what it would be like to travel within the internet. Wimphony, a combination of the words wifi and symphony, is an application that can bring us one step closer to that dream.In reality we just wanted to build something cool and representing wi-fi signals sounded like it fit the bill.Wimphony takes an Android phone and uses the built in wi-fi antenna to scan for networks around and their signal strength. It then generates a piece of music for each wi-fi network and places them in a virtual world at a location relative to their real world position. You can then explore this virtual world using a Google cardboard, with spacial perception of the sounds and by extension the wi-fi networks.We divided the building of the app into an Android component, music generation, back-end plumbing and VR. The music generation and back-end plumbing were done in Python with Flask sitting on top of it. The VR component was written using Unity and C#.We chose this project explicitly because we would all be working in areas that we were not really comfortable in. This meant that we ran into our fair share of problems along the way, but also that we learnt a bunch whilst doing so.Actually getting music generated from a wi-fi network was a big moment for us, as was placing this sound into the virtual world as a point source. More importantly however, every member of the team pushed themselves to learn many new things.Getting the app fully integrated so that there was end-to-end data flow would be the next step. After that, the codebase would need to be secured if it was to sit on the public internet for any time whatsoever. We could also improve and diversify the music generation algorithm, for example including different genres of music or using different instrument synthesisers\/polyphonic tunes.GreatUniHack Fall 2016I worked on the Android app and acted as resident Python\/C# consultant.I was responsible for designing the sound generator and synthesizer in python. The final result of my work is able to take input of names of available wi-fi networks and use them as seeds for a random number generator. Than it generates a short sequence of musical notes for each wi-fi network visible. I also worked on the Android side, reading data off the wi-fi antenna and establishing a connection to a server.Worked on the visual delivery on the app, creating complex scenes in Unity3D with Google VR support; taking in data about audio positioned points from the backend server and creating binaural and spatialised scenes for content consumption.Created the database, http input\/output and website, mainly using python(flask, sqlalchemy) and a little html\/css.Cameron MacLeod\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 03:38 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Wimphony","project_tags":["android","flask","amazon-web-services","postgresql","unity","google-cardboard","python"],"project_url":"https:\/\/devpost.com\/software\/wimphony","keywords":null},{"level_0":554,"hack_vector":[[0.1250896007,-0.1069924459,-0.0346235149,0.0489429161,-0.0230211355,0.1364598572,0.1838600785,-0.0315167047,-0.015325442,-0.0183745772,0.0182280838,-0.068966046,0.1480416507,-0.0833313763,0.0534054451,0.0261091571,0.221675083,-0.0116028069,0.0395671502,0.1246203482,-0.2414449602,0.0210932363,-0.050920628,-0.0121005122,0.1254668981,-0.0260798074,-0.0380030125,-0.1760997623,-0.0177715588,-0.0929796174,0.0608822703,-0.1141928285,0.046618674,-0.0757672489,-0.022513181,-0.0099611795,0.1199302971,-0.1433321536,-0.0348033942,0.0042991978,0.0456476696,-0.1178339571,-0.1719224453,-0.0245316606,0.0534443706,-0.0593544059,0.0251127332,-0.064643763,-0.0220761001,-0.2247811109,-0.1383994669,0.0152917095,-0.0983403847,-0.0016891337,-0.197974205,0.1652245224,-0.1311589777,-0.0189298466,0.0245637484,-0.0894205794,-0.0645350739,0.0218918603,0.0775748938,0.0557604395,0.111488089,0.0140057793,-0.0888031274,-0.1379233301,0.0316568688,0.0167671908,0.0613267757,-0.0440782197,0.015883889,-0.1208986714,0.0164224952,-0.0984711424,0.1927339733,0.0046398211,0.0157021042,-0.1426508874,0.1223896518,0.1731666774,0.0496416911,0.1673201472,0.1033815593,0.1955333799,-0.0998692811,-0.0380628183,-0.0235889349,-0.0863377377,-0.1381182224,0.0617232658,0.0919631869,-0.0270129852,0.0062232781,-0.0100620892,-0.1498330832,0.2253626585,0.0366511606,-0.0817392766]],"hackathon_name":"GreatUniHack Fall 2016","index":554,"project_description":"A cheap and accessible market designed for students' needsLanding PageLogin\/SignupAdd offer PageProducts PageProducts FilteringDaily insights of a troubled student's lifeStudent Black Market connects students from all across the country in order to help them trade objects or services they are interested in. Think large: you have a deadline the next day and have no idea whatsoever how to solve it or no one to ask for help. With Student Black Market you can get help in no time from peers from every corner of the United Kingdom. Need a new desk or books your teacher asked for? You can trade with anyone on this easy-to-use and accessible platform.Using Django for the back-end and HTML\/CSS for front-endA lot of debugging due to using Python and connecting the front-end to the back-end took quite some time. Also, uploading photos to a database proved quite difficult to doWe finished the whole app as we fully planned itWe learned a few tricks and workarounds in DjangoWe'll implement a chat and buy system for the app in order to help connect the studentsGreatUniHack Fall 2016I dealt with the back-end in Django and I also connected the front-end to the back-endCosmin Nicolae Bresug\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 03:45 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"StudentBlackMarket","project_tags":["css","html","javascript","python","django"],"project_url":"https:\/\/devpost.com\/software\/studentblackmarket-6l18e5","keywords":"help,end,student,time,learned,django,students,order,black,back,market,quite,trade,app,next,front,using,deadline,day,debugging"},{"level_0":555,"hack_vector":[[0.139591381,-0.0855692849,-0.0277527999,0.0532235429,-0.0284744948,0.1420108974,0.1788577586,-0.0261027664,-0.0071434961,-0.0409262665,0.0207108334,-0.0627705529,0.1392686814,-0.0635624751,0.0580200925,-0.0225482062,0.2020430416,-0.0004245828,0.0598276258,0.129862994,-0.2416038364,0.0096693318,-0.0379552282,-0.0036986805,0.0998117849,-0.0208381545,-0.0242322329,-0.1572782397,-0.0241843928,-0.1076893881,0.0457345285,-0.1069044694,0.0226174071,-0.0670233294,0.0047925999,-0.0241923984,0.1191186011,-0.1441822648,-0.0763596445,-0.0063280403,0.0619336553,-0.1043239683,-0.1386881769,-0.0345127098,0.0559202172,-0.0691154003,0.0179324765,-0.0777062029,-0.0180266984,-0.2173319757,-0.1585032344,0.0276742056,-0.1060872599,-0.0021968263,-0.2217951566,0.1635966897,-0.113518931,-0.0388476402,0.0496089123,-0.1095039994,-0.0677769259,0.0145805869,0.0754769742,0.0339791551,0.1094697714,0.0412316546,-0.0901419446,-0.1319682747,0.0168306194,0.026612753,0.0620855354,-0.0370265804,0.0146428477,-0.1177312285,0.0377757698,-0.1140977293,0.1790075004,0.0129252467,-0.0061033121,-0.1430139542,0.0964127555,0.1589529365,0.0408190452,0.1683747172,0.1135822758,0.2055250257,-0.0852494836,-0.0577807464,-0.0421541557,-0.0604421869,-0.1393875033,0.0619086176,0.1058553308,-0.0438279919,-0.0131171308,0.0061296104,-0.1684570163,0.2624805272,-0.0008229947,-0.0812233686]],"hackathon_name":"GreatUniHack Fall 2016","index":555,"project_description":"An Android app that helps university students motivate themselves and organise their timeThis was directed at the Barclays Challenge \"Hack to half your worries\", which aims to help students at university in some way. Inspiration came from Sam out of personal need.So far the app imports your Google Calendar timetable. We intended it to also ask for your preferences when it comes to study time (hours per week, subjects per day, etc.). The email addresses of your lecturers for each subject would also be saved and your location mapped whenever a scheduled lecture begins. The app will send an email to your lecturer on your behalf if you're not where you're supposed to be at that time with a random message, saying how silly you are, which is hopefully an incentive to come.After getting Android Studio to work, we tried to figure out the Google Calendar API and Android programming in general. This was difficult unfortunately, given our rusty knowledge of Java. We used a virtual machine to test the app.None of us had ever programmed for Android before, and it took a while to download the API. The app right now is still more of a proof of concept.We learned that developing for Android isn't as simple as you think. We're more eager than ever to learn new technologies and technical skills in our own time. Being our first Hackathon, we burned out pretty quickly and found it hard to work past the early morning hours. Even though things didn't quite go to plan, our team spirit has never been stronger.Once we get a better grasp of Android app development, we expand the app to its full potential.GreatUniHack Fall 2016Sam Rimington\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 04:55 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Studuler - Stu[dent] [Sche]duler","project_tags":["android-studio","java"],"project_url":"https:\/\/devpost.com\/software\/studuler-stu-dent-sche-duler","keywords":"app,android,time,email,inspiration,google,supposed,hours,calendar,per,ever,api,also,learned,work,grasp,figure,first,found,full"},{"level_0":556,"hack_vector":[[0.1450362056,-0.1298073232,-0.0123161199,0.0632210895,-0.0405746363,0.1376725733,0.1821012646,-0.0244091004,-0.0137541881,-0.036463052,0.0050071725,-0.0141274389,0.13793917,-0.0741332993,0.0349114165,0.0462634936,0.2356136888,0.0088973334,0.0598562546,0.1140792742,-0.2307772189,0.0071007516,-0.0362673327,-0.0448204689,0.1298305839,-0.0297493897,-0.0464084595,-0.175823018,0.0170091894,-0.098091647,0.030416701,-0.1033749506,0.0486262813,-0.0620930865,-0.0122265965,-0.0128002642,0.128910169,-0.1417280883,-0.0452473164,0.0437814854,0.0526337288,-0.1381223798,-0.1635888368,-0.0400712118,0.0154795498,-0.0601157583,0.0325633027,-0.0484835431,-0.0142399976,-0.2024956197,-0.1067847908,0.0245163329,-0.1139371693,-0.0446947068,-0.1769897491,0.16334714,-0.133781299,0.0107763819,0.0275433343,-0.0341528729,-0.0506387912,0.0284165405,0.059150219,0.0619869456,0.1347204894,-0.003440466,-0.119701542,-0.1624990851,0.0260771159,0.0118891355,0.0780101642,-0.0510125309,-0.0090139527,-0.1445724964,-0.0200379863,-0.1025243998,0.1886866242,0.0190982111,0.0377428941,-0.1510857493,0.1134395972,0.1689352095,0.0215072278,0.1640515029,0.1360452324,0.1908651441,-0.1270344406,0.01619469,-0.0202698801,-0.0967963338,-0.1213935837,0.0899384916,0.0714263916,-0.0096170995,0.0342674404,-0.0432486422,-0.1302228123,0.2135420293,0.0579405464,-0.0624360144]],"hackathon_name":"GreatUniHack Fall 2016","index":556,"project_description":"Online harassment, cyberbullying and vulgar messages in chats will be made harmless.Making this tool to avoid people getting bad social experiences. We believe that online conversations can cause a person to prove the same feelings of a real one.Proves out our conceptSweat and energy drinksLearning everything, come to term with our lack of skillWe did not give up until the bitter endDeveloping's hardMake it great againGreatUniHack Fall 2016Carlo Segat\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 04:47 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Harassment Blocker","project_tags":["javascript","css3","html","json","python"],"project_url":"https:\/\/devpost.com\/software\/harassment-blocker","keywords":"tool,great,getting,feelings,experiences,everything,energy,end,drinks,developing,conversations,concept,come,challenges,cause,built,blocker,bitter,believe,bad"},{"level_0":557,"hack_vector":[[0.143493101,-0.1523570865,0.0216430873,0.0948552266,-0.0545515567,0.1615163982,0.1550274938,-0.0588013791,-0.037620414,-0.0326407515,-0.0135104684,0.0610265024,0.11596255,-0.0812131837,-0.0301929601,0.1097420007,0.2584514022,0.0435659923,0.0525018238,0.0605297871,-0.1594511569,-0.000893784,-0.0460795276,-0.078582786,0.1785655767,-0.0201870836,-0.08624129,-0.1659418941,0.045079913,-0.0692514777,0.0043526767,-0.0793431178,0.0962657556,-0.0329399183,-0.0451274291,0.0240282342,0.1556331962,-0.0905031562,0.0267245937,0.1238083541,0.0598431602,-0.1446985453,-0.1881069541,-0.0330288187,-0.0757775679,-0.0454873927,0.056840539,0.0191608481,-0.0077163144,-0.1648762524,0.007939483,0.0480536446,-0.1048445925,-0.0720869675,-0.0650643632,0.1312143505,-0.1611438692,0.0917414352,-0.0185905453,0.0896364823,-0.0020417734,0.0375908166,0.033502914,0.0812718645,0.1514805257,-0.0686768144,-0.1397524178,-0.1805151403,0.0050120554,-0.0002740566,0.0663948208,-0.0298270993,-0.0332811587,-0.1510035992,-0.0940214097,-0.037550617,0.1874237061,0.0338054523,0.1175340787,-0.1361375451,0.102207832,0.1434692144,-0.0085883988,0.1216112822,0.1649421453,0.1292553246,-0.1567805111,0.1004987061,0.0160395391,-0.1295567751,-0.0576479062,0.116305083,-0.0088421814,0.0422630049,0.1052161008,-0.1190657169,-0.0350455493,0.1151037514,0.1409721226,-0.028861586]],"hackathon_name":"GreatUniHack Fall 2016","index":557,"project_description":"Hamza Ghani is the bestmemeGreatUniHack Fall 2016Hamza Ghani\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 05:16 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Make GreatUniHack Great Again","project_tags":["java","scala","ruby"],"project_url":"https:\/\/devpost.com\/software\/make-greatunihack-great-again","keywords":"ran,proud,next,make,learned,inspiration,greatunihack,great,challenges,built,accomplishments"},{"level_0":558,"hack_vector":[[0.1524782628,-0.0995264202,-0.0356324054,0.0391863361,-0.0111912312,0.1353843063,0.1974783987,-0.031624034,-0.0144855212,-0.0260828622,0.0065472466,-0.0808368474,0.1415583044,-0.0682620555,0.0617165975,-0.0149275595,0.1929075718,-0.011974711,0.044262778,0.1259241402,-0.2355025262,0.0422215834,-0.033412315,-0.0056113848,0.1048720554,-0.033140216,-0.0230083745,-0.1658044904,-0.0558079667,-0.0907406062,0.072337389,-0.1188139096,0.0367172733,-0.0834275037,-0.0244975723,-0.029957056,0.1191483662,-0.1418201774,-0.0654601753,-0.0129191037,0.058928933,-0.1222111061,-0.1360388398,-0.0309125967,0.0822492093,-0.056368988,0.0131864585,-0.0853351951,-0.0416419618,-0.2173158079,-0.1677561104,0.0138989873,-0.1053373963,0.0121992957,-0.2099853158,0.1486508101,-0.1254360229,-0.0459681787,0.0412430763,-0.1122281179,-0.0791664571,0.0091656428,0.0728465766,0.0186936054,0.1023812667,0.0249732751,-0.09386608,-0.1031064466,0.0206359625,0.0314992927,0.0682386085,-0.0567636006,0.0134605402,-0.1201102361,0.036741633,-0.1162863523,0.1794296354,0.000509191,-0.0104591427,-0.1391679943,0.1114283651,0.1551543623,0.0447729006,0.1682090461,0.0928279683,0.2046658993,-0.0837513357,-0.050268922,-0.0125100296,-0.0767150968,-0.1531846374,0.0517644957,0.0963480026,-0.038118057,-0.0243349578,0.0066735656,-0.1596882492,0.2461913526,0.0026229052,-0.0691715032]],"hackathon_name":"GreatUniHack Fall 2016","index":558,"project_description":"Wireless amp system using mobile phones and WebRTCMy beautiful guitar, she deserves better than meThe 'play' and 'listen' pages side-by-side (they're a bit bare!)Wireless amp systems are really cool and convenient, but they're also crazy expensive. I thought I'd really like one but there was no way I could afford a professional one, so what other option did I have but to make my own?! After recently seeing a talk about the Web Audio API at a conference, I really wanted to try it out, so I thought I would!Using an iRig (or some other device\/cable) you plug your guitar into your phone and open up the 'play' page of amp in a browser. Then open the 'listen' page on another device and you'll be able to hear the amplified guitar playing - no wires between the two!It uses the Web Audio API to get the input from the guitar, which effectively acts like a microphone when plugged into the phone. It then uses Socket.io-p2p to stream the audio via WebRTC to the 'listen' page. The Node.js server is there only to serve the static pages and to facilitate the handshaking of the p2p WebRTC connection between the 'play' and 'listen' pages.The Web Audio API is still under active development (read: everybody is still arguing about how it should work), and so is WebRTC. Having previously used Socket.io many times, I thought it would be a good idea to use their p2p module to stream the audio. In the end it worked out okay, but the documentation was a bit rubbish.Another major issue is the latency. When running the 'play' and 'listen' clients on the same machine, the latency is manageable, but over the network it's too much to be able to play guitar. This does somewhat invalidate this entire hack, but please ignore that fact.I managed to get Socket.io-p2p working, something that as far as I can work out, not that many people have done. It ended up being a great wrapper for WebRTC, but the documentation really needs work. I've started on making an example of how to do media streaming over it, which I plan to submit a pull request for as this is something totally undocumented as of right now.WebRTC is pretty cool, and definitely something to look out for in the future. Same goes for the Web Audio API. Good documentation is also crazy important (but definitely already knew this).I'd really like to look into adding some traditional-style guitar effects (distortion, etc). Reducing the latency is probably top of the list for now though. Not entirely sure how I can do that!GreatUniHack Fall 2016I spoke with the computer, and the computer listened to meScott Street\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 05:17 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"amp","project_tags":["node.js","javascript","webrtc"],"project_url":"https:\/\/devpost.com\/software\/amp","keywords":"audio,webrtc,guitar,really,play,api,web,listen,amp,work,io,thought,page,like,documentation,latency,something,socket,pages,one"},{"level_0":559,"hack_vector":[[0.1408997476,-0.1415131986,-0.0234862454,0.0690474436,-0.0270063318,0.1484467834,0.1989311278,-0.0396659598,-0.0203451663,-0.0469700135,0.015004402,-0.0212900415,0.1563900858,-0.063209042,0.0408490412,0.0105744852,0.2305819541,-0.0001307542,0.0450938717,0.1239791363,-0.2360009551,0.0126711633,-0.0395819433,-0.0162172522,0.145483762,-0.0276446939,-0.039829284,-0.1761491895,-0.0270344336,-0.0961225852,0.0666527525,-0.115310654,0.0357239172,-0.0530076809,-0.0155254668,-0.016179774,0.1194692403,-0.128679499,-0.0375453159,0.0226236433,0.0778091103,-0.1297479719,-0.1543768644,-0.0365193784,0.0262616538,-0.0601764768,0.0255856048,-0.0511406772,-0.045847021,-0.2201825827,-0.1107597426,0.0165007338,-0.0987551063,-0.0217968039,-0.186835885,0.1603346169,-0.1405697316,-0.0214415342,0.022978548,-0.0658443794,-0.0626617745,0.036809884,0.0555827841,0.0304806605,0.1193708256,0.0195120834,-0.1192266643,-0.1454735249,0.0164384395,0.0120732356,0.044776272,-0.0382606387,0.0202581324,-0.1209615022,-0.0173130278,-0.0866178721,0.1966010928,0.0014868565,0.0298824962,-0.1407075822,0.1122930795,0.165618062,0.0171045065,0.1595437378,0.1263359487,0.2093154788,-0.1072001234,-0.0045342767,-0.021935707,-0.0792037696,-0.1159716547,0.0927466229,0.0674728975,-0.0102495747,0.0061446754,-0.0329455547,-0.1442577541,0.230614379,0.0374551266,-0.0487991311]],"hackathon_name":"GreatUniHack Fall 2016","index":559,"project_description":"a game where you collect pollen from flowers and bring it back to the hiveAston Hack had their animal themed hack last week and we decided to carry on the theme with beesIt's a game where you play as a beewe used Unity to build the gamewe didn't have anyone who could do 3D modelling so had to make assets without experience and had to learn a lot of Unity syntax to be able to achieve our aims10\/10 flower modelling, working game in 3DUnity3D, some 3D modellingonline multiplayerGreatUniHack Fall 2016Ilya Phillips\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 05:22 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"tobeeornottobee","project_tags":["c#","unity"],"project_url":"https:\/\/devpost.com\/software\/tobeeornottobee","keywords":"game,unity,modelling,hack,build,flower,experience,decided,could,challenges,carry,built,working,bee,aston,assets,anyone,animal,aims,achieve"},{"level_0":560,"hack_vector":[[0.146406725,-0.1016178727,-0.0284628533,0.0557627492,-0.0141785881,0.1515693069,0.2070710808,-0.0305165369,-0.0377800763,-0.013479935,0.0140192481,-0.0584056564,0.1463987976,-0.0650003478,0.0560865514,0.00919249,0.2236957103,-0.005740785,0.0415018536,0.1270953119,-0.2333244532,0.0366916098,-0.043829836,-0.0064289714,0.1376706362,-0.0289994162,-0.0426055975,-0.1863521338,-0.0388373137,-0.0822095945,0.0885180235,-0.1177025959,0.0377717428,-0.0740491524,-0.0245594047,-0.0067121084,0.1204035282,-0.1157474667,-0.0305773541,-0.0027694213,0.0604438595,-0.1383102387,-0.1590826213,-0.0292206891,0.0528054163,-0.0492720455,0.0092520304,-0.0663979053,-0.0184218716,-0.2167749703,-0.1087571532,0.0144358631,-0.0993714631,0.0172436722,-0.2009088546,0.1540161073,-0.1558585614,-0.0156022524,0.0316109993,-0.0887337252,-0.0660879016,0.0314835496,0.0744950995,0.0309350844,0.1185244769,0.0115098525,-0.1005644351,-0.143212229,0.0315778181,0.0234431252,0.0616569221,-0.0365934595,0.0173885766,-0.1099198386,0.0097237621,-0.1103439853,0.1827640831,-0.0104507329,0.029992843,-0.1361732334,0.1043667123,0.1568222046,0.0472477674,0.1629086584,0.1101514399,0.2050764263,-0.1040238589,-0.0302950349,-0.01616803,-0.0860064998,-0.1438793838,0.0717406943,0.0764477327,-0.0298483688,-0.0086580003,0.0099035874,-0.1479053348,0.2248609364,0.0307024289,-0.064887993]],"hackathon_name":"GreatUniHack Fall 2016","index":560,"project_description":"Virtually design your roomWe got our inspiration for building a room from the visualising techniques used in virtual reality games.It creates a walkable 3D room based on the dimensions provided by the user and allows him to place different objects in it for size reference.We used the Unity-SDK.Creating the room based on the custom inputs of the user.Writing our first 3D-Application.Using Unity to create simple 3D-Applications.It would be fun to add a wider range of objects and apply physics to them.GreatUniHack Fall 2016I suggested the idea and wrote the application.I looked up how to make the menu and provided ideas for it, learned how to build walls and different objects and tried to run the simulation through Unity Remote but was unsuccessful as I don't have a pretty good android device.Michael Yonli\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 05:28 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"RoomSimulator2016","project_tags":["unity"],"project_url":"https:\/\/devpost.com\/software\/roomsimulator2016-t9v4xu","keywords":"room,objects,user,used,unity,based,inspiration,creates,got,games,fun,first,dimensions,different,custom,creating,challenges,create,built,building"},{"level_0":561,"hack_vector":[[0.138591826,-0.1198958009,-0.0127783129,0.0460612439,-0.0244065542,0.1260591149,0.1869151592,-0.028647935,-0.008403549,-0.0345007069,0.0246700533,-0.0425215065,0.149771139,-0.0716220513,0.0521364473,0.0166780297,0.2147687525,-0.0060166521,0.0489592701,0.1353340447,-0.243014589,0.0153090721,-0.0402455814,-0.0296872295,0.1108082756,-0.0348875113,-0.0325713642,-0.1716108173,-0.0065674828,-0.1085782349,0.0483321585,-0.104501538,0.0319131762,-0.0697270557,-0.0071411212,-0.021399118,0.1190628186,-0.152517885,-0.0575367324,0.0090560941,0.0508540832,-0.1191550046,-0.1451507956,-0.0364655741,0.0449670032,-0.0684036762,0.0290463176,-0.0689882636,-0.0290627722,-0.2160201073,-0.1455967128,0.0261885934,-0.1119776517,-0.0186214633,-0.200427115,0.1703725755,-0.1205083653,-0.0265665781,0.0347730629,-0.0866451934,-0.0600032471,0.0208297055,0.0707176179,0.0586811863,0.1191201285,0.0187359378,-0.1025675088,-0.1326682121,0.0162041131,0.0132223628,0.0629896969,-0.0485614054,0.0087928288,-0.1239872575,0.0147618242,-0.1024423912,0.1886033565,0.0071166083,0.0027308585,-0.1536807865,0.1177664548,0.1694664657,0.0256108642,0.1565434784,0.1139587685,0.210334599,-0.1035020351,-0.036653962,-0.0301183704,-0.0695748702,-0.142370671,0.0680508986,0.0906098858,-0.0215823483,-0.0039614686,-0.0165758058,-0.157518357,0.2265171707,0.0197009649,-0.0727496371]],"hackathon_name":"GreatUniHack Fall 2016","index":561,"project_description":"A system that allows Comp Socs across the UK to collaborate to rate and suggest speakers, events and presentationsKatie run's the Computing Society at Salford University. Every week we have the same problem, a panic on Sunday as we realise we have nothing for next week. Every year we have to change hands, new people come in as old ones go and the newbies are left not knowing what needs to be done and what has already been done.Our hack, CSSocUK allows not only previous committees to help the newbies but all societies in the UK. It allows societies to message each other, share talks, share opinions on guest lectures and trips. Allowing societies to ask for help from other societies, get lecture materials such as intro to git, short courses and more.We built out hack in PHP using Laravel, and MetroUI for the front end1 member of our team had never done an all nighter and did not know Laravel. We had 2 people who were somewhat familiar, but one was used to Laravel 5 and another hadn't used it in months. In addition to this we did not have a designer meaning our design and database took far longer than expected.It works.We all picked up some new web dev skills, but mostly we learned where we still need to improveWe'd like to continue it in an open source way allowing our societies and others to contribute to modules that they think they would find interesting. In works are modules for a ticketing system, offering advice for common problems.GreatUniHack Fall 2016Katie Paxton-Fear\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 05:49 AM ESTSome pictures of the hack!Log in\n      or\n      sign up for Devpost\n      to join the conversation.George Broadley\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 05:29 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"CSSocUK","project_tags":["php","laravel","css","html","javascript"],"project_url":"https:\/\/devpost.com\/software\/cssocuk","keywords":"societies,done,laravel,new,share,cssocuk,next,newbies,people,hack,every,built,modules,learned,allows,used,allowing,week,works,help"},{"level_0":562,"hack_vector":[[0.1346857399,-0.1177472025,-0.0082350736,0.0740536675,-0.0282399692,0.1547850221,0.1963032782,-0.0487870201,-0.0500517711,-0.0062404424,0.0099902963,-0.0246000923,0.1538534015,-0.0724862069,0.0399795771,0.0283176601,0.2380790561,0.0111939432,0.0485697202,0.1044781655,-0.2092670947,0.0478238203,-0.0457701683,-0.029351335,0.1548293084,-0.0194254983,-0.0592115931,-0.1959424913,-0.0136740403,-0.0688737705,0.0781308413,-0.1246907935,0.0573901348,-0.0663090348,-0.0344478749,0.0013753586,0.1444054991,-0.1152851954,-0.0193182994,0.0361703001,0.0497424304,-0.1664237082,-0.176382333,-0.030004425,0.0059992797,-0.0376850292,0.0194860976,-0.044839032,-0.0159860458,-0.1982753426,-0.084353663,0.0230396111,-0.1092988327,-0.0059829378,-0.1640519351,0.1461952329,-0.1682197005,0.0321719795,0.0172638875,-0.04491603,-0.0451418981,0.0386672169,0.0689709634,0.0604272261,0.1305864006,-0.0161467232,-0.1066673398,-0.1535174698,0.0283356179,0.0122467577,0.0677588582,-0.0420816243,0.0202635508,-0.1300419718,-0.0164096653,-0.1003691778,0.1959895492,-0.0004328459,0.0618917681,-0.1398989409,0.1242012605,0.1542930454,0.0544745736,0.155763492,0.1367330551,0.177619949,-0.1386096627,-0.0036029499,0.0000520658,-0.1092641428,-0.1288455129,0.0800883174,0.0682146102,-0.0135696484,0.0450176708,-0.0382425599,-0.1214993745,0.194747299,0.0643164068,-0.057892479]],"hackathon_name":"GreatUniHack Fall 2016","index":562,"project_description":"Sleeping movement great againNormal movement while sleeping outputwe had an engduinodetects movement during sleepwe used Arduino IDE to get the motion from the sensors and then using processing we generated a webpage with the registered datasending the collected data to the webpagewe manged to make the engduino make the difference between basic movement and acusing an engduino and generating a web page using ProcessingMake it wireless!GreatUniHack Fall 2016Dragos Popa\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 05:34 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"RandomSleepingMovement","project_tags":["c","java","processing","arduino"],"project_url":"https:\/\/devpost.com\/software\/randomsleepingmovement","keywords":"make,using,engduino,webpage,movement,data,processing,difference,get,generating,generated,detects,inspiration,collected,challenges,built,basic,arduino,accomplishments,ide"},{"level_0":563,"hack_vector":[[0.1589884311,-0.1439577341,-0.0133945057,0.0569149628,-0.0457241349,0.1499288678,0.1896088272,-0.0259081833,-0.0194357987,-0.0185167901,0.0066874535,-0.0343570486,0.149828732,-0.0755009353,0.047727976,0.0407973044,0.2365015149,0.0186751131,0.0472398549,0.0968397409,-0.2313720584,0.0170050543,-0.0533976965,-0.0426697917,0.1349917054,-0.0340028778,-0.0563409105,-0.1710484326,0.014286425,-0.1021717265,0.0493262485,-0.1106932461,0.0353432372,-0.0692635104,-0.0201438218,0.0026756246,0.1358740628,-0.1501089334,-0.0412750579,0.0320713259,0.0466532186,-0.139643997,-0.1678581536,-0.0328481905,0.0194816515,-0.061269369,0.0388881266,-0.0441480763,-0.0185250249,-0.1930539459,-0.1169292256,0.0287252385,-0.116348289,-0.0316880569,-0.1739810407,0.1613007337,-0.133920446,0.0033356503,0.0290238485,-0.0406962968,-0.0607638322,0.034548834,0.0667827129,0.0783954933,0.1177308485,-0.0072187949,-0.1101008877,-0.1475618482,0.0069021443,0.0067512896,0.0731661022,-0.0399266109,0.0121698305,-0.1318834722,-0.0147100082,-0.112315163,0.1879867464,0.0267385952,0.0332290716,-0.1443980187,0.1229075491,0.1725547016,0.0196387339,0.1523047388,0.1350113302,0.1902399808,-0.1245017573,0.008989674,-0.0146142049,-0.0991171524,-0.1026939079,0.0878478065,0.0630868375,-0.0037700271,0.0456871465,-0.037504565,-0.1218993664,0.2132478058,0.0500718616,-0.0625352636]],"hackathon_name":"GreatUniHack Fall 2016","index":563,"project_description":"Sponsored Spending: Pay people to share their purchases, sell the data!After observing a company with a lot of data from within, we noticed that data is REEEAAAALLLY valuable. Then we also remembered that having money is pretty neat and that we as students would probably like some more of it.GreatUniHack Fall 2016Back-end APICallum Kendrick\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 05:34 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Total Sellout","project_tags":["node.js","html5","javascript","css","mongodb","ocr-web-service","twilio"],"project_url":"https:\/\/devpost.com\/software\/total-sellout","keywords":"data,would,next,also,built,challenges,company,inspiration,learned,like,lot,money,neat,noticed,within,observing,pretty,probably,proud,ran"},{"level_0":564,"hack_vector":[[0.1450740695,-0.1102601737,-0.0207232293,0.0603749454,-0.0277245529,0.1584423333,0.1815725863,-0.0372326374,-0.0149869462,-0.0229792632,0.027847603,-0.0516577736,0.1463752538,-0.0580585711,0.0492469966,0.0139167635,0.2368836254,0.0173462294,0.0395871475,0.1141850501,-0.2347404808,0.0297983494,-0.0395451412,-0.0218084678,0.118359074,-0.0236234106,-0.0364781395,-0.1920648962,-0.0196670201,-0.0977951884,0.072612986,-0.1166125759,0.0403813273,-0.0829430297,-0.0146384882,-0.0249971412,0.1192010567,-0.1392259449,-0.0529462472,-0.0013114534,0.040121112,-0.1275032163,-0.1562133878,-0.0402462408,0.0392059274,-0.0529824048,0.0152175045,-0.05030578,-0.0258333739,-0.2115503252,-0.1208308265,0.0151856877,-0.1010978445,-0.0263281297,-0.1843246371,0.1572843939,-0.1216287091,-0.0106887063,0.0443648584,-0.0803369284,-0.0599439219,0.0200377833,0.0819108486,0.0503723919,0.1081756353,0.0181115121,-0.1070202142,-0.1431255341,0.0316888876,0.0278277341,0.0737050772,-0.0380321145,0.0260614064,-0.1254615784,-0.0093188053,-0.1257064492,0.1859474927,0.0069191121,0.0333646648,-0.1400624216,0.1117383391,0.165697366,0.0313363373,0.1691284329,0.1232225969,0.187361598,-0.1168235689,-0.0366065316,-0.0382713191,-0.0861385465,-0.1396767944,0.0756179616,0.0774310231,-0.0369160809,0.0135404291,-0.0098856296,-0.1384151727,0.2306983918,0.0295911916,-0.083237268]],"hackathon_name":"GreatUniHack Fall 2016","index":564,"project_description":"An app that helps you manage your monthly expenses as a newly studentI spend more money than i shouldIt estimates the rough amount of money you'll spend at the end of the month based on different questions and habits that you embrace. Whenever the cap is reached , it makes suggestions to cut down the most unsignificant expenses.Using android-studioBuilding the whole appLearned how to use the basic commands in android-studio along with managing your own time whenever an error pops-up , see how to intent activities and different use various rules and tags.Creating buttons, progress bars, radio buttons.Maybe the app will be more accurate and try to make suggestions based on some certain products' prices and discounts, linked with supermarkets' databasesGreatUniHack Fall 2016Daniel Savu\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:01 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Expenses Manager","project_tags":["android-studio"],"project_url":"https:\/\/devpost.com\/software\/expenses-manager","keywords":"studio,money,learned,expenses,use,whenever,android,app,different,suggestions,spend,based,buttons,databases,discounts,whole,embrace,end,creating,error"},{"level_0":565,"hack_vector":[[0.1467572451,-0.1228130385,-0.0135820117,0.0691726208,-0.0330905803,0.1655905396,0.181832701,-0.0412746593,-0.0224070102,-0.0138996178,0.013878379,-0.0308507662,0.1446116269,-0.0817964599,0.0399757177,0.0507244691,0.2537487149,0.0125429463,0.0480687879,0.0959036201,-0.2185248435,0.0258449335,-0.0524371378,-0.0318021066,0.149562031,-0.0316620953,-0.0538674742,-0.193745777,-0.0034098139,-0.0773882419,0.0580428131,-0.1138381138,0.0601702556,-0.0779642388,-0.0297838561,0.0029913404,0.1323267967,-0.124317959,-0.0237640832,0.028904859,0.0414321125,-0.1434158981,-0.179161191,-0.0184402335,0.0127094379,-0.0370008424,0.0299837273,-0.0356076658,-0.012426503,-0.2021574527,-0.0856423602,0.0198072754,-0.105883874,-0.0281448159,-0.1662749648,0.150950253,-0.1436441839,0.0247348137,0.0220318679,-0.0345757902,-0.0440912023,0.0302571822,0.0740813464,0.0599505343,0.1223610416,-0.0153902797,-0.1095285639,-0.1631374657,0.0277250055,0.0134118544,0.0794572607,-0.03716968,0.0190976486,-0.1423847675,-0.023202613,-0.1032983139,0.1983288974,0.0045297784,0.0551969483,-0.1370291263,0.1210487261,0.1650991887,0.0382488035,0.1671759039,0.1284603477,0.1738879979,-0.1301181167,0.0079482906,-0.0094005996,-0.1099274531,-0.1203415915,0.0843651593,0.0589768961,-0.0113089243,0.0503607392,-0.0382172912,-0.1115744635,0.2057668865,0.0724861771,-0.0757805705]],"hackathon_name":"GreatUniHack Fall 2016","index":565,"project_description":"Your startup meets your investors.The need of small businesses and start-ups to showcase themselvesIt offers start-ups ups the chance to make their products known to possible investors and shows the interested investors a predicted profit rate.It uses a complex combination of JavaScript, HTML and CSSImplementing the machine learning algorithm in JavaScript.ImplementingExpanding and improving our platform.GreatUniHack Fall 2016I worked with Tomasz on the front-end.Vlad Andrei Istrate\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:07 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Mind the StartUP","project_tags":["html","javascript","python"],"project_url":"https:\/\/devpost.com\/software\/startup-and-go","keywords":"ups,start,javascript,investors,implementing,html,known,interested,inspiration,improving,uses,learned,css,complex,combination,chance,challenges,businesses,built,expanding"},{"level_0":566,"hack_vector":[[0.1543957591,-0.1254653931,-0.0382325128,0.0701995566,-0.0219526477,0.1493543535,0.2000862956,-0.0402494855,-0.0320738964,-0.0242770892,0.005559573,-0.0368496813,0.1516194344,-0.0668621361,0.039260108,0.0121188387,0.2188282162,-0.0040882551,0.0413186103,0.1212433353,-0.2341905385,0.0219624639,-0.0365203395,-0.0023059959,0.1436683685,-0.0246952176,-0.0452348404,-0.1700433493,-0.0327232033,-0.0890248045,0.07366056,-0.1151750833,0.047129266,-0.0562530495,-0.0205549952,-0.0181015451,0.1272327006,-0.1286399662,-0.031419076,0.0114442222,0.0791940242,-0.1344349235,-0.1593355983,-0.0253011174,0.0473490581,-0.0439650565,0.0203803685,-0.0600919724,-0.0323152095,-0.2229449898,-0.1106061488,0.0141911497,-0.0962297767,0.0016065179,-0.2020364851,0.1472067684,-0.1462436914,-0.0222803708,0.030935308,-0.0647501647,-0.0602641478,0.0251964461,0.0666981712,0.0148053346,0.1189275309,0.0096288994,-0.1046480462,-0.1317455024,0.0289113242,0.0230153296,0.0571765155,-0.0392880552,0.0077999113,-0.1220618933,-0.0134288818,-0.100720413,0.1865096837,0.0023089598,0.0256916415,-0.1424316466,0.1040675044,0.1624842137,0.022300126,0.1781358719,0.1142613962,0.2081631422,-0.1094248369,-0.0078366175,-0.0206572935,-0.1006881371,-0.129926011,0.0842308104,0.0734527558,-0.0163800698,0.0020534543,-0.0118066594,-0.1456908286,0.231020391,0.0430760905,-0.0516015925]],"hackathon_name":"GreatUniHack Fall 2016","index":566,"project_description":"it is a very basic code of the rock paper scissors game, nothing special.I wanted to create a mini game and this was my first ideaa player can chose one of the three chooises \"rock paper or scissors\" and the bot will choose one randomly.I built with simple if statements and I used and graphical user interface extanssion.GUI for the game.trying new codes and trying to solve problems - in my case a simple problem- but still i have learned something.how import command works.\nand how to create a simple 2D GUI.a scoreboard and maybe a save game to save the score.GreatUniHack Fall 2016Hasan Aouzoun\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:08 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"RockPaperScissors MiniGame","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/rockpaperscissors-mini-game","keywords":"game,simple,create,learned,built,trying,one,gui,mini,save,first,interface,inspiration,import,idea,graphical,works,extanssion,command,codes"},{"level_0":567,"hack_vector":[[0.1425298899,-0.0897400752,-0.0227129981,0.0389900468,-0.0232707635,0.1239018291,0.2017682046,-0.0170984082,-0.0190192051,-0.0149926869,0.0207444653,-0.0682823583,0.1489324868,-0.0683034882,0.0713366643,-0.006272824,0.1908272356,-0.0120447557,0.0477937311,0.1273020357,-0.2365546972,0.0267374963,-0.0447454527,-0.0148028964,0.1007177383,-0.0308163632,-0.0238754433,-0.168164596,-0.0153021524,-0.0878123194,0.0551568046,-0.104176715,0.0228118356,-0.0795800313,-0.0111428304,-0.0047103711,0.1212511435,-0.148614645,-0.075755693,-0.0016443279,0.0410433039,-0.1275778264,-0.1319594681,-0.0258756801,0.0683324337,-0.0604114681,0.0187742226,-0.0882161334,-0.0166975297,-0.2099796832,-0.1653453708,0.0151322009,-0.1197723672,0.0088679753,-0.2010798305,0.1630517393,-0.1245866418,-0.0289697889,0.0417986996,-0.1141685843,-0.0736607462,0.0244852621,0.0786372423,0.0561299361,0.1166040078,0.0184441395,-0.093036741,-0.1210682616,0.0192868765,0.0092544295,0.0572323501,-0.0480464138,0.016166646,-0.1225571111,0.0351467058,-0.1277367026,0.1847852468,-0.0013088137,-0.0073583261,-0.1439423412,0.1217444763,0.1579419672,0.0550460108,0.1509881914,0.100273259,0.2029282302,-0.0909688175,-0.0425108224,-0.0224162657,-0.0793344229,-0.1586094797,0.0590070374,0.0984548926,-0.0378352664,-0.0031306681,0.0059866956,-0.1673599482,0.2448983341,0.0064545078,-0.0694116354]],"hackathon_name":"GreatUniHack Fall 2016","index":567,"project_description":"The number one harrasment blocker at Great Uni Hack 2016Our app is an API endpoint which allows other developers to hook into our harassment algorithm. We also built a chrome extension to show the algorithms performance and intelligence.We built an API in python flask which connected to a Postgresql database. We decided to use an object relational mapper to integrate with our database. We used python's natural language toolkit in conjunction with Google's bad words to train our model.The biggest challenge was our skill gap, we were passionate about learning something new and wanted to come into the project with an open mind. All of the team learned something new.Using NLP was a huge challenge for our project, but we are really proud of our algorithm and chrome app. We learned a lot of new skills that we wouldn't have through of learning outside the algorithm.We didn't know anything about natural language processing before we started this project. We found a research paper that detailed methods with which to recognise online harassment.One of our teammates had never used python before so he was able to learn in trial by fire.We can index more of the web and gather more data in order to provide services that may be useful to advertising companies who wish to avoid being affiliated with negative websites. We could also see our API and algorithm being used on online forums and comment sections to minimize potential harassment and hate speech.GreatUniHack Fall 2016I worked on the front-end, came up with the idea, did the mockups and helped work on the overall concept and goals we wanted the browser extension to achieve.Not only does HarassBlock help everyday users be aware of sites that are potentially offensive it also allows users to anonymously vote so that sites can be ranked and categorised.This data is all stored in a cloud database that can then be accessed by third parties such as advertisers - allowing them insight into potential problems a campaign could face if it continues to so business with an offensive website.We can also use the data that users submit via voting to determine what are considered the most offensive terms and phrasing in today's society. Our database will over time become an extremely sophisticated tool for many potential customers while at the same time protecting those that are most vulnerable from offensive material.Hussein Mohammed\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:10 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Rob Marsh\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 05:29 AM ESTHarassBlock should be ready to demo soon. We are very proud of what we have achieved and cannot wait to officially release it to the Chrome Extensions Store. The quicker our app is available to the public the sooner we can help society and the more users it had the more accurate and beneficial it will become. Thanks!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HarassBlock","project_tags":["python","flask","postgresql","javascript","nltk","chrome"],"project_url":"https:\/\/devpost.com\/software\/harassblock","keywords":"algorithm,learned,built,harassment,new,used,project,api,python,learning,natural,online,proud,language,chrome,challenge,database,something,also,app"},{"level_0":568,"hack_vector":[[0.1483409703,-0.1523382366,0.0093672452,0.0912806541,-0.0494909659,0.1706198156,0.180208534,-0.0648043305,-0.0343781374,-0.025976222,0.0030756462,0.0368329063,0.1314492524,-0.0670367479,-0.0041796602,0.0750448257,0.26899755,0.0425768048,0.0473904349,0.0873313248,-0.1854355782,0.0102960551,-0.0492422134,-0.0506886132,0.1915041059,-0.014764104,-0.0751223937,-0.1959281117,0.0242228452,-0.0735569075,0.0422478467,-0.1010654867,0.0759986043,-0.0533391237,-0.0335856006,0.0039065126,0.1383930445,-0.0987683907,0.0114553487,0.083150059,0.0593581609,-0.1605774015,-0.1868043691,-0.0480600819,-0.0456069596,-0.0434172601,0.0375360586,0.0086446553,-0.0254793279,-0.1870396584,-0.0171205066,0.0360328592,-0.1019960567,-0.0607384294,-0.1062156409,0.1558585316,-0.1549845934,0.0630303249,-0.0111395381,0.0454025045,-0.0116177993,0.0274703838,0.0449666083,0.0590861365,0.1339757293,-0.0411735624,-0.1403595954,-0.1728633493,0.0229015741,0.0085087409,0.060778439,-0.0267575663,0.0000656763,-0.1374861896,-0.0819824487,-0.0617309511,0.1870037168,0.0173310246,0.1010923758,-0.1357987523,0.1007699594,0.1470535845,0.0063509187,0.1485936493,0.1582014263,0.1626190841,-0.1537868977,0.0599108301,0.0016768664,-0.1136135235,-0.0693049133,0.1098017544,0.0202515665,0.0261467565,0.0750309452,-0.0908783749,-0.0642296299,0.1474616528,0.1053850725,-0.0440895632]],"hackathon_name":"GreatUniHack Fall 2016","index":568,"project_description":"Find the medicinal plants for your poor granny!Trine style coop game2.5D  Platform game with 2 characters with different skillsetsGreatUniHack Fall 2016Olawumi Ajileye\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:10 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Nana's herbs","project_tags":["unity","c#"],"project_url":"https:\/\/devpost.com\/software\/nana-s-herbs","keywords":"game,trine,style,built,challenges,characters,coop,different,herbs,inspiration,learned,nana,next,platform,proud,ran,skillsets,accomplishments"},{"level_0":569,"hack_vector":[[0.1453784555,-0.0930162966,-0.0313559175,0.0452025086,-0.0228691511,0.1283804178,0.206754595,-0.0232034121,-0.0254800115,-0.0047339574,0.0248996411,-0.0636232272,0.1481566578,-0.0707820952,0.0708975941,-0.006434341,0.1906841099,-0.0169831347,0.042009946,0.1271825433,-0.2419640869,0.0287870001,-0.0401891954,-0.0076043005,0.1073542982,-0.026828438,-0.0274930429,-0.1655312479,-0.0207829569,-0.0917160287,0.0625980645,-0.1106137559,0.0183801148,-0.0777871087,-0.0134897986,-0.0153939137,0.1170817316,-0.1434651613,-0.0710142925,-0.0063644499,0.0507385693,-0.1215578914,-0.133246541,-0.0205188319,0.074950695,-0.0468849093,0.0153115587,-0.0897976011,-0.0149988048,-0.2049186379,-0.1504811794,0.0145199085,-0.1120463759,0.0215829797,-0.215230599,0.1589019895,-0.1288339645,-0.0277429782,0.042479381,-0.1154039428,-0.0721118674,0.0219224393,0.0868287608,0.0534384102,0.118619509,0.0263611469,-0.0904998258,-0.1173729822,0.0264018793,0.0181300119,0.0569940247,-0.0420640558,0.015410319,-0.1154867858,0.0384200774,-0.1301161498,0.1756493747,-0.0022973279,-0.0053413147,-0.1396904886,0.1238942295,0.1619989276,0.0551605932,0.1556106657,0.1049642414,0.2087392956,-0.0905182064,-0.048927255,-0.0232311673,-0.0723837018,-0.1573171616,0.0567376763,0.1047073677,-0.0366459377,-0.0080647245,0.0203852933,-0.1659855247,0.2356841564,0.0068743792,-0.0597834587]],"hackathon_name":"GreatUniHack Fall 2016","index":569,"project_description":"Tinder for investors.LogoWe saw a problem with how investor networking is done, we think we can streamline the process and even add a fun element to it. We saw the potential with current trends towards gamification and social connectivity and thought we could add a business related spin to it.Our software allows users to create projects and certified investors can register interest, and send messages to the entrepreneurs. They can do this through a web app, android and ios apps.We designed and built the API using a combination of technologies, making extensive use of NoSQL and JSON Web Tokens for cutting edge security.Because our data is inherently relational, using a non-relational database was always going to be a challenge (not least because most of our background is in msSQL and MySQL),  we thought we'd give a different technology a chance and are very happy with the results.Setting up the various build configurations for Android and iOS was a major challenge, as because we were using the very latest (unstable beta technology) we had to solve these problems without reliable documentation and questionable forum posts. However, we did manage to do it and managed to create our Minimum Viable Product.Getting the messaging system working, which is a piece of core functionality and makes the app a viable piece of digital equipment for investors and creators alike.Producing apps for multiple platforms through up lots of pretty specific edge cases and challenges, and to finally get it working on our devices was great to see.Adding more functionality: such as location based investment opportunities, image uploads and 'sliding' cards when dragged.\nWe think this idea has the potential to be successful and in the future we could implement microtransactions for investors wishing to use this service to expand their portfolio.GreatUniHack Fall 2016We split the payload 50\/50Craig Harley\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:12 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Jump Leads","project_tags":["express.js","mongoose","heroku","ionic"],"project_url":"https:\/\/devpost.com\/software\/jump-leads","keywords":null},{"level_0":570,"hack_vector":[[0.1536235958,-0.0893768668,-0.0217499826,0.0573896989,-0.0034337349,0.1558524072,0.1905308217,-0.0469370037,-0.0386355035,0.0114101972,0.0103574535,-0.0829121619,0.1593888253,-0.0861227959,0.0518599413,0.0128791407,0.2034662515,-0.0094855493,0.0557298101,0.1107211187,-0.2228751034,0.0509339161,-0.057243634,0.0029995951,0.1452798694,-0.0443264134,-0.050044369,-0.185533464,-0.0397379249,-0.0628655106,0.0917430446,-0.1155387685,0.0529374294,-0.08042375,-0.0437759459,0.0038172333,0.1347905397,-0.1223169118,-0.0284073111,-0.0079137962,0.0557020195,-0.1459608376,-0.1726271808,-0.0001454719,0.0560752228,-0.0201483704,0.0132135283,-0.0829179436,-0.0101286378,-0.2127806097,-0.1302588135,0.0310232565,-0.1142604649,0.0436409153,-0.204758212,0.1368689686,-0.1570862234,-0.0010792164,0.0247476995,-0.0805154145,-0.0601892211,0.0233772025,0.0823417678,0.0424718931,0.1156255826,0.0048213764,-0.0778592601,-0.132668674,0.0241853427,0.0216958132,0.0760502443,-0.044749748,0.0220747944,-0.1216808483,0.0308193192,-0.0966276377,0.1916216612,-0.0108477306,0.0186256077,-0.1296022236,0.119649671,0.1451734304,0.0682063848,0.1558489054,0.1049153879,0.2010523528,-0.0902207568,-0.0363205448,-0.0037881546,-0.0895061046,-0.138912946,0.0568703189,0.0811444595,-0.0368120484,0.0060369917,0.0002570943,-0.1356004924,0.223340705,0.0386037305,-0.0736387223]],"hackathon_name":"GreatUniHack Fall 2016","index":570,"project_description":"#startups#investors#connectiosThe need of gathering potentially successful businesses or start-ups in an environment that facilitates the visualisation of all the traits these projects have.This site creates a database for start-ups, small businesses and investors to ease their connectionThe interface is created with HTML and CSS, the platform having in its content PHP syntaxes and use of MySQL.The main challenge was deciding upon the design of the webpage, along with creating the database and hosting it onlineWe managed to solve the Goldman Sachs challenge and we're proud of building out first online websiteCreating databases, hosting them online and creating a user-friendly interface for the websiteMaking it more user-friendly and providing analysis for the future of the start-upsGreatUniHack Fall 2016I worked on designing the interface for the web page, using HTML, CSS and some PHP structures. It was my first time using PHP and I learned a lot about the language and its functionality.I worked on some php parts, created a database with mySql and put the website on the online domain.I worked on the php part... First time for me. I had to deal with the integration between MySQL, Php and HtmlAna Gabriela Pandrea\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:11 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"StartInvest","project_tags":["html","php","mysql","domain","css"],"project_url":"https:\/\/devpost.com\/software\/startinvest","keywords":"start,online,ups,creating,website,interface,friendly,database,proud,hosting,businesses,user,challenge,challenges,analysis,along,goldman,gathering,future,first"},{"level_0":571,"hack_vector":[[0.1603975892,-0.1122370213,-0.0308209062,0.0686573908,-0.0158783849,0.1564455777,0.2060474455,-0.04508112,-0.0221648905,0.0037787198,0.0151566807,-0.0624448024,0.1684208065,-0.0793150142,0.0798960179,-0.0300170593,0.1856095195,-0.0122255683,0.0490464307,0.1004660949,-0.2250121385,0.0400090292,-0.0528668165,0.0012876069,0.1569900662,-0.0268850923,-0.0281384215,-0.1801307201,-0.0421338715,-0.0544398166,0.0845561177,-0.1379362196,0.0380122811,-0.0791710764,-0.0526229069,-0.0072766258,0.1201685369,-0.1305940002,-0.0650482625,0.0000979854,0.0547819734,-0.1292859167,-0.1340939701,-0.0059489366,0.0457047112,-0.0304862875,0.0198816489,-0.0768326446,-0.0322181806,-0.1994305998,-0.1475828737,0.008470594,-0.1198146045,0.0321342461,-0.1832834035,0.1556283385,-0.1423281878,-0.0034789413,0.0091309585,-0.0868003368,-0.0679706633,0.0263784435,0.0786664486,0.0390710048,0.1112807542,0.0158040933,-0.0966896266,-0.1105278283,0.0120103471,0.0171941537,0.0626325086,-0.036439985,0.0332934298,-0.1270088553,0.0374504998,-0.0970354453,0.2078438997,-0.0013321188,0.0006867208,-0.1384925097,0.130946368,0.1552305371,0.0686102957,0.1406068206,0.10727451,0.2006911933,-0.0843160078,-0.0276450925,0.0101815769,-0.0776044205,-0.1428560764,0.0582530797,0.0983102471,-0.0220642723,0.0275888257,-0.0212361291,-0.1371982843,0.2405716628,0.0254282057,-0.0642969459]],"hackathon_name":"GreatUniHack Fall 2016","index":571,"project_description":"Crunching big movie data for breakfastWe wanted to build something cool with Machine Learning and D3.js. Using a Kaggle Dataset for this purpose seemed the best way to go.We try to tell how movies have evolved over the past 100 years. We also implemented a Machine Learning module that predicts movie revenues based on Director, Plot, Actor and Budget.The backend was written in Python, interfaced using Flask with the JS front end. We cleaned our dataset using Pandas. Built the JS visualisations with d3.js.It was a task identifying the correct model to use. Moreover, understanding Pandas and its neat tricks was another task. Additionally, d3.js had a complicated chaining syntax.Setting up Flask. Learning Javascript and D3.js. Data Analytics. Implementing machine learning models.Don't give up. Team work. One Hot Encoding and Dimensionality Curse. Flask, Numpy, Pandas.Using more sophisticated techniques and feature selection to predict better revenues.We also got ourselves a domain - aimldb.com, but domain.com let us down. This is a wordplay on using AI\/ML techniques to predict revenue from the iMDB database.GreatUniHack Fall 2016I worked on Machine Learning and helped with cleaning and visualising the data.Aayush  Chadha\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:15 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AIMLDB","project_tags":["python","javascript","d3.js","pandas","numpy","flask","html5","css3","node.js"],"project_url":"https:\/\/devpost.com\/software\/aimldb","keywords":"js,using,learning,flask,pandas,machine,predict,techniques,built,revenues,task,dataset,domain,also,aimldb,com,end,encoding,evolved,director"},{"level_0":572,"hack_vector":[[0.1450729519,-0.1106057018,-0.0190399364,0.051952634,-0.0192702096,0.1546700448,0.2089195698,-0.0425290912,-0.0429997109,0.0034040476,-0.0065651829,-0.0585590154,0.1317150146,-0.0729283243,0.0432199389,0.0395443141,0.2465945184,0.0136826737,0.0459616072,0.1119493619,-0.2212631106,0.0467955284,-0.0524931252,-0.026652731,0.1482053846,-0.0223809406,-0.0572113283,-0.2018604726,-0.0193954781,-0.0678976923,0.0739842951,-0.1334599704,0.0609455071,-0.0845038444,-0.054798644,-0.0005308026,0.1338777691,-0.1152096316,-0.0124826478,0.0320928805,0.0419170521,-0.1649468541,-0.1805707961,-0.0423307456,0.0305917058,-0.0592277981,0.0189314187,-0.0491052046,-0.0212784875,-0.2117568403,-0.0869575962,0.0183344968,-0.10478881,0.0059442003,-0.1529824287,0.1505523324,-0.1686358005,0.0178434029,0.0072715837,-0.0432521217,-0.0574415028,0.0264009088,0.067826122,0.0491291396,0.1190617308,-0.022884205,-0.1071963683,-0.1515383869,0.0375477932,0.0226388443,0.0766043216,-0.0572555177,0.0116504589,-0.1233401895,-0.0056026098,-0.1068852916,0.1871600747,0.0092245098,0.0683569759,-0.1312227696,0.1261851043,0.1461223513,0.062887311,0.1604464054,0.1248987168,0.1793409735,-0.1232640967,0.0032488306,0.0095541114,-0.1050412208,-0.1242461652,0.0675659254,0.0627616569,-0.0245929081,0.023122197,-0.0229331348,-0.1180489585,0.1878414452,0.0584103502,-0.0730974153]],"hackathon_name":"GreatUniHack Fall 2016","index":572,"project_description":"It autogenerates presentations in powerpointA game called Presentation KaraokeIt autogenerates a presentation based on the desired title and colour.The python program opens the C# file, waiting for the input to be written in a text file, then it generates the presentation.Not enough information about Python library for powerpoint\nLink C# with PythonIt works almost all the timeI\/O stream from files in C# and PythonPerfect it, asking for more input from the user to generate the presentation based on it.GreatUniHack Fall 2016Python part of the codeVlad Hondru\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:19 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"PresGen","project_tags":["python","c#"],"project_url":"https:\/\/devpost.com\/software\/presgen","keywords":"python,presentation,input,based,file,enough,information,generates,generate,game,files,written,desired,inspiration,challenges,called,built,autogenerates,asking,almost"},{"level_0":573,"hack_vector":[[0.1663165689,-0.1292388141,-0.0147211198,0.0572082736,-0.0246171337,0.1413012892,0.2069938928,-0.0424909443,-0.0293234289,-0.0025282425,0.0190608148,-0.0240597799,0.1408519447,-0.0692233145,0.0532741025,0.0123016927,0.2252195328,-0.0085405018,0.0558721796,0.1263004988,-0.2443192452,0.0252456311,-0.0454221629,-0.029131135,0.1403271705,-0.0259982981,-0.0327006765,-0.1962172985,-0.0011665414,-0.0916667804,0.0596005842,-0.1209235862,0.0455888547,-0.0871898085,-0.0243073143,-0.015179527,0.1137076765,-0.141444698,-0.0470672175,0.012709571,0.0553431511,-0.1331429183,-0.1483478546,-0.0379891433,0.0306387022,-0.0511678122,0.0146490503,-0.0685697198,-0.0200149696,-0.2099729776,-0.1125756428,0.0149705783,-0.1166003942,-0.0068177669,-0.1727528274,0.1584616452,-0.1440220922,-0.0027229518,0.0182168111,-0.0615979768,-0.0476125814,0.0232189763,0.0753736049,0.0555055551,0.1212669984,-0.0081735905,-0.1214994639,-0.1339334995,0.0218354426,0.0130691025,0.066385746,-0.0412112772,0.0096267276,-0.1321782321,-0.0034692166,-0.1224228963,0.1949696094,0.0118139843,0.0415008701,-0.1435278356,0.1241737157,0.1531367898,0.0405596346,0.1635178626,0.1243646219,0.2051456571,-0.103242889,-0.0052549448,-0.0073792743,-0.0802670196,-0.1249880642,0.0754015073,0.0837368742,-0.0120977899,0.013849848,-0.0256641135,-0.1308466047,0.1893882751,0.0367579125,-0.0632613078]],"hackathon_name":"GreatUniHack Fall 2016","index":573,"project_description":"RNN generated musicSchumannHow creativity works? For centuries people were worshipping artists who could make original pieces of art. We are here interested in what it takes to learn to compose music, especially as good as great composers as such as Mozart, Schuman or Beethoven.It takes as an input part of the music piece in MIDI format and continues the melody, outputting MIDI fileWe used python and Keras.io neural network library to build recurrent neural networks and learn how to compose music on some given samples.AWS challenge, main, team netsol, Barclays (no need for composers = easier life for movie and TV producers, game developers, etc.)GreatUniHack Fall 2016Nikola Milosevic\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:24 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SchumaNN","project_tags":["python","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/schumann","keywords":"music,neural,aws,network,composers,compose,midi,io,takes,learn,keras,recurrent,gpu,good,given,game,easier,format,file,great"},{"level_0":574,"hack_vector":[[0.1541206241,-0.1148989797,-0.0204488914,0.0520710163,-0.0162479281,0.1468815655,0.2176351249,-0.0427010767,-0.0276300404,-0.0206876732,-0.0024638381,-0.0318075866,0.131682992,-0.0729214698,0.0271975249,0.0250112433,0.2238480598,-0.0057411455,0.0490105599,0.1173935607,-0.2302739173,0.0305383336,-0.0348821729,-0.0184966978,0.1517550796,-0.0246259943,-0.0433386788,-0.1802358031,-0.02044525,-0.0860390365,0.059568353,-0.1148645431,0.0593538582,-0.0745908692,-0.0292542428,-0.0117075341,0.1331158578,-0.1271553934,-0.0305170789,0.0229254328,0.0633769929,-0.1483744979,-0.1564570963,-0.0488764755,0.0369000621,-0.0544592626,0.0123087065,-0.0604592003,-0.0207128823,-0.2086150646,-0.1104570925,0.0301026348,-0.1201474369,0.0004188758,-0.1844325066,0.1597171128,-0.169237569,-0.0078257965,0.0261118226,-0.0649714619,-0.0635098889,0.0255024713,0.0676125884,0.0340927131,0.1290869713,0.0026307763,-0.121612221,-0.1386104673,0.028272545,0.0296027474,0.0627669021,-0.0506141633,0.0068659862,-0.1284148097,0.0055603147,-0.1055516005,0.1797930896,-0.0011825397,0.0364465043,-0.1465276331,0.1065352634,0.1501805186,0.0408345982,0.1666402221,0.1247159764,0.2000236809,-0.1061964184,0.002927812,-0.0023821457,-0.0866419375,-0.1336936206,0.0793722644,0.0737929568,-0.0136135463,0.0011213401,-0.0176548846,-0.1438848376,0.2046404481,0.046034649,-0.0504883751]],"hackathon_name":"GreatUniHack Fall 2016","index":574,"project_description":"Improving the text editorsI was inspired to do a program which reduces development time and distaction level for those who use text editors in any way. There were already virtual desktops on the market, but the only thing they do is project the desktop in virtual space. \nAt its' current state it can edit a text file specified in unity source code.\nI've built it using Unity and C#, as Unity has VR integration.\nThe hardest part for me was the complexity of building a text editor.\nThe VR text editing environment can be extended to use multiple window for Virtual workspace control.GreatUniHack Fall 2016Nikita Daniliuk\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:26 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"3D Text editing environment","project_tags":["unity","c#"],"project_url":"https:\/\/devpost.com\/software\/3d-text-editing-environment","keywords":"text,virtual,unity,vr,use,workspace,development,extended,environment,editors,editor,editing,edit,distaction,current,desktops,desktop,hardest,control,complexity"},{"level_0":575,"hack_vector":[[0.1525056362,-0.1048505008,-0.0348276086,0.0359480157,-0.0159334894,0.1234275699,0.2081593871,-0.0201362763,-0.0233341008,-0.0096640503,0.00065826,-0.0600410514,0.1330167949,-0.0651861727,0.0612471104,-0.0110946139,0.1991745383,-0.0095393686,0.0426422507,0.1365225017,-0.2569389045,0.0227589253,-0.0384323895,0.0034444735,0.1285722852,-0.0184968077,-0.0340084396,-0.1583074629,-0.0167897735,-0.1091829985,0.0587236993,-0.1312680542,0.0228226893,-0.0741251335,-0.0049314806,-0.0345918909,0.1122425124,-0.147512272,-0.0632645264,-0.0123575209,0.0587056167,-0.1354421526,-0.1360220611,-0.041480422,0.0651306883,-0.0522780381,0.003595005,-0.088960126,-0.0234958846,-0.1965976059,-0.1398738027,0.0221403632,-0.1090749726,0.0183931701,-0.2151107043,0.1645880044,-0.1373625249,-0.0339677893,0.0317096412,-0.1091565564,-0.070229046,0.0242259558,0.0749401525,0.0297753979,0.1099137291,0.0278833341,-0.107896544,-0.1194493994,0.028924115,0.0372041017,0.0723770857,-0.0449617989,0.0229645036,-0.1201257929,0.0415720716,-0.131290108,0.1582905203,0.0065241288,0.0021229363,-0.129419148,0.1111414731,0.1493504047,0.0596552007,0.1620871872,0.1061412171,0.2073884159,-0.0945827439,-0.041822128,-0.0234639067,-0.0653675869,-0.1316817105,0.056683287,0.1052877754,-0.0411635228,-0.0119862109,0.019365916,-0.1703209728,0.2300375253,-0.0020085494,-0.0562869683]],"hackathon_name":"GreatUniHack Fall 2016","index":575,"project_description":"Solving one of the greatest challenges of players - a finite number of mapsWorking map generatorHow many times you were playing a good game and after spending a few hours you were greeted by a screen saying game over? And after spending a decent amount of money there is nothing what you can do with your Blu-ray disc, right? We have a solution to this problem, a recurrent neural network that is able to generate new levels for your game!Based on experience, a set of Mario Bros maps, the network generates new levels. The only thing we require from you is a length of a map as well as the crazy factor. Cause why keep stuff boring?We built this using Keras, a python library for deep learning networks. We first took maps available online, turned them into ASCII representation using OpenCV and then feed the text as the training set for the network. After generating a new ASCII map we turned them again to Javascript format, which is understandable by the version of Mario we are using.At the beginning we were trying to build a network able playing Mario itself, unfortunately we had to leave this one, since it very hard to setup the feedback step. We focused on the generating new maps only.It is working!A better understanding of recurrent neural networks. <3GreatUniHack Fall 2016Grzegorz Jacenk\u00f3w\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:24 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MarioNet","project_tags":["python","javascript","html5","opencv","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/marionet","keywords":null},{"level_0":576,"hack_vector":[[0.1407419592,-0.0960775688,-0.0259398092,0.0426193662,-0.0093295779,0.1253762841,0.1906876862,-0.0226847995,-0.0313276164,-0.01589486,0.0099132713,-0.0826589018,0.1475145519,-0.0687954053,0.0591962002,-0.0083752051,0.1941301078,-0.0254262667,0.0499749817,0.1354556233,-0.247643128,0.0300793834,-0.0379601717,0.0063402345,0.1219758987,-0.0353966057,-0.0344314612,-0.1650097668,-0.0348549969,-0.0996354371,0.0721836388,-0.111736834,0.0318139717,-0.0704204366,-0.0129192881,-0.0275490135,0.1145797521,-0.1431250423,-0.0528405346,-0.0151944021,0.0621502213,-0.1226972416,-0.144570604,-0.0276933871,0.0688477755,-0.0505631976,0.0078678373,-0.0908807665,-0.0112991584,-0.2123101205,-0.1538526565,0.0251477994,-0.1084748879,0.0305776112,-0.2253230363,0.1576346159,-0.1404039711,-0.0351792909,0.0371574797,-0.1184388846,-0.0753262788,0.0215823781,0.0691821352,0.0318185985,0.109088704,0.0330692865,-0.0859752148,-0.1228200048,0.0189028289,0.0263271481,0.0688380226,-0.046884913,0.0150638977,-0.1138652191,0.0456729271,-0.108499147,0.1731431037,-0.0034851758,-0.0057916502,-0.1287273169,0.1063107178,0.146118775,0.0531378128,0.1562623829,0.109861359,0.2080394775,-0.085817121,-0.0539381504,-0.0290567968,-0.0661656633,-0.1425901651,0.0550827719,0.1055717021,-0.0407499038,-0.0266684461,0.0121340035,-0.1684698164,0.2404699475,0.0102636833,-0.0650700629]],"hackathon_name":"GreatUniHack Fall 2016","index":576,"project_description":"THE ALL INCLUSIVE BESPOKE PROPERTY VIEWING SOLUTIONVReal Estate development on the go!We gathered the inspiration for the NOMA challenge as we found the most interesting and challenging out of the few that were up for grabs. Our team thought that the task of working with virtual reality, modelling and innovation  was the most suitable so we built upon it.The hack itself is basically set to innovate the way people buy real estate: instead of going to every single location by foot or car, the customer would have the ability to meet with an agent or just view the estate from home with any VR headset. But our project does not just stop there - the main goal is to not only be able to view the rooms, but to actually customize them yourself! You could add any furniture you desire just to have a better feel on how a specific property tailors to your needs! In addition to that, the engine would work in such a way that you only need to implement the type of housing you need (office, flat, etc.), the amount of occupants and the system will automatically generate a room with certain types of furniture in it in a specific formation. The last thing to be implemented would be a machine learning algorithm that actually learns from customers needs and makes better assumptions as to what type of house to offer!The project was build by using a simple piece of hardware and a few pieces of software, that being the the famous Samsung VR gear, 3D modeling software BLENDER and last but certainly not least, the Unreal Engine for the actual mapping of items and surroundings. We decided to use the Unreal engine as it has a really friendly user interface called \"blueprint\" that actually helps minimize the amount of low level code and move building blocks of the program into a more high level environment.During our development path we have encountered quite a few hurdles: the largest of them being the massive struggle with the Oculus rift. The main issue with the rift was that we spent an actual 9 hours trying to get it to work on our laptops. We went to the extent of trying a campus computer to no avail. This automatically led to a loss of precious time, but we managed to get back from it and come back with a bang! The setback did not terminate our drive and we came out with a finished alpha version of the app that we are very proud to present!We manage to deal with the setback from the OCULUS, dealt with numerous errors from Unreal engine, and finally came out with a working product!We have learned a great lesson in teamwork as well as actual software and hardware skills that helped us implement our project!Who knows, the app might one day reach an actual beta version!GreatUniHack Fall 2016Created a back end C++ algorithm to determine the required room size, from the available, and generate the initial layout depending on the number of employees and the work space style. The initial map is then set up for the user to explore and tweak. I had never coded in C++ before, only C; so the differences between the two languages became apparent to me.I created the 3d models for the app and set up Unreal Engine.Applied my knowledge in C++ to aid my teammates in developing the actual project (algorithm). Helped troubleshoot various issues during the project and prepared the Powerpoint presentation.I helped code the back-end algorithm written in C++ and creation of Blueprints in Unreal Engine. This was my first time using Unreal Engine and C++ so I learned a lot about the engine (plus another programming language to stick on the ol' CV).Mantas Navickas\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:32 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"VReal Estate","project_tags":["unreal-engine","blender","c++"],"project_url":"https:\/\/devpost.com\/software\/vreal-estate","keywords":"actual,engine,would,software,project,actually,unreal,estate,better,last,learned,specific,get,built,hardware,setback,came,level,rift,furniture"},{"level_0":577,"hack_vector":[[0.1517412812,-0.1043829545,-0.0312938318,0.0464725234,-0.0171870925,0.1295980811,0.1919380575,-0.0294642076,-0.021839302,-0.0128409518,0.0178779308,-0.0737571567,0.1545263529,-0.0618683025,0.072872892,-0.026636513,0.1908667088,-0.0141159017,0.0426022969,0.1333204806,-0.2490584999,0.028386984,-0.0367393531,0.0082193492,0.1181382015,-0.0296334513,-0.0231633987,-0.1655346602,-0.0383954085,-0.0952628553,0.0773542598,-0.1167026535,0.0158841573,-0.07553453,-0.0144063951,-0.0328938179,0.1112215817,-0.1458139271,-0.0663746223,-0.0209644772,0.0628553033,-0.117913045,-0.1391249448,-0.026301017,0.0715925694,-0.0470881946,0.0086240908,-0.0916365981,-0.0290132463,-0.2119594216,-0.1539980322,0.0167383831,-0.1034758016,0.0223948937,-0.2225417346,0.1599190086,-0.1232063249,-0.0404445231,0.0367643423,-0.1125993058,-0.073840037,0.0160066858,0.0762810484,0.0247011725,0.1042866483,0.0339929387,-0.0862983838,-0.1143255606,0.0218806639,0.0288863908,0.0633959398,-0.0390982479,0.0224540811,-0.1125731468,0.0369636863,-0.1149144471,0.176355958,0.0028121441,-0.0116396965,-0.1267917454,0.111029461,0.1549207866,0.0478576981,0.1588878632,0.103922531,0.2132692933,-0.0836393014,-0.0570409559,-0.028772885,-0.0608235225,-0.1387176365,0.0610453226,0.1048229486,-0.0402341634,-0.024470713,0.0154112075,-0.1617753655,0.2449681759,-0.0040023117,-0.0640898943]],"hackathon_name":"GreatUniHack Fall 2016","index":577,"project_description":"A speech-to-text adventure with Raspberry PiHitchhiker's Guide to the Galaxy and many other cool text adventures. We were\nalso very excited to work with Alexa following our previous failed attempts with\nother hardware such as the Sigfox board and Estimote - after attempting to make\na device-based hide-and-seek game to no avail, we continued to explore ideas\ninvolving different types of games, including a reaction-based buzzer game,\nbut the idea of a text-based game in Alexa quickly won it for us.Alexa offers one text-based adventure game dictated between you and your Amazon Echo device, based on our experiences at GreatUniHack 2016, albeit with a little more gruesome death from lack of self-care...if you don't play it right.Initially we experimented with some Bluetooth, GPS and NFC devices with ideas such as a hide-and-seek game and access control for the workplace with some helpful widgets. However, hardware failed us, and we were not able to carry out these ideas, so after a fairly speedy brainstorm we chose to rely on the Amazon Echo for text-based games. The statistics for this are viewable via a web frontend powered by jQuery and PHP, and all information is also retrievable via the Echo, which itself recognises users entered into a database on the website.The first six and a half hours were pretty much wasted attempting to get the Estimote, Arduino and Sigfox devices to work, though after about half an hour of brainstorming we quickly cemented our next idea. A lot of challenges required close cohesion between team members, such as the implementation of PHP and databases in the otherwise-jQuery website.I (Simon) am proud that I've managed to hold my own in what seems to be a set of far more experienced peers, and I'm glad to have both made a positive contribution that has impressed my team and even learnt a little bit for myself.I (Simon) learned some jQuery and an interesting little plugin for it, a terminal emulator by the name of ptty. Also, since this was my first hackathon, I also picked up on some tips and put into practice a few hints I'd already learned from articles, the best of which being to never stop until you feel ready to basically just pass out. Within reason, of course.We could update it to make it more stable (though error handling is something we're glad to say Michael implemented very late in the hackathon), and we could also devise more games for it.GreatUniHack Fall 2016Simon Fish\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:39 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Game Master","project_tags":["html","css","php","javascript","jquery","amazon-alexa","amazon-web-services","amazon-dynamodb"],"project_url":"https:\/\/devpost.com\/software\/game-master","keywords":null},{"level_0":578,"hack_vector":[[0.131918177,-0.1034752876,-0.0327700153,0.0288620945,-0.0231534075,0.1325131059,0.1984399557,-0.0266605299,-0.0157668963,-0.0199650768,0.0209630951,-0.0543230511,0.1366602331,-0.0787598863,0.051149331,0.0439621732,0.2444353402,-0.00233794,0.0338272527,0.1348769814,-0.2386034131,0.0311355256,-0.0384770967,-0.0353628695,0.1077375785,-0.0309488829,-0.038319122,-0.1857943684,-0.0050113974,-0.0996033102,0.0617400408,-0.1127016544,0.0394392274,-0.0799678117,-0.0112277465,-0.0057679373,0.1176592037,-0.1341487318,-0.0362985395,-0.0012693384,0.0314454995,-0.138379246,-0.1723180711,-0.0364138745,0.0607332736,-0.0657111034,0.0181593597,-0.0629789755,-0.0133835459,-0.2193660885,-0.1315157861,0.0206919815,-0.0992235839,-0.0279194321,-0.1966574639,0.1608266234,-0.1274024844,-0.0308611579,0.040278662,-0.0850497931,-0.0602702051,0.0300348978,0.0825140029,0.0605355911,0.1090088189,0.0001517158,-0.0929080695,-0.1365453899,0.043757949,0.016810067,0.0678606704,-0.0448370129,0.0187924076,-0.112827912,0.0037564302,-0.1252183914,0.1648875177,-0.0061132438,0.0216368139,-0.1412665844,0.1223836765,0.1673877239,0.0401646383,0.1857414395,0.0950479656,0.1934192479,-0.1090337113,-0.0285008717,-0.0277774502,-0.0890444741,-0.1407278031,0.0539171249,0.076405704,-0.0283648726,-0.0031918392,0.0101425918,-0.1574579775,0.2046664208,0.0262197386,-0.0918860808]],"hackathon_name":"GreatUniHack Fall 2016","index":578,"project_description":"Make events great again.A web and mobile application that helps people at events put all their pictures together.People take lots of photos at events, and then forget to share them. People attend events and would like to see all the pictures that were taken in there in one place. Would there be any way to automate this process and centralize it?Android app in Java, looks out for new pictures taken and uploads them as soon as they are taken (has a toggle to pause auto-upload). PHP server that get the serialized picture and displays it. Web interface to create new events and set the password for users who are in the event location get notified to upload their picture.GreatUniHack Fall 2016I worked on having the application check when a new picture has been taken and forwarding it to the uploading process.Alexandru-Paul Copil\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:44 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"PhotoMerge","project_tags":["php","java","html","android-studio"],"project_url":"https:\/\/devpost.com\/software\/great-uni-hack-2016","keywords":"events,great,taken,people,pictures,making,new,would,picture,get,android,upload,web,create,looks,app,location,like,application,java"},{"level_0":579,"hack_vector":[[0.1249969527,-0.0701074153,-0.0167906824,0.0470388047,-0.0215874352,0.1265160143,0.2043912262,-0.0148066152,-0.0357899442,-0.0132059343,0.0272875056,-0.0735994875,0.1460223794,-0.0770532787,0.057553418,-0.0015671636,0.2077159584,-0.0142708542,0.05130101,0.1300530732,-0.2242640704,0.0437860787,-0.0469368212,-0.0131611368,0.1020350903,-0.0228752289,-0.0374646373,-0.1728800237,-0.0180734657,-0.0857815519,0.0609621294,-0.0994417071,0.0313584581,-0.081241034,-0.0065263873,-0.0003544114,0.1318739802,-0.13351731,-0.0554343648,-0.0057414267,0.0444185138,-0.1333891153,-0.1521064639,-0.0233451817,0.072732307,-0.0514493063,0.0106271412,-0.0901388302,-0.0042537577,-0.210901469,-0.1475031674,0.0204089545,-0.1049938127,0.0217550509,-0.2095750123,0.1489227861,-0.1361468285,-0.0283841714,0.0511243492,-0.1211677417,-0.0623354763,0.024511287,0.0991464332,0.0508971214,0.1193343326,0.0150349671,-0.0809053779,-0.1326739043,0.0326758623,0.021739604,0.0602955669,-0.0440144539,0.004538279,-0.1118344963,0.0308672264,-0.1324947178,0.177226752,-0.002104192,0.0096814167,-0.1406116188,0.1204032972,0.1520719975,0.062118277,0.1562537998,0.1008366272,0.1956917644,-0.1037276909,-0.062004324,-0.0299942866,-0.0926419869,-0.1674108058,0.048831664,0.1001382619,-0.0345677659,-0.0027795795,0.0174762532,-0.1679266095,0.2314415276,0.0162794758,-0.0738946795]],"hackathon_name":"GreatUniHack Fall 2016","index":579,"project_description":"Need money? Save money!Our database on localhostCode behind the Android appWe were inspired to help solve one of the greatest problems for students, which is budgeting.It processes a photo of a receipt with the help of an Android app which sends data to a database, which is linked to an  website that breaks the receipt down into products with their prices, gives a daily report of the expenses and shows the most expensive product bought.We used Android Studio to create the mobile application and for the website we utilised  PHP, CSS and HTML5 and the database uses MySql.We tried to use Amazon Web Services, but only managed to connect the database, and not the website, thus were not able to put our application online and can only be used locally.Developing our very first complex application which includes a mobile app and a database. We are also proud of coming up with an interesting idea and being able to implement it in the given time.How to use numerous languages and programmes, fix lots of difficulties that came up and work as a team.Implement an API that based on the previous entries can give an estimate of the future expenditures, most likely products to be bought frequently. Also, based on the favourite product, the API will be able to search online for the lowest prices and give recommendation on where to shop in order to achieve the lowest prices. We would like to develop an Android\/IOS version of the website, with the same functionality.GreatUniHack Fall 2016Anca Radulian\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:49 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Budget It","project_tags":["php","html5","css","android-studio","mysql"],"project_url":"https:\/\/devpost.com\/software\/budget-it","keywords":"website,database,able,android,prices,application,receipt,help,give,lowest,mobile,online,products,proud,product,implement,app,used,also,use"},{"level_0":580,"hack_vector":[[0.1358071119,-0.0972940177,-0.0276151057,0.0515730865,-0.0240675565,0.1379776001,0.1864184588,-0.0308974888,-0.0197142288,-0.0187834837,0.0123126581,-0.0588942282,0.1518915445,-0.0705746561,0.0529550314,0.0008749766,0.2069522142,-0.0097646089,0.0507818982,0.1222825125,-0.2428189814,0.0236483235,-0.0370403528,-0.0020498994,0.1257921308,-0.0273635406,-0.0366513692,-0.1632404774,-0.0172826946,-0.0981160551,0.0598501675,-0.1139586866,0.034689568,-0.0673683882,-0.0163654778,-0.022603374,0.1312447637,-0.142029345,-0.0506874621,-0.0021188676,0.0637567788,-0.1279003173,-0.1559675783,-0.0325018242,0.0573633425,-0.0440989919,0.016093798,-0.0771960318,-0.0123147024,-0.2096702158,-0.1457068771,0.0318540968,-0.1117036864,0.0140749076,-0.2246213704,0.1631698459,-0.1370797008,-0.0251242835,0.0410554521,-0.0974718928,-0.0736134276,0.0146646742,0.0786362737,0.0394111685,0.1132383123,0.0269169118,-0.0830599815,-0.1365239769,0.0280178729,0.0316277333,0.0665053576,-0.0443655886,0.0119365109,-0.1159624234,0.0272021051,-0.1056296825,0.1781587452,0.0079420703,-0.0002886353,-0.1348973811,0.1053478494,0.1579261124,0.0467087217,0.1641721725,0.1190517619,0.205734387,-0.0924760178,-0.0434127413,-0.022601841,-0.0705928802,-0.1408575177,0.0648255721,0.0971689448,-0.0313361287,-0.006938837,0.0014240564,-0.1563837379,0.2406031936,0.019949384,-0.0652496293]],"hackathon_name":"GreatUniHack Fall 2016","index":580,"project_description":"We will match investors to your startupsWe wanted to create a simple iOS application which allows small businesses and startups to be funded with a swipe on the screenIt presents startups and businesses to investors and helps them invest their money for the best idea by just swiping on the screen.We used swift 3 and xcode to develop the application. Git hub for the version control\nof the app and Parser for back-end of the software.Team management was a big drawback when came to implementing the project. The facebook login did not work at all and we lost couple of our team members. The setting up of the systems delayed us(Damn you xcode and no compatibility with Linux!)Swift was a new language for all of us. It was fun to have a go with it and try to impact on something with our recently gained knowledge.\nCreating a shell for the application was a good accomplishment.Time management is very important factor in short duration challenges. Spending more than an hour stuck on the same thing is devastating for your project development.Investr has a promising future if we spend time updating and upgrading our initial product. It is missing features like PayPal linking and transfer but given more time it could be implemented. After all, this is an idea developed for only 24 hours!GreatUniHack Fall 2016Radoslav Radev\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:33 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Investr","project_tags":["swift","xcode","parse"],"project_url":"https:\/\/devpost.com\/software\/investr","keywords":"application,time,xcode,team,investr,idea,management,project,startups,swift,challenges,businesses,screen,us,built,factor,fun,funded,future,gained"},{"level_0":581,"hack_vector":[[0.1525056362,-0.1048505008,-0.0348276086,0.0359480157,-0.0159334894,0.1234275699,0.2081593871,-0.0201362763,-0.0233341008,-0.0096640503,0.00065826,-0.0600410514,0.1330167949,-0.0651861727,0.0612471104,-0.0110946139,0.1991745383,-0.0095393686,0.0426422507,0.1365225017,-0.2569389045,0.0227589253,-0.0384323895,0.0034444735,0.1285722852,-0.0184968077,-0.0340084396,-0.1583074629,-0.0167897735,-0.1091829985,0.0587236993,-0.1312680542,0.0228226893,-0.0741251335,-0.0049314806,-0.0345918909,0.1122425124,-0.147512272,-0.0632645264,-0.0123575209,0.0587056167,-0.1354421526,-0.1360220611,-0.041480422,0.0651306883,-0.0522780381,0.003595005,-0.088960126,-0.0234958846,-0.1965976059,-0.1398738027,0.0221403632,-0.1090749726,0.0183931701,-0.2151107043,0.1645880044,-0.1373625249,-0.0339677893,0.0317096412,-0.1091565564,-0.070229046,0.0242259558,0.0749401525,0.0297753979,0.1099137291,0.0278833341,-0.107896544,-0.1194493994,0.028924115,0.0372041017,0.0723770857,-0.0449617989,0.0229645036,-0.1201257929,0.0415720716,-0.131290108,0.1582905203,0.0065241288,0.0021229363,-0.129419148,0.1111414731,0.1493504047,0.0596552007,0.1620871872,0.1061412171,0.2073884159,-0.0945827439,-0.041822128,-0.0234639067,-0.0653675869,-0.1316817105,0.056683287,0.1052877754,-0.0411635228,-0.0119862109,0.019365916,-0.1703209728,0.2300375253,-0.0020085494,-0.0562869683]],"hackathon_name":"GreatUniHack Fall 2016","index":581,"project_description":"Solving one of the greatest challenges of players - a finite number of mapsWorking map generatorHow many times you were playing a good game and after spending a few hours you were greeted by a screen saying game over? And after spending a decent amount of money there is nothing what you can do with your Blu-ray disc, right? We have a solution to this problem, a recurrent neural network that is able to generate new levels for your game!Based on experience, a set of Mario Bros maps, the network generates new levels. The only thing we require from you is a length of a map as well as the crazy factor. Cause why keep stuff boring?We built this using Keras, a python library for deep learning networks. We first took maps available online, turned them into ASCII representation using OpenCV and then feed the text as the training set for the network. After generating a new ASCII map we turned them again to Javascript format, which is understandable by the version of Mario we are using.At the beginning we were trying to build a network able playing Mario itself, unfortunately we had to leave this one, since it very hard to setup the feedback step. We focused on the generating new maps only.It is working!A better understanding of recurrent neural networks. <3GreatUniHack Fall 2016Grzegorz Jacenk\u00f3w\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:24 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MarioNet","project_tags":["python","javascript","html5","opencv","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/marionet","keywords":null},{"level_0":582,"hack_vector":[[0.1407419592,-0.0960775688,-0.0259398092,0.0426193662,-0.0093295779,0.1253762841,0.1906876862,-0.0226847995,-0.0313276164,-0.01589486,0.0099132713,-0.0826589018,0.1475145519,-0.0687954053,0.0591962002,-0.0083752051,0.1941301078,-0.0254262667,0.0499749817,0.1354556233,-0.247643128,0.0300793834,-0.0379601717,0.0063402345,0.1219758987,-0.0353966057,-0.0344314612,-0.1650097668,-0.0348549969,-0.0996354371,0.0721836388,-0.111736834,0.0318139717,-0.0704204366,-0.0129192881,-0.0275490135,0.1145797521,-0.1431250423,-0.0528405346,-0.0151944021,0.0621502213,-0.1226972416,-0.144570604,-0.0276933871,0.0688477755,-0.0505631976,0.0078678373,-0.0908807665,-0.0112991584,-0.2123101205,-0.1538526565,0.0251477994,-0.1084748879,0.0305776112,-0.2253230363,0.1576346159,-0.1404039711,-0.0351792909,0.0371574797,-0.1184388846,-0.0753262788,0.0215823781,0.0691821352,0.0318185985,0.109088704,0.0330692865,-0.0859752148,-0.1228200048,0.0189028289,0.0263271481,0.0688380226,-0.046884913,0.0150638977,-0.1138652191,0.0456729271,-0.108499147,0.1731431037,-0.0034851758,-0.0057916502,-0.1287273169,0.1063107178,0.146118775,0.0531378128,0.1562623829,0.109861359,0.2080394775,-0.085817121,-0.0539381504,-0.0290567968,-0.0661656633,-0.1425901651,0.0550827719,0.1055717021,-0.0407499038,-0.0266684461,0.0121340035,-0.1684698164,0.2404699475,0.0102636833,-0.0650700629]],"hackathon_name":"GreatUniHack Fall 2016","index":582,"project_description":"THE ALL INCLUSIVE BESPOKE PROPERTY VIEWING SOLUTIONVReal Estate development on the go!We gathered the inspiration for the NOMA challenge as we found the most interesting and challenging out of the few that were up for grabs. Our team thought that the task of working with virtual reality, modelling and innovation  was the most suitable so we built upon it.The hack itself is basically set to innovate the way people buy real estate: instead of going to every single location by foot or car, the customer would have the ability to meet with an agent or just view the estate from home with any VR headset. But our project does not just stop there - the main goal is to not only be able to view the rooms, but to actually customize them yourself! You could add any furniture you desire just to have a better feel on how a specific property tailors to your needs! In addition to that, the engine would work in such a way that you only need to implement the type of housing you need (office, flat, etc.), the amount of occupants and the system will automatically generate a room with certain types of furniture in it in a specific formation. The last thing to be implemented would be a machine learning algorithm that actually learns from customers needs and makes better assumptions as to what type of house to offer!The project was build by using a simple piece of hardware and a few pieces of software, that being the the famous Samsung VR gear, 3D modeling software BLENDER and last but certainly not least, the Unreal Engine for the actual mapping of items and surroundings. We decided to use the Unreal engine as it has a really friendly user interface called \"blueprint\" that actually helps minimize the amount of low level code and move building blocks of the program into a more high level environment.During our development path we have encountered quite a few hurdles: the largest of them being the massive struggle with the Oculus rift. The main issue with the rift was that we spent an actual 9 hours trying to get it to work on our laptops. We went to the extent of trying a campus computer to no avail. This automatically led to a loss of precious time, but we managed to get back from it and come back with a bang! The setback did not terminate our drive and we came out with a finished alpha version of the app that we are very proud to present!We manage to deal with the setback from the OCULUS, dealt with numerous errors from Unreal engine, and finally came out with a working product!We have learned a great lesson in teamwork as well as actual software and hardware skills that helped us implement our project!Who knows, the app might one day reach an actual beta version!GreatUniHack Fall 2016Created a back end C++ algorithm to determine the required room size, from the available, and generate the initial layout depending on the number of employees and the work space style. The initial map is then set up for the user to explore and tweak. I had never coded in C++ before, only C; so the differences between the two languages became apparent to me.I created the 3d models for the app and set up Unreal Engine.Applied my knowledge in C++ to aid my teammates in developing the actual project (algorithm). Helped troubleshoot various issues during the project and prepared the Powerpoint presentation.I helped code the back-end algorithm written in C++ and creation of Blueprints in Unreal Engine. This was my first time using Unreal Engine and C++ so I learned a lot about the engine (plus another programming language to stick on the ol' CV).Mantas Navickas\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:32 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"VReal Estate","project_tags":["unreal-engine","blender","c++"],"project_url":"https:\/\/devpost.com\/software\/vreal-estate","keywords":"actual,engine,would,software,project,actually,unreal,estate,better,last,learned,specific,get,built,hardware,setback,came,level,rift,furniture"},{"level_0":583,"hack_vector":[[0.1517412812,-0.1043829545,-0.0312938318,0.0464725234,-0.0171870925,0.1295980811,0.1919380575,-0.0294642076,-0.021839302,-0.0128409518,0.0178779308,-0.0737571567,0.1545263529,-0.0618683025,0.072872892,-0.026636513,0.1908667088,-0.0141159017,0.0426022969,0.1333204806,-0.2490584999,0.028386984,-0.0367393531,0.0082193492,0.1181382015,-0.0296334513,-0.0231633987,-0.1655346602,-0.0383954085,-0.0952628553,0.0773542598,-0.1167026535,0.0158841573,-0.07553453,-0.0144063951,-0.0328938179,0.1112215817,-0.1458139271,-0.0663746223,-0.0209644772,0.0628553033,-0.117913045,-0.1391249448,-0.026301017,0.0715925694,-0.0470881946,0.0086240908,-0.0916365981,-0.0290132463,-0.2119594216,-0.1539980322,0.0167383831,-0.1034758016,0.0223948937,-0.2225417346,0.1599190086,-0.1232063249,-0.0404445231,0.0367643423,-0.1125993058,-0.073840037,0.0160066858,0.0762810484,0.0247011725,0.1042866483,0.0339929387,-0.0862983838,-0.1143255606,0.0218806639,0.0288863908,0.0633959398,-0.0390982479,0.0224540811,-0.1125731468,0.0369636863,-0.1149144471,0.176355958,0.0028121441,-0.0116396965,-0.1267917454,0.111029461,0.1549207866,0.0478576981,0.1588878632,0.103922531,0.2132692933,-0.0836393014,-0.0570409559,-0.028772885,-0.0608235225,-0.1387176365,0.0610453226,0.1048229486,-0.0402341634,-0.024470713,0.0154112075,-0.1617753655,0.2449681759,-0.0040023117,-0.0640898943]],"hackathon_name":"GreatUniHack Fall 2016","index":583,"project_description":"A speech-to-text adventure with Raspberry PiHitchhiker's Guide to the Galaxy and many other cool text adventures. We were\nalso very excited to work with Alexa following our previous failed attempts with\nother hardware such as the Sigfox board and Estimote - after attempting to make\na device-based hide-and-seek game to no avail, we continued to explore ideas\ninvolving different types of games, including a reaction-based buzzer game,\nbut the idea of a text-based game in Alexa quickly won it for us.Alexa offers one text-based adventure game dictated between you and your Amazon Echo device, based on our experiences at GreatUniHack 2016, albeit with a little more gruesome death from lack of self-care...if you don't play it right.Initially we experimented with some Bluetooth, GPS and NFC devices with ideas such as a hide-and-seek game and access control for the workplace with some helpful widgets. However, hardware failed us, and we were not able to carry out these ideas, so after a fairly speedy brainstorm we chose to rely on the Amazon Echo for text-based games. The statistics for this are viewable via a web frontend powered by jQuery and PHP, and all information is also retrievable via the Echo, which itself recognises users entered into a database on the website.The first six and a half hours were pretty much wasted attempting to get the Estimote, Arduino and Sigfox devices to work, though after about half an hour of brainstorming we quickly cemented our next idea. A lot of challenges required close cohesion between team members, such as the implementation of PHP and databases in the otherwise-jQuery website.I (Simon) am proud that I've managed to hold my own in what seems to be a set of far more experienced peers, and I'm glad to have both made a positive contribution that has impressed my team and even learnt a little bit for myself.I (Simon) learned some jQuery and an interesting little plugin for it, a terminal emulator by the name of ptty. Also, since this was my first hackathon, I also picked up on some tips and put into practice a few hints I'd already learned from articles, the best of which being to never stop until you feel ready to basically just pass out. Within reason, of course.We could update it to make it more stable (though error handling is something we're glad to say Michael implemented very late in the hackathon), and we could also devise more games for it.GreatUniHack Fall 2016Simon Fish\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:39 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Game Master","project_tags":["html","css","php","javascript","jquery","amazon-alexa","amazon-web-services","amazon-dynamodb"],"project_url":"https:\/\/devpost.com\/software\/game-master","keywords":null},{"level_0":584,"hack_vector":[[0.131918177,-0.1034752876,-0.0327700153,0.0288620945,-0.0231534075,0.1325131059,0.1984399557,-0.0266605299,-0.0157668963,-0.0199650768,0.0209630951,-0.0543230511,0.1366602331,-0.0787598863,0.051149331,0.0439621732,0.2444353402,-0.00233794,0.0338272527,0.1348769814,-0.2386034131,0.0311355256,-0.0384770967,-0.0353628695,0.1077375785,-0.0309488829,-0.038319122,-0.1857943684,-0.0050113974,-0.0996033102,0.0617400408,-0.1127016544,0.0394392274,-0.0799678117,-0.0112277465,-0.0057679373,0.1176592037,-0.1341487318,-0.0362985395,-0.0012693384,0.0314454995,-0.138379246,-0.1723180711,-0.0364138745,0.0607332736,-0.0657111034,0.0181593597,-0.0629789755,-0.0133835459,-0.2193660885,-0.1315157861,0.0206919815,-0.0992235839,-0.0279194321,-0.1966574639,0.1608266234,-0.1274024844,-0.0308611579,0.040278662,-0.0850497931,-0.0602702051,0.0300348978,0.0825140029,0.0605355911,0.1090088189,0.0001517158,-0.0929080695,-0.1365453899,0.043757949,0.016810067,0.0678606704,-0.0448370129,0.0187924076,-0.112827912,0.0037564302,-0.1252183914,0.1648875177,-0.0061132438,0.0216368139,-0.1412665844,0.1223836765,0.1673877239,0.0401646383,0.1857414395,0.0950479656,0.1934192479,-0.1090337113,-0.0285008717,-0.0277774502,-0.0890444741,-0.1407278031,0.0539171249,0.076405704,-0.0283648726,-0.0031918392,0.0101425918,-0.1574579775,0.2046664208,0.0262197386,-0.0918860808]],"hackathon_name":"GreatUniHack Fall 2016","index":584,"project_description":"Make events great again.A web and mobile application that helps people at events put all their pictures together.People take lots of photos at events, and then forget to share them. People attend events and would like to see all the pictures that were taken in there in one place. Would there be any way to automate this process and centralize it?Android app in Java, looks out for new pictures taken and uploads them as soon as they are taken (has a toggle to pause auto-upload). PHP server that get the serialized picture and displays it. Web interface to create new events and set the password for users who are in the event location get notified to upload their picture.GreatUniHack Fall 2016I worked on having the application check when a new picture has been taken and forwarding it to the uploading process.Alexandru-Paul Copil\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:44 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"PhotoMerge","project_tags":["php","java","html","android-studio"],"project_url":"https:\/\/devpost.com\/software\/great-uni-hack-2016","keywords":"events,great,taken,people,pictures,making,new,would,picture,get,android,upload,web,create,looks,app,location,like,application,java"},{"level_0":585,"hack_vector":[[0.1249969527,-0.0701074153,-0.0167906824,0.0470388047,-0.0215874352,0.1265160143,0.2043912262,-0.0148066152,-0.0357899442,-0.0132059343,0.0272875056,-0.0735994875,0.1460223794,-0.0770532787,0.057553418,-0.0015671636,0.2077159584,-0.0142708542,0.05130101,0.1300530732,-0.2242640704,0.0437860787,-0.0469368212,-0.0131611368,0.1020350903,-0.0228752289,-0.0374646373,-0.1728800237,-0.0180734657,-0.0857815519,0.0609621294,-0.0994417071,0.0313584581,-0.081241034,-0.0065263873,-0.0003544114,0.1318739802,-0.13351731,-0.0554343648,-0.0057414267,0.0444185138,-0.1333891153,-0.1521064639,-0.0233451817,0.072732307,-0.0514493063,0.0106271412,-0.0901388302,-0.0042537577,-0.210901469,-0.1475031674,0.0204089545,-0.1049938127,0.0217550509,-0.2095750123,0.1489227861,-0.1361468285,-0.0283841714,0.0511243492,-0.1211677417,-0.0623354763,0.024511287,0.0991464332,0.0508971214,0.1193343326,0.0150349671,-0.0809053779,-0.1326739043,0.0326758623,0.021739604,0.0602955669,-0.0440144539,0.004538279,-0.1118344963,0.0308672264,-0.1324947178,0.177226752,-0.002104192,0.0096814167,-0.1406116188,0.1204032972,0.1520719975,0.062118277,0.1562537998,0.1008366272,0.1956917644,-0.1037276909,-0.062004324,-0.0299942866,-0.0926419869,-0.1674108058,0.048831664,0.1001382619,-0.0345677659,-0.0027795795,0.0174762532,-0.1679266095,0.2314415276,0.0162794758,-0.0738946795]],"hackathon_name":"GreatUniHack Fall 2016","index":585,"project_description":"Need money? Save money!Our database on localhostCode behind the Android appWe were inspired to help solve one of the greatest problems for students, which is budgeting.It processes a photo of a receipt with the help of an Android app which sends data to a database, which is linked to an  website that breaks the receipt down into products with their prices, gives a daily report of the expenses and shows the most expensive product bought.We used Android Studio to create the mobile application and for the website we utilised  PHP, CSS and HTML5 and the database uses MySql.We tried to use Amazon Web Services, but only managed to connect the database, and not the website, thus were not able to put our application online and can only be used locally.Developing our very first complex application which includes a mobile app and a database. We are also proud of coming up with an interesting idea and being able to implement it in the given time.How to use numerous languages and programmes, fix lots of difficulties that came up and work as a team.Implement an API that based on the previous entries can give an estimate of the future expenditures, most likely products to be bought frequently. Also, based on the favourite product, the API will be able to search online for the lowest prices and give recommendation on where to shop in order to achieve the lowest prices. We would like to develop an Android\/IOS version of the website, with the same functionality.GreatUniHack Fall 2016Anca Radulian\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:49 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Budget It","project_tags":["php","html5","css","android-studio","mysql"],"project_url":"https:\/\/devpost.com\/software\/budget-it","keywords":"website,database,able,android,prices,application,receipt,help,give,lowest,mobile,online,products,proud,product,implement,app,used,also,use"},{"level_0":586,"hack_vector":[[0.1358071119,-0.0972940177,-0.0276151057,0.0515730865,-0.0240675565,0.1379776001,0.1864184588,-0.0308974888,-0.0197142288,-0.0187834837,0.0123126581,-0.0588942282,0.1518915445,-0.0705746561,0.0529550314,0.0008749766,0.2069522142,-0.0097646089,0.0507818982,0.1222825125,-0.2428189814,0.0236483235,-0.0370403528,-0.0020498994,0.1257921308,-0.0273635406,-0.0366513692,-0.1632404774,-0.0172826946,-0.0981160551,0.0598501675,-0.1139586866,0.034689568,-0.0673683882,-0.0163654778,-0.022603374,0.1312447637,-0.142029345,-0.0506874621,-0.0021188676,0.0637567788,-0.1279003173,-0.1559675783,-0.0325018242,0.0573633425,-0.0440989919,0.016093798,-0.0771960318,-0.0123147024,-0.2096702158,-0.1457068771,0.0318540968,-0.1117036864,0.0140749076,-0.2246213704,0.1631698459,-0.1370797008,-0.0251242835,0.0410554521,-0.0974718928,-0.0736134276,0.0146646742,0.0786362737,0.0394111685,0.1132383123,0.0269169118,-0.0830599815,-0.1365239769,0.0280178729,0.0316277333,0.0665053576,-0.0443655886,0.0119365109,-0.1159624234,0.0272021051,-0.1056296825,0.1781587452,0.0079420703,-0.0002886353,-0.1348973811,0.1053478494,0.1579261124,0.0467087217,0.1641721725,0.1190517619,0.205734387,-0.0924760178,-0.0434127413,-0.022601841,-0.0705928802,-0.1408575177,0.0648255721,0.0971689448,-0.0313361287,-0.006938837,0.0014240564,-0.1563837379,0.2406031936,0.019949384,-0.0652496293]],"hackathon_name":"GreatUniHack Fall 2016","index":586,"project_description":"We will match investors to your startupsWe wanted to create a simple iOS application which allows small businesses and startups to be funded with a swipe on the screenIt presents startups and businesses to investors and helps them invest their money for the best idea by just swiping on the screen.We used swift 3 and xcode to develop the application. Git hub for the version control\nof the app and Parser for back-end of the software.Team management was a big drawback when came to implementing the project. The facebook login did not work at all and we lost couple of our team members. The setting up of the systems delayed us(Damn you xcode and no compatibility with Linux!)Swift was a new language for all of us. It was fun to have a go with it and try to impact on something with our recently gained knowledge.\nCreating a shell for the application was a good accomplishment.Time management is very important factor in short duration challenges. Spending more than an hour stuck on the same thing is devastating for your project development.Investr has a promising future if we spend time updating and upgrading our initial product. It is missing features like PayPal linking and transfer but given more time it could be implemented. After all, this is an idea developed for only 24 hours!GreatUniHack Fall 2016Radoslav Radev\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 13, 2016 06:33 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Investr","project_tags":["swift","xcode","parse"],"project_url":"https:\/\/devpost.com\/software\/investr","keywords":"application,time,xcode,team,investr,idea,management,project,startups,swift,challenges,businesses,screen,us,built,factor,fun,funded,future,gained"},{"level_0":587,"hack_vector":[[0.1443294883,-0.1005136222,-0.027579559,0.0391878001,-0.0273486339,0.1268313974,0.201747328,-0.0166889485,-0.0311713871,0.0090056555,0.0295795631,-0.0571094155,0.1369638294,-0.0714732409,0.0798313469,0.0044580898,0.2145474404,0.0031994153,0.0423796661,0.1134942695,-0.2385232896,0.0297010895,-0.0494207963,-0.0260088276,0.1015087664,-0.025266489,-0.0354850255,-0.1915079057,-0.0077781617,-0.0813624337,0.0685164854,-0.1205338538,0.0197490677,-0.0919877142,-0.0171645526,-0.0003954361,0.1022695974,-0.1348373145,-0.0653846934,0.0053679617,0.0228944607,-0.1475009024,-0.1537648886,-0.0308805648,0.0602899529,-0.0492784567,0.0134720337,-0.0777982026,-0.0197081771,-0.2026880831,-0.1363128573,0.0022744455,-0.1118101701,-0.0084767332,-0.1921637654,0.1670038402,-0.1271941364,-0.0038198547,0.0332824178,-0.0965857282,-0.062336985,0.0334656946,0.085498251,0.0719292685,0.1121484637,0.0053074551,-0.1104225665,-0.121789299,0.0333841667,0.0095048463,0.0677253157,-0.0427026264,0.0259466153,-0.1175169349,0.0245112833,-0.152852416,0.1719715446,-0.0000048391,0.0242572688,-0.1342003047,0.1432216913,0.164123565,0.068205595,0.1660778522,0.098958604,0.2064424306,-0.1005050614,-0.0353374258,-0.0155457193,-0.0867426097,-0.1472177505,0.0534663573,0.0922667161,-0.0434867628,0.0151007567,0.0094366083,-0.1535311192,0.2100533992,0.0138847176,-0.0778671205]],"hackathon_name":"AstonHack 2016","index":587,"project_description":"On your next journey, be informed, be safe, take SafePassage.Curious about using government data sets, we discoverer an API allowing us to access live crime statistics. We wanted to be able to visually display to users how much crime occurs on their daily routes.SafePassage provides the user with a visual representation of  crime density on their daily routes between two locations. This  is displayed on a map making the information easy to interpret. Ultimately, making their journey from A to B safer.We utilised appropriate APIs which provided us with data for routing and crime statistics, which we sourced from Google and the UK government respectively.Extremely long loading times \nMerging APIsGreatly expanded our knowledge of Google maps APIs\nHaving a working prototype\nLearning new languages (PHP)How to access Google and UK government APIs\nA deeper of Javascript and PHPUsing Crate.io to cache crime statistics for quick access in future.Designed on a 720p screen, please view at this resolution if possible!AstonHack 2016daydreamingwill Latham\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 07:34 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SafePassage","project_tags":["javascript","php","google-maps","data.gov.uk"],"project_url":"https:\/\/devpost.com\/software\/safepassage","keywords":"crime,apis,statistics,access,google,government,php,routes,data,safepassage,daily,making,uk,us,using,io,interpret,expanded,inspiration,information"},{"level_0":588,"hack_vector":[[0.1513702124,-0.1095312089,-0.0386531428,0.0392357595,-0.0178529117,0.1283476353,0.1747213751,-0.0288242456,-0.0096840467,-0.0495587774,0.0166388582,-0.0730346888,0.147087127,-0.0587738678,0.0610208176,-0.0016275285,0.2058647871,-0.0052919816,0.035796687,0.1472070366,-0.2458361238,0.0109319342,-0.0395051986,-0.0043619294,0.1092120633,-0.0265471805,-0.0243180227,-0.1560299695,-0.0418180451,-0.1150262058,0.0550374202,-0.1137735471,0.0274781138,-0.0663591176,0.0048802611,-0.0402775034,0.109271653,-0.1512455791,-0.0692968443,-0.0144848013,0.0630740151,-0.1078665107,-0.1476331204,-0.0327880122,0.0588436387,-0.0738757998,0.0151802758,-0.0763525218,-0.0397968367,-0.2212103903,-0.1598045528,0.0196094457,-0.0954381675,-0.0134710595,-0.2096927613,0.1670656353,-0.1065735891,-0.0418554582,0.0389416143,-0.1125731468,-0.0752203986,0.0232001003,0.0614403114,0.0312773101,0.0978870317,0.0415438525,-0.1086174026,-0.1262247115,0.0144578256,0.0277110748,0.0678360984,-0.0398784429,0.0142619442,-0.1164437383,0.0288097113,-0.0986853465,0.1762579679,-0.0003712123,-0.0101608373,-0.1289601624,0.0971197486,0.1632218808,0.0356391855,0.1599850506,0.1034921929,0.2010133117,-0.0918016508,-0.0514613166,-0.0439215042,-0.0602429546,-0.1287271678,0.0680773631,0.1000649482,-0.0435493849,-0.0218813345,-0.0027684104,-0.1672865599,0.2630704343,-0.0008425508,-0.071657531]],"hackathon_name":"AstonHack 2016","index":588,"project_description":"Don't mess with the geese or the geese will mess with youLevel 1Level 3Level 5Level 4Level 2I was attacked by goose and I decided to turn my traumatic experience into a ridiculous game that does not make any sense at all.Imagine you're a goose and you are casually walking around the campus, when suddenly all these people start walking towards and want to attack you. You're faced with 5 different kinds of idiots who don't want you to peacefully strut around the campus.  You have to scare them off by screaming at them (sound effects not included because they got very very annoying after a short amount of time) but if you collide with them, you're pride is hurt because you made contact with the commoners so you must start again.We used a program with a bunch of libraries and youtube video tutorials.We couldn't find a youtube tutorial so we just had to fuck about with it.Actually creating something that is functioning because that was the aim of coming to this hackathon.That we are not completely useless.Getting someone to actually beat the levels because we don't know how to do that.AstonHack 2016Helped in the making process of the game. Help in the learning how to make the character move, and how to set up the room. I also helped in the process of setting up the objects and sprites.I came up with the ridiculous idea and made sure everyone went along with it.\nI figured out how to carry out the processes and fixed some of the problems that we were facing.Alix Longmuir\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 07:55 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hackathon_Goose_Game","project_tags":["gamemaker"],"project_url":"https:\/\/devpost.com\/software\/hackathon_goose_game","keywords":"goose,youtube,around,hackathon,game,start,campus,want,walking,actually,attack,different,idiots,hurt,got,getting,aim,functioning,fuck,find"},{"level_0":589,"hack_vector":[[0.1613164097,-0.1234379485,-0.0227838308,0.0576160401,-0.012003663,0.1425510049,0.2149876505,-0.0447686203,-0.0292685088,-0.0109428456,0.0148422029,-0.036153283,0.1427278519,-0.0626527444,0.0490673818,-0.0024336574,0.2186006308,-0.0100163538,0.0439050049,0.1358015537,-0.2455439419,0.0201688576,-0.0385931768,0.0043918658,0.1575654596,-0.0163784921,-0.0312802307,-0.1811610907,-0.019616168,-0.0951075032,0.0794055536,-0.1258897632,0.0350121036,-0.0699889809,-0.0170887839,-0.0238353945,0.1081724241,-0.1334272027,-0.0425932221,-0.0005230088,0.0667929947,-0.1424992383,-0.1457148492,-0.0462820493,0.0393373854,-0.0519291274,0.0009293238,-0.0620036125,-0.0280782953,-0.2096086442,-0.1122141257,0.0171290282,-0.1145759597,0.0017203237,-0.193129465,0.1646328568,-0.1587883681,-0.0170055088,0.008981023,-0.0775476322,-0.0521295369,0.0358986184,0.0690223128,0.0282987747,0.1201051027,0.0115932599,-0.1234332845,-0.1244706735,0.0268208757,0.0234652162,0.0498644561,-0.0297032334,0.023055315,-0.1133732349,0.0049647344,-0.1020926237,0.1774510741,-0.0025372324,0.0181895271,-0.1428170949,0.1096394658,0.1529475302,0.0403467007,0.1671933085,0.1166956127,0.2137642652,-0.1016065776,-0.0125437099,-0.0240750927,-0.0707754195,-0.1197443753,0.0785930082,0.0877644047,-0.0111008771,-0.0045873169,-0.0037068289,-0.1497766674,0.2118185312,0.0239403378,-0.0510121956]],"hackathon_name":"AstonHack 2016","index":589,"project_description":"A game where you have to hunt gees in virtual realityAston University loves their geese ever so much, so a game about hunting them was the only option!You aim at gees and shoot using the oculus rift headset and remote. You gain score points for every goose hit.We built the game using Unity with programming in C#.Wouldn't be able to list within this fields word limit. Public\/Private variables, sensor accuracy and key binding to the Oculus remote to name a few.Starting of as two guys with little experience in C#, VR and Unity and then finishing having built a game using all three of these.C# basics, making use of Oculus SDK\/Hardware, using unity.Expand game functionality and remove some potential bugs.AstonHack 2016Tom Seelig\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 08:06 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Geese Hunter VR","project_tags":["oculus","c#","unity"],"project_url":"https:\/\/devpost.com\/software\/gees-hunter-vr","keywords":"using,game,unity,oculus,built,remote,vr,geese,goose,gain,gees,hardware,guys,finishing,headset,hit,hunter,hunting,functionality,word"},{"level_0":590,"hack_vector":[[0.1473094076,-0.1618776917,0.012606428,0.0863679498,-0.0549246632,0.1566973776,0.1695635021,-0.0439478345,-0.0251635723,-0.0385962985,-0.0119580962,0.0435293466,0.1208150834,-0.0761622936,0.0001488727,0.0895494744,0.2634408772,0.0414604843,0.0526310988,0.0754630491,-0.1906834692,-0.0022516069,-0.0521663502,-0.0677718297,0.1625324041,-0.0158497654,-0.0765219405,-0.1648204625,0.0396294966,-0.0871517509,0.0178826768,-0.0921461135,0.0739569813,-0.0490350984,-0.0366846472,0.0106895585,0.1433834732,-0.1121989712,0.0030994639,0.0914629549,0.0536891893,-0.1428602338,-0.1818276644,-0.0382661223,-0.0474820882,-0.0588928573,0.0480473675,0.0009533176,-0.0171691868,-0.1823296994,-0.022529358,0.0409693643,-0.1053752303,-0.0752879083,-0.0962376148,0.1470967829,-0.151334852,0.0664741546,-0.011898417,0.0583202206,-0.0129401917,0.0460964218,0.0465548933,0.0753813162,0.1407580227,-0.0549287535,-0.1429060251,-0.1755538434,0.0117076887,0.0043259738,0.0638415739,-0.0261679683,-0.0167889446,-0.1492455155,-0.0859296322,-0.063072063,0.1937835366,0.0409648269,0.0924367458,-0.1508754045,0.107892938,0.157908082,-0.0028994686,0.1391963363,0.1614143848,0.1594384313,-0.1452929825,0.0780122504,0.0022706646,-0.1234331429,-0.0728280842,0.1167224869,0.0279477946,0.0305619072,0.0902431011,-0.0974860936,-0.0610664524,0.1521519274,0.1068358049,-0.0413317457]],"hackathon_name":"AstonHack 2016","index":590,"project_description":"Balls that squeal like a seal (a goose)no timesorryunityall of them... encouragementgeese know everythingmore geeseAstonHack 2016Mala Sadik\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 07:56 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Goose ball","project_tags":["unity","javascript","c#"],"project_url":"https:\/\/devpost.com\/software\/goose-ball","keywords":"geese,unity,goose,ball,built,challenges,encouragement,everything,inspiration,time,know,learned,next,proud,ran,sorry,accomplishments"},{"level_0":591,"hack_vector":[[0.1395317614,-0.1013552845,-0.0322014354,0.0338652916,-0.0216320958,0.1291454732,0.2011639476,-0.027386684,-0.0278584044,-0.016044559,0.0078543397,-0.0592761002,0.1380259842,-0.0772869661,0.061919257,0.0309728719,0.2202978581,-0.0108548123,0.037595354,0.1274298131,-0.2337220609,0.0303964894,-0.0407445654,-0.0263304301,0.1135792285,-0.0346923657,-0.026762167,-0.1840730011,-0.0253097918,-0.0825311393,0.0599319413,-0.1164967939,0.0461588986,-0.0773704797,-0.0316603966,-0.0130054234,0.1219016835,-0.1322309524,-0.0443080217,0.0108628003,0.0439401269,-0.1327238232,-0.160714224,-0.0309032742,0.0591065772,-0.0590909012,0.0247349367,-0.0723990798,-0.0196751747,-0.2241511792,-0.1290222257,0.0087523973,-0.1060598716,-0.0108533213,-0.1906406432,0.1556793749,-0.1428922862,-0.0046213758,0.0220850874,-0.0810864791,-0.0672149286,0.0255690496,0.0691144839,0.0493903793,0.1212875992,-0.0046671312,-0.1001107991,-0.1381804943,0.0399164818,0.0098090377,0.0672168508,-0.0536319874,0.002251446,-0.1251895726,0.0144010484,-0.1196110994,0.1820508689,-0.0022314149,0.0277451351,-0.1369706094,0.1244246885,0.1657888144,0.052906014,0.1774407178,0.1132144853,0.1925115883,-0.1028561741,-0.0109241353,-0.0125161009,-0.0945754275,-0.1518045515,0.0645832717,0.0872554407,-0.0325364098,-0.0007396719,-0.0081678638,-0.1482054889,0.2198638469,0.0374549963,-0.0727472976]],"hackathon_name":"AstonHack 2016","index":591,"project_description":"Auto tagging SEO for wordpress postsThe plugin suggestions below the post in the admin interfaceContent that is being written and scraped by the pluginSettings pageSearch engine optimisation is a black box. No one knows how it works, its all up to maths to decide.The aim of this plugin is to alleviate the need for a user to keep coming up with ways to tag their content.Now all they need to do is write. The plugin will scrape the URLS they reference and the images they post. It then sends them off to Clarifai and Majestic to analyse them and give back what's in the image and the categories that the linked sites belong to respectively.It's all built in PHP and uses the standard wordpress APIs as supplied by the wordpress codexThis is my first time writing a PHP plugin for wordpress so I had to bring myself up to speed with PHPIt works beautifully well and uses all the standard wordpress APIs, no horrible hacking requiredI will be publishing this to the wordpress plugins index once I tidy up some loose ends and make it production readyAstonHack 2016Pandelis Zembashis\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 07:32 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Ceremonious SEO","project_tags":["php","clarifai"],"project_url":"https:\/\/devpost.com\/software\/ceremonious-seo","keywords":"wordpress,plugin,php,works,uses,apis,need,built,standard,writing,ends,engine,first,give,hacking,image,horrible,content,images,index"},{"level_0":592,"hack_vector":[[0.1387604028,-0.1264052242,-0.0017160074,0.0675163195,-0.059490595,0.1546134949,0.1899810582,-0.0528457873,-0.0223495886,-0.0246240348,0.0086304182,0.0107693719,0.1342525035,-0.0803423077,0.0355354398,0.067529276,0.253513664,0.0321513601,0.05308659,0.1098299846,-0.2068283856,0.0035285424,-0.0546514876,-0.0545912907,0.1484217495,-0.0140427193,-0.0605542362,-0.1797573417,0.0177692957,-0.0811387077,0.0306180511,-0.0951983035,0.0558896735,-0.0630154684,-0.03685138,0.0109489085,0.1464472562,-0.1119461134,-0.0095559107,0.0730598196,0.0440693535,-0.1443035007,-0.1857719719,-0.043170061,-0.0142046958,-0.0741084069,0.0413103625,-0.0254736096,-0.0170583315,-0.2140648663,-0.0620693155,0.0289540067,-0.1159489453,-0.0471561104,-0.1398491114,0.1777996272,-0.1598922908,0.053052336,-0.002242781,0.0095650312,-0.0280123483,0.0273752641,0.0592641085,0.0809442475,0.1299846768,-0.0317882597,-0.1229010671,-0.1649827212,0.0257104989,0.0006301574,0.0557339638,-0.0344596654,-0.0181179047,-0.1342026293,-0.0410138145,-0.0754521042,0.1968442351,0.0174447913,0.0688587949,-0.1601527929,0.1139572859,0.1668203175,0.0334698595,0.1496182978,0.1486505568,0.1842959374,-0.1366855949,0.0260414463,0.0133369938,-0.1068470925,-0.1102462113,0.0845542997,0.0626176,0.0074833743,0.0542138219,-0.0618942194,-0.0885023102,0.1588170975,0.0839688256,-0.0592092685]],"hackathon_name":"AstonHack 2016","index":592,"project_description":"Come search for gooses with me!GeeseA wild hunt for a geese-Multiple EC2 instances for puzzles.\n-Route 53 for DNS\n-Cloudfront & S3 for our single image\n-RDS for database\nWe pretended it wasn't put together in 5 minutes for 10 people to useAstonHack 2016Andrei Tuta\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 07:11 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"WildGooseChase","project_tags":["python","html5","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/wildgoosechase","keywords":"geese,use,wild,instances,built,cloudfront,database,dns,ec,hunt,image,inspiration,minutes,multiple,people,pretended,put,puzzles,rds,route"},{"level_0":593,"hack_vector":[[0.1494220793,-0.1448879093,-0.0143415071,0.0910296887,-0.0460160859,0.1666615754,0.1974737197,-0.0462696515,-0.0301164147,-0.0380473994,0.0015036515,0.0317249335,0.1419751793,-0.0737786591,0.0196867008,0.0405499935,0.2512493134,0.0207888931,0.0500061288,0.0929033458,-0.2109425515,-0.0164785553,-0.0521993525,-0.0331199691,0.1775718778,-0.0188009348,-0.0609171949,-0.1772740781,0.0034870661,-0.0751178265,0.0528364331,-0.0959079042,0.0589120574,-0.0462111607,-0.0348392539,0.0076793907,0.1301074624,-0.1038006619,-0.0126014072,0.0700098276,0.0726037249,-0.1301821321,-0.1637515724,-0.0273193587,-0.0215885527,-0.0574660823,0.032994464,-0.0207508598,-0.0261166748,-0.2061316669,-0.0452257469,0.0237880442,-0.1043769568,-0.0468043759,-0.1299230307,0.1611548662,-0.164047569,0.0467144884,-0.0155222006,0.0130917039,-0.0247997325,0.0498672016,0.0466523357,0.0420017689,0.1442253441,-0.02685255,-0.1444600523,-0.1668138802,0.0127355708,0.0065483893,0.0406684689,-0.0121252341,-0.0007863972,-0.1476587355,-0.0605887286,-0.0622415394,0.2124673426,0.0079014329,0.0696214363,-0.1474093199,0.1023707464,0.1547006816,0.0152921015,0.1423708647,0.149059847,0.1936660558,-0.1192579418,0.0597022101,-0.0094328215,-0.1009765789,-0.0934095457,0.1194916815,0.041829396,0.0160520766,0.0549880303,-0.0707366318,-0.0929573998,0.194922179,0.0907054171,-0.0356414169]],"hackathon_name":"AstonHack 2016","index":593,"project_description":"Ever wanted to fly like a goose? Now you can!Wanted to learn UnityFly a geeseIn unity with c#Everything with unity!Learning unity!Unity!Collisions!AstonHack 2016Shuaib Saddique\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 08:03 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Geese simulator 2016","project_tags":["unity"],"project_url":"https:\/\/devpost.com\/software\/geese-simulator-2016","keywords":"unity,geese,wanted,inspiration,built,challenges,collisions,everything,fly,learn,learned,learning,next,proud,ran,simulator,accomplishments"},{"level_0":594,"hack_vector":[[0.1296752691,-0.09289518,-0.029615866,0.0327174328,-0.0225099269,0.1371127218,0.2010450512,-0.0201946851,-0.0139060663,-0.0279556476,0.0063037109,-0.0661475807,0.1276426613,-0.0652237236,0.0499745309,0.0236074049,0.2260677814,0.0105528515,0.0339199528,0.1260151714,-0.238862291,0.0282813869,-0.0414564274,-0.0232802983,0.1107707173,-0.0220277663,-0.0339776874,-0.1788614243,-0.0241664667,-0.0943311751,0.0582004264,-0.1230488941,0.0348934233,-0.0784850121,-0.0125641078,-0.0126959402,0.1202183813,-0.1398957819,-0.0543288514,0.0089600384,0.0289838035,-0.1476439387,-0.1517545432,-0.0474480763,0.0600761026,-0.079021275,0.0104381368,-0.0561740287,-0.0305751767,-0.2160173804,-0.1300020218,0.0035818247,-0.0998318791,-0.0149475606,-0.1864567548,0.1581750363,-0.137188226,-0.0251731761,0.0382687226,-0.0995453075,-0.0747896656,0.0246491395,0.0705460757,0.0465382636,0.1106330976,0.0135643566,-0.1092121452,-0.1377582401,0.0436831415,0.0217066985,0.0631483868,-0.0627792925,0.0274953041,-0.1180585399,0.0142810745,-0.1357254684,0.1704582572,-0.0035648895,0.0313299224,-0.1410713047,0.1195831224,0.1591175199,0.0567510836,0.1739118099,0.0938225985,0.1910427809,-0.114364475,-0.0233560707,-0.0270773824,-0.0935237557,-0.1440007538,0.0594628826,0.0805230513,-0.0514162257,-0.000544259,0.0089275045,-0.1608747393,0.2289189249,0.0220387578,-0.0781778619]],"hackathon_name":"AstonHack 2016","index":594,"project_description":"Let Python generate geese for you, watch them die the next day, or take over the world!Fragile\/Swarming Geese Simulator, is a Python program that \"simulates\" the\nbehaviour of geese (a common theme around Birmingham). The main idea was to\ncreate the activity history of groups and individual geese and then plot their\nactions on a map (using Google Maps API). The history is stored using the crate.io\ndatabase.This will start a custom \"shell\" that allows you to call some of the main\nfunctions of the program. You can also use RAW Python if you wish.Inside the \"shell\" you can run:This will start a \"wizzard\" to help you define\nJimmy, you can either use random data or custom\ndata.Now we have a random goose in 'jimmy'.Printing 'jimmy' like that will return the hashid.If we were to choose custom data for 'jimmy', the\nsetup would look like this:For more information on what the program can do, look at the functions defined inside source\/geesemanager.pyThe program tries to connect to a crate.io database, so make sure you have one runningand when asked provide the ip and port:After this, Python connects to the database and stores data about the geese! AMAZING!AstonHack 2016Alexandru-Paul Copil\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 07:01 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Fragile\/Swarming Geese Simulator","project_tags":["html","python","shell","javascript","php","google-maps"],"project_url":"https:\/\/devpost.com\/software\/astonhack-2016-qd78my","keywords":"jimmy,geese,data,crate,program,use,random,start,database,custom,creategoose,python,io,geesemanager,clan,py,functions,ip,coordinate,look"},{"level_0":595,"hack_vector":[[0.1701302975,-0.0983980149,-0.0346116126,0.0473978743,-0.0178519376,0.1543519646,0.1905303746,-0.0493255369,-0.0078314198,-0.0279647373,0.0167231001,-0.0680939183,0.135173887,-0.0560860373,0.0539952926,-0.0119031053,0.2064809501,-0.0007687342,0.0505675003,0.1313540637,-0.2416675538,0.0213654581,-0.0398596227,-0.0037133461,0.112093851,-0.0259054154,-0.0237472765,-0.1721670926,-0.0404290892,-0.1026602089,0.0677543581,-0.1216765419,0.0257977154,-0.0801875293,-0.0109556541,-0.0305903386,0.113321498,-0.1404181719,-0.0685255304,-0.0074676569,0.0690873042,-0.1172590405,-0.13420403,-0.0409024768,0.0686322376,-0.0632790849,0.009250639,-0.0706640482,-0.041840598,-0.214499414,-0.1502248198,0.0152064031,-0.1046416983,0.0022520863,-0.2089671344,0.1594635546,-0.1179205254,-0.0469954945,0.0347452983,-0.1001229212,-0.0703257248,0.001289881,0.0766962171,0.0238764677,0.1077596173,0.0276042148,-0.1085466146,-0.1200271249,0.0205199756,0.0373488106,0.0685268715,-0.0453990176,0.0216680337,-0.1176892146,0.0218453053,-0.1149679348,0.181339547,0.0059964228,-0.0054941173,-0.1332512051,0.1000994593,0.1511151493,0.032374274,0.1716648489,0.1002646685,0.2097442001,-0.0873488486,-0.0491855368,-0.0279118884,-0.0594097637,-0.134068504,0.0617891513,0.0911133885,-0.0347003974,-0.0257703792,0.0114713777,-0.1452579796,0.2523662746,0.0012197874,-0.0745824873]],"hackathon_name":"AstonHack 2016","index":595,"project_description":"Like Bomberman... but with geeseStart Page of the gameActual game screenshotGame played with controllerFinal ScreenInitially we started big: Majestic API, huge crate.io database on amazon server and so on... And well, we failed. But instead of just giving up, we decided to have some fun and create something we would enjoy working on. And that's pretty much the origin of Bomber Goose.It's pretty much a casual game of bomberman. But this time it bombers as geese, Galaxy Note 7 as the bomb, MLH symbol as power up and AstonHack hackingspace as area. For control, just enter the website address on your mobile phone and it will turn it into controller and add you as another player.We are running Amazon server for the main game, with .tech domain to connect to it. Entering bombergoose.tech\/player.html on your mobile phone will add you to the game and display mobile controller. Works on both Android and iOS. The area of the game is made from pictures of AstonHack hacking space.Spending countless hours browsing geese pics on internet.Well, we didn't really build linux kernel from scratch. Or create facebook in machine code. But we had fun. We met cool people. We enjoyed every minute of AstonHack and that's what we are most proud of.That hackathon isn't just an event to improve your skills, make projects that will shine on your CV or win challenges. It's mainly about just having fun with other people. It doesn't matter how advanced your project will be, it's about how much you enjoy doing it.It will forever stay in our minds. Keep on goosin'AstonHack 2016Tomek Prabucki\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 05:23 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Bomber Goose","project_tags":["javascript","amazon-web-services","css","html"],"project_url":"https:\/\/devpost.com\/software\/bomber-goose","keywords":"game,fun,mobile,astonhack,much,bomber,challenges,pretty,enjoy,phone,proud,create,controller,server,people,area,geese,tech,amazon,goose"},{"level_0":596,"hack_vector":[[0.160246104,-0.1314546615,-0.0083639333,0.0556159392,-0.0378120206,0.1483304501,0.1875409484,-0.0539244041,-0.0304342825,-0.0037151466,0.0267562214,-0.0283659957,0.1397419423,-0.0795338824,0.0555683225,0.0465040803,0.2344949394,0.0173544567,0.0450900756,0.1006821841,-0.2200375795,0.01847196,-0.0636624917,-0.0428913571,0.1391294003,-0.0216905791,-0.0387903601,-0.1981937587,-0.0002652712,-0.0770311132,0.0460376665,-0.1165568903,0.0534721278,-0.0890320987,-0.0341489576,-0.0021530122,0.1260944009,-0.1316090971,-0.0434591435,0.0352760963,0.0357297026,-0.1418114454,-0.1799985021,-0.0264731552,0.0067212731,-0.0522888452,0.0328267887,-0.048276592,-0.0219774023,-0.2090253234,-0.094109796,0.0199627057,-0.113144435,-0.0293013193,-0.1504088938,0.1754656583,-0.138001442,0.0398449823,-0.0003864986,-0.0284556225,-0.0357379653,0.0251926221,0.0758336708,0.0844286382,0.1286969334,-0.0203140099,-0.1289647371,-0.1478071362,0.0268143024,0.0059683328,0.0703301579,-0.0347125307,0.008965008,-0.1402632296,-0.0093683396,-0.1019078568,0.1985156834,0.0139741935,0.0574713387,-0.1382499635,0.138942793,0.1655573696,0.0547543876,0.1552327573,0.1300132126,0.1825665236,-0.1207365021,0.0025649257,0.0009119243,-0.0944624692,-0.1143123955,0.0778620541,0.0795718729,-0.027624134,0.0417690873,-0.0484389961,-0.108083263,0.1895623207,0.0539318658,-0.0756503418]],"hackathon_name":"AstonHack 2016","index":596,"project_description":"Here at GeeseHub, we are injecting you with a daily dose of geesy goosenessGoose GameGoose WillisOur love for Canada gooseA central hub for everything geese relatedUsing various softwares\nMajestic API to find the most related websites on our GeeseLogistics\nYoutube, Flickr, Giphy and Spotify APIs for individual objectsUsing embed code to implement Google chart and Tweets\nAlso punny punsNew languages and APIsThe website and the Majestic APINew languages and APIsWaterfowlAstonHack 2016Li He\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 07:56 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"GeeseHub","project_tags":["html","jquery","css","json","javascript","github","amazon-web-services","majestic-international-group","spotify","flickr","giphy","youtube","twitter"],"project_url":"https:\/\/devpost.com\/software\/geesehub-gh94w6","keywords":"apis,api,using,languages,related,majestic,new,youtube,find,giphy,geeselogistics,geesehub,geese,flickr,code,everything,embed,goose,chart,challenges"},{"level_0":597,"hack_vector":[[0.1486378908,-0.1395090669,-0.0178133827,0.0436781831,-0.0315556563,0.1234406754,0.1915742308,-0.0204208847,-0.0285044201,-0.0326916426,-0.0058410172,-0.0352077782,0.1325206608,-0.0809387788,0.0332216099,0.0466658324,0.2308594435,0.0033918913,0.0515556484,0.1316927224,-0.239503175,0.0065696668,-0.0443313718,-0.0309865121,0.142457813,-0.0300993882,-0.046464175,-0.1733185798,-0.0004851342,-0.0981220007,0.0343428478,-0.1149319634,0.0422650874,-0.0654997379,-0.0245915949,-0.0205718856,0.1202827916,-0.1490764618,-0.0385285765,0.0308082327,0.0514917485,-0.1260520965,-0.1664808095,-0.0389766358,0.0335692205,-0.081906639,0.0327352323,-0.0559745096,-0.019483719,-0.2198987007,-0.1061838344,0.0222020913,-0.1092679873,-0.0297155119,-0.178905353,0.183065176,-0.1402069628,0.0094382726,0.0064584077,-0.0515689291,-0.0495887697,0.0318424478,0.0467497073,0.0638236403,0.1271313727,-0.0002640061,-0.1172996685,-0.1490534246,0.0245511066,0.0018316858,0.0743096843,-0.0475341268,-0.0052079847,-0.1335539222,-0.0000537535,-0.0923022926,0.1841932982,0.0090945046,0.0453882068,-0.1401305944,0.116295144,0.1602153182,0.033893764,0.1618951708,0.1317723095,0.197268486,-0.1150739565,-0.0001393914,-0.0179872159,-0.0847318694,-0.1199878082,0.0830552652,0.08659067,-0.0193603411,0.01124347,-0.0439770743,-0.1350541115,0.2046418041,0.0505425707,-0.0640294477]],"hackathon_name":"AstonHack 2016","index":597,"project_description":"There are too many geese in this university. Let's get rid of them.From the amount of geese in the university. There are too much and one of them also tried to attack us. So for the security of the students we want to hunt them down like Ghostbusters .We registered the domain name geesebusters.com for this project as we want to hunt geese\nIf the link does not work is because of the DNS. It can take up to a day to propagate the domain name.HTML\/CSS\/JAVASCRIPT, Phaser.js Game libraryLEAP-MOTIONAstonHack 2016Ravinder Pal Singh\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 07:59 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"GeeseBusters","project_tags":["html","css","javascript","phaser.js","leap-motion"],"project_url":"https:\/\/devpost.com\/software\/geesebusters","keywords":"domain,name,geese,hunt,want,css,day,dns,com,game,leap,geesebusters,ghostbusters,html,attack,amount,inspiration,javascript,js,work"},{"level_0":598,"hack_vector":[[0.151637122,-0.1085872203,-0.03050768,0.0473278612,-0.0247585773,0.136433199,0.2125004083,-0.0306081679,-0.016223453,-0.0173332058,0.0139204757,-0.0560843647,0.1519479752,-0.0750893652,0.0647817329,-0.013614499,0.2030843198,-0.0074938596,0.040800117,0.1269339919,-0.2346111536,0.0234745611,-0.0456242263,-0.0063278163,0.1295902133,-0.0187356416,-0.0311999936,-0.1638047844,-0.0231244601,-0.0947531387,0.0612809062,-0.1242453009,0.0222662836,-0.0761051476,-0.0277004242,-0.015796788,0.1209074631,-0.1438080817,-0.069634825,-0.0032085662,0.0526297651,-0.1113426238,-0.1330316663,-0.0188599322,0.0604961254,-0.062102735,0.0184524786,-0.0774029195,-0.0306605231,-0.2109310031,-0.1517331749,0.0211096834,-0.1145426556,0.0038913062,-0.1856935173,0.1630707085,-0.1357994974,-0.0263090581,0.0179801788,-0.0999035686,-0.0684173778,0.0362940244,0.0779022127,0.0481061675,0.1151700541,0.0197210684,-0.1008467749,-0.114970468,0.013728044,0.0145294955,0.053986419,-0.0338854417,0.0194971673,-0.1274887919,0.0260440335,-0.1046981066,0.1884630024,0.0043940842,-0.006100479,-0.1483491957,0.1243465841,0.1594810039,0.0569486655,0.1502022743,0.1113105342,0.2071317732,-0.0870540366,-0.0376556851,-0.0195776671,-0.0712710842,-0.1488256902,0.0593280718,0.1081358418,-0.0201843698,0.004788721,-0.0085819587,-0.1541260481,0.2410502881,0.009467084,-0.0646309406]],"hackathon_name":"AstonHack 2016","index":598,"project_description":"Telegraph bot to produce random goose factsWe wanted to create a random goose facts bot in Twilio, that didn't work. We then switched to Slack, that didn't work. We are now using Telegraph as that works.Gets random words from the database, muddles them up and creates random goose facts.\n(disclaimer, they aren't real)We have a Crate.io database where we store the different words.\nWe then use Node.JS and the telegraph bot to add all of the words to a stringHad trouble with setting up AWS, Twillio, SlackBot, Crate and many many more.\nTelegraph bot seems to \"just work\" which is awesomeWe've finally got something working, which has been a massive challenge.\nNone of use knew any Node and only one of us knew any SQL.\nNow we are all much better in those languages which is the beauty of Hackathons.Node, Twilio (a bit), Slack (a bit), SQL, Crate and many project management stuff.This propaganda machine will eventually take over the world.AstonHack 2016Connor Bradley\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 07:53 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"RandomGooseFacts","project_tags":["crate","node.js"],"project_url":"https:\/\/devpost.com\/software\/randomgoosefacts","keywords":"telegraph,random,many,work,words,crate,node,bot,database,slack,goose,sql,facts,bit,twilio,use,knew,hackathons,got,inspiration"},{"level_0":599,"hack_vector":[[0.1608444899,-0.1388921589,-0.0129469289,0.0560466051,-0.0186761431,0.1483057439,0.1959281266,-0.0569802001,-0.0346695855,-0.0263024159,-0.0089906678,-0.0297164712,0.1459437758,-0.0685555413,0.0177624114,0.0351321511,0.2243267149,-0.0020949719,0.0520326868,0.1244884729,-0.234340772,0.0216242764,-0.0338588506,-0.0191719662,0.1641510278,-0.0255960841,-0.0504647717,-0.1712268442,-0.0130121112,-0.096661225,0.0537692122,-0.1160928756,0.0578180142,-0.0568705909,-0.0312559307,-0.033602003,0.1337938607,-0.1407063603,-0.0294574127,0.0337310471,0.0695481375,-0.1467177123,-0.1578743905,-0.0432209931,0.0197363924,-0.0561142862,0.017664969,-0.054689575,-0.0288739633,-0.2107430249,-0.1055716723,0.0354091935,-0.1180077791,-0.008158355,-0.1733527929,0.1676637828,-0.1570204943,0.0021635867,0.0116161061,-0.0474660508,-0.052777119,0.0217261445,0.0500876009,0.0444688164,0.1274473816,0.0037471512,-0.1341037452,-0.1436723918,0.0147038959,0.0303563513,0.0767337009,-0.0522650518,0.0049309907,-0.1368332952,-0.0096150152,-0.0856691375,0.18531771,0.0029727162,0.0431709848,-0.1347665042,0.1127731577,0.1424070746,0.0299113542,0.1541759223,0.1361820847,0.1963110566,-0.1218587831,0.0032161567,-0.0133734541,-0.0801762417,-0.1118577719,0.0809562281,0.0715968981,-0.0236830227,0.010590557,-0.0333244614,-0.1318794787,0.2084647417,0.0531383492,-0.0482993387]],"hackathon_name":"AstonHack 2016","index":599,"project_description":"Space Invaders but with geese.Bald eagles are the natural predictor of geese, so the geese attack backThe game is incomplete but the geese the the bottom can shoot bullets at the bald eaglesthe game was built in Unitythe only challenge we had trouble with is the fact that the bullets wont detect collision with the bald eaglesthe graphics, the codewe learnt a great deal about unity, which will come in handy for my group projectNext we will continue working on the hack and complete the game.AstonHack 2016Dehul Shingadia\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 07:55 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Aston Awakening","project_tags":["unity","c#","photoshop"],"project_url":"https:\/\/devpost.com\/software\/aston-awakening","keywords":"game,bald,geese,eagles,built,next,bullets,unity,back,bottom,awakening,attack,aston,challenge,challenges,code,collision,come,complete,continue"},{"level_0":600,"hack_vector":[[0.1363446265,-0.0986344516,-0.0220560431,0.0396676399,-0.0212608092,0.1457502842,0.2016588449,-0.0405358374,-0.0138796503,-0.0162122864,0.0313471593,-0.0635537282,0.1324049979,-0.0761852637,0.0598209836,0.0138334632,0.2312417328,-0.0001781708,0.0523912534,0.114176318,-0.2323039323,0.0413319208,-0.0448581167,-0.0331650637,0.0897973925,-0.0209450312,-0.0247117803,-0.1896368265,-0.0142012825,-0.0950767472,0.0638688728,-0.1172642261,0.0419655219,-0.0946074277,-0.0063324156,-0.0153257698,0.1117518246,-0.1357027739,-0.0610690378,-0.0099284835,0.0345272571,-0.1391169131,-0.152226299,-0.0359081998,0.0573682822,-0.0501881093,0.0134742418,-0.0671906099,-0.0276609156,-0.211084187,-0.1465166062,0.020539403,-0.1073088348,-0.0239640232,-0.1910597831,0.1485733092,-0.1217411384,-0.0222342219,0.0430706516,-0.0913014039,-0.0513395481,0.0270122793,0.0889401883,0.0566586778,0.1120671034,0.0141213452,-0.1055288538,-0.1282444447,0.0288346056,0.0231560841,0.0705931261,-0.0480973981,0.0293697175,-0.1281639189,0.0156571418,-0.1365980953,0.1749313027,0.006638906,0.0188942309,-0.1446517259,0.1334145516,0.1591763496,0.0545258559,0.1808888018,0.0959886089,0.1938097179,-0.0956481844,-0.0363310352,-0.030174287,-0.0778620914,-0.1405597925,0.056375321,0.0854164883,-0.0423603766,0.0075424896,0.0055352929,-0.1539494097,0.2235707641,0.0075061047,-0.0878593549]],"hackathon_name":"AstonHack 2016","index":600,"project_description":"Drive, cycle or walk? Share awesome journeys! See geese? Click the geese-o-meter!Dank Roads LogoWe travel everyday of our lives, when coming across a awesome route, journey or a cool road. Wouldn't it be nice to share this route with other people so that they can experience the same journey? Our inspiration formed from sharing our cool journeys.A android based app using google maps can be used to share journeys amongst people. When travelling on a certain route they can submit their journey through the app so that others can go on the same route. Maybe they saw an amazing wide stretch of road which leads to the end of the rainbow? Or maybe they saw a goose on the way?Using android android with google maps and google roads API. Connected via a MySQL database and PHP backend.Finding high-res geese images, sleep and geese.Staying up all night, implementing Google API's, doing everything under pressure and geese.How to develop an app with google roads and maps API, MySQL, PHP and geese.Facebook integration, Birds, ducks and maybe owls?AstonHack 2016Adeel Ahmed\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 07:54 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Dank Roads","project_tags":["android-studio","android","google-maps","google","mysql","php"],"project_url":"https:\/\/devpost.com\/software\/dank-roads","keywords":"google,geese,route,journey,maps,android,api,app,maybe,roads,road,inspiration,journeys,mysql,cool,people,php,saw,share,using"},{"level_0":601,"hack_vector":[[0.1325635761,-0.0829622447,-0.0265701059,0.0492146239,-0.0247948393,0.1438482553,0.1994069815,-0.0317440927,-0.0227021575,-0.0196134634,0.020567013,-0.069094941,0.1436145604,-0.0715796128,0.0635105297,0.0120276101,0.2163541764,0.0034927903,0.0436435342,0.1206183136,-0.2230005413,0.0372984968,-0.0563494153,-0.0224614423,0.1065091565,-0.0216356665,-0.0401415564,-0.1758094728,-0.0253802128,-0.0890549719,0.062434122,-0.1141440645,0.0383132137,-0.0802832693,-0.0178610589,0.0048129102,0.1342649013,-0.1314489245,-0.0528086349,0.0139850909,0.0454392172,-0.1430560499,-0.161051333,-0.0262665208,0.0535855778,-0.060205102,0.0248328857,-0.0716027394,-0.028811805,-0.2172342092,-0.1396102011,0.0165717918,-0.1049955338,0.0054849992,-0.1848947257,0.1458778083,-0.138086319,-0.0178383887,0.0374530293,-0.0919471234,-0.0688817352,0.0253234375,0.0834357888,0.049814228,0.1169506386,0.0021182064,-0.0961723328,-0.1371585578,0.0314569622,0.0137941446,0.0586831234,-0.0516291149,0.0154064894,-0.1220977977,0.0195535906,-0.1198719591,0.1897815317,0.0071125994,0.0182488021,-0.1465815157,0.1253732294,0.162085548,0.060110312,0.158733353,0.1070777476,0.1954914331,-0.1087562442,-0.0323254615,-0.013243773,-0.0953786448,-0.147134304,0.0600120686,0.0898018852,-0.0356303379,0.0091830576,-0.0014647647,-0.1521537453,0.2383264005,0.0207004566,-0.0747651532]],"hackathon_name":"AstonHack 2016","index":601,"project_description":"movie not foundGeeseNot hurting geese, for sureWe believed in ourselvesGeese404404404.v2.0AstonHack 2016I worked on communication and bug testing and solving all the small problems in the development. And took on the dedicated tasks. A lot of my work was doing research and trying to set up servers\/ a user-base and database. but only the database got utilised. Most of my contributions are in locating and testing API's and sending the instructions to the c# developer to implement.Adnaan Hussain\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 10:21 AM ESTAt first we wanted to host the SQL database using Crate.io and Amazon Web Services . but we couldn't get that operational. We had in mind a website that would communicate with a backend database; The database has a catalog of films, but if a user names a film not in the database it will run the omdb API that will collect info from IMDB and add that entry to the database.      Also we had user accounts and we had a service running that would manage and allow accounts to be created with forms but we couldn't connect the HTML\/PHP with the C# desktop app so the web part of the project was abandoned.    The desktop app does still have users and you can add freinds on the site.   when you add a film to your watched library it lets you give it a rank that we would use to provide recommendations to your friends, And also there was a menu that ran a IP tracing API that found out your approximate post code . with this info we invoked a CinemaFinding API that would run the nearest cinema's to you. The API could also provide now showing information, however this feature is currently deactivated in the API do to a format change.   Lastly we wanted to use our own rating system. For this we used a Twitter mood detector that showed if people posted positively of negatively about the movie and then a screen scraper collected that information. we had a issue about how to then transfer this information into c# and doing so with Live information on request.Log in\n      or\n      sign up for Devpost\n      to join the conversation.Andrei Iordache\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 10:11 AM ESTmovies database (imdb #250), omdb API, geolocation API, and some cinemafinder API \n+SQL databasesLog in\n      or\n      sign up for Devpost\n      to join the conversation.Andrei Iordache\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 07:54 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"404","project_tags":["c#","sql"],"project_url":"https:\/\/devpost.com\/software\/404","keywords":"geese,sure,ran,proud,next,learned,inspiration,hurting,challenges,built,believed,accomplishments"},{"level_0":602,"hack_vector":[[0.1473200172,-0.10715653,-0.0253066551,0.0480892025,-0.0265024994,0.1425840557,0.1877269596,-0.0477621704,-0.0032339315,-0.0478732027,0.008804407,-0.0469822288,0.1326953024,-0.0615155846,0.04317661,0.008958376,0.2239142805,0.0038688148,0.0436508618,0.1367605031,-0.2397847921,0.0144341402,-0.0454840437,-0.0070431693,0.1304211617,-0.0171290841,-0.0311591215,-0.1658975184,-0.0340806358,-0.1077223122,0.0502264388,-0.118000567,0.0473006628,-0.0681098476,-0.0037480248,-0.0350062773,0.1235889047,-0.135965839,-0.056505587,0.0086991685,0.0575409941,-0.1337936223,-0.1480010003,-0.050184615,0.0324577391,-0.0739521086,0.0163015388,-0.0562319718,-0.0411478691,-0.2142691612,-0.1318178773,0.0287635848,-0.1036850736,-0.0103985164,-0.1955893636,0.1588004082,-0.1358219385,-0.0163133796,0.0229685158,-0.086151965,-0.0627678484,0.0190792568,0.0602408051,0.0253206212,0.1081933454,0.0212019719,-0.1228925288,-0.1397548914,0.0235075392,0.0332077481,0.0597936325,-0.0495353825,0.0157640725,-0.128581062,0.0158453211,-0.0936822742,0.1815882176,0.0014463041,0.01780417,-0.1470673084,0.0921137854,0.1590622514,0.0422292352,0.1708280891,0.1193881929,0.1965746433,-0.1153203622,-0.0292177852,-0.0281083323,-0.0776497722,-0.1236904487,0.0782301947,0.0940499157,-0.0311642997,-0.0016351922,-0.0179745927,-0.1529465765,0.2480746508,0.019404728,-0.0706197768]],"hackathon_name":"AstonHack 2016","index":602,"project_description":"A VR horror, so spooky you'll be laying eggs.Geese Geese Geese, Spooky ScaryYou are Goosey McGooseFace, and incredibly short human with a guardian goose. Your Guardian Goose (or GG for short) alerted you to the murder of a local upstanding family, and as an investigative journalist, you felt it was your duty to discover the truth behind this murder most fowl. You wake up, disorientated, in a pitch black room, with only your phone light on hand. The last thing you remember is getting in your car....Using the unreal-engine which none of us had used before we created the world and the utilities to live within it.never having used the software before.actually getting it to workgeese are spookyfinishing the project components we didn't get to finish.\"We teach you all this computer science, only for you to do this with it\" - Peter Lewis 2016AstonHack 2016I made most of the models used in the game, i did help with coding but i mostly just made the modelsjohnshith Sheppard\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 07:50 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"GooseBumps","project_tags":["unreal-engine","oculus","twilio"],"project_url":"https:\/\/devpost.com\/software\/goosebumps","keywords":"geese,goose,getting,short,guardian,used,spooky,murder,fowl,get,world,gg,finish,goosey,hand,human,incredibly,finishing,family,felt"},{"level_0":603,"hack_vector":[[0.1526740044,-0.1539253443,0.0064558578,0.1012270451,-0.0481139496,0.1674394011,0.1813199818,-0.0623232126,-0.0384649187,-0.0276261587,-0.0078587756,0.0531449765,0.1305041462,-0.0838022009,-0.0170603208,0.075399451,0.2563844025,0.0344686471,0.0587940738,0.076799877,-0.1851255745,0.0009525345,-0.0445654131,-0.0543756895,0.1907427162,-0.0171217564,-0.0821106806,-0.176707983,0.0309793409,-0.0715565607,0.030583676,-0.0938347057,0.0834325179,-0.0391849354,-0.0427219793,0.0099928202,0.1482992321,-0.0962542444,0.0112033533,0.1045042723,0.0753909275,-0.1553370506,-0.1828670502,-0.0389295407,-0.0501367785,-0.0374514349,0.0426788144,0.0003245563,-0.0214454811,-0.1794265658,-0.0132210925,0.0491144173,-0.1057831496,-0.0572239608,-0.1017489582,0.1411385834,-0.1676597893,0.0733827427,-0.0230231825,0.0620638169,-0.0064189909,0.0389705114,0.040743418,0.059231624,0.1523886621,-0.0520896092,-0.1397728324,-0.1658544689,0.0145150945,0.009125039,0.0570647009,-0.0236289445,-0.0226429347,-0.1488245577,-0.0822945759,-0.04288828,0.1884825379,0.0271906629,0.0939151794,-0.1427292228,0.1010529101,0.1439428031,0.0032441947,0.1347376108,0.1578891277,0.1616542041,-0.141495958,0.0836606175,0.0074080261,-0.1176580638,-0.0642622858,0.1144352332,0.0099795647,0.0400676206,0.0843066573,-0.0977022722,-0.0574246123,0.1349337995,0.1188787073,-0.0234905686]],"hackathon_name":"AstonHack 2016","index":603,"project_description":"This is a Goose game made with Unity with Mario style gameplay.AstonHack 2016Tony Wu\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 07:47 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"GooseGame","project_tags":["unity"],"project_url":"https:\/\/devpost.com\/software\/goosegame","keywords":"unity,created,game,goose,works,goosegame,basic,built,called,domain,experience,future,geese,learnt,website,link,lots,megoosta,net,next"},{"level_0":604,"hack_vector":[[0.1602860242,-0.1127510443,-0.0311701652,0.043882262,-0.0207172967,0.1353899091,0.1924165487,-0.0264925305,-0.0307204314,-0.0157898087,0.0037254202,-0.0687282011,0.1373510659,-0.0642393827,0.0668720677,0.006224324,0.2073174119,0.0057077976,0.0527426042,0.1209694669,-0.2399716824,0.0311592594,-0.0454596877,-0.0264875125,0.103778474,-0.0295134205,-0.0300578829,-0.1836630702,-0.0344008803,-0.0879879817,0.0583790019,-0.1254445314,0.0366334356,-0.0837695375,-0.0257685296,-0.0258210544,0.11802347,-0.1406161934,-0.0607891716,0.006446234,0.0558758155,-0.1280169785,-0.1590876281,-0.0336182527,0.0537173375,-0.0676640645,0.020817304,-0.0771526992,-0.0282184035,-0.2149584293,-0.1351430863,0.0092408825,-0.1040195972,-0.0022576973,-0.1900482476,0.1630593538,-0.1292718947,-0.0101052187,0.0255124848,-0.0756447762,-0.0654555559,0.0115008764,0.0644821823,0.0433754623,0.1165199876,0.0079056872,-0.1024674997,-0.1285912246,0.0294549335,0.0167783014,0.077871941,-0.0548930913,-0.0001545045,-0.1260418743,0.0198706985,-0.1184771359,0.1834565699,0.0158712715,0.0219871216,-0.1327504516,0.1167747378,0.1577661932,0.0514364988,0.1679143161,0.1210454702,0.2012675256,-0.0970016643,-0.0262554288,-0.0052615046,-0.0787753388,-0.1383353025,0.0671912506,0.0979065895,-0.0431052335,-0.0099923778,-0.0227145534,-0.1477012783,0.2359839529,0.0147902369,-0.0754739717]],"hackathon_name":"AstonHack 2016","index":604,"project_description":"It's an audio-visualization for GitHub repositories!GitHub's visualizations of repositories are pretty cool. Since commits are laid out in time it made sense to use it to sequence sound.It takes a GitHub repository (username\/reponame) and plays a drum track based on the commit history of the master branch. When the commits are more frequent it speeds up and vice-versa.I grab data from GitHub's repository API, rescale the timing to make it somewhat drum-like and used the WebAudio API to sequence drum samples.One major problem is that most repositories follow the pattern of big spikes of activity and loads of idle time. That makes the tracks very boring to listen to. I transformed the timings so that it never speeds up or slows down too much.Wrangling the timing in WebAudio is something completely new to me, so I'm happy to have learned more about it. Finding the right parameters for solution to the above problem was also pretty great!Dealing with browser-based audio and the awesome GitHub API.I'm taking it on tour.AstonHack 2016Giedrius Kudelis\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 07:42 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"DrumHub","project_tags":["github","jquery","javascript"],"project_url":"https:\/\/devpost.com\/software\/drumhub","keywords":"github,drum,api,time,sequence,repository,repositories,speeds,commits,problem,pretty,timing,learned,based,webaudio,history,follow,idle,inspiration,laid"},{"level_0":605,"hack_vector":[[0.154808253,-0.1481770426,0.0118251164,0.1028514132,-0.0593104362,0.1625716984,0.1614597887,-0.0516023822,-0.0359237529,-0.036112871,0.0040386277,0.0518543497,0.1328200549,-0.0747399926,-0.003954093,0.0863697231,0.2541533113,0.0422731936,0.0478233807,0.0805766433,-0.1746288836,-0.0042754808,-0.0543977022,-0.0640463158,0.1673917621,-0.0211458411,-0.0794958621,-0.1759613454,0.0245283376,-0.0755817816,0.0166321993,-0.0798262954,0.0781061575,-0.0392814092,-0.028155284,0.027400909,0.1532508135,-0.0989918634,0.0052434267,0.106248863,0.0669865236,-0.1380231082,-0.1833182275,-0.0257529169,-0.059552066,-0.0492617451,0.0574827902,0.0000233501,-0.0217494611,-0.1871170849,-0.0176106505,0.041195862,-0.1050550118,-0.0661984608,-0.0933611691,0.1474876106,-0.1482182741,0.0789941549,-0.0096103633,0.0579489172,-0.0102634327,0.0341072828,0.0373008437,0.075933747,0.1487437189,-0.0518135391,-0.1378130317,-0.1746827811,0.0005261369,-0.0138902245,0.0545598529,-0.0211535748,-0.0223777294,-0.1513456702,-0.0775383711,-0.048386652,0.2027928233,0.0197358448,0.0941144601,-0.1469971687,0.1021905988,0.1637539268,-0.0038785418,0.1286380887,0.1604885161,0.1553358734,-0.1489234716,0.0707014874,0.0090128854,-0.1273555458,-0.0794797614,0.1232661083,0.0078901034,0.0348199755,0.0864733905,-0.1101256385,-0.0567589253,0.152931869,0.1184259057,-0.0317595154]],"hackathon_name":"AstonHack 2016","index":605,"project_description":"We triedWe tried to make something serious I swear...AstonHack 2016Music oh jeezAaron Tello-Wharton\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 07:35 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Internet Simulator Oh Gosh Why","project_tags":["node.js","unity","c#","php","crate","let's-crate","majestic-seo-enterprise"],"project_url":"https:\/\/devpost.com\/software\/internet-simulator-oh-gosh-why","keywords":"tried,swear,something,serious,make"},{"level_0":606,"hack_vector":[[0.132053569,-0.08970882,-0.0255020317,0.0230520479,-0.009132727,0.1251784414,0.2086619288,-0.0261907261,-0.0379144847,0.0043004882,0.006605187,-0.087343663,0.1455918998,-0.0825732201,0.0541995801,0.0174388606,0.2137568742,-0.0139458338,0.0421810821,0.1202975735,-0.2266158611,0.0564496368,-0.051647421,-0.0117062898,0.1200192347,-0.0291374326,-0.0388337001,-0.1785736382,-0.0290102046,-0.0867289975,0.0641642138,-0.1339191645,0.0465121344,-0.0900652856,-0.0268853549,-0.0108731827,0.1276694983,-0.1358335614,-0.0471438058,-0.0024591885,0.0353572778,-0.146323666,-0.166757375,-0.0262472872,0.0672489703,-0.0543943942,0.0165694114,-0.0845204666,-0.0200455524,-0.200648278,-0.1422426403,0.0150665836,-0.107345745,0.0197687875,-0.1938173026,0.1482468694,-0.1482844055,-0.0161302183,0.0340403765,-0.106594421,-0.0743814558,0.0289096422,0.079654634,0.0558625273,0.1086232364,0.0073954016,-0.0932271779,-0.1285200119,0.037988469,0.021897044,0.0803065374,-0.0631691962,0.0160026606,-0.1184270009,0.0416196436,-0.1279964298,0.176758796,0.0043006619,0.0312257223,-0.1236501783,0.1337240636,0.1523619592,0.0778549165,0.1521196663,0.1082914546,0.175479725,-0.1074270383,-0.0405723825,-0.005320847,-0.0951053351,-0.146448642,0.0442007408,0.0945647657,-0.0411610939,0.0045192624,0.0005783912,-0.1628778875,0.2140013427,0.0266476423,-0.0746093914]],"hackathon_name":"AstonHack 2016","index":606,"project_description":"Find some new presidential candidates, because the current ones are awful.The American Election has become a stale and dull battle of words instead of a legitimate close race to the finish. We aim to put the fun back into the election.This application compares potential presidential candidates from anyone stored in the database.We used an access database with a python script pulling information from it based off of a HTTP GET request from the main webpage containing search bars. The database is quieried by the python and then the response is sent back up to the database to be used by the graphs and statistics tables by which you can compare the 2 potential candidates.The database and the formatting of the JSON strings that were fetched with the HTTP GET were a pain. The compatability with python and the database was also difficult.It almost worked! The data was fetched from the database being queried by the search terms from the web page, then sent back up to the webpage. However the query was not formatted correctly and took too much debugging to fix fully.Compatability is key. Use whatever is most compatible and you'll have a much easier time.AstonHack 2016I worked on front end production creating the website and css as well as tables to display the data.Ollie Favell\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 07:32 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"El Presidente","project_tags":["javascript","python","html5","css3"],"project_url":"https:\/\/devpost.com\/software\/el-presidente","keywords":"database,python,back,potential,candidates,search,sent,election,fetched,much,get,compatability,used,http,webpage,debugging,difficult,worked,easier,dull"},{"level_0":607,"hack_vector":[[0.1271304339,-0.1023016423,0.0111755366,0.0943733603,-0.0437565371,0.1674006134,0.1852017939,-0.0519507453,-0.0461686589,-0.028113408,0.0160735771,0.0062902221,0.1367601156,-0.0807935745,0.0122534502,0.0693785697,0.2652100921,0.0310266074,0.054960642,0.1013317332,-0.1831964999,0.0267970059,-0.0580718666,-0.0545939505,0.1423838884,-0.0116782142,-0.0704166219,-0.1952123791,0.0035306136,-0.0689758956,0.0381912254,-0.0931128114,0.0765344799,-0.0630549863,-0.0298774485,0.0251865927,0.1522318125,-0.0968825817,-0.0032188033,0.0767397434,0.0481843948,-0.1472906321,-0.1918783635,-0.0288702603,-0.0262832325,-0.059155643,0.036094863,-0.0225470643,-0.0081380494,-0.2088601738,-0.0376391448,0.0295126103,-0.1005746275,-0.0446045026,-0.1205782071,0.1470648199,-0.1658995599,0.061093241,0.0055257678,0.0018367897,-0.0155609511,0.0400987677,0.0685816705,0.0785960779,0.1512161195,-0.0392956063,-0.1199300736,-0.172854647,0.0275357608,-0.0066798734,0.0536011532,-0.0265052058,-0.0134109836,-0.1385869384,-0.0508530103,-0.0747446567,0.2060053945,0.0091286702,0.0907925814,-0.156085223,0.1150912121,0.1605926901,0.036845088,0.1420698166,0.1476801336,0.1576309055,-0.1431123912,0.0238214135,0.0005898461,-0.1278668046,-0.1238228306,0.088882409,0.0413545854,0.0084269438,0.0640227795,-0.0685064867,-0.0965544209,0.1673546731,0.0972620025,-0.06060265]],"hackathon_name":"AstonHack 2016","index":607,"project_description":"An app to find geeseHome ScreenCamera ScreenIt find gesse using the phone camera and Clarifai apiI used android studio to make the appGetting the camera to work in the appAstonHack 2016Matt Collinson\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 06:57 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Goose Finder","project_tags":["clarifai","android-studio"],"project_url":"https:\/\/devpost.com\/software\/goose-finder","keywords":"app,camera,work,find,api,built,challenges,clarifai,gesse,using,getting,make,phone,ran,studio,used,android"},{"level_0":608,"hack_vector":[[0.128423363,-0.0709894821,-0.0389764123,0.0446280949,-0.0235520881,0.145465672,0.2083306313,-0.0346921869,-0.0205332544,-0.0153978691,0.0147792529,-0.0740308538,0.1400619447,-0.0761995912,0.0587977506,0.0114660431,0.2280473113,0.0036785915,0.0304157678,0.1275264174,-0.218617022,0.0356906503,-0.0532870851,-0.0148683134,0.1155948341,-0.0087120142,-0.0364030451,-0.1821980029,-0.0323050208,-0.083968915,0.0683069676,-0.1319911331,0.0383596309,-0.0811316296,-0.0207503662,0.0013847555,0.1284954548,-0.1252150089,-0.0424513891,0.0006032123,0.0419772081,-0.1317499578,-0.1566903442,-0.0217582881,0.0632474199,-0.0591248646,0.0194956902,-0.0699347854,-0.0311151873,-0.2190203369,-0.1298243999,0.0097986143,-0.0906409621,0.006034432,-0.1862964481,0.1529318839,-0.1363835484,-0.0174198374,0.0227339976,-0.1056029722,-0.0628323108,0.0210500993,0.093595624,0.0437400267,0.1204959974,0.0088035259,-0.0878913477,-0.1370404363,0.0453852266,0.0246852636,0.0634338483,-0.0461613908,0.0231848042,-0.1161809117,0.0286307875,-0.1188583225,0.1795813441,0.0019073383,0.0202384647,-0.1400936246,0.1236241385,0.1643091738,0.0734868497,0.1692335606,0.0944932625,0.186950013,-0.1070231795,-0.0466320738,-0.0171691682,-0.0909217149,-0.1576175988,0.0530067794,0.0950573832,-0.0298019815,-0.0011436897,0.0134000098,-0.1516095847,0.2340419441,0.0164703708,-0.0845559239]],"hackathon_name":"AstonHack 2016","index":608,"project_description":"Bother your friends with GooseWe where inspired by Cat Facts and the Aston University Goose.Bother Goose is a web application that you can use to annoy your friends. All you need to do is enter your email and their number, and they will very quickly begin receiving Goose related facts every hour for the rest of the day! Every Goose fact has a guaranteed AWFUL Goose pun.We set up an EC2 web app on AWS which allows a user to connect and sign up their friend for Goose facts. We built the site using HTML5 and developed the web app in Python using Flask and Twilio. We also set up a database of numbers, emails and Goose-facts using SQLite. We then send a text using Twilio to all the numbers in the database containing a single Goose fact and pun.Setting up the webserver was hard.\nWe had trouble adding the numbers and emails to the SQLite database using Python.\nSending all the texts out with Twilio to everyone on the database caused a data passing issue.\nWe bought a domain to stick it on but domain transfers are VERY slow.We can actually sign up to it and it will send you a confirmation text!\nWe somehow managed to get Python to add al the sign up to the databse.How to make a database using SQLite.\nHow to develop and host a web app on AWS.More annoying Goose related facts!\nGet the domain to actually work.\nText signup option (maybe).\nWebsite sign-in using email to view your targets replies.AstonHack 2016Developed the backend in Python with Flask framework, integrated the Twilio API and created and managed databases with SQLite.Jordan Lees\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 06:58 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Bother Goose","project_tags":["python","flask","twilio","sqlite","html5","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/bother-goose","keywords":"goose,using,database,facts,sign,web,python,numbers,text,app,sqlite,domain,twilio,pun,bother,related,send,built,set,get"},{"level_0":609,"hack_vector":[[0.1639036685,-0.0989648625,-0.0362069458,0.0524601042,-0.0111145023,0.1327094287,0.1829004437,-0.0314639509,-0.0163809825,-0.0125623718,0.010743862,-0.0793235153,0.1552730352,-0.0694601238,0.0671060309,-0.009592873,0.1752307564,-0.0184959061,0.055774428,0.1178808808,-0.240655005,0.0217045769,-0.0550719835,0.0078471992,0.1157773435,-0.0467968807,-0.0282284152,-0.1643259525,-0.0487197116,-0.0879970938,0.0701249465,-0.1012279466,0.0389633253,-0.079230316,-0.022763079,-0.0113066426,0.1124749705,-0.1434060782,-0.0628300831,-0.007507564,0.0638772175,-0.1100116968,-0.1490764767,-0.0034607041,0.0670148283,-0.0528916083,0.0189925898,-0.1018806249,-0.022483699,-0.216775164,-0.1720397174,0.0205020905,-0.1153631881,0.0253747087,-0.2161699235,0.152694121,-0.1316599399,-0.0303522591,0.0367662087,-0.1000411883,-0.077799648,0.0200121775,0.0666638911,0.030989008,0.1092519909,0.0275090747,-0.0911360011,-0.113372311,0.0061049066,0.0148112327,0.0652362481,-0.0459345393,0.0012666308,-0.1265188158,0.0433971323,-0.0922394991,0.2016610354,0.0013176982,-0.0157034528,-0.1362252235,0.10723342,0.1496448815,0.0504939854,0.1442054361,0.1079861969,0.2189652324,-0.0681028813,-0.0345301107,-0.0119593702,-0.0667864531,-0.1376703531,0.0661640912,0.100351423,-0.0338110365,-0.022941336,-0.0090210615,-0.1558829099,0.2566854954,0.0126088746,-0.0656385645]],"hackathon_name":"AstonHack 2016","index":609,"project_description":"Translate Human into GooseLogoAlternate logoThe page in action (forgive my CSS)Geese are very misunderstood creatures, and we needed something to break down the language barriers. The solution was obvious.You can enter text in any language, and it will identify the language, tag the parts of speech, and translate it fluently into Goose. It can be displayed as text or read out loud.The main API I used was called the Words API, where you could send it a word and it would respond with the part of speech for that word (noun, verb, etc.). The front-end was build with HTML and CSS, and the translating was done with PHP.I ran into many challenges, mostly due to lack of experience and severe lack of time. I was only able to attempt to implement a small amount of the features I wanted, and most of the things I did implement ended up not working. With more time I could absolutely get this working, but trying to work with so many new APIs and technologies in a 24h time period was beyond my skill level.I'm proud of both coming up with the idea and getting a decent way along to getting these APIs working, as I've never properly worked with APIs before.I learnt a lot about working with APIs and AWS.I'd really like to actually finish this project. Without the time constraints I can work on getting all the parts working properly. It may seem silly to spend lots of time on a project that literally translates things to squawks, but It would be really nice to have a finished project using APIs that actually works (and hopefully looks good).AstonHack 2016Alex King\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 06, 2016 06:17 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Gaggle Translate","project_tags":["html","css","php","javascript"],"project_url":"https:\/\/devpost.com\/software\/gaggle-translate","keywords":"time,apis,working,getting,project,language,speech,challenges,could,really,would,ran,text,properly,parts,many,implement,proud,lack,things"},{"level_0":610,"hack_vector":[[0.1517542303,-0.106690228,-0.0371030681,0.0242815167,-0.0140195321,0.1279167831,0.1939419508,-0.0326652303,-0.0177253839,-0.0123979151,0.008503967,-0.0842211843,0.1322543472,-0.0553522557,0.0688054711,0.0042283735,0.2103738785,0.0000751747,0.0342212394,0.1357063353,-0.2531543374,0.0361581817,-0.0355620943,-0.0083253542,0.097497642,-0.0218758043,-0.020890655,-0.1736733913,-0.0328743197,-0.1080885306,0.0706963614,-0.1296976954,0.0240146648,-0.0873880759,-0.0072505325,-0.0463884063,0.1009260565,-0.1510008276,-0.0684815198,-0.0295686517,0.0383783989,-0.1315866411,-0.1407873482,-0.0446068421,0.0745810494,-0.0619670823,0.0040611695,-0.0752133876,-0.0274591353,-0.2073339075,-0.1433057189,0.0054000141,-0.0960520059,-0.0022772059,-0.208192572,0.1612487882,-0.1174704507,-0.0415901802,0.040799737,-0.1102952734,-0.0750167072,0.0154398559,0.0757505521,0.0321337692,0.0885621905,0.0268112402,-0.1043156534,-0.1166349575,0.0388553254,0.0377199315,0.0778978914,-0.0516340882,0.0290155001,-0.1105642468,0.0273169708,-0.1396659762,0.1563777924,0.0015497073,0.0071775652,-0.1212127507,0.1109566018,0.1531569213,0.0534956008,0.1802033335,0.098420687,0.1971116066,-0.0958891958,-0.0485144928,-0.0329216495,-0.0654903874,-0.1333846301,0.0537257455,0.1054075509,-0.0581509694,-0.0266985018,0.0260514691,-0.165944919,0.2347577512,-0.0038508754,-0.0845908523]],"hackathon_name":"CUES Hackathon 2016 Powered by ARM","index":610,"project_description":"Find out who your real friends are in a wonderful game of Thrisbee\u2122Do you want to find out who your true friends are? Who likes you in secret? Who really hates you? You're in luck, and with just a simple game of Thrisbee\u2122 you can now find out!Pass it round, and see the stats on the cool display and enjoy your metrics!\nIt'll show you plenty of useful information such as who's passing the Thrisbee\u2122 to whom, who's the most popular, the least, how fair the game is and how much fun you're having!The main micro:bit is mounted on the underside of the Thrisbee\u2122. Each person playing the game then has a micro:bit on their person broadcasting who they are over Bluetooth, and the Thrisbee\u2122 uses the RSSI values of the player's bits broadcasts to determine who's holding it.\nThe Thrisbee\u2122 then relays the player information and its accelerometer values to a gateway bit connected to a laptop, which gets the data over serial, into matlab which plots graphs and key performance indicators in real time.The Bluetooth link had some issues of reliability when sending more data over the link, and not all data was received and recovered properly. \nWe also worked on some mechanics calculations to calculate throw speed, impact, rotations speed and distance thrown, getting promising results but needing more time to implement them fully.We made the Thrisbee\u2122 communicate both with the player's bits and with the gateway bit simultaneously, enabling it to relay which player is holding or throwing it to the computer.\nIt's also great fun and illuminating in terms of your social standing..We learned a lot about using Bluetooth to communicate between these devices, as well as getting familiar with the mbed platform and microcontroller to microcontroller communication.\nWe also learned about the limitations of accelerometers and magnetometers, such as limited sampling rates and the importance of signal processing.The next steps are using people's smartphones instead of micro:bits for the detection of who's holding it, and making an app that gets the data over Bluetooth from the Thrisbee\u2122, processes it and shows all the graphs and metrics.\nAdd a rechargeable battery, embed the microcontroller in an injection molded custom Thrisbee\u2122, pair it with an induction charger and a smartphone app, and sell it to ultimate frisbee teams and anyone who likes fun!CUES Hackathon 2016 Powered by ARMSoooftware[Placeholder Text]Arturo Abruzzini\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:50 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Internet of Thrisbee\u2122","project_tags":["c++","matlab"],"project_url":"https:\/\/devpost.com\/software\/internet-of-thrisbee","keywords":"thrisbee,data,player,bluetooth,bit,microcontroller,game,fun,micro,also,holding,learned,bits,communicate,person,information,getting,find,graphs,gateway"},{"level_0":611,"hack_vector":[[0.1469912678,-0.1066470072,-0.0269512981,0.0350304991,-0.0187684931,0.1234104484,0.1980773062,-0.0301864166,-0.0284512453,-0.0133534325,0.0092465095,-0.0703680962,0.1432379931,-0.0705658644,0.0660974011,0.006611397,0.2058824897,-0.0213995185,0.0444602966,0.1326601803,-0.2450100482,0.0413217023,-0.0349007398,-0.0116923079,0.1062542051,-0.0341677964,-0.0305068363,-0.1641607881,-0.0310887862,-0.0926747471,0.0593127236,-0.1152603477,0.0304237623,-0.0785427466,-0.0167381465,-0.0293521918,0.1181247011,-0.1444208026,-0.0624090843,-0.0042507434,0.0495922267,-0.1355155557,-0.151611492,-0.035122104,0.0651803091,-0.054632213,0.0131343529,-0.089111723,-0.0144514656,-0.2092639059,-0.1472874731,0.016080372,-0.1134065464,0.00374094,-0.214646548,0.1550628245,-0.1340817958,-0.0260392986,0.0443866849,-0.1014204025,-0.0721199811,0.0252436772,0.0754125416,0.0456691422,0.1074331552,0.0156909619,-0.0994296148,-0.1199371964,0.0274146032,0.0211183131,0.0733416677,-0.04991192,0.0124934074,-0.1208585203,0.0302082114,-0.1295387596,0.1752643436,-0.0010005196,0.0075304564,-0.1295269579,0.1213454679,0.1550325751,0.0492479317,0.1666233987,0.1104609668,0.1962228268,-0.0976574421,-0.0382942706,-0.0186838284,-0.0805843845,-0.1403321773,0.0522715636,0.0987519473,-0.0426680446,-0.0069670235,0.0084849698,-0.165548861,0.226919055,0.0150224185,-0.0670774952]],"hackathon_name":"CUES Hackathon 2016 Powered by ARM","index":611,"project_description":"A diver instructor life sign reader to detect problems with studentsOne of our team members, Kian, is a diver. He realised that novice divers often struggle conveying problems they may be having in the water to their instructor and then they panic.This device reads the student's heart rate, breathing rate and their temperature.\nThis data is sent to the instructor wirelessly. The data is then analysed and if any of the variables fall outside of a critical range a buzzer is sounded to alert the instructor of the potential danger the student is in.We set out to work out how all of the various components worked with the micro bit. Then we joined them all together on the micro bit and analysed the various inputs to get coherent outputs, which were then further analysed to see if they fell outside of a certain rangeWe first tried to use a peripheral temperature sensor for it's increased accuracy but it was determined that the clock speed of the micro bit made it incompatible\nWe also were going to interface the system with an android device but were unable to connect the two devices. So we opted for the micro bit -> micro bit interfaceI have never worked with electronics before and so making a working, and potentially useful, device in general was a great achievementWe could fully integrate the system into diving gear, and make it built into the suit and so it would be as easy as wear and go!CUES Hackathon 2016 Powered by ARMJoseph Holland\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 06:45 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Dive Bit","project_tags":["c++","love"],"project_url":"https:\/\/devpost.com\/software\/dive-bit","keywords":"bit,micro,device,instructor,analysed,system,student,temperature,data,built,rate,range,various,outside,interface,worked,fully,easy,electronics,fall"},{"level_0":612,"hack_vector":[[0.1580954194,-0.138632372,-0.0014899191,0.0777147859,-0.0527893007,0.1689397693,0.1638347507,-0.0526602268,-0.0205258541,-0.0319175683,-0.015368809,0.0203841925,0.1280704439,-0.0714200437,0.0013309773,0.064156957,0.2542286217,0.0311943088,0.0592056699,0.0990236923,-0.206953615,-0.0092510721,-0.0338952579,-0.0513607003,0.1821997911,-0.0133057591,-0.0596468039,-0.1730320901,0.0329595134,-0.0931925625,0.0165743046,-0.1034702808,0.0708847195,-0.0506719723,-0.0177564342,-0.003371838,0.1438159794,-0.1191952154,-0.0135708526,0.0789389759,0.0695203096,-0.1425484121,-0.1757763326,-0.0394307002,-0.0362235457,-0.0485980622,0.0333119258,-0.0114943935,-0.0122179734,-0.1930247843,-0.0509087853,0.0395647064,-0.10875348,-0.06898994,-0.1345112622,0.1625561863,-0.1433721483,0.053863883,-0.0019162311,0.0338319689,-0.013283602,0.0215656273,0.0399536192,0.0619549192,0.1461622119,-0.0299160965,-0.1395850331,-0.1862321049,0.0175356362,0.0168787017,0.0876238421,-0.0353092887,-0.0160918869,-0.1536011845,-0.0555552132,-0.071432896,0.1893778443,0.0272464752,0.0776820704,-0.1404073387,0.0929741785,0.154082641,0.0159510542,0.1617830843,0.1494168937,0.1671820879,-0.1364858299,0.0592576116,-0.0047397548,-0.100048922,-0.0793942511,0.10213615,0.0411697179,0.0070321728,0.0705844834,-0.073622793,-0.0825459361,0.1863302439,0.0858150423,-0.0580744036]],"hackathon_name":"CUES Hackathon 2016 Powered by ARM","index":612,"project_description":"Ever got lost while riding your bike? Here's our way of solving it - all without taking your eyes off the roadCUES Hackathon 2016 Powered by ARMJoshua Wong\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 04:50 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"The Right Way","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/the-right-way-agcyp6","keywords":"way,right,ran,proud,next,learned,challenges,built,accomplishments"},{"level_0":613,"hack_vector":[[0.1538527757,-0.1246766299,-0.033024773,0.0397801623,-0.0146317538,0.1314947009,0.2070337832,-0.0424903929,-0.022737259,-0.0080349678,-0.0005320067,-0.0497867204,0.1436113268,-0.0632262453,0.0583946072,-0.0146000907,0.2009257823,-0.0146413045,0.0461689085,0.1286933273,-0.2466747314,0.0398469307,-0.026295675,-0.0088884309,0.1355975121,-0.0207636971,-0.0253489744,-0.1693146676,-0.0230226889,-0.0931576192,0.0667851418,-0.1427114606,0.0384017006,-0.0751857534,-0.0233074725,-0.044895228,0.1163324267,-0.1453518718,-0.0612713173,-0.0011171577,0.0621952899,-0.141401276,-0.1394535899,-0.0488445461,0.0519361459,-0.046032425,0.0077919825,-0.0764140561,-0.0349530764,-0.1976635307,-0.1438445002,0.0120980889,-0.1186591312,0.0035272804,-0.1955130547,0.1547311246,-0.1412320435,-0.0198203009,0.0270015486,-0.0858804956,-0.0696997792,0.023545783,0.066736728,0.0306201205,0.1089364737,0.0152505711,-0.1145489663,-0.1174410284,0.0283793937,0.0339713395,0.0779751763,-0.0526506342,0.017585149,-0.1303038597,0.020747792,-0.1246569976,0.1767490506,0.0156980846,0.0113221454,-0.1325203776,0.1191045195,0.1532628983,0.0501679033,0.1689878851,0.1208997816,0.1967647523,-0.1021102369,-0.021571476,-0.0075582629,-0.0727177784,-0.1357272118,0.0627675205,0.1077850983,-0.0307021048,0.0059771459,-0.0100212991,-0.1508743912,0.2173950672,0.0130455289,-0.0547893792]],"hackathon_name":"CUES Hackathon 2016 Powered by ARM","index":613,"project_description":"It is Wednesday my dudes - aaaaaaaaaaaaaaaaahhhhhhhhhWe had a lot of domino's boxes and redbull cans lying around and needed to clear some space.Allows the user to make sweet sweet music simply by moving his discarded dominos box from the night before up and down.An Ultrasound sensor measures the height of a dominos box which is then converted into the corresponding frequency using a magic formula coded into the Micro:Bit, then the sound is finally outputted through a speaker using PWM.Too many to fit into this text box. Here are just a couple of them:\n-Ultrasonic sensor only working with C++, micro:bit music library only available in microPython\n-solved by transmitting frequency from a micro:bit running C++ to another micro:bit running micropython which then outputs the sound\n-radio transmission to slow (sound lags too heavily), hence  we are now using one micro:bit utilising manual PWM programming in C++-Be creative with the limited resources available\n-24 hours isn't as long as you think\n-Not every day is Wednesday (my dudes)CUES Hackathon 2016 Powered by ARMdeleted deleted\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 08:05 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Micro:bit meets Domino's and RedBull","project_tags":["c++"],"project_url":"https:\/\/devpost.com\/software\/microbit-meets-domino-s-and-redbull","keywords":"micro,bit,using,sound,box,frequency,music,dominos,running,sweet,micropython,sensor,available,pwm,fit,every,finally,working,formula,heavily"},{"level_0":614,"hack_vector":[[0.1548801512,-0.1081988141,-0.028518701,0.0443039052,-0.0140449787,0.1303676665,0.2042096853,-0.032573916,-0.0293040071,-0.0045788353,0.0291658193,-0.0713260993,0.1500944644,-0.0633430108,0.072340779,-0.0144448355,0.2027198374,-0.0136256404,0.0430577509,0.1288798749,-0.2416092306,0.0382484123,-0.0484174937,0.0037199426,0.1253826618,-0.0335650891,-0.0233758707,-0.1908484995,-0.0333622955,-0.0883681402,0.0861991122,-0.1250293702,0.0235956926,-0.0829712003,-0.0133364527,-0.0151875503,0.1073844582,-0.1362220943,-0.0611423813,-0.0219795611,0.0502794124,-0.131383419,-0.1470228732,-0.0303810295,0.0598594137,-0.0457705371,0.0088184988,-0.0825132728,-0.0245079473,-0.2065946162,-0.1385158598,0.0068369443,-0.107081376,0.0228017587,-0.2106964141,0.162314564,-0.1357449889,-0.0294430219,0.028252013,-0.1131607071,-0.0772522911,0.0240064505,0.080282487,0.0428201742,0.1037790179,0.027083097,-0.1012731344,-0.121493876,0.0244120918,0.0184611827,0.0605216175,-0.0409496613,0.0407541431,-0.1088297814,0.0341152661,-0.1246124282,0.1759413481,-0.0113421623,0.0155326398,-0.1246559694,0.1141599789,0.1509689987,0.0562840886,0.161862269,0.0958399028,0.2035373151,-0.091147311,-0.0532885045,-0.0264973044,-0.0702182278,-0.1372030973,0.0630209446,0.0915899873,-0.0451627076,-0.0166572481,0.012178136,-0.1553145051,0.2233273685,0.0070360284,-0.0698384792]],"hackathon_name":"CUES Hackathon 2016 Powered by ARM","index":614,"project_description":"Sitting all day to code? Get up and shake around for some exercise :)screenshotAs engineering students who love coding, we realised that sitting at a laptop all day has huge consequences on our health, in particular, on our backs and necks. We often overlook this issue, and by the time we realise it, we have already got fat and unhealthy. Following the recent success of PokemonGo as people stormed out to streets to catch Pokemons, it has inspired us to create a game to encourage programmers to work out more.We have created connection between the BBC:Microbit and a laptop. By attaching a Microbit to yourself, you can play the games on your laptop by moving your body, and hence exercising your body.We used the Python API and radio features of the Microbit to receive gestures on the laptop, and then the data is transferred onto Unity Game Engine (C#).To achieve robust gesture control we had to explore different ways to interact with the Microbit. Also passing strings between Microbits and transferring data via TCP was hard for Python-C#.We have learnt new ways of utilising Microbit data; and discovered how to connect from Microbit to high level applications such as Unity wirelessly.We would like extend the range of exercises that can be done on this platform, such as trainer programs. We would also like to extend into Virtual Reality.CUES Hackathon 2016 Powered by ARMI worked on exploring how to use the Microbit to detect motion and what information to transfer.I worked on building up a robust system of capturing, transmitting the gestures. Debugging and optimisation.I worked on the data transfer between PC server application and Unity application through socket as well as the design and the implementation of game in Unity.Qiuying Lai\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 29, 2016 08:42 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"CoderDodge","project_tags":["python","c#","tcp","unity"],"project_url":"https:\/\/devpost.com\/software\/coderdodge","keywords":"microbit,laptop,data,would,python,body,extend,unity,like,also,ways,game,exercising,games,explore,fat,exercises,features,following,hard"},{"level_0":615,"hack_vector":[[0.1537097543,-0.1609682292,0.004297602,0.0943994746,-0.0460165888,0.157754004,0.1777418852,-0.0490520671,-0.034104187,-0.0418154038,-0.0099942517,0.0515494347,0.119557783,-0.0724729374,-0.0133123891,0.0675195605,0.2591088712,0.0321032032,0.0446501561,0.094724454,-0.1965546906,-0.0004800907,-0.0319725238,-0.0492923446,0.1895755827,-0.0153353,-0.0684878305,-0.1781989336,0.0261108708,-0.0856228247,0.0258083958,-0.0965759754,0.0731878802,-0.0334065892,-0.0267644674,0.0032887636,0.1438457072,-0.1020625904,0.0084961997,0.0919805467,0.075979352,-0.1569500864,-0.1781777889,-0.0516942404,-0.0486430824,-0.0454225354,0.0418711603,0.0049785818,-0.0293279607,-0.1880162656,-0.0107367653,0.0326480754,-0.1011410132,-0.0592720993,-0.1127235293,0.1427013278,-0.1568858176,0.0519081056,-0.0161208268,0.052445244,-0.0169317871,0.037148457,0.0386785939,0.0424550399,0.1460378021,-0.040585652,-0.151940167,-0.172604844,0.01827172,0.0113061927,0.0568287373,-0.0302020386,-0.0051525915,-0.1406697631,-0.0770368278,-0.0623621307,0.1729521304,0.0255511012,0.0990649536,-0.1444314122,0.1005772874,0.1599083394,-0.0121832117,0.1660232246,0.151377514,0.1619629413,-0.1498401016,0.0818136558,-0.0069982437,-0.1194679663,-0.0694249272,0.1221948192,0.0122315465,0.0288825966,0.0725775734,-0.0865553096,-0.0740734935,0.1497120708,0.1088822857,-0.0278418548]],"hackathon_name":"CUES Hackathon 2016 Powered by ARM","index":615,"project_description":"dancemake a game that teaches people to dancelets you play a dance game anywheresticky tapepythonpythonpythonpresentation in LT0CUES Hackathon 2016 Powered by ARMAurimas \u0160arva\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 08:03 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Dancekicks","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/dancekicks","keywords":"python,dance,game,teaches,lets,anywhere,built,challenges,dancekicks,inspiration,learned,lt,tape,make,next,people,play,presentation,proud,ran"},{"level_0":616,"hack_vector":[[0.1559810489,-0.1129597202,-0.0244339928,0.0569946617,-0.016758576,0.1350519061,0.1896890402,-0.0293685328,-0.0367169715,0.0061971727,0.013612899,-0.0863969773,0.1593696922,-0.0630403087,0.0788859427,-0.0077766916,0.2020965368,0.002299299,0.0444411635,0.1071091443,-0.237485528,0.0584054664,-0.0480670519,-0.0104862498,0.1190455109,-0.0375037529,-0.0402742401,-0.1989474744,-0.0393398851,-0.0653941929,0.0935960263,-0.1291622967,0.0293698478,-0.0840016678,-0.0259030256,-0.0098343305,0.1122042984,-0.1389469057,-0.0565861538,-0.0112447636,0.0359852202,-0.1605698466,-0.162289992,-0.0215406083,0.0439923517,-0.0362325758,0.0062786103,-0.0869037285,-0.0219366159,-0.1961324364,-0.1396284401,0.0063347318,-0.1038978398,0.0251022521,-0.2017339468,0.1555009335,-0.1347180158,-0.0103768287,0.034840595,-0.097431995,-0.085017167,0.0267451126,0.0781344548,0.0520840697,0.0967531651,0.0214829985,-0.0945018083,-0.1231515408,0.0180980098,0.0188243706,0.0795515999,-0.0540831387,0.0426199958,-0.116357334,0.0327642858,-0.1314737946,0.1818496138,-0.0088344486,0.0272022672,-0.1179206222,0.1317020208,0.149837926,0.0699400678,0.1479988247,0.0948736891,0.1983937472,-0.1011407152,-0.0425498411,-0.0049534431,-0.0857001096,-0.1271619797,0.0568785444,0.0771877021,-0.060335815,0.0069315527,0.0062654638,-0.1463559419,0.2216246277,0.0151150292,-0.0755658224]],"hackathon_name":"CUES Hackathon 2016 Powered by ARM","index":616,"project_description":"Kinesthetic learning meets machine learningSerial outputRaw basketball dataBasketball data aligned with acceleration maximaProsE poseLearn how to effectively throw a ball.The Kine-Fanatic allows us to monitor the accelerations of different critical points on the body in movements like throwing, punching, or shooting a basketball. After analyzing multiple actions, we could classify newly recorded actions based on the data we collected.We accomplished data collection and transmission with BBC Micro:bit programmed in C++. Three sensor micro:bits sent acceleration data to the main hub micro:bit which had a serial link to a computer. We then imported the data into Matlab for analysis and classification.Using this same method on a much larger sample size would have interesting results. Additionally, attempting to classify a movement as \"good\" and \"bad\" could lead us to give the user feedback on their action.CUES Hackathon 2016 Powered by ARMI worked on filtering out gravity in the accelerometer sensor readings. I also worked on the analysis of the collected data in Matlab and devised a way to align data based on the peak acceleration of the movement.I worked on the USB serial port connection and the data recording interface. Furthermore, I worked on the data analysis in MATLAB, looking at ways of how to extract the main features, cluster the different motions and make predictions.I worked on data collection. I explored what data we would be able to make use of (e.g. I also looked at estimating distances using received radio signal strength) and implemented a way for us to collect all data from a single serial link.David Bustillos\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:44 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Kine-Fanatic","project_tags":["c++","matlab"],"project_url":"https:\/\/devpost.com\/software\/kine-fanatic","keywords":"data,micro,classification,actions,three,points,critical,collecting,matlab,bits,bit,recordings,based,link,could,sensors,serial,kine,hub,fanatic"},{"level_0":617,"hack_vector":[[0.1613444835,-0.1360752732,-0.0136472611,0.0600703694,-0.0383268893,0.1470361352,0.1776221693,-0.0398816392,-0.0107783582,-0.0435100384,0.0053277519,-0.0282144733,0.1401713938,-0.071806848,0.043207638,0.0328729339,0.2324839681,0.0151430145,0.0463704094,0.131768629,-0.2355041951,0.010456875,-0.0394153483,-0.0398554802,0.1338956505,-0.021510981,-0.0367370173,-0.1748359948,-0.0079015475,-0.1067392826,0.0278427191,-0.1133701578,0.0453925394,-0.0736543834,-0.0060503324,-0.025620427,0.1320453286,-0.1506819129,-0.0575747527,0.038808234,0.0578982085,-0.1292832792,-0.1526859105,-0.0440509804,0.020788461,-0.0675627813,0.0338995159,-0.042776145,-0.0403832644,-0.2128471732,-0.1195340604,0.0178353246,-0.1119817048,-0.0476397723,-0.1676441282,0.1726377159,-0.1117524058,0.0068246708,0.0213452484,-0.0457271822,-0.0488418341,0.0149768349,0.0569000952,0.0599666014,0.1203888282,0.0035022267,-0.1308711916,-0.1449310333,0.0132893473,0.0111333942,0.0708065033,-0.0458708517,0.0041778139,-0.1392608285,-0.0093004238,-0.1016876474,0.1898703128,0.017199086,0.0239098575,-0.1461735219,0.1134821475,0.1767721474,0.0220424943,0.1636651307,0.1280254424,0.1841719896,-0.1174853295,0.0004084985,-0.0167581346,-0.0867843702,-0.1155179217,0.0846229196,0.0805462673,-0.0154623613,0.0302908644,-0.0465702191,-0.1232423037,0.2224500924,0.0407096371,-0.0597837269]],"hackathon_name":"CUES Hackathon 2016 Powered by ARM","index":617,"project_description":"Bringing safety back to cyclists.Imagine you're cycling down the road, behind another cyclist, but then he\/she suddenly stops. You don't realise and pummel into the back of them. That's not ideal! We're here to combine bike lights with simple safety features including easy indicator lights, brake lights and of course, simple installation.That's what we do. We find solutions for problems.CUES Hackathon 2016 Powered by ARMMikey Zhao\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:29 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Bikio Lightio","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/bikio-lightio-80scq9","keywords":"lights,simple,suddenly,ideal,back,behind,bike,brake,combine,course,cycling,cyclist,easy,features,find,imagine,stops,including,indicator,inspiration"},{"level_0":618,"hack_vector":[[0.1345739961,-0.1090807393,-0.0229297318,0.0343588516,-0.0242308527,0.106249094,0.2002677768,-0.0053345663,-0.0212457683,-0.0304602925,0.0114649786,-0.0594051816,0.1320877224,-0.0677335188,0.0643714517,0.0148368776,0.2093242109,-0.0170195717,0.0399948545,0.1476469189,-0.2570486665,0.0143875657,-0.0386024825,-0.0185499489,0.1003632694,-0.0309880171,-0.0255881231,-0.1647362709,-0.015374437,-0.1123368666,0.0453380831,-0.1056210697,0.0242606048,-0.0670816824,-0.0033153433,-0.0239531379,0.1086129546,-0.1531629562,-0.0578764789,0.0002110009,0.0445590205,-0.1188728437,-0.1402303278,-0.0425228849,0.0660170838,-0.0775355771,0.0202372484,-0.0834752098,-0.0158388652,-0.2183823586,-0.1389294118,0.0087760296,-0.1052210927,-0.0042775571,-0.2110699266,0.1689580828,-0.1318900883,-0.0317980535,0.0347172618,-0.1104162037,-0.0730048269,0.0258317087,0.0661669895,0.0463306755,0.1131508127,0.0243874043,-0.0999354124,-0.1318520308,0.0282104183,0.0132349478,0.0587044694,-0.0539755076,0.0051087094,-0.1154403836,0.0316336788,-0.1258093715,0.1639958173,0.0016538458,0.0094825635,-0.1406570524,0.1138525084,0.1655762941,0.0423527509,0.1668736935,0.1077264696,0.204485938,-0.1003451496,-0.0336940475,-0.0380965471,-0.077225484,-0.1485259235,0.066492185,0.0999872983,-0.0348415934,-0.0265023876,0.0056605013,-0.1716179848,0.222642228,0.0155479684,-0.0638096854]],"hackathon_name":"CUES Hackathon 2016 Powered by ARM","index":618,"project_description":"A network of interconnected devices to aid navigation when cycling in a group.When cycling to the ARM 2016 hackathon, we experienced some of the commons problem of cycling in a group. Issuing directions is not always easy, and keeping up with the leader can be even harder - if someone falls behind, it becomes difficult to attract the group's attention to get them to wait.What if there were devices that you could connect together to solve this problem?The device links up to other devices nearby: you select a channel, and specify whether you want to be a leader or a follower. Leaders can press buttons to propagate directions to their followers (left, right, stop), and followers can ask the rest of the group to stop and wait for them if there is a problem.We've been using the BBC microbit as the foundation for this project - we wrote code in python to handle all of the logic, and we soldered switches and a battery pack to the board, as well as a transistor to operate a buzzer.The buzzer could not be connected directly to the output pins of the microbit due to lack of current - therefore, we used a transistor to provide enough current for the buzzer to sound, using one of the output pins to control it.As the hackathon progressed, we added more and more functionality. For example, if someone tries to designate themselves as leader on a channel that already has one, they simply become a guest - we decided to implement this in order to reduce confusion. The buzzer was an addition that we are very proud of - we managed to overcome the problem with our knowledge of electronics in order to still be able to implement this functionality.We all trained our problem-solving skills and got better at coding and digital electronics.CUES Hackathon 2016 Powered by ARMMatteo Pozzi\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:23 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Bike Net","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/bike-group","keywords":"problem,buzzer,leader,group,directions,microbit,devices,channel,proud,followers,cycling,someone,one,pins,current,could,order,output,hackathon,functionality"},{"level_0":619,"hack_vector":[[0.1309840679,-0.0875375271,-0.0213628337,0.0538151376,-0.0282268655,0.1467829049,0.2111004293,-0.0381021462,-0.029141387,-0.0193978325,0.0054599103,-0.0467213728,0.1365502328,-0.0736547336,0.0388166197,0.0078049526,0.2259986252,0.0010122188,0.0499381796,0.1225458756,-0.2299179137,0.0425462909,-0.0285825077,-0.0231566038,0.112155132,-0.0158350132,-0.0391024761,-0.1787264198,-0.0151456399,-0.0830041096,0.0535407327,-0.1204403043,0.0476593785,-0.0736063868,-0.020461956,-0.0209742896,0.1402790844,-0.1338993162,-0.0522725023,0.0104803424,0.0500862189,-0.1489412636,-0.1471258253,-0.0411607176,0.0535741374,-0.0487554446,0.0139670391,-0.0698100626,-0.0159327537,-0.2106168568,-0.1265654713,0.0224423036,-0.1084905192,-0.0007769755,-0.1962784827,0.148494646,-0.146032095,-0.013416619,0.0367974751,-0.0876933113,-0.0621717088,0.0189609565,0.0862347856,0.0368034877,0.1214187071,0.0075016497,-0.092326574,-0.1361040622,0.0412541851,0.0343161747,0.0665000901,-0.0517607741,0.0166686885,-0.1323070675,0.0068386747,-0.1309976578,0.1728882492,0.0064861681,0.0267080106,-0.1425917298,0.118009612,0.152049616,0.0564080328,0.177305907,0.1153913811,0.1846933663,-0.1085257232,-0.0310759097,-0.0181581695,-0.0954399332,-0.1609601527,0.0599911325,0.084949173,-0.035685543,0.0082244957,-0.0018254274,-0.1527982056,0.220590204,0.0313058607,-0.0668483078]],"hackathon_name":"CUES Hackathon 2016 Powered by ARM","index":619,"project_description":"Your grandma is home alone, or is she?With an ageing population in many countries, there is a need for care for elderly, especially those who live alone.Our project has a heart monitor, which sends a message to the watch if the heartrate drops . In the future Watch will be onnected to an Android App. Second module connected to the Watch is the Kitchen Module. It sends info to the watch, when the water is boiling and let's user remotely turn off the kithcen equipment. Watch, Kitchen Module and Heartrate sensor are in one network.Second part of the project is an Emergency Button. After pressing it it will send an emergency message to the officials using an app on our Android Device.Limited programming experience, lack of RAM in Microbits. Impossible Bluetooth programmingWe got a working prototype with basic functions. We managed to make an app to contact the emergency servicesAndroid studio, teamwork, leadership. How to translate Python to C++Integrating the Heart Sensor and Watch into the emergency button and the app so our system is fully integratedCUES Hackathon 2016 Powered by ARMI worked on Python code of the Microbits internal network and whole electronics workHan Wei\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:10 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Integrated Support Project for the Ageing","project_tags":["javascript","python","c++","android-studio"],"project_url":"https:\/\/devpost.com\/software\/integrated-support-project-for-the-ageing","keywords":"watch,emergency,app,project,android,module,sensor,programming,heart,heartrate,message,second,sends,button,integrated,kitchen,ageing,especially,impossible,info"},{"level_0":620,"hack_vector":[[0.1432120949,-0.1060247272,-0.0297238678,0.0446476601,-0.0141447475,0.1269431263,0.2039933354,-0.0219296906,-0.0328552872,-0.0127221784,0.0004281038,-0.0716289356,0.145659402,-0.0690659955,0.0605197102,-0.0132242683,0.1970309019,-0.0207494106,0.0438248627,0.1349007636,-0.2465564907,0.0374639928,-0.0317056887,0.006056563,0.1335614473,-0.0298452601,-0.0329362974,-0.1641323566,-0.0304388851,-0.0868187323,0.072925128,-0.1208435446,0.0265454017,-0.0676109493,-0.0259671807,-0.027092237,0.122354582,-0.1412091702,-0.0530075133,-0.0091088358,0.0626119897,-0.1368186921,-0.141690284,-0.0364313386,0.0730818287,-0.0426854268,0.0079022544,-0.0824198425,-0.0196577217,-0.2096708864,-0.1444095522,0.0198123958,-0.1099114344,0.0309898835,-0.2189861983,0.1527438313,-0.1414966881,-0.032269448,0.0284871832,-0.1087114289,-0.0762037784,0.0214742236,0.0706141442,0.0249530319,0.1111479551,0.0222822521,-0.0866202638,-0.1204693094,0.0256244075,0.0282775052,0.063575156,-0.0495217331,0.0222196337,-0.1119291782,0.0328383669,-0.1175365373,0.1660012156,-0.002917195,-0.0020462084,-0.1293896586,0.1125117093,0.1498090774,0.0511223115,0.1721080542,0.1057057083,0.2082164884,-0.0921748504,-0.0390243791,-0.0216274485,-0.0750235692,-0.143303901,0.0609715208,0.0992726907,-0.0348179378,-0.011979063,0.0119197862,-0.1621942669,0.238465488,0.0114429882,-0.0552209765]],"hackathon_name":"CUES Hackathon 2016 Powered by ARM","index":620,"project_description":"Play the game anywhere, in anyway you like!We saw a live plot of the Microbit accelerometer data on an app and were intrigued by the way the sensor readings reacted to our movement. An idea for a game started to appear......Micro-2048 is a gesture driven 2048 game. The player swipes a Microbit across the air to move the tiles on the screen. It uses radio connection, which means that the player can play it without sitting in front of a computer.We used two Microbits, one is connected to the computer via serial. This then talks to a Node.js server, which relays the sensor information to a browser based javascript game. The other Microbit acts as a game controller, it publishes the gestures it detects through the radio. Together they make a user gesture driven game.We initially had another idea that involved a lot of electronics. Unfortunately, we lacked the components and the experience needed to execute that idea, so we had to switch ideas with only 12 hours left to spare. However, we did manage to successfully pivot and reuse most of our code for a completely different applicationA few of our teammates no little experience with python, but they managed to learn rapidly during the course of the Hackathon and gained a fundamental knowledge by the end of it.We have learnt is that it is much more efficient to start with something with basic functionality and then iterate to make it better, rather than aiming too high from the beginning. Also, it's very important to be flexible and make directional changes when necessary. The most important of all is that we should enjoy the process, and not chase the destination.This project act as a proof of concept that Microbits can bring a completely new experience to gaming. In the future, more games may be powered by the Microbit with more complex gesture drove interfaces.CUES Hackathon 2016 Powered by ARMI wrote the server side app and the embedded python that connected with is using serialI was in charge of electronics stuff and coded in python for some part of this project.Edward Liu\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:04 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"micro 2048","project_tags":["javascript","node.js","python"],"project_url":"https:\/\/devpost.com\/software\/micro-2048","keywords":"game,microbit,experience,gesture,idea,make,completely,microbits,driven,computer,sensor,radio,important,player,functionality,execute,enjoy,flexible,front,end"},{"level_0":621,"hack_vector":[[0.125772655,-0.115981847,-0.0210320726,0.0325756408,-0.0277295969,0.1241677701,0.2093580514,-0.023306286,-0.0219964124,-0.0168175325,0.005385295,-0.0500670001,0.1293735504,-0.0675175488,0.0509115346,0.0260365549,0.2305900455,0.0004838959,0.0396941416,0.1304052919,-0.2479096204,0.0417220369,-0.0337754786,-0.029683318,0.1046456173,-0.0164755955,-0.0381210819,-0.1745803654,-0.0038774046,-0.1008333862,0.0521275476,-0.1273817718,0.0353438295,-0.0810971409,-0.0120682884,-0.0343684107,0.1187670529,-0.1478573084,-0.0516471006,-0.0036493924,0.0306414329,-0.1538654715,-0.1487693936,-0.0520176329,0.0583640039,-0.0588025264,0.0112142395,-0.062930584,-0.0251382384,-0.2030633837,-0.1189985797,0.0073046917,-0.1018325239,-0.0127674742,-0.1884003133,0.1507255733,-0.1331635416,-0.0210930761,0.0332981311,-0.0862759799,-0.0605921894,0.0235062689,0.0810227171,0.0488826185,0.1066066325,0.0087584564,-0.1064971462,-0.1371023059,0.0502799824,0.0322093032,0.0728262961,-0.0617207028,0.0267423037,-0.1275635362,-0.0020764605,-0.1484588534,0.1574821472,0.0144815715,0.0306443367,-0.1397562325,0.1275150478,0.1606889963,0.0531685278,0.1822270006,0.1074881777,0.1876666546,-0.1201592088,-0.0284640063,-0.0230344515,-0.0973593667,-0.1487146765,0.0616746992,0.0969127789,-0.0452478081,0.0075367889,-0.0007119878,-0.154468134,0.2079571784,0.0184057616,-0.0694727451]],"hackathon_name":"CUES Hackathon 2016 Powered by ARM","index":621,"project_description":"An IoT necklace which, in the event of the user sustaining impact, makes emergency calls to a list of guardians.For elderly, ill or disabled family and friends, the risk of falling is a serious concern. \nIn fact, research carried out by the Department of Surgery at the University of Rochester medical centre found that the elderly over the age 70 are three times more likely to be fatally injured. In many cases, for elderly adults who are frail and have pre-existing medical conditions, what seems like a minor fall can lead to a broken hip or bones. In the scenario that these individuals are alone or cannot easily gain access to someone - this can lead to far reaching and very serious consequences.When a user falls, trips or sustains any significant impact, an emergency call is established with a list of guardians informing them of the user's emergency.The necklace consists of a BBC Microbit, which uses its accelerometer to measure significant impact. When the acceleration exceeds a threshold, the Microbit sends an emergency message via Bluetooth LE to a Raspberry-Pi. The Raspberry-Pi makes an HTTP GET request to our Node.js server, which in turn establishes a call with the guardian of the user using the Twilio Call API.CUES Hackathon 2016 Powered by ARMEvgeny Roskach\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:00 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AlertLink","project_tags":["node.js","twilio","raspberry-pi","c++","python","bluetooth"],"project_url":"https:\/\/devpost.com\/software\/alertlink","keywords":"microbit,pi,call,bluetooth,elderly,api,raspberry,built,user,emergency,python,data,significant,programming,many,falls,end,server,node,medical"},{"level_0":622,"hack_vector":[[0.1645503193,-0.1675291657,0.0047537023,0.1045377105,-0.0403409339,0.1658846289,0.1674206108,-0.0638392419,-0.0406119376,-0.0095962537,-0.011942083,0.0538172983,0.1244403198,-0.0616087355,-0.0055633499,0.0518096834,0.2293620259,0.0263057556,0.0550675504,0.0880910009,-0.1973826587,0.0143393865,-0.0203786641,-0.0384866856,0.2153882235,-0.0095604425,-0.062053062,-0.1868384778,0.0288450178,-0.0638457164,0.0401492044,-0.1141962931,0.0730255917,-0.0399412625,-0.0359871835,-0.001947678,0.1407431811,-0.106111601,0.002123456,0.0919390544,0.0799940154,-0.1768930554,-0.177599594,-0.0569233485,-0.0634840801,-0.0178050864,0.0253141578,-0.0009425824,-0.0197882317,-0.1757804453,-0.0199586935,0.0349544697,-0.1184174493,-0.0400460064,-0.1238474473,0.1450114101,-0.1672682315,0.0730306581,-0.0180559941,0.0525696129,-0.0173645131,0.0284940097,0.0326417983,0.0547140315,0.1462736428,-0.0345757157,-0.1494508982,-0.1659157872,0.0168544799,0.0137255536,0.0770450681,-0.036123272,0.0043739439,-0.1414480209,-0.0636654869,-0.0593028441,0.1772888303,0.0210670736,0.0964479521,-0.137421295,0.0971142128,0.1492041051,0.0071446379,0.1635386646,0.1543345898,0.166935876,-0.1503863931,0.0747383237,0.0114171077,-0.1004602462,-0.0655603334,0.1166200861,0.0241765305,0.0169638135,0.086095266,-0.0877832472,-0.0588295311,0.1414577365,0.1004846469,-0.0186197255]],"hackathon_name":"CUES Hackathon 2016 Powered by ARM","index":622,"project_description":"A simple survival game using real-world hand motion controlProject for ARM Cambridge Hackathon 2016\nby Anh Nguyen, Bence Kasza, Khanh Nguyen and Adien LiusieCUES Hackathon 2016 Powered by ARMDo Vinh Anh Nguyen\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 06:57 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Don't Die","project_tags":["c++","makefile"],"project_url":"https:\/\/devpost.com\/software\/survival-gh5lnr","keywords":"nguyen,survival,project,liusie,khanh,kasza,hackathon,cambridge,bence,arm,anh,adien"},{"level_0":623,"hack_vector":[[0.1417607516,-0.1054045483,-0.031250041,0.0636447519,-0.0210227743,0.1434523463,0.1985754371,-0.0338573791,-0.0286264177,-0.0139172217,0.0121237207,-0.0472543836,0.1524731219,-0.0666735023,0.057266511,-0.006971797,0.1981753856,-0.0131600499,0.04819813,0.127722472,-0.2391663045,0.0346887149,-0.0293146651,-0.0049263677,0.129427731,-0.0169656891,-0.0307884887,-0.1701347679,-0.0222669486,-0.0832955763,0.0704496205,-0.1218731552,0.032544829,-0.0654123127,-0.0245860219,-0.0231272075,0.1265405715,-0.1367904991,-0.056549076,0.0018520482,0.0653939247,-0.1307590157,-0.143292889,-0.0354238041,0.0538073331,-0.0372317173,0.0140266577,-0.0772504732,-0.0199187025,-0.2126899064,-0.1342113763,0.018433027,-0.1120775416,0.0155363027,-0.2080602944,0.1550834477,-0.1401765198,-0.0207881965,0.0327803269,-0.0915951282,-0.0681616589,0.0233395491,0.078923516,0.0345926136,0.1204902977,0.0184401572,-0.0965042114,-0.1304408461,0.030363081,0.0253605451,0.0624421164,-0.0385904685,0.0164860245,-0.1199349687,0.0145603772,-0.1132538766,0.1833073348,0.002929417,0.0083473511,-0.1422525644,0.1125891209,0.1616420001,0.0450236574,0.1682566702,0.1147540435,0.2067795247,-0.0935748369,-0.0295539554,-0.0207279213,-0.077015169,-0.1501722783,0.0676298067,0.0972813815,-0.0321551673,0.0039948062,0.0040153214,-0.1549069136,0.2354277819,0.0240580477,-0.058595065]],"hackathon_name":"CUES Hackathon 2016 Powered by ARM","index":623,"project_description":"Reinventing the classroomResearch suggests two thirds of students are bored in classrooms. We want to reinvent what hasn't been changed for centuries, and do it in a big way. The UK government plans to provide over a million micro:bits to high school students, and we decided that this is a great opportunity to help both students and teachers by creating a fun and interactive classroom.Edukit:bit is an app built to work with students' micro:bits by providing a platform for peers to compete in mini-games set by teachers. It's a fun environment which should get students involved and help them have a better learning experience.The micro:bit was built using the C++ compiler on the mbed, and the Android app was, of course, built on the Android Studio app.Bluetooth was a massive issue, and we had to give up on the connectivity, and ended up using the micro:bit as a virtual keyboard.Ganesh: Conducted my first solder\nMihai: Developed leadership skills\nMaria: Learning how to solder \/ image processing\nMrinank: Pulling an all-nighterExpanding the platform to include more quizzes and mini-games, and revolutionising the classroom environmentCUES Hackathon 2016 Powered by ARMGanesh Sivamani\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 06:53 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Edukit::Bit","project_tags":["c++","java","android-studio"],"project_url":"https:\/\/devpost.com\/software\/edukit-bit","keywords":"students,bit,built,micro,app,help,environment,fun,games,classroom,learning,mini,edukit,solder,using,platform,bits,teachers,android,first"},{"level_0":624,"hack_vector":[[0.1595809609,-0.1551047564,0.0096097607,0.0850456432,-0.0485938676,0.1625617445,0.1689869463,-0.0490936302,-0.0360954851,-0.0351754576,-0.0133329453,0.0344521031,0.1253927499,-0.0745777339,-0.0121407015,0.077940762,0.2619993687,0.0358395092,0.0531894453,0.0985917822,-0.1955188364,0.0011815373,-0.0370374098,-0.0595857091,0.1846232563,-0.0151288677,-0.0707223564,-0.1757024229,0.0300547611,-0.0951796174,0.0162321161,-0.0968871936,0.0799387023,-0.0433791541,-0.0250990745,0.0047818087,0.1472880244,-0.1051646918,0.0006806238,0.0988664553,0.0661171526,-0.148415029,-0.1804818511,-0.0479737148,-0.0509430021,-0.0599286705,0.0404274985,0.0023990565,-0.0186096691,-0.1876092553,-0.0245920196,0.0372066759,-0.1084298715,-0.0712806284,-0.1030390114,0.150233537,-0.1540610045,0.0641616359,-0.0102457097,0.0514596403,-0.0126692373,0.0366110802,0.0324677154,0.0707391798,0.1416375786,-0.0417924933,-0.1523107141,-0.1791315079,0.0097329747,0.006675317,0.0723877624,-0.0338443071,-0.0175924823,-0.1419664472,-0.0690917894,-0.0616214387,0.1823989749,0.0265264995,0.1018937826,-0.139318347,0.0966018289,0.1523503512,0.0021345669,0.1476148516,0.1564381421,0.148461625,-0.1455536634,0.0744871944,-0.002997397,-0.114993751,-0.0684486553,0.1074680462,0.0185239669,0.0180654041,0.0788285434,-0.0949563682,-0.0704520866,0.1495765001,0.1095725074,-0.0395706855]],"hackathon_name":"CUES Hackathon 2016 Powered by ARM","index":624,"project_description":"The product that remembers when you don\u2019tSaving the World from its lazinessCUES Hackathon 2016 Powered by ARMSamuel Charlwood\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 06:51 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Eco - Sleep","project_tags":["python","c++"],"project_url":"https:\/\/devpost.com\/software\/eco-sleep","keywords":"world,sleep,saving,ran,proud,next,learned,laziness,inspiration,eco,challenges,built,accomplishments"},{"level_0":625,"hack_vector":[[0.1459551454,-0.1126049757,-0.0405549183,0.0493773967,-0.0201584306,0.1436860114,0.1989278346,-0.0419057384,-0.0103923827,-0.0277584139,0.0093860105,-0.0565568954,0.137164101,-0.0545452833,0.0636100546,-0.0001760564,0.2138254791,0.0029436674,0.0408611223,0.1182332709,-0.2376656681,0.0378497094,-0.0363868549,-0.0108848372,0.1035720482,-0.0187895373,-0.0277529042,-0.1770592779,-0.0391317196,-0.0920395926,0.0764095113,-0.1275403798,0.0374809317,-0.0826229528,-0.0198709816,-0.0280186292,0.1198544651,-0.1348855346,-0.05765149,-0.0058323545,0.0533794835,-0.135623008,-0.1485616714,-0.0423758291,0.0552465357,-0.0560304411,0.0166398548,-0.068637304,-0.0442913994,-0.2128356099,-0.1400687546,0.0101275053,-0.1013658717,-0.0038478423,-0.1976070404,0.148183316,-0.1310892403,-0.0330662355,0.0413240865,-0.0906447768,-0.0831231624,0.021216346,0.0752918124,0.0238000248,0.1011797488,0.0185306855,-0.1073851958,-0.1218629703,0.029007135,0.0345268771,0.0640056431,-0.0513148978,0.0300711989,-0.1256783456,0.0070639476,-0.1205477566,0.1837011129,0.0059782746,0.0157247186,-0.142056793,0.1072005033,0.161425814,0.0421994813,0.1789540946,0.1069302931,0.1982765347,-0.1019969359,-0.029344555,-0.0193654746,-0.0853596628,-0.1410292983,0.0733110756,0.0887968764,-0.0380772538,-0.0061822836,0.0018151359,-0.1520594954,0.2386113256,0.0107419854,-0.0689563975]],"hackathon_name":"CUES Hackathon 2016 Powered by ARM","index":625,"project_description":"A single micro:bit acting as an interactive Python shell. Without a computer, you can type and run python3 codes!The accelerometer on the microbit gives a 3D direction, so you can use it to type on a virtual keyboard (like typing with a mouse when you don't have a keyboard)! I was trying to build a calculator but I found immediately that it can do much more: literally accepting and running Python codes in real time inside it. For presentation purpose, I use radio transmissions to sync its display with another microbit so that I only need to show the display microbit under the projector.Different directions represent different letters, numbers and symbols. Pressing Button A confirms a character input. Pressing Button B runs the codes.The accelerometer is quite sensitive so I had to redesign a keyboard layout to improve input speed and accuracy.It's pure coding and everyone can download the codes to their microbits, like a mobile app. Isn't it cool?CUES Hackathon 2016 Powered by ARMCreated by Junteng Li, with the help of Guangzhi Sun, Anran Jin, Yuchen Zhou and Yufeng Zhao. Special thanks to Cheryn Ng's group for providing batteries and microusb cables!Junteng Li\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 05:32 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Gravitational keyboard with Python interactive shell","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/py3_idle_in_microbit","keywords":null},{"level_0":626,"hack_vector":[[0.1574756205,-0.1537110507,0.0097894035,0.1004811227,-0.0547761023,0.1688408107,0.1719802022,-0.056283962,-0.0343507417,-0.0203140173,-0.0088861184,0.0529931448,0.1282833219,-0.0720470324,-0.0132252611,0.0802726522,0.263005048,0.0441123508,0.0499702655,0.0870701894,-0.1831941754,0.0105480477,-0.0387972146,-0.0616192743,0.1901742667,-0.0087998593,-0.0784465969,-0.1873529851,0.0354771875,-0.0747600272,0.0225027557,-0.0959083363,0.0847299844,-0.047852274,-0.0287261885,0.0171437711,0.1474461406,-0.0968233794,0.009455841,0.1039431393,0.0612311475,-0.1613557935,-0.1876919866,-0.0429222547,-0.0661287233,-0.0336979292,0.0344564132,0.0050698845,-0.0174272805,-0.170195967,-0.011951929,0.0405954681,-0.1041611135,-0.0706503317,-0.0897024125,0.1377566159,-0.1522931457,0.0826320946,-0.0144154718,0.067350477,-0.0058329212,0.0377746709,0.0405778028,0.0733248964,0.1442601383,-0.0507023148,-0.1413352042,-0.1750476807,0.0117349168,0.0049778181,0.0704759434,-0.0282787643,-0.0166977476,-0.1446063966,-0.0848026723,-0.0565802716,0.1829919815,0.0245824754,0.1040394232,-0.1407274604,0.1003495082,0.1516337395,0.0101570971,0.1377395988,0.1506637931,0.1508250535,-0.1499177963,0.078497529,0.0128305964,-0.1173659638,-0.0689508617,0.1130789518,0.0063092909,0.0309027433,0.0951848328,-0.0949429721,-0.0499482788,0.1334681958,0.1120127439,-0.030929368]],"hackathon_name":"CUES Hackathon 2016 Powered by ARM","index":626,"project_description":"Musical device with graphite based capacitive touch sensor inputCUES Hackathon 2016 Powered by ARMGreg Brooks\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 29, 2016 05:15 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MusCaT","project_tags":["arduino","python","c++"],"project_url":"https:\/\/devpost.com\/software\/muscat","keywords":"micro,touch,played,finger,drawn,location,detected,bit,tune,charge,consists,control,capacitor,display,capacitance,graphite,grid,hand,increases,inspiration"},{"level_0":627,"hack_vector":[[0.1547141224,-0.1578974873,0.0205100868,0.103576906,-0.053475447,0.158896938,0.1545377821,-0.0537189431,-0.0357033163,-0.0272161197,-0.0195208825,0.0692929476,0.1192499101,-0.0776359662,-0.0277512595,0.0936993882,0.250223726,0.038416557,0.0553749092,0.0752661675,-0.1690012068,-0.0059377681,-0.0381196924,-0.0671267286,0.1991816014,-0.0162246209,-0.0804192424,-0.1702288389,0.0475418679,-0.0688046589,0.0042813155,-0.078754507,0.0905622914,-0.0343045592,-0.0375704244,0.0270445365,0.1500456929,-0.0911526158,0.02189596,0.1252636015,0.0671524927,-0.1464896798,-0.1823516339,-0.0339007154,-0.0817530528,-0.0391492993,0.0495038778,0.0115557807,-0.0080195609,-0.1680563539,0.0094152037,0.0432519466,-0.1079596207,-0.0744663849,-0.0717547312,0.1346125901,-0.1566340178,0.0949455574,-0.0267087203,0.0953661874,0.0030905292,0.0398349054,0.0296239126,0.0749299526,0.1540615708,-0.0652244538,-0.1473420411,-0.1800604165,0.0044608996,-0.0056616333,0.0662486628,-0.0252175368,-0.0319666043,-0.1475682706,-0.0915508643,-0.0336602852,0.1853624582,0.0299546365,0.116303429,-0.138493374,0.0930299088,0.1437840462,-0.0071133529,0.125947535,0.1576684713,0.1369444132,-0.144608885,0.1089554429,0.0155194327,-0.1219554245,-0.0523613393,0.1189756691,-0.0064520906,0.0454883799,0.1054641977,-0.1178192496,-0.0349807702,0.110437043,0.1346189976,-0.0222361404]],"hackathon_name":"CUES Hackathon 2016 Powered by ARM","index":627,"project_description":"Nostalgia.-- .- .. - \/ ..-. --- .-. \/ - .... . \/ .--. .-. . ... . -. - .- - .. --- -.CUES Hackathon 2016 Powered by ARMNathan Zhu\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 01:19 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Wacky Messenger","project_tags":["python","love","caffeine"],"project_url":"https:\/\/devpost.com\/software\/morse-messenger","keywords":null},{"level_0":628,"hack_vector":[[0.1536719352,-0.1094404608,-0.0189388227,0.0433802642,-0.0098998835,0.1280617267,0.1903740764,-0.0353887007,-0.0368555672,-0.0099106282,0.0220017582,-0.08285252,0.1529188305,-0.0636289045,0.0685530677,0.0027098104,0.2017988861,-0.019235963,0.04878195,0.1328200102,-0.2385163158,0.0476957224,-0.041875422,-0.005033006,0.1146124974,-0.0400684662,-0.0298913941,-0.1829553097,-0.0397471339,-0.0888504833,0.0841289759,-0.1114646345,0.0338378921,-0.0819820389,-0.0182291884,-0.0258516986,0.1161778644,-0.1386613697,-0.0528820641,-0.0166790187,0.0519476682,-0.1306763291,-0.1571834534,-0.0283279307,0.0591394752,-0.0453082509,0.0080892313,-0.0863507241,-0.0141726444,-0.21437186,-0.1431405097,0.0177293271,-0.1095561683,0.0199709702,-0.2116396278,0.1550630331,-0.1380987167,-0.0226615537,0.0373897664,-0.1082014292,-0.0731858388,0.0226433165,0.0733081475,0.0467703007,0.1068103164,0.0223670397,-0.0933102593,-0.1236283928,0.0187336802,0.0179021582,0.0729852393,-0.0460454039,0.0195464641,-0.1166815087,0.0274398588,-0.1145555824,0.1804934144,-0.0114317816,0.0104880948,-0.1250975728,0.1125459298,0.1481864005,0.0523356348,0.1589831561,0.109147422,0.197586,-0.0975846127,-0.0552503094,-0.026126489,-0.0780359656,-0.1431227922,0.0585448109,0.09854725,-0.0475000255,-0.0184495077,0.0030417237,-0.1543440968,0.2262253165,0.0137993908,-0.0709192827]],"hackathon_name":"CUES Hackathon 2016 Powered by ARM","index":628,"project_description":"An Orchestra made with microbitsYou've seen the Theremin? We are the next that.By tilting and turning a microbit, a harmonised melody is created on 3 other microbits.With 1 microbit acting as the network master and 3 other as its slaves, we broadcast the direction and tilt to the slave microbits. The slaves calculate the octave and specific note of the scale from this data and produces an appropriate pitch on a Grove Buzzer. We have modified the code on each of the microbits so that it harmonises the notes produced.Limited electronics\/ coding experience with some team members. Lack of components to test project efficiently. Making the product easy to use but broad in terms of sounds it could create.Splitting work up evenly between the group - we all had specific tasks that worked in tandem. Encorporating and developing all our ideas into the final product. It actually worked!!Sleep isn't necessary. How to use I\/O on computers to create real devices that respond to users.Replace buzzers with speakers so that we can play with the tones and timbres of the music.CUES Hackathon 2016 Powered by ARMCreated the harmony functions that take the position data and produce a note as well as displaying the note to be played to help with selection.I worked on the slave micro:bits which use'try-except' to get the assignment and tone from the master (control chip) and instruct the buzzers to play using Oliver's function. I also organised effective communication in the team to talk about the progress and decide the next step of work.I wrote the code for the master micro bit(which gives orders to the slave buzzers) and the protocol  and construction of the radio network.I wrote code to allow the use of arbitrary sound samples, which could let the instrument have different 'voices'. I also hexdumped Ollie's code to recover it when he forgot to charge his laptop, and lost 4 hours of work...Oliver Jones\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 29, 2016 03:28 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Microrchestra","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/microrchestra","keywords":"microbits,specific,create,microbit,next,product,slaves,worked,use,tilt,final,direction,easy,efficiently,electronics,encorporating,evenly,experience,group,making"},{"level_0":629,"hack_vector":[[0.149527818,-0.0900374278,-0.0353235565,0.0467498526,-0.0306135584,0.1363429129,0.1932183355,-0.0277426038,-0.0156784859,-0.017728528,0.0194225665,-0.0526448973,0.1520593464,-0.0628686473,0.0660772398,0.0004498373,0.2095802426,0.0025442976,0.0258972254,0.138576597,-0.2337764055,0.0015767862,-0.0441113263,-0.0047697965,0.1280181408,-0.0172020067,-0.0296837389,-0.1670318991,-0.0215154588,-0.0873527527,0.0587091781,-0.1095587462,0.0194788575,-0.075882189,-0.0156927519,-0.0077602668,0.1150980592,-0.1369661391,-0.064026475,0.0103206271,0.0498655364,-0.1149546579,-0.1470622271,-0.0209578313,0.0570106134,-0.0628525168,0.0182780791,-0.0736241415,-0.0289291982,-0.2202350497,-0.1392584145,0.0075984346,-0.1051368713,-0.0079211788,-0.1930902302,0.1806487143,-0.1174910367,-0.0123489462,0.0237455517,-0.0943886191,-0.0619653128,0.0208050869,0.07502269,0.0489344038,0.1246877536,0.0134185646,-0.1008540541,-0.1291357875,0.0315357596,0.0061805025,0.0520251505,-0.0288467053,0.0135882702,-0.1203799471,0.0187293757,-0.108467415,0.1962079555,-0.0090490198,-0.0010055859,-0.1391177475,0.1163237691,0.1693804115,0.0513833798,0.1563807279,0.1051816568,0.2136307806,-0.0949159265,-0.0348653309,-0.0201811045,-0.0715552419,-0.14848952,0.0674384162,0.0994894952,-0.0267954879,-0.0000539262,-0.0008425264,-0.1580655426,0.2531692386,0.0113262115,-0.0699448213]],"hackathon_name":"BrumHack 5.0","index":629,"project_description":"Alexa for mute people: check your account balance, make payments and invest using Sign Language!CoverWe were looking for inspiration and someone said \"do something a CEO can use\". We decided to create a fintech app, using CapitalOne and BlackRock APIs to generate the best three options to invest, looking at different ratios and returns (peRatio, pbRatio, returnonEquity, returns from year 1 and year 5). Furthermore, we wanted to make it more useful, so, we had the idea to implement this project for projects with disabilities.Using American Sign Language, you can ask Alexa to do different tasks for you: get your account balance, make payments for you, generate the first three best investment options and interact with Alexa during executing those tasks.We had some problems Amazon Web Services and we had to get use with their platform, in order to learn how to program Alexa. Furthermore, AWS Lambda did not work.We learnt node.js! Furthermore, one of our team member was at his first Hackathon and another one is with a non-programming background, so, we are proud of the whole program!Develop the program, add more financial features and signs.BrumHack 5.0Razvan-Gabriel Geangu\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 06:22 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hack the Accessibility","project_tags":["javascript","node.js","leap-motion","alexa"],"project_url":"https:\/\/devpost.com\/software\/hack-the-accessibility-pgfc9a","keywords":"alexa,generate,program,three,options,make,investment,furthermore,returns,different,best,first,capitalone,proud,get,inspiration,looking,balance,one,api"},{"level_0":630,"hack_vector":[[0.1293896586,-0.0730581284,-0.0348797552,0.0333790332,-0.0251012072,0.138153553,0.2086834908,-0.0317572542,-0.0056525585,-0.0273688547,0.0210099909,-0.0682198331,0.128590852,-0.0725910217,0.0546984486,-0.0027285896,0.2291475236,0.0078111407,0.0409421846,0.1349179447,-0.2311025858,0.0370937288,-0.039707724,-0.0179074109,0.0870764479,-0.0154182985,-0.0277897473,-0.1793635488,-0.0230325833,-0.0978443921,0.0482522473,-0.1326113343,0.0271162,-0.0904003531,-0.0035475076,-0.0173804965,0.1195990667,-0.1348115355,-0.0720645264,-0.0093302829,0.0362856388,-0.1315554529,-0.1359583139,-0.045088388,0.0751958117,-0.0695935041,0.0135221463,-0.0645671785,-0.0411666222,-0.2039310485,-0.1483472735,0.0054107825,-0.0993558466,-0.011373451,-0.1959441304,0.1503858417,-0.1169765517,-0.0428900868,0.0421055146,-0.1135560945,-0.0696669668,0.0152222365,0.0934169143,0.0441495776,0.1063474491,0.0217208862,-0.0927169323,-0.1251471937,0.041607447,0.0285557006,0.0604977123,-0.0551547222,0.0335366651,-0.1146751493,0.0295031928,-0.1430092305,0.1656619459,0.0049735871,0.0049737082,-0.1433983296,0.1208791733,0.1637679785,0.0588686019,0.1788703054,0.0866796747,0.1866469532,-0.1004229859,-0.0543320812,-0.0272108894,-0.0778051615,-0.1615128368,0.0464525484,0.0964565724,-0.0367032401,-0.0075524026,0.0153123485,-0.1649734974,0.2361530513,0.0035009515,-0.0852743015]],"hackathon_name":"BrumHack 5.0","index":630,"project_description":"Offline SMS Web BrowserCurrent design vs desired oneWe live in the world where one has always stay in touch. Our ability to quickly read emails or just access internet is often essential in our work. And yet still, over 60% of world population doesn't have access to internet. Even we often find ourselves in a position where we either run out of mobile data, don't have any credits on our account or there is no internet connection in our area. We decided to fix this problem with Networkless.Networkless is basically an offline web browser, that allows you to view websites even if you don't have access to internet. All you need is ability to send SMS from your phone and in return you can view any website you want in text version.We built an Android app, which looks similar to a traditional web browser. When you type the desired website into address bar, our app will send it as SMS to Twilio service. Our Amazon based server will then collect the HTML code of typed website, compress it and send the code back to user's phone (again, via SMS).It turned out that the HTML code of websites is usually far too big to fit in text messages. Typical Wikipedia pages contains hundreds of thousands of characters, while typical SMS can contain up to 160 characters. We dealt with it by heavily compressing the HTML file and removing unnecessary parts from it.Improving the compression of html file is our highest priority. It would decrease number of SMS sent for website to load, and therefore, improve app performance significantly. Other features we wish to implement:-saving websites offline\n-Google\/Wikipedia search\n-Wolphram Alpha replies\n-facebook\/gmail notifications\n-turn on SMS notifications automatically after phone loses internet connectionBrumHack 5.0Tomek Prabucki\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:17 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Networkless","project_tags":["java","javascript","android","node.js","css","html","amazon-web-services","twilio"],"project_url":"https:\/\/devpost.com\/software\/networkless-offline-sms-web-browser","keywords":"sms,internet,html,website,networkless,access,send,websites,phone,code,app,text,browser,built,ability,file,characters,offline,connection,even"},{"level_0":631,"hack_vector":[[0.1502032578,-0.0996555239,-0.02940364,0.0430300012,-0.0141749522,0.1284754574,0.2023943067,-0.0288501121,-0.0338279046,-0.0003171278,0.0033360161,-0.0775969699,0.1504039168,-0.0639579743,0.0749340206,0.0041912072,0.2020174414,-0.0088552879,0.0408293866,0.1294472218,-0.2395713478,0.043499168,-0.0480847284,-0.0025544041,0.1282518655,-0.0305024255,-0.0354152471,-0.17569758,-0.0295651499,-0.074950777,0.0745035112,-0.124303095,0.0328980386,-0.0779584721,-0.0290889367,-0.0105837379,0.1192702949,-0.1362871528,-0.0514802746,-0.0078272382,0.0350005887,-0.1464044452,-0.1556955874,-0.0229430571,0.0508004464,-0.0553619564,0.0046542692,-0.088730894,-0.0070744795,-0.2059899569,-0.132992059,0.004127406,-0.1127259508,0.0252517741,-0.1942769736,0.1635878384,-0.1500532478,-0.0077429721,0.0259472206,-0.0979538485,-0.0799129754,0.0333547294,0.076190874,0.0512104034,0.1040417999,0.0148417307,-0.1000245586,-0.1313779652,0.0296666529,0.0194095969,0.0734138265,-0.0475736745,0.0248631779,-0.1175946295,0.0311280582,-0.1228843257,0.1841064841,-0.0126604754,0.0200430062,-0.1260473132,0.1214751452,0.1471825987,0.0733062029,0.1526689529,0.1066666916,0.1927687675,-0.1029823869,-0.0358682424,-0.0062567224,-0.0864917338,-0.144390583,0.0547240674,0.1006103903,-0.0516498014,0.0047954982,0.0040561641,-0.1547451168,0.2240650803,0.0212713629,-0.0710139573]],"hackathon_name":"BrumHack 5.0","index":631,"project_description":"Colouring the pastHome PageGrayscale and coloured imageThe past is full of memorable moments captured in only black and white. From pictures of Einstein and US presidents, to the first kiss on camera, photography was fundamentally different without colour. That's why we decided to add colour to the past.Turns grayscale images into coloured ones.We built the project using a neural network for colouring the pictures and a python server for uploading them.Choosing the right parameters and configuration for the neural network\nDeciding what features to use for training\nProcessing power limitations -> Tensorflow can't use GPU on Windows\nLots of preprocesing for the data\nLarge training times\nNormalizing the data to bring it into the RGB spaceIt works ok for a couple of images\nYou can see the original shape of the object\nPython server works (yay)Working with TensorFlow\nA lot of Machine Learning\nBuilding a server in PythonWe will add the possibility of uploading larger images.BrumHack 5.0I wrote the functions that converted the PIL image objects into matrices ready to be used by the network. I also did the conversion between the matrices in our data set (which were coloured) and the grayscale equivalent, that was used to train the network. It was my first time using Python and I learned a lot about the programming languageTeodora Stoleru\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:30 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"DeepColour","project_tags":["python","html5","css3","javascript","numpy","scikit-learn"],"project_url":"https:\/\/devpost.com\/software\/deepcolour","keywords":"images,python,server,network,training,works,neural,past,pictures,colour,tensorflow,data,use,uploading,add,built,larger,large,learned,black"},{"level_0":632,"hack_vector":[[0.1507509351,-0.1384009272,0.0091889901,0.092422083,-0.049336303,0.1695281863,0.1809773892,-0.0621379688,-0.0248996243,-0.028974697,-0.0043472769,0.0392312929,0.1220179126,-0.0792189315,-0.0043084612,0.0795655102,0.2663266957,0.0445045009,0.0498506539,0.0850538164,-0.1838325709,0.0031495749,-0.0553898662,-0.0641871244,0.172623381,-0.0054989238,-0.0746612325,-0.1778174639,0.0327421278,-0.0808883831,0.0198142901,-0.1013098061,0.0854058936,-0.0524326973,-0.0347683355,0.0179063771,0.1491305083,-0.1015266031,0.0059091956,0.100456357,0.0554298759,-0.1499503553,-0.1815375239,-0.0386171155,-0.049853269,-0.0538495816,0.0443745367,0.0008342845,-0.0265170559,-0.1819357425,-0.0210915655,0.0353514329,-0.1057789251,-0.0662591904,-0.0837838277,0.1424990445,-0.1568568647,0.0714410916,-0.0179474857,0.0512662865,-0.0065539042,0.0357743166,0.0558853298,0.0726548731,0.1459402889,-0.0539950393,-0.1455741525,-0.1724187881,0.0182265323,0.0107489126,0.0615508631,-0.0288394224,-0.0162944235,-0.1483058184,-0.0739918649,-0.0598944388,0.1943655461,0.0343304574,0.094860211,-0.1518551409,0.1106069684,0.1577288657,0.0156317353,0.1365633756,0.149215579,0.1526313573,-0.1499896199,0.0726676136,0.0064474824,-0.12158034,-0.0806751177,0.1048021317,0.0239561182,0.0326301754,0.090105027,-0.0916655958,-0.0598417483,0.1435157806,0.107571438,-0.0419091955]],"hackathon_name":"BrumHack 5.0","index":632,"project_description":"A wifi connected doorbell...Internet connected doorbellConfigure using alexaSettings pageTell you with twillio\nEmail\nPusherBrumHack 5.0Dan Jones\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 06:52 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Ding","project_tags":["python","c","javascript","html","css","alexa","twilio","pusher"],"project_url":"https:\/\/devpost.com\/software\/dingly-dong","keywords":"using,twillio,tell,settings,pusher,page,internet,email,doorbell,connected,configure,alexa"},{"level_0":633,"hack_vector":[[0.1323354393,-0.0960757732,-0.0349776335,0.0466072932,-0.0237607919,0.1440165788,0.2029472142,-0.0399413183,-0.0183000136,-0.0210532714,0.015385747,-0.0591192134,0.1465071291,-0.0855905861,0.0582746938,0.0024101792,0.2271565348,-0.009581117,0.0463661551,0.1166550219,-0.2212290764,0.0393679924,-0.0460186712,-0.0093474416,0.1240458488,-0.024424918,-0.0294908434,-0.1765524745,-0.0390859023,-0.0771057457,0.0688982233,-0.1258768588,0.0448692627,-0.0856495053,-0.0323873833,-0.009088628,0.1306585819,-0.1242724136,-0.0436117947,-0.0038559947,0.0483256467,-0.1288546175,-0.1602798104,-0.0227151383,0.0625335351,-0.0548554286,0.024099445,-0.0697005391,-0.0346653238,-0.2148994505,-0.1357453167,0.0094009219,-0.1028455794,0.0021298057,-0.1987075955,0.1481307596,-0.1421150118,-0.0245428123,0.0285064448,-0.089336589,-0.0633548647,0.0223731101,0.0870169923,0.0307227746,0.1118455678,0.0073484131,-0.0954264104,-0.1313616037,0.0352294892,0.027560614,0.0614841282,-0.0466765836,0.0213648602,-0.123421669,0.0199566968,-0.1132388562,0.1899753362,0.0026552093,0.0191105548,-0.1424712986,0.1235091463,0.1664310694,0.0551731512,0.1750264019,0.1019439921,0.1873998642,-0.1027597785,-0.0322087072,-0.0079431431,-0.0939438492,-0.1478579342,0.0609141365,0.0908172727,-0.0178311337,0.0053832005,-0.0091032041,-0.1491570622,0.2266090065,0.0322956778,-0.0762207732]],"hackathon_name":"BrumHack 5.0","index":633,"project_description":"An web app that can enable any internet connected devices to play songs simultaneously amplifying the sound.Send your favorite song to create a link for everyone to join to the party!Get the linkSync the musicSaw the pusher demo and heard it beep. So I thought it should be able to play mp3 sounds, and multiple people should be able to amplify a songIt generates a 'room' after a host uploads a mp3 file.users type in the rooms url e.g. amplifyr.org\/room\/41345 (which is randomly generated)host pushes music after the mp3 files done buffering and everyone listens to the same tunes simultaneously making an array of stereo speakersAWS & nodejs for backend.\nHTML & CSS, Javascript & jquery for front-end\nPusher APILearning Javascript and other things without prior knowledge. Get (or attempt to) Pusher working properly. Working with CSS when it doesn't want to align things properly.Getting music playing on the web, Getting the music player to work and colored blue (REALLY it was in base64 svg and was a mess to convert). Using bash for backend.HTML & CSS, Javascript, Jquery, NodeJS. Things break either fix it or break it moreV2.0 :DBrumHack 5.0Front end stuffFront endTanin Rojanapiansatith\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:28 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Amplifyr.org","project_tags":["javascript","pusher","domain","amazon-web-services","css3","html5","bash"],"project_url":"https:\/\/devpost.com\/software\/amplifyr-org","keywords":"javascript,css,music,things,mp,pusher,getting,host,html,room,jquery,break,backend,amplifyr,nodejs,org,properly,working,able,saw"},{"level_0":634,"hack_vector":[[0.1434247643,-0.0846952796,-0.0225453526,0.0295398012,-0.0208407789,0.1415351331,0.2131628543,-0.0328117423,-0.0119057279,-0.0203017872,0.0249046218,-0.0609573424,0.1175594404,-0.0716090649,0.0631550699,0.0128723169,0.2235915959,0.008162614,0.0454117171,0.1178878322,-0.2278321087,0.0317510329,-0.0455961414,-0.0399089977,0.0807078108,-0.0272934306,-0.0235917047,-0.1891959459,-0.0210435782,-0.0915887356,0.0521448813,-0.1142601147,0.0375515521,-0.0962844789,-0.0200057514,0.0015406251,0.1175380126,-0.1387155652,-0.0634372309,0.0196264628,0.0282355696,-0.1424995363,-0.151273787,-0.0409252569,0.0710143223,-0.0680322722,0.0238050167,-0.0698808953,-0.0375556462,-0.2221834958,-0.1457033455,0.0102716805,-0.1086904258,-0.0208061375,-0.1790408343,0.1522849947,-0.1278897226,-0.0202944148,0.038230177,-0.0966064483,-0.0729176328,0.0138948876,0.0847088248,0.0529347621,0.1146929786,0.0019485911,-0.1077184826,-0.1195585951,0.0395815372,0.0132780671,0.0591615476,-0.0611755699,0.0155009124,-0.1286742836,0.0218754169,-0.1444583535,0.1733506918,0.0100172134,0.0211256966,-0.1466262937,0.1383383572,0.1630807817,0.0567287058,0.1773067862,0.0967481658,0.1941838264,-0.0990706161,-0.0267346166,-0.0150215253,-0.089957051,-0.1596706957,0.0520492233,0.0835237056,-0.0401708707,-0.0089958943,-0.0015079302,-0.1480001807,0.2097213715,0.0096801901,-0.0751510486]],"hackathon_name":"BrumHack 5.0","index":634,"project_description":"An SMS client for the Monzo API with IBM WatsonMonzo is a bank based entirely on a smartphone app. However, we noticed that if your went abroad you may not be able to view notifications for transactions or your balance if you did not have data roaming which can be quite expensive. Luckily SMS is cheap and so this project allows a user to request that transaction information is sent to them via SMS using the Twilio API and Monzo API. We found that this is actually a requested feature on the Monzo forum.: community.monzo.com\/t\/abroad-sms-notifications\/4854The AWS server runs the code to authenticate users with Monzo's OAuth as well as handling webhooks from Monzo and Twilio. At this time it is not possible to authenticate other users due to Monzo limitations. Users will get transaction reports near instantly pushed to them and they can send messages to our bot to ask questions about their account such as their balance and daily spend.We aim to integrate IBM Watson further into the project to allow natural conversations with the system.BrumHack 5.0I worked on the Twilio APIHugh Wells\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 05:56 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MonzoSMS","project_tags":["php","ibm-watson","twilio"],"project_url":"https:\/\/devpost.com\/software\/monzosms","keywords":"monzo,users,sms,abroad,project,twilio,api,transaction,notifications,balance,authenticate,went,expensive,data,due,entirely,forum,feature,conversations,found"},{"level_0":635,"hack_vector":[[0.1652956456,-0.1138700172,-0.0206672587,0.0609686039,0.0016936746,0.1499349922,0.2069963962,-0.0586505085,-0.0458479971,0.0015831088,0.0167443864,-0.0646872893,0.1550415754,-0.0694868043,0.0472443588,-0.021766074,0.1989601105,-0.0255357642,0.0587572083,0.119100675,-0.2325534075,0.0480409935,-0.0366167463,0.0160948448,0.1573131382,-0.0349570289,-0.0337881595,-0.1909953058,-0.0423195697,-0.078286767,0.1041155085,-0.1288677752,0.0463104844,-0.0726429299,-0.0242011398,-0.0331059322,0.115146935,-0.1249323413,-0.0407003984,-0.0201146938,0.0869382098,-0.1488076597,-0.1515316814,-0.0279608332,0.0475264676,-0.0134147853,-0.0006836335,-0.0792315677,-0.0286773834,-0.2055806816,-0.1248045489,0.0295978207,-0.1116223186,0.0397686996,-0.2136560977,0.1465084553,-0.1583219618,-0.0185710099,0.0147996163,-0.087745063,-0.0612191781,0.0226621237,0.0676348209,0.0128486706,0.1150675789,0.0220450629,-0.1014643088,-0.1190677285,0.0198795795,0.0345491022,0.0656440407,-0.0356423557,0.0330038331,-0.1223353744,0.0237302147,-0.0975183845,0.1800609976,-0.0026213164,0.0138413468,-0.1204176098,0.1092346385,0.1335840821,0.0495197028,0.1625279039,0.1194538176,0.2084777206,-0.0850039646,-0.0351969786,-0.014381906,-0.0698166639,-0.1209831685,0.0720901564,0.0873712078,-0.0330547281,-0.0126976017,-0.0000318763,-0.1400960684,0.2209468782,0.0199508946,-0.0501527712]],"hackathon_name":"BrumHack 5.0","index":635,"project_description":"Aesthetically stunning virtual reality 80s style skateboarding game.Skater Wave title screenno-skatingadam_head_modelIn_Game_lowresInterest in the game's aesthetic, and an opportunity to use cutting edge technology usually outside our range of acquisition.Virtual Reality 80s style skateboarding game.Built from the ground up using Unity, with development kits from Leap Motion and Oculus Rift, alongside gyroscopic user input through a custom made rigged skateboard. Also a live web accompaniment.Most of the team's unfamiliarity with Unity. No sleep.Creating a game that's fun, which not only entertains us, but incites excitement and interest in those around us.Wider unity skills. The complexities of peripheral interfaces. Problem solving can be undertaken during extreme tiredness.Sleep?BrumHack 5.0Worked with Unity and Leap Motion. Created the main menu interface and helped code the game in C#. Also worked on graphic design in Photoshop, designing the title screen as well as the in-game signs & skybox assets all from scratch.I put the roll detection system on the skate board using Arduino and XBee\/ZigBee wireless to report back the the PC. Built the Pusher web score board system.i made all the models and helped code the game.I did a lot of work with Unity, Oculus, and Leap Motion.  My PC was used as the central workspace to assemble and test our project, so I managed to have a little bit of a go with most things.Charlie Postgate\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:40 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Skater Wave","project_tags":["c#","unity","arduino","c","php","mysql","sass","css","javascript","pusher","amazon-web-services","oculus-gear-vr","leap-motion"],"project_url":"https:\/\/devpost.com\/software\/skater-wave","keywords":"unity,game,interest,built,us,sleep,interfaces,inspiration,kits,entertains,leap,input,incites,gyroscopic,ground,learned,fun,extreme,excitement,wider"},{"level_0":636,"hack_vector":[[0.1473647356,-0.0994537324,-0.045775231,0.0383309573,-0.0131881805,0.1309432238,0.2032792121,-0.029018674,-0.0120507795,-0.0179836806,0.0137511855,-0.0749618486,0.1453563124,-0.0804289728,0.0664970875,-0.0093513355,0.1973831505,-0.0213747881,0.0437926389,0.1281527132,-0.2416916341,0.0370360166,-0.0339317806,-0.0025816681,0.1097956747,-0.0317991748,-0.0210823081,-0.1659746319,-0.0321094953,-0.0796647593,0.0649855062,-0.1261441857,0.0338780172,-0.0828577727,-0.0231568143,-0.0206588563,0.1171857044,-0.1463946402,-0.0666361079,-0.017081039,0.0531304404,-0.1254008561,-0.146056667,-0.0266838968,0.0819614455,-0.0446199812,0.0189004838,-0.0899691209,-0.0319811255,-0.2108927816,-0.167042762,0.014966975,-0.1099070683,0.0115757082,-0.2120978981,0.1543752253,-0.1227195188,-0.0386011563,0.0342954472,-0.1129543036,-0.0802849829,0.0218440909,0.0810955092,0.0368827544,0.1064897105,0.023041945,-0.0886233747,-0.1084878817,0.028570747,0.025458971,0.0655747205,-0.0458388999,0.0215986278,-0.1237094179,0.0354444385,-0.1170171127,0.1767424345,-0.0012645139,-0.011707142,-0.1327309012,0.117552571,0.1649098694,0.0509786904,0.167915687,0.0864106119,0.1969279796,-0.0805193931,-0.0422255434,-0.0171555132,-0.0763817877,-0.1508978754,0.0550891571,0.095130831,-0.0330259129,-0.0040086876,0.0091550238,-0.1591462195,0.2363725752,0.0080354502,-0.0650003329]],"hackathon_name":"BrumHack 5.0","index":636,"project_description":"Share music live over the internetShareLive was inspired by an article published in the \"Frontiers in Psychology\" journal by researchers at the University of Oxford about how sharing the experience of listening to music can increase social bonding.ShareLive allows users to share music live (there's up to 5 seconds of latency) with friends over the internet.Most of the code is written in JavaScript. There's a very simple (18 lines of code) back end written in PHP. The front end is stylised using bootstrap.YouTube doesn't allow all videos to be embedded, due to the various different licensing arrangements they have - so I had to make sure my web app took this into account and didn't offer users videos which were unplayable. I designed a bespoke events protocol using pusher to synchronise clients \"peer to peer\" - all the back end does is authorise connections (all connections are automatically authorised, however pusher requires connections to be authorised using a back end before they can broadcast data).Unfortunately my web app doesn't yet work on mobile due to issues with automatically playing \/ pausing videos (see the YouTube documentation for more information). I hope that this issue can be overcome in the near future.It all works fairly smoothly. The user interface is quite friendly, and is looks reasonably nice. This was my first \"major\" (4+ hours of coding time) project using JavaScript - it's a good way to write cross-platform applications.I learned how to write a substantial application using JavaScript, and how to use Pusher without having a central backend to keep track of state. I think this is really useful - by using client-side programming and peer-to-peer communication costs are kept to a minimum and applications are generally scalable by nature.There are a few items on the to do list. I'd really like to integrate with Spotify instead of YouTube, as Spotify offers greater music choice and higher sound quality. Access to their APIs is by application \/ invitation only, so hopefully this proof-of-concept can show that this is a good idea.BrumHack 5.0I did it all...Benjamin Howe\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:06 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ShareLive","project_tags":["javascript","php","html5","css3","pusher","bootstrap"],"project_url":"https:\/\/devpost.com\/software\/sharelive","keywords":"using,peer,end,youtube,music,pusher,connections,sharelive,back,javascript,videos,authorised,code,written,good,spotify,really,write,automatically,due"},{"level_0":637,"hack_vector":[[0.1552670896,-0.1229553223,0.0027731145,0.0803370923,-0.0317047574,0.1714733839,0.1921708584,-0.0678157881,-0.0426282026,-0.0168697666,0.0116322003,-0.0197430905,0.1373513043,-0.0804854482,0.0217612516,0.054371953,0.2509945631,0.018683007,0.0535094738,0.0958427936,-0.1954246163,0.0408200882,-0.0515202247,-0.0484089479,0.1510128081,-0.0295069702,-0.0588083267,-0.2062832862,-0.0080116689,-0.0684955344,0.058656998,-0.108167991,0.0786051676,-0.0657054409,-0.0422401503,0.0107170176,0.1491630226,-0.1097001657,-0.0037110189,0.0616706759,0.0579618067,-0.1576399654,-0.1928267777,-0.0268998127,-0.0042847223,-0.0346858725,0.0367314368,-0.0352904648,-0.0238827877,-0.215895161,-0.070815891,0.0385024063,-0.106950447,-0.0211921223,-0.14069736,0.1439808756,-0.1575942338,0.0482435301,0.0002700864,-0.0090471404,-0.0398750454,0.0189591479,0.0664359406,0.0615950897,0.1353235394,-0.0272908993,-0.1129432619,-0.1591015756,0.0248754919,0.0085313553,0.0719623491,-0.0439275764,0.0027190226,-0.1453706771,-0.0279052313,-0.0814355537,0.1930053085,0.01488169,0.0762913004,-0.1371256411,0.1283241808,0.1543528587,0.0389600284,0.1596634388,0.141857028,0.1695389152,-0.1308401376,0.0143469349,0.0030538186,-0.1148033813,-0.1177689359,0.084344238,0.0451252535,-0.0123255849,0.042104505,-0.0648961365,-0.0849637985,0.1711410433,0.077607207,-0.0572280884]],"hackathon_name":"BrumHack 5.0","index":637,"project_description":"Blink controlled Flappy BrainBrumHack 5.0 - Brainy BirdThe overall plan for the project is as follows:TomBClarke (Tom Clarke), thekyle28 (Kyle Allen-Taylor), rrama () and VladToncu (Vladi Boy).BrumHack 5.0I worked on integrating Twilio with the app. I focussed on setting up the API with our phones and responding to messages when the users send a message to the server.Ben Durrans\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:13 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"BrainyBird","project_tags":["java","php","amazon-web-services","twilio","mysql","android","muse"],"project_url":"https:\/\/devpost.com\/software\/brumhack5","keywords":"name,bird,brow,brumhack,movement,eye,webserver,edition,leader,kyle,headband,friend,follows,flappy,content,difference,detect,clarke,brainy,boy"},{"level_0":638,"hack_vector":[[0.1565256417,-0.1002600938,-0.0344064943,0.0679451749,-0.026800165,0.1616468877,0.1909994185,-0.0460714959,-0.0138884261,-0.0307225771,-0.004742993,-0.0503475145,0.1402681321,-0.0730600879,0.0500230342,-0.0009963211,0.227868855,0.0089802546,0.0383674577,0.1154694632,-0.227090925,0.0199668519,-0.0408303216,-0.0139304753,0.1362814456,-0.0195112862,-0.0343681984,-0.1759236306,-0.0351869576,-0.0725306496,0.0614763275,-0.1287658066,0.0476698056,-0.0683666617,-0.0477879271,-0.0105169639,0.1380478591,-0.1308166236,-0.0410150103,0.0314779803,0.0625549629,-0.1260324419,-0.1596052647,-0.0219461564,0.048423361,-0.0581893958,0.0211976357,-0.0606483854,-0.0447547659,-0.2285786569,-0.1239125058,0.0133428993,-0.0953912437,-0.0031244117,-0.1691602021,0.1457829922,-0.1343457848,-0.0107171023,0.0067233834,-0.0639759004,-0.0659128055,0.0104249483,0.0740472972,0.0178024489,0.1301441491,-0.008719543,-0.0988130644,-0.1302143782,0.0305221565,0.0310698859,0.0660427809,-0.047751613,0.0099056233,-0.1357731819,-0.0010964547,-0.0962037444,0.1993148178,0.0180178788,0.0187000558,-0.1423384845,0.1244531795,0.1623269618,0.0422956273,0.1757290512,0.1049726978,0.1974235475,-0.108165279,-0.0079376744,-0.0095004663,-0.0968324691,-0.1439993382,0.0690003261,0.0801266208,-0.0183308944,0.0126102185,-0.0178147014,-0.1211964488,0.2433856577,0.0392000936,-0.0681616217]],"hackathon_name":"BrumHack 5.0","index":638,"project_description":"Alexa will generate and tell you a bedtime storywebsiteI came to the hack with very little sleep, on the way here I joked with my friends about making a bedtime story generator. This then became the inspiration for my hack.Ask Alexa for a bedtime story and it will generate one and read it to you.\nI also made a website version in p5.jsI used AWS to host the backend node.js server, alexa skills to deal with that stuff and tracery, a javascript library to generate the storiesGetting alexa to do anything is a painmaking something cool that workshow AWS works, what node.js is.more story optionsVideo of it in action ; https:\/\/twitter.com\/uveavanto\/status\/792752556778938368BrumHack 5.0allYuvesh Tulsiani\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:04 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Random Bedtime Stories","project_tags":["alexa","amazon-web-services","javascript","node.js"],"project_url":"https:\/\/devpost.com\/software\/random-bedtime-stories","keywords":"story,js,alexa,bedtime,works,hack,stories,node,aws,making,inspiration,generate,host,friends,https,getting,javascript,generator,challenges,deal"},{"level_0":639,"hack_vector":[[0.1455082446,-0.0965685099,-0.0231291447,0.0620319135,-0.0220178254,0.1610161364,0.1965365112,-0.0539911725,-0.0216061138,-0.032763917,0.0161742494,-0.0567194074,0.14036569,-0.0745735392,0.0373687893,0.0084700817,0.2458829433,0.0180371143,0.0398194864,0.1178608313,-0.2196896076,0.0343489014,-0.0488303937,-0.0129402103,0.1312036663,-0.0124283396,-0.040176034,-0.1885085106,-0.0380808376,-0.0908987075,0.0620472059,-0.1332311034,0.0561573245,-0.0812334195,-0.020239735,-0.0267533232,0.1371925473,-0.1238758937,-0.043509908,0.0132775791,0.0589944683,-0.1431605369,-0.1688043326,-0.0357174054,0.0432593301,-0.0537142493,0.0224908609,-0.0504483432,-0.0567421801,-0.2167163938,-0.1058965102,0.0090277074,-0.0909718499,-0.010575382,-0.1721705645,0.145062685,-0.1341527998,-0.016411921,0.0242981911,-0.0720034987,-0.0530983172,0.0107437512,0.0850687474,0.0198999215,0.1165150031,0.0048241522,-0.1144519597,-0.1388324499,0.0377202369,0.041292984,0.0692912042,-0.0509631336,0.0222395062,-0.1314880252,-0.0032148014,-0.112924017,0.1841601729,0.0150663555,0.0387484692,-0.1356997639,0.1203665286,0.1607330292,0.0478711277,0.1751903892,0.1064704135,0.175609529,-0.1226491258,-0.0269724876,-0.0218258239,-0.1026249975,-0.1328616142,0.0677540228,0.070376277,-0.0305385068,0.0141445519,-0.0188373551,-0.1329522878,0.2265748382,0.0368038267,-0.0713031068]],"hackathon_name":"BrumHack 5.0","index":639,"project_description":"A dungeon crawler controlled by Amazon Alexa where you search out enemies to kill themIn this game you explore a dungeon from a top down perspective, you move your Amazon Echo Dot around the screen using voice commands with the objective of searching out evil rubber ducks to smite! The enemies will try to attack you and if you take too much damage or walk into them enough, you will die and lose the game.This is a game where you use Amazon Alexa with and AWS Lambda  to communicate with an AWS server which controllers a character on the front end via Pusher.BrumHack 5.0I worked on the Alexa element, managing user input and handling the states which Alexa had to manage in order to keep the game playing in a fluid manner.I worked of the front endI worked on the backend node serverM Gough\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 01, 2016 08:31 AM EDTThe Github repository is now available publicly on Github so you can give the game a try. Of course there are still bugs and it's not very polished, but the basic mechanics work.https:\/\/github.com\/MGough\/Alexas-DungeonLog in\n      or\n      sign up for Devpost\n      to join the conversation.Joe Shaw\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:19 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Alexa's Dungeon","project_tags":["javascript","amazon-web-services","pusher","node.js"],"project_url":"https:\/\/devpost.com\/software\/alexa-s-dungeon","keywords":"game,dungeon,amazon,aws,alexa,try,top,enemies,end,echo,use,ducks,dot,die,damage,controllers,communicate,commands,character,breakdown"},{"level_0":640,"hack_vector":[[0.1682958752,-0.1041165218,-0.0152125787,0.085359782,-0.0116988216,0.1701869071,0.1980569959,-0.0524928831,-0.0387414545,0.0132837873,0.014655821,-0.0536264405,0.150981769,-0.0881703719,0.0454190634,0.0047223563,0.2261658162,-0.0009880743,0.0593418442,0.0884509161,-0.2177515477,0.0523047522,-0.0517530777,-0.0088644251,0.154710561,-0.0267188139,-0.0538516194,-0.1957439035,-0.0101379231,-0.0548947304,0.0837560967,-0.1253137589,0.0553816371,-0.0904128104,-0.0487774611,0.0079153897,0.1386246979,-0.1233203858,-0.036100179,0.0139389625,0.0561521575,-0.1524719298,-0.1711813509,-0.0061678872,0.0390343368,-0.0055276183,0.0110355914,-0.0668615997,-0.0121472487,-0.1971086413,-0.1083603799,0.0253605675,-0.1167851314,0.021360619,-0.1721841693,0.1343173832,-0.1499799639,0.0121164983,0.0146306846,-0.0540964231,-0.0455843657,0.0270291157,0.1044625267,0.053109441,0.1286628544,-0.0158811789,-0.096130386,-0.1342648715,0.0261912104,0.0293073058,0.0714747161,-0.0311259665,0.0274317134,-0.1386068612,-0.0033403232,-0.1109140888,0.2004633248,0.0087638041,0.0344994254,-0.1357001066,0.1348351091,0.149424538,0.0562492497,0.1596778482,0.1113732979,0.1857496053,-0.1037706584,-0.0094357096,-0.0037629979,-0.1054558232,-0.1294255555,0.068008177,0.074455291,-0.0122069456,0.0506186523,-0.0156283081,-0.1065225825,0.2007970363,0.0560986847,-0.0642219186]],"hackathon_name":"BrumHack 5.0","index":640,"project_description":"A Business Oriented Task and Project Management SystemA creation of a business aimed task and project management system.Web Access URL: bcuhacks.alexanderdavis.techConcept\nBusiness focused task management program on Windows\nUtilizes web application concept)\nUse of a Login system\nPossibility of a file upload area (use of next cloud if implemented?)\nUse of a Database system (MySQL)Possible features\nLive tracking and analytics into tasks\nIntegration with Alexa\nAlexa voice notificationsBrumHack 5.0I worked on templates and design and then moved onto implementing the CSS and some HTML for the web pages.Alexander Davis\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 06:54 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Task Master","project_tags":["php","html","css"],"project_url":"https:\/\/devpost.com\/software\/bcu-hacks","keywords":"system,task,use,web,concept,business,management,alexa,application,area,bcuhacks,analytics,integration,alexanderdavis,cloud,creation,database,features,file,focused"},{"level_0":641,"hack_vector":[[0.1616902798,-0.135373503,-0.0181400236,0.079847157,-0.0299961828,0.1573672593,0.1881421953,-0.0523140691,-0.0172159132,-0.0354427919,0.0186919179,-0.0235741325,0.152610749,-0.060323339,0.0568217225,0.0017072737,0.223029241,0.0071872026,0.0556108356,0.1203374341,-0.2314457446,0.0213110261,-0.0460902192,-0.0251815002,0.133740142,-0.0208891276,-0.0367459059,-0.1816425025,-0.0158818699,-0.0881234854,0.0644718409,-0.114225857,0.0402448177,-0.0729759485,-0.0271476023,-0.0130263837,0.1247620806,-0.1321915537,-0.0542876683,0.0221803207,0.0712727383,-0.1292069256,-0.1532918364,-0.0364122279,0.0144753,-0.0507671386,0.023529321,-0.0539330728,-0.0447219349,-0.2142514139,-0.1202634797,0.0228313487,-0.1136973202,-0.0180152431,-0.1613864899,0.1559494287,-0.1342922598,-0.002117312,0.0116754891,-0.0484522767,-0.0568563715,0.033979211,0.0667865723,0.0441233367,0.1157688349,0.0004001899,-0.1286790073,-0.1386472881,0.0038922606,0.0128451046,0.0524328053,-0.0304059386,0.0165081266,-0.1399227977,-0.0248009171,-0.0910795555,0.2086050659,0.0139484983,0.0220507141,-0.1531852782,0.1139278039,0.165710941,0.0253079906,0.1550571173,0.1291328967,0.2059749514,-0.1041114852,0.0019591106,-0.0128593789,-0.0843276903,-0.1207482368,0.0932115093,0.0793575719,-0.0073586563,0.0295403097,-0.0444901921,-0.1210515723,0.2285415977,0.0337226689,-0.0554189272]],"hackathon_name":"BrumHack 5.0","index":641,"project_description":"Safe Shader Scripting?Inspired by something I saw on reddit over summer, I wanted to faff around with opengl shaders but in a way that didn't involve writing opengl shaders.A language that compiles (hopefully safely) to opengl shaders, and a live editing application that renders graphics as you edit scripts.Don't do macos programming in rustMore language niceness, loading of pictures to use with images, more?BrumHack 5.0Literally all of itSamuel Sleight\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:10 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"shady","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/shady","keywords":"opengl,shaders,language,writing,images,live,learned,involve,inspired,inspiration,hopefully,macos,graphics,faff,editing,edit,compiles,around,loading,next"},{"level_0":642,"hack_vector":[[0.1541858613,-0.0952782854,-0.0350934789,0.0319437161,-0.0122275893,0.1373063922,0.2212660313,-0.028216552,-0.0232191179,-0.0012987178,-0.0022656564,-0.0712882727,0.1305268258,-0.0683457479,0.065134488,0.0074257804,0.1956842542,-0.0028694766,0.0320325345,0.1259394735,-0.2371637821,0.0385278016,-0.0441886596,-0.0179311596,0.1252937466,-0.0209436193,-0.0272946376,-0.176390022,-0.0287307166,-0.0775119439,0.0630907193,-0.1270559728,0.0415507182,-0.0914386213,-0.0365246795,-0.0116156582,0.1197788343,-0.1398789436,-0.0616437197,-0.0008326712,0.0392363034,-0.1443303972,-0.1394036412,-0.0324340872,0.0677164495,-0.0567544661,0.0117393536,-0.0779695436,-0.0285894889,-0.2068355829,-0.1399200708,0.0081127528,-0.1155539379,0.0186948217,-0.1725870818,0.1624970287,-0.1454787254,-0.0154579012,0.0185325015,-0.094915159,-0.0781547427,0.0232708957,0.0754328966,0.0412994102,0.1170509532,0.0019855332,-0.1119129062,-0.1198645383,0.035545323,0.0248323493,0.0645023063,-0.0542523116,0.0164757296,-0.1278609484,0.02864388,-0.1263516843,0.175268814,0.0008738366,0.012369263,-0.1396722496,0.1272401363,0.1551530659,0.0734362751,0.1587628722,0.1006272435,0.1994728893,-0.0909078196,-0.0197938979,0.0066861403,-0.0824331343,-0.1586179733,0.0588950701,0.0959498435,-0.0405268259,-0.0010244865,0.0037368715,-0.1539140344,0.2304232419,0.012130673,-0.0648884922]],"hackathon_name":"BrumHack 5.0","index":642,"project_description":"Let the computers see for us.Deep learning is pretty cool, the fact we can take images and identify objects in them could be incredibly useful to the visually impaired.There are several core microservices behind see.Language is the microservice for taking in sentences, tokenizing them and offering several different services.Language is hosted using Amazon AWS EC2.Tagging is a microservice that is always connected to the client. Using Socket.IO and base64 encoded image streams I am able to have a realtime tagging service using the Clarifai API.Tagging is also hosted using Amazon AWS EC2, it also statically serves it's images using Caddy TLS at images.aran.site (which are named using UUID generation). This also using HTTPS.I had originally spent a lot of time using the Microsoft cognitive service computer vision API. However, I found a flaw in the API regarding it's Image URL parameter.The basic functionality is all there, you can ask if something is in the room, or get a description of the top 5 tags relating to the room. In the future I would love to explore the natural language processing aspect further, potentially generating full sentences describing the room and being able to infer the meaning of more advanced inputs.BrumHack 5.0Everything :')Aran Long\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 06:53 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"See","project_tags":["jquery","javascript","python","flask","node.js","express.js","socket.io","amazon-web-services","clarifai","amazon-ec2"],"project_url":"https:\/\/devpost.com\/software\/see-81a6u7","keywords":"using,language,tagging,images,room,api,also,words,hosted,microservice,microservices,nouns,ec,image,service,several,similarity,able,aws,tags"},{"level_0":643,"hack_vector":[[0.1263713092,-0.0836023912,-0.0281784832,0.0381113552,-0.0166451745,0.1397516876,0.1962321252,-0.0351116285,-0.0164755341,-0.0209968649,0.0106821666,-0.0802853629,0.1449194998,-0.0824711174,0.0451905355,0.0104513504,0.2205746025,-0.0118321124,0.0416140184,0.1319495589,-0.2307529598,0.040343035,-0.0463231578,-0.0030627477,0.1293336302,-0.0253029931,-0.0350856371,-0.17236875,-0.035884209,-0.0908446237,0.0602544062,-0.1256315261,0.0461392477,-0.0763977319,-0.0239461921,-0.0179409832,0.1303753108,-0.1301726401,-0.0434072241,-0.0030455645,0.0471862182,-0.1320842206,-0.1602430493,-0.0349769183,0.0646691918,-0.0588596351,0.0155926831,-0.0678238422,-0.028140774,-0.2134560645,-0.1452443451,0.0185318645,-0.1052385941,0.0147876898,-0.2057053894,0.1496615559,-0.1413232833,-0.0296716634,0.0287420712,-0.1050223857,-0.069563508,0.0149299391,0.0834848508,0.0362207107,0.1078061834,0.0208186973,-0.0884389058,-0.1364404261,0.0379190035,0.032796938,0.0658408478,-0.0579158068,0.0207608119,-0.1092379615,0.0388910025,-0.1079133898,0.1744471788,0.0001340365,0.0086981673,-0.1371315867,0.1179733053,0.1603536904,0.0603382774,0.1708012074,0.1005745307,0.1864478737,-0.1004282087,-0.0497747846,-0.0179136936,-0.0839680135,-0.1446834952,0.0466872342,0.0934520736,-0.033359427,-0.0051505193,-0.0014747218,-0.161802128,0.2344038785,0.0260065682,-0.0812379047]],"hackathon_name":"BrumHack 5.0","index":643,"project_description":"Quest-like game around campus, in which you interact with beaconsGames and apps that require you to be active and social have been extremely popular recently. Our app capitalizes on this trend by incentivizing students to go around campus finding beacons, completing their challenges and earning points towards the leaderboard.When you get into the range of the beacon, you get a notification that there is one nearby. By finding it and interacting with it, you get a quest assigned, that might be a question, a task to go somewhere or do something, etc. By completing the quest properly or giving the right answer, you complete the quest and you receive points for this. You can only get one quest a day from every particular beacon.The back-end was constructed using the django framework for Python. It is hosted on c9.io, which provides an excellent platform for your locally-built server.\nThe native android app was built in Java 8.Constructing the database properly was the biggest struggle during the weekend. After managing to link up everything properly and getting it to work in django, in the end the problem of hosting the server in Heroku popped up. The SQLite database that we had created was unable to run on Heroku, which automatically converted it to PostgreSQL. With limited time and options, c9.io proved to be a great tool for easily hosting your server on the net.Successfully hosting the server in an online environment with properly working End-Points for the client to useThe database is the bread and butter of the back-end, but even if you have the perfect server, it all depends on the front-end in the end.Finishing up the prototype; implementing the leaderboards; creating more and various challenges; working with students and staff on campus in order to provide the best user experience and content for the beacons.BeaconQuest 2 in 2018BrumHack 5.0Danail Penev\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:59 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Beacon Quest","project_tags":["django","python","java","android"],"project_url":"https:\/\/devpost.com\/software\/beacon-quest","keywords":"end,quest,server,get,properly,points,hosting,database,challenges,beacon,built,django,one,completing,finding,working,campus,heroku,students,io"},{"level_0":644,"hack_vector":[[0.1544829458,-0.1139073372,0.0006530347,0.0805540606,-0.0381851755,0.1791379899,0.1971669793,-0.0679521337,-0.0323228203,-0.0120898616,0.0069775945,0.0032859517,0.1209161952,-0.084235549,0.0177185908,0.0609808676,0.2617287636,0.0362228565,0.0516582504,0.0922010317,-0.19795385,0.0199239869,-0.0579448231,-0.0588616617,0.1545455903,-0.014652675,-0.0645229667,-0.2068620026,0.0074818595,-0.06323722,0.0419948883,-0.1098007187,0.0743613094,-0.0772780627,-0.0501062237,0.0224628728,0.1454805136,-0.1018601432,-0.003918156,0.0836872086,0.0461771488,-0.1560676694,-0.1867357045,-0.0329389349,-0.0149337435,-0.0499713048,0.0349584445,-0.0154063012,-0.0306253303,-0.2065170854,-0.0456073396,0.0312507413,-0.1078540161,-0.0341976918,-0.1023396179,0.1485396177,-0.1580184251,0.0653831512,-0.0170191694,0.0179998782,-0.0265348144,0.0225707218,0.0688060224,0.070998162,0.1448569596,-0.0464202911,-0.1316179186,-0.1620444655,0.029628206,0.0081648733,0.0601135045,-0.0369349308,0.003024623,-0.1502496302,-0.0446013361,-0.0806858316,0.1968486309,0.0228721648,0.0885737613,-0.1449831724,0.1324925423,0.1532747,0.0450825877,0.1488826871,0.1378327906,0.1707759053,-0.1281681508,0.0404079258,0.0143921468,-0.1073438227,-0.1103454977,0.0864298344,0.0381233916,-0.0008445964,0.0622477494,-0.0685378984,-0.0668949559,0.1548740566,0.0871987566,-0.0546252988]],"hackathon_name":"BrumHack 5.0","index":644,"project_description":"SMS text messaging service for warning you about TFL disruptions.SMS text messaging service for live updates on London Underground\/TFL disruptions.BrumHack 5.0Contributed to backend development, working in Python with the Twilio API.Jordan Lees\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:55 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"TFL Disrupt","project_tags":["python","twilio","api.ai","json"],"project_url":"https:\/\/devpost.com\/software\/tfl-disrupt-1","keywords":"tfl,updates,underground,text,sms,service,messaging,london,live,disruptions,disrupt"},{"level_0":645,"hack_vector":[[0.1550283134,-0.087692678,-0.0172801036,0.0446830951,-0.0057471879,0.1489713192,0.2093286216,-0.0497981347,-0.0376195982,0.0168588683,0.0308583528,-0.0839706883,0.1439280361,-0.0881388113,0.0665077716,0.0182997473,0.212652117,-0.0144182537,0.0481140763,0.1026389301,-0.2183438987,0.050405819,-0.0677186772,-0.0161406361,0.1167639196,-0.0376318954,-0.0311188288,-0.2062423974,-0.0365405157,-0.0582428873,0.0877736211,-0.1176883876,0.0504310578,-0.1097731516,-0.0458177701,0.0086844759,0.119886227,-0.1245458424,-0.0442694277,-0.0032857794,0.0367888361,-0.1353497803,-0.1721709818,-0.0025234404,0.0626173094,-0.0327638909,0.014700369,-0.0811504051,-0.0195419956,-0.2151922882,-0.1313546896,0.0127303256,-0.1106467322,0.0250023548,-0.1827461421,0.1440110505,-0.1519642025,0.0036710703,0.0130804656,-0.0896818042,-0.0583938584,0.0252624676,0.0973195061,0.0606125295,0.1268147975,-0.0084682303,-0.091219455,-0.1196501404,0.0297856871,0.0121279377,0.0672596246,-0.044221282,0.0200330988,-0.1294905841,0.0252056159,-0.1150457859,0.1958361268,-0.0004807097,0.0244994089,-0.1292244345,0.14356336,0.1486529112,0.0790005326,0.1531665325,0.0982038975,0.1921881139,-0.0873496458,-0.0339384601,-0.0008923628,-0.0900605544,-0.1514263898,0.0522619672,0.0871253684,-0.0335593335,0.0041624908,-0.0024764608,-0.1249266788,0.2033956796,0.0314631127,-0.0756697357]],"hackathon_name":"BrumHack 5.0","index":645,"project_description":"Reviving the power of communicating through SMS.Google Assistant and being able to use commands and access information without the internet.Send commands to a number and get informationPython, Flask, Twilio and a bunch of APIs that are used to obtain informationTrying to integrate multiple APIs with the web calls in flask and filter valid information for end-usersBeing able to get an Alpha build that can complete basic functions and the application is modular which means it's easily extendableUsing Twilio, Flask and python in conjunction with eachotherImprove functionality and more commands, possible integration of AI, ML and Databaseshttps:\/\/github.com\/Jasien-Elimy\/BrumHack5BrumHack 5.0I worked on the back-end integration of Twilio, Flask and other Python frameworks as well as work with Google Map Services to implement locations.I solely created two functions of this application. One being the \"compute\" command and the other is the \"weather\" command. Also helped with cleaning up the code.I worked on the define, search and currency functions.Ihtasham\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:57 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SMSTerminal","project_tags":["python","google-maps","twilio","wolfram-technologies","forecast.io","flask","json","google"],"project_url":"https:\/\/devpost.com\/software\/smsterminal","keywords":"information,flask,commands,able,twilio,python,get,apis,complete,functionality,access,filter,extendable,accomplishments,end,elimy,easily,eachother,databases,conjunction"},{"level_0":646,"hack_vector":[[0.145497933,-0.1064115092,-0.0151576865,0.0489814617,-0.0232390296,0.1456160992,0.2133359909,-0.0384109281,-0.0139921578,-0.0209889635,0.0175853316,-0.0364351943,0.1362691224,-0.0676376745,0.0466642343,0.0021645257,0.2226969749,-0.0063160914,0.044861801,0.1201748848,-0.2381494492,0.0359073468,-0.0355826095,-0.0162706729,0.127384305,-0.0275883507,-0.0291005187,-0.1804057509,-0.0166399404,-0.0847266763,0.0586588457,-0.1235910654,0.0411442406,-0.0801624954,-0.0237907637,-0.0181636848,0.1301001608,-0.1351404935,-0.0600665696,0.0082370006,0.0398009829,-0.1439304799,-0.1379395872,-0.0499188602,0.0525391325,-0.0502509736,0.0133646112,-0.0600916632,-0.0280885678,-0.2017737329,-0.1267844886,0.0149098104,-0.1219291538,-0.0006003282,-0.1847129315,0.1475683898,-0.1406802386,-0.0172219444,0.0331892036,-0.0864935517,-0.0687217116,0.0189558323,0.0815979987,0.0413445719,0.1131753027,0.00820316,-0.1154507697,-0.1331859529,0.0376827493,0.0331419744,0.0553810857,-0.052361127,0.030055942,-0.1292493939,0.0055366741,-0.1333374232,0.1757163554,0.0051641092,0.0277391523,-0.1449243873,0.1208686605,0.1616238803,0.0393675081,0.1729043722,0.1190260872,0.190706104,-0.1100447103,-0.0207411237,-0.0196271446,-0.0910120234,-0.1521022618,0.0692419633,0.087314561,-0.0302529242,0.013580123,-0.0099215545,-0.14616099,0.218143791,0.0353094824,-0.0606839396]],"hackathon_name":"BrumHack 5.0","index":646,"project_description":"Easy access to local goodsLaravel is a web application framework with expressive, elegant syntax. We believe development must be an enjoyable, creative experience to be truly fulfilling. Laravel attempts to take the pain out of development by easing common tasks used in the majority of web projects, such as authentication, routing, sessions, queueing, and caching.Laravel is accessible, yet powerful, providing powerful tools needed for large, robust applications. A superb inversion of control container, expressive migration system, and tightly integrated unit testing support give you the tools you need to build any application with which you are tasked.Documentation for the framework can be found on the Laravel website.Thank you for considering contributing to the Laravel framework! The contribution guide can be found in the Laravel documentation.If you discover a security vulnerability within Laravel, please send an e-mail to Taylor Otwell at taylor@laravel.com. All security vulnerabilities will be promptly addressed.The Laravel framework is open-sourced software licensed under the MIT licenseBrumHack 5.0Aaquib Naved\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:56 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Dots","project_tags":["php","html","javascript","css"],"project_url":"https:\/\/devpost.com\/software\/dots-api","keywords":"laravel,framework,security,documentation,tools,expressive,found,contributing,powerful,development,license,vulnerabilities,application,web,taylor,inversion,integrated,guide,easing,give"},{"level_0":647,"hack_vector":[[0.1740684956,-0.1445884705,-0.0088952193,0.081844829,-0.0436568893,0.1465051919,0.175947085,-0.0436868258,-0.0202405173,-0.0242333263,-0.0117978221,-0.0012705638,0.1451178044,-0.0754095763,0.0273545757,0.040703509,0.2265256643,0.0212615542,0.0514253303,0.1099290997,-0.2249479443,0.0060695233,-0.0402936265,-0.0383265913,0.1565288305,-0.0209097359,-0.052626349,-0.1739181876,0.0059325462,-0.0924294814,0.0280560926,-0.1040762365,0.0591316335,-0.0617353842,-0.0290822331,-0.0127214137,0.1350277811,-0.140275836,-0.0420946032,0.0578207262,0.0659027919,-0.1345378757,-0.161028266,-0.0330504812,-0.0085596144,-0.0588997118,0.0312097315,-0.0475155339,-0.0256767496,-0.2054464519,-0.0942203552,0.0309422966,-0.1197608337,-0.0422715209,-0.1465743035,0.1663671136,-0.1374103278,0.026931474,0.0031174847,-0.0023586573,-0.0393076651,0.0251344312,0.0503495932,0.057513535,0.1326459199,-0.0179242063,-0.1347567886,-0.1489739716,0.0102152657,0.0101463096,0.0699285865,-0.0420648046,-0.0143756364,-0.1467544287,-0.0227479264,-0.0836150274,0.2020962387,0.0247196183,0.0426322073,-0.1531383246,0.1167002469,0.1671279967,0.0216819756,0.1517522186,0.1465428323,0.1964418441,-0.1151211113,0.0337388776,0.0038429543,-0.0969608352,-0.1001341715,0.0981708616,0.0668044016,0.0027146179,0.0446499549,-0.0647937208,-0.1145256758,0.2073307335,0.0680975318,-0.0529073253]],"hackathon_name":"BrumHack 5.0","index":647,"project_description":"A super simple and accurate Alexa Simulator, exclusive for UK residents.Often developers run into hardware issues, and usually we overcome them.In some cases though, there's simply no time, nor patience.That's why I made Alexa Simulator UK.Enjoy.BrumHack 5.0Rhys Barrettt\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:55 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Alexa Simulator UK","project_tags":["html","css"],"project_url":"https:\/\/devpost.com\/software\/alexa-simulator-uk","keywords":"usually,often,cases,developers,enjoy,hardware,issues,made,overcome,uk,patience,run,simply,simulator,though,time,alexa"},{"level_0":648,"hack_vector":[[0.1496634781,-0.0976167396,-0.0034019742,0.0623074807,-0.0073875207,0.1625946015,0.1928359419,-0.043497961,-0.0497346409,-0.0059827762,0.0156292096,-0.0805354565,0.1585386544,-0.0901003331,0.0400708765,0.0409511663,0.2331916243,0.003224228,0.0479020663,0.1109010279,-0.2050347477,0.0600412861,-0.0598033033,-0.0201661922,0.1559038758,-0.0401708744,-0.05321455,-0.2093019038,-0.0463944338,-0.0616433844,0.0837829039,-0.1172281057,0.0685027689,-0.0835592672,-0.0413850881,0.0106799761,0.1454650462,-0.1105005518,-0.0098742926,0.0193750821,0.0569514595,-0.157816425,-0.1988968253,-0.0137167145,0.0339237936,-0.0322637111,0.0266557354,-0.0607864186,-0.0229295511,-0.220171541,-0.0940576792,0.0256254505,-0.1040418223,0.0197632238,-0.1733958572,0.152028501,-0.1640091836,0.017346615,0.0158653855,-0.0646959543,-0.0578158647,0.0217187945,0.0741405264,0.0515705496,0.1292371303,-0.0042813024,-0.0918862149,-0.1515391767,0.0300104376,0.0137294643,0.077170223,-0.0482252613,0.0168791208,-0.1238571405,0.011876977,-0.0818058997,0.1902483851,-0.0083007989,0.0549966171,-0.1200576574,0.1208577976,0.1529455632,0.0656745434,0.1439145952,0.1080572456,0.1650392562,-0.1130615771,-0.0272563845,0.002999618,-0.1112449318,-0.1327853203,0.0621584579,0.0483299121,-0.0334826559,0.0131684365,-0.0260922257,-0.1181696057,0.1920599192,0.0605839267,-0.0690633953]],"hackathon_name":"BrumHack 5.0","index":648,"project_description":"Connect4 by texting for large eventsImprove the user interaction capabilities by adding the ability to make a movie by voice. We are thinking of using Alexa to set up the game and make the move.BrumHack 5.0I worked on the backend to set up the twilio text end point and also use Pusher to fire the necessary events.I worked on the front end Javascript functions that handled inputs from pusher to update the charts on the webpage. I also worked on designing the webpage and embedding the charts and the timer into the webpage alongside the timer functionality.Argha Sarkar\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:51 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ChesSMS","project_tags":["pusher","twilio","amazon-web-services","google-compute-engine"],"project_url":"https:\/\/devpost.com\/software\/chessms","keywords":"backend,pusher,game,twilio,column,server,integrate,time,real,disc,several,end,custom,events,front,connect,get,make,latency,javascript"},{"level_0":649,"hack_vector":[[0.147919789,-0.0816915184,-0.0308759306,0.0574028045,-0.0085762339,0.1396955401,0.1925136745,-0.0346110389,-0.0264517218,-0.0200230684,0.0127850976,-0.0918301418,0.1541383564,-0.0765660629,0.0660058856,-0.0166898984,0.1862365901,-0.0227730554,0.055241935,0.1304491311,-0.2306257635,0.0395845138,-0.0545912571,0.0114689544,0.1117441133,-0.0314624012,-0.0355867893,-0.1608144641,-0.0561643764,-0.0756334662,0.0742820278,-0.1062376723,0.0353881679,-0.0795243159,-0.0218022261,-0.0085820733,0.12604478,-0.1340254545,-0.0588924401,-0.0155625008,0.0667415932,-0.1177923605,-0.1522285342,-0.0093481913,0.068060331,-0.0500238203,0.0130913612,-0.099078849,-0.0227790121,-0.2229890078,-0.1623571217,0.031682577,-0.1061159819,0.0390721336,-0.2167831957,0.1461816728,-0.1354427338,-0.0294803865,0.0326406695,-0.1174198389,-0.0748716891,0.0282587316,0.0787609071,0.0311126616,0.1077770069,0.0276668649,-0.0805111155,-0.1129143834,0.0096850432,0.0190619845,0.0582636893,-0.0361271873,0.0145842955,-0.1200047359,0.0472158827,-0.0902788863,0.1948564649,-0.007003888,-0.0120728239,-0.1361421347,0.1046186164,0.1486981958,0.0643972307,0.1431687921,0.0999322832,0.2049387693,-0.0714628994,-0.0621302985,-0.0152223762,-0.0733240172,-0.1471954435,0.0545640811,0.1027459055,-0.0372407287,-0.0107941022,0.0075545949,-0.1605489701,0.2559698224,0.0053608674,-0.0660730377]],"hackathon_name":"BrumHack 5.0","index":649,"project_description":"The app that won't let you get distracted by the internetWanting to experiment with twilio, java and python, we tried to think of a useful combination of these techonologies. So we came up with the idea of a parking finder!The Android app sends an sms through Twilio to a live website, which, in turn, starts crawling information off the internet with Python.Some of us knew some Java, some of us knew a bit of Python and wanted to experiment with it, and some of us knew almost nothing!The biggest challenge was setting up the Twilio functionality, because we were absolutely new to this technology. We almost quit because we couldn't find the latitude and longitude of an address. Also, the Python crawler wasn't able to gather the information that was generated dinamically, so we had to try several websites, think of multiple ideas... Because in the beginning we actually wanted to do some weird food tinder.The fact that we actually have a final working project!!! But also, it is pretty useful and it's quick enough to be used in real life. So the project is live righ now and the world can actually enjoy the free credit we have from Twilio.So we learned to use Android Studio, for instance how to connect Javascript to XML, of course, Twilio, how to actually run a Python script on a webpage and that stickers actually make a pretty neat decoration for a laptop.To extend it in other cities of the world and to create the possibility of sending a message with the number of the parking in order to receive directions.BrumHack 5.0I worked on that backend for days, but I seriously learned a lot of things! Twilio is great, Python is cool and putting everything together worked like magic.I worked as a front-end developer . I  used the Android Studio IDE in order to make the app. It was a challange for me since it was the first time I worked on an android app and since I have never used XML and Java before.I mainly worked on the Twilio connection of the app, but helped with the whole back-end part.I got involved in using both the java back-end of the app, but also the front-end development using xml. Even if I never used Android Studio before, I managed to get myself used to the IDE.Savu Daniel\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:46 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"parKing","project_tags":["android-studio","java","xml","twilio","python","flask"],"project_url":"https:\/\/devpost.com\/software\/parking","keywords":"actually,python,twilio,knew,parking,us,think,learned,world,information,pretty,project,experiment,java,live,useful,almost,android,also,wanted"},{"level_0":650,"hack_vector":[[0.1549866796,-0.1067344919,-0.0321798362,0.0569849424,-0.0161512606,0.1532327384,0.1838433892,-0.0369068198,-0.0122318203,-0.0441289023,0.0076408689,-0.0607707091,0.14203991,-0.0528597608,0.0396875702,-0.0076666521,0.2106821388,0.016843522,0.0460240468,0.1269435883,-0.2380023748,0.0169356652,-0.0341799669,-0.0043099034,0.1303164065,-0.0196867194,-0.0339875482,-0.1740564257,-0.0400645845,-0.108967267,0.0672359914,-0.1307839751,0.0333732478,-0.0612102896,0.004835438,-0.0290652551,0.1185792461,-0.1356007457,-0.0572134145,-0.0037390608,0.0722231567,-0.1389333159,-0.1468323469,-0.0485584177,0.0437644161,-0.0614719726,0.0087352525,-0.0606309213,-0.0498238131,-0.2158689648,-0.1334430277,0.0173479822,-0.0951423123,-0.0136501761,-0.209375307,0.1647820771,-0.126579538,-0.0415542722,0.0411703996,-0.0936636031,-0.0722477213,0.0136469174,0.0585184954,0.0169533361,0.1054868549,0.042205669,-0.1163221449,-0.1350219101,0.0223077312,0.0397580676,0.0728545561,-0.0528431721,0.0319859758,-0.1140688583,0.0203977413,-0.1059494093,0.1684087217,0.0005900254,0.011313309,-0.133569777,0.0906025693,0.1552654654,0.036142081,0.1743710041,0.0988034829,0.2009293288,-0.1001233831,-0.0407094695,-0.0319483951,-0.0697079748,-0.1198802367,0.0721706375,0.0740775988,-0.04716447,-0.0170014892,0.0055868169,-0.1595120281,0.2549878955,0.0069831111,-0.072094664]],"hackathon_name":"BrumHack 5.0","index":650,"project_description":"A short game on attending a hackathonWe began by pondering what exactly happens at a hackathon? Do you really just hack? Do you socialise or even play a few games here and there?Our goal was to make a somewhat RPG based around gaining points depending on how you spent your time. Unfortunately we didn't manage to implement that into the game... yet. Instead you can currently explore the world, on your own, around the University of Birmingham Learning Centre.We implemented the game through Java and we also used GradleNot enough time!!!This is our first attempt at a somewhat game.At hacks, aim small, build up after.We need stat points, objects which can block your path, NPC's to interact with, better graphics.\nWe also wanted to incorporate a way where you can insert an image into the game so that it would read the pixels and print out the different image objects.BrumHack 5.0I mainly worked on graphics but at the same time I worked on the mathematical aspectAmir Makanvand\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:42 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HackSim2017","project_tags":["gradle"],"project_url":"https:\/\/devpost.com\/software\/hacksim2017","keywords":"game,image,time,objects,somewhat,points,around,also,games,exactly,explore,happens,first,gaining,hacksim,hacks,gradle,even,graphics,hack"},{"level_0":651,"hack_vector":[[0.1606636047,-0.117260322,-0.0313636512,0.0660290271,-0.0325942487,0.1526373178,0.2087986618,-0.0302795172,-0.0239300374,-0.0208158158,-0.0084457761,-0.034328267,0.1413783282,-0.0784633681,0.0453410931,0.0203171875,0.2096406519,0.0125169288,0.0400804766,0.1247658357,-0.2387447059,0.0066224299,-0.043269705,-0.0291204713,0.1464572847,-0.0179659221,-0.0442271568,-0.1677586138,-0.0149229458,-0.0841483772,0.0428755581,-0.1177182198,0.0389596447,-0.0609925538,-0.0323796347,-0.0074961716,0.130763635,-0.1409929246,-0.0509118177,0.0511761792,0.0679765046,-0.1307819486,-0.1474356055,-0.0233334377,0.039214626,-0.0654834285,0.0290837381,-0.0653266087,-0.0365079232,-0.2164739966,-0.1135064214,0.0224976856,-0.10205663,-0.010204223,-0.1658481061,0.1690823883,-0.1389307082,0.0126960976,-0.0021626453,-0.0539752282,-0.0540323071,0.0288658421,0.0582546182,0.0485510454,0.1478108019,-0.0026769966,-0.1183122694,-0.1382811069,0.0236407146,0.0160054266,0.0610049814,-0.0383198261,-0.0073323268,-0.1411147416,0.0011769383,-0.0885665193,0.1944483072,0.0152324028,0.0197846517,-0.1471042782,0.1248829141,0.170532465,0.0466271937,0.14027749,0.118932277,0.2037697434,-0.1013725474,0.0063186572,-0.0070089856,-0.0858889744,-0.1351779103,0.0814490542,0.0743034706,-0.0161048975,0.0231247731,-0.0231490303,-0.1332556903,0.2334662676,0.0337535851,-0.0437420346]],"hackathon_name":"BrumHack 5.0","index":651,"project_description":"A text based RPG via text messagesWe were thinking about what to do and came up with this idea. It is a text based RPG using twilio's SMS communication. We built it using python. There were several problems through out however the solution is in a semi-working state. We've learned a lot about python and what not to do. If we were to continue with this, we'd implement more scenarios.BrumHack 5.0Simon West\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:38 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Twilio Adventure","project_tags":["python","twilio"],"project_url":"https:\/\/devpost.com\/software\/twilio-adventure","keywords":"python,using,built,came,communication,continue,however,idea,implement,learned,lot,problems,working,rpg,scenarios,semi,several,sms,solution,state"},{"level_0":652,"hack_vector":[[0.140106231,-0.0789752379,-0.0319840685,0.0562309474,-0.020323243,0.1536933631,0.1975328922,-0.0392559431,-0.0144582978,-0.0114757214,0.0322708189,-0.0704960376,0.141948998,-0.065511398,0.0785835981,-0.0075147734,0.2114245445,0.0073798862,0.0428358167,0.1216626391,-0.2255123407,0.0355932303,-0.050808806,-0.0178436041,0.1063594222,-0.0164093692,-0.021247346,-0.1954729706,-0.0376892388,-0.0688697472,0.0759612992,-0.1169932187,0.0369684137,-0.0941322073,-0.0209303964,-0.0032875831,0.116291143,-0.1295465976,-0.0583481863,0.0022108634,0.0422077253,-0.1328665167,-0.1592812985,-0.0249391031,0.0571377352,-0.0486313179,0.0118323592,-0.0724788532,-0.0316917486,-0.2217887342,-0.1445882171,0.0064426363,-0.1002798304,-0.000011325,-0.1883292198,0.156737715,-0.1258828342,-0.0070643444,0.0314506255,-0.1009977758,-0.0625340641,0.0151120545,0.0910633877,0.0453531891,0.1142984107,0.0105198212,-0.0935100019,-0.1223208606,0.0361293256,0.0156846251,0.0560252927,-0.0394724123,0.0179898348,-0.1200730056,0.0189749822,-0.1195998415,0.1916751415,-0.0011138421,0.011071966,-0.1448871493,0.1207356676,0.1647624224,0.0672940761,0.1681979448,0.095607765,0.2020137757,-0.0947494805,-0.0438319556,-0.0107851522,-0.0815319046,-0.1576337367,0.0554914027,0.0998352244,-0.0372601599,0.0043832683,0.001728075,-0.1410800666,0.2325782478,0.0069634905,-0.0806550384]],"hackathon_name":"BrumHack 5.0","index":652,"project_description":"Discover interesting and high-quality videos, not solely based on your browsing history, to improve your knowledge.I love watching YouTube videos but when I get YouTube recommendations they are based on what I have watched in the past. I want to discover new content which is high quality and so it takes me a lot of time and energy to search for these videos. So why not create an app to do just that, with an easy-to-use UI and UX?It curates high quality educational content to improve your knowledge and keep you informed with the opinions of thought leaders.Integrated Google OAuth using GTLR Framework to authenticate POST requests to YouTube Data API for syncing videos with your personal watch later playlist. Used swift and Xcode to develop the UI and perform API requests. Used Koloda Cocoapod to provide a Tinder-style UI for swiping through videos.Poor documentation for using GTLR framework, migrating to Swift 3.Built my first working iOS app solely by myself.How to interact with API's, programmatically creating UI constraints, using Interface Builder, using AlamofireObjectMapper for efficient JSON mapping, StatefulViewController and Reachability.Release onto the iOS App Store!BrumHack 5.0Pranav Kasetti\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:32 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Discovr: Predictive YouTube discovery","project_tags":["uikit","ios","swift"],"project_url":"https:\/\/devpost.com\/software\/discovr-predictive-youtube-discovery","keywords":"youtube,videos,using,ui,api,app,content,ios,high,gtlr,framework,quality,swift,requests,used,built,cocoapod,integrated,google,based"},{"level_0":653,"hack_vector":[[0.1404516101,-0.1022595689,-0.0399903283,0.0603062212,-0.0328616835,0.1420606375,0.1972804666,-0.0252644997,-0.017051382,-0.0385904983,0.0102220178,-0.0545759983,0.1489212066,-0.067691341,0.066712454,0.0059714532,0.2126584202,-0.0007327381,0.0327712446,0.1263899803,-0.2292386442,0.01536946,-0.0407462865,-0.0247087888,0.1109890565,-0.0230602864,-0.0245018844,-0.1772367656,-0.0441013053,-0.073637031,0.0577129498,-0.1115345284,0.0322030373,-0.0716430023,-0.0330761448,-0.0077385004,0.1210468113,-0.1345757544,-0.0568102673,0.0271121543,0.059480641,-0.1152590588,-0.1580611914,-0.0238995291,0.0589820668,-0.0710486919,0.0272426419,-0.0688004866,-0.0399594083,-0.2359967381,-0.1344054192,-0.0026063034,-0.0942117646,-0.0168735012,-0.1829596162,0.16607894,-0.1277875751,-0.0159541443,0.0193582643,-0.0849520043,-0.0761101842,0.0193852279,0.0679641291,0.032370396,0.1256505698,0.0062044603,-0.0990396738,-0.1278992593,0.0359390005,0.0052269194,0.050105162,-0.0434308238,-0.0003053353,-0.1256961226,0.0007287251,-0.1011605039,0.1981745213,0.0047526518,0.009740252,-0.1411655843,0.1199593246,0.1708131135,0.044189252,0.1640620232,0.1048170775,0.2056708485,-0.0903542489,-0.0168811437,-0.0060919165,-0.0910937041,-0.155384481,0.0690423772,0.0890575051,-0.02294394,-0.0035267721,-0.0224260464,-0.145332098,0.2471009046,0.0252568983,-0.0634806231]],"hackathon_name":"BrumHack 5.0","index":653,"project_description":"It's like that shitty drama game you used to play in secondary schoolI wanted to make something really meaningful with Alexa and the Twilio API to help those with mental health disorders... But AWS to me is worse than PHP so I had to give up on my dreams and make this instead. Twilio is bae <3Text the twilio number to join the lobby, take turns to add text to the storyI still have no clue how to get anything useful out of AWS, but Freehostia just got up and running like that. snaps fingers. So I uses Twilio's TwiML to make calls to my PHP scripts to manage the running of the application.AWS... AWS.... AWS....This was done in about 2 hours... and learning to switch to a more viable project is a pretty important thing to do.Sometimes products and services are overhyped, and simply trying to go for a sponsor prize can be detrimental to a hack's success.Would probably need to remake on Node.jsBrumHack 5.0Aaron Tello-Wharton\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:24 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Try and keep it SFW plz <3","project_tags":["twilio","php"],"project_url":"https:\/\/devpost.com\/software\/try-and-keep-it-sfw-plz-3","keywords":"aws,twilio,make,running,php,text,would,instead,hack,health,help,hours,important,inspiration,js,join,go,keep,learned,learning"},{"level_0":654,"hack_vector":[[0.1494823843,-0.1039879248,-0.0210892577,0.0488991588,-0.0053580771,0.1358289719,0.2113495469,-0.0416462123,-0.041667223,-0.0087812543,0.006522689,-0.0598871261,0.1533136815,-0.0793488473,0.0425617881,-0.0106806168,0.2046060264,-0.0156080304,0.0459052697,0.1373166144,-0.2348411828,0.0476579964,-0.0333143361,0.0069017527,0.1612733603,-0.0270256754,-0.0387289375,-0.1763793826,-0.0301099773,-0.0828652307,0.068904236,-0.1388911456,0.0392980091,-0.0641255304,-0.0227168407,-0.0292683952,0.1298497468,-0.1354830414,-0.047016345,-0.0067079482,0.0695770234,-0.1568545848,-0.1525543481,-0.0359915271,0.0540166236,-0.0328059494,0.0059580156,-0.0791365951,-0.0286724474,-0.1993417889,-0.1262730509,0.0266804695,-0.1122492626,0.0351620577,-0.2114134878,0.1611585468,-0.1543999612,-0.018892346,0.0174140576,-0.1015329063,-0.0688414499,0.0195604078,0.0717329681,0.0317228548,0.117675446,0.0252166893,-0.0974108502,-0.1243457794,0.0309087466,0.0342751071,0.0721123591,-0.0509131737,0.0312959217,-0.1128598228,0.0432617143,-0.1032816544,0.1621319354,-0.0082156043,0.0141304769,-0.1202828288,0.117375724,0.1440055221,0.0632596463,0.1593544632,0.1063109487,0.1951600909,-0.1042101309,-0.0460304208,-0.0120114777,-0.0695011839,-0.134878248,0.0563555621,0.0873805508,-0.0344458707,-0.0047884062,0.0008740613,-0.1559900045,0.2173845172,0.018594563,-0.050014127]],"hackathon_name":"BrumHack 5.0","index":654,"project_description":"The epic return of AchimQuest, now with head to head, explosion fueled action.After the success of the original AchimQuest at HackTheMidlands, we were eager to expand the Achim universe. After brainstorming several ideas we eventually settled on a Bomberman-style game featuring our favourite maths lecturer.Much like Bomberman, in the game you control one of several Achims around an arena, dropping bombs (in the shape of Martin Escardo) to destroy enemies and walls. The game is controlled by the players' phones (by accessing a control pad on a server) while the game arena is displayed on the main screen.The main game is built using node.js, and the server-phone communication is handled using socket.io (unfortunately Pusher proved inadequate for our purpose).We initially tried to use Pusher to handle our server-phone communication, however this proved impossible for real-time events that we were aiming for. Another main problem was communicating the location of walls from the server to the main map.We are proud of the ability to use phones as controllers - this is kind of cool.This was the first time George had used JavaScript, so this was a good opportunity to develop his skills.If we were to continue we could develop the multiplayer aspect further.BrumHack 5.0Made the basic single player game upon which the final game was based, created sprites and other game assets, sourced music and effects.Worked on the back-end server setup, serving the different pages and networking with socket.io.Reece Bennett\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:09 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AchimQuest 2.0","project_tags":["node.js","express.js","socket.io","html5","css3","javascript","phaser.js"],"project_url":"https:\/\/devpost.com\/software\/achimquest-2-0","keywords":"game,server,main,walls,using,develop,control,phones,communication,proved,built,pusher,bomberman,phone,several,arena,use,time,aspect,expand"},{"level_0":655,"hack_vector":[[0.125991866,-0.097474955,-0.0370297991,0.0370617062,-0.0303556547,0.140517652,0.1946369708,-0.035244137,-0.0139023252,-0.0179190505,0.019128561,-0.0676690042,0.1435520649,-0.0647262707,0.0638516247,0.018711362,0.234499082,0.0199287459,0.0343080498,0.121232383,-0.2273239493,0.0390975066,-0.0473534092,-0.032697659,0.1094885394,-0.0148188723,-0.0330247097,-0.1942153424,-0.0273748413,-0.0916785672,0.0604694448,-0.1395692527,0.041009061,-0.08469221,-0.0107488092,-0.0153554892,0.1163948849,-0.1319683939,-0.0561333522,0.0052251779,0.0287156422,-0.1500646174,-0.1667089015,-0.0376997404,0.041721601,-0.0694712326,0.0171755925,-0.0578593053,-0.0392896309,-0.2079342157,-0.1319333613,-0.0019335427,-0.0884266719,-0.0228930973,-0.1809536964,0.1595990807,-0.1291204393,-0.0125340642,0.0372448973,-0.0929746181,-0.075045146,0.0229996145,0.0736053884,0.0571304299,0.097050406,0.0176814515,-0.1018920168,-0.1429662108,0.0444017649,0.0217374712,0.0773584768,-0.0643263757,0.0310387369,-0.1168221235,0.0145776086,-0.1285046488,0.1763962358,0.000770745,0.0416643433,-0.1279980987,0.1248370931,0.1610950828,0.0700666979,0.1711244881,0.1001895368,0.1794677079,-0.1212726235,-0.0380048044,-0.011367741,-0.0886920542,-0.1378833503,0.0522262305,0.0867868215,-0.0499597304,0.0122970082,-0.0087628169,-0.1496952027,0.2246508598,0.015371168,-0.0939647928]],"hackathon_name":"BrumHack 5.0","index":655,"project_description":"Lookup pizzas from Pizza Hut and Dominos based on your postcode to find you the best pricesLookup pizzas from Pizza Hut and Dominos based on your postcode to find you the best pricesThe python server scrapes the two websites to obtain data on the pizzas available from your local store, using Python's requests to keep track of the cookies from the websites. A JSON object is returned containing the pizzas, which can be filtered, sorted and searched from the website.Ideally, I would have included deals available too, but Domino's website required me to restart my server after every request to their deals details which made it more complex to do, and Pizza Hut used images to show details, which would have required computer vision to solve this, and after spending over 14 hours on the web scraping, I had little time to do this.BrumHack 5.0Jack Hughes\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:04 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"git-pizza","project_tags":["html","python","javascript","jquery"],"project_url":"https:\/\/devpost.com\/software\/brumhack16","keywords":"pizza,pizzas,would,server,deals,details,hut,websites,python,required,available,website,spending,dominos,included,images,ideally,vision,hours,git"},{"level_0":656,"hack_vector":[[0.1526698172,-0.1166541353,-0.0489395857,0.0407330021,-0.0327379927,0.1469767541,0.1791773885,-0.0248561129,0.0029707949,-0.0451066568,-0.0055619432,-0.0494600125,0.1195703968,-0.0527532734,0.0560915805,0.0205627941,0.2213571072,0.0231641922,0.0366755202,0.1253682822,-0.2506332695,0.0024167586,-0.0218947269,-0.0288927946,0.1001961976,-0.0223859716,-0.0269525815,-0.1625121534,-0.021250017,-0.1051181406,0.0487875976,-0.1253061444,0.0253100824,-0.0705663189,-0.0153591335,-0.0301508363,0.1152761132,-0.1490828991,-0.060339313,0.0228000842,0.0514094122,-0.1286482066,-0.1559798419,-0.0543275811,0.055535879,-0.0834293067,0.0222329479,-0.052053649,-0.0415539145,-0.2282473743,-0.1305985451,0.0038012334,-0.0933604091,-0.0484669171,-0.2006308585,0.1668946743,-0.115662232,-0.0243244264,0.0363007411,-0.0664935187,-0.0764544383,0.0150464997,0.0564590953,0.0320934094,0.1103975177,0.012358183,-0.1136564612,-0.1297453791,0.0409430601,0.0269813649,0.0765480399,-0.0526600406,0.0071145436,-0.123632513,-0.0081871832,-0.1212947965,0.1703082621,0.0185456872,0.0145660546,-0.1423468888,0.1011160165,0.1738727689,0.020780148,0.1910007596,0.106416896,0.2004821897,-0.1039918065,-0.0075377389,-0.0244621448,-0.0820116252,-0.1304320693,0.0717185363,0.0837413445,-0.0408508405,-0.0019135448,-0.0000959503,-0.1416244507,0.2405850142,0.0143413702,-0.071454972]],"hackathon_name":"BrumHack 5.0","index":656,"project_description":"A CLI interface for texting hackers during hackathons with updates specific to themStanding in the food queue at BrumHack and remembering how all food at hackathons is just a mad dash for food, it seemed like there was a more civilised way to do it. What if instead you could send text messages to your hackers letting them know that their food was ready.It is a CLI tool that provides a series of commands for generating YAML about your hackathon and your attendees, send them information about meals and group them for sending personalised messagesUsing nodeJSNone, I'm awesomeIt's my first headless hackHow to be creativeHackathons aren't about trying to create the next startup, whatever is next is next and this what I hate about stupid devpost, it's moronic desire to generate a startup out of every idea. This idea is just a cool simple tool, isn't that enough for you parasites??BrumHack 5.0Adam Green\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:01 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HackaServe","project_tags":["node.js","twilio"],"project_url":"https:\/\/devpost.com\/software\/hackaserve","keywords":"food,next,idea,hackathons,tool,startup,send,messages,yaml,generating,first,generate,group,enough,hack,hackaserve,hackathon,hackers,hate,every"},{"level_0":657,"hack_vector":[[0.1465269476,-0.1449456662,-0.0104367267,0.0546700135,-0.046971608,0.1432067752,0.1808201373,-0.027017124,0.0146805551,-0.0613636449,0.0086927339,-0.0091082053,0.1202754825,-0.0565241612,0.0342433006,0.0578615479,0.250556618,0.0283821728,0.0382137336,0.1182842478,-0.2390419245,0.0061672805,-0.0382242016,-0.0488031283,0.1179552227,-0.0337883979,-0.0398500189,-0.1733247042,-0.0011833027,-0.1106007397,0.0197242964,-0.1023099869,0.0476591438,-0.0643645748,-0.006371309,-0.0192892104,0.1233218014,-0.1432252228,-0.0511030219,0.0456936248,0.0313838832,-0.1382692009,-0.1574335843,-0.0652157962,0.0136413518,-0.0912970454,0.0424148701,-0.027116701,-0.0340234786,-0.2075572163,-0.1001433432,0.0139585948,-0.111134693,-0.0744836032,-0.1625977457,0.1605774909,-0.1178754121,-0.0076526119,0.0456616208,-0.0388124883,-0.0684332624,0.0254542958,0.0531951524,0.051730983,0.1031144559,0.0043716035,-0.1389681995,-0.1598644704,0.0271606352,0.0174920093,0.065977335,-0.0584131368,0.0128269689,-0.1350587606,-0.034250129,-0.1118763909,0.1800361574,0.0130390404,0.0545554124,-0.1507684439,0.1017761827,0.1781186312,-0.0000184184,0.1707111448,0.1289143711,0.1757574826,-0.137459591,0.0188145153,-0.0336403623,-0.1033585072,-0.11313086,0.0920108929,0.0504382253,-0.0225322284,0.0294184759,-0.0448189862,-0.130393967,0.2118099779,0.0577282161,-0.0693914145]],"hackathon_name":"BrumHack 5.0","index":657,"project_description":"Interact with your stock portfolio over the phoneStocksStock detail pageAdd a thresholdYou shouldn't have to contantly check stock prices for interesting changes. You should be actively notified when they do!Choose stocks to follow and a threshold. You will be notified when they fall under it.Loads of the financial APIs sucked (this would probably be different if we payed big money to bloomberg et al.)BrumHack 5.0Jonathan Balls\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 06:38 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Phocks","project_tags":["python","django","javascript","bootstrap","ajax","celery"],"project_url":"https:\/\/devpost.com\/software\/phocks","keywords":"notified,would,financial,al,apis,big,bloomberg,challenges,changes,check,choose,contantly,different,et,fall,follow,threshold,inspiration,interesting,loads"},{"level_0":658,"hack_vector":[[0.172329396,-0.1623933762,-0.0162810795,0.0747766271,-0.0315440781,0.1676855981,0.1922941059,-0.0550437011,-0.0208190233,-0.0238934215,-0.0020357992,0.0094370497,0.128559947,-0.0651108027,0.0259506367,0.039831385,0.2511765361,0.0293620639,0.043289233,0.105286032,-0.2280023545,0.0075159748,-0.0373827666,-0.0326413363,0.1750522405,-0.0195899513,-0.0482369736,-0.1847926974,0.0076634674,-0.0904026851,0.0567991436,-0.1295013279,0.0517554879,-0.0528828874,-0.0307601541,-0.0147730717,0.1267508417,-0.1270358711,-0.0168171767,0.0446431562,0.0629730821,-0.1495749801,-0.1664529294,-0.0481411442,-0.0106293848,-0.0548264384,0.0270308666,-0.0172780491,-0.0332101509,-0.2041532844,-0.0561516136,0.0240239725,-0.1066032127,-0.0489301197,-0.1492851377,0.159449473,-0.1501049846,0.0280114114,-0.005385465,0.0060014529,-0.0326495543,0.0334044285,0.0515298285,0.0447159894,0.1274665892,-0.0190209914,-0.1410583556,-0.1540742815,0.0224542115,0.019667834,0.0707398131,-0.0298976023,0.0237641316,-0.1361068487,-0.0422456749,-0.0873392969,0.1812605411,0.0145305321,0.0651242733,-0.1404738873,0.1093472317,0.1627333611,0.0078531792,0.1757819951,0.136836648,0.1835816354,-0.1348662525,0.0385892168,-0.0181208756,-0.0889157355,-0.084683314,0.1064411476,0.0457526445,-0.002163674,0.0447596498,-0.0466435067,-0.0955914333,0.1864629388,0.0643638745,-0.0520753637]],"hackathon_name":"BrumHack 5.0","index":658,"project_description":"A game about throwing about throwing memes at your friends.MemesEach player chooses a meme and then they commence battle attempting to knock each others trebuchet down.We built it using Unity 3D and C#Animations, UI, lifeEverythingOscar really hates cheeseMore memes!BrumHack 5.0Matty McDonald\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 06:00 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Memebuchet","project_tags":["unity","c#"],"project_url":"https:\/\/devpost.com\/software\/memebuchet","keywords":"built,memes,using,learned,animations,attempting,battle,challenges,cheese,chooses,commence,everything,hates,inspiration,knock,life,unity,meme,memebuchet,next"},{"level_0":659,"hack_vector":[[0.1424122155,-0.0837039128,-0.0233381223,0.0422693342,-0.0224735197,0.1431823969,0.2097873688,-0.0403352194,-0.0329432078,0.0019688038,0.0245021731,-0.0680100471,0.1368843615,-0.0775750801,0.063701883,0.0039875703,0.2221708596,0.000045331,0.0430944003,0.1172949821,-0.2323833853,0.0336006992,-0.0561341271,-0.0189293195,0.0990124643,-0.0139227696,-0.0414307192,-0.1825103909,-0.0124778934,-0.1007791087,0.0678044558,-0.1206622794,0.0333835036,-0.0915230438,-0.0184326526,-0.0100011174,0.1216498166,-0.1359440535,-0.0565831922,0.0009538,0.0433632769,-0.1264304817,-0.1467131525,-0.0233806279,0.0665230528,-0.0498693623,0.0202269126,-0.0798031166,-0.0238077343,-0.2122519761,-0.1364621073,0.0320284888,-0.1033836156,0.0109645966,-0.1871454865,0.158126682,-0.1286603957,-0.0135458028,0.0261709448,-0.1008222476,-0.0526674576,0.0203937944,0.0926347747,0.0593126789,0.1233426183,0.0042649806,-0.0957945585,-0.1163005084,0.0292314161,0.0225200802,0.0626259148,-0.0339035317,0.0181537922,-0.1272081286,0.0321051627,-0.1281604916,0.1789382994,0.0164338537,0.0142465187,-0.1443620473,0.1340082586,0.1587741971,0.0685065091,0.1576440036,0.1099869013,0.2009185553,-0.0960832313,-0.0534187518,-0.0246103909,-0.0817716792,-0.1517069936,0.0499102511,0.1010499224,-0.0336316414,-0.0019677011,0.0181112122,-0.1544464082,0.2191694975,0.0070474576,-0.0782780945]],"hackathon_name":"BrumHack 5.0","index":659,"project_description":"Find the nearest ATM with the best exchange rate with our app!As two members of our team are Europeans, we suffer a lot to find a close ATM with a convenient exchange range.So we thought - why not use google maps, twilio and a simple Android app? The user enters a location, we calculate the most convenient ATMs and twilio sends you a SMS with th locations.We used exchange rates based on a website listing the most common UK banks and their exchange rates. With the google-places API we search for ATMs.Android apps are very complex. We tried to keep it as simple as possible since we only need an insert box and a output tab. How to get data from the app to the node.js program and back?!Android-Studio, Node.js is painfulWe want to link all the components together and include more banks (right now 9).BrumHack 5.0Luana Riebel\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 05:58 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Cash - At The Moment","project_tags":["android-studio","node.js","xml","java","google-places","twilio"],"project_url":"https:\/\/devpost.com\/software\/cash-at-the-moment","keywords":"android,exchange,banks,js,node,google,rates,simple,convenient,atms,app,twilio,back,link,keep,api,insert,include,apps,get"},{"level_0":660,"hack_vector":[[0.1404516101,-0.1022595689,-0.0399903283,0.0603062212,-0.0328616835,0.1420606375,0.1972804666,-0.0252644997,-0.017051382,-0.0385904983,0.0102220178,-0.0545759983,0.1489212066,-0.067691341,0.066712454,0.0059714532,0.2126584202,-0.0007327381,0.0327712446,0.1263899803,-0.2292386442,0.01536946,-0.0407462865,-0.0247087888,0.1109890565,-0.0230602864,-0.0245018844,-0.1772367656,-0.0441013053,-0.073637031,0.0577129498,-0.1115345284,0.0322030373,-0.0716430023,-0.0330761448,-0.0077385004,0.1210468113,-0.1345757544,-0.0568102673,0.0271121543,0.059480641,-0.1152590588,-0.1580611914,-0.0238995291,0.0589820668,-0.0710486919,0.0272426419,-0.0688004866,-0.0399594083,-0.2359967381,-0.1344054192,-0.0026063034,-0.0942117646,-0.0168735012,-0.1829596162,0.16607894,-0.1277875751,-0.0159541443,0.0193582643,-0.0849520043,-0.0761101842,0.0193852279,0.0679641291,0.032370396,0.1256505698,0.0062044603,-0.0990396738,-0.1278992593,0.0359390005,0.0052269194,0.050105162,-0.0434308238,-0.0003053353,-0.1256961226,0.0007287251,-0.1011605039,0.1981745213,0.0047526518,0.009740252,-0.1411655843,0.1199593246,0.1708131135,0.044189252,0.1640620232,0.1048170775,0.2056708485,-0.0903542489,-0.0168811437,-0.0060919165,-0.0910937041,-0.155384481,0.0690423772,0.0890575051,-0.02294394,-0.0035267721,-0.0224260464,-0.145332098,0.2471009046,0.0252568983,-0.0634806231]],"hackathon_name":"BrumHack 5.0","index":660,"project_description":"It's like that shitty drama game you used to play in secondary schoolI wanted to make something really meaningful with Alexa and the Twilio API to help those with mental health disorders... But AWS to me is worse than PHP so I had to give up on my dreams and make this instead. Twilio is bae <3Text the twilio number to join the lobby, take turns to add text to the storyI still have no clue how to get anything useful out of AWS, but Freehostia just got up and running like that. snaps fingers. So I uses Twilio's TwiML to make calls to my PHP scripts to manage the running of the application.AWS... AWS.... AWS....This was done in about 2 hours... and learning to switch to a more viable project is a pretty important thing to do.Sometimes products and services are overhyped, and simply trying to go for a sponsor prize can be detrimental to a hack's success.Would probably need to remake on Node.jsBrumHack 5.0Aaron Tello-Wharton\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:24 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Try and keep it SFW plz <3","project_tags":["twilio","php"],"project_url":"https:\/\/devpost.com\/software\/try-and-keep-it-sfw-plz-3","keywords":"aws,twilio,make,running,php,text,would,instead,hack,health,help,hours,important,inspiration,js,join,go,keep,learned,learning"},{"level_0":661,"hack_vector":[[0.1494823843,-0.1039879248,-0.0210892577,0.0488991588,-0.0053580771,0.1358289719,0.2113495469,-0.0416462123,-0.041667223,-0.0087812543,0.006522689,-0.0598871261,0.1533136815,-0.0793488473,0.0425617881,-0.0106806168,0.2046060264,-0.0156080304,0.0459052697,0.1373166144,-0.2348411828,0.0476579964,-0.0333143361,0.0069017527,0.1612733603,-0.0270256754,-0.0387289375,-0.1763793826,-0.0301099773,-0.0828652307,0.068904236,-0.1388911456,0.0392980091,-0.0641255304,-0.0227168407,-0.0292683952,0.1298497468,-0.1354830414,-0.047016345,-0.0067079482,0.0695770234,-0.1568545848,-0.1525543481,-0.0359915271,0.0540166236,-0.0328059494,0.0059580156,-0.0791365951,-0.0286724474,-0.1993417889,-0.1262730509,0.0266804695,-0.1122492626,0.0351620577,-0.2114134878,0.1611585468,-0.1543999612,-0.018892346,0.0174140576,-0.1015329063,-0.0688414499,0.0195604078,0.0717329681,0.0317228548,0.117675446,0.0252166893,-0.0974108502,-0.1243457794,0.0309087466,0.0342751071,0.0721123591,-0.0509131737,0.0312959217,-0.1128598228,0.0432617143,-0.1032816544,0.1621319354,-0.0082156043,0.0141304769,-0.1202828288,0.117375724,0.1440055221,0.0632596463,0.1593544632,0.1063109487,0.1951600909,-0.1042101309,-0.0460304208,-0.0120114777,-0.0695011839,-0.134878248,0.0563555621,0.0873805508,-0.0344458707,-0.0047884062,0.0008740613,-0.1559900045,0.2173845172,0.018594563,-0.050014127]],"hackathon_name":"BrumHack 5.0","index":661,"project_description":"The epic return of AchimQuest, now with head to head, explosion fueled action.After the success of the original AchimQuest at HackTheMidlands, we were eager to expand the Achim universe. After brainstorming several ideas we eventually settled on a Bomberman-style game featuring our favourite maths lecturer.Much like Bomberman, in the game you control one of several Achims around an arena, dropping bombs (in the shape of Martin Escardo) to destroy enemies and walls. The game is controlled by the players' phones (by accessing a control pad on a server) while the game arena is displayed on the main screen.The main game is built using node.js, and the server-phone communication is handled using socket.io (unfortunately Pusher proved inadequate for our purpose).We initially tried to use Pusher to handle our server-phone communication, however this proved impossible for real-time events that we were aiming for. Another main problem was communicating the location of walls from the server to the main map.We are proud of the ability to use phones as controllers - this is kind of cool.This was the first time George had used JavaScript, so this was a good opportunity to develop his skills.If we were to continue we could develop the multiplayer aspect further.BrumHack 5.0Made the basic single player game upon which the final game was based, created sprites and other game assets, sourced music and effects.Worked on the back-end server setup, serving the different pages and networking with socket.io.Reece Bennett\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:09 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AchimQuest 2.0","project_tags":["node.js","express.js","socket.io","html5","css3","javascript","phaser.js"],"project_url":"https:\/\/devpost.com\/software\/achimquest-2-0","keywords":"game,server,main,walls,using,develop,control,phones,communication,proved,built,pusher,bomberman,phone,several,arena,use,time,aspect,expand"},{"level_0":662,"hack_vector":[[0.125991866,-0.097474955,-0.0370297991,0.0370617062,-0.0303556547,0.140517652,0.1946369708,-0.035244137,-0.0139023252,-0.0179190505,0.019128561,-0.0676690042,0.1435520649,-0.0647262707,0.0638516247,0.018711362,0.234499082,0.0199287459,0.0343080498,0.121232383,-0.2273239493,0.0390975066,-0.0473534092,-0.032697659,0.1094885394,-0.0148188723,-0.0330247097,-0.1942153424,-0.0273748413,-0.0916785672,0.0604694448,-0.1395692527,0.041009061,-0.08469221,-0.0107488092,-0.0153554892,0.1163948849,-0.1319683939,-0.0561333522,0.0052251779,0.0287156422,-0.1500646174,-0.1667089015,-0.0376997404,0.041721601,-0.0694712326,0.0171755925,-0.0578593053,-0.0392896309,-0.2079342157,-0.1319333613,-0.0019335427,-0.0884266719,-0.0228930973,-0.1809536964,0.1595990807,-0.1291204393,-0.0125340642,0.0372448973,-0.0929746181,-0.075045146,0.0229996145,0.0736053884,0.0571304299,0.097050406,0.0176814515,-0.1018920168,-0.1429662108,0.0444017649,0.0217374712,0.0773584768,-0.0643263757,0.0310387369,-0.1168221235,0.0145776086,-0.1285046488,0.1763962358,0.000770745,0.0416643433,-0.1279980987,0.1248370931,0.1610950828,0.0700666979,0.1711244881,0.1001895368,0.1794677079,-0.1212726235,-0.0380048044,-0.011367741,-0.0886920542,-0.1378833503,0.0522262305,0.0867868215,-0.0499597304,0.0122970082,-0.0087628169,-0.1496952027,0.2246508598,0.015371168,-0.0939647928]],"hackathon_name":"BrumHack 5.0","index":662,"project_description":"Lookup pizzas from Pizza Hut and Dominos based on your postcode to find you the best pricesLookup pizzas from Pizza Hut and Dominos based on your postcode to find you the best pricesThe python server scrapes the two websites to obtain data on the pizzas available from your local store, using Python's requests to keep track of the cookies from the websites. A JSON object is returned containing the pizzas, which can be filtered, sorted and searched from the website.Ideally, I would have included deals available too, but Domino's website required me to restart my server after every request to their deals details which made it more complex to do, and Pizza Hut used images to show details, which would have required computer vision to solve this, and after spending over 14 hours on the web scraping, I had little time to do this.BrumHack 5.0Jack Hughes\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:04 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"git-pizza","project_tags":["html","python","javascript","jquery"],"project_url":"https:\/\/devpost.com\/software\/brumhack16","keywords":"pizza,pizzas,would,server,deals,details,hut,websites,python,required,available,website,spending,dominos,included,images,ideally,vision,hours,git"},{"level_0":663,"hack_vector":[[0.1526698172,-0.1166541353,-0.0489395857,0.0407330021,-0.0327379927,0.1469767541,0.1791773885,-0.0248561129,0.0029707949,-0.0451066568,-0.0055619432,-0.0494600125,0.1195703968,-0.0527532734,0.0560915805,0.0205627941,0.2213571072,0.0231641922,0.0366755202,0.1253682822,-0.2506332695,0.0024167586,-0.0218947269,-0.0288927946,0.1001961976,-0.0223859716,-0.0269525815,-0.1625121534,-0.021250017,-0.1051181406,0.0487875976,-0.1253061444,0.0253100824,-0.0705663189,-0.0153591335,-0.0301508363,0.1152761132,-0.1490828991,-0.060339313,0.0228000842,0.0514094122,-0.1286482066,-0.1559798419,-0.0543275811,0.055535879,-0.0834293067,0.0222329479,-0.052053649,-0.0415539145,-0.2282473743,-0.1305985451,0.0038012334,-0.0933604091,-0.0484669171,-0.2006308585,0.1668946743,-0.115662232,-0.0243244264,0.0363007411,-0.0664935187,-0.0764544383,0.0150464997,0.0564590953,0.0320934094,0.1103975177,0.012358183,-0.1136564612,-0.1297453791,0.0409430601,0.0269813649,0.0765480399,-0.0526600406,0.0071145436,-0.123632513,-0.0081871832,-0.1212947965,0.1703082621,0.0185456872,0.0145660546,-0.1423468888,0.1011160165,0.1738727689,0.020780148,0.1910007596,0.106416896,0.2004821897,-0.1039918065,-0.0075377389,-0.0244621448,-0.0820116252,-0.1304320693,0.0717185363,0.0837413445,-0.0408508405,-0.0019135448,-0.0000959503,-0.1416244507,0.2405850142,0.0143413702,-0.071454972]],"hackathon_name":"BrumHack 5.0","index":663,"project_description":"A CLI interface for texting hackers during hackathons with updates specific to themStanding in the food queue at BrumHack and remembering how all food at hackathons is just a mad dash for food, it seemed like there was a more civilised way to do it. What if instead you could send text messages to your hackers letting them know that their food was ready.It is a CLI tool that provides a series of commands for generating YAML about your hackathon and your attendees, send them information about meals and group them for sending personalised messagesUsing nodeJSNone, I'm awesomeIt's my first headless hackHow to be creativeHackathons aren't about trying to create the next startup, whatever is next is next and this what I hate about stupid devpost, it's moronic desire to generate a startup out of every idea. This idea is just a cool simple tool, isn't that enough for you parasites??BrumHack 5.0Adam Green\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 07:01 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HackaServe","project_tags":["node.js","twilio"],"project_url":"https:\/\/devpost.com\/software\/hackaserve","keywords":"food,next,idea,hackathons,tool,startup,send,messages,yaml,generating,first,generate,group,enough,hack,hackaserve,hackathon,hackers,hate,every"},{"level_0":664,"hack_vector":[[0.1465269476,-0.1449456662,-0.0104367267,0.0546700135,-0.046971608,0.1432067752,0.1808201373,-0.027017124,0.0146805551,-0.0613636449,0.0086927339,-0.0091082053,0.1202754825,-0.0565241612,0.0342433006,0.0578615479,0.250556618,0.0283821728,0.0382137336,0.1182842478,-0.2390419245,0.0061672805,-0.0382242016,-0.0488031283,0.1179552227,-0.0337883979,-0.0398500189,-0.1733247042,-0.0011833027,-0.1106007397,0.0197242964,-0.1023099869,0.0476591438,-0.0643645748,-0.006371309,-0.0192892104,0.1233218014,-0.1432252228,-0.0511030219,0.0456936248,0.0313838832,-0.1382692009,-0.1574335843,-0.0652157962,0.0136413518,-0.0912970454,0.0424148701,-0.027116701,-0.0340234786,-0.2075572163,-0.1001433432,0.0139585948,-0.111134693,-0.0744836032,-0.1625977457,0.1605774909,-0.1178754121,-0.0076526119,0.0456616208,-0.0388124883,-0.0684332624,0.0254542958,0.0531951524,0.051730983,0.1031144559,0.0043716035,-0.1389681995,-0.1598644704,0.0271606352,0.0174920093,0.065977335,-0.0584131368,0.0128269689,-0.1350587606,-0.034250129,-0.1118763909,0.1800361574,0.0130390404,0.0545554124,-0.1507684439,0.1017761827,0.1781186312,-0.0000184184,0.1707111448,0.1289143711,0.1757574826,-0.137459591,0.0188145153,-0.0336403623,-0.1033585072,-0.11313086,0.0920108929,0.0504382253,-0.0225322284,0.0294184759,-0.0448189862,-0.130393967,0.2118099779,0.0577282161,-0.0693914145]],"hackathon_name":"BrumHack 5.0","index":664,"project_description":"Interact with your stock portfolio over the phoneStocksStock detail pageAdd a thresholdYou shouldn't have to contantly check stock prices for interesting changes. You should be actively notified when they do!Choose stocks to follow and a threshold. You will be notified when they fall under it.Loads of the financial APIs sucked (this would probably be different if we payed big money to bloomberg et al.)BrumHack 5.0Jonathan Balls\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 06:38 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Phocks","project_tags":["python","django","javascript","bootstrap","ajax","celery"],"project_url":"https:\/\/devpost.com\/software\/phocks","keywords":"notified,would,financial,al,apis,big,bloomberg,challenges,changes,check,choose,contantly,different,et,fall,follow,threshold,inspiration,interesting,loads"},{"level_0":665,"hack_vector":[[0.172329396,-0.1623933762,-0.0162810795,0.0747766271,-0.0315440781,0.1676855981,0.1922941059,-0.0550437011,-0.0208190233,-0.0238934215,-0.0020357992,0.0094370497,0.128559947,-0.0651108027,0.0259506367,0.039831385,0.2511765361,0.0293620639,0.043289233,0.105286032,-0.2280023545,0.0075159748,-0.0373827666,-0.0326413363,0.1750522405,-0.0195899513,-0.0482369736,-0.1847926974,0.0076634674,-0.0904026851,0.0567991436,-0.1295013279,0.0517554879,-0.0528828874,-0.0307601541,-0.0147730717,0.1267508417,-0.1270358711,-0.0168171767,0.0446431562,0.0629730821,-0.1495749801,-0.1664529294,-0.0481411442,-0.0106293848,-0.0548264384,0.0270308666,-0.0172780491,-0.0332101509,-0.2041532844,-0.0561516136,0.0240239725,-0.1066032127,-0.0489301197,-0.1492851377,0.159449473,-0.1501049846,0.0280114114,-0.005385465,0.0060014529,-0.0326495543,0.0334044285,0.0515298285,0.0447159894,0.1274665892,-0.0190209914,-0.1410583556,-0.1540742815,0.0224542115,0.019667834,0.0707398131,-0.0298976023,0.0237641316,-0.1361068487,-0.0422456749,-0.0873392969,0.1812605411,0.0145305321,0.0651242733,-0.1404738873,0.1093472317,0.1627333611,0.0078531792,0.1757819951,0.136836648,0.1835816354,-0.1348662525,0.0385892168,-0.0181208756,-0.0889157355,-0.084683314,0.1064411476,0.0457526445,-0.002163674,0.0447596498,-0.0466435067,-0.0955914333,0.1864629388,0.0643638745,-0.0520753637]],"hackathon_name":"BrumHack 5.0","index":665,"project_description":"A game about throwing about throwing memes at your friends.MemesEach player chooses a meme and then they commence battle attempting to knock each others trebuchet down.We built it using Unity 3D and C#Animations, UI, lifeEverythingOscar really hates cheeseMore memes!BrumHack 5.0Matty McDonald\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 06:00 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Memebuchet","project_tags":["unity","c#"],"project_url":"https:\/\/devpost.com\/software\/memebuchet","keywords":"built,memes,using,learned,animations,attempting,battle,challenges,cheese,chooses,commence,everything,hates,inspiration,knock,life,unity,meme,memebuchet,next"},{"level_0":666,"hack_vector":[[0.1424122155,-0.0837039128,-0.0233381223,0.0422693342,-0.0224735197,0.1431823969,0.2097873688,-0.0403352194,-0.0329432078,0.0019688038,0.0245021731,-0.0680100471,0.1368843615,-0.0775750801,0.063701883,0.0039875703,0.2221708596,0.000045331,0.0430944003,0.1172949821,-0.2323833853,0.0336006992,-0.0561341271,-0.0189293195,0.0990124643,-0.0139227696,-0.0414307192,-0.1825103909,-0.0124778934,-0.1007791087,0.0678044558,-0.1206622794,0.0333835036,-0.0915230438,-0.0184326526,-0.0100011174,0.1216498166,-0.1359440535,-0.0565831922,0.0009538,0.0433632769,-0.1264304817,-0.1467131525,-0.0233806279,0.0665230528,-0.0498693623,0.0202269126,-0.0798031166,-0.0238077343,-0.2122519761,-0.1364621073,0.0320284888,-0.1033836156,0.0109645966,-0.1871454865,0.158126682,-0.1286603957,-0.0135458028,0.0261709448,-0.1008222476,-0.0526674576,0.0203937944,0.0926347747,0.0593126789,0.1233426183,0.0042649806,-0.0957945585,-0.1163005084,0.0292314161,0.0225200802,0.0626259148,-0.0339035317,0.0181537922,-0.1272081286,0.0321051627,-0.1281604916,0.1789382994,0.0164338537,0.0142465187,-0.1443620473,0.1340082586,0.1587741971,0.0685065091,0.1576440036,0.1099869013,0.2009185553,-0.0960832313,-0.0534187518,-0.0246103909,-0.0817716792,-0.1517069936,0.0499102511,0.1010499224,-0.0336316414,-0.0019677011,0.0181112122,-0.1544464082,0.2191694975,0.0070474576,-0.0782780945]],"hackathon_name":"BrumHack 5.0","index":666,"project_description":"Find the nearest ATM with the best exchange rate with our app!As two members of our team are Europeans, we suffer a lot to find a close ATM with a convenient exchange range.So we thought - why not use google maps, twilio and a simple Android app? The user enters a location, we calculate the most convenient ATMs and twilio sends you a SMS with th locations.We used exchange rates based on a website listing the most common UK banks and their exchange rates. With the google-places API we search for ATMs.Android apps are very complex. We tried to keep it as simple as possible since we only need an insert box and a output tab. How to get data from the app to the node.js program and back?!Android-Studio, Node.js is painfulWe want to link all the components together and include more banks (right now 9).BrumHack 5.0Luana Riebel\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 30, 2016 05:58 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Cash - At The Moment","project_tags":["android-studio","node.js","xml","java","google-places","twilio"],"project_url":"https:\/\/devpost.com\/software\/cash-at-the-moment","keywords":"android,exchange,banks,js,node,google,rates,simple,convenient,atms,app,twilio,back,link,keep,api,insert,include,apps,get"},{"level_0":667,"hack_vector":[[0.1532523483,-0.0960072726,-0.0202434212,0.0503912009,-0.0149762239,0.1425297409,0.2033712417,-0.0379004702,-0.0388201736,-0.008803146,0.0139710354,-0.0684646145,0.1495895684,-0.0708395168,0.0555810072,0.0002854126,0.2096646279,-0.0005819013,0.0380248316,0.1331817359,-0.2244553268,0.0335478336,-0.0466928445,-0.0027163308,0.1343066841,-0.0164677855,-0.0354623497,-0.1776104867,-0.0307406634,-0.0867952555,0.0697370172,-0.1217248365,0.0325246602,-0.0818088129,-0.0262086187,-0.0181076992,0.1252837181,-0.1354450583,-0.0539392754,-0.0047974978,0.0541828126,-0.1313847899,-0.1465192586,-0.0232425183,0.0606456399,-0.0475113317,0.0151150348,-0.072879158,-0.0270119384,-0.2135723382,-0.1308986843,0.0208384488,-0.1104830652,0.020598935,-0.1888219118,0.1685545444,-0.1360603571,-0.0137533946,0.0224187449,-0.1026012003,-0.0611069053,0.0192590263,0.0777659193,0.043993447,0.1193502173,0.0140744196,-0.1001848131,-0.1268698722,0.0242004693,0.0178501345,0.0618572347,-0.0381243117,0.0199697129,-0.1183274761,0.0293214731,-0.1086764112,0.1823946238,-0.006803039,0.0141183455,-0.1336529702,0.1209896132,0.1551150233,0.0659016073,0.1564168036,0.1124029532,0.2008895576,-0.0976191089,-0.0465095453,-0.0162690412,-0.073479183,-0.1501907259,0.0631329939,0.0987160653,-0.0356127471,-0.0067453533,-0.0024926232,-0.1556891203,0.237740919,0.0183405448,-0.0658834726]],"hackathon_name":"HackSheffield 2.0","index":667,"project_description":"for both the drunk and the soberWe all like party games, don't we? We took the famous game Russian Roulette and adapted it to the modern era, making it work on Amazon Alexa. Take risks, bet and win!The application follows the rules of the famous Russian Roulette rules. Connecting every player to an Nessie account, we raised the bar with virtual betting, each player having an account which allows him to take risks and feel the excitement of the game.The application is built using JavaScript. We integrated the Nessie API within our app.Having no previous experience with some of the technologies and languages we used, we had trouble making them work together. (e.g. using JavaScript requests for the Nessie API)Learning from mistakes is always the biggest accomplishment at any Hackathon. We managed to correct the errors and fix the bugs.We are willing to continue the development of the Amazon Alexa skill and make the game more complex and user friendly.HackSheffield 2.0Wrote AWS Lambda function to handle Alexa requests, used JavaScriptMalina Florea\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:52 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Russian Roulette","project_tags":["javascript","json","capital-one","amazon-alexa"],"project_url":"https:\/\/devpost.com\/software\/russian-roulette","keywords":"russian,game,nessie,roulette,take,built,player,javascript,risks,rules,application,work,api,amazon,famous,alexa,using,account,making,excitement"},{"level_0":668,"hack_vector":[[0.1499165446,-0.0890622735,-0.019046627,0.0483499765,-0.0286930688,0.1542432904,0.2085398138,-0.0413685739,-0.0259260796,-0.0054660426,0.0323490202,-0.0333212614,0.1447037756,-0.0659068599,0.05750902,0.0002780607,0.2270150036,-0.0008869867,0.0382165313,0.1233272925,-0.234639585,0.0072753336,-0.0522826687,-0.0191885047,0.1243090481,-0.0151904244,-0.0300069228,-0.1890648454,-0.0145707708,-0.0953813419,0.0652327165,-0.1127223,0.0272626653,-0.0874108151,-0.0178779326,-0.0045794519,0.1074483395,-0.1299527586,-0.055751361,0.0126754353,0.0477771387,-0.1120789945,-0.140611589,-0.0256677642,0.0522752553,-0.0619591363,0.013016887,-0.0626843348,-0.0353554115,-0.2160964161,-0.1124650612,0.0079000182,-0.1040722728,-0.0065006227,-0.1699907482,0.1636427343,-0.1329147667,-0.0108500179,0.0163206365,-0.0859768987,-0.0500185899,0.0200333279,0.0829956979,0.0543894656,0.1339024901,-0.000559227,-0.1184153631,-0.1395921558,0.0360842496,0.0150264893,0.0482474118,-0.0292710699,0.0169943869,-0.1287027448,-0.0039024919,-0.1271037012,0.1956032217,0.0136199081,0.0300223585,-0.1460221559,0.1261124909,0.1641939878,0.0474391952,0.1536956429,0.1171789095,0.2127189636,-0.1004458666,-0.0260241628,-0.0234372709,-0.0812947005,-0.1567441225,0.0719521716,0.0926165953,-0.0207536723,-0.0009071736,-0.0007649474,-0.1401951015,0.223380059,0.0250511747,-0.0664582476]],"hackathon_name":"HackSheffield 2.0","index":668,"project_description":"Why develop a website with your keyboard when you could just use your voice?We took inspiration from ourselves in the sense that we are very lazy.Allows you to lazily create websites with your voice.Uses Amazon Alexa, Amazon Web Services, Lamda and nodeJSGetting used to how Alexa works as well as Amazon Web Services as these were technologies that were new to us.Having an MVP by the finish time\nHaving extra time to add in advanced features such as Bootstrap snippets to add in Jumbotrons and NavbarsMore lazy features\nMore intents allowing easier web developmenthttp:\/\/bananaeatingcyb.org\/ \n(Banana Eating Cyborg)HackSheffield 2.0Samuel Welek\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 05:50 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Lazy Web Dev","project_tags":["amazon-alexa","node.js","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/lazy-web-dev-yrbxce","keywords":null},{"level_0":669,"hack_vector":[[0.1467662454,-0.102644667,-0.0111834975,0.0475080088,-0.0195966754,0.1446314454,0.2107479721,-0.0431288034,-0.0348696448,0.0120224142,0.0049346532,-0.0559179336,0.1430960745,-0.0782695711,0.0561912619,0.0319561325,0.2238311023,0.0029668049,0.0416020714,0.1268360764,-0.2288728058,0.0369708203,-0.0518883429,-0.0289618336,0.1542891711,-0.0196082126,-0.0464708433,-0.1992526501,-0.0084879771,-0.0659551248,0.0698209926,-0.1171089336,0.0518304147,-0.0918588936,-0.0432758257,-0.0007859365,0.1195360422,-0.1276948303,-0.0296385419,0.0190009698,0.0370620787,-0.1563248485,-0.1675743312,-0.0286857132,0.0355057307,-0.0423206016,0.0084685041,-0.0614567883,-0.0111208111,-0.208778739,-0.1133864,0.0223317128,-0.1175065413,0.0091913128,-0.1616031975,0.1726787388,-0.1592024565,0.0292318333,0.0003539062,-0.0615171455,-0.0541864857,0.0306046437,0.073970966,0.0653783306,0.1284387559,-0.0133687928,-0.1021982878,-0.1433776617,0.0320625417,0.0098486645,0.0673640966,-0.0426131487,0.0126818791,-0.1256450713,0.0081005786,-0.1005698666,0.1900654733,-0.0033441889,0.0344642289,-0.138239637,0.1333037019,0.149845019,0.0785449669,0.1480773836,0.1169972047,0.207782343,-0.0983643234,-0.0091174711,0.0138956532,-0.0749255642,-0.1393240243,0.0645674691,0.0890406817,-0.0226708688,0.0207047407,-0.0156884789,-0.1231391355,0.1977958232,0.0359321721,-0.068688266]],"hackathon_name":"HackSheffield 2.0","index":669,"project_description":"Pay using facial recognitionInnovative payments through facial recognition and internet-banking.Payments using facial recognition. NO NEED FOR ANYTHING ELSEWe wrote two projects, one working with the capital-one API for the banking objects and the other with kairos-api for facial recognition and then we combine them togetherCould not send requests to pusher from iPhone for no reasonFacial recognition & created methods for everything in capital-oneA lot. Debugging pusher put us in the position of writing 2 servers - one in php and the other in python using flaskQuicker processing, better UI, easier UX, confirm payments based on the location of the two merchantsHackSheffield 2.0Razvan-Gabriel Geangu\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:22 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Rock the payments","project_tags":["php","python","pusher","xcode","ios"],"project_url":"https:\/\/devpost.com\/software\/rock-the-payments-m15qir","keywords":"facial,one,payments,recognition,api,using,banking,two,pusher,capital,wrote,innovative,everything,flask,inspiration,internet,iphone,kairos,else,created"},{"level_0":670,"hack_vector":[[0.1292649508,-0.0770589039,-0.0317520984,0.0397144072,-0.0191491339,0.1281603575,0.2023878843,-0.0216236115,-0.0227141362,-0.0232194364,0.01072702,-0.0752862617,0.1388623565,-0.0698047802,0.0622776933,-0.0000864493,0.2082788944,-0.0097338594,0.0326487869,0.141435802,-0.2349118888,0.0291484855,-0.0432875343,-0.0023493343,0.1155308187,-0.0183166433,-0.0258912183,-0.1692910343,-0.0352969542,-0.0885533988,0.0544060357,-0.1189948171,0.0320571251,-0.0727314651,-0.0150824254,-0.0159799773,0.1214622185,-0.1374115199,-0.0603736006,-0.0035282965,0.0442609712,-0.1278661638,-0.1476223767,-0.0301621743,0.0699929968,-0.0627255663,0.0158557408,-0.0799279585,-0.0245332178,-0.2172649354,-0.1409768462,0.0117171556,-0.0985515192,0.017874686,-0.1991777122,0.1581016779,-0.1305438131,-0.0291547254,0.0310185999,-0.1203031763,-0.0796046034,0.0185215976,0.0768669322,0.0304632746,0.1119688302,0.0211040415,-0.0901111662,-0.1331314892,0.0415781476,0.0221549477,0.0580044277,-0.0524036661,0.0206825007,-0.1162210852,0.0421708636,-0.117354624,0.1719572395,-0.0050361711,0.0099706538,-0.13201195,0.1168613881,0.1600634754,0.0690800175,0.1650829762,0.0997568071,0.1966632754,-0.0984913334,-0.0458064936,-0.0250657089,-0.0783540159,-0.1591093242,0.0562719181,0.1024139598,-0.046022214,-0.0163324364,0.0093784612,-0.1696957201,0.2492752969,0.0138484417,-0.0723190159]],"hackathon_name":"HackSheffield 2.0","index":670,"project_description":"Manage your containers with your voiceEver thought your laptop was too far away while you're sitting in bed while you're meant to be looking after your Docker containers? Fear no more! You can manage your containers from the safety of your bed.This app allows you to create, start and stop containers while also allowing you to check the status of the containers, how many are running and if the Docker Hub is up.We used an AWS Lambda to facilitate the communication between the Alexa device and the Docker API that we developed. The Lambda converts the data received from the Docker API to nice messages to play back to the user. There is a conversational element of the app is accomplished by using the session variables in the Alexa Skills Kit.The Docker API was built upon the official Docker Remote API (and Node bindings) with some changes to combine some results and to reduce network overhead by removing unneeded variables. The API runs on a server and the communication was done over https (with a Let's Encrypt certificate).We attempted to create an infrastructure to allow you to log in to the Alexa Skills app to select the server you wanted to administrate. Due to the complexity and time restraints, we could not complete this. This means the server details have to be hardcoded in to the Lambda.We had issues when creating and starting the containers as Alexa would time out. We worked around this by splitting the creating and starting of the containers in to two steps that can be stringed together with a conversational like command. (\"create a ... container called ... \" then \"start it\")The whole thing! It's three of the team members first Hackathon and the fourth's second, so it was a great learning experience to complete a working app. We're most proud of the contextual awareness when starting a container.Many of the tools\/APIs we used were new to us. We used AWS Lambdas, Alexa Skills Kit and the Docker Remote API for the first time. The project provided a great refresher to JavaScript and Node JS which we only had limited experience with.We hope to add the ability to log in to the app via the Alexa Skills app to select the server you will be administrating. A long term goal would be to add the ability to administrate swarms\/clusters.HackSheffield 2.0James Clark\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:20 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Docker Assistant","project_tags":["alexa","amazon-web-services","node.js","docker","twitter","php","amazon-alexa","javascript"],"project_url":"https:\/\/devpost.com\/software\/docker-assistant","keywords":null},{"level_0":671,"hack_vector":[[0.1510359198,-0.0877320766,-0.0346837528,0.0617663935,-0.0184582528,0.1586778015,0.2181925625,-0.0401234142,-0.0287799314,0.0197826978,0.0177410562,-0.0726311728,0.1608599424,-0.0893036425,0.0733533502,-0.0303841624,0.2023799866,-0.0028526369,0.0380904861,0.0953898355,-0.2074093223,0.0568377078,-0.056958165,-0.0030810623,0.1625443846,-0.0100038247,-0.0274773594,-0.1939717382,-0.0282225702,-0.0374750756,0.0804276168,-0.1519004852,0.0404894873,-0.0959606022,-0.0536346324,0.0120713012,0.1328689158,-0.126104936,-0.0560395755,0.0004722566,0.043565847,-0.1447990984,-0.1556338966,-0.010803693,0.0531763993,-0.0254307222,0.0139498748,-0.0688334331,-0.0333469622,-0.1863870025,-0.1421767175,0.0013148753,-0.1139334068,0.0371544026,-0.1649125665,0.1479748636,-0.1440529525,-0.0065877768,0.0064965645,-0.0930179879,-0.0665609166,0.020554876,0.1038696393,0.0492598861,0.1194362119,-0.0046786973,-0.0845782086,-0.1178640053,0.0338626765,0.0201783609,0.0554516204,-0.0380614288,0.0361452065,-0.116281569,0.0357572027,-0.12077263,0.1968102157,0.0090866936,0.0124687199,-0.1329122633,0.1449383944,0.1599728316,0.0863770917,0.1507519633,0.0869910941,0.1839054078,-0.0946310759,-0.0270515066,0.0171844643,-0.0907980129,-0.1427981406,0.0517263189,0.090919733,-0.0139650153,0.0442224108,-0.0141772162,-0.1327952594,0.223528102,0.0259610824,-0.0689325929]],"hackathon_name":"HackSheffield 2.0","index":671,"project_description":"A dashboard, displaying data received from Capital One's Nessie API, which is being manipulated by voice controllsAbility to use voice control in order to simplify tasks in business and lifeGets the data from Nessie API, processes it and display on the dashboard. Modifications to data are being applied based on voice commands, which are captured by Amazon Alexa.Divided project into 3 parts:\n1) Developed front-end which displays processed data using technologies like Js, AngularJs, d3,, html5, css3..\n2) Developed back-end which processes data and connects AWS lambda to front-end  using technologies like Spring, Java\n3) Developed AWS lambda code using Nodejs, which controls Amazon Alexa.Malformed data, voice recognition with flaws, connection issues to AWSConnects everything fine into 1 system and accepts simple data modification voice commands.Got more experience in toolsets we have used, got first experience in using voice control devie.TBDHackSheffield 2.0Vytautas Perliba\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:15 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Voice controlled dashboard","project_tags":["java","javascript","node.js","angular.js","amazon-web-services","alexa","capital-one","css3","html5","d3.js","spring"],"project_url":"https:\/\/devpost.com\/software\/voice-controlled-dashboard","keywords":"voice,data,using,aws,developed,end,like,alexa,amazon,commands,connects,control,dashboard,experience,got,lambda,front,processes,technologies,processed"},{"level_0":672,"hack_vector":[[0.1369815767,-0.0926867351,-0.0288982056,0.0336580984,-0.0152424444,0.1358706653,0.2163691223,-0.0266561881,-0.0438658819,0.011892233,0.0065383259,-0.0733417943,0.1226836443,-0.0852132663,0.0652250201,0.0325275585,0.2301713824,0.0066519026,0.0424741432,0.1099652648,-0.2217288911,0.052426599,-0.0645363182,-0.036319036,0.1164040864,-0.0118760411,-0.0417127647,-0.2082342505,-0.0184242837,-0.070968762,0.0620721132,-0.1432303637,0.0497124121,-0.1085130051,-0.0365905724,0.0011145584,0.1173008457,-0.1257565916,-0.0445274711,0.0050111515,0.0241866838,-0.159050703,-0.1734993309,-0.0262568351,0.0513673052,-0.053790234,0.0173528865,-0.0710404813,-0.0253398102,-0.2070589066,-0.1098524481,0.0096017998,-0.0994846746,0.0055777268,-0.156021148,0.1579282731,-0.1512656361,0.0099660875,0.0078184195,-0.0798817426,-0.056264922,0.03347845,0.0875365436,0.0657444596,0.1198337749,-0.0171055142,-0.1112497002,-0.136142239,0.0475707203,0.0170281865,0.0789466426,-0.0550259426,0.020223245,-0.1317174584,0.0246089771,-0.1325599551,0.173811838,0.0116351889,0.0547342822,-0.1279109269,0.1468412131,0.1493938565,0.1009005681,0.16045928,0.1024459824,0.1780347973,-0.1045160443,-0.0211307853,0.0084798392,-0.0960877985,-0.1404729784,0.0493385047,0.0897734463,-0.0428073965,0.0160666741,-0.007092664,-0.1364218593,0.1915896088,0.0266241096,-0.0842863992]],"hackathon_name":"HackSheffield 2.0","index":672,"project_description":"Realtime graphing of twitter happinessThe graph, showing sentiment vs timeOn hovering on a point, the tweet message appears in the tooltipPretty graphs, social mediaTakes a realtime feed of a certain searchterm from twitter, puts it through the google cloud api to find the sentiment (happiness) and then displays it in a web appIn Python, Tweepy collects the tweets, which are passed to Google Cloud to find the sentiment. These are sent over a socket to the Flask webserver, which sends them over a continuous event stream to the front end, where CanvasJS plots them. As such, everything is entirely real timeHackSheffield 2.0I interfaced with the google-cloud language API and brought the rest of the team up to speed on developing in python and flaskAdam Carter\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 05:30 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Sentwee","project_tags":["python","google-cloud","flask"],"project_url":"https:\/\/devpost.com\/software\/sentwee","keywords":"python,sentiment,time,realtime,real,streams,cloud,find,google,everything,twitter,api,graphs,happiness,inspiration,getting,json,front,forgetting,knowing"},{"level_0":673,"hack_vector":[[0.1355562806,-0.0845381245,-0.0237334967,0.0488871001,-0.0138187502,0.1496111602,0.2051455379,-0.0417256877,-0.0284273084,-0.0143986596,0.0203036387,-0.0706202313,0.1477215588,-0.0741814673,0.0490879677,-0.0069819554,0.2214832008,-0.0057862434,0.0487143956,0.1192819551,-0.2228343785,0.0578568354,-0.0354700051,-0.0103278393,0.1074481383,-0.016688969,-0.034315981,-0.1749480665,-0.0244051032,-0.0861266479,0.0726425722,-0.1218607575,0.0395275243,-0.0868626386,-0.0208438374,-0.015693957,0.1363445073,-0.1328958422,-0.0570324548,-0.0122643886,0.0512512065,-0.1399174631,-0.1521387547,-0.0331542194,0.0696266294,-0.037978936,0.0064164815,-0.080493927,-0.0240227506,-0.2072488517,-0.1465615332,0.0330564678,-0.107094042,0.0117142256,-0.19681786,0.1432526708,-0.1317382306,-0.035508804,0.048470486,-0.1069762036,-0.0686327145,0.0209359713,0.0999395102,0.0421424396,0.1116904616,0.0144186476,-0.0884815753,-0.1232718974,0.0317721739,0.035787303,0.0665107444,-0.0431621633,0.0310666654,-0.1168971881,0.0212069433,-0.1308882087,0.1764727086,0.0020238534,0.0119467648,-0.1366102099,0.124199003,0.1526913047,0.0555101,0.168653354,0.0984717086,0.1889955252,-0.0957762897,-0.054718636,-0.0247699693,-0.0799607337,-0.1523451805,0.0498671271,0.086394392,-0.0405756794,0.0030610615,0.018914558,-0.1619145423,0.2319693267,0.0081258137,-0.0745721608]],"hackathon_name":"HackSheffield 2.0","index":673,"project_description":"Quick, cross-platform payments, via NFCThe home screen that lists the accountsThe transactions on a particular accountTransferring money to another phone via NFCThe transfer of money is complete, and the list under the popup has updatedWindows Phone and Amazon Fire Phone running the app side by sideWe saw the capital one presentation before the start, and had an idea about what we could do that worked cross-platform, NFC.The app retrieves data from the Nessie API, made by CapitalOne. It allows users to view their accounts, and send and receive money by tapping their phones together.Anthony built a Universal Windows application using Visual Studio, and Tanin used Android Studio to develop an Android\/Amazon Fire Phone app on a Mac.The NFC implementations were ever so slightly different across the two platforms, so the most of our time was spent getting the two platforms to interact in a meaningful way.A cross-platform payment app that works on both Android and Windows Phone, making sure even the users on the small platforms are included.While NFC is a standard, there is some leeway on how it can be implemented.HackSheffield 2.0I created the Universal Windows appAndroid and FireOsAnthony Roberts\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:42 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"TapOne","project_tags":["c#","android","java"],"project_url":"https:\/\/devpost.com\/software\/tapone","keywords":"nfc,android,platforms,app,cross,studio,windows,users,two,platform,phone,built,fire,getting,idea,implemented,implementations,even,included,inspiration"},{"level_0":674,"hack_vector":[[0.1390808225,-0.122961767,-0.000691448,0.0882138833,-0.0445906594,0.1644872129,0.1843107641,-0.0468983762,-0.0383782424,-0.0301772282,0.0130803511,0.0034003926,0.1380337775,-0.075282611,0.0160178915,0.0603372045,0.2745553851,0.0346569382,0.0504318438,0.1008379087,-0.1972639859,0.0255984142,-0.046425771,-0.0558819547,0.1568451673,-0.0181496888,-0.0634261221,-0.204031691,0.0199409276,-0.0778250769,0.0435452797,-0.1050807014,0.0700005665,-0.0564511381,-0.0258744042,0.0103983665,0.1473831981,-0.1043986157,-0.006056455,0.0673790202,0.05723124,-0.1565814912,-0.1895261407,-0.0370339938,-0.0222353451,-0.0466057025,0.0397560522,-0.0139723355,-0.0144916037,-0.1996960342,-0.0415840037,0.0273491833,-0.0960732326,-0.0464517847,-0.1275704503,0.1487194896,-0.1508243382,0.0472540967,0.0077082161,0.007724571,-0.0276129432,0.0283016041,0.0638590455,0.0666714758,0.1381313503,-0.029933257,-0.1187346503,-0.1810609847,0.0306367632,0.0044898554,0.0660344064,-0.037949197,0.00218788,-0.1370021403,-0.0552687012,-0.0900022611,0.187470749,0.0132587664,0.0944149271,-0.1364976317,0.1142006293,0.1580682397,0.0207428057,0.1624592394,0.1453511566,0.1586364061,-0.1523748338,0.038250722,-0.0122601632,-0.1194516122,-0.0993842036,0.0983537063,0.0287184417,0.0047291494,0.0645146072,-0.0665995255,-0.0872298256,0.1704923064,0.0899734348,-0.0608086251]],"hackathon_name":"HackSheffield 2.0","index":674,"project_description":"Geolocation based productivity app to change the game of workspaces and productivityGitHubProductivity app that uses geofencing to set up interactive hubs to block all the distracting websites defined on your personal blacklist.HackSheffield 2.0Idea, geofencing backendRachel Mekhtieva Lee\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:54 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"BlockSpot","project_tags":["swift","mapkit"],"project_url":"https:\/\/devpost.com\/software\/blockspot","keywords":"websites,uses,set,productivity,personal,interactive,hubs,github,geofencing,distracting,defined,blockspot,block,blacklist,app"},{"level_0":675,"hack_vector":[[0.1526349932,-0.0768242553,-0.0391142368,0.0399021655,-0.0202473868,0.1378414631,0.2015960664,-0.0277795661,-0.0111046815,-0.0193082057,0.012578045,-0.077900447,0.1450181603,-0.0681399032,0.0709666461,-0.0204525385,0.191574201,-0.0020522049,0.0337360464,0.1279451847,-0.2307081223,0.020236047,-0.0496237613,0.0034526133,0.1102953106,-0.0219782721,-0.0213517509,-0.167244792,-0.0473457351,-0.0789608806,0.066749163,-0.1184765697,0.0248901397,-0.0825308487,-0.023693556,-0.0103075821,0.1184303463,-0.1353804916,-0.0715162084,-0.0051952866,0.0458766557,-0.1182718053,-0.1336557865,-0.0191482324,0.0796227455,-0.0654861555,0.0168876778,-0.0842398107,-0.0463472642,-0.2214322984,-0.1597625315,0.0054670218,-0.1037200913,0.0189862885,-0.1982344091,0.1593888253,-0.1207924932,-0.0362047181,0.0286138188,-0.1178342253,-0.0796213672,0.0134692872,0.0780632347,0.0243299361,0.1121905074,0.0177621674,-0.0963350534,-0.1103037372,0.0272289999,0.0237838011,0.0538410768,-0.0466369092,0.0211772509,-0.1188060567,0.0408129282,-0.1170131564,0.1856081486,-0.0031671633,-0.0085016424,-0.139519453,0.1140380353,0.1595524997,0.0624711178,0.1561889052,0.0833896771,0.2069518864,-0.0832003355,-0.0493755303,-0.0147291943,-0.0789143294,-0.1622341871,0.05655035,0.0971198902,-0.04342594,-0.0180081502,0.0140806297,-0.1593336314,0.2602954507,0.0023122088,-0.0695945621]],"hackathon_name":"HackSheffield 2.0","index":675,"project_description":"People with allergies are always asking \"can I eat this?\". Now Alexa can tell you based on your allergens profile.We wanted to make a skill for Amazon's Alexa. We thought that health-care was an interesting sector. One of our team members has a nut allergy. A common question is \"can I eat ...\". It would be useful if when in your home, Alexa could easily answer this question.This is an Alexa 'skill' that lets you ask if a food is ok for you to eat based on an allergy profile that you make.First, we experimented with different food APIs to see which one would give us enough allergen information. We made a codepen to visualise these API's output.We used AWS Lambda to host the Node.js backend that included the Alexa SDK and a custom wrapper for the food label SDK. We used Firebase DB by Google to store user allergen profiles.AWS Lambda is terrible at giving meaningful errors and also seems to have patchy support for new JavaScript ES6.We were able to pass arbitrary length strings to Alexa and pass the data to an API. This proved quite difficult.Some members learned JavaScript for the first time. We got better at collaborating with Git and Github and learned how to use the Alexa SDK.We'd like to provide more 'sample utterances' so we can interact with it in different and more human-like ways. Hopefully we'll be able to publish the skill.HackSheffield 2.0It was my first time using javascript and AWS Lambda while working on the User-Alexa interaction.I worked mostly on the node backend for the Alexa skill. I implemented the backend API from other members' codepen tests.\nI'd never used AWS Lambda before and learnt a lot about it in the process.David Moodie\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:06 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Alexa Allergies","project_tags":["node.js","amazon-web-services","javascript","alexa"],"project_url":"https:\/\/devpost.com\/software\/alexa-allergens","keywords":"alexa,learned,sdk,food,skill,aws,eat,different,members,question,make,first,like,one,lambda,able,pass,javascript,api,would"},{"level_0":676,"hack_vector":[[0.1665528268,-0.1286670268,-0.0266363099,0.065272674,-0.0232126657,0.1547476053,0.1744840145,-0.0418103077,0.0073833629,-0.0548345186,-0.0046616388,-0.0381316841,0.132555753,-0.057347849,0.0396112278,-0.0075211558,0.2138567716,0.0197669454,0.054929845,0.1155976951,-0.237372309,0.0004510994,-0.0393006913,-0.0167237837,0.1151247919,-0.0194942653,-0.0286605768,-0.1629445106,-0.0278232489,-0.1148252934,0.0425357521,-0.1220149472,0.0436659642,-0.0706796497,-0.0174343288,-0.0289972872,0.115686655,-0.1555151045,-0.0653175339,0.0207674634,0.0649530664,-0.10549777,-0.1390310228,-0.036770273,0.037747357,-0.0836492032,0.0248099156,-0.0588713028,-0.0590783767,-0.227206707,-0.1469748765,0.022613164,-0.1043633521,-0.0364750586,-0.1733153313,0.1627776921,-0.1102376804,-0.0341696292,0.0273325536,-0.0654067472,-0.0714158863,0.0126914168,0.0561841093,0.0222688187,0.1085811481,0.0205063485,-0.1248666644,-0.1250894964,0.0076642982,0.029677067,0.0684921369,-0.0497900769,0.0111729158,-0.1403738558,0.0017788594,-0.0886593163,0.2048436701,0.0327049084,0.0104977824,-0.1527830809,0.1030094773,0.1623145342,0.0210527536,0.1637967676,0.1177226901,0.2066233307,-0.0897214264,-0.0149086285,-0.0279061627,-0.0707146376,-0.1254344434,0.0818747133,0.0881642997,-0.0254257843,-0.0066362675,-0.0386123173,-0.1403120756,0.2543954849,0.019523738,-0.06972491]],"hackathon_name":"HackSheffield 2.0","index":676,"project_description":"Akinator.com hacked into alexaWe've both wasted too much time trying to fool the great akinator. From a smart-ass genie, a smart-ass AI companion seems like the next logical step.Think of someone! Anyone! Alexa will ask you yes\/no questions and (hopefully) guess correctly.(Top Tip: If you don't know an answer you can say: \"I don't know\", \"Probably\" or \"Probably not\")Node.js with the alexa-sdk package. Interfacing directly with akinator.com API endpoints.Possibly the first time we've actually finished a hackathon project.\nWith time to spare too!I'll think about that when I'm less sleep deprivedWe'll publish it as a public alexa skill soonHackSheffield 2.0jlogandavison\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 05:20 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hackinator","project_tags":["node.js"],"project_url":"https:\/\/devpost.com\/software\/hackinator","keywords":null},{"level_0":677,"hack_vector":[[0.1447099298,-0.1453820914,-0.0041096015,0.0660347492,-0.0474409163,0.1501761228,0.1788852066,-0.0493301712,-0.016636394,-0.0442349575,-0.0034508621,0.0180886295,0.1282378435,-0.0734889135,0.0038059659,0.0744574815,0.2723674476,0.0314582214,0.0399986841,0.1036376879,-0.2090316713,0.0029869708,-0.0399659127,-0.0590365157,0.1574223191,-0.0213930346,-0.0582577363,-0.1800014675,0.0238295197,-0.1012540087,0.023002062,-0.1070583835,0.07466539,-0.0575436614,-0.0258200634,-0.0047117127,0.1449210346,-0.1205397099,-0.0086920615,0.0739874765,0.0492125042,-0.141869843,-0.1768187284,-0.0473038629,-0.0259623472,-0.0736439005,0.0447064191,-0.0094205374,-0.0302417502,-0.2001206875,-0.0547389016,0.0287079997,-0.1052786633,-0.073252216,-0.1186568365,0.160101518,-0.1449196339,0.0393153951,0.0027027079,0.0168352872,-0.031985756,0.0305452421,0.0460360311,0.0706756711,0.1331545264,-0.0322513655,-0.1416167617,-0.172938779,0.0198916253,0.0094969487,0.0689994395,-0.0445633195,-0.0076650009,-0.1454930007,-0.0566211753,-0.0787424371,0.1927403212,0.0222340357,0.0886527449,-0.1447363049,0.1087651104,0.1628646851,0.0061827479,0.1566032022,0.1467399895,0.1579468101,-0.1470549703,0.0527811795,-0.0090580694,-0.1096442044,-0.0924807489,0.1031597406,0.0303334072,0.0082064476,0.058742471,-0.0785390884,-0.0892796069,0.167878598,0.0923881382,-0.0546570271]],"hackathon_name":"HackSheffield 2.0","index":677,"project_description":"Swap all the bad words for all the nice ones.CHRIS + Coffe + Orange juice + Funk Music = BOOMIt makes you laughYou tell meThe worldWe can finally go to sleepFree food is awesomeNothingHackSheffield 2.0Christopher Scott\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:36 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Untriggered","project_tags":["javascript","html5","css3"],"project_url":"https:\/\/devpost.com\/software\/untriggered","keywords":"world,inspiration,awesome,boom,built,challenges,chris,coffe,finally,food,free,funk,go,juice,untriggered,laugh,learned,makes,music,next"},{"level_0":678,"hack_vector":[[0.1571909487,-0.1242008954,-0.0212485436,0.0646399483,-0.0212299991,0.1609497666,0.1818467975,-0.0376334712,-0.0029626447,-0.0397142954,0.004402949,-0.0543892011,0.1481119096,-0.0676110014,0.0450441539,0.0065268665,0.210679993,0.0154056018,0.0558689386,0.1111397669,-0.2393372208,0.0260460488,-0.040891055,-0.016501911,0.1218195111,-0.0455224812,-0.0417822748,-0.1720792502,-0.0400658101,-0.0982263386,0.0690250993,-0.1127003729,0.0427156352,-0.0643635467,-0.0313854925,-0.0159725267,0.1332398504,-0.1445779502,-0.0474963039,0.0167322531,0.0610961318,-0.127991721,-0.153181687,-0.0339980423,0.0445380844,-0.0652843267,0.0322536826,-0.0600474104,-0.040900778,-0.2202222049,-0.1421425492,0.0288791973,-0.1118055359,-0.004744269,-0.2000681609,0.1512439251,-0.1373824477,-0.0240741782,0.037777137,-0.0706193075,-0.0811452046,0.0157031994,0.0583133698,0.0322180055,0.1123598889,0.021841228,-0.093368195,-0.1301517189,0.0083436165,0.0245234724,0.0706560612,-0.0571890175,0.0116711026,-0.1265511811,0.006319704,-0.0867656618,0.1924857497,0.0145276971,0.0099877538,-0.150347352,0.1015224978,0.1630745828,0.0177580193,0.1592747867,0.1166443378,0.2064971924,-0.1023681238,-0.0259000715,-0.0214941874,-0.0830276757,-0.1341413707,0.0780098885,0.0659492016,-0.029118387,-0.0061480389,-0.0195584036,-0.1308866292,0.2355404943,0.0328363664,-0.0660540611]],"hackathon_name":"HackSheffield 2.0","index":678,"project_description":"I made a domain. Servers take 48 hours to update . I didn't have 48 hours. I had much, much less.a schematic of the websiteBuilt to host my other hack, WirePath, I designed this domain using Weebly. I did not know, during initial planning, that it would take 24-48 hours for servers to update after a domain is unparked. Clearly, we didn't have that time. In the above picture is a schematic of the website layout. Once my other hack is more... polished... it will appear where the beautiful green comic sans indicates, on the brick background. I am considering using this page as a portfolio for past and future projects, once it is available to the general public. I'd also like to add more information and detail, and perhaps more pages. If you wait it out a bit more, the magic internet fairy will wave her wand and this wonderful website will poof into being on the world wide web.HackSheffield 2.0Kai Barclay\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:04 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HackYouVeryMuch.com","project_tags":["weebly"],"project_url":"https:\/\/devpost.com\/software\/the-domain-that-will-work-soon","keywords":"domain,website,using,hack,hackyouverymuch,fairy,future,general,green,would,detail,hours,indicates,information,initial,internet,host,considering,designed,layout"},{"level_0":679,"hack_vector":[[0.1394424587,-0.0761026964,-0.0323382914,0.0417470634,-0.008145934,0.1354307234,0.1933485419,-0.0318043493,-0.0254964083,0.0003124592,0.0279505886,-0.1050009429,0.1575408131,-0.0795138404,0.0802364796,-0.0176514406,0.1863642633,-0.0149992378,0.0454336889,0.1142023206,-0.2193012536,0.0542031042,-0.0586577356,0.0012888625,0.1058924198,-0.0379466638,-0.026387658,-0.181983307,-0.0565190874,-0.0695620626,0.0829493403,-0.1194517761,0.0376827233,-0.0912557468,-0.0215762705,0.0002131837,0.1200545728,-0.1320888847,-0.0592675507,-0.0207979586,0.0480287522,-0.1340474337,-0.1601880938,-0.0057207299,0.0746004432,-0.0373234712,0.019142231,-0.0956954882,-0.0319760926,-0.2128077596,-0.1730345488,0.0134780155,-0.1047621146,0.0329136252,-0.2131523639,0.1419940889,-0.1287586242,-0.0283548813,0.0422748402,-0.1241960898,-0.0801695287,0.0191431101,0.0841708034,0.039129965,0.1004471481,0.0247196238,-0.0723380446,-0.1098857746,0.0218638238,0.0136810029,0.0668745637,-0.0509088673,0.0246651769,-0.1138878539,0.0586610399,-0.1136928126,0.1863437891,-0.0029519286,-0.0048319572,-0.1249462739,0.1261808723,0.1557744145,0.0774422288,0.1490463614,0.0844189003,0.1929174364,-0.0796964541,-0.0652686432,-0.0067016091,-0.0829253197,-0.1502422094,0.0438979566,0.0945424885,-0.0471376143,-0.0097965132,0.0092364838,-0.1590862572,0.2416712493,0.0018764223,-0.0786913708]],"hackathon_name":"HackSheffield 2.0","index":679,"project_description":"Memes a lotSeeing some reddit users joke about a meme stock exchange which could be made into reality.Lets you buy and sell memes with their value updating according to real trending data on Twitter.We made a HTML+CSS website and then introduced Bootstrap to provide a nav bar, whilst also creating a Ruby and database setup to run a server and merged in the Ruby to the HTML and then pulled the meme trending value from Twitter's API to go into our database.Twitter's API was not straight forward. Google Trends does not have an API and the embedded link from their own site was completely broken.Being able to buy a meme and make profit off of itStrong team building skills - allocation of tasks and dealing with bottlenecks in plan.Ruby does not work easily on Windows and Google trends does not have an API. Twitter's API is extremely confusing and had to be hacked to get to work. We learnt how to use some Ruby gems (rufus-scheduler,twitter) and to interface with a database through Ruby.Running on a real web server, supporting logins and adding more memes or unrestricting the purchases to all memes. Hosting adverts on the site and creating a paid or ad based app.HackSheffield 2.0I turned the static HTML files into dynamic web pages as erb files. I also participated heavily in coding their controllers, particularly the login system with Twitter. I also helped colin code his database methods as he did not have an IDE, so I proofread his code and ran it.I worked mostly on the front-end, using Bootstrap to build a generic webpage, which was then rolled out to each meme page. I also was part of the pair which figured out how to embed Google Trends onto the webpage; this was much more difficult than anticipated. Once that was set up, we (the front end team) did help with the back-end, particularly with using the Twitter API. We were using the Twitter API to do something (i.e. count tweets) which we had never done before, and that posed its difficulties but we worked it out eventually.I worked on the back end code of our web app.  I coded the low level functions which handled the interactions between our ruby controller an our database.  I used these functions to build more complex functions which calculated basic stock trends and the value of the price of memes.  I also worked on the twitter api which was used to take trending results to power our stock exchange.I worked mostly on the front end, making a basic prototype for the website and then styling it to look nice and be responsive - this was useful later when we needed to shrink the browser window and would allow us to make a website based app easily if we had the time. I also helped with some of the debugging with the Ruby code and trying to work out how to get value data from Twitter trends.Jack Han\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 07:36 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MeMeStOcKeXcHaNgE","project_tags":["ruby","html5","css3","bootstrap","javascript","sql","sqlite","sinatra","notepad++"],"project_url":"https:\/\/devpost.com\/software\/memestockexchange-7o6pck","keywords":"api,twitter,ruby,database,meme,memes,work,site,buy,creating,google,html,real,server,made,trends,value,trending,supporting,completely"},{"level_0":680,"hack_vector":[[0.1585165262,-0.0989722684,-0.0197778959,0.049823828,-0.0097064981,0.1474802494,0.1902513206,-0.0417792536,-0.0210182145,-0.008684109,0.0302667525,-0.0753069818,0.1609844118,-0.0803673044,0.061985679,-0.0029150522,0.2048190534,-0.0140871312,0.0571550801,0.1196475551,-0.2361445576,0.0329888836,-0.0564456992,-0.0017863679,0.1213394552,-0.0458587259,-0.0355340242,-0.1768188775,-0.0232430957,-0.0906823203,0.0799704492,-0.1101232097,0.0391727909,-0.0774945244,-0.0158589184,-0.0062694284,0.1237162724,-0.1359305233,-0.0494482405,-0.0216390416,0.0570193976,-0.1216506287,-0.158288464,-0.0122632356,0.055099532,-0.0374147706,0.0209341589,-0.082101427,-0.0185687859,-0.2092643082,-0.150652945,0.035076309,-0.1170382053,0.0228011087,-0.2127645165,0.1501600295,-0.1307708174,-0.0244241431,0.0340863727,-0.0947443992,-0.0625875592,0.0241871942,0.0836517736,0.0516140126,0.1115532741,0.0224927552,-0.0845639408,-0.1267971992,0.0107853189,0.020845307,0.0682473704,-0.0344827548,0.0271142572,-0.122902967,0.0353245214,-0.1035278589,0.1883891374,0.0020745113,-0.0046828869,-0.136002779,0.1120254993,0.1577130258,0.0450378358,0.1531050056,0.1069346815,0.2043167055,-0.0838054195,-0.052395232,-0.028489545,-0.071915485,-0.1352321208,0.0635674223,0.0876306742,-0.0331719704,-0.001680828,0.0005061415,-0.1481051743,0.2360544652,0.0151187973,-0.0772151574]],"hackathon_name":"HackSheffield 2.0","index":680,"project_description":"Hype it upDuring our first board meeting we deliberated that there had never really been a good app that allowed you to find local events at any given time. Therefore our vision was to design an app that implemented the simplicity of apps such as SnapChat and Instagram while offering a core functionality that can be used by all.Hype allows users to share events that they are hosting or at already, allowing other users to find and see what's popular in real time. All users are kept totally anonymous so you won't have to worry about privacy concerns.Complex algorithms written in Java and NodeJS are used to calculate the locations of events based on where users 'hype' an area. Dense areas with frequent hypes are ranked above other smaller events that users may not be interested in.None of our team had experience with any of the tools we used before the event. We taught ourselves to use them from scratch and crafted something beautiful out of them.With continued development we intend to add many more features such as social interaction as well as sponsored events.HackSheffield 2.0I did a lot of the back-end work designing the web apis and security that we used for our app. I also spent a lot of time providing round the clock tech-support for the front-end team. I was also up working all night making sure it was perfect for today.I worked on the front-end app development in Android Studio, building the user interface of the app, and I made the graphics (icon and logo).I worked on front-end and design. It was my first experience with stuff like that (Java, XML, Inkscape) and I have learned a lot of new exciting things!I worked on the backend services, helped to solve various issues we encountered using NodeJS. Also helped in design challenges and debugging front-end java code.Brad Sharp\n          posted an update\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 08:53 AM EDTJust presented our product. Best of luck to all other teams.Log in\n      or\n      sign up for Devpost\n      to join the conversation.Brad Sharp\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:48 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hype","project_tags":["node.js","express.js","android","android-studio","google-play","javascript","inkscape"],"project_url":"https:\/\/devpost.com\/software\/hype","keywords":"users,events,hype,used,time,app,find,written,features,deliberated,dense,design,development,event,experience,frequent,first,core,functionality,given"},{"level_0":681,"hack_vector":[[0.1507102251,-0.0976736397,-0.0264745075,0.0515464842,-0.0126448246,0.1333499402,0.1930698305,-0.0325835086,-0.0298258793,0.0060037388,0.018889064,-0.072653681,0.1491048336,-0.0693875477,0.0775962994,-0.014005851,0.197351858,-0.0136576435,0.0481383204,0.1235956922,-0.2415114641,0.0373238176,-0.0499431789,0.0020204324,0.1225974411,-0.0243162755,-0.023803724,-0.1812186837,-0.0206266902,-0.0685597509,0.0663714409,-0.1285815686,0.0251443572,-0.0889931023,-0.0383972526,-0.0202290826,0.1079949141,-0.1435262561,-0.0681965053,-0.0221501905,0.0381914526,-0.1225341633,-0.147504881,-0.0189091545,0.0648713633,-0.0405568592,0.0024438447,-0.0865116045,-0.0119814286,-0.2045145482,-0.1406125873,0.0074611139,-0.1140007973,0.0340210833,-0.1865847111,0.1644191891,-0.1252279729,-0.0157854911,0.0212343149,-0.1049313098,-0.0761124715,0.0207301993,0.0924248472,0.0532402918,0.1077090055,0.0171808191,-0.0918778405,-0.1288666278,0.0331478715,0.0266129524,0.0694147348,-0.0405495763,0.0321613476,-0.1207429767,0.0311044231,-0.1247024238,0.1883927286,0.0054700468,0.0108126458,-0.121756807,0.1349523365,0.1495412886,0.0711405724,0.1543911994,0.1102690324,0.2034289539,-0.0853933543,-0.0506116562,-0.0162004381,-0.0644233972,-0.1540650427,0.0574218258,0.1159967259,-0.0481732748,0.0033160744,-0.0001363744,-0.1462776959,0.2369674593,0.0155004384,-0.0773309991]],"hackathon_name":"HackSheffield 2.0","index":681,"project_description":"Dementia screening tool using Alexa to save time at GP appointments and promote early diagnosis of DementiaAs the aging population of the UK turns into an inverted period, Dementia becomes more and more of a pressing issue. The time consuming nature of Dementia Questionnaires in a time where General Practice Surgeries are constrained with time and resources, promotes need for more efficient way of screening.Removes the need for human interaction to do 20-30 minute questionnaire, saving time for the GP, translated to improved efficiency in services. Questionnaire will be done before GP appointment for annual medication review, Results will be available to be discussed during the GP appointment. It will demonstrate the likely hood\/ risk of having dementia,  promoting GP to conduct detailed clinical examination to confirm diagnosis.Questionnaire written to AWS RDS. Lambda queries RDS and passes questionnaire to Amazon Alexa. Alexa speaks out question and listens to response. and writes response to RDS. Express app on EC2 queries RDS for response and presents result on web app.. (In theory)Setting up a skill (SDK) in Alexa, getting Alexa to Write responses, Java development script and displaying responses on the web page, connecting the different components together in a restricted time frame (everything:P),Managed to overcome some of the challenges faced in untreaded waters. \nFew members of the team were completely unaware of coding and learnt few of the basics of it through the help of the rest of team.\nMeeting new people from different disciplines! \nExploring the different AWS services including Alexa and LambdaSpecific skills - Developing Alexa skills, Using Lambda queries, Using EC 2 API\nImproving knowledge of coding \nThe possibility of self learning any programming language with the the help of google \nUnderstanding the concept of hackathonsComplete building on Minimal Viable Product to fulfill objectives and fit into context \nConcept is transferable to multiple contexts in medicine including other cognitive function questionnaires, Asthma risk assessment questionnaire etc.HackSheffield 2.0front endWorked on Amazon Alexa app,shavinthi Wadanamby\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:54 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Couch Diagnosis","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/couch-diagnosis","keywords":"alexa,time,questionnaire,rds,gp,response,dementia,queries,lambda,different,concept,risk,services,coding,need,skills,challenges,questionnaires,team,responses"},{"level_0":682,"hack_vector":[[0.1531179845,-0.099534817,-0.0257537086,0.0476997606,-0.0292727929,0.1448022425,0.2151123732,-0.0448635407,-0.0289505161,-0.0033941327,0.0054652537,-0.0486026667,0.1416747868,-0.0793651715,0.0509856939,0.0291088298,0.230407685,-0.0068714581,0.0352320187,0.1249893531,-0.2287946343,0.0307620149,-0.0447980464,-0.0223433431,0.1301630586,-0.0074244607,-0.038687773,-0.1744658202,-0.0049591111,-0.0834253505,0.0449147224,-0.1211498678,0.0467422269,-0.0854912177,-0.0353906006,-0.0129932268,0.1320520192,-0.1350598782,-0.0475627817,0.020158736,0.0491433591,-0.1399942935,-0.1598511487,-0.0265920088,0.0514397211,-0.0490065962,0.0147181181,-0.0607716814,-0.0219534058,-0.2039628029,-0.1178144962,0.019233847,-0.107939519,0.0069123507,-0.16839993,0.1565107107,-0.1431728452,-0.0053223004,0.0129736857,-0.0701742619,-0.0623346642,0.020534588,0.0906413421,0.0525419004,0.1299314052,-0.0153789083,-0.1083294079,-0.1392459422,0.037684273,0.0265302695,0.0638117716,-0.0442548096,0.0021531852,-0.1324728578,-0.0004782637,-0.1136659309,0.1838838458,0.013193462,0.0223244168,-0.1381890178,0.1321155578,0.1607813239,0.062287312,0.1622179151,0.1126255319,0.1921569109,-0.1128178239,-0.0056400639,0.0005991839,-0.0931904912,-0.1493936181,0.0655481815,0.093089886,-0.0144617567,0.01762091,-0.0119450083,-0.137548551,0.2206942141,0.0384255983,-0.0616133064]],"hackathon_name":"HackSheffield 2.0","index":682,"project_description":"Alexa based calculatorAlexa is a powerful platform of natural language processing, it has huge potential to free our cerativity, and bring the spark of thinking by talking to us. For engineers and scientists, maths is one of the most important and frequent request we would like to send to alexa.It answers all mathmatical questions and everything which has been stored in the knowledgebaseIt was built with the Amazon Web Service Lamda and incoorperate with Wolfram Alpha API in python. Amazon web service and Alexa skill kit is the backbone of the service.HackSheffield 2.0Zenan Chen\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:56 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Calculator Alpha","project_tags":["amazon-alexa","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/calculating-alexa","keywords":null},{"level_0":683,"hack_vector":[[0.1510015428,-0.1306175888,0.0080441358,0.0638230592,-0.0171092805,0.1531448513,0.1863594204,-0.0546470471,-0.0467886589,-0.014790413,0.0107066436,-0.0318030901,0.140748933,-0.0760800019,0.023877494,0.0584048443,0.2432668805,0.0024368616,0.0565723665,0.117897734,-0.2294529527,0.0279279221,-0.0522954836,-0.027850192,0.1538893878,-0.0376690477,-0.0616452582,-0.1959639192,-0.0173580721,-0.0912913829,0.0712615177,-0.104030028,0.0601465441,-0.0660016164,-0.0359095596,-0.0105731161,0.1258829236,-0.1221818328,-0.0052016568,0.0343998224,0.0560048744,-0.1500321925,-0.1877978444,-0.0424130112,0.0100814765,-0.0562558509,0.0153641058,-0.0432869159,-0.0130696716,-0.2202343196,-0.0711851642,0.0388777927,-0.1089573056,-0.0096137617,-0.1736866534,0.1597721875,-0.1727056056,0.0234190393,0.0026378385,-0.0336157158,-0.0393670201,0.0282925945,0.054501038,0.0593496487,0.1305571347,-0.012812621,-0.1203175187,-0.1540029347,0.0243708491,0.0160595272,0.0721752346,-0.045120772,0.0017984462,-0.1262339354,-0.01731655,-0.0745375529,0.1844918877,0.0009453864,0.0600993037,-0.1411064118,0.1114749908,0.1474457532,0.0353883244,0.1545924246,0.1371601075,0.1996056587,-0.1264068782,-0.0049512004,-0.0126584079,-0.0927090049,-0.1128640771,0.0795301124,0.0623777471,-0.0192367714,0.0038615596,-0.0347710177,-0.1150776222,0.1773061305,0.0711716264,-0.0613509007]],"hackathon_name":"HackSheffield 2.0","index":683,"project_description":"An epic remix of Slenderman, but this time, with the Slender Llamagame elements of Slenderman in mind. Whilst walking around in the world, at night, with a torch, you have to find the carrots that the Slenderllama dropped in order to progress to the next level. (coming soon...).HackSheffield 2.0I worked on the 3D models for the game as well as the thumbnail graphic and the content for the Devpost submissionI created the world, putting scripts and other elements together and aided with AI programmingLewis Brand\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:43 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Slenderllama","project_tags":["blender","unity","c#","javascript"],"project_url":"https:\/\/devpost.com\/software\/slenderllama","keywords":"one,slenderllama,us,time,game,problem,next,proud,meant,first,came,focusing,built,software,blender,get,world,around,unity,using"},{"level_0":684,"hack_vector":[[0.1622672528,-0.128129974,-0.0213352814,0.0698207766,-0.0261572786,0.1510862261,0.1881687194,-0.0458653085,-0.0160786174,-0.0316896774,0.0119755594,-0.0384102352,0.1518684179,-0.0673626363,0.0461849868,0.0044920729,0.2110698372,0.0025885971,0.04912889,0.1168155074,-0.2283256948,0.0273552146,-0.0466537029,-0.0097120572,0.1455670148,-0.0252772979,-0.0377010405,-0.1722391993,-0.0209370069,-0.0952486098,0.0585200414,-0.1247697547,0.0420998633,-0.0681567416,-0.0214204025,-0.0100909201,0.1376741827,-0.1420465112,-0.0562867187,0.0176495761,0.0626181737,-0.1313325465,-0.1502954662,-0.0266569722,0.0237091891,-0.053545665,0.0304601211,-0.0647784919,-0.0376067609,-0.2100658864,-0.1313604116,0.0290345103,-0.1161146015,-0.0043793097,-0.1863522083,0.156750977,-0.1370995045,-0.0100606969,0.020718541,-0.069637917,-0.0696234107,0.030458441,0.0671120659,0.0471205488,0.1180098429,0.0120952502,-0.1193561256,-0.1370514482,0.0066597457,0.0197400395,0.0637035891,-0.0409450531,0.0238120295,-0.131891638,0.008066711,-0.0906796157,0.1994958371,0.0083581712,0.0241630115,-0.1476918161,0.1109695807,0.1653786898,0.0330994874,0.15352121,0.1249280795,0.188591063,-0.1093687564,-0.0195313655,-0.0180115905,-0.0851434395,-0.1240715608,0.0839776173,0.0796782449,-0.0196866635,0.0221099555,-0.0292450748,-0.134076938,0.2346879691,0.0359886624,-0.0571535379]],"hackathon_name":"HackSheffield 2.0","index":684,"project_description":"A game of intrigue, espionage and pirates!Oh, and did we mention that we composed and arranged an entire soundtrack for The Dossier? (A 15 second chip-tune loop, don't get excited.)Last but by no means least, we used HTML, CSS, and PHP to get the online leaderboard up and running.Whilst we don't intend to continue developing The Dossier, we certainly learned a lot from its development, and find it likely that we'll collaborate again on a future project.HackSheffield 2.0I produced all assets in Krita, including character sprites, the background image. The art style was somewhat inspired by Gods Will Be Watching.Will Humphreys\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:52 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"The Dossier","project_tags":["gamemaker","html5","css","google-drive"],"project_url":"https:\/\/devpost.com\/software\/the-dossier","keywords":"game,dossier,us,rather,four,development,video,score,project,leaderboard,learned,character,whilst,designed,developers,make,also,aspects,proved,assets"},{"level_0":685,"hack_vector":[[0.1566886902,-0.1121530607,-0.0321075618,0.0531406514,-0.0216908157,0.1331236362,0.1906286031,-0.0319479182,-0.0151258959,-0.0307155866,-0.0030982061,-0.0564467981,0.1450601071,-0.0636655167,0.0531332418,-0.0251081977,0.184237048,-0.015719464,0.0580183305,0.1351129562,-0.2483566403,0.0149952592,-0.0290446728,0.0096313814,0.1372558773,-0.0199508276,-0.0326847397,-0.1448305994,-0.0233309716,-0.1057817638,0.0568888895,-0.12030036,0.0243008565,-0.0603604838,-0.0070306957,-0.0427913629,0.1177880317,-0.1476385146,-0.0712374076,-0.0077357823,0.0808215514,-0.1239812821,-0.1275408566,-0.0401670337,0.0548663065,-0.0500974804,0.0040928125,-0.0816815123,-0.0260443203,-0.2026277483,-0.1583677679,0.0355570056,-0.1148773804,0.0167653821,-0.2258937657,0.1656167805,-0.1306423694,-0.0344358906,0.0280385427,-0.0998559892,-0.0703473464,0.0198917445,0.0616885312,0.0212085526,0.1099914387,0.038131278,-0.1044560522,-0.1191806048,0.0108593712,0.0400407948,0.0680386797,-0.0403225422,0.01363046,-0.120005019,0.0367454626,-0.0964959189,0.1721681207,0.0077854781,-0.0239921473,-0.1377452761,0.0911512896,0.1463942081,0.0444340706,0.1594304889,0.114115186,0.2184420526,-0.080624193,-0.0422676802,-0.0226167534,-0.0544694066,-0.1252576709,0.066700682,0.1146563888,-0.0294898544,-0.0110082906,0.0026154749,-0.1650064588,0.2615543306,-0.0022061637,-0.0540670007]],"hackathon_name":"HackSheffield 2.0","index":685,"project_description":"Destroy a wall and save two nations in this brand new game with dazzling graphics and intense narrative!After the tragic loss of half our group, we ended up on an entirely new platform (unity) using a hardware that we never had heard of before (leap motion), with a language that neither of us knew (c#). why did we choose this project  if there was virtually no way of it being finished in 24 hours ever? good question. We're not quite sure ourselves. Our initial idea was to build a world thanks to leap motion, shaping it like clay with our own hands. Instead we ended with a political satire. Why create a world when you can effortlessly destroy the walls built by a real-life evil?It's a wall. Which you destroy. With your hands.\nWowWith a lot of pain and boring tutorial videos. We only spent about four hours on it, the rest was mainly learning.Literally all of them. \"the software I've been using for the past three hours was the wrong one\" \"the actual software doesn't want to open properly\" \"there are no online resources for our situation\" \"my computer doesn't work\" \"wait did half of our group casually left five hours in?\" etc etc etcWe built a wall!The... power of friendship? And also the basics of unity, which is a pretty neat program to knowWe believe that our game is truly at the peak of originality and software engineering; There really is no need for further development.(No but really, this weekend was amazing we really enjoyed ourselves :D)HackSheffield 2.0Sonjeet Paul\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:45 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Stomp Trump's wall","project_tags":["unity","c#"],"project_url":"https:\/\/devpost.com\/software\/stomp-trump-s-wall","keywords":"hours,built,software,really,wall,etc,leap,ended,unity,hands,using,destroy,half,group,motion,world,idea,hardware,heard,good"},{"level_0":686,"hack_vector":[[0.1646658182,-0.0819372311,-0.0303573199,0.0569008552,-0.009238706,0.1460126787,0.1986942738,-0.0390841663,-0.0354308747,-0.017333407,0.013577275,-0.072438851,0.1428547204,-0.0704363957,0.0571174808,-0.0296071749,0.2012179494,-0.0057191923,0.052036047,0.126159519,-0.2231643647,0.0278994143,-0.0467069484,0.0100586358,0.1213385984,-0.0187392905,-0.0329699442,-0.1719141603,-0.0530701838,-0.0865652189,0.0701930895,-0.1202461943,0.035668496,-0.0861274227,-0.030627301,-0.0163271055,0.1236803457,-0.128895849,-0.061587818,0.0038955659,0.070975095,-0.1156735718,-0.1479464471,-0.0189231951,0.0705621541,-0.0556540005,0.0181710944,-0.0871149004,-0.0442937836,-0.2211168706,-0.145432204,0.01785581,-0.1069170833,0.0277654808,-0.1930327564,0.1571807414,-0.1342547685,-0.029244598,0.0286211092,-0.1026263833,-0.0690325201,0.0127065564,0.0776844248,0.016922554,0.1223840564,0.0178980585,-0.1051689014,-0.1105491668,0.0131791458,0.0276382193,0.0627812594,-0.0387367196,0.0032977217,-0.12349727,0.0388441309,-0.1029708013,0.1958778799,0.0095051341,0.0051731854,-0.1386372149,0.1164026186,0.1529380679,0.0556331426,0.1497430056,0.1053260863,0.2064518631,-0.0853206664,-0.0468019806,-0.0113388924,-0.0763829276,-0.1528923661,0.0610819571,0.0942251161,-0.02863268,-0.0189237967,-0.0013887655,-0.1511623412,0.2449444383,0.0161685571,-0.0593094341]],"hackathon_name":"HackSheffield 2.0","index":686,"project_description":"A voice based game through Alexa. Escape a goblin infested den.We saw the tool on the GitHub samplesA voice based interactive adventure game. You can input commands for decisions through Alexa.We used an API from Github, and the Alexa skills developer kit.Making the API work (it was not intended for windows 10). Making the save and upload function work (it had very specific rules for working). Uploading it as an Alexa skill, it was a bit confusing at first. We also couldn't create the graphical interface in time. We also couldn't get the audio to work, so right now its can only work by text based utterances to Alexa.We made a game together, even if its not working fullyexpanded on programming knowledge, and how to use Alexa Skills developer. Learned how to deal with problems we come across more effectively.HackSheffield 2.0I installed the API and created the adventure game inside there. I then tried to integrate that into Alexa but while the code is working, the audio isn't.I contributed to the creation of a 3D CAD model in Java using YCAD. However, this was not implemented in the final project.Hon Tang\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:43 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Interactive_adventure_game_through_Alexa_","project_tags":["json","javascript"],"project_url":"https:\/\/devpost.com\/software\/interactive_adventure_game_through_alexa_","keywords":"alexa,work,making,game,working,adventure,also,api,audio,based,developer,github,graphical,interactive,learned,interface,skills,saw,first,expanded"},{"level_0":687,"hack_vector":[[0.1508399695,-0.0915970877,-0.0370223932,0.0384681188,-0.020502815,0.1214755103,0.1800421029,-0.0165451411,-0.0292048156,-0.0198836885,0.0146413688,-0.0864845961,0.1530568451,-0.0712233037,0.074369207,-0.0070267995,0.1892061681,-0.0127477199,0.0470191203,0.1280388981,-0.2365703583,0.0139765693,-0.0491966046,-0.0033668468,0.0995988622,-0.0332977884,-0.0331790112,-0.1591608673,-0.0359013788,-0.0998694003,0.0605807379,-0.106111452,0.0171034727,-0.0757700503,-0.0113149146,-0.0168759897,0.1079051569,-0.1438329965,-0.0717201233,-0.0036405355,0.0549899377,-0.1007253304,-0.1471767724,-0.0061244369,0.0740196556,-0.0648196489,0.0205369145,-0.0951085016,-0.0213280618,-0.2166497409,-0.1607541889,0.013347378,-0.1026414335,0.0133087533,-0.211200878,0.173616007,-0.1134836301,-0.0298948679,0.0375719406,-0.118438907,-0.0775182396,0.025647264,0.0715055466,0.0520545617,0.1174360812,0.032203611,-0.0982335731,-0.11840076,0.0125850458,0.0130808661,0.0699719042,-0.0386570692,0.0057036616,-0.117254585,0.0470615998,-0.1143137142,0.1871020645,0.0011475311,-0.0085983528,-0.1297032386,0.119428046,0.1569442898,0.0577658713,0.1431749761,0.1041441187,0.2077250481,-0.0781488568,-0.0596154816,-0.0235281549,-0.071524404,-0.1489647925,0.0522871241,0.1092619449,-0.0480203405,-0.018286515,0.0075439159,-0.1704793572,0.2561077476,0.0021176408,-0.0729432926]],"hackathon_name":"HackSheffield 2.0","index":687,"project_description":"Financial risk visualiserWe wanted to to be able to ask Amazon's Alexa about the current financial information.It looks up financial information and lists the companies different risk so that someone can get the up-to-date information on the risk and rewards of the companies.We started by learning the different things we could do with Amazon's Alexa however after a few issues we stopped using it and decided to just do the financial information querying on its own. \nWhile learning how to use the Alexa's system we were developing a system that communicated with the BlackRock financial information api. This worked well from the start but we had a lot of companies to sort through ().\nOnce the decision of removing the Alexa Skill from our plan we started developing a web front end that allowed users to request the top x number of companies and list their financial risk.We could not get the Alexa working with our code and we spent a lot of time trying to get things working on it. This reduced the amount of time we had significantly because we though we were close to getting everything working. We still managed to get a visual version of the data produced but it was not the original plan.We have learned that researching as much as possible on new systems quickly and seeing if it is feasible would have helped us out a lot to:\n\u2022 Find how to get our Skill working\n\u2022 That learning multiple languages and getting them to work together on systems we didn't understand was a lot of work.Getting the skill to work and expanding the overall options the user has for requesting the data.HackSheffield 2.0Matthew Holey\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:41 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"FinRisk","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/finrisk","keywords":"get,information,financial,alexa,lot,working,companies,work,skill,learning,getting,risk,different,data,started,system,systems,things,developing,time"},{"level_0":688,"hack_vector":[[0.1370379478,-0.1223444119,-0.0284589417,0.0471551903,-0.0191352721,0.1394495815,0.2148239911,-0.0425371937,-0.0304888505,-0.0044505829,0.0122832432,-0.0514274277,0.1502196193,-0.0789031684,0.0545345619,0.006248984,0.2327101231,-0.0059006526,0.0366190113,0.123816818,-0.2390181422,0.0467817672,-0.0397502519,-0.0113350665,0.1383276135,-0.017931262,-0.0429424196,-0.1804134697,-0.0144192548,-0.0927471742,0.0787398145,-0.1408961713,0.0347546898,-0.0713112876,-0.025473794,-0.027290063,0.1244287789,-0.1327719688,-0.0370023772,-0.0124654872,0.050523553,-0.1500659883,-0.1619618982,-0.0328559466,0.0506341942,-0.0358074009,0.0068433112,-0.0662121475,-0.0295002032,-0.1995436102,-0.1147634313,0.0230978578,-0.0998722687,0.0092261219,-0.1936070025,0.1488879174,-0.1463610977,-0.0205764621,0.0177862626,-0.0831360072,-0.061178714,0.0327631012,0.084414795,0.0415144265,0.1100448817,0.011225339,-0.0955691561,-0.1313897669,0.035866484,0.0357886553,0.0714669973,-0.0445053764,0.0390003361,-0.1187994108,0.0114000663,-0.1176244244,0.1634805799,0.0047256961,0.0228727125,-0.1299834102,0.1317350566,0.1555350125,0.0586674884,0.1761517078,0.1058931276,0.1975818127,-0.1127709076,-0.0365749858,-0.0203760099,-0.0792153254,-0.1330080926,0.0601878464,0.0901630148,-0.0303170457,0.0098435581,0.0064596804,-0.1475913078,0.2080158144,0.0192155354,-0.0669578388]],"hackathon_name":"HackSheffield 2.0","index":688,"project_description":"Mobile collaborative web based bomb defusal multiplayer party gameOn laptop screenWires mini-gamesButtons min-gameThe game called Keep talking and nobody explodes.The game allows multiple players to join with their smartphones and displays a single part of a bomb for each player. A separate main screen displays a live bomb with a burning fuse and defusal instructions. The players have to defuse the bomb by performing correct actions on the correct bomb parts (and by extension - smartphones). They have to succeed before the bomb explodes.We used Node.js to build a server, which we are running on AWS, accessible with a Domain.com domain name: thebombhasbeendefused.com. Both the main display and the smartphones are displaying a web applicaton built mostly in JavaScript.The fact that each smartphone displays another part of the bomb. It required from us to create a server that can manage all those mini-games, sending and responding to different, personalized clients.Working in a two people group is more challening and time consuming than work in a group of four.HackSheffield 2.0\u0141ukasz Niepolski\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:34 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"TheBombHasBeenDefused.com","project_tags":["node.js","javascript","css","html","amazon-web-services","domain"],"project_url":"https:\/\/devpost.com\/software\/thebombhasbeendefused-com","keywords":"bomb,game,create,com,players,displays,smartphones,group,part,correct,games,domain,mini,built,main,server,explodes,thebombhasbeendefused,time,work"},{"level_0":689,"hack_vector":[[0.1424479932,-0.1010923311,-0.0511868969,0.0476801917,-0.0333347209,0.1349435896,0.1859658808,-0.0194112863,-0.0091199921,-0.030892944,0.0139368623,-0.0490174294,0.1355113983,-0.0631361753,0.0649181604,0.0221264586,0.22570391,0.0082551362,0.0377725326,0.1270383894,-0.2354327887,0.0098221367,-0.0499569103,-0.0208434612,0.0973294228,-0.0312802121,-0.0359561369,-0.1751887351,-0.0254279077,-0.0881985575,0.0556299388,-0.1046674177,0.0319978781,-0.0746998936,-0.0147389099,0.004476611,0.1112223715,-0.1325797141,-0.047207091,0.0125595964,0.0375370719,-0.1189787537,-0.1675458997,-0.0244629979,0.0591344275,-0.081802696,0.0248590391,-0.0672718361,-0.0274373088,-0.2288243473,-0.132780537,-0.0053323414,-0.0924317688,-0.0297710877,-0.1905824244,0.1546212435,-0.1203136221,-0.0221820809,0.0419272259,-0.0807044059,-0.0747064799,0.0325906612,0.0745939165,0.0463389419,0.1106283143,0.004155999,-0.1045439914,-0.1386221796,0.0319363549,0.0090313554,0.0661559105,-0.0443013385,0.0067293099,-0.1205252707,-0.0052328254,-0.1201373637,0.1928218603,-0.0006915735,0.0227730833,-0.1455180049,0.1104350835,0.1706474423,0.0347854719,0.181700781,0.0994651094,0.2048764676,-0.1082991809,-0.0208298806,-0.0297321882,-0.094526723,-0.1514065415,0.0749983639,0.0820631534,-0.0294698961,0.0004816449,-0.0044681374,-0.1461300552,0.2415441573,0.0288434736,-0.0841154978]],"hackathon_name":"HackSheffield 2.0","index":689,"project_description":"A web service to calculate how long it will take to watch a particular set of stuff onlineI watch a lot of tv series. I wanted to find out how long it would take me to watch specific sets of movies or shows. I made it for that reasonLets people create playlists and it will calcuate how much time it will take to watch them allbackend in php to communicate with the the omdb api to fetch info about different content online. this is saved in a mysql database and then outputted in html using bootstrap templatetimenot killing people with streess cause time is ana issuehow much i like sleep.I want to integrate with alexa so i can ask it how long it will take me to watch doctor who. actually allow users to sign up and customise their own playlists which they can share with firends.HackSheffield 2.0Chris Wilson\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:32 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"How long to watch","project_tags":["css","javascript","mysql","html5","jquery","linux","mac"],"project_url":"https:\/\/devpost.com\/software\/how-long-to-watch","keywords":"watch,take,long,time,playlists,people,much,firends,doctor,fetch,find,would,html,info,database,inspiration,integrate,issue,different,create"},{"level_0":690,"hack_vector":[[0.1282908767,-0.103132084,-0.0149411513,0.0569191873,-0.0350405127,0.1368017793,0.2026984692,-0.0250609126,-0.0297138579,-0.0286106579,0.0044986513,-0.0394391455,0.1323565245,-0.0721205696,0.044340197,0.0303530134,0.2409686148,0.016925158,0.043795567,0.1176787019,-0.2257909179,0.025429368,-0.0482471697,-0.0335229859,0.1182959527,-0.0124474009,-0.0478131771,-0.1843707561,-0.0100564556,-0.0849566385,0.0572920963,-0.106461972,0.0497352667,-0.0740457475,-0.022249274,0.0045780321,0.1384352297,-0.1288053393,-0.0246978495,0.035810031,0.0430117957,-0.1574544609,-0.1742219627,-0.0416029654,0.0330729857,-0.0727408826,0.0248674899,-0.054444246,-0.0291145109,-0.2302904278,-0.1056559086,0.0173472259,-0.1017220318,-0.0214407053,-0.1686963439,0.1555029154,-0.1575295478,0.0100226281,0.0199300312,-0.060020294,-0.0521701537,0.0360944867,0.0749268308,0.046438694,0.12148045,-0.0176383164,-0.1057061628,-0.1477073431,0.0357105471,0.0112682022,0.0519120507,-0.0483823977,0.0015405733,-0.1298259795,-0.0161746778,-0.1137009636,0.1884985566,0.0158235636,0.0508331433,-0.1536299139,0.1192881167,0.1624980122,0.0490669683,0.1667591184,0.12051671,0.1933376044,-0.1242823377,-0.0003491376,-0.0088786408,-0.1134423688,-0.1376078278,0.0806954578,0.0739427209,-0.020036051,0.0212577991,-0.0252197459,-0.127825737,0.2022695839,0.0445442051,-0.0609911457]],"hackathon_name":"HackSheffield 2.0","index":690,"project_description":"Ever wanted to ask a question to an honest computer? Now you can.HackSheffield projectImplemented an on-line project which consists of a of an question-answering assistant. User types in a question, the assistant then thinks for a few seconds then answers the question. Questions all in natural language, so no need for formatted input.Credits to Webknox for the Q\/A API, which I used from Mashape, and to Voice RSS \u00a9 for their Text-to-Speech API.HackSheffield 2.0I did everything.Alex Mitcu\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 05:43 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Joana - Web Assistant","project_tags":["css","php","html"],"project_url":"https:\/\/devpost.com\/software\/hacksheffield","keywords":"question,api,assistant,project,webknox,mashape,answers,consists,credits,formatted,hacksheffield,implemented,input,language,line,natural,voice,need,questions,rss"},{"level_0":691,"hack_vector":[[0.1620386988,-0.0920941234,-0.0349443592,0.0422988646,-0.0131730549,0.1499971747,0.1950767487,-0.0383409932,-0.0199564956,-0.0143674556,0.0080280332,-0.0838524178,0.1456056982,-0.0754121169,0.054787159,-0.0046264292,0.216639325,0.0058112843,0.0423152447,0.1194284186,-0.2315035909,0.0268562641,-0.0525179245,-0.0085708089,0.116916284,-0.0242839791,-0.0351224691,-0.1783498526,-0.0352361314,-0.093890965,0.0661027804,-0.1333131492,0.0441668816,-0.0855401903,-0.031493254,-0.0174339358,0.1190705895,-0.1382308006,-0.0596040338,0.0019257208,0.0499766208,-0.1186676249,-0.1546065807,-0.0175937433,0.0683986545,-0.063447766,0.0194616653,-0.0751643479,-0.0456805639,-0.2208453566,-0.1474121809,0.0136739025,-0.0974333733,0.0063897492,-0.1768382937,0.1559172571,-0.1206068546,-0.0291552134,0.0223159771,-0.0923945606,-0.0715303719,0.0149881253,0.0793695375,0.0341501124,0.1114403903,0.0091888355,-0.102320686,-0.1194203421,0.0267483275,0.0305419266,0.0744485185,-0.0474446639,0.0161263552,-0.1268702447,0.0257398244,-0.1139034927,0.1916295588,0.0194074158,0.0117621236,-0.1304884106,0.1268613636,0.1542424709,0.0587620065,0.1563254446,0.0994994715,0.1956717968,-0.087128073,-0.0400019698,-0.0146261994,-0.0856671184,-0.1447349787,0.0522767417,0.0900267959,-0.0420887358,-0.0041244091,-0.0065615163,-0.1448883414,0.2435416877,0.0170894358,-0.0828251466]],"hackathon_name":"HackSheffield 2.0","index":691,"project_description":"a event finding application. drawing from local events.it find events nearby pulling information from API's. this would then tell you the information and email the ones that you like back to yourself to research into more depth when you are free or buy the ticket from the linkusing Amazon Lamda and the Echo Alexa. running on node.jssetting up an email returning information was very difficicult as it is not a lot of resources online.having a bare minimum viable product. learning new skills in Amazon lamdalearning Amazon dev skills, and improve ability to read code betterto install full functionality as there was not enough time or resources to complete itHackSheffield 2.0I worked closely on the code logic which directed how Amazon Alexa responded depending on the vocal commands from the user. The positive side-effects of working with Alexa is that I've also learnt a lot about Lambda on AWS and Node.js, technologies I wasn't familiar with before the start of the hack.Steve Belabbas\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:28 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Eventor","project_tags":["node.js","javascript","amazon-alexa","amazon-ses"],"project_url":"https:\/\/devpost.com\/software\/eventor-9whp0l","keywords":"information,amazon,email,lamda,skills,learning,resources,find,enough,eventor,events,full,free,difficicult,functionality,improve,echo,would,dev,inspiration"},{"level_0":692,"hack_vector":[[0.1467137635,-0.0822298378,-0.0346036814,0.0187103618,-0.0070949113,0.1248729602,0.2166433185,-0.016364634,-0.035827186,0.0148510383,0.008413651,-0.1059940234,0.1362999678,-0.0722645223,0.081978038,-0.0002108296,0.1919026822,-0.0082318624,0.0341813006,0.1209129244,-0.2358371913,0.0487715378,-0.0499270298,-0.0160989985,0.1007770821,-0.0271035805,-0.027432207,-0.1809495389,-0.0361614376,-0.0728339031,0.0765896887,-0.127709344,0.0269867573,-0.1021857038,-0.0284590703,-0.0075838752,0.1062519699,-0.1403093934,-0.0664225966,-0.0134573048,0.0319489315,-0.1494881958,-0.1445079893,-0.0222216342,0.0887677968,-0.0478223078,0.0051439372,-0.0945410058,-0.0242350064,-0.2064311504,-0.1615567803,0.0044155079,-0.1078051403,0.026563935,-0.1920544505,0.1542167813,-0.1342406124,-0.0204779934,0.0314368457,-0.1263900548,-0.0766115263,0.0267618615,0.0809127539,0.0550394617,0.1056675762,0.010884786,-0.0897858441,-0.1079716533,0.0345703587,0.0135365529,0.0690916628,-0.0572053306,0.0240964908,-0.1129626408,0.0510699116,-0.1467315406,0.1671706587,-0.0031078367,0.0086018443,-0.119118169,0.138610065,0.1480229497,0.0919188485,0.1515922993,0.0806663707,0.1997287571,-0.078175284,-0.0410002954,0.0014347489,-0.0763897747,-0.1497193724,0.037905205,0.0981137678,-0.0585406423,-0.0084697707,0.0268360451,-0.1609327793,0.2250197828,-0.008616671,-0.070766978]],"hackathon_name":"HackSheffield 2.0","index":692,"project_description":"How nice are you to your friends on Twitter? Now you can visualise your interactions on Twitter!The BBC Twitter account.The MLHack Twitter account.The Durham_Uni account.We wanted to use natural language processing for our project and to make a good project we needed a wealth of data which we collect from Twitter. Once we'd gathered some interesting statistics we wanted to make something pretty!A Twitter user name is given by the user and recent posts from that user are used to create a graph of how positive their messages are.When the Twitter username is submitted a socket is opened.  We use the Twitter API to collect recent posts from that user which are then sent of to Google natural language processing API. The result from this is two metrics called polarity (how positive the message contents is) and magnitude (how strong the language used is) as well as a list of mentions of other Twitter users. This information is then sent via a socket connection back to the user where WebGL is used to graph the results using WebGL (via the ThreeJS library).The nature of the Twitter and Google APIs made it very difficult to pass data between the two and then reunite the results with the original Tweets. Half of the team had never used JS before and none of us had any experience with Web\/OpenGL which was made worse by the lack of documentation for some areas of ThreeJS.Data makes it reliably from Twitter -> Google -> User and does so relatively quickly. Client side drawing of interactive graph looks great! Despite being build quickly the whole project is built in such a way that we could fairly quickly implement other features (see What's next...).WebGL, Javascript, lots about asynchronous connections and more ninja git shell skills!If the socket connections was held open after the initial data is sent then the user's graph could be updated with new posts in (near) real time. We could also allow for the graph to expand beyond one step away from the original user name entered. More animations for the graph using the huge amount of data available to drive pretty (but also insightful) animations.HackSheffield 2.0I worked on the client side WebGL (ThreeJS) layout and rendering of the graph.Worked on wrangling the backend and the Google Cloud API into a form we could use.I worked on working with the twitter api into something useful and the front endPeter Noble\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:24 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"The Twitter Sphere","project_tags":["node.js","three.js","socket.io","javascript","html5","webgl","twitter","express.js","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/the-twitter-sphere","keywords":"user,twitter,graph,data,used,sent,could,quickly,project,posts,socket,language,google,webgl,positive,original,next,pretty,processing,natural"},{"level_0":693,"hack_vector":[[0.153491959,-0.090131104,-0.0303559583,0.0542863198,-0.0207327995,0.1350395381,0.1873746812,-0.0253836736,-0.0134937381,-0.0396415144,0.0072729015,-0.0615222752,0.1352834255,-0.0643341765,0.0469937623,-0.0104830442,0.2028254718,-0.002781579,0.0406546332,0.1325761527,-0.2334936261,0.0090349922,-0.0342297927,-0.0010861864,0.1194244176,-0.0177600849,-0.0230915733,-0.1642117202,-0.0393000096,-0.0945608616,0.0491119027,-0.1125619188,0.0322835706,-0.0721015558,-0.0198741071,-0.0251578689,0.120382838,-0.144320637,-0.0656315908,0.0158008095,0.0676559284,-0.1120830551,-0.142497018,-0.0339938737,0.0674860105,-0.0727431849,0.0210009906,-0.0714596808,-0.0421747975,-0.2278255522,-0.1441946328,0.0090821842,-0.1008757651,0.002253914,-0.2019119561,0.1633524448,-0.1234419346,-0.039186988,0.0288149975,-0.1013613418,-0.072226584,0.0043789702,0.0719851553,0.0123754172,0.1283150613,0.0194010735,-0.1049535573,-0.1211047918,0.0301421341,0.0266896393,0.0581936613,-0.0493825711,-0.0029431309,-0.120957166,0.0245351419,-0.1033906341,0.1861779839,0.0132432217,-0.0007973659,-0.1448420733,0.1064332873,0.1650743484,0.0367500968,0.168760702,0.1029367223,0.2065538168,-0.0969177037,-0.0307194684,-0.0250655413,-0.0828734189,-0.1505264342,0.0693466738,0.0933396295,-0.023926165,-0.0227751862,-0.0080185635,-0.1591495126,0.2567915022,0.0182265807,-0.0628305227]],"hackathon_name":"HackSheffield 2.0","index":693,"project_description":"You and Alexa go head to head in an intense game of wits and rhymesEver wondered what to do on a boring weeknight? Well fear not, as Alexa is here to challenge you to an epic rhyme off!This project allows you to play a rhyming game with Alexa, going back and forth until someone gives in (hint: that's gonna be you). Just start the game and give Alexa a word to use, and she'll handle the rest. Just make sure you've brushed up on your rhymes! Who ever can't think of a rhyme fast enough, or repeats themselves first will be the loser.We build this whole project using node.js and the Amazon Alexa Skills SDK, while also making use of an online rhyming dictionary API.It was a challenge to get Alexa setup and running, and it was even trickier to integrate the functions for the rhyming API into that.We created our first skill for Alexa, which was a very rewarding challenge, and we also managed to have fun while doing it!Practice makes perfect--this event stimulates us to practice coding skills. Although, we are not experts in coding, we like coding and want to learn more in the future. The result does not matter, the process matters much more.Upgrade it to another high-level game-Dragon and Dungeon with Alexa?HackSheffield 2.0Zichen Qi\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:24 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Rhyming Game with Alexa","project_tags":["javascript","alexa","node.js"],"project_url":"https:\/\/devpost.com\/software\/rhyming-game","keywords":"alexa,game,rhyming,coding,challenge,rhyme,skills,practice,first,project,use,also,ever,api,fun,fear,fast,experts,forth,word"},{"level_0":694,"hack_vector":[[0.144766286,-0.0875201523,-0.0353568867,0.0388114341,-0.0270239543,0.1136790588,0.1824513674,-0.0030958948,-0.0125595368,-0.0305479318,0.0140772853,-0.0767254606,0.1480064839,-0.0583259687,0.0701146349,-0.0121426294,0.1898990422,-0.0152644496,0.0347633958,0.1417982876,-0.2499992102,0.0058932016,-0.037649028,0.0039692931,0.0983144268,-0.0316923484,-0.0218022782,-0.1474137455,-0.0316329524,-0.1031249166,0.0566830114,-0.0953124613,0.0097284652,-0.0667748004,-0.0009179302,-0.0217851214,0.1102911979,-0.1493799984,-0.0722852424,-0.0097969295,0.0550631583,-0.1036771908,-0.1349547356,-0.0254727416,0.0824886039,-0.0738441944,0.0121746473,-0.0943771079,-0.0193266813,-0.2180905044,-0.1634822637,0.0071319984,-0.1010719985,0.0068101482,-0.2265569717,0.1668295413,-0.1137637123,-0.04992529,0.049010206,-0.1253491342,-0.0811446905,0.0207706504,0.0732627437,0.02842905,0.1113687828,0.0329351537,-0.0876669437,-0.1207514629,0.0216034371,0.0215925016,0.0580924749,-0.0410866253,0.0050642909,-0.1091209054,0.0348236598,-0.1206616014,0.1775522083,-0.0003866363,-0.0210142676,-0.1339051723,0.1018275395,0.1624434143,0.0357786603,0.1536224484,0.0941383839,0.2129328847,-0.0852485597,-0.0515573025,-0.0396360233,-0.0709847882,-0.1509442776,0.0612804927,0.099866882,-0.0379958525,-0.0294799097,0.0231052283,-0.1750416756,0.2646321356,0.0001275448,-0.0657640845]],"hackathon_name":"HackSheffield 2.0","index":694,"project_description":"A voice-based skill for Amazon\u00b4s Alexa designed to help you find the right degree for you.Listening to Alexa we started to think about her potential and tried to come up with a problem for her to solve. We thought back to a couple of years ago for us when we were trying to decide what degree to apply to at University. This proved to be a very difficult choice, as it is for many, and we thought Alexa might be able to help people with that choice in the future.The Degree Finder asks you a set of questions and tries to understand what you enjoy and your personality. Through these inferences Alexa suggests a degree she thinks will be right for you!We used a \"decision-tree\" template to begin to understand how Alexa worked and built from it a small program in javascript that has a total of 16 different Degrees at the end of it.Understanding Alexa was our biggest challenge. We tried a few different ideas and simply could not get her to do what we wanted. Once we finally got an example program working we found an idea that we could adapt to that program and worked from there.Being able to solve our problems that had us stuck for around 6 hours and create a working program, even a simple one, that actually runs on Alexa. We are also very proud of our idea because we think it could be something that could make an impact with future students if developed further.This was our first hackathon so we learned what is fully involved in one and how much fun it can be. We also learned a bit of javascript from messing around with the code and how to deal with problems in a stressful situation.If it could be expanded to over many more degrees and ask many more specific questions we believe it could go on to help future students make their decision an easier one in the future.HackSheffield 2.0I created the programming base of the skill, and make it work with Alexa (after 6h of trying) and I participated in the questions and answers part as well.I added to many of the descriptions of the degrees and worked on doubling the number of degrees she could cover.Borja Leiva\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:22 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"The Degree Finder","project_tags":["javascript"],"project_url":"https:\/\/devpost.com\/software\/the-degree-finder-iz6vdy","keywords":null},{"level_0":695,"hack_vector":[[0.1557508707,-0.1159076914,-0.0131666437,0.0554608032,-0.0207335968,0.1525671482,0.194089368,-0.0484583266,-0.0225319918,-0.024703281,0.0116832694,-0.0452478193,0.1484736502,-0.0749543011,0.0303591173,0.0293108653,0.2238124162,0.0073155994,0.0502343252,0.1231162548,-0.2313264608,0.0238259528,-0.0490905605,-0.0189836416,0.1466119885,-0.0305344947,-0.0464157425,-0.1781748086,-0.0206681583,-0.0947819874,0.0578405559,-0.119499445,0.0575652458,-0.0605860688,-0.0237129536,-0.0169319492,0.1357170492,-0.1363069564,-0.0343423933,0.0190030355,0.0617435314,-0.1427618414,-0.1695409715,-0.0411332175,0.0251425467,-0.0630143136,0.0222543441,-0.0576828495,-0.0285785571,-0.21358715,-0.1095994636,0.0280384347,-0.1121068224,-0.0037405151,-0.1871697605,0.1641901881,-0.1571114361,-0.0067116842,0.0193017814,-0.0619296022,-0.0552076288,0.0154258888,0.0673825741,0.0435982421,0.1216122881,0.0065972186,-0.1107175499,-0.1439944953,0.0296699777,0.0296668541,0.0725003183,-0.0512649007,0.0089879176,-0.12692298,0.0071965549,-0.0909004956,0.1848521829,0.0064513874,0.0315696336,-0.140815258,0.1035112217,0.1541628242,0.0399292223,0.1599336267,0.1181137264,0.1938377619,-0.1202219874,-0.022718614,-0.0156666655,-0.090595983,-0.1263057441,0.0713905394,0.0720304251,-0.0292025674,0.0035415222,-0.0281936042,-0.1379517764,0.2127435505,0.046048183,-0.0687361583]],"hackathon_name":"HackSheffield 2.0","index":695,"project_description":"A follow the wire challenge using  LEAP MotionA preview of the game windowthe main bit of code, though point.js was later incorporated into main.js. They are split here for demonstrative clarity.Points are assigned based on the color you are on, with the most points gained for being on the black, fewer for the orange, and points are lost in the red. Using your pointer finger as a controller through the LEAP Motion, the code is designed to detect the color the circle is on. This is barely alpha; in future versions I would like to fine tune the color detector, make the image larger and more complex, and add movement and time requirements.HackSheffield 2.0I had tons (or tonnes I suppose, for you Brits) of fun learning and using Javascript and HTML5 for the first time ever. I am also very proud that I managed to complete this on my own after a sudden change in teammates.Kai Barclay\n          posted an update\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:45 AM EDTMultiple people well versed in JavaScript have reviewed this code and have not been able to determine why an incorrect color is typically returned. If you look at this code and have any insight, please contact me.Log in\n      or\n      sign up for Devpost\n      to join the conversation.Kai Barclay\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 05:39 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"WirePath","project_tags":["javascript","html","shell"],"project_url":"https:\/\/devpost.com\/software\/leap-maze","keywords":"leap,points,color,motion,using,code,would,finished,finger,fine,fewer,detector,detect,designed,controller,completely,complex,future,circle,challenge"},{"level_0":696,"hack_vector":[[0.1340633929,-0.1075048298,-0.0147400703,0.0608771332,-0.0279323999,0.1347520649,0.1999647766,-0.0226607751,-0.0390089937,-0.0190893728,0.0161574446,-0.0503805503,0.1516426355,-0.0756875798,0.0549458228,0.0256219693,0.2283256203,0.0044248533,0.0525640398,0.1327490509,-0.2325395197,0.0334280655,-0.0540239811,-0.0203945376,0.1333944947,-0.0259138998,-0.0527381822,-0.1855073869,-0.0171710793,-0.0855880007,0.060207434,-0.1174518168,0.0400455818,-0.069596231,-0.0141136013,-0.0047531538,0.1329694241,-0.1285372078,-0.040247336,0.0075619677,0.0518794246,-0.1494594216,-0.1732884943,-0.0343257487,0.035824798,-0.0543199889,0.0181264468,-0.0656787381,-0.0091137215,-0.2136123031,-0.1043076664,0.019384576,-0.1046476737,-0.000736856,-0.1929429322,0.1587518752,-0.1529041976,0.0002153795,0.0288951509,-0.0787301883,-0.0583102666,0.0370716415,0.0742192939,0.0555949509,0.1161735728,0.0055188043,-0.0955959558,-0.1531236619,0.0368692726,0.0113815451,0.0638560355,-0.0437023677,0.0144555792,-0.1180807203,0.0038916178,-0.1082827821,0.1794594228,-0.0022615455,0.0393861085,-0.1355990916,0.1095105112,0.1539866626,0.0613402911,0.1550870836,0.1184945032,0.1928135157,-0.1138502434,-0.0300171841,-0.0181353409,-0.0964525938,-0.1370465308,0.0696085989,0.086082153,-0.0335977934,0.013772551,-0.0148166791,-0.1466608047,0.2151048928,0.0405124836,-0.0678452253]],"hackathon_name":"HackSheffield 2.0","index":696,"project_description":"Proof of concept for an embedded qr code scanner to display the related websiteIdea on the fly at half 10 this morning.The camera scans a qr code and embeds an image of the related website over the top of the camera image.OpenCV, Awesomium and lots of coffee.We wanted a live browser to be embedded over the top of the camera image. We also wanted the embedded page to have a three 3D effect moving with the user. These became unobtainable due to time constraints.Learnt how to install and begin to understand Linux, while another member has now been converted to Linux.Waiting for technology to catch up. Implementation of above ideas and hololens technology.HackSheffield 2.0Richard Mann\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 05:53 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Qr Ar Overlay","project_tags":["c++"],"project_url":"https:\/\/devpost.com\/software\/qr-ar-overlay","keywords":"image,camera,top,qr,embedded,technology,linux,wanted,fly,constraints,half,embeds,hololens,idea,effect,due,converted,website,coffee,ideas"},{"level_0":697,"hack_vector":[[0.1548726708,-0.1106527597,-0.0303700287,0.0462203771,-0.0295471493,0.1358570755,0.191075474,-0.0214009024,-0.0080343783,-0.0306819603,0.0053323903,-0.0618804321,0.1395907253,-0.0616546161,0.062644355,0.0069494387,0.2070455998,0.0102528436,0.045179829,0.1227101833,-0.2397556156,0.0204118397,-0.0416693613,-0.0232291333,0.1039086059,-0.0305783674,-0.0316230021,-0.1711539626,-0.0278951786,-0.0964754373,0.0559684485,-0.1133463904,0.0323402807,-0.0737722516,-0.0158048682,-0.0203087982,0.1204517409,-0.1433962882,-0.0623588376,0.0065141036,0.052716814,-0.1281825304,-0.1486088187,-0.0407758877,0.0573397689,-0.0747629702,0.0255460739,-0.072775498,-0.0350684896,-0.2195801884,-0.1464360505,0.0137470551,-0.1051233262,-0.0158765242,-0.1969181597,0.1633192301,-0.1196049675,-0.0332322717,0.0382168181,-0.0797991976,-0.0685132518,0.0125522055,0.0664149001,0.0341941379,0.1081335917,0.0124730794,-0.1029051319,-0.1243556961,0.0248104129,0.0216253716,0.0672817677,-0.0524940789,0.0029232791,-0.1246444285,0.0142532801,-0.1172766611,0.182269603,0.0135026928,0.004833017,-0.1495389938,0.1076013148,0.1693560332,0.0342705995,0.1698393822,0.1099492237,0.2073127627,-0.0968423933,-0.0231976975,-0.0157656688,-0.0884499326,-0.1374757439,0.0660087839,0.0866155028,-0.0327581577,-0.0080533437,-0.0112588042,-0.1574994624,0.2454396486,0.0129042892,-0.0798982158]],"hackathon_name":"HackSheffield 2.0","index":697,"project_description":"Check if ticket barriers are open at UK stationsThe Trainline app introduced a new feature a while ago where it asks you whether there are any free seats on the train that you're on. I thought it would be an interesting idea to do something similar for ticket barriers at stations.It's a Telegram (similar to WhatsApp) bot which checks whether ticket barriers are open at stations based on user data. Go and chat to it to find out the commands.Started out wanting it to be a Messenger bot, but ended up using Telegram instead. It's written in Node.js and stores all its data in Redis. I found the data for all the station codes online - somebody managed to get access to the National Rail API and just dumped all the data.Messenger bots are required to be approved. There's no way they'd approve this! So I switched to Telegram.I keep learning new cool things about Redis! Most people only use it as a cache of some sort, but I'm loving it as my primary data store. I quite enjoy working around its limitations.Messenger platform, for all the hype surrounding it, is actually a bit rubbish.I'd really like to incorporate some kind of ML to learn which stations usually have their barriers open at a specific time of day. I think it would also be cool to work in some natural language processing so that conversations with the bot become a bit more human.HackSheffield 2.0Scott Street\n          posted an update\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 05:46 AM EDTCheck out code here.Log in\n      or\n      sign up for Devpost\n      to join the conversation.Scott Street\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 05:36 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Gatesopen","project_tags":["node.js","redis","telegram"],"project_url":"https:\/\/devpost.com\/software\/gatesopen","keywords":"data,stations,telegram,bot,messenger,barriers,cool,new,similar,open,redis,ticket,bit,whether,would,incorporate,keep,js,enjoy,feature"},{"level_0":698,"hack_vector":[[0.1455454826,-0.0897801891,-0.0372151732,0.0268843453,-0.0205012746,0.1258608252,0.2039565742,-0.0256759059,-0.0135911535,-0.0090338318,0.0214758981,-0.0721060261,0.1357645839,-0.0554588735,0.0880112424,-0.01215271,0.2045175582,-0.0033237739,0.0329880565,0.125008449,-0.2364361882,0.0392626189,-0.0448478647,-0.0122068124,0.0879883841,-0.0236096513,-0.0126833236,-0.1784293503,-0.0366951339,-0.0860020444,0.0704531372,-0.1232596561,0.0255229268,-0.1010528728,-0.0179795697,-0.0223790966,0.1072271392,-0.1382977366,-0.0760754496,-0.0188157093,0.0315509774,-0.1301374435,-0.1388705373,-0.0345714502,0.0825901181,-0.0588687696,0.0147470962,-0.0844444633,-0.0338014774,-0.2055816203,-0.1549905241,-0.0070678238,-0.1051363423,0.0028247917,-0.1965841204,0.1534010172,-0.1166321635,-0.0363552086,0.0483628772,-0.1165515408,-0.0800296888,0.0140459323,0.0902038366,0.0308957752,0.0976376534,0.0121318223,-0.1005886272,-0.1125203073,0.0409119949,0.0265153479,0.0631448776,-0.0494314991,0.0255197678,-0.1173616573,0.0263094641,-0.1544194967,0.1752806306,0.0063246242,0.0047146804,-0.1307988167,0.1217133254,0.1612867564,0.0598316528,0.172844559,0.0957446545,0.1938772798,-0.09353856,-0.0422321595,-0.014808082,-0.0836505964,-0.1585551351,0.0549097396,0.105361186,-0.0436992347,-0.0146516832,0.0110009657,-0.1607417613,0.2356083542,-0.0042826431,-0.0768728629]],"hackathon_name":"HackSheffield 2.0","index":698,"project_description":"An Alexa skill that empathises with human emotions and improves them for the better.JSON ResponseJSON ResponseJSON ResponseBots are often looked upon as manifestations of silicon devices that 'mimic' human characteristics. A characteristic a lot of assistants\/bots lack is the ability to empathise with human emotions. The idea was to be able to comprehend emotion and help improve it for the better\/be a little mischievous.Alexa asks you how you are feeling and based on your reply, shares a joke\/song\/anecdote\/image\/story with you, which 'ideally' should change your mood from the one you are in, to a target mood, like happiness or cheerfulness. It does so by picking curated data from popular websites such as Reddit, Quora and 9GAG. Using these websites keeps the content relevant and fresh.I built it using AWS and Node.jsPlaying an audio file returned an error of endpoint not being found. So I had to fall back on textual music suggestions. Moreover, the documentation on sending cards to the amazon app was relatively vague, hence making it difficult to implement an image send.Getting AWS to work. Earlier, it turned out to be such a pain, that my team had to disband. implementing a random sort function with zero bias, making each relevant content suggestion equally possible of being showed to the user.Javascript promises and callback, AWS - Lambda Function, running tests using Mocha and Chai, using request-promiseI intend to make moodbot detect various variations of the same emotion so that it can map to relevant content. I also intend to make moodbot play music samples and send memes to the user's phone to make them smile\/amuse them. Given sufficient time and skills, I think getting it to detect subtle language nuances would be another goal, thereby making it provide relevant content without the user explicitly instructing it to.HackSheffield 2.0Aayush  Chadha\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 05:21 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"moodbot","project_tags":["node.js","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/moodbot","keywords":null},{"level_0":699,"hack_vector":[[0.1620386988,-0.0920941234,-0.0349443592,0.0422988646,-0.0131730549,0.1499971747,0.1950767487,-0.0383409932,-0.0199564956,-0.0143674556,0.0080280332,-0.0838524178,0.1456056982,-0.0754121169,0.054787159,-0.0046264292,0.216639325,0.0058112843,0.0423152447,0.1194284186,-0.2315035909,0.0268562641,-0.0525179245,-0.0085708089,0.116916284,-0.0242839791,-0.0351224691,-0.1783498526,-0.0352361314,-0.093890965,0.0661027804,-0.1333131492,0.0441668816,-0.0855401903,-0.031493254,-0.0174339358,0.1190705895,-0.1382308006,-0.0596040338,0.0019257208,0.0499766208,-0.1186676249,-0.1546065807,-0.0175937433,0.0683986545,-0.063447766,0.0194616653,-0.0751643479,-0.0456805639,-0.2208453566,-0.1474121809,0.0136739025,-0.0974333733,0.0063897492,-0.1768382937,0.1559172571,-0.1206068546,-0.0291552134,0.0223159771,-0.0923945606,-0.0715303719,0.0149881253,0.0793695375,0.0341501124,0.1114403903,0.0091888355,-0.102320686,-0.1194203421,0.0267483275,0.0305419266,0.0744485185,-0.0474446639,0.0161263552,-0.1268702447,0.0257398244,-0.1139034927,0.1916295588,0.0194074158,0.0117621236,-0.1304884106,0.1268613636,0.1542424709,0.0587620065,0.1563254446,0.0994994715,0.1956717968,-0.087128073,-0.0400019698,-0.0146261994,-0.0856671184,-0.1447349787,0.0522767417,0.0900267959,-0.0420887358,-0.0041244091,-0.0065615163,-0.1448883414,0.2435416877,0.0170894358,-0.0828251466]],"hackathon_name":"HackSheffield 2.0","index":699,"project_description":"a event finding application. drawing from local events.it find events nearby pulling information from API's. this would then tell you the information and email the ones that you like back to yourself to research into more depth when you are free or buy the ticket from the linkusing Amazon Lamda and the Echo Alexa. running on node.jssetting up an email returning information was very difficicult as it is not a lot of resources online.having a bare minimum viable product. learning new skills in Amazon lamdalearning Amazon dev skills, and improve ability to read code betterto install full functionality as there was not enough time or resources to complete itHackSheffield 2.0I worked closely on the code logic which directed how Amazon Alexa responded depending on the vocal commands from the user. The positive side-effects of working with Alexa is that I've also learnt a lot about Lambda on AWS and Node.js, technologies I wasn't familiar with before the start of the hack.Steve Belabbas\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:28 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Eventor","project_tags":["node.js","javascript","amazon-alexa","amazon-ses"],"project_url":"https:\/\/devpost.com\/software\/eventor-9whp0l","keywords":"information,amazon,email,lamda,skills,learning,resources,find,enough,eventor,events,full,free,difficicult,functionality,improve,echo,would,dev,inspiration"},{"level_0":700,"hack_vector":[[0.1467137635,-0.0822298378,-0.0346036814,0.0187103618,-0.0070949113,0.1248729602,0.2166433185,-0.016364634,-0.035827186,0.0148510383,0.008413651,-0.1059940234,0.1362999678,-0.0722645223,0.081978038,-0.0002108296,0.1919026822,-0.0082318624,0.0341813006,0.1209129244,-0.2358371913,0.0487715378,-0.0499270298,-0.0160989985,0.1007770821,-0.0271035805,-0.027432207,-0.1809495389,-0.0361614376,-0.0728339031,0.0765896887,-0.127709344,0.0269867573,-0.1021857038,-0.0284590703,-0.0075838752,0.1062519699,-0.1403093934,-0.0664225966,-0.0134573048,0.0319489315,-0.1494881958,-0.1445079893,-0.0222216342,0.0887677968,-0.0478223078,0.0051439372,-0.0945410058,-0.0242350064,-0.2064311504,-0.1615567803,0.0044155079,-0.1078051403,0.026563935,-0.1920544505,0.1542167813,-0.1342406124,-0.0204779934,0.0314368457,-0.1263900548,-0.0766115263,0.0267618615,0.0809127539,0.0550394617,0.1056675762,0.010884786,-0.0897858441,-0.1079716533,0.0345703587,0.0135365529,0.0690916628,-0.0572053306,0.0240964908,-0.1129626408,0.0510699116,-0.1467315406,0.1671706587,-0.0031078367,0.0086018443,-0.119118169,0.138610065,0.1480229497,0.0919188485,0.1515922993,0.0806663707,0.1997287571,-0.078175284,-0.0410002954,0.0014347489,-0.0763897747,-0.1497193724,0.037905205,0.0981137678,-0.0585406423,-0.0084697707,0.0268360451,-0.1609327793,0.2250197828,-0.008616671,-0.070766978]],"hackathon_name":"HackSheffield 2.0","index":700,"project_description":"How nice are you to your friends on Twitter? Now you can visualise your interactions on Twitter!The BBC Twitter account.The MLHack Twitter account.The Durham_Uni account.We wanted to use natural language processing for our project and to make a good project we needed a wealth of data which we collect from Twitter. Once we'd gathered some interesting statistics we wanted to make something pretty!A Twitter user name is given by the user and recent posts from that user are used to create a graph of how positive their messages are.When the Twitter username is submitted a socket is opened.  We use the Twitter API to collect recent posts from that user which are then sent of to Google natural language processing API. The result from this is two metrics called polarity (how positive the message contents is) and magnitude (how strong the language used is) as well as a list of mentions of other Twitter users. This information is then sent via a socket connection back to the user where WebGL is used to graph the results using WebGL (via the ThreeJS library).The nature of the Twitter and Google APIs made it very difficult to pass data between the two and then reunite the results with the original Tweets. Half of the team had never used JS before and none of us had any experience with Web\/OpenGL which was made worse by the lack of documentation for some areas of ThreeJS.Data makes it reliably from Twitter -> Google -> User and does so relatively quickly. Client side drawing of interactive graph looks great! Despite being build quickly the whole project is built in such a way that we could fairly quickly implement other features (see What's next...).WebGL, Javascript, lots about asynchronous connections and more ninja git shell skills!If the socket connections was held open after the initial data is sent then the user's graph could be updated with new posts in (near) real time. We could also allow for the graph to expand beyond one step away from the original user name entered. More animations for the graph using the huge amount of data available to drive pretty (but also insightful) animations.HackSheffield 2.0I worked on the client side WebGL (ThreeJS) layout and rendering of the graph.Worked on wrangling the backend and the Google Cloud API into a form we could use.I worked on working with the twitter api into something useful and the front endPeter Noble\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:24 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"The Twitter Sphere","project_tags":["node.js","three.js","socket.io","javascript","html5","webgl","twitter","express.js","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/the-twitter-sphere","keywords":"user,twitter,graph,data,used,sent,could,quickly,project,posts,socket,language,google,webgl,positive,original,next,pretty,processing,natural"},{"level_0":701,"hack_vector":[[0.153491959,-0.090131104,-0.0303559583,0.0542863198,-0.0207327995,0.1350395381,0.1873746812,-0.0253836736,-0.0134937381,-0.0396415144,0.0072729015,-0.0615222752,0.1352834255,-0.0643341765,0.0469937623,-0.0104830442,0.2028254718,-0.002781579,0.0406546332,0.1325761527,-0.2334936261,0.0090349922,-0.0342297927,-0.0010861864,0.1194244176,-0.0177600849,-0.0230915733,-0.1642117202,-0.0393000096,-0.0945608616,0.0491119027,-0.1125619188,0.0322835706,-0.0721015558,-0.0198741071,-0.0251578689,0.120382838,-0.144320637,-0.0656315908,0.0158008095,0.0676559284,-0.1120830551,-0.142497018,-0.0339938737,0.0674860105,-0.0727431849,0.0210009906,-0.0714596808,-0.0421747975,-0.2278255522,-0.1441946328,0.0090821842,-0.1008757651,0.002253914,-0.2019119561,0.1633524448,-0.1234419346,-0.039186988,0.0288149975,-0.1013613418,-0.072226584,0.0043789702,0.0719851553,0.0123754172,0.1283150613,0.0194010735,-0.1049535573,-0.1211047918,0.0301421341,0.0266896393,0.0581936613,-0.0493825711,-0.0029431309,-0.120957166,0.0245351419,-0.1033906341,0.1861779839,0.0132432217,-0.0007973659,-0.1448420733,0.1064332873,0.1650743484,0.0367500968,0.168760702,0.1029367223,0.2065538168,-0.0969177037,-0.0307194684,-0.0250655413,-0.0828734189,-0.1505264342,0.0693466738,0.0933396295,-0.023926165,-0.0227751862,-0.0080185635,-0.1591495126,0.2567915022,0.0182265807,-0.0628305227]],"hackathon_name":"HackSheffield 2.0","index":701,"project_description":"You and Alexa go head to head in an intense game of wits and rhymesEver wondered what to do on a boring weeknight? Well fear not, as Alexa is here to challenge you to an epic rhyme off!This project allows you to play a rhyming game with Alexa, going back and forth until someone gives in (hint: that's gonna be you). Just start the game and give Alexa a word to use, and she'll handle the rest. Just make sure you've brushed up on your rhymes! Who ever can't think of a rhyme fast enough, or repeats themselves first will be the loser.We build this whole project using node.js and the Amazon Alexa Skills SDK, while also making use of an online rhyming dictionary API.It was a challenge to get Alexa setup and running, and it was even trickier to integrate the functions for the rhyming API into that.We created our first skill for Alexa, which was a very rewarding challenge, and we also managed to have fun while doing it!Practice makes perfect--this event stimulates us to practice coding skills. Although, we are not experts in coding, we like coding and want to learn more in the future. The result does not matter, the process matters much more.Upgrade it to another high-level game-Dragon and Dungeon with Alexa?HackSheffield 2.0Zichen Qi\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:24 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Rhyming Game with Alexa","project_tags":["javascript","alexa","node.js"],"project_url":"https:\/\/devpost.com\/software\/rhyming-game","keywords":"alexa,game,rhyming,coding,challenge,rhyme,skills,practice,first,project,use,also,ever,api,fun,fear,fast,experts,forth,word"},{"level_0":702,"hack_vector":[[0.144766286,-0.0875201523,-0.0353568867,0.0388114341,-0.0270239543,0.1136790588,0.1824513674,-0.0030958948,-0.0125595368,-0.0305479318,0.0140772853,-0.0767254606,0.1480064839,-0.0583259687,0.0701146349,-0.0121426294,0.1898990422,-0.0152644496,0.0347633958,0.1417982876,-0.2499992102,0.0058932016,-0.037649028,0.0039692931,0.0983144268,-0.0316923484,-0.0218022782,-0.1474137455,-0.0316329524,-0.1031249166,0.0566830114,-0.0953124613,0.0097284652,-0.0667748004,-0.0009179302,-0.0217851214,0.1102911979,-0.1493799984,-0.0722852424,-0.0097969295,0.0550631583,-0.1036771908,-0.1349547356,-0.0254727416,0.0824886039,-0.0738441944,0.0121746473,-0.0943771079,-0.0193266813,-0.2180905044,-0.1634822637,0.0071319984,-0.1010719985,0.0068101482,-0.2265569717,0.1668295413,-0.1137637123,-0.04992529,0.049010206,-0.1253491342,-0.0811446905,0.0207706504,0.0732627437,0.02842905,0.1113687828,0.0329351537,-0.0876669437,-0.1207514629,0.0216034371,0.0215925016,0.0580924749,-0.0410866253,0.0050642909,-0.1091209054,0.0348236598,-0.1206616014,0.1775522083,-0.0003866363,-0.0210142676,-0.1339051723,0.1018275395,0.1624434143,0.0357786603,0.1536224484,0.0941383839,0.2129328847,-0.0852485597,-0.0515573025,-0.0396360233,-0.0709847882,-0.1509442776,0.0612804927,0.099866882,-0.0379958525,-0.0294799097,0.0231052283,-0.1750416756,0.2646321356,0.0001275448,-0.0657640845]],"hackathon_name":"HackSheffield 2.0","index":702,"project_description":"A voice-based skill for Amazon\u00b4s Alexa designed to help you find the right degree for you.Listening to Alexa we started to think about her potential and tried to come up with a problem for her to solve. We thought back to a couple of years ago for us when we were trying to decide what degree to apply to at University. This proved to be a very difficult choice, as it is for many, and we thought Alexa might be able to help people with that choice in the future.The Degree Finder asks you a set of questions and tries to understand what you enjoy and your personality. Through these inferences Alexa suggests a degree she thinks will be right for you!We used a \"decision-tree\" template to begin to understand how Alexa worked and built from it a small program in javascript that has a total of 16 different Degrees at the end of it.Understanding Alexa was our biggest challenge. We tried a few different ideas and simply could not get her to do what we wanted. Once we finally got an example program working we found an idea that we could adapt to that program and worked from there.Being able to solve our problems that had us stuck for around 6 hours and create a working program, even a simple one, that actually runs on Alexa. We are also very proud of our idea because we think it could be something that could make an impact with future students if developed further.This was our first hackathon so we learned what is fully involved in one and how much fun it can be. We also learned a bit of javascript from messing around with the code and how to deal with problems in a stressful situation.If it could be expanded to over many more degrees and ask many more specific questions we believe it could go on to help future students make their decision an easier one in the future.HackSheffield 2.0I created the programming base of the skill, and make it work with Alexa (after 6h of trying) and I participated in the questions and answers part as well.I added to many of the descriptions of the degrees and worked on doubling the number of degrees she could cover.Borja Leiva\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:22 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"The Degree Finder","project_tags":["javascript"],"project_url":"https:\/\/devpost.com\/software\/the-degree-finder-iz6vdy","keywords":null},{"level_0":703,"hack_vector":[[0.1557508707,-0.1159076914,-0.0131666437,0.0554608032,-0.0207335968,0.1525671482,0.194089368,-0.0484583266,-0.0225319918,-0.024703281,0.0116832694,-0.0452478193,0.1484736502,-0.0749543011,0.0303591173,0.0293108653,0.2238124162,0.0073155994,0.0502343252,0.1231162548,-0.2313264608,0.0238259528,-0.0490905605,-0.0189836416,0.1466119885,-0.0305344947,-0.0464157425,-0.1781748086,-0.0206681583,-0.0947819874,0.0578405559,-0.119499445,0.0575652458,-0.0605860688,-0.0237129536,-0.0169319492,0.1357170492,-0.1363069564,-0.0343423933,0.0190030355,0.0617435314,-0.1427618414,-0.1695409715,-0.0411332175,0.0251425467,-0.0630143136,0.0222543441,-0.0576828495,-0.0285785571,-0.21358715,-0.1095994636,0.0280384347,-0.1121068224,-0.0037405151,-0.1871697605,0.1641901881,-0.1571114361,-0.0067116842,0.0193017814,-0.0619296022,-0.0552076288,0.0154258888,0.0673825741,0.0435982421,0.1216122881,0.0065972186,-0.1107175499,-0.1439944953,0.0296699777,0.0296668541,0.0725003183,-0.0512649007,0.0089879176,-0.12692298,0.0071965549,-0.0909004956,0.1848521829,0.0064513874,0.0315696336,-0.140815258,0.1035112217,0.1541628242,0.0399292223,0.1599336267,0.1181137264,0.1938377619,-0.1202219874,-0.022718614,-0.0156666655,-0.090595983,-0.1263057441,0.0713905394,0.0720304251,-0.0292025674,0.0035415222,-0.0281936042,-0.1379517764,0.2127435505,0.046048183,-0.0687361583]],"hackathon_name":"HackSheffield 2.0","index":703,"project_description":"A follow the wire challenge using  LEAP MotionA preview of the game windowthe main bit of code, though point.js was later incorporated into main.js. They are split here for demonstrative clarity.Points are assigned based on the color you are on, with the most points gained for being on the black, fewer for the orange, and points are lost in the red. Using your pointer finger as a controller through the LEAP Motion, the code is designed to detect the color the circle is on. This is barely alpha; in future versions I would like to fine tune the color detector, make the image larger and more complex, and add movement and time requirements.HackSheffield 2.0I had tons (or tonnes I suppose, for you Brits) of fun learning and using Javascript and HTML5 for the first time ever. I am also very proud that I managed to complete this on my own after a sudden change in teammates.Kai Barclay\n          posted an update\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 06:45 AM EDTMultiple people well versed in JavaScript have reviewed this code and have not been able to determine why an incorrect color is typically returned. If you look at this code and have any insight, please contact me.Log in\n      or\n      sign up for Devpost\n      to join the conversation.Kai Barclay\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 05:39 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"WirePath","project_tags":["javascript","html","shell"],"project_url":"https:\/\/devpost.com\/software\/leap-maze","keywords":"leap,points,color,motion,using,code,would,finished,finger,fine,fewer,detector,detect,designed,controller,completely,complex,future,circle,challenge"},{"level_0":704,"hack_vector":[[0.1340633929,-0.1075048298,-0.0147400703,0.0608771332,-0.0279323999,0.1347520649,0.1999647766,-0.0226607751,-0.0390089937,-0.0190893728,0.0161574446,-0.0503805503,0.1516426355,-0.0756875798,0.0549458228,0.0256219693,0.2283256203,0.0044248533,0.0525640398,0.1327490509,-0.2325395197,0.0334280655,-0.0540239811,-0.0203945376,0.1333944947,-0.0259138998,-0.0527381822,-0.1855073869,-0.0171710793,-0.0855880007,0.060207434,-0.1174518168,0.0400455818,-0.069596231,-0.0141136013,-0.0047531538,0.1329694241,-0.1285372078,-0.040247336,0.0075619677,0.0518794246,-0.1494594216,-0.1732884943,-0.0343257487,0.035824798,-0.0543199889,0.0181264468,-0.0656787381,-0.0091137215,-0.2136123031,-0.1043076664,0.019384576,-0.1046476737,-0.000736856,-0.1929429322,0.1587518752,-0.1529041976,0.0002153795,0.0288951509,-0.0787301883,-0.0583102666,0.0370716415,0.0742192939,0.0555949509,0.1161735728,0.0055188043,-0.0955959558,-0.1531236619,0.0368692726,0.0113815451,0.0638560355,-0.0437023677,0.0144555792,-0.1180807203,0.0038916178,-0.1082827821,0.1794594228,-0.0022615455,0.0393861085,-0.1355990916,0.1095105112,0.1539866626,0.0613402911,0.1550870836,0.1184945032,0.1928135157,-0.1138502434,-0.0300171841,-0.0181353409,-0.0964525938,-0.1370465308,0.0696085989,0.086082153,-0.0335977934,0.013772551,-0.0148166791,-0.1466608047,0.2151048928,0.0405124836,-0.0678452253]],"hackathon_name":"HackSheffield 2.0","index":704,"project_description":"Proof of concept for an embedded qr code scanner to display the related websiteIdea on the fly at half 10 this morning.The camera scans a qr code and embeds an image of the related website over the top of the camera image.OpenCV, Awesomium and lots of coffee.We wanted a live browser to be embedded over the top of the camera image. We also wanted the embedded page to have a three 3D effect moving with the user. These became unobtainable due to time constraints.Learnt how to install and begin to understand Linux, while another member has now been converted to Linux.Waiting for technology to catch up. Implementation of above ideas and hololens technology.HackSheffield 2.0Richard Mann\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 05:53 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Qr Ar Overlay","project_tags":["c++"],"project_url":"https:\/\/devpost.com\/software\/qr-ar-overlay","keywords":"image,camera,top,qr,embedded,technology,linux,wanted,fly,constraints,half,embeds,hololens,idea,effect,due,converted,website,coffee,ideas"},{"level_0":705,"hack_vector":[[0.1548726708,-0.1106527597,-0.0303700287,0.0462203771,-0.0295471493,0.1358570755,0.191075474,-0.0214009024,-0.0080343783,-0.0306819603,0.0053323903,-0.0618804321,0.1395907253,-0.0616546161,0.062644355,0.0069494387,0.2070455998,0.0102528436,0.045179829,0.1227101833,-0.2397556156,0.0204118397,-0.0416693613,-0.0232291333,0.1039086059,-0.0305783674,-0.0316230021,-0.1711539626,-0.0278951786,-0.0964754373,0.0559684485,-0.1133463904,0.0323402807,-0.0737722516,-0.0158048682,-0.0203087982,0.1204517409,-0.1433962882,-0.0623588376,0.0065141036,0.052716814,-0.1281825304,-0.1486088187,-0.0407758877,0.0573397689,-0.0747629702,0.0255460739,-0.072775498,-0.0350684896,-0.2195801884,-0.1464360505,0.0137470551,-0.1051233262,-0.0158765242,-0.1969181597,0.1633192301,-0.1196049675,-0.0332322717,0.0382168181,-0.0797991976,-0.0685132518,0.0125522055,0.0664149001,0.0341941379,0.1081335917,0.0124730794,-0.1029051319,-0.1243556961,0.0248104129,0.0216253716,0.0672817677,-0.0524940789,0.0029232791,-0.1246444285,0.0142532801,-0.1172766611,0.182269603,0.0135026928,0.004833017,-0.1495389938,0.1076013148,0.1693560332,0.0342705995,0.1698393822,0.1099492237,0.2073127627,-0.0968423933,-0.0231976975,-0.0157656688,-0.0884499326,-0.1374757439,0.0660087839,0.0866155028,-0.0327581577,-0.0080533437,-0.0112588042,-0.1574994624,0.2454396486,0.0129042892,-0.0798982158]],"hackathon_name":"HackSheffield 2.0","index":705,"project_description":"Check if ticket barriers are open at UK stationsThe Trainline app introduced a new feature a while ago where it asks you whether there are any free seats on the train that you're on. I thought it would be an interesting idea to do something similar for ticket barriers at stations.It's a Telegram (similar to WhatsApp) bot which checks whether ticket barriers are open at stations based on user data. Go and chat to it to find out the commands.Started out wanting it to be a Messenger bot, but ended up using Telegram instead. It's written in Node.js and stores all its data in Redis. I found the data for all the station codes online - somebody managed to get access to the National Rail API and just dumped all the data.Messenger bots are required to be approved. There's no way they'd approve this! So I switched to Telegram.I keep learning new cool things about Redis! Most people only use it as a cache of some sort, but I'm loving it as my primary data store. I quite enjoy working around its limitations.Messenger platform, for all the hype surrounding it, is actually a bit rubbish.I'd really like to incorporate some kind of ML to learn which stations usually have their barriers open at a specific time of day. I think it would also be cool to work in some natural language processing so that conversations with the bot become a bit more human.HackSheffield 2.0Scott Street\n          posted an update\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 05:46 AM EDTCheck out code here.Log in\n      or\n      sign up for Devpost\n      to join the conversation.Scott Street\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 05:36 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Gatesopen","project_tags":["node.js","redis","telegram"],"project_url":"https:\/\/devpost.com\/software\/gatesopen","keywords":"data,stations,telegram,bot,messenger,barriers,cool,new,similar,open,redis,ticket,bit,whether,would,incorporate,keep,js,enjoy,feature"},{"level_0":706,"hack_vector":[[0.1455454826,-0.0897801891,-0.0372151732,0.0268843453,-0.0205012746,0.1258608252,0.2039565742,-0.0256759059,-0.0135911535,-0.0090338318,0.0214758981,-0.0721060261,0.1357645839,-0.0554588735,0.0880112424,-0.01215271,0.2045175582,-0.0033237739,0.0329880565,0.125008449,-0.2364361882,0.0392626189,-0.0448478647,-0.0122068124,0.0879883841,-0.0236096513,-0.0126833236,-0.1784293503,-0.0366951339,-0.0860020444,0.0704531372,-0.1232596561,0.0255229268,-0.1010528728,-0.0179795697,-0.0223790966,0.1072271392,-0.1382977366,-0.0760754496,-0.0188157093,0.0315509774,-0.1301374435,-0.1388705373,-0.0345714502,0.0825901181,-0.0588687696,0.0147470962,-0.0844444633,-0.0338014774,-0.2055816203,-0.1549905241,-0.0070678238,-0.1051363423,0.0028247917,-0.1965841204,0.1534010172,-0.1166321635,-0.0363552086,0.0483628772,-0.1165515408,-0.0800296888,0.0140459323,0.0902038366,0.0308957752,0.0976376534,0.0121318223,-0.1005886272,-0.1125203073,0.0409119949,0.0265153479,0.0631448776,-0.0494314991,0.0255197678,-0.1173616573,0.0263094641,-0.1544194967,0.1752806306,0.0063246242,0.0047146804,-0.1307988167,0.1217133254,0.1612867564,0.0598316528,0.172844559,0.0957446545,0.1938772798,-0.09353856,-0.0422321595,-0.014808082,-0.0836505964,-0.1585551351,0.0549097396,0.105361186,-0.0436992347,-0.0146516832,0.0110009657,-0.1607417613,0.2356083542,-0.0042826431,-0.0768728629]],"hackathon_name":"HackSheffield 2.0","index":706,"project_description":"An Alexa skill that empathises with human emotions and improves them for the better.JSON ResponseJSON ResponseJSON ResponseBots are often looked upon as manifestations of silicon devices that 'mimic' human characteristics. A characteristic a lot of assistants\/bots lack is the ability to empathise with human emotions. The idea was to be able to comprehend emotion and help improve it for the better\/be a little mischievous.Alexa asks you how you are feeling and based on your reply, shares a joke\/song\/anecdote\/image\/story with you, which 'ideally' should change your mood from the one you are in, to a target mood, like happiness or cheerfulness. It does so by picking curated data from popular websites such as Reddit, Quora and 9GAG. Using these websites keeps the content relevant and fresh.I built it using AWS and Node.jsPlaying an audio file returned an error of endpoint not being found. So I had to fall back on textual music suggestions. Moreover, the documentation on sending cards to the amazon app was relatively vague, hence making it difficult to implement an image send.Getting AWS to work. Earlier, it turned out to be such a pain, that my team had to disband. implementing a random sort function with zero bias, making each relevant content suggestion equally possible of being showed to the user.Javascript promises and callback, AWS - Lambda Function, running tests using Mocha and Chai, using request-promiseI intend to make moodbot detect various variations of the same emotion so that it can map to relevant content. I also intend to make moodbot play music samples and send memes to the user's phone to make them smile\/amuse them. Given sufficient time and skills, I think getting it to detect subtle language nuances would be another goal, thereby making it provide relevant content without the user explicitly instructing it to.HackSheffield 2.0Aayush  Chadha\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 16, 2016 05:21 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"moodbot","project_tags":["node.js","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/moodbot","keywords":null},{"level_0":707,"hack_vector":[[0.1363635659,-0.1350639462,0.0071073137,0.0668584928,-0.0562349148,0.1540597677,0.1675079167,-0.046889998,-0.0334104858,-0.0276459698,-0.0072914162,0.0218160935,0.1300804168,-0.0772582218,-0.0046220771,0.0936235189,0.2791301906,0.0388575159,0.0433513783,0.0984989405,-0.1917601675,0.0030742164,-0.0440497063,-0.0538164601,0.1748274714,-0.0138754854,-0.0743767768,-0.1803939044,0.0318807177,-0.0965974256,0.0320367105,-0.0948015153,0.0766193718,-0.0505287461,-0.0275747553,0.0085478127,0.1464744806,-0.1020195633,0.0147273671,0.0768110454,0.0430150256,-0.1515666544,-0.1908649206,-0.0432767048,-0.0383547209,-0.0643621758,0.035428945,0.0011240182,-0.007032834,-0.1967762113,-0.0285348464,0.0429581217,-0.10152179,-0.0718786493,-0.1187240705,0.1655663103,-0.1578715891,0.0634840876,-0.0087824436,0.0364168547,-0.0076487898,0.0349400342,0.0416986942,0.0812359452,0.1366431266,-0.0429757796,-0.132284984,-0.1860101968,0.0241252147,0.0054478087,0.0724291801,-0.0312157627,-0.016359197,-0.1342504323,-0.0651841089,-0.066717729,0.1844874471,0.0143998126,0.1007525623,-0.1459046453,0.0992447361,0.1555645913,0.0186539274,0.1525107771,0.1514266282,0.1597080976,-0.1546899527,0.0477864482,-0.0052087954,-0.1206685677,-0.0851156116,0.097668536,0.0270438269,0.0120434901,0.0650566891,-0.070383057,-0.0781417936,0.1505292654,0.1057217866,-0.0645256191]],"hackathon_name":"Hack The Bubble","index":707,"project_description":"Pokemon go for the world wide webSearch the web for all your favourite staff\/STACS members! \nCollect them all!lHack The BubbleFinlay\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 08, 2016 03:44 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Pokemon Surf","project_tags":["chrome","python"],"project_url":"https:\/\/devpost.com\/software\/pokemon-surf","keywords":"web,staff,stacs,search,members,favourite,collect"},{"level_0":708,"hack_vector":[[0.1577475667,-0.1370354295,-0.0157091785,0.0656681284,-0.0193264671,0.1566825062,0.1969687045,-0.0511734895,-0.0246254429,-0.0132305929,0.0209189653,-0.0296057705,0.1486864686,-0.0656702369,0.0428527333,0.0075457226,0.2230208814,-0.0000396544,0.0485054217,0.1139779985,-0.2378828824,0.0330090486,-0.0310128089,-0.0118165687,0.1526201814,-0.031506408,-0.0332850479,-0.1897769421,-0.0185128339,-0.0861787349,0.0795303583,-0.1247633621,0.0421794914,-0.0727556497,-0.0246384069,-0.0290405583,0.1204912364,-0.1379841715,-0.0444490388,0.0049903481,0.060106229,-0.1479467601,-0.1540380418,-0.036883235,0.0357857198,-0.0255956408,0.0117302705,-0.0529532433,-0.0278385431,-0.2071841359,-0.114463523,0.0210845061,-0.1136874929,-0.0073120417,-0.1961727589,0.1511019021,-0.1405010968,-0.0040514711,0.0271101352,-0.0691279098,-0.0567530133,0.0228985306,0.07068979,0.0390271842,0.1138197854,0.0149436099,-0.1091445535,-0.1342545748,0.0276165828,0.0243832618,0.0655805394,-0.0412395746,0.032541167,-0.1290448606,-0.0091070971,-0.1128149182,0.1812315434,0.0019909353,0.0331144966,-0.1333006024,0.1198779568,0.1559127122,0.0320826061,0.1763720661,0.1257270575,0.2013222128,-0.1094259843,-0.0126104234,-0.0220030602,-0.0779684409,-0.1237890795,0.0824091285,0.0793994665,-0.0296825673,0.0150487302,-0.019038409,-0.1287618726,0.2103966475,0.0365227386,-0.0533463806]],"hackathon_name":"Hack The Bubble","index":708,"project_description":"A Hugh Grant at St Andrews inspired funny video gameMenuGame screenshotGame screenshotGame screenshotSt Andrews and Hugh Grant related storyA Hugh Grant character has to run and avoid obstacles through the city of St Andrews. This game entertains the masses with near infinite replayability  and its whimsical nature.We used javascript, CSS, html and GIMP picture editing tool to create and host fully working video game project.Making characters and animations to do the right tasks.Our program works as planned. The project is successfulIf you collaborate with your teammates and work non-stop for couple of hours, projects will eventually reach their final state.Add more levels, create a wider user interface and change places, characters (an option to play as a prince William).Hack The BubbleWe collaboratively designed the game.Had the original thought of Hugh for the starring role, worked on asset creation and assisted with technical faultsMantas Ska\u010dkauskas\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 08, 2016 03:36 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Grant Pub Hunt","project_tags":["javascript","css","html5","jquery","gimp"],"project_url":"https:\/\/devpost.com\/software\/grant-pub-hunt","keywords":"grant,characters,hugh,st,project,create,game,andrews,inspiration,infinite,hunt,fully,interface,html,hours,javascript,learned,host,levels,gimp"},{"level_0":709,"hack_vector":[[0.1823014021,-0.1707645208,-0.0006795157,0.08641693,-0.0264822859,0.1632306129,0.1813955158,-0.0673422739,-0.0322631001,-0.019164674,0.0101323873,0.0037051616,0.1407431662,-0.0625486299,0.0217088591,0.0183539931,0.2246353924,0.0120767914,0.0628293231,0.0919112712,-0.2240415663,0.0320806019,-0.0407220274,-0.0228435248,0.1678895056,-0.031921532,-0.0515404791,-0.18725954,-0.0096257702,-0.0923038498,0.0632626042,-0.1281471848,0.0599928349,-0.0530082658,-0.0317525975,-0.0252018478,0.1313380301,-0.1260990053,-0.0315209851,0.032710705,0.0789806917,-0.1523083597,-0.1621393114,-0.0532484539,-0.0149477515,-0.0300516523,0.0282131396,-0.0335431844,-0.0365563184,-0.1895779073,-0.0811418891,0.0404499322,-0.1224284396,-0.0112370523,-0.1609040648,0.1464417875,-0.1492909938,0.0107564116,0.0081777852,-0.0103521207,-0.0477570742,0.0205982085,0.0522672124,0.038381815,0.117427744,-0.0036463772,-0.1418684423,-0.1426022351,0.0022487463,0.0328786671,0.073128961,-0.0416370928,0.0265858769,-0.1387389898,-0.022623172,-0.0911347941,0.1871820241,0.0265639927,0.0586482175,-0.1413895637,0.1141965687,0.1562949717,0.0063957362,0.1679369807,0.1511892974,0.1941221803,-0.1281624436,0.0096485596,-0.0093332073,-0.092900306,-0.0879007727,0.1049825922,0.0521806702,-0.012366157,0.0361965001,-0.0570911765,-0.1060078293,0.1968075037,0.0637386516,-0.0502348393]],"hackathon_name":"Hack The Bubble","index":709,"project_description":"A St Andrews themed infinite runnerBased on \"I wanna be the guy\" and \"temple run\", but also St Andrews themed - red gownJump over golf clubs and thrown non-harmful golf balls at touristsPieced together bits as we went along in a really disorganised fashioneverythingWe submitted a working game on time2d game programming, Java graphics\/JFrameBackground music, background image, duck under birds, collect coins, leaderboards, menu system, multiplayerHack The BubbleJosh Wood\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 08, 2016 03:59 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"The Pier Run","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/the-pier-run","keywords":"background,golf,game,run,working,collect,image,harmful,guy,graphics,gown,fashion,everything,duck,disorganised,coins,java,clubs,challenges,built"},{"level_0":710,"hack_vector":[[0.1439046115,-0.1553581953,0.0234502759,0.0941469818,-0.0598067828,0.1618733108,0.1617684513,-0.0460671298,-0.0338232629,-0.0262194946,-0.0128942477,0.0483526811,0.1290655136,-0.0728052333,-0.0171498079,0.1092677191,0.2655787766,0.0531029999,0.0451937094,0.0753362328,-0.1729523242,-0.0056513115,-0.0556466207,-0.0698420331,0.1782353073,-0.0187963229,-0.0849656463,-0.1756303459,0.0359903015,-0.0761474892,0.022068236,-0.075838834,0.0835962668,-0.0385769717,-0.0464251824,0.0263955202,0.1431708336,-0.0930422917,0.027149763,0.1122744009,0.0506522022,-0.1406194866,-0.1857900769,-0.0380845107,-0.0616695322,-0.0563139878,0.0529018939,0.018983366,-0.0117407041,-0.1746761054,0.0009431567,0.0380915552,-0.1039741039,-0.074717164,-0.0711725876,0.1479670703,-0.1575491577,0.0886058658,-0.0252924189,0.0781452954,-0.0036982875,0.0402370058,0.0301740281,0.0821505412,0.1436987072,-0.0607453734,-0.1325462312,-0.1821167469,0.0076150699,-0.0086236019,0.0560228899,-0.0249000099,-0.0312337112,-0.1362488717,-0.0999464914,-0.0364410654,0.191923514,0.0310911797,0.1086381152,-0.1451253593,0.0979572907,0.1545410156,-0.005882523,0.1146646366,0.1613364369,0.1530483067,-0.1494154334,0.0894230977,0.0095364163,-0.1268654615,-0.0680148751,0.1210455224,-0.0046224771,0.0413952433,0.0870660394,-0.1065159589,-0.0398372896,0.1286943853,0.1331401467,-0.0357731692]],"hackathon_name":"Hack The Bubble","index":710,"project_description":"Like Dodgeball, with more spaceHack The BubblePeter Morton\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 08, 2016 03:58 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Space DodgeBall","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/hackthebubble2016","keywords":"space,hackthebubble"},{"level_0":711,"hack_vector":[[0.1414398402,-0.1270823777,0.0093804076,0.0729625672,-0.0418086909,0.1507309377,0.1975903064,-0.0592001416,-0.0541235246,0.0000901889,-0.0061894669,0.0019990846,0.1514603496,-0.0989620015,0.0011753163,0.0784874931,0.2665278316,0.0212872569,0.044294972,0.1026231125,-0.1845465302,0.0373348333,-0.0596300103,-0.036821764,0.1863941848,-0.0186378472,-0.0804475993,-0.1806260943,0.0197236519,-0.0662472993,0.0416113101,-0.1120322719,0.0819172636,-0.0501221456,-0.0522299409,0.020558564,0.1623291224,-0.1026452035,0.0123725897,0.0601299219,0.0382597037,-0.1577549428,-0.1894399673,-0.0116823129,-0.0188239049,-0.0384229012,0.0343844108,-0.0244905297,0.0003071906,-0.188025564,-0.0386407673,0.0358260274,-0.1090159565,-0.0191703457,-0.1139722317,0.1390366554,-0.1766629815,0.0694311485,-0.0225038417,0.0139467698,-0.0146419127,0.0476922505,0.0685761422,0.0765490755,0.1321795583,-0.0525990352,-0.1088789776,-0.1709014624,0.0230738334,0.0068835048,0.0674490631,-0.0303466506,0.0019868007,-0.1373723447,-0.0432757512,-0.0689597949,0.1903488189,0.0023706947,0.089966625,-0.1376454234,0.1308647841,0.1495962143,0.0504094176,0.142371133,0.1436638981,0.1525506228,-0.1500532925,0.0347536616,0.0081896055,-0.1311247647,-0.1094855145,0.0866096914,0.0434282236,0.0133138178,0.0787232369,-0.0738066211,-0.0786870942,0.1491806954,0.1111621037,-0.0557890497]],"hackathon_name":"Hack The Bubble","index":711,"project_description":"an anonymous message boardsHack The BubbleCreation of the javascript server, solr server and communication between the two. Plus communication between the javascript server and the clientoscar Portabales\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 08, 2016 03:59 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Saintboard","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/saintboard-9hnwir","keywords":"saintboard,ran,proud,next,learned,inspiration,challenges,built,accomplishments"},{"level_0":712,"hack_vector":[[0.1707397699,-0.1441872865,-0.0170194935,0.0812785998,-0.0158862751,0.1636078358,0.1906415075,-0.0455018319,-0.0464943647,-0.0198058262,-0.0264076572,-0.0162747484,0.1285531074,-0.0693660676,0.0078166127,0.0343906358,0.2352797687,0.0196748208,0.056621775,0.1118148267,-0.2323531657,0.0204258636,-0.0304917935,-0.0204077754,0.1772524416,-0.0190306157,-0.0643290505,-0.1850514859,-0.0087685259,-0.0813277215,0.0617416799,-0.1328563541,0.0597664341,-0.0466055535,-0.0416099392,-0.0183350202,0.1370663494,-0.1238995716,-0.0066880784,0.0543014221,0.0783883184,-0.1652202308,-0.1796275973,-0.0514500476,0.0060622524,-0.0458216257,0.0146145392,-0.0393089578,-0.0297762696,-0.2133899033,-0.055115521,0.0271903668,-0.1006812602,-0.0141653223,-0.1637564003,0.1644077897,-0.1620213985,0.0263160262,-0.0145683317,-0.0046698442,-0.0409076847,0.022713054,0.0469966307,0.0315339267,0.1379810274,-0.0145496158,-0.1305340379,-0.1519825161,0.0345198996,0.0361057408,0.082488358,-0.0440481156,0.0050470587,-0.1322196722,-0.0292417482,-0.0808950737,0.172968924,0.0198904108,0.0684635714,-0.1301852763,0.1076536179,0.1475677639,0.0278270841,0.1682578176,0.1319438517,0.1895524263,-0.1185859665,0.0220391024,-0.0057190773,-0.097930029,-0.1000091434,0.0895238742,0.0496699773,-0.0215447508,0.0248834025,-0.0335809328,-0.102892451,0.1859777719,0.0687180683,-0.0438913777]],"hackathon_name":"Hack The Bubble","index":712,"project_description":"A game made at a hackathon about making games at a hackathon. It's Meta.This Hackathon!Play a bunch of minigames about running the hackathon!\n(Read the readme on github for the full story!)In Python, using pygameGraphical bugs on the central game, moved to a text based styleLots of game-specific python skillsHackathon tycoon 2.0 - the metametaHack The BubbleSamuel Bunce\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 08, 2016 03:56 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HackathonTycoon","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/hackathontycoon-oeux6v","keywords":"hackathon,game,python,github,learned,inspiration,hackathontycoon,graphical,using,metameta,full,challenges,central,bunch,built,bugs,lots,minigames,tycoon,moved"},{"level_0":713,"hack_vector":[[0.1450687349,-0.0965568796,-0.0206815675,0.0522868782,-0.0227646083,0.1398409903,0.1957181692,-0.0277443603,-0.0341912732,-0.0063637733,0.0141309975,-0.0609977692,0.1389245391,-0.0716799721,0.066234149,0.0110428361,0.2110794187,-0.000744333,0.0497908443,0.1204970628,-0.2331811041,0.0284990408,-0.0479160026,-0.020305533,0.1230787486,-0.0276761781,-0.0307881497,-0.1932974905,-0.0267625526,-0.0731025264,0.0653304458,-0.1170027927,0.0339396745,-0.0824664459,-0.0315856077,0.0025896491,0.1159462035,-0.1307417452,-0.0499478616,0.0223455355,0.0429733731,-0.1338142455,-0.1655592471,-0.0295093153,0.0384775661,-0.0665886328,0.0172508154,-0.0710922927,-0.0119347861,-0.2210269719,-0.127628386,0.0109056057,-0.1163032502,0.003573447,-0.1857707053,0.1708322167,-0.1526450813,0.0046126302,0.0183683746,-0.0800138861,-0.0633807033,0.031221427,0.0673055053,0.0610808246,0.1314155012,0.0046308013,-0.1048069596,-0.1339106262,0.0237055253,-0.0006111759,0.0606901906,-0.0413967147,0.005766999,-0.1243559048,0.026420733,-0.1076284349,0.1957864016,0.0020651177,0.0313376486,-0.1424266398,0.1283104569,0.1606466174,0.0638826489,0.1535793394,0.1150356457,0.2023706883,-0.0975352675,-0.0185919814,-0.0044167424,-0.08361312,-0.1391745806,0.0624262914,0.0877013728,-0.0335448422,0.003589351,-0.0112440288,-0.1481316835,0.2159404606,0.0328453369,-0.0734353736]],"hackathon_name":"Hack The Bubble","index":713,"project_description":"Everything you need to know before coming to St Andrews.Before coming to St Andrews, we didn't have much information about what to expect - especially the different types of accommodation.Displays reviews for the university accommodation - written today by real first year students.\nAlso displays distances from the halls to different places in townWe wrote it in Java, using the Google APIs for maps and calendar integration and Java Swing for GUIThe GUI turned out to be too complex to get working in the end so the program was left as a command line applicationGathering data using google forms\nImporting this data into the program\nIntegrating google mapsHack The BubbleI developed a system to run Google distance matrix and Google calendar integration into our system to make calculations and updating events far easier.Callum Hutchison\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 08, 2016 03:55 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"The Unofficial Guide to St Andrews - Freshers Edition","project_tags":["java","google-distance-matrix","google-calendar"],"project_url":"https:\/\/devpost.com\/software\/the-unofficial-guide-to-st-andrews-freshers-edition","keywords":"google,gui,java,maps,program,displays,different,accommodation,data,using,end,get,gathering,forms,first,accomplishments,expect,especially,also,built"},{"level_0":714,"hack_vector":[[0.1438218206,-0.1572150886,0.0061565051,0.0820229575,-0.0544054173,0.1517625302,0.1771248132,-0.039987389,-0.0338349082,-0.032875549,-0.0081383847,0.0364355333,0.1245873198,-0.0766389444,-0.0047153719,0.0903156996,0.2720793486,0.0459726863,0.0445489623,0.0882063657,-0.1934656352,0.0050619063,-0.0450768098,-0.0696996525,0.1573383659,-0.0165543482,-0.0788196921,-0.1798114628,0.0310667045,-0.0904294252,0.0236909986,-0.0955906808,0.0771201178,-0.0464740135,-0.0331706926,0.0127556287,0.1425496936,-0.1020418555,0.0105851786,0.0967582613,0.0519515462,-0.1496034861,-0.1864444911,-0.0434248857,-0.0412741676,-0.0592985302,0.052691564,0.0024006162,-0.0204546098,-0.1837513298,-0.0195977185,0.0305007845,-0.1001436859,-0.0709927455,-0.0958528072,0.1474762857,-0.1519064307,0.0663621053,-0.0090739019,0.0482638478,-0.0163838491,0.0422339402,0.0447879955,0.0745278969,0.1394955814,-0.0487121865,-0.1368458867,-0.1759964228,0.0177635141,0.0013996284,0.0615604557,-0.03289463,-0.0181230027,-0.1403968781,-0.079774119,-0.0721877515,0.1860259473,0.0322615877,0.1049820855,-0.1469106227,0.1115304083,0.1657350957,0.0027297516,0.1437779367,0.1542444974,0.156658411,-0.1499380916,0.0723801628,0.0040162276,-0.1309611201,-0.0814748406,0.1117263511,0.0143888108,0.0237706546,0.0766636133,-0.09108679,-0.0702215508,0.1387575418,0.1106261164,-0.0425489396]],"hackathon_name":"Hack The Bubble","index":714,"project_description":"A translator from treble cleft sheet music to much simpler guitar tab.User InterfaceOutputBlankHack The BubbleJordan Mackie\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 08, 2016 03:53 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Stave to Tab","project_tags":["java","netbeans"],"project_url":"https:\/\/devpost.com\/software\/stave-to-tab","keywords":"blank"},{"level_0":715,"hack_vector":[[0.1469702572,-0.1515619457,0.028273277,0.0998055935,-0.050640434,0.1622947305,0.149287045,-0.0553069301,-0.0420066603,-0.0322593302,-0.0146728931,0.0487925336,0.1224328801,-0.0782673359,-0.0343998298,0.1084245741,0.2632482946,0.0497536846,0.0548893251,0.0694884881,-0.1619853675,0.004646901,-0.0494017787,-0.0721305683,0.1791668385,-0.0196931865,-0.0894422084,-0.1798023731,0.0325028785,-0.0698833466,0.0157588739,-0.079549402,0.0951585695,-0.0358224809,-0.0434706435,0.0282472,0.1520614326,-0.0875199884,0.0292594805,0.1211445853,0.0581708103,-0.1487813145,-0.1937601417,-0.0345594883,-0.0738802254,-0.0477277935,0.0512869358,0.0129760792,-0.0121006127,-0.1735514998,0.0057148929,0.0491272584,-0.1013787687,-0.0706267804,-0.0681571066,0.140511483,-0.1594234556,0.0905525014,-0.0230682846,0.0821575746,-0.0001829395,0.0342387259,0.0341195427,0.0805260241,0.1507195085,-0.060554903,-0.1396233737,-0.1831424534,0.0035018844,-0.0008475414,0.068268314,-0.0321458615,-0.0300872214,-0.1424618959,-0.0902616605,-0.0331977941,0.1896867454,0.0267318264,0.1202530488,-0.1380402148,0.1029998288,0.1437834799,-0.0030511962,0.1184079796,0.1561551243,0.1402221918,-0.1512982845,0.0860770643,0.0151892677,-0.1288453639,-0.059986867,0.1111984029,-0.0128768953,0.0321601257,0.0886414275,-0.1136121005,-0.037218906,0.1173027381,0.1380906105,-0.0383110233]],"hackathon_name":"Hack The Bubble","index":715,"project_description":"Hack the bubble 2016On PPHack The BubbleLan2u\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 08, 2016 03:47 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HackTheBubble","project_tags":["java","html","css","javascript"],"project_url":"https:\/\/devpost.com\/software\/hackthebubble","keywords":"ran,proud,pp,next,learned,inspiration,hackthebubble,challenges,built,accomplishments"},{"level_0":716,"hack_vector":[[0.1732534766,-0.1504803002,0.0140572796,0.0983151719,-0.0307002869,0.1730441004,0.1668188125,-0.064183943,-0.0286001582,-0.024964869,-0.0004426363,-0.0060659111,0.1441230476,-0.0778910443,0.0013572054,0.066881828,0.2513656318,0.0401089825,0.0635917634,0.0825175121,-0.2048744559,0.0294532087,-0.0568165705,-0.0494593531,0.1650612801,-0.0369027555,-0.0753208101,-0.2005414367,-0.0011672783,-0.0774436295,0.0506743602,-0.1058736295,0.0858869776,-0.0577038266,-0.0360511504,0.0105730472,0.1470188051,-0.1130202413,-0.0008574147,0.0634224489,0.0674313158,-0.1654396653,-0.1986229569,-0.0284159165,-0.0395641141,-0.0315485299,0.0374073721,-0.0292471088,-0.0206878111,-0.192326948,-0.0559533983,0.048853159,-0.1103477627,-0.0304333456,-0.1305401772,0.141200453,-0.1575213522,0.0484404303,0.0022741393,0.0215056632,-0.0381618068,0.0288072675,0.0600961372,0.0617234856,0.1314597428,-0.0229042452,-0.1231698915,-0.1688677222,0.0045373929,0.0182379782,0.0811673626,-0.0456795022,0.0070849168,-0.1427168101,-0.0439199433,-0.0615436807,0.1988323629,0.022693621,0.0829468891,-0.1339370459,0.1108022258,0.1479194015,0.019685898,0.1411442757,0.1399535537,0.1727158874,-0.1251896918,0.0336602628,0.007399681,-0.1107793376,-0.0748345479,0.0995682925,0.0143074766,-0.0078262445,0.0558292605,-0.0781795308,-0.075258553,0.1704313308,0.0875307396,-0.0601680763]],"hackathon_name":"Hack The Bubble","index":716,"project_description":"Stegonography on a piece of code.Long story short, no time left, and noone cares anyway.Hack The BubbleI worked on cmake and image encoding\/decoding.I worked on the user interfaceKirill\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 08, 2016 03:47 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hack-The-Image","project_tags":["c++","java"],"project_url":"https:\/\/devpost.com\/software\/hack-the-image","keywords":"time,story,short,noone,long,left,cares,anyway"},{"level_0":717,"hack_vector":[[0.1574896127,-0.1502445191,-0.0085653355,0.0747464597,-0.0428517424,0.15708296,0.1872059107,-0.0433884934,-0.0188249033,-0.0285729319,-0.0110712331,0.0234899782,0.122480534,-0.0710531622,-0.0015267481,0.0635999441,0.2615713477,0.0354299247,0.0456435233,0.0951370299,-0.2182302326,0.0149346124,-0.0338445529,-0.0475928672,0.1574198306,-0.017732935,-0.0628677234,-0.1838687956,0.0172010958,-0.0972870588,0.0300510898,-0.1147685722,0.069698073,-0.0648011938,-0.0286533535,-0.00688178,0.1442956179,-0.1195297763,-0.01915971,0.0722026974,0.0547956191,-0.1557421982,-0.1704113483,-0.0525957569,-0.0143128326,-0.055339314,0.0366642848,-0.0167442001,-0.0334262699,-0.1841690838,-0.0536452159,0.028691316,-0.1084285378,-0.0577998199,-0.1302187294,0.1431315392,-0.1497554034,0.0317856893,0.0094516659,0.0176973604,-0.0347928479,0.0306030475,0.0558189675,0.0531184822,0.1374130845,-0.0321490318,-0.143720448,-0.161668852,0.0201194789,0.0234278068,0.0731851682,-0.0481017232,-0.0022741766,-0.1452303082,-0.0570624061,-0.0940464064,0.1836946905,0.026695881,0.0797369555,-0.1522906125,0.1128358245,0.1644766182,0.0056950767,0.1664536744,0.1424483359,0.1707885265,-0.1426360309,0.0581699125,-0.0034656294,-0.1105373949,-0.0954415128,0.106141299,0.0262772031,0.0090847109,0.0563622788,-0.0623043813,-0.0914208815,0.1711405069,0.0875225812,-0.0453483649]],"hackathon_name":"Hack The Bubble","index":717,"project_description":"In space, everybody can hear you tweet.Twitch plays Pokemon and FTL.It is a space shooter collaboratively controlled by Twitter mentions.It works-ish.Actual features. A whale.Hack The BubbleBilly Brown\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 08, 2016 12:52 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"TweetX","project_tags":["javascript","python","websockets","twitter"],"project_url":"https:\/\/devpost.com\/software\/tweetx","keywords":"twitter,end,player,tweets,python,game,front,features,works,duplicate,learned,javascript,ish,inspiration,important,ftl,dolphins,draws,map,controlled"},{"level_0":718,"hack_vector":[[0.1309464127,-0.1258401126,0.0200243443,0.0944573507,-0.0561922379,0.1666884571,0.170531109,-0.0488833077,-0.0317495614,-0.0387244076,0.0026227145,0.031967707,0.1285826862,-0.0791399851,-0.0114354966,0.0780267417,0.2705358863,0.0497108214,0.0623398907,0.0819699019,-0.1818792224,0.0058036423,-0.0556511991,-0.0571215749,0.148157537,-0.0090389084,-0.085928224,-0.172399357,0.0253219064,-0.0979151204,0.0227617472,-0.0921928659,0.0742856711,-0.0510276407,-0.0214080866,0.0130771631,0.1599709839,-0.099787809,0.0028549538,0.0859761611,0.0611962527,-0.1449251771,-0.1880770326,-0.0388804823,-0.041364219,-0.0615804493,0.0490881018,-0.0046098903,-0.0204057079,-0.1895325184,-0.0205282569,0.0440874025,-0.0987219959,-0.0649657622,-0.1189659759,0.141221717,-0.1629310548,0.0562862828,0.0057835644,0.0413279049,-0.0041841622,0.0347391143,0.059652444,0.0635917187,0.1450469345,-0.0424061827,-0.1279149354,-0.1807446182,0.0178444888,0.011036329,0.0662835091,-0.0306394082,-0.0246004667,-0.1466107517,-0.0743663609,-0.0619218387,0.1957875341,0.0398254618,0.0922067091,-0.1611412317,0.0984226614,0.1591758132,0.0088762855,0.1388078928,0.1636289507,0.1583000571,-0.1531696767,0.0441674031,-0.0030889029,-0.1291042268,-0.0912286416,0.1046221107,0.0265830327,0.0273234937,0.0727674961,-0.0862400383,-0.0760087967,0.159240067,0.1065943241,-0.0505213961]],"hackathon_name":"Hack The Bubble","index":718,"project_description":"A history for your clipboardJust a small shot of the programWe made a thing, it didn't work.Hack The BubbleHenry Williams\n          posted an update\n\n          \n            \u2014\n            \n\n                Oct 10, 2016 10:17 AM EDTWhat an excellent projectLog in\n      or\n      sign up for Devpost\n      to join the conversation.Sandy Steele\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 08, 2016 03:43 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Clipboard History","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/clipboard-history","keywords":"work,thing,made"},{"level_0":719,"hack_vector":[[0.1318810284,-0.11157801,-0.027363779,0.0469874144,-0.0303086843,0.1355774552,0.1900110841,-0.0161608104,-0.0160533581,-0.0165068004,0.0224042982,-0.0554075129,0.1527342796,-0.0751117393,0.0593523942,0.0290719848,0.2257642746,0.0006909698,0.0386056937,0.1181173772,-0.237685129,0.0246827882,-0.0394642577,-0.025157433,0.116424568,-0.0342531465,-0.0370254032,-0.1804123521,-0.0110644409,-0.0894090906,0.0681129918,-0.1042267159,0.0291542709,-0.0781870484,-0.0177294873,-0.0065405266,0.1183971539,-0.1401856989,-0.0434267297,0.0042598909,0.0381859131,-0.1303015202,-0.1656392515,-0.0304630473,0.0604607575,-0.0547648855,0.0215423368,-0.0633166507,-0.0167770591,-0.2166491151,-0.1327324361,0.0095350351,-0.1080530584,-0.02283879,-0.201806426,0.1679546088,-0.1292747557,-0.0167254768,0.0447045118,-0.0845196322,-0.0641513392,0.0278834701,0.078246735,0.0617706291,0.1155723259,0.0134338401,-0.0913198441,-0.140425548,0.0338031389,0.008833373,0.0672335699,-0.0433226638,0.0142070279,-0.1166161224,0.0018746988,-0.1231668368,0.183818236,-0.0009626257,0.0161657743,-0.1426464915,0.1243417636,0.1767298132,0.0364100598,0.1659232527,0.1055490002,0.205560416,-0.102196753,-0.0254656281,-0.0237475894,-0.0842918381,-0.1425692737,0.0665532574,0.078540042,-0.0274452474,0.0073873019,0.0025317359,-0.1460305452,0.2201598585,0.0322244652,-0.073549971]],"hackathon_name":"Hack The Bubble","index":719,"project_description":"Make CS Student's Life Easier!Make CS Student's Life Easier!Allows students to post questions related to coursework and answer others' questions.Using Django for back-end, Auth0 for authentification and HTML&CSS for front-end.Managing a database with different models (users, questions, answers).We have a working prototype.How to organize and manage the development of a real-world platform, which could turn out to be really useful.Expanding it to the whole department online and many other universities after, such that CS students could get help each other. Also, our platform could employ a competition (e.g. user of the month), where the most active users would win points for giving out correct answers, motivating students to work harder.Hack The BubbleIon-Alexandru Secara\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 08, 2016 03:31 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"StacsOverflow","project_tags":["javascript","jquery","django","html5","css","mysql","sqlite","python"],"project_url":"https:\/\/devpost.com\/software\/stacsoverflow","keywords":"questions,could,students,cs,users,platform,end,answers,front,expanding,database,employ,get,easier,django,different,giving,harder,development,help"},{"level_0":720,"hack_vector":[[0.1712486297,-0.14072451,-0.0208759066,0.076307483,-0.0245871004,0.1514939815,0.1823657453,-0.0460428074,-0.0332441926,-0.0144045949,0.0050996961,-0.0300271958,0.1426767856,-0.0711956844,0.0330995172,0.0252763033,0.2217975408,0.0049114847,0.0528835282,0.1102687716,-0.2323247939,0.019392848,-0.0448633283,-0.0097817555,0.1600232124,-0.0219286159,-0.0504621044,-0.1855398715,-0.011542907,-0.080816485,0.0598054864,-0.1206107214,0.0502275378,-0.0720690638,-0.0309530478,-0.0189533085,0.1237764433,-0.1328763068,-0.0445413142,0.0280161127,0.0672862232,-0.1337727606,-0.1635887176,-0.0298140328,0.0154042635,-0.0408464819,0.0202770364,-0.0567559786,-0.0233944058,-0.2089612633,-0.1010598019,0.0293123033,-0.1137949899,-0.0093057556,-0.1717006266,0.160432443,-0.1394063234,0.0189742185,0.0052550356,-0.042257838,-0.0465602651,0.0318484381,0.0678544119,0.0531076081,0.1320245862,-0.0011397696,-0.1313407272,-0.146549508,0.0133604929,0.0188667309,0.0768370554,-0.0312007088,0.0142039144,-0.1358701736,-0.0104368096,-0.0918223262,0.1986464858,0.0079648132,0.0442531034,-0.1369494796,0.1171098426,0.1572259367,0.0349240378,0.1617752314,0.1337411702,0.2005642205,-0.1046111658,-0.0016195519,-0.0153634986,-0.0832904056,-0.1124008149,0.0911068022,0.075834021,-0.0242700353,0.0337691493,-0.0396977328,-0.1168479696,0.221617952,0.0508614928,-0.0569134317]],"hackathon_name":"Hack The Midlands","index":720,"project_description":"Budget VR ImmersionScreenie of test sceneRIPGoogle Cardboard we picked up by chance the day of the hack.\nBananas.Immerses the user in a world of spooks and doots, on a budget. Beware!Unity, Google Cardboard SDK, Makey Makey & blood, sweat and tears.Everything imaginable. Unity crashing, bugging out, skeletons spooking us out, networking bugging out, sleep deprived commit messages.The spooky experience we've created.Unity. And how annoying it is. And how awful it works with git.Ask Tom.Hack The MidlandsCallum Tolley\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:06 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"BR - Banana Reality","project_tags":["c#","unity","google-cardboard"],"project_url":"https:\/\/devpost.com\/software\/hackthemidlands","keywords":"unity,google,makey,bugging,cardboard,commit,git,experience,everything,doots,deprived,day,created,crashing,world,chance,hack,built,budget,blood"},{"level_0":721,"hack_vector":[[0.1491599083,-0.1250871271,-0.0172198862,0.0453883484,-0.025403155,0.1378360987,0.1930112541,-0.0420674048,-0.0093448516,-0.0191481039,0.0036699192,-0.045706138,0.138473466,-0.0643350109,0.0563795827,0.0086053992,0.2167957425,0.0000036199,0.049336195,0.1240343228,-0.2466233522,0.0215125419,-0.0408469141,-0.014105089,0.1303308159,-0.0225390382,-0.0329168625,-0.1711396724,-0.0074201385,-0.1009361297,0.0599881038,-0.1277338117,0.0354681388,-0.0741392523,-0.0187312402,-0.0339996703,0.1148128957,-0.1504995525,-0.0550144054,0.0015494053,0.0487754419,-0.1351154298,-0.1419343352,-0.039156653,0.0390975103,-0.0530424155,0.0151447002,-0.0640135631,-0.027745869,-0.2042402923,-0.1378286183,0.0255934261,-0.1167906225,-0.005545517,-0.1956126392,0.1664908975,-0.1354512721,-0.0097354269,0.0215118695,-0.0786603466,-0.0627693161,0.0224493723,0.0645459965,0.0456616953,0.108472757,0.016879119,-0.1087273583,-0.1348142773,0.0195206329,0.027525425,0.0747476667,-0.0497842506,0.0249356218,-0.1348108798,0.011693066,-0.1098289639,0.1837652028,0.0128445262,0.0160102509,-0.1400044262,0.1147744134,0.1544331759,0.044768244,0.1671923101,0.1230992079,0.2090853751,-0.1057932228,-0.0229921378,-0.0204881784,-0.0690529197,-0.1285669059,0.0729382411,0.1031496599,-0.0315299891,0.0075897356,-0.0144666228,-0.140711993,0.2294229269,0.0178943258,-0.0705316141]],"hackathon_name":"Hack The Midlands","index":721,"project_description":"Shape slicing security. We put the 2 step in 2 step authentication.The skeleton interfaceA professional dancerRunning on a laptopBannerDanceAuth, you and me!Long since are the days of 'passwords' and '2 factor authentication', welcome to a new era, a better era of 'secure' authentication. (with 65% more running men).Kinect, Zigfu -- an absolute nightmare. We stumbled across a (vaguely) usable library ~ 5 hours into the hack, saving us from embarking on a project with less dabbing.NodeJS, Express, SocketIO -- used for all of the super cool backend stuff, lots of #spookyspookylogic (according to the comments) for matching against a backlog of previously recorded dance moves.JS, JQuery, SweetAlert, Animate -- used for our #disco frontend.We didn't target any sponsors, but I guess that's the same as targeting all of them?Our dance moves have been described as no less than 'absolute fire' and 'of questionable standards', this was inspiration enough to release them unto the world.Recognises your moves and your style, no one can match Goodman's running man... no one.Can not improve your awful dancing.Hack The MidlandsAran Long\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:05 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"DanceAuth","project_tags":["node.js","javascript","html5","css3","socket.io","kinect","express.js"],"project_url":"https:\/\/devpost.com\/software\/danceauth","keywords":"moves,absolute,dance,inspiration,one,era,running,sponsors,less,authentication,used,backlog,hours,frontend,goodman,guess,hack,improve,factor,across"},{"level_0":722,"hack_vector":[[0.1450713575,-0.1032103822,-0.0305243228,0.0472291298,-0.0202014018,0.1487590522,0.1947488189,-0.0413706414,-0.0132953962,-0.0323930569,0.0119342133,-0.0678006113,0.1356844157,-0.060583517,0.0594458356,0.0094282152,0.2202683985,0.0080681425,0.0309698414,0.1229589581,-0.2309433818,0.0404173397,-0.0391739644,-0.0202599131,0.1104669496,-0.0192796774,-0.023398919,-0.1760209948,-0.0405127928,-0.0891287178,0.0612368472,-0.1317994148,0.0378217176,-0.0793737024,-0.0222643912,-0.0244843923,0.1280065626,-0.1397337317,-0.0603821389,0.0009730556,0.0453828685,-0.1379894316,-0.1485267133,-0.0386985317,0.0579671524,-0.0599292181,0.0131458677,-0.0604027472,-0.0409827419,-0.2159795463,-0.1346800476,0.0028281684,-0.0981510431,-0.0097382134,-0.184029147,0.1486346275,-0.1268823892,-0.0263528526,0.0374227352,-0.0994612351,-0.078455247,0.016907515,0.0819507688,0.0354204103,0.1064435765,0.0149897859,-0.107260108,-0.1328938752,0.0342519246,0.0328475609,0.0684477538,-0.0560520999,0.0319748484,-0.1216656938,0.0102989869,-0.1276331991,0.1804955155,0.001056025,0.0191155244,-0.1330109835,0.1225345582,0.1639638692,0.0498136207,0.1791041046,0.0986606404,0.1820397973,-0.1114359871,-0.0337844975,-0.0219353791,-0.0861988589,-0.1469482183,0.0634940863,0.0873689428,-0.0479941592,0.0028940006,0.0016331567,-0.1448840946,0.2439999282,0.0165506601,-0.0748317018]],"hackathon_name":"Hack The Midlands","index":722,"project_description":"adam is but 1 man. the world needs his help and his image everywere. he will do what you say and say what he doesnone other than the man himself, Adam James Woolen, lvl 99 wizard, chair of the Aston Computer Science Society, contributor of project [redacted] and mother of dragons.adam will make an arduino controll led lights by the power of voice recognition. he will also listen to you and tell you what you saidWARNING may crash phone and take about 3 mins to loadwe used blender to make the head which we put into three js to display on a webpage then used text to speech to make it say stuff, we originally animated it but it wouldn't work. we made a site which could read your voice and make a comand system to control the arduino through the internet.animations on webgl is a nightmare,adam is finally at everyones fingertipscomputers are sentient and they hate us.you cant improve on perfection.Hack The MidlandsI worked on the backend and the LED controller, setting up the EC2 instance and database. The site is a simple PHP MVC and there is a python script that polls the server regularly and then transmits the updates to the Arduino via serial.Ryan Fuller\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:16 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Adam in my pocket","project_tags":["javascript","python","html5","php","three.js","arduino"],"project_url":"https:\/\/devpost.com\/software\/adam-in-my-pocket","keywords":"make,adam,voice,used,arduino,internet,everyones,finally,fingertips,hate,head,improve,inspiration,learned,james,js,display,led,lights,listen"},{"level_0":723,"hack_vector":[[0.1521950662,-0.1098519489,-0.0228067022,0.041908931,-0.0090944478,0.1310308576,0.2078246027,-0.0303529184,-0.0450960994,-0.0085524619,0.0191978272,-0.0644473881,0.136503607,-0.0661397353,0.0580668449,0.0009175281,0.204602614,-0.0206781458,0.0416874401,0.1338370144,-0.2386273444,0.0345595442,-0.0426516719,-0.003803347,0.1279147863,-0.030354362,-0.0302388817,-0.1841954589,-0.0400756635,-0.09881486,0.0757861659,-0.1153135747,0.0334340148,-0.0841994435,-0.0206882339,-0.018422097,0.1109655574,-0.1354445964,-0.0501203686,-0.0023816531,0.0617245175,-0.130735904,-0.1480125338,-0.0348352082,0.0629981309,-0.055971954,0.0139460927,-0.0798413754,-0.0264476836,-0.2225092947,-0.1291306168,0.0174404252,-0.1077933386,0.0183222611,-0.2001886517,0.1612419039,-0.1489138901,-0.0245544929,0.0265666489,-0.1050987467,-0.0677353889,0.0246804673,0.0642000437,0.0380514711,0.11717996,0.0144814607,-0.1127071157,-0.1195202172,0.0215169042,0.0110511491,0.0596454665,-0.0435111932,0.0135386586,-0.1149518788,0.0299996417,-0.1145981848,0.1783475131,-0.0045525408,0.0262667071,-0.1336066574,0.1190585569,0.1518637538,0.0512335189,0.1614724398,0.1146707311,0.2080393881,-0.0939460471,-0.0375621654,-0.018617671,-0.0733901262,-0.1420265883,0.0642828196,0.0914010182,-0.0349295363,-0.0244418979,0.0038768169,-0.1579967588,0.2172340304,0.0187852643,-0.0567064621]],"hackathon_name":"Hack The Midlands","index":723,"project_description":"Send websites to their wwwdeathWe all used to play Swords and Sandals when we were playing browser games. We remembered that yesterday morning and thought it would be a great idea to see a similar battle style but instead of gladiators, the fighters would be websites!The player chooses two websites and then puts them to the death. The website with better stats (provided by the Majestic Api) is going to win!We built the game in Unity3d and we used the statistics provided by the Majestic API as stats for the warrior websites in the game.Unity UI is very buggy sometimes so we had to redo everything related to that over 4 times.\nCompiling didn't work out every single time as a bug from the latest version of unity kept appearing.The game works as intended.\nWe have really good music and sound effects.\nThe majestic api integration is flawless for what we needed.How to use the Majestic api.\nHow to hardcore Unity Ui elements.\nGetting the favicon from the internet and applying them to the head of a character.Release for the Android.\nRemaster the Graphics!!!Hack The MidlandsI was the (self proclaimed) musical Goliath behind this game. I composed all sounds and tracks, as well as attempting some pixel art and basic PS work to create the in-game graphics!Oscar Molnar\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:49 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"The Web Wars","project_tags":["unity","c#","photoshop"],"project_url":"https:\/\/devpost.com\/software\/the-web-wars","keywords":"unity,majestic,api,websites,game,used,stats,ui,built,would,provided,intended,graphics,games,getting,gladiators,going,good,hardcore,great"},{"level_0":724,"hack_vector":[[0.1685912311,-0.143144533,-0.0018139489,0.0740719438,-0.0377529971,0.1561931372,0.174933672,-0.0524849817,-0.0295102037,-0.0377272367,-0.0073831361,-0.0199924875,0.1416648775,-0.0828195214,0.013926289,0.053063903,0.2522132695,0.0208973773,0.0668489709,0.1081848964,-0.2214422971,0.0154727511,-0.0432849042,-0.046790313,0.1407229304,-0.0269463621,-0.0629612803,-0.1768231392,-0.0034704793,-0.103683956,0.0300933551,-0.1087244675,0.0656373873,-0.0697704554,-0.0330810435,-0.0187344719,0.1384629607,-0.1310417801,-0.0321099199,0.0561814755,0.0684292614,-0.1277715713,-0.1760993004,-0.03303992,-0.0031082125,-0.0608476438,0.0409063585,-0.0484316126,-0.0251442194,-0.2016854435,-0.0852945223,0.0365481116,-0.1141349673,-0.0452481024,-0.1457561702,0.1659817547,-0.141321674,0.0244851857,0.0106106037,-0.0068106237,-0.0334219187,0.0236407574,0.0578040071,0.0661202744,0.1339215636,-0.0098079145,-0.1380119473,-0.1577653885,0.0034351021,0.0196469557,0.0882408619,-0.0440092236,-0.0178454407,-0.1497071832,-0.0238009635,-0.0752377138,0.2015955895,0.0233235843,0.0580800958,-0.1416280419,0.1163491607,0.158477664,0.0228627827,0.1445564032,0.1442404389,0.1793407351,-0.1140617877,0.0206164904,0.0009089996,-0.0954259261,-0.0958874226,0.0830690861,0.05566274,-0.0038048562,0.0370872356,-0.0683959574,-0.1088110209,0.1928120553,0.0738340467,-0.0636069104]],"hackathon_name":"Hack The Midlands","index":724,"project_description":"America's best debate is actually onlineWanted to see who won the electionsShows the amount of tweets the candidates had on social mediaLooooot of Flask hard work...The whole projectFInally mastered it!Servers don't work very very good on Windows :(Hack The MidlandsAndrei Tuta\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 05:55 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Election Bot","project_tags":["majestic-seo-enterprise","html5","flask"],"project_url":"https:\/\/devpost.com\/software\/election-bot","keywords":"work,windows,amount,bot,built,candidates,challenges,election,elections,finally,flask,good,hard,inspiration,learned,looooot,mastered,media,next,project"},{"level_0":725,"hack_vector":[[0.1433148384,-0.1033020616,-0.0150333475,0.0434661023,-0.011855552,0.1188890561,0.2026086003,-0.0090490682,-0.0450118519,-0.0036043541,0.005618324,-0.081703268,0.1495708078,-0.0663939789,0.0698625743,-0.0030210586,0.1906181723,-0.0150593743,0.0436281711,0.1301256269,-0.2429558039,0.0413429588,-0.0407593623,-0.0019148579,0.1331494302,-0.0395901054,-0.0339835063,-0.1771255881,-0.0336569585,-0.0753783137,0.0732649714,-0.108241722,0.0252703819,-0.0694644079,-0.0222389866,-0.0072134053,0.1145651489,-0.1462833434,-0.0498352312,-0.0090846848,0.0432059877,-0.1492488384,-0.1525334418,-0.0280696824,0.0588177629,-0.0549556836,0.0056896727,-0.0949494988,-0.0004483224,-0.2120515704,-0.1408714503,0.0173532926,-0.1128033325,0.0359460786,-0.216144681,0.1687971354,-0.153399229,-0.0187189635,0.0319872797,-0.1144241467,-0.0825667679,0.0288855229,0.0634190217,0.0444368497,0.1085844114,0.0281643793,-0.087955974,-0.1293112189,0.0231317692,0.0102404356,0.0635659695,-0.0504791625,0.0205551665,-0.1064358354,0.049129054,-0.1172845289,0.1671349108,-0.0170072298,0.0166048165,-0.12252938,0.1171933189,0.1481161416,0.0669074506,0.1482100487,0.1052379832,0.2056899071,-0.0958562419,-0.0377208516,-0.0161153805,-0.074603118,-0.1387823522,0.0614392161,0.0899826139,-0.051471483,-0.0214104597,0.0069875782,-0.1696640849,0.2236724049,0.015237865,-0.0595262125]],"hackathon_name":"Hack The Midlands","index":725,"project_description":"3D visualisation of Millennium Point visitor numbers on the floor plan of the building using Unity.Floor 0Floor 1Floor 2Our inspiration for this project was to be able to represent the data available to us visually so it was easier for users to see and understand, and add interactivity for the user when analysing the data.The project visualises the Millennium Point data using a 3d space created in Unity. The user has the ability to move between the three main floors of the millennium point building to see the number of people using each entrance on each floor. The number of people entering is visualised through a circle that expands when more people enter through that entrance. The program also displays if the day or week is a school holiday, an event or during BCU term time. Averages of the people entering is also shown by Day and by week.First we formatted the given data so that it could be loaded into unity. Next we sourced the floor plans for the building to locate the entrances for use in the product. We then created the UI plan and the 3D world to represent the data we were given.The main challenges we encountered were parsing the original data given for the challenge because the data was not always in a consistent format which could be passed easily for use in the unity engine. Labelling the entrances also proved a challenge as some were not clear to see and were not labelled on the floor plan. Creating a GUI similar to the design of Millennium Point also proved a challenge but we created one by comparing the GUI to documents and the Millennium point website.Through the project we were able to create a project that was aesthetically pleasing for the general public but also could be used to display information throughout the year for the different entrances to the building. We are also proud of using game engine technology to visual data to large audiences with data analysing capabilities.We learnt time management skill, delegation of responsibility to maximise the resources available. We also learnt more about using Unity3D and programming in C#.To improve the project for future use we would let it accept more general data files, to accept custom data which we could not do due to the time constraints of the project. We would also implement more advanced data analysis to provide details of trends over time.Hack The MidlandsI mainly worked on analyzing the data given to us for the project in an excel document and finding ways to best visualize the data. I also helped to determine what type days were so that they could be visualized in Unity3D.I worked mainly on the design of the project, creating the UI design whilst also learning the similarities between Java and C#, a language I am unfamiliar with.I was the main programmer on the project; using my experience with Unity3D to bring our vision to reality.Timothy Mortimore\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:50 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HTM Millennium Point Data Challenge","project_tags":["unity","c#","gimp"],"project_url":"https:\/\/devpost.com\/software\/htm-millennium-point-data-challenge","keywords":"data,also,project,point,millennium,challenge,people,could,time,using,unity,entrances,building,created,use,floor,given,see,entering,day"},{"level_0":726,"hack_vector":[[0.1522292793,-0.1081292629,-0.0312353671,0.0299212746,-0.0093772272,0.1208286956,0.2065366656,-0.024611624,-0.0345658474,-0.0035477923,0.0115563301,-0.0760348067,0.1485434473,-0.0697709471,0.0613956489,-0.002073416,0.2041465044,-0.0146770068,0.0384476744,0.1392803937,-0.2478418648,0.030504467,-0.0378913283,-0.0023427571,0.1259526908,-0.0236456469,-0.0333942585,-0.1682792753,-0.0192199983,-0.0949120745,0.0769568309,-0.1264920235,0.0239320416,-0.0742994472,-0.0127801448,-0.0248003099,0.1071509272,-0.1421243846,-0.0559638292,-0.0184888709,0.0515737087,-0.1390244067,-0.1478761286,-0.0371594429,0.0690064281,-0.0556154102,0.0015009863,-0.0811281577,-0.0214320142,-0.2094402164,-0.1465525925,0.0175312813,-0.1082631871,0.0120265717,-0.2090766281,0.1660150588,-0.1378284097,-0.028963143,0.0250116792,-0.1109746099,-0.0673040748,0.0376630016,0.0703012422,0.045793511,0.1083461046,0.017727457,-0.0969622508,-0.1171585247,0.0270255301,0.0192823838,0.0675936937,-0.0406781621,0.0226736441,-0.1046895906,0.0310230348,-0.1212049052,0.1647875011,-0.0046791979,0.0033272235,-0.1261579543,0.1171684414,0.1510756761,0.056591671,0.1631169468,0.0999244675,0.2117263973,-0.090895623,-0.0454362743,-0.0234861486,-0.0661789179,-0.1360219717,0.0577995069,0.1002896726,-0.0389773101,-0.0091648456,0.0198298302,-0.1650124639,0.2286560535,0.0039854767,-0.0667162836]],"hackathon_name":"Hack The Midlands","index":726,"project_description":"Accessing information on items and players in current League of Legends games.We are a group of friends who enjoy playing the game League of Legends and so decided to try and create something using their API.At current, there are two separate systems. One where you enter an item name from the game and the form returns the description of its stats as well as an image for that item. The other system is one where you give a player name and the region, then if that player is currently in a live game - the form will return who is in the game with that player.We used a website called jsfiddle.net to allow us to try out using javascript in conjunction with html. We used https:\/\/developer.riotgames.com\/api\/methods for reference.We didn't plan effectively - which is how we ended up with two separate systems. For each of us, this is our first hackathon so we are all learning from each other and trying to understand what we should expect from ourselves within this time. Also, none of us had used html and javascript before so that was another learning curve - although prior programming experience between us made breaking this barrier down easier than the others.A working lookup of an item's statistics with a background image on the form. The live games form also returns other players currently in the game too.How to use html and javascript! Also understanding about JSON files and how to pull information from them.Unifying the two systems and making the design of the form a bit more sophisticated.Hack The MidlandsJames Birch\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 07:00 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"LoLInfo","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/use-of-riot-api","keywords":"form,game,us,javascript,html,also,player,used,item,systems,two,separate,returns,learning,currently,image,name,live,one,using"},{"level_0":727,"hack_vector":[[0.1478425562,-0.1261825413,-0.0098896548,0.0691651329,-0.0303929877,0.1603140533,0.1889072061,-0.0488588139,-0.0280951131,-0.0198863465,0.0147027653,-0.0187707804,0.1430975497,-0.0707107335,0.0288950298,0.0368733332,0.2500729859,0.0234118868,0.0535429195,0.10751196,-0.2200594842,0.0351618305,-0.0392991789,-0.0406167582,0.1450261772,-0.0229041912,-0.0570153259,-0.2000072747,-0.0014792406,-0.0874000043,0.0600379445,-0.1236171201,0.0561169647,-0.0764189139,-0.0244341381,-0.0142162684,0.1387028843,-0.1260961592,-0.031522233,0.0366046093,0.0534206219,-0.1622881442,-0.1805523783,-0.0432956293,0.0027246142,-0.0494632386,0.0260781106,-0.0382364318,-0.0341279581,-0.2008664608,-0.0833669901,0.0279869903,-0.103921771,-0.0322030447,-0.1650310904,0.1531437784,-0.1488871574,0.0179144368,0.0214623157,-0.0269461479,-0.044926431,0.0242047496,0.0672496557,0.0573535301,0.1285810769,-0.0084834388,-0.1205641329,-0.1540002972,0.0296130776,0.0233756937,0.0828336254,-0.0492638648,0.0107583823,-0.1388617903,-0.0257270653,-0.0976547822,0.1876183003,0.0156280994,0.0581506975,-0.1408922672,0.1150116175,0.1584850401,0.0339405462,0.1614743173,0.1335297674,0.1783733666,-0.1368338466,0.0019537832,-0.005917876,-0.0979172587,-0.1136564314,0.0840851739,0.0520618521,-0.0126741547,0.0378249511,-0.0448554605,-0.1118374616,0.1917339861,0.0547051653,-0.0644539446]],"hackathon_name":"Hack The Midlands","index":727,"project_description":"A retro RPG with randomly generated islands to explore which change depending on the current real-life weather.Based off an interest of both APIs and procedural map generation in games, this \"game\" was bornYou can sail on the ship to get to a randomly created island that is based off the current real-life weather. Encounter enemies that are also weather based.Hack The MidlandsI compiled all modules togethor and made it all work, kinda.I worked in design.  And helped by programming modules for other team membersJames\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:57 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Josh Bell\n          posted an update\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:55 AM EDTUpdate: use the numpad in battles( don't worry it's not broken)Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"WeatheRPG","project_tags":["json"],"project_url":"https:\/\/devpost.com\/software\/weatherpg","keywords":"based,weather,generation,apis,born,created,current,encounter,enemies,game,games,get,ship,inspiration,interest,island,life,map,procedural,randomly"},{"level_0":728,"hack_vector":[[0.1542530656,-0.1485478431,0.0023247048,0.0640705675,-0.0436910912,0.146911338,0.1849254072,-0.0508687831,-0.0327201486,-0.0189321358,0.0015940166,0.004066153,0.1453681141,-0.0829064548,0.021662306,0.0576776303,0.2431105077,0.0102941133,0.0572222136,0.10805922,-0.2240279168,0.0155285383,-0.0382243246,-0.0411829427,0.1647221893,-0.0268461071,-0.0588537119,-0.175650686,0.0208875705,-0.0945192054,0.0397711247,-0.1001243368,0.0629740134,-0.0544029139,-0.0315968208,-0.0168144256,0.142305851,-0.1266022921,-0.0245621391,0.0470268726,0.0519227609,-0.1468209028,-0.1684762836,-0.0386674218,-0.0103534712,-0.0469459556,0.0305427685,-0.0359981842,-0.0011401871,-0.194070518,-0.0794807971,0.0502103083,-0.1238237619,-0.0342682041,-0.1552369446,0.1644499302,-0.1537846774,0.0371474586,0.0078376215,-0.0014421914,-0.0289089233,0.0372236669,0.0550622977,0.0688008294,0.1307306439,-0.0218304414,-0.1281324029,-0.1620771587,0.0135340169,0.0186860897,0.0733878464,-0.0340867825,-0.0036659902,-0.147533834,-0.0291266479,-0.0782468319,0.1861355603,0.0083700828,0.0569489077,-0.1501164138,0.1146856919,0.1549812406,0.0254625231,0.1578929573,0.152494058,0.1833704859,-0.132771343,0.0273661651,-0.0099518728,-0.0969918072,-0.1004264057,0.0941240191,0.0619866513,-0.0033559659,0.0504772775,-0.0571984798,-0.1163149476,0.1837963313,0.0799528509,-0.0631750748]],"hackathon_name":"Hack The Midlands","index":728,"project_description":"Tracking people entering this building has never been so coolHackTheMidlands challenges sectionCool stuff. \nThere are different graphs showing people entering the building in different periodsWith our bear handsLong queue for the foodTeam workCome with an idea and a team at the net hackatonSell it and become billionairesHack The MidlandsRavinder Pal Singh\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:54 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MP Challenge hack","project_tags":["django","python","plotly"],"project_url":"https:\/\/devpost.com\/software\/mp-challenge-hack","keywords":"different,challenges,team,work,cool,hackaton,hack,graphs,food,entering,come,challenge,built,building,billionaires,become,bear,hackthemidlands,hands,idea"},{"level_0":729,"hack_vector":[[0.1586345732,-0.1490238905,-0.0000580609,0.070408687,-0.0402525887,0.1598130763,0.1846766025,-0.0629547015,-0.0289731566,0.000393588,0.013393105,0.00463151,0.1354273856,-0.0758184865,0.0350603946,0.0649696365,0.2502085567,0.0223748181,0.047266636,0.0865464807,-0.2095761746,0.0264818985,-0.0533429645,-0.0537519194,0.1590941101,-0.0222959351,-0.0534652919,-0.205048278,0.018555928,-0.0740055516,0.0510731712,-0.1138681099,0.0671667755,-0.0851766467,-0.0430336632,0.0001496206,0.1284519732,-0.1213829592,-0.0228451081,0.054620333,0.0372523256,-0.156419158,-0.1782466769,-0.0315286554,-0.0184626561,-0.0354154594,0.0309041068,-0.0200715084,-0.0187742189,-0.1902833134,-0.0601852611,0.0254922006,-0.1147334501,-0.0462252833,-0.1219594702,0.1573010832,-0.1465752423,0.0609864183,-0.0082945526,0.0128616355,-0.0299950913,0.0322028659,0.0645543933,0.0835150629,0.1308550984,-0.0401365757,-0.1367570162,-0.1591155529,0.0278237537,0.0051365704,0.0732155368,-0.0350138322,0.0100804614,-0.1480183601,-0.0483384356,-0.0925518423,0.1985157728,0.0207772627,0.0784404203,-0.1410681307,0.1333984733,0.1578485817,0.0375836864,0.1534306556,0.1473189592,0.1737863123,-0.1315886676,0.0385244451,0.0114835845,-0.1031829044,-0.1008717418,0.096204944,0.057004299,-0.0027360676,0.0675040036,-0.069184199,-0.0784639642,0.1613106281,0.0796404034,-0.0610017963]],"hackathon_name":"Hack The Midlands","index":729,"project_description":"Automagic DJ mixingPassion for music and DJing, and them sweet beat dropsTrack mixing in various creative fashions (mostly random) utilising Spotify's Echo Nest API (providing audio features like number of beats, bars etc.)With our blood and sweatHack The MidlandsThomas Li\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:55 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"DJ++","project_tags":["python","flux","spotify","bootstrap","love"],"project_url":"https:\/\/devpost.com\/software\/dj-15xb62","keywords":"music,spotify,audio,mixing,lack,programming,djing,apis,features,formats,fashions,improving,experience,etc,energy,effects,echo,drops,input,drinks"},{"level_0":730,"hack_vector":[[0.1628495306,-0.1390369385,-0.013045677,0.0707272664,-0.0161770824,0.1421571374,0.19469136,-0.0346010923,-0.042349495,-0.022494385,0.0015114304,-0.042580694,0.1545700878,-0.0708198622,0.0329846703,0.015991712,0.2163660228,-0.0027094837,0.0522015989,0.1272330731,-0.235903725,0.0269623101,-0.0387314111,-0.0044883834,0.1723223329,-0.0385770947,-0.0507094674,-0.1844677776,-0.0210025068,-0.0865997002,0.0723230168,-0.1158088371,0.0463232361,-0.0527931191,-0.0239759926,-0.0182563383,0.1302324235,-0.1341854781,-0.0257120021,0.0155540798,0.0733795241,-0.1442687511,-0.1670834124,-0.0301360209,0.0241231564,-0.0448544919,0.0207168888,-0.0619647019,-0.0189185143,-0.2184136808,-0.1030402929,0.0315554962,-0.1113563031,0.0074234246,-0.1991877556,0.1669929475,-0.1536759585,0.0040156548,0.0126815299,-0.0562366098,-0.0569476299,0.0288378708,0.0514267981,0.0379601531,0.1218025535,0.0174767487,-0.1073448583,-0.1449032873,0.0157121457,0.014273379,0.0695252493,-0.0414600782,0.0142867118,-0.1215787232,0.0068395785,-0.0825768933,0.1801432818,-0.0043954086,0.040088404,-0.1292924732,0.105328761,0.1489825845,0.0311792679,0.1579712629,0.1348828673,0.2016947269,-0.1094056442,-0.0140492227,-0.0197750144,-0.0807374194,-0.1125959754,0.0858708248,0.071989961,-0.0256738514,0.0062514339,-0.0327860229,-0.1329365969,0.2114263624,0.0484669805,-0.0492582247]],"hackathon_name":"Hack The Midlands","index":730,"project_description":"ChallengingThree dimentional Tic Tac ToeMain MenuIn gameOwn one at home. Challenging strategy game when played correctly.We planned to be able to play the game with up to 4 players locally on the same board.Using Java for the GUI, I\/O and algorithms.\njMonkeyEngine 3 for the actual game.\nBlender for the models.We had a lot of bugs and especially having difficulty paring computers once the GUI in place.\nAlso, we never got the tokens to show up once placed.Combining a bunch of different aspects of programing: GUI, I\/O, 3D Arrays, Engines, Models.Almost every technical aspect of the project was learned during the Hackathon.Smash all the bugs for a complete functioning game.Beenitia, Juliano, James, Jakub and Alexandre.Hack The MidlandsVakerrian Vakerrian\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:42 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Dimentional Tic Tac Toe","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/dimentional-tic-tac-toe","keywords":"game,gui,bugs,learned,models,difficulty,complete,computers,correctly,different,dimentional,challenging,engines,especially,every,functioning,got,combining,using,hackathon"},{"level_0":731,"hack_vector":[[0.1409320682,-0.0923733786,-0.0301280636,0.0320786126,-0.0193951614,0.1247105524,0.2006026953,-0.0199231952,-0.021423554,-0.0023884419,0.0110013392,-0.0744475424,0.1377365887,-0.062017478,0.0712088197,-0.0125262989,0.1967726201,-0.0059297653,0.0481053069,0.1217900962,-0.2470137328,0.0329163447,-0.0416507125,-0.006168446,0.0938681588,-0.0203793105,-0.0292495321,-0.1677770019,-0.0203892291,-0.1030438915,0.0683202818,-0.1300290078,0.0166194998,-0.0902924389,-0.011903082,-0.023901606,0.1111659706,-0.1480793804,-0.0753476694,-0.0190306343,0.0419306979,-0.1305634677,-0.1349609941,-0.0348519534,0.0743939951,-0.0595633574,0.0077440259,-0.0884955898,-0.023633223,-0.1983293295,-0.1569756567,0.0140699567,-0.1099815667,0.0109125758,-0.2110714167,0.1574990004,-0.131814599,-0.0360130146,0.0417091809,-0.1141174138,-0.0781537071,0.0251516309,0.0785808936,0.0449804552,0.1038506553,0.0230838731,-0.0919096246,-0.1163640618,0.0271709356,0.0257727932,0.0707790777,-0.0511742495,0.0268212911,-0.1197420955,0.0349581763,-0.1378969401,0.1733854711,0.0146258082,-0.0004808698,-0.1344373375,0.1188481003,0.1509925872,0.0635559857,0.1590120792,0.1089622602,0.205632627,-0.085926272,-0.0487651043,-0.0181006063,-0.0684174523,-0.1472318619,0.0533454157,0.1109631434,-0.0429618396,-0.0124911703,0.0179926287,-0.1637976319,0.2378186733,-0.0016073682,-0.0724794194]],"hackathon_name":"Hack The Midlands","index":731,"project_description":"An emotional poem created uniquely from your imageThere is nothing more unique than having a poem created from the interpretation of an imageIt takes an image, URL or from the computer, runs it through Clarifai's API to generate a list of tags associated with that picture, then it grabs a multitude of lines of poems from a database, sees which combination is the best through IBM Watson, and chooses the best one according to an emotional parameter.We divided the work into making sure we can grab the list of tags from an arbitrary image, while the other person was taking care of the poem generation from dummy data. When things got connected, we expanded and got to polish everything up, and spent the rest of the time optimising the poem generation, through choosing the best lines of poems and having them judged by IBM Watson's Tone Analyser.Python proved to be challenging for us since we weren't experienced enough in it. We sometimes spent more time doing trivial stuff that should be accomplished immediately in a comfortable language. Nevertheless, practice makes perfect, and we never got impeded enough that moving forward wasn't an option anymore.We successfully glued together a remarkable number of APIs and functions all in a python script designed to synthesize awe from analytical data. Parsing JSON proved to be easier than expected, APIs credentials and authentication went surprisingly well. We managed to simulate meaningful emotion in the form of a poem from a picture of basically anything.Knowing your tools goes a long way, as well as having a really organised working environment that can support even the most difficult research sessions.Implementing a beautiful web interface for easier access and spreading the word to anyone feeling that their picture isn't worth a thousand words. It always will.Hack The MidlandsPaul Chelarescu\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:54 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Poem from your picture","project_tags":["python","ibm-watson","clarifai","vim"],"project_url":"https:\/\/devpost.com\/software\/poem-from-your-picture","keywords":"poem,picture,image,best,got,lines,time,easier,data,poems,enough,spent,tags,python,generation,proved,apis,ibm,well,list"},{"level_0":732,"hack_vector":[[0.1309562176,-0.1001074389,-0.0229873508,0.025844356,-0.0133545967,0.1052665338,0.1998585165,-0.0082326541,-0.0241099875,-0.0136169856,0.0149726477,-0.0760903358,0.1467143297,-0.0644025579,0.0642049611,0.004694317,0.1899218112,-0.0234605148,0.0395279229,0.1464412808,-0.2532026768,0.0266935416,-0.0423428603,0.0015668098,0.1072316989,-0.0362227634,-0.0368289053,-0.1544421613,-0.0202841796,-0.1128283963,0.0635654256,-0.1035046354,0.0155151142,-0.0697458312,0.0053641922,-0.0253910813,0.1061569825,-0.149195835,-0.0564543307,-0.0266395751,0.0511965714,-0.1260232925,-0.1403769553,-0.0359080099,0.0786431208,-0.059246663,0.0113627408,-0.0942605659,-0.0129451044,-0.2065043747,-0.1572925299,0.026786672,-0.1102069169,0.0227137078,-0.234778136,0.1668737233,-0.1309226751,-0.0516745895,0.0535696074,-0.1301500499,-0.0804588497,0.0279014912,0.0686404034,0.0425501317,0.09962935,0.0397158153,-0.0827125832,-0.1213675067,0.0225449074,0.0145591982,0.0599416345,-0.0467248224,0.0190069024,-0.1034302264,0.0465472899,-0.1187429428,0.1577046961,-0.0101677645,-0.0120711001,-0.1307017207,0.1038459241,0.1527393907,0.0500988737,0.1496879756,0.1030869931,0.2167871147,-0.083772108,-0.0610971078,-0.0339270085,-0.0593304634,-0.1442096382,0.0543424375,0.1033393368,-0.0428638645,-0.0366693698,0.0250227824,-0.1870208979,0.233470574,-0.0056085559,-0.0630033314]],"hackathon_name":"Hack The Midlands","index":732,"project_description":"Users play an interactive treasure hunting game.At the start, we were considering a treasure hunting game, where there would be one organiser who would select different places (eg landmarks) around a city. We have been considering QR codes to use with this project, so each of the 'players' could scan the codes after they had found one of the places marked by the organiser. However, after some brainstorming, we have decided to allow any of the users to be able to submit a location to find. This way, the first player to find that location would get points. We decided to scrap the idea of QR codes, as these would be too much of a hassle to print out for every user, especially if only one player would be able to use the code afterwards. Instead, a player who finds one of the locations marked has to take a picture of it, and wait for the approval of the original poster of the location. If it is approved, the user is rewarded with 10 points. As the icon of the game if a camera with an arrow through it, we decided to call the points \"arrows\".We have been considering several platforms for the game, but in the end we chose to make the application using XCode in the language Swift, as we had a team member with a lot of prior experience. We also distributed jobs for the rest of us, with one of us sketching and making the design, and one team member researching the back-end database.We ran into several challenges. First of all, finding a good solution for the back-end was difficult without a good understanding of XCode and Swift. In the end, we decided to use a service called Quickblox, with allowed us to create a database and also manage the data in the application. Another challenge we ran into was the time limit, as even though we tried our best to keep working, we had to scrap some features that we had been considering originally, such as having locations displayed on a map, which would have been a nice extra feature, however it was unfeasible given the time we had.Each of us have learned new skills, as we have all been working with tasks we had never done before. Also understanding the importance of communication was important, and I strongly believe we each became closer to each other as friends.If we were to continue developing this application in the future, we would add other features such as preventing users from finding the chosen locations of the same player more than once or twice, to ensure cheating would be difficult. Also, we would implement a map feature, to make locations easier to find around the city, by giving a radius on the map to show hints about where the locations are.Overall, we each enjoyed this experience, and definitely learnt new skills, and just had fun working together generally.Hack The MidlandsVilmos Czer\u00f3czky\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:54 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Picture Hunt","project_tags":["swift","xcode"],"project_url":"https:\/\/devpost.com\/software\/picture-hunt","keywords":"would,one,locations,decided,player,also,us,considering,end,find,map,location,game,points,working,application,use,codes,difficult,back"},{"level_0":733,"hack_vector":[[0.1617204547,-0.0877243876,-0.0359116681,0.0264965948,-0.0096226158,0.1362630725,0.2092444152,-0.0344982482,-0.0250706244,0.020264145,0.009202118,-0.0989425406,0.1339591444,-0.0800235569,0.0828386769,0.008058534,0.1894378215,-0.0048208097,0.0374697298,0.1163104251,-0.2335741073,0.040274661,-0.0618943013,-0.0143176159,0.1094058231,-0.0230015572,-0.0190949515,-0.1880181581,-0.0279201046,-0.0701492578,0.0712815374,-0.1325286478,0.0344314352,-0.1080418974,-0.0346022397,-0.0025632679,0.1070215181,-0.1449529082,-0.0702682883,-0.0089716967,0.0324780233,-0.1382926553,-0.1455969661,-0.0121597564,0.0767458901,-0.0449607,0.0148693454,-0.0895916596,-0.0306018293,-0.2079769671,-0.1566697806,0.0060981573,-0.1117335856,0.0192127582,-0.1759174913,0.1635284126,-0.1254698485,-0.0091258259,0.0076129423,-0.1010702029,-0.0631888807,0.0210047178,0.0846368074,0.0601808503,0.1161609069,-0.0065881107,-0.1035759449,-0.1081280485,0.0312673114,0.0121109085,0.0691846833,-0.0463446341,0.0232301317,-0.1279494166,0.0471229926,-0.1286370903,0.1841263622,0.00373557,0.0037308806,-0.1272922307,0.1459848732,0.1550275981,0.0921544358,0.1519978344,0.082036674,0.1990679651,-0.0714551136,-0.0292673074,0.0064065349,-0.0743801966,-0.143061012,0.0445689671,0.1026398838,-0.049787432,0.0016700771,0.0148140537,-0.1461838037,0.2294959724,-0.0001862145,-0.080410853]],"hackathon_name":"Hack The Midlands","index":733,"project_description":"What does twitter think about it?We were inspired by Majestic, who provided us with their great API.The application interprets Twitter users' opinions on different topics of your choice. It searches for tweets related to your keyword, selects the most popular ones using the Majestic API and analyses them using Google's Natural Language Processing API. We are showing the general opinion of the people and the most frequently used adjectives when talking about the respective topic. \nIt can also analyse a user's Twitter activity, showing information about patterns in his tweets and his overall attitude when posting, as well as the number of links pointing to his profile.We built the back end API in Python and Node.js, which is called on the client side using html, css and angularjs. We used external APIs like Twitter's REST, Google's Natural Language Processing and Majestic API.Putting all these technologies together and making sure they cooperate effectively is a difficult task.We are proud of managing to interpret all this information and to visualise it in a nice way.We got an insight into data analysis and natural language processing.We plan on finding new ways of using Google's and Majestic's data and refining the application.Hack The MidlandsNode.js server, angular front end, a bit of debugging on server-side's Flask, small bits of bootstrapAlexandru Rosu\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:52 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AskTwitter","project_tags":["python","flask","angular.js","html","css","node.js","javascript"],"project_url":"https:\/\/devpost.com\/software\/asktwitter","keywords":"api,majestic,using,language,google,natural,twitter,processing,data,built,showing,information,application,proud,tweets,used,js,end,external,keyword"},{"level_0":734,"hack_vector":[[0.153937757,-0.1206449941,-0.0024479677,0.0499120317,-0.0184369124,0.1583862603,0.202861473,-0.0486216359,-0.029030785,0.0013670138,0.0186351519,-0.036119815,0.1388197988,-0.0732687861,0.0482034273,0.0274535082,0.2393594831,0.0126223229,0.0547916144,0.1090222448,-0.2298386246,0.031623207,-0.0575920828,-0.0384612046,0.1368174255,-0.030794695,-0.0488124602,-0.2046150863,-0.0115256729,-0.0912181139,0.0657384172,-0.1210514605,0.0520882122,-0.097749494,-0.0295755304,-0.0089853108,0.1156441495,-0.1297432631,-0.0362252146,0.0217898786,0.0445700474,-0.1484083235,-0.1640449613,-0.0361396894,0.0332018174,-0.0417596884,0.0206672773,-0.0539426245,-0.037534982,-0.2048362792,-0.1037069187,0.0222875718,-0.115052484,-0.0238288492,-0.1609832495,0.1583743095,-0.1425420791,0.0154229393,0.017905049,-0.0496559814,-0.0397159494,0.0206911955,0.0716184527,0.0612024479,0.1199792996,-0.0073236432,-0.1275809109,-0.1411593258,0.0273562465,0.0172183737,0.0757307634,-0.0469610095,0.0158110317,-0.1372984797,-0.0069770375,-0.1178109199,0.1876796186,0.0136367371,0.0482894331,-0.1418632269,0.1331012845,0.156931296,0.0537965074,0.156083107,0.1242088452,0.2000042945,-0.1075018644,-0.005187646,-0.0043816888,-0.0848233625,-0.1294968724,0.0682132095,0.0733734071,-0.0210425891,0.0183331016,-0.0322386697,-0.1249661595,0.1888046712,0.0375005826,-0.0697111413]],"hackathon_name":"Hack The Midlands","index":734,"project_description":"Judging Universities by their linksRepresents some universities as basic 3D buildings. Height represents the amount of links they have depending on the filter you request - such as specifically 'Computer Science' or 'General top 100'.Interacts with the Majestic API through PHP (mostly using the library Majestic makes available on their GitHub)Severe issues with Majestic not allowing cross-domain access customisation \/ lack of graphical visualisation experienceMake it look good - link buildings via roads - expand to make a more 3d city \"block\"SD HacksJames Bowyer\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:41 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Majestic Universities City","project_tags":["javascript","php","css3","html5"],"project_url":"https:\/\/devpost.com\/software\/majestic-universities-city","keywords":"majestic,city,universities,represents,buildings,make,cross,github,general,filter,experience,expand,domain,depending,customisation,visualisation,computer,graphical,challenges,built"},{"level_0":735,"hack_vector":[[0.1480773836,-0.1376666129,0.0096392082,0.0698118433,-0.0441307276,0.1423575431,0.1867018193,-0.0301731192,-0.0211510714,-0.0429558679,-0.0048331441,0.015511658,0.1270422637,-0.0748400316,-0.0063303527,0.0744509697,0.256945163,0.0255565401,0.0558455437,0.1050405353,-0.2040314227,0.0064624362,-0.0465441309,-0.0565011241,0.157091856,-0.0257963743,-0.06639947,-0.1744880229,0.0276455507,-0.092808865,0.0155052114,-0.0863980204,0.0767969266,-0.0566144735,-0.0200187955,0.0129957069,0.1497772038,-0.1226090267,-0.015585551,0.0834072977,0.0469840281,-0.1477814317,-0.1697782874,-0.0436658449,-0.0168600623,-0.0765239522,0.0405170731,-0.020266287,-0.0192844812,-0.1970811486,-0.0659476519,0.0286850892,-0.1157124788,-0.0601543859,-0.1215565205,0.1462957114,-0.1520963758,0.03377489,0.0189221632,0.0072592073,-0.0306302886,0.0364212692,0.0525101945,0.0679536611,0.1397124976,-0.0327171087,-0.1459748,-0.1744573265,0.011634659,0.008803389,0.0687780902,-0.0542269759,-0.0229493808,-0.1451838315,-0.0559049584,-0.0900299102,0.1952384561,0.0219001416,0.0835291892,-0.1533311158,0.1086361036,0.1536588073,0.0010808662,0.1431986839,0.1443150043,0.1641391367,-0.1506040841,0.0542501658,-0.0096057849,-0.1269321591,-0.1043334529,0.1039952859,0.0299968813,0.0152966715,0.0628883392,-0.0809564739,-0.0955522358,0.1734481305,0.097697109,-0.0468300544]],"hackathon_name":"Hack The Midlands","index":735,"project_description":"Can you source that?Not being able remember sources in an argument\/debateAllows the storage of studies, which can be referenced later when needed.Hack The Midlandsdaydreamingwill Latham\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:53 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"StudyStorer","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/studystorer","keywords":"studies,storage,sources,remember,referenced,needed,later,inspiration,debate,argument,allows,able"},{"level_0":736,"hack_vector":[[0.1582651287,-0.1026959121,-0.0215993635,0.0575268939,-0.0069992077,0.1354849786,0.1908894032,-0.0364600234,-0.0389729924,-0.0081110876,0.0288467966,-0.0778468251,0.1618229449,-0.0785483196,0.0645582974,-0.0068789711,0.204229936,-0.0220920332,0.0504087955,0.1294449121,-0.235774532,0.0278597567,-0.0561402179,-0.0015000203,0.1324628741,-0.0399519429,-0.036123503,-0.1812561303,-0.0364303701,-0.0801524669,0.0808425993,-0.1065181568,0.0408580266,-0.0760713816,-0.0237516277,-0.008431606,0.1173887849,-0.1342746317,-0.0437260084,-0.0043026707,0.0704164654,-0.1157803759,-0.1663075835,-0.0062307264,0.0571183376,-0.0415106714,0.0184642058,-0.08979702,-0.0196525995,-0.221320048,-0.1405246854,0.0198162068,-0.1051603183,0.026785288,-0.2022745013,0.1612689048,-0.1379476041,-0.0118033197,0.019645486,-0.0976353809,-0.0617194958,0.0267441273,0.079438135,0.0432035699,0.1208197027,0.0174429901,-0.0916678831,-0.1259462088,0.0101818787,0.0145588852,0.0666557848,-0.0293642823,0.007297324,-0.1224377155,0.0283438805,-0.094838649,0.2007463276,-0.0005829182,0.0076113683,-0.1253983676,0.121168986,0.1550371945,0.0492460579,0.1426703483,0.1089281663,0.2086044401,-0.0880867764,-0.0463740379,-0.023530012,-0.0757614076,-0.1403621882,0.0647555888,0.090259783,-0.0269162469,-0.0047245026,-0.0077966838,-0.1400038004,0.2284028977,0.0242027193,-0.0646608919]],"hackathon_name":"Hack The Midlands","index":736,"project_description":"Login and Play!Trying out new things. Coming from non-programming backgrounds, we decided to make a mash-up of forms and modules to test ourselves.Allows you to login with credentials, and choose one of two games to play.Originally using Python, but then transitioning to Visual Basic.Not knowing how to code and not being able to understand some of the errors thrown at us.Actually made a working app.Some basic VB, how to use GitHub, and some basic MySQL.No idea yet.Hack The MidlandsI did some research on what we could have made using VB, the various ways of programming with VB, as well as learning Git from a workshop. I also set up a MySQL server that we were originally using until our plans changed.I worked on the GUI menus and supported team mates in finding out how to program the back end of the application. I also supplied the code for one of the games.Worked on planning, GUI, database and game.Luke Tainton\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:40 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Game Selection","project_tags":["visual-basic","visual-studio"],"project_url":"https:\/\/devpost.com\/software\/game-selection-app","keywords":"basic,yet,decided,made,login,learned,knowing,inspiration,idea,github,games,game,forms,errors,credentials,working,coming,code,choose,challenges"},{"level_0":737,"hack_vector":[[0.1291492581,-0.1188200563,-0.0356035233,0.0126066757,-0.0241461042,0.1288667321,0.1699417979,-0.03829569,0.0109674316,-0.0615798794,0.00355869,-0.0614482313,0.1057498381,-0.0452770405,0.034056142,0.0306373034,0.2455209047,0.0212972816,0.021476537,0.1374431998,-0.2497912794,0.0176376831,-0.0200318415,-0.0242451336,0.0973413289,-0.0143512487,-0.0198925287,-0.1681986749,-0.0252474025,-0.1412550658,0.0411001705,-0.1401418746,0.0422186516,-0.0726063102,0.0157187171,-0.0766170621,0.1062055007,-0.1533347219,-0.0569562167,-0.0113532087,0.0383234583,-0.1266366392,-0.1463412941,-0.0833858773,0.0488941632,-0.0890504718,0.0180761293,-0.0325143225,-0.05408011,-0.2067988217,-0.1257435977,0.00871957,-0.0809515864,-0.0506317317,-0.1972630471,0.1646815538,-0.1018902734,-0.0455285087,0.0458606742,-0.0934681818,-0.0751008391,-0.0040566209,0.055310905,0.0163792055,0.0825136974,0.0349915028,-0.1200805455,-0.1387221217,0.0503088795,0.0543812439,0.0877998099,-0.0698006973,0.0327205062,-0.1175744832,0.0096879033,-0.1316263527,0.1418202966,0.0179127045,0.0301662441,-0.1231330857,0.0900811255,0.164640069,0.0200752579,0.2044406235,0.1120814532,0.1691421568,-0.1336886138,-0.0430604927,-0.054547444,-0.0685510784,-0.11608392,0.067728214,0.0917136669,-0.0579338633,-0.0277534015,-0.0020763588,-0.1611574441,0.2360116839,0.0058453553,-0.0912587866]],"hackathon_name":"Hack The Midlands","index":737,"project_description":"A small, weird python'd text game..The story is about a man in a room, he is trying to come to grips with his surroundings and figure out what happened. It is a multiple choice, text based game.\nMy teammate was: Luis (Couldn't find his email)\nI had help from Aaron.\nI have posted a Youtube video, going through the program. Here's the code (It may have bugs due to Devpost changing the configuration.)def one():\n    menu = \"You wake up alone. In a dark, damp room. \\n\"\n    menu += \" 1) Examine the room over \\n\"\n    menu += \" 2) Ask 'Hello?' \\n\"\n    menu += \" 3) Cry \"\n    print (menu)def two():\n    menu = \"The room becomes darker, the window becomes blocked and you can hear footsteps coming from under the door \\n\"\n    menu += \" 1) Hide next to the door and wait to see if the person comes in. \\n\"\n    menu += \" 2) Sit on the floor and wait for the person. \\n\"\n    menu += \" 3) Sit slumped against the wall, screaming: 'WHERE AM I? WHY IS IT DARK? WHO'S THERE?' \\n\"\n    print (menu)def three():\n    menu = \"The room is now pitch black, you cannot see anything. The footsteps are growing louder, closer. Then, it starts raining outside. Water starts pouring in through the open hole that is a window. \\n\"\n    menu += \" 1) Go over to the window, see if you can drink some water \\n\"\n    menu += \" 2) Stay by the door, still waiting \\n\"\n    menu += \" 3) Start shouting widly: 'WHY THE HELL IS IT RAINING? I DIDNT ASK FOR IT TO RAIN. THIS IS STUPID.' \\n\"\n    print (menu)def four():\n    menu = \"With your back against the wall, you hear the footsteps come up to the door, it slowly makes a 'clunk' noise and it opens. \\n\"\n    menu += \" 1) Leap at the intruder with your fists raised and get some early punches in before the mysterious man can do anything \\n\"\n    menu += \" 2) Step back from the wall, with your hands in the air. Ready to speak with the intruder \\n\"\n    menu += \" 3) Start screaming loudly into the intruder's ear, 'WHO ARE YOU, WHY ARE YOU HERE, AAAAAAAAAAAAH!' \\n\"\n    print (menu)def five():\n    menu = \"You wake up, in a room. Its cold, dark and guess what? damp. However, this time there is a man holding a gun to your head. \\n \"\n    menu += \" 1) Sit still, not moving accepting your fate. \\n\"\n    menu += \" 2) Leap out at the intruder and attack him with what force you have. \\n\"def failone():\n    print (\"  You continue crying, the room becomes darker and you cry more. \\n As you cry more your vision begins to become cloudy. You smack your head on the ground. The End\")\n    one()def failtwo():\n    print (\"As the echoes of your voice fade out, your chest hurts. Your lung starts to burn, as well as your throat. \\n\"\n           \"You start coughing and you fall to the floor in a heap. The End.\")\n    one()def failthree():\n    print (\"As you drink the rain, you stop. Your throat burning, you fall to the ground in pain. Realising this is acid rain. Well done, twit.*\")\n    one()def failfour():\n    print (\"As the door opens you yell loudly: 'WHO ARE YOU, WHY ARE YOU HERE? AHHHHHHHHHH'. The man punches you hard in the throat, you start coughing. You are dead.\")\n    one()def endone():\n        print (\"The man chuckles and pulls the trigger, the last thing you hear is the click of the gun loading.\")def endtwo():\n        print (\"You fall to the floor, clutching your thigh. The wound pouring with blood. You look up at the man and your vision starts to fade.\")one()Hack The MidlandsJoe Wiltshire\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:35 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Python Text Game","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/python-text-game","keywords":null},{"level_0":738,"hack_vector":[[0.1537092775,-0.1622301489,-0.0020977389,0.0612010658,-0.0427906625,0.1452472955,0.1823934764,-0.0485577136,-0.0079307286,-0.0622723699,-0.0067897779,0.0043688514,0.1260505766,-0.0723159909,0.0157795865,0.0661949441,0.2578611374,0.0235497523,0.0546776205,0.1181799397,-0.2258657813,0.0073437826,-0.0390388146,-0.0539438389,0.133988753,-0.0254273321,-0.0505628958,-0.1674521863,0.0030457291,-0.1128237247,0.017908711,-0.1005473882,0.0645881221,-0.0583776236,-0.0251086932,-0.0261555463,0.1358825415,-0.139926672,-0.0249089077,0.0525335819,0.0497945771,-0.126049459,-0.1626038104,-0.0511532575,-0.0055181929,-0.0855006278,0.048458986,-0.0292302053,-0.032847885,-0.2111237496,-0.0796865001,0.0316727906,-0.1131522357,-0.0623834468,-0.1420432627,0.1678353846,-0.1372847557,0.0178907085,0.0184619594,-0.007860668,-0.0448773727,0.0270086154,0.0473141707,0.0585512444,0.1151855737,-0.0065085511,-0.1429325193,-0.16062814,0.0076239747,0.0168204494,0.073622793,-0.0512315892,-0.0074360273,-0.1464958936,-0.0385727435,-0.079668574,0.1913083196,0.0190770086,0.0682962388,-0.1551548541,0.1040044501,0.165436998,0.0006468007,0.1599716693,0.1484763771,0.175318256,-0.1355927438,0.0294002965,-0.018547589,-0.0956147537,-0.1025019735,0.1008769199,0.0546146259,-0.0045168647,0.0300894845,-0.0719668418,-0.1081329882,0.1825352907,0.073878184,-0.057436984]],"hackathon_name":"Hack The Midlands","index":738,"project_description":"Mexico will pay for the wall. 100%. They don't know it yet, but they're going to pay for the wall.Donald Trump obviouslyStops mexicans reaching the great land of AmericaWith Bricks413 Request Entity Too Large204 No ContentThat I can very easily waste a weekendAsk the MexicansHack The MidlandsBhavina Mistry\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:37 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"We're going to build a wall","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/we-re-going-to-build-a-wall-wv8lxr","keywords":"mexicans,weekend,inspiration,america,ask,bricks,build,built,challenges,content,donald,easily,entity,going,great,land,waste,large,learned,next"},{"level_0":739,"hack_vector":[[0.1611555368,-0.1526356637,-0.0079778703,0.0686694458,-0.0285109915,0.1540347487,0.172004506,-0.0742337182,-0.0202741306,-0.0170811415,0.0101633845,-0.0181667022,0.1330306828,-0.0605490543,0.05529733,0.011682176,0.2135778666,0.0037697491,0.0540564358,0.0966759324,-0.2267017812,0.0441378281,-0.0366311371,-0.0302272812,0.1387471259,-0.0288356412,-0.0294236112,-0.1866052747,-0.0090988372,-0.0728934258,0.053272713,-0.1403329819,0.0524741709,-0.0700788423,-0.0377973877,-0.0429161228,0.1307919323,-0.1461142749,-0.0607081875,0.0239991695,0.0510815941,-0.1556672752,-0.1453955173,-0.0421155132,0.0008494893,-0.0291573256,0.0296914075,-0.0422526076,-0.042005565,-0.1948081553,-0.1124649569,0.0275428575,-0.1231162697,-0.0088848192,-0.1581138819,0.1455109417,-0.1230298728,0.0260958169,0.0110712927,-0.0305780079,-0.0584931336,0.0104313884,0.0542604327,0.0568973273,0.1089649796,-0.0030114898,-0.1302237064,-0.1397369504,0.0130291935,0.0251285899,0.0860730484,-0.0571784489,0.0418539234,-0.1603966057,-0.0089569362,-0.1072838902,0.19746764,0.0222507417,0.0500415228,-0.1316711605,0.137023434,0.1581611782,0.0281294566,0.1722182482,0.1522423774,0.1768622994,-0.136550501,-0.0003290187,-0.0056499452,-0.0833354294,-0.1164417341,0.0887162462,0.0909357294,-0.0410374366,0.0539938211,-0.0595582016,-0.0995156989,0.2220382839,0.0472720601,-0.0594595745]],"hackathon_name":"Hack The Midlands","index":739,"project_description":"A location-based means of collecting memezth3r3 wuz a lak of da meemz in da reel worl so w3 wunted 2 gif u all da gift ov da maymayswen u get to the dankest of places (Near an estimote), the app will dwnl0ad all teh m3m3s 4 u 2 enj0y\nit uses the spiciest of da web technologees, liek Nodes nd stuffz 2 mek n appsw3 yooozed da https 2 protact agenst meme in the middle atteksPoorlyDatabas3s r hard m80 we had lots ov da pruuublems\nwe iz all da st00pid and we runned out of tiem\ndomain ppls r meanie poos and take ages 2 give you ur dank domainsMEMESHow to be the dankest, like no m3m3l0rd 3v3r wasPepe.Hack The MidlandsWorked on the Node.js backend.Deep Sohelia\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:31 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"DankDrop","project_tags":["javascript","xamarin","node.js"],"project_url":"https:\/\/devpost.com\/software\/dankdrop","keywords":"da,dankest,ov,yooozed,gift,give,hard,https,inspiration,iz,lak,get,learned,liek,like,lots,maymays,meanie,gif,enj"},{"level_0":740,"hack_vector":[[0.1427317411,-0.1301577687,-0.0072990409,0.0613621436,-0.0328268446,0.1480421275,0.1978763938,-0.0310628135,-0.0446736179,-0.0105788624,0.0040607811,-0.0328612588,0.1420105249,-0.0799111947,0.0403293371,0.0709417388,0.2452316135,0.0250765681,0.0381391197,0.1035444811,-0.208982259,0.029154297,-0.055352807,-0.0518910438,0.142237559,-0.0256571397,-0.0568966828,-0.200572595,-0.0030716513,-0.0732856914,0.0578315631,-0.1095031649,0.0608391985,-0.0683966428,-0.0418585576,0.014693235,0.1312422305,-0.119622454,-0.0141660571,0.0488524102,0.0309287235,-0.1528870612,-0.1790841222,-0.0218257941,0.0082733212,-0.0586506613,0.0382712595,-0.0353614353,-0.0146583365,-0.2158763707,-0.069327198,0.0156692378,-0.1017235518,-0.0322812125,-0.1311106533,0.1576445103,-0.1570676714,0.0457533821,0.0018927101,-0.0230413172,-0.0400794186,0.0444336496,0.0587805137,0.0787234455,0.1326847821,-0.027048301,-0.1184346601,-0.1613546014,0.0341326483,-0.0093424488,0.0661057606,-0.0440521128,0.0029778606,-0.1356801391,-0.0284572057,-0.0978659913,0.1906698495,0.0011693456,0.0805570632,-0.1448890418,0.1340945661,0.1681304276,0.0512038916,0.1521998793,0.1306660771,0.1732679754,-0.1310323924,0.0272525847,-0.0031420495,-0.1241878793,-0.1242187694,0.0854666978,0.0537950434,-0.0210750159,0.0446311049,-0.0510412157,-0.1144469753,0.1809002012,0.0741319209,-0.0675923303]],"hackathon_name":"Hack The Midlands","index":740,"project_description":"Guess who tweeted this!I wanted to use the twitter apipull 50*users tweets and then randomly queries the user about themin python using the tweepy docskeeping up to date data to avoid the twitter poll limitActually finishing the projecta bit more python, and the entirety of tweepyMore users and a guiHack The MidlandsRichard Davies\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:32 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Tweet-Guesser","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/tweet-guesser","keywords":"python,users,twitter,tweepy,wanted,gui,guesser,finishing,entirety,docs,date,challenges,data,keeping,built,bit,avoid,api,actually,inspiration"},{"level_0":741,"hack_vector":[[0.1659301519,-0.1383119375,-0.023782732,0.0630155951,-0.0335690305,0.1485853344,0.1819661111,-0.0379393362,-0.0210132785,-0.0158084948,0.0076114037,-0.0256188326,0.1355061233,-0.0641834885,0.0512678884,0.0190523621,0.2314485759,0.01072489,0.0446152762,0.1203959659,-0.2387957126,0.0215809457,-0.0338879041,-0.0311928038,0.1424102783,-0.0175199527,-0.0321644954,-0.1855932325,0.0006558917,-0.088492088,0.042886883,-0.1295061707,0.0464405082,-0.0850589126,-0.0237126257,-0.0233879201,0.1219274774,-0.1442910135,-0.0582339838,0.0331440754,0.052571848,-0.1418239325,-0.1608008891,-0.0440176167,0.0266081728,-0.0524834208,0.0207757559,-0.0446961746,-0.0318884514,-0.2070412636,-0.1118271053,0.0101756854,-0.1095157564,-0.0365771987,-0.1609265357,0.1603565663,-0.1188232675,0.0085929129,0.0224768948,-0.0423289761,-0.0527567416,0.0204536468,0.0642255843,0.0583381094,0.1210016087,-0.0089798905,-0.1299550235,-0.1425614208,0.0244701374,0.0166927055,0.0812229589,-0.0434212983,0.0120695475,-0.1377885342,-0.020933168,-0.1186698973,0.1942986548,0.0203947127,0.0437155515,-0.1354255527,0.1247155219,0.1661020666,0.0306272916,0.173835665,0.1220310703,0.1836890131,-0.1182380468,0.0092622852,-0.013587662,-0.0894314349,-0.1196634322,0.0791954324,0.0782087892,-0.0216737371,0.044815056,-0.0410697199,-0.1186904162,0.2158525437,0.0411535837,-0.0647100806]],"hackathon_name":"Hack The Midlands","index":741,"project_description":"Mr Robot inspired projectInspired by Mr. Robot TV show1) SMS CLI tool to spoof messages, making it look like it came from someone else\n2) Another metric to measure if received email is legitimatePython all the way, mix of python 2.7 and 3Parsing 135.000 most visited websites ranked by Alexa created couple of problems when using old version of PythonIncreased my knowledge about security and how SMS and telecommunications workFgnl gharq sbe THV irefvba bs FZF clguba fpevcg, zber gbbyf vapbzvat!  <---- find what this isOMW TO HAX0R YOU!Hack The MidlandsAlikhan Uzakov\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:32 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"3xpl0its_and_pyth0n.wmv","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/3xpl0its_and_pyth0n-wmv","keywords":"python,sms,irefvba,gharq,hax,increased,inspiration,inspired,zber,gbbyf,learned,legitimate,like,llll,look,making,knowledge,fzf,messages,fpevcg"},{"level_0":742,"hack_vector":[[0.164424479,-0.1274103522,-0.0220624078,0.0540634543,-0.0094603244,0.1356396675,0.1855238527,-0.036201518,-0.0221415423,-0.0210501105,0.0193326976,-0.0574015044,0.1540155113,-0.0617870912,0.0557729788,-0.0121133812,0.1959588379,-0.0157828517,0.0577478409,0.1235277727,-0.2517901957,0.03217775,-0.0362978242,-0.0044884654,0.1202988774,-0.0468299389,-0.0270146914,-0.1746722162,-0.0334633142,-0.0971907377,0.0743762776,-0.1166171134,0.0355281383,-0.0691758469,-0.0104547357,-0.0372479782,0.1129965335,-0.1473623812,-0.0591834858,-0.0133417416,0.0703978762,-0.1272776425,-0.1490485668,-0.0320605636,0.0507353544,-0.0431737863,0.0119048646,-0.0819031373,-0.029703483,-0.2072243243,-0.1462389529,0.0181364864,-0.1127089486,0.0110468185,-0.2216465473,0.1532109827,-0.1317036301,-0.0303770769,0.0424423367,-0.0917339325,-0.0739725307,0.0167950168,0.0653716698,0.0295127388,0.1047050655,0.0317986086,-0.1022026017,-0.1228179932,0.0115998173,0.0274424981,0.0735579282,-0.0494794324,0.0189977437,-0.1256063133,0.0215312205,-0.1152959764,0.1841499358,0.0047488022,0.005297814,-0.1277094036,0.1072767675,0.1512819231,0.0268683359,0.1621045172,0.115321517,0.209298268,-0.0938475132,-0.0375740714,-0.0274994168,-0.0695080385,-0.1269064099,0.0745705292,0.0869721845,-0.0419147201,-0.0140412375,-0.0087433876,-0.1495195776,0.2307750434,0.0154420892,-0.0592535362]],"hackathon_name":"Hack The Midlands","index":742,"project_description":"An exciting bullet hell shooter featuring the staff and students of UoB Computer Science!Achim fights off a swarm of TomsDan prowls the forest of SabourinsHaving found nothing to do at Hack the Midlands, I decided to sit down and brush up on my Java knowhow. Looking at tutorials for making games in Java, I stumbled across a tutorial to make a shooter. This was the humble beginnings of AchimQuest, but now it has evolved into something far beyond the scope of that tutorial.AchimQuest is based on classic bullet hell shooters, where one must dodge enemies and their attacks while trying to survive. This version of AchimQuest features four levels plus one boss level (featuring a surprise boss!), in addition to the ability to change characters whenever you want.As mentioned earlier, AchimQuest initially started as a Java tutorial online. However when I received positive feedback from my peers, I decided to continue with AchimQuest and make it into a fully fledged game. I used my knowledge of Java graphics (awt and swing) to create a proper GUI and made more use of keyboard presses to increase functionality.Java graphics are extremely fiddly, as I found out. Most of the bugs I encountered were usually due to something not being painted or made visible at the right time.I am most proud of the boss fight, which was coded much more blindly (the boss moves differently to the other enemies and is the only one who can fight back, as well as the only one who can withstand a large amount of hits, and change his movement appropriately when hurt).I learned some basic game development techniques which will surely come in useful later on in my career. I also dabbled in audio and image manipulation within Java.If I continue to work on AchimQuest I could perhaps work on special attacks, multiplayer (co-op) and advanced attack patterns.Hack The MidlandsI did everythingGeorge Kaye\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:15 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AchimQuest","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/achimquest-m1pzwu","keywords":"achimquest,java,one,boss,tutorial,work,enemies,change,proud,decided,made,make,fight,learned,found,game,graphics,something,continue,attacks"},{"level_0":743,"hack_vector":[[0.1573388427,-0.1263734847,-0.0205342509,0.064727813,-0.0098554082,0.1497166008,0.1861372292,-0.0404436849,-0.0294182058,-0.0263046976,0.0020076851,-0.0525822304,0.1473044455,-0.0624424145,0.0413482822,-0.0029482946,0.2054766268,-0.0070353379,0.0570586696,0.1254488081,-0.2444888949,0.0318751372,-0.0297285523,-0.0052886726,0.1361973733,-0.0349650867,-0.0439898968,-0.1728717685,-0.0327871814,-0.0954630151,0.0755898282,-0.1183238551,0.0388007276,-0.0620097667,-0.0226632133,-0.0358850062,0.1206724346,-0.1436549723,-0.0454775766,0.0043595559,0.0772708133,-0.1358101368,-0.1524861753,-0.0390048958,0.0493541881,-0.0404709838,0.0082545653,-0.0676648393,-0.0284457635,-0.2169993818,-0.1317618787,0.0342256762,-0.1075048521,0.0105331885,-0.2091843486,0.1578533351,-0.1372307539,-0.021779282,0.0295351837,-0.0787762105,-0.0715254024,0.0162436534,0.0586908869,0.0219594091,0.1132548377,0.0245431848,-0.1027029902,-0.1263031512,0.0193677619,0.0329786725,0.0730699226,-0.0439038388,0.0112084085,-0.1252518743,0.0059140921,-0.0943182483,0.1811147481,0.0104627209,0.0063018408,-0.1335028708,0.1042004377,0.1499973536,0.0277726818,0.1645511091,0.1260624379,0.2149765193,-0.0942443982,-0.0330531001,-0.0208564494,-0.0732865483,-0.1305289716,0.0729358792,0.0930117294,-0.0308675878,-0.011096105,-0.0130738812,-0.1450496912,0.2340098768,0.0244630557,-0.0550280996]],"hackathon_name":"Hack The Midlands","index":743,"project_description":"A rouge game for the HackTheMidlands HackathonTitle ScreenActual GamePlayI always loved simple games that have a lot of gameplay (gameplay > graphics) and rouge games have this power. The hackathon was my opportunity to make my own rouge and that's what I made :D However, it wasn't so easy to get start with as working on 3 projects and focusing on the last one around 3 in the morning didn't leave me with a lot of time to develop the programme. Anyway, I'm proud of what I made with the help of 7 cups of coffee :DIt's a  command-line-console game, where the only purpose is to survive (typical rouge action).Simple C# code wrote in Visual Studio 2015Making the created screen not flicker, create an attack system, implement spell systems [which crashes the game, idk why ;'( ]Making the whole project in less than 1\/3 of the total event, implementing a no-flicker drawing system, not falling asleepCoffee is the best friend of a programmer xDFix the spell systems, add quests and random room generation (with corridors connecting rooms)Hack The MidlandsMichal Nawrocki\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:12 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"RougeTheMidlands","project_tags":["c#","visual-studio"],"project_url":"https:\/\/devpost.com\/software\/rougethemidlands","keywords":"rouge,proud,game,making,flicker,coffee,made,simple,lot,spell,system,systems,gameplay,games,hackathon,drawing,easy,event,falling,fix"},{"level_0":744,"hack_vector":[[0.1410067081,-0.0949921086,-0.0310806297,0.0293923616,-0.0157545675,0.1178414002,0.2255291939,-0.0223006252,-0.038831342,-0.0023045256,0.009315378,-0.0728375614,0.1364673674,-0.0777714401,0.065974474,-0.0071159839,0.2047789395,-0.0187433586,0.0329403318,0.1376982629,-0.235332936,0.0406928472,-0.0415711068,-0.0173604321,0.1247085631,-0.013283181,-0.0299759358,-0.1829288751,-0.0244846214,-0.0810126141,0.0600882284,-0.1312270314,0.031843368,-0.0899936259,-0.0212882012,-0.0155839613,0.1133135855,-0.1400470585,-0.0574377961,0.0045561492,0.052373305,-0.1450938433,-0.1554187983,-0.0339671969,0.0752685294,-0.0498768575,0.0066432171,-0.0864841565,-0.0297955554,-0.2042146921,-0.1499643475,0.0137719335,-0.1040064842,0.0190515127,-0.1915919036,0.167053774,-0.1394363046,-0.0235005599,0.0134009086,-0.1160752699,-0.0683188811,0.0191989448,0.0798714235,0.0423125736,0.1234444156,0.006847362,-0.0981766731,-0.1088775322,0.0393879376,0.0189485699,0.0608838573,-0.0504532009,0.0122498469,-0.117089808,0.0394234732,-0.123475872,0.1627082527,0.00350548,0.007914111,-0.1253613085,0.1336821318,0.1493079513,0.0823041275,0.1620125622,0.0887382105,0.2052378356,-0.0909170881,-0.04085356,-0.0000890342,-0.0745073482,-0.1481584609,0.0400202908,0.1059976593,-0.0289932322,-0.0121105658,0.000530779,-0.1673567742,0.2146494538,-0.0003356541,-0.0602517165]],"hackathon_name":"Hack The Midlands","index":744,"project_description":"Inspired by the Wikipedia Game, where one has to navigate from one random hashtag to another via Twitter feed.Welcome screenTwitter feed with the target hashtagsThis project is inspired by the Wikipedia Game, in which you have to get from one Wikipedia article to another one by just clicking on links in the articles.The idea is very similar to that of the Wikipedia Game: navigate from one hashtag to another through Twitter posts.We have used the Twitter API, along with Javascript and node.js to grab necessary data. The whole game is built using jQuery and socket.io.Because there are hundreds of thousands of Twitter posts, there has to be a way of filtering all the hashtags, so as to leave only the ones that are relatively similar. Otherwise, the game is pretty much impossible to complete.\nWe have tried to make use of the Majestic API to categorise various hashtags, but this has proved to be quite a challenge to implement, given the constraints on API calls and the limitations of the API itself.We are satisfied with learning on how to interact with a Web service through API calls with node.js.We have gained experience with using an API as a basis for a completely new platform, alongside with getting to know server-side scripting and HTTP to make requests.Integrate Majestic API to help pick out hashtags that are somewhat similar and realistically close in terms of Twitter posts.Hack The MidlandsArtur Komoter\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:07 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Twitterace","project_tags":["javascript","node.js","html","twitter","css"],"project_url":"https:\/\/devpost.com\/software\/twitterace","keywords":"api,twitter,game,wikipedia,one,hashtags,posts,similar,calls,majestic,make,node,js,built,using,another,categorise,alongside,http,hundreds"},{"level_0":745,"hack_vector":[[0.1387458295,-0.0799426213,-0.0401490852,0.0348867476,-0.0206684265,0.1352792382,0.2115320265,-0.0215366241,-0.0137283215,-0.0299130939,0.0068086758,-0.0783940479,0.1244642586,-0.0666776821,0.0721590966,0.0045741224,0.200784862,0.0040861946,0.0274229739,0.1298857927,-0.2304969132,0.0210320391,-0.0472052544,-0.0255486816,0.089326553,-0.005326,-0.0192827899,-0.1679196507,-0.045901224,-0.0925798938,0.0470203646,-0.1208447665,0.0289075598,-0.0955849513,-0.0180046521,-0.0088010579,0.1170584932,-0.1444545388,-0.0750244036,0.0158854518,0.0494839996,-0.1208168864,-0.1352001876,-0.0364276394,0.0775958747,-0.0823759586,0.0208813045,-0.0758487061,-0.0522228368,-0.2247878164,-0.155857712,0.0002558438,-0.0967367887,-0.0076831873,-0.1773092896,0.1697216481,-0.1232748628,-0.0307825562,0.024498364,-0.1148722917,-0.0779675916,0.0172496997,0.0776500106,0.0405509509,0.1246308237,0.0129902028,-0.1111424416,-0.1105136946,0.033967372,0.0157494079,0.047558181,-0.0517040826,0.0044627767,-0.1221395656,0.0329921059,-0.1208172143,0.1801650673,0.0125747705,-0.0055373469,-0.1460116655,0.1263277233,0.1705985218,0.0688734353,0.1538156569,0.0892223567,0.1969569772,-0.0839147046,-0.0333331041,-0.0041685449,-0.0789767131,-0.1624792069,0.0559049249,0.1017665714,-0.0326730683,-0.017962914,0.007692887,-0.160777539,0.2493584007,-0.0046449336,-0.0616721585]],"hackathon_name":"Hack The Midlands","index":745,"project_description":"SMS to Phone Call TranslationInitially what we wanted to do was create some sort of \"bot\" to have a conversation for around 20 minutes with however this proved to take more time than we expected so we decided to make something that just translates text into another language over the phone.However since Google Cloud Speech doesn't like the recording Twillio is spitting out we had to lower to bar again.And so at midnight we binned a lot of stuff and rewrote everything to get to the point where we are today.Vertaler is a translator, but not just any translator. A translator you can text. A translator that'll call you back. A translator that might even text you back! That's what Vertaler is. Not just a translator but a companion.The whole api endpoint is built in Sinatra since Flask is too overused and Ruby is a nice and comfy language.Using the Twilio and Google Cloud gem we were able to translate the phrase we wanted to translate and then either call or text back using Twillio.Google Cloud Speech.It works.How to use the Google Cloud API.Speech to Speech support.Hack The MidlandsImplemented text translation using Google Translate APIAnosh Malik\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 03:48 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Vertaler","project_tags":["sinatra","twilio"],"project_url":"https:\/\/devpost.com\/software\/vertaler","keywords":"phrase,language,text,translate,params,translation,twillio,locale,google,country,ascii,cloud,translator,require,str,twilio,es,end,speech,new"},{"level_0":746,"hack_vector":[[0.1410067081,-0.0949921086,-0.0310806297,0.0293923616,-0.0157545675,0.1178414002,0.2255291939,-0.0223006252,-0.038831342,-0.0023045256,0.009315378,-0.0728375614,0.1364673674,-0.0777714401,0.065974474,-0.0071159839,0.2047789395,-0.0187433586,0.0329403318,0.1376982629,-0.235332936,0.0406928472,-0.0415711068,-0.0173604321,0.1247085631,-0.013283181,-0.0299759358,-0.1829288751,-0.0244846214,-0.0810126141,0.0600882284,-0.1312270314,0.031843368,-0.0899936259,-0.0212882012,-0.0155839613,0.1133135855,-0.1400470585,-0.0574377961,0.0045561492,0.052373305,-0.1450938433,-0.1554187983,-0.0339671969,0.0752685294,-0.0498768575,0.0066432171,-0.0864841565,-0.0297955554,-0.2042146921,-0.1499643475,0.0137719335,-0.1040064842,0.0190515127,-0.1915919036,0.167053774,-0.1394363046,-0.0235005599,0.0134009086,-0.1160752699,-0.0683188811,0.0191989448,0.0798714235,0.0423125736,0.1234444156,0.006847362,-0.0981766731,-0.1088775322,0.0393879376,0.0189485699,0.0608838573,-0.0504532009,0.0122498469,-0.117089808,0.0394234732,-0.123475872,0.1627082527,0.00350548,0.007914111,-0.1253613085,0.1336821318,0.1493079513,0.0823041275,0.1620125622,0.0887382105,0.2052378356,-0.0909170881,-0.04085356,-0.0000890342,-0.0745073482,-0.1481584609,0.0400202908,0.1059976593,-0.0289932322,-0.0121105658,0.000530779,-0.1673567742,0.2146494538,-0.0003356541,-0.0602517165]],"hackathon_name":"Hack The Midlands","index":746,"project_description":"Inspired by the Wikipedia Game, where one has to navigate from one random hashtag to another via Twitter feed.Welcome screenTwitter feed with the target hashtagsThis project is inspired by the Wikipedia Game, in which you have to get from one Wikipedia article to another one by just clicking on links in the articles.The idea is very similar to that of the Wikipedia Game: navigate from one hashtag to another through Twitter posts.We have used the Twitter API, along with Javascript and node.js to grab necessary data. The whole game is built using jQuery and socket.io.Because there are hundreds of thousands of Twitter posts, there has to be a way of filtering all the hashtags, so as to leave only the ones that are relatively similar. Otherwise, the game is pretty much impossible to complete.\nWe have tried to make use of the Majestic API to categorise various hashtags, but this has proved to be quite a challenge to implement, given the constraints on API calls and the limitations of the API itself.We are satisfied with learning on how to interact with a Web service through API calls with node.js.We have gained experience with using an API as a basis for a completely new platform, alongside with getting to know server-side scripting and HTTP to make requests.Integrate Majestic API to help pick out hashtags that are somewhat similar and realistically close in terms of Twitter posts.Hack The MidlandsArtur Komoter\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:07 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Twitterace","project_tags":["javascript","node.js","html","twitter","css"],"project_url":"https:\/\/devpost.com\/software\/twitterace","keywords":"api,twitter,game,wikipedia,one,hashtags,posts,similar,calls,majestic,make,node,js,built,using,another,categorise,alongside,http,hundreds"},{"level_0":747,"hack_vector":[[0.1387458295,-0.0799426213,-0.0401490852,0.0348867476,-0.0206684265,0.1352792382,0.2115320265,-0.0215366241,-0.0137283215,-0.0299130939,0.0068086758,-0.0783940479,0.1244642586,-0.0666776821,0.0721590966,0.0045741224,0.200784862,0.0040861946,0.0274229739,0.1298857927,-0.2304969132,0.0210320391,-0.0472052544,-0.0255486816,0.089326553,-0.005326,-0.0192827899,-0.1679196507,-0.045901224,-0.0925798938,0.0470203646,-0.1208447665,0.0289075598,-0.0955849513,-0.0180046521,-0.0088010579,0.1170584932,-0.1444545388,-0.0750244036,0.0158854518,0.0494839996,-0.1208168864,-0.1352001876,-0.0364276394,0.0775958747,-0.0823759586,0.0208813045,-0.0758487061,-0.0522228368,-0.2247878164,-0.155857712,0.0002558438,-0.0967367887,-0.0076831873,-0.1773092896,0.1697216481,-0.1232748628,-0.0307825562,0.024498364,-0.1148722917,-0.0779675916,0.0172496997,0.0776500106,0.0405509509,0.1246308237,0.0129902028,-0.1111424416,-0.1105136946,0.033967372,0.0157494079,0.047558181,-0.0517040826,0.0044627767,-0.1221395656,0.0329921059,-0.1208172143,0.1801650673,0.0125747705,-0.0055373469,-0.1460116655,0.1263277233,0.1705985218,0.0688734353,0.1538156569,0.0892223567,0.1969569772,-0.0839147046,-0.0333331041,-0.0041685449,-0.0789767131,-0.1624792069,0.0559049249,0.1017665714,-0.0326730683,-0.017962914,0.007692887,-0.160777539,0.2493584007,-0.0046449336,-0.0616721585]],"hackathon_name":"Hack The Midlands","index":747,"project_description":"SMS to Phone Call TranslationInitially what we wanted to do was create some sort of \"bot\" to have a conversation for around 20 minutes with however this proved to take more time than we expected so we decided to make something that just translates text into another language over the phone.However since Google Cloud Speech doesn't like the recording Twillio is spitting out we had to lower to bar again.And so at midnight we binned a lot of stuff and rewrote everything to get to the point where we are today.Vertaler is a translator, but not just any translator. A translator you can text. A translator that'll call you back. A translator that might even text you back! That's what Vertaler is. Not just a translator but a companion.The whole api endpoint is built in Sinatra since Flask is too overused and Ruby is a nice and comfy language.Using the Twilio and Google Cloud gem we were able to translate the phrase we wanted to translate and then either call or text back using Twillio.Google Cloud Speech.It works.How to use the Google Cloud API.Speech to Speech support.Hack The MidlandsImplemented text translation using Google Translate APIAnosh Malik\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 03:48 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Vertaler","project_tags":["sinatra","twilio"],"project_url":"https:\/\/devpost.com\/software\/vertaler","keywords":"phrase,language,text,translate,params,translation,twillio,locale,google,country,ascii,cloud,translator,require,str,twilio,es,end,speech,new"},{"level_0":748,"hack_vector":[[0.1424083561,-0.1279259473,-0.0242630355,0.0338433385,-0.0307601951,0.1213941872,0.1966706961,-0.0149568813,-0.0040830211,-0.0277833156,0.0044360808,-0.0437142141,0.1353950202,-0.0637340769,0.0509980507,0.0310088024,0.2187599242,0.0072017624,0.0372233316,0.1364230216,-0.2499916255,0.0153012685,-0.0357213765,-0.0310321245,0.1103675142,-0.0265962519,-0.0338572301,-0.1728248298,-0.0064621223,-0.1036842018,0.0435088947,-0.1058929935,0.0319607742,-0.0799182281,-0.016661562,-0.025752658,0.1085127294,-0.1524912417,-0.0628619343,0.0149083324,0.0304999147,-0.1310351938,-0.1416036189,-0.0494802147,0.0538096391,-0.0827914178,0.0212860219,-0.0627269372,-0.0329515971,-0.2184581459,-0.137252599,0.0121203028,-0.1091944501,-0.0339699835,-0.1812111437,0.1752641499,-0.1188382506,-0.0207938161,0.0315632075,-0.0771404877,-0.0676367804,0.0272937715,0.0616522767,0.0559385568,0.1072371006,0.007643173,-0.1195926517,-0.1304098219,0.0321876109,0.0113266623,0.0618877299,-0.0542196743,0.0101205865,-0.1259000897,-0.0030398546,-0.1211255118,0.1808001548,0.0032757202,0.0196347386,-0.1518037766,0.1196411774,0.1685589701,0.034611214,0.1626264155,0.1098064184,0.2073978782,-0.1017784923,-0.0160133485,-0.0218167007,-0.082887426,-0.1438649893,0.0692301169,0.0880855396,-0.0341374837,0.001259807,-0.0136599159,-0.1598232388,0.2242976427,0.0201034155,-0.0733972117]],"hackathon_name":"Code for the Kingdom Bay Area Hackathon 2016","index":748,"project_description":"Enable anyone to ask culturally relevant questions in plain English & get meaningful answers directly from ScriptureMy dad had this idea. The tools we have today for searching the Bible are great, but they are largely keyword and topical search based, which makes it infeasible to ask questions in natural language form about issues important to people's personal lives (i.e. culturally relevant questions), which may not appear in the Bible in direct language. We need a new search engine to enable anyone to ask a culturally relevant question and get a meaningful response directly from the Scripture. This would do 2 things: help Christians grow their faith and be an evangelistic tool for non-Christians who have little or no Bible knowledge. Done right, with the right resources, it could be one of the best tools for understanding what the Scripture really says.Slack channel: prj-askgod\nSlack username: larrywaltersCode for the Kingdom Bay Area Hackathon 2016Larry Walters\n          started this project\n\n          \n            \u2014\n            \n\n                Sep 24, 2016 02:00 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AskGod","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/askgod","keywords":"bible,questions,culturally,relevant,christians,right,scripture,search,slack,language,askgod,ask,tools,best,idea,form,get,great,grow,help"},{"level_0":749,"hack_vector":[[0.1513942927,-0.1369633824,-0.0221067481,0.0494642444,-0.0333635509,0.1342451274,0.1822964996,-0.0370691456,0.0011089406,-0.0394499414,0.0253828615,-0.0352911502,0.1375244856,-0.067001611,0.0583516993,0.0256027915,0.220820725,-0.0040641101,0.0461375304,0.1290367693,-0.2538711131,0.0025866539,-0.031258408,-0.0341965072,0.0998902842,-0.0276626796,-0.0224962905,-0.1659949273,-0.0030645365,-0.1151427999,0.043163728,-0.094824411,0.0333074257,-0.0729303136,-0.0037942042,-0.0384929143,0.102277644,-0.1591116041,-0.0692562312,0.0071367486,0.0448282734,-0.1094948649,-0.1407411993,-0.0409804843,0.0449505299,-0.0659844056,0.0221333951,-0.0614059865,-0.0240157936,-0.22006616,-0.1407856345,0.0179779679,-0.1061373577,-0.0485582873,-0.1925641447,0.1673217714,-0.1057109237,-0.0244321618,0.0398910046,-0.0731149539,-0.0571647957,0.0259765405,0.0693488047,0.055569429,0.1082055271,0.0188263152,-0.1209185943,-0.1283862144,0.0176694877,0.0154190846,0.0651590154,-0.0384776741,0.008464966,-0.136926055,-0.0102312732,-0.1138829365,0.1846189201,0.005929003,0.0078249332,-0.1529184282,0.1165128276,0.1724703163,0.0152080311,0.1770528406,0.1118181124,0.2084413022,-0.0994478986,-0.0135599095,-0.0467021875,-0.0701984689,-0.1294163316,0.0754020512,0.0940223783,-0.0309244413,0.0047309166,-0.0113429194,-0.1506939977,0.2283075154,0.0235075578,-0.0766471773]],"hackathon_name":"Code for the Kingdom Bay Area Hackathon 2016","index":749,"project_description":"A 'dating' site that matches ministries and missionary organizations with people wanting to serveMissionary organizations and ministries need people.  There are many people who desire to serve but often don't know how to find a good match with a group or mission that shares their particular passion.  And so they do nothing.  This needs to change!This app will help meet the needs of and match ministries and missionary organizations with people willing to serve.  This would include short term local ministry opportunities requiring little or no previous notice, as well as short, mid, long term and lifetime mission work.Slack ID:  @phruglebrianIt's not built yet.  Will you help?We only have one developing developer involved.  (A teenager still learning how to code.)Um.....We need help.Hopefully, the expansion of God's kingdom through the development and use of Ministry MatchCode for the Kingdom Bay Area Hackathon 2016Brian Moran\n          started this project\n\n          \n            \u2014\n            \n\n                Sep 24, 2016 02:28 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Ministry Match","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/ministry-match","keywords":"match,help,people,ministry,need,ministries,term,mission,missionary,short,organizations,serve,needs,built,learned,involved,kingdom,know,challenges,learning"},{"level_0":750,"hack_vector":[[0.1512369812,-0.0996332094,-0.0251464266,0.0653649718,-0.0268629082,0.1713328511,0.2049322575,-0.0475962609,-0.0192491505,-0.0218964908,-0.006965383,-0.0303655826,0.1289356351,-0.0713576674,0.0206834879,0.0259094797,0.2493444234,0.0215842016,0.0363052227,0.1095962673,-0.2176794857,0.0250518117,-0.0395667925,-0.0212833378,0.154543221,-0.005014977,-0.0500566065,-0.1880762279,-0.0132145351,-0.0777940154,0.0570032895,-0.1276169866,0.0635953471,-0.080505088,-0.0373149328,-0.0076450948,0.1406072378,-0.1184117645,-0.0344061777,0.0320367999,0.0490527935,-0.1484743953,-0.1588827223,-0.0440338999,0.0354657695,-0.0474484004,0.0161683448,-0.0396567173,-0.0385468379,-0.2123142481,-0.091593042,0.0219263136,-0.104457669,-0.0186966471,-0.148401916,0.15765661,-0.1407231688,0.0021683446,0.0143041732,-0.0471049435,-0.0529645272,0.0153776258,0.0780549049,0.0292746145,0.1278949231,-0.0175707955,-0.1232476532,-0.14904055,0.0457485616,0.0385361463,0.0679093003,-0.0423419029,0.0200759154,-0.1369162053,-0.0218649637,-0.1129703894,0.1867115796,0.0125221638,0.0525977798,-0.1460637152,0.1140871719,0.1585805565,0.0468822643,0.1728637516,0.1145948172,0.1874087304,-0.1129830256,0.0040556267,-0.0074646627,-0.1021060199,-0.1423459798,0.0764614567,0.0644853562,-0.0228177588,0.0289668143,-0.0151079427,-0.1187055632,0.219565779,0.0562610067,-0.0661950186]],"hackathon_name":"Code for the Kingdom Bay Area Hackathon 2016","index":750,"project_description":"A better audio bible for the Amazon Echo. Remembers where you are. Knows your favorite verses. Finds relevant verses.Echo DotWhat would a great audio Bible experience on the Amazon Echo sound like?Help you interact with the Bible through the Echo voice interface.Debugging JavaScript can be annoying.Full voice app created in a weekend!The Alexa Skills Kit API is great!Code for the Kingdom Bay Area Hackathon 2016Nathan Kopp\n          started this project\n\n          \n            \u2014\n            \n\n                Sep 24, 2016 12:47 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Echo Audio Bible","project_tags":["node.js"],"project_url":"https:\/\/devpost.com\/software\/alexa-audio-bible","keywords":"bible,echo,kit,voice,verses,verse,alexa,great,api,later,skills,audio,aws,would,dynamodb,even,favorite,experience,debugging,full"},{"level_0":751,"hack_vector":[[0.1394064277,-0.1341493726,0.0037969048,0.0925307646,-0.0508718416,0.1495854557,0.1729595512,-0.0346631818,-0.0291768983,-0.0371540897,-0.008858555,0.0286142863,0.1263923943,-0.0772270262,-0.0056254975,0.0849469602,0.2579932511,0.0265233591,0.0529757366,0.1063931808,-0.2071220875,0.0032256402,-0.038995564,-0.0492277965,0.1631818116,-0.0270985458,-0.0727452636,-0.178568393,0.0279408209,-0.0746724829,0.0191060994,-0.0836324021,0.073812589,-0.0322821178,-0.0323609263,0.0191606097,0.1490759999,-0.1076038033,0.0031961359,0.0924732909,0.0533118509,-0.1525179446,-0.1848995239,-0.0490969233,-0.0357177444,-0.0625434369,0.041129943,-0.0133089228,0.0023188128,-0.1982323378,-0.030596571,0.0326156616,-0.1093494073,-0.0512903668,-0.1268589497,0.1501705796,-0.1621162295,0.0541654639,-0.0016678241,0.0325861163,-0.0293172244,0.0391259976,0.0427835733,0.067649141,0.1464490741,-0.0406172723,-0.1233085915,-0.1822306067,0.0241368711,-0.0035097545,0.0612482764,-0.0390947945,-0.019404836,-0.1386324167,-0.0640787929,-0.0659108832,0.1880384833,0.0121657681,0.0919526517,-0.1527430415,0.0994577333,0.1625449061,0.0009697875,0.1520255953,0.1485068649,0.1684481204,-0.1491094232,0.0630288124,-0.008990176,-0.1248754486,-0.1003474444,0.109134689,0.0192098506,0.0136111602,0.0642818585,-0.0697218999,-0.0841948539,0.1608161926,0.1196515635,-0.0469590649]],"hackathon_name":"Code for the Kingdom Bay Area Hackathon 2016","index":751,"project_description":"A smart budgeting app to train people in the church to be better stewards of moneyWe will fill this in later. :)Code for the Kingdom Bay Area Hackathon 2016benjamindavid1986\n          started this project\n\n          \n            \u2014\n            \n\n                Sep 24, 2016 12:59 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Finesse","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/finesse","keywords":"later,fill"},{"level_0":752,"hack_vector":[[0.1311947554,-0.0915687159,-0.0292442143,0.0447234064,-0.0265823714,0.1418059319,0.1913805008,-0.0343376584,-0.005746813,-0.0369062722,0.0257862415,-0.0614804104,0.1397229135,-0.0582325161,0.0592214279,-0.0008993766,0.2135956436,0.0070713013,0.0363394246,0.1348519027,-0.2312872559,0.0341205299,-0.0386677198,-0.0141336732,0.098377265,-0.0194869619,-0.0260570049,-0.1766638458,-0.0330901183,-0.0952627733,0.0631663874,-0.1195072234,0.0271540377,-0.0738036707,0.0008920958,-0.020269338,0.1256868243,-0.1387690902,-0.0617095456,-0.003549322,0.0451915637,-0.1370954961,-0.1471204013,-0.0465693772,0.0624374673,-0.0628089383,0.0153406067,-0.0641319379,-0.0432235971,-0.2208642513,-0.1479325742,0.0157416314,-0.0973841175,-0.0101071475,-0.2083063275,0.1558256894,-0.1123740226,-0.036508806,0.0467743911,-0.1123266816,-0.0757928416,0.0093196956,0.0787406936,0.0386776403,0.1026668772,0.0278496016,-0.091386795,-0.1249955818,0.0367064327,0.0244037956,0.0581413731,-0.0518717691,0.0354765654,-0.1123193651,0.0175745524,-0.1241825074,0.1701643318,-0.001988874,0.0030185464,-0.1433145404,0.1062510163,0.1668398529,0.0436997227,0.177993983,0.0933973342,0.1924812496,-0.1102524251,-0.0651418343,-0.03373852,-0.0841763392,-0.15695104,0.0577889085,0.0924537778,-0.0477249697,-0.0111682974,0.0092495391,-0.156814456,0.2434037775,0.0013532345,-0.0756439865]],"hackathon_name":"Code for the Kingdom Bay Area Hackathon 2016","index":752,"project_description":"Tell a prayer buddy that you are praying, by pressing a button.Prayer ButtoniOS AppWebsiteRegister interest in the Prayer Button!We created a product for telling a prayer buddy that we're praying, by pressing a button.This is an AWS IoT Button. When I press the button it connects over wifi, and tells my prayer buddy that I'm praying, via an app on their phone.Swift v3 iOS iPhone app, and the AWS Button talks to the AWS IoT service, which triggers an AWS Lambda, which talks to the Go backend hosted on Pivotal Web Services (PaaS), and using a AWS SimpleDB database.We'd like to enable church communities to use this with prayer buddies so all they need to do is hand out pairs of devices. We want it to be possible to use this to do anonymous prayer buddies too. We have started looking into buttons that will work on cellular networks and vibrate when the buddy prays. And we'd like to expand the app so you could look at your prayer history, and we'd like to add incentives to bring you break to praying when life gets on-top of you.While smartphones have increased the connection we have with each other through social apps, and made it easier for us to carry a Bible with us everywhere. They can get in the way of quality time with God.As an example: Sometimes I'll think \"Oh I should check-in with my buddy and pray for them\" and I get my phone out to shoot them a message and then get distracted by an Facebook notification.We wanted to tell our prayer buddies that we're praying, without needing to interact with our phones.Praying icon by Cristiano Zoucas from the Noun ProjectCode for the Kingdom Bay Area Hackathon 2016Building the Backend API and IoT Button IntegrationBuilding the iOS appLeigh McCulloch\n          started this project\n\n          \n            \u2014\n            \n\n                Sep 24, 2016 01:12 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Prayer Button","project_tags":["ios","swift","golang"],"project_url":"https:\/\/devpost.com\/software\/pray-together","keywords":"prayer,button,aws,praying,buddy,buddies,app,get,like,use,us,phone,talks,iot,work,gets,facebook,go,god,hand"},{"level_0":753,"hack_vector":[[0.1258456707,-0.1312408745,-0.013506962,0.0369129814,-0.0424363762,0.133333236,0.1867247224,-0.0313475877,-0.0037678333,-0.0439725854,0.0227810573,-0.0147525603,0.1365858763,-0.0773544237,0.0327469148,0.0662570745,0.2521799803,0.0110683376,0.0357459076,0.1320705265,-0.223845616,0.0058254469,-0.0425006784,-0.0485176779,0.1209735423,-0.0297140274,-0.0476352498,-0.1763883084,0.0111062676,-0.1049847156,0.0310045704,-0.0936537758,0.0371295549,-0.0627338961,-0.0028418612,0.0017022563,0.120872505,-0.1313472986,-0.0311378669,0.0248089526,0.0323783979,-0.1308096349,-0.1752169579,-0.0439880155,0.0157074742,-0.0703943372,0.0337434076,-0.0365096107,-0.0240741111,-0.2143387198,-0.1091701239,0.0330989584,-0.1094153374,-0.0680302456,-0.1763817817,0.175913766,-0.1239450276,0.0028603997,0.0258913077,-0.0482302345,-0.0471138284,0.0462402739,0.0616878308,0.080569461,0.1178202629,0.0035359899,-0.1221119165,-0.1595609784,0.022809349,-0.0014496716,0.064266026,-0.0363524258,0.0143830357,-0.1277173311,-0.0177708939,-0.0949363485,0.1737545878,-0.0080747129,0.0328225978,-0.1623559743,0.1179822609,0.1860073954,0.0221770611,0.1758956462,0.1179118007,0.1946667433,-0.1193247736,-0.0129030999,-0.0259973221,-0.08705955,-0.1348697096,0.0799627081,0.0674899295,-0.0121354451,0.0227296948,-0.0335571989,-0.1474478692,0.2070594579,0.0441184938,-0.0808329508]],"hackathon_name":"Code for the Kingdom Bay Area Hackathon 2016","index":753,"project_description":"We help people find & connect with others in their community to be in their \"corner\" to provide support & guidanceEveryone needs people in their corner. We all get beat up by life and return back to our corner, but many don't have key people in their corner who can support, encourage, and coach them.A service that connects people who have been through the same storm.Code for the Kingdom Bay Area Hackathon 2016Annie Redmond\n          started this project\n\n          \n            \u2014\n            \n\n                Sep 24, 2016 01:23 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Corner","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/corner","keywords":"corner,people,tksanfrancisco,inspiration,back,beat,built,challenges,coach,connects,encourage,everyone,get,key,support,learned,life,many,needs,next"},{"level_0":754,"hack_vector":[[0.1649148762,-0.109090887,-0.0312540494,0.0441721268,-0.0218133032,0.1449209899,0.1862810701,-0.0436250567,-0.0012203087,-0.0307963658,0.0164114162,-0.056819953,0.1315377802,-0.0547079183,0.059192013,0.0011604179,0.2028134316,0.0026277474,0.0469699018,0.1279262304,-0.2446944714,0.0235744156,-0.0386724621,-0.0185966734,0.0932526067,-0.0316907875,-0.0220998358,-0.1720959842,-0.0308962464,-0.1085046828,0.0613888577,-0.1168640181,0.0351823345,-0.0739088655,-0.004971562,-0.0326979458,0.1177712753,-0.1489132494,-0.0660871267,-0.0009812324,0.0597249046,-0.1237587705,-0.1374461949,-0.0483310781,0.0599648021,-0.0619632043,0.0194259305,-0.0709349513,-0.0432526767,-0.2190448195,-0.1544572264,0.0192329697,-0.1078935042,-0.0080181221,-0.2068758011,0.1537176222,-0.1113198996,-0.0406356268,0.0442219414,-0.0926541835,-0.0753236935,-0.0003420766,0.0716656893,0.0303907786,0.1003340781,0.0204620101,-0.1065487117,-0.1168333888,0.0237115044,0.0307691954,0.0664000064,-0.0529578589,0.018014377,-0.1239497885,0.0182199907,-0.1256168634,0.1773800105,0.0140612703,-0.0011612445,-0.1427728832,0.102715604,0.1636413336,0.023096228,0.1792526096,0.1063630581,0.2067084908,-0.0960898623,-0.0415417664,-0.028482873,-0.0761055574,-0.137943849,0.0668546855,0.0934219286,-0.0409014635,-0.0205958895,0.0044842944,-0.1482188553,0.2419422716,0.0056266119,-0.0740021095]],"hackathon_name":"Code for the Kingdom Bay Area Hackathon 2016","index":754,"project_description":"Guided Christian Meditation that helps strengthen believer's devotional life and evangelistic toolGuided Christian MeditationMy son introduced me to a secular guided meditation site that is powerful, interactive and enjoyable.  I would include God into it and  became a part of my devotional life. I wished there was something like it for Christians as I saw it as an incredible tool to draw people closer to God.  When I complained to God about this, I felt Him saying \"You do it.\"  Since then we've developed a website and recorded over 150 meditations that we believe will have a powerful impact on believers as they meditate on God's Word.While we might have good intentions to meditate on God's Word, too often we get distracted, lose focus and our thoughts wander.  Ocean's Deep Encounters gives you 8-10 minutes of guided meditation with prompts as well as silence for you to personally interact with God.  It helps keep you focused and on track in your time with God.While the website is mobile friendly, the meditations do not advance on such platforms as iPhone and iPad.  We need a mobile app developed so that the meditations are easily accessible to all platforms.Code for the Kingdom Bay Area Hackathon 2016Adena Hodges\n          started this project\n\n          \n            \u2014\n            \n\n                Sep 24, 2016 01:40 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Ocean's Deep Encounters - Guided Christian Meditation","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/ocean-s-deep-encounters-guided-christian-meditation-po27i3","keywords":null},{"level_0":755,"hack_vector":[[0.1296846122,-0.0909093395,-0.0400860496,0.0209761001,-0.0188243724,0.1315754056,0.2140567303,-0.0264895372,-0.0023921875,-0.010146061,0.0095319608,-0.0772832558,0.1292402893,-0.0569847152,0.065962404,0.0080682551,0.2097576708,0.0005885706,0.0209255032,0.1279077679,-0.2415528148,0.0378452875,-0.0353043824,-0.0141164763,0.0900851786,-0.0131280962,-0.019400632,-0.1729180217,-0.0286899842,-0.0962195918,0.0699634925,-0.1293604672,0.0256477706,-0.0955384895,-0.0203204751,-0.02456755,0.1044427603,-0.1458643973,-0.0663743913,-0.0184067413,0.0215413272,-0.1325616986,-0.1273283213,-0.0432692841,0.090258278,-0.0622230023,0.0055780979,-0.0741679296,-0.0430062525,-0.2126053721,-0.1517528147,-0.0012573845,-0.0968939885,-0.0047096442,-0.1875214577,0.1566968113,-0.1173205078,-0.0476757661,0.0404004864,-0.1213853359,-0.086365886,0.016790783,0.0862770304,0.0363183953,0.0963152722,0.0211826265,-0.0983254462,-0.1130826622,0.0531446598,0.0327015929,0.0596393496,-0.0589171275,0.0386962593,-0.1151906475,0.0184406377,-0.1499056071,0.1637808084,0.0038380751,0.0045233057,-0.1382368356,0.1289326996,0.16255337,0.0632714108,0.1706815809,0.0829414129,0.1971524954,-0.0864658207,-0.0450769663,-0.0208184384,-0.0783355013,-0.1670508683,0.0479358099,0.098874867,-0.0545396954,-0.0212238748,0.0332005881,-0.1660229266,0.2315618098,-0.0060200375,-0.0770640522]],"hackathon_name":"Code for the Kingdom Bay Area Hackathon 2016","index":755,"project_description":"A chat bot integrating with WeChat platform to deliver a guided Bible learning experience for seekers and believers.Get Today's reading as a linkLong passages and Today's reading opens a bible.com link inside the app.Enter any passage, verse, or range and get the text.Ask any question, get a human written response!Quickly get a commentary for a passageRequest a commentary for todays readingCommentary opens inside the appAsk pre-set questions and get answers in text.Ask pre-set questions and get answers in text.The app is fully able to work in ChinesePassages can be pulled up in ChineseQuestions can be answered in ChineseWeChat platform is the most popular messages and social media platform in China. What if we could better reach the Chinese with an integrated chat bot that could help people learn more about the Bible.Provide a simple reading plan for someone who has never encountered the Bible. Answer basic questions and respond with topical information and verse lookup via the WeChat messages app.Begin by subscribing to the Gospel Guide bot on wechat. The bot responds with a welcome and instructions. Commands such as Start, Stop, Next, allow the user to begin a new 14 day intro to the Bible reading plan. The bot will auto send you todays reading each day and keep track of what reading your are currently on. The bot also accepts voice commands using WeChat's built in voice recognition. The voice recognition currently only works for mandarin Chinese, however our app is multilingual and can accept these Chinese voice commands without issue.In addition to the reading plan, users can ask basic questions such as 'What is God like?', 'Who is Jesus?', 'Who is the Holy Spirit?', and 'What is love?'. Questions that do not have automatic responses are forwarded to another WeChat user who can send a response back. This person could be a pastor or spiritual leader. The bot is also able to receive voice message responses.The Gospel Guide bot can respond with Bible text lookups. Simply send a message containing a Bible verse, chapter, or range, and the bot will send you the full text. If you would like more information about a verse or passage you can send a mesage containing keywords such as 'explain', 'I don't understand', 'commentary' followed by a scripture passage and the bot will send you a link to a Bible commentary on that passage!We built the Gospel Guide bot using Python, Flask, and Redis running on a Heroku.com server.Overall, the coding went smoothly. The biggest issue we had was understanding the limited WeChat documentation on message passing. Because the documentation was translated from Chinese, many questions we had were left unanswered and were solved through trial and error. Other challenges included bugs from working with utf-8 characters and handling the different use cases for text messages, video messages, and audio messages.We built a working Chat bot!I (Ben) learned Python this weekend, thanks to the help of Femi!More Chinese integrationCode for the Kingdom Bay Area Hackathon 2016Ben Dahl\n          started this project\n\n          \n            \u2014\n            \n\n                Sep 24, 2016 03:06 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"WeChat Gospel Guide bot","project_tags":["python","wechat","heroku","redis","flask","bible.org"],"project_url":"https:\/\/devpost.com\/software\/wechat-bible-bot","keywords":"bot,bible,wechat,chinese,send,reading,voice,messages,built,questions,could,text,plan,passage,verse,gospel,message,guide,commands,responses"},{"level_0":756,"hack_vector":[[0.1559768319,-0.127637729,-0.0125042843,0.0649366379,-0.0219789557,0.1386191696,0.1933024079,-0.0428714454,-0.0264328662,-0.0173320882,0.0308654793,-0.0299352463,0.1429091096,-0.0635245591,0.0632982999,-0.0080222785,0.1961478293,-0.01710115,0.0601433367,0.1248452812,-0.2437895387,0.0262746401,-0.0345884152,-0.0121999858,0.120039165,-0.0294756796,-0.0242615081,-0.1795030832,-0.0158897452,-0.0936410204,0.0659013465,-0.1141840741,0.0285376757,-0.069842726,-0.0161010306,-0.0297030378,0.1163376495,-0.1447241604,-0.0675212666,0.0092798574,0.0622492656,-0.1274200529,-0.1326996535,-0.0418150052,0.0399016514,-0.043683555,0.01460391,-0.06927564,-0.0253494624,-0.2132572681,-0.1316566616,0.0197068863,-0.1209622845,0.0031378316,-0.205775395,0.1568711251,-0.1350401193,-0.0110406391,0.0258157365,-0.0840031356,-0.0588557683,0.0190169234,0.0687214136,0.0508471765,0.1186208278,0.0162630267,-0.1130977347,-0.121496968,0.0157699324,0.012342413,0.0560877696,-0.0414246358,0.0196306035,-0.1296190321,0.0126119945,-0.1160214171,0.1882997602,0.0041873669,0.0115908664,-0.1495450437,0.1181292012,0.1624291688,0.0324109867,0.1672887504,0.127541557,0.2094311565,-0.1038013697,-0.0323669538,-0.0279240366,-0.0754285157,-0.1433000416,0.0768705159,0.1029168516,-0.0307216998,0.0028952912,-0.0150368754,-0.1432454288,0.2201891541,0.0248789638,-0.0514564067]],"hackathon_name":"Code for the Kingdom Bay Area Hackathon 2016","index":756,"project_description":"Through Open-Source Hardware & Software, Developing a DIY Robotics Curriculum for Under-Resourced Urban CommunitiesThough we love the original technology behind the Lego Mindstorms Educational Robotics kit, we're not excited about its heavy price-tag.  Thus, we're developing the T.A.C.H.NOLOGY Robotics System, where we incorporate T.echnology with A.rts & C.rafts to provide a safe yet scalable experience that democratizes EdTech across both age and socio-economic barriers.An educational D.I.Y. Robotics Kit that starts with older Elementary and continues up to High School and beyond.Through Open-Source Hardware & Software, we're able to keep this educational kit as affordable as possible.Integrating the hardware with software to build the Robotics system has been an ongoing challenge in Christ.Witnessing youths\/families make a turn-around for the good as we use this Educational Robotics Kit as a vehicle to share the love and grace of Jesus Christ.It's all about Jesus and His Amazing Grace to allow any of this technology to work and be used to touch lives for His Glory and His Kingdom.Seeking Prayer Supporters and Church Partnerships in testing, refining and spreading our competitively-priced curriculum to build interactive communities of support and sharing.Code for the Kingdom Bay Area Hackathon 2016Jason Chan\n          started this project\n\n          \n            \u2014\n            \n\n                Sep 24, 2016 04:50 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Urban Tech Missions: Bridge To Coding & Robotics","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/urban-tech-missions-stairway-to-coding","keywords":"robotics,educational,kit,build,love,software,grace,system,christ,hardware,technology,jesus,incorporate,glory,elementary,lego,excited,learned,kingdom,experience"},{"level_0":757,"hack_vector":[[0.1305873394,-0.0977199748,-0.0302122757,0.0534817688,-0.0180513803,0.1435112357,0.1985833049,-0.0309763197,-0.0252725836,-0.0117709655,0.0220217071,-0.0535706356,0.1475009173,-0.0670980215,0.0608887598,0.006463882,0.2141901106,-0.008955365,0.0435649753,0.1371035427,-0.2446853369,0.0306242704,-0.0319943279,-0.012665309,0.1149652004,-0.0291136988,-0.0322484188,-0.1854625046,-0.0230217539,-0.0799930319,0.0754040033,-0.1146946847,0.0252761841,-0.0709018484,-0.0236717686,-0.0130980164,0.1139095053,-0.1298198402,-0.046239756,0.0009903439,0.0494330898,-0.1317910105,-0.1503611207,-0.0363978222,0.0616074279,-0.0468443669,0.0079500061,-0.0676845312,-0.0199734624,-0.2232191116,-0.1249316856,0.0097706579,-0.1029270142,0.0072193397,-0.2062244713,0.1620276123,-0.1346584707,-0.017877588,0.0298863575,-0.0959351808,-0.0707032531,0.0217800383,0.0757126957,0.048675824,0.1168017536,0.0188195687,-0.0860977247,-0.1325900704,0.042019017,0.0120832706,0.0541889369,-0.0425373539,0.0254235025,-0.1108223498,0.0104716523,-0.1178321391,0.1775539815,-0.0112127895,0.0119881146,-0.1397202313,0.1196374148,0.1645016223,0.0482809208,0.1738856733,0.1043333709,0.2120479196,-0.093111068,-0.0427414998,-0.0230243318,-0.0743435249,-0.1630858928,0.0613550246,0.0916153118,-0.0411862545,-0.0096528763,0.0133389384,-0.1536222845,0.2241172045,0.0211425032,-0.0692667514]],"hackathon_name":"Code for the Kingdom Bay Area Hackathon 2016","index":757,"project_description":"enabling unchurched kids to study in a Sunday School on their devices, and enabling any teacher to publish lessons2itour first Spanish lesson done in this HackathonAnimated Bible Stories mixed in  with interactive text gamesOnline editor for teachers to create their own lessonsand animated storiesBillions of kids never had a chance to hear about God and study the Bible in its entirety as structured education. Our hope is to provide such education via this \"virtual\" Sunday School.1) kids can use iOS\/Android app to listen to the animated stories and play text-based interactive games to study Bible topic by topic\n2) Allows teachers to add their custom lessons in the online Editor and push it to their kids devices or to the world.During C4TK hackathon, we wanted to create a completely new lesson with Carmen who has never used our app and our Editor before.  She and Camil managed to add this lesson in less than 1 day, and do it all in Spanish - this is our first lesson in Spanish!!Also, we added ability to add animated Spine objects to a timeline of the animated story, to start their animation in the proper time of the voiceover audio.App is built with Unity\nBackend is Ruby on Rails.\nOnline Editor is Coffescript.Hackathon feature involved modifications on all 3 domains - app, backend and front-end.Usability & bugs of the Editor for teachers and App for kids.\nDesign for placing multiple animation timeline tracks along the audio track.Carmen and Camil created completely new lesson in Spanish, using Editor, telling about Salvation Plan.\nWe have a service that allows teachers to independently create lessons for the targeted group of kids and communicate the Message in the most relevant way for those kids\/teens.Our Editor requires a lot more work to improve it's usability for teachers.Fix bugs in the Editor & add tests for it.\nBuild more new lessons and improve UX in the app and Editor.Code for the Kingdom Bay Area Hackathon 2016I worked on creating a story to explain the salvation Plan to kids from 4 to 12 years old.. thanks to Nik's tool , I was able to upload the pictures, create the sequence, record voice and help testing the platformNik Abkairov\n          started this project\n\n          \n            \u2014\n            \n\n                Sep 24, 2016 08:26 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SunScool - Sunday School App for Kids","project_tags":["unity","ruby-on-rails","coffeescript"],"project_url":"https:\/\/devpost.com\/software\/sunscool-sunday-school-app-for-kids","keywords":"editor,kids,app,add,lesson,teachers,spanish,lessons,animated,new,hackathon,carmen,sunday,study,create,never,completely,school,online,camil"},{"level_0":758,"hack_vector":[[0.1641848087,-0.1436040848,-0.0172207803,0.0419421494,-0.0330043584,0.1400173604,0.196138531,-0.0363002494,-0.0023478903,-0.0090811523,0.0194513798,-0.0273002777,0.1289687455,-0.0458115041,0.0646752343,0.0224224757,0.210744977,0.0011789827,0.0385233797,0.106413953,-0.2431434095,0.0338596925,-0.0308790579,-0.0289293788,0.1128758863,-0.0407546014,-0.0130744623,-0.1826846451,-0.0124092298,-0.0896161422,0.0548495874,-0.1137398332,0.037534792,-0.0887244493,-0.0269421693,-0.0275215767,0.1105373725,-0.1513130814,-0.0702402666,0.0053822189,0.0249263197,-0.1414468735,-0.1295746565,-0.0524675809,0.0470779203,-0.0529603474,0.021934377,-0.0553674512,-0.0253643449,-0.1984756291,-0.1317532063,-0.0013675209,-0.126189962,-0.0256950576,-0.1823577136,0.151786983,-0.1206473932,-0.0149337053,0.0514605269,-0.0661142543,-0.077545844,0.0099021448,0.06777744,0.0497940779,0.0958355516,0.006004116,-0.1239974648,-0.1289117783,0.03280944,0.0201025028,0.0745010078,-0.0623764209,0.0250577517,-0.1330213696,-0.0127375564,-0.1510179192,0.1818384677,0.0105169686,0.0352138244,-0.1422944516,0.1235983148,0.170350343,0.0148565769,0.1801970005,0.12904796,0.1928050667,-0.1222297996,-0.0014277991,-0.0167956594,-0.0899173543,-0.1460968405,0.0832791626,0.0836841986,-0.0369154364,0.0124330604,-0.0198817793,-0.1303215921,0.2172767669,0.0353090428,-0.0649043843]],"hackathon_name":"Code for the Kingdom Bay Area Hackathon 2016","index":758,"project_description":"Pinterest meets Quora\/Stack Overflow meets GitHub meets the Bible: Playlists for the BibleTreasured WordThe Bible is near and dear to every believer. I need more of it. My mind needs to be saturated with it, and my soul needs it very much.Treasured Word is Quora\/StackOverflow meets Bible verse memorization and discovery, recall, encouragement, etc. Users will be able to tag, categorize, label, and create collections (\u201cmetadata\u201d re: the verses) of Bible verses, and the community will be able to upvote\/star\/follow\/favorite the tags, categories, labels, and collections for easy discovery and retrieval later.Topics\/Categories could be: Worship, Financial Stewardship, Marriage, Love, Work, etc (most high-level)\nLabels would be smaller categories, including Moods\/life experiences, such as: Depression, Anxiety, Fear, Joy, Celebration, Mourning, Death, Sorrow\nTags would be more loose, kind of like Twitter hashtags: #blessed, #thankful, #rebuked, etcPython, Django, JavaScript, ReactTaxonomyCode for the Kingdom Bay Area Hackathon 2016I built everythingJonathan Tsai\n          started this project\n\n          \n            \u2014\n            \n\n                Sep 25, 2016 03:05 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Treasured Word","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/treasured-word","keywords":"word,treasured,bible,categories,etc,would,tags,collections,discovery,labels,needs,able,verse,verses,tk,experiences,favorite,fear,financial,follow"},{"level_0":759,"hack_vector":[[0.1461571008,-0.1382599622,-0.0026601444,0.0979669243,-0.0489505604,0.1592607647,0.1691484004,-0.0479150936,-0.0394365601,-0.0289191194,-0.0046953377,0.0248974059,0.1305890679,-0.0751497373,0.008394789,0.0665721297,0.2494470179,0.0407373458,0.0572421402,0.0837341174,-0.1986392587,0.0069105499,-0.0489501618,-0.0611919612,0.1546747983,-0.0163052175,-0.069629468,-0.193110764,0.0219014026,-0.0728921443,0.0243431628,-0.1038829759,0.0738650635,-0.0381123237,-0.0324238427,0.0201403145,0.1445447952,-0.1084947586,-0.0027012331,0.0899935886,0.0626709089,-0.1544933021,-0.1979186535,-0.0442122556,-0.0476953425,-0.0543325357,0.0366253145,-0.0165759493,-0.0085679656,-0.1947366595,-0.0410298705,0.0338475332,-0.1038410291,-0.0475504622,-0.1229014918,0.1594977528,-0.1575757116,0.0596853234,-0.0075139129,0.0259425715,-0.0365392976,0.030858662,0.0494161844,0.0779278651,0.1457765251,-0.0323749967,-0.1279997379,-0.1762732863,0.0189096704,0.0048467228,0.0660617501,-0.0400701538,-0.01053546,-0.1357842684,-0.0471110716,-0.0717840865,0.1908243001,0.0268617366,0.0938272923,-0.1406884342,0.1118011773,0.1615115255,0.0269108284,0.1565498412,0.1500958651,0.1768157035,-0.1384108812,0.0474605933,0.0029031439,-0.1118321866,-0.0892948508,0.104431659,0.0312844627,0.0019284706,0.0618703142,-0.0789822936,-0.0870009959,0.1699284762,0.0990934744,-0.0544414371]],"hackathon_name":"Code for the Kingdom Bay Area Hackathon 2016","index":759,"project_description":"Partnering with Tanzanian MicroBusinesseslogoVisits to TanzaniaCollect Survey Data OfflineAndroid App submitting to Google FormsNo time to do anymoreIt worksMore time is neededAdding position on a mapCode for the Kingdom Bay Area Hackathon 2016Josef John\n          started this project\n\n          \n            \u2014\n            \n\n                Sep 25, 2016 03:48 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"E3 Connect","project_tags":["android"],"project_url":"https:\/\/devpost.com\/software\/e3-connect","keywords":"time,works,learned,adding,android,anymore,app,built,challenges,collect,connect,data,forms,google,inspiration,map,visits,needed,next,offline"},{"level_0":760,"hack_vector":[[0.1392374486,-0.1178283244,-0.0009768839,0.0851696953,-0.047797747,0.1611161381,0.1919812262,-0.0444398709,-0.0389990658,-0.0213200301,0.0110468948,0.0081020277,0.1366358101,-0.0731005669,0.0224092118,0.0566891059,0.258256197,0.0281576477,0.0498469993,0.1129415855,-0.2072895169,0.0190428719,-0.0489380471,-0.0514486544,0.1459315717,-0.0120351799,-0.0671017393,-0.1918816417,0.0153861595,-0.0879804939,0.0383492969,-0.102959238,0.065648213,-0.056243442,-0.0182870235,0.0065663531,0.1493826658,-0.108210519,-0.0146140708,0.0664494708,0.0588452183,-0.1548027396,-0.1830374748,-0.0442260429,-0.0140269967,-0.0491686836,0.0320330262,-0.0200431291,-0.013693531,-0.1965565085,-0.055185236,0.0270477682,-0.1058019921,-0.0346924029,-0.1392789632,0.1452210248,-0.1561955214,0.0391257703,0.0111832833,-0.0017694059,-0.0275539849,0.0286386907,0.0658892468,0.0617083386,0.14202784,-0.0335783102,-0.1158271506,-0.1695183218,0.026620619,0.009450688,0.0601028129,-0.0361939892,-0.0055618552,-0.136942789,-0.0483761989,-0.0946651399,0.1868971586,0.018458087,0.0667105541,-0.1511237919,0.1117708758,0.163234815,0.03193051,0.1638312787,0.1446534395,0.1808440387,-0.1430037618,0.025932733,-0.0082790423,-0.1148324758,-0.1184063181,0.0922614038,0.0501555055,0.0060550449,0.0541994385,-0.0542803667,-0.1036132351,0.187970072,0.0823497623,-0.0570210852]],"hackathon_name":"Code for the Kingdom Bay Area Hackathon 2016","index":760,"project_description":"A simple technology with mass appeal that protects relationships.Image Library PagePersonal conviction about role of inappropriate contentUses screenshots to detect inappropriate contentGoogle App Engine + Cloud SDK w\/ Pythongetting the screenshots and photo recognition to workgetting the screenshots and photo recognition to workCode for the Kingdom Bay Area Hackathon 2016Jacob Gray\n          started this project\n\n          \n            \u2014\n            \n\n                Sep 25, 2016 03:58 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.dchiasson\n          posted an update\n\n          \n            \u2014\n            \n\n                Sep 25, 2016 03:42 PM EDTPresenting in one hour, way to go team Open Screen! It has been a blast working with you!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Open Screen","project_tags":["google-app-engine","google-cloud","flask","bootstrap","android","python"],"project_url":"https:\/\/devpost.com\/software\/open-screen","keywords":"screenshots,work,photo,content,getting,inappropriate,recognition,ran,detect,app,built,challenges,cloud,sdk,conviction,engine,python,role,google,uses"},{"level_0":761,"hack_vector":[[0.1503465772,-0.1233256608,-0.0260515939,0.0535688028,-0.0351267979,0.141684249,0.1929101795,-0.0356576554,-0.0374793001,-0.0159863476,0.004002111,-0.0372178555,0.1401970088,-0.0665200129,0.0452468768,0.0324961431,0.227156058,0.0149301123,0.0397462212,0.1247221231,-0.2374301106,0.0266872123,-0.0309558176,-0.0315234363,0.1222002208,-0.0123252971,-0.0432166941,-0.1756204218,0.0002598034,-0.0881262273,0.059826266,-0.1159305796,0.0394221172,-0.0633932725,-0.0271300692,-0.0236290302,0.1369853169,-0.1411791295,-0.041639518,0.0237138122,0.0489405468,-0.1459317505,-0.1685779542,-0.0477267765,0.0335469581,-0.0619757958,0.0146779446,-0.0510734245,-0.0113087595,-0.2185486257,-0.1061056033,0.0215205066,-0.1059374288,-0.0191555098,-0.1817108393,0.1702958941,-0.1427896619,0.0091861021,0.0165983308,-0.0568616539,-0.0523278192,0.0262393672,0.0709992647,0.0610209443,0.1241534799,-0.0084599974,-0.1092730835,-0.1354033351,0.0369354822,0.0256690402,0.0708131343,-0.0352780409,0.0046828203,-0.1264779568,-0.0188520104,-0.1182764471,0.1744722575,0.0107937008,0.0362557918,-0.1389257908,0.113177076,0.1627589315,0.0398074351,0.1769739091,0.1256780177,0.1913020611,-0.1238979325,-0.0179843474,-0.0238244683,-0.099625729,-0.1355368942,0.0755266845,0.0866418481,-0.0349061042,0.0195732638,-0.0113250148,-0.1344417632,0.21197173,0.0403410532,-0.0656137913]],"hackathon_name":"Code for the Kingdom Bay Area Hackathon 2016","index":761,"project_description":"Intercede is an iOS app that empowers the Church to learn about and pray for current issuesIn an age where hardships and brokenness dominate the news, it is easy to get depressed and grow apathetic about the state of the world. Intercede is an app that delivers content about what's happening today but also empowers and challenges the Church to also pray for current issues.Intercede sends a daily reminder to pray for current issues and events that are happening around the world.With a lot of prayer + using Xcode.Code for the Kingdom Bay Area Hackathon 2016Isaac Wang\n          started this project\n\n          \n            \u2014\n            \n\n                Sep 25, 2016 04:38 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Intercede","project_tags":["ios"],"project_url":"https:\/\/devpost.com\/software\/intercede","keywords":"intercede,issues,pray,content,happening,world,also,app,current,challenges,church,easy,empowers,enough,events,depressed,fun,get,giving,dominate"},{"level_0":762,"hack_vector":[[0.1482873857,-0.1445105374,0.0097647477,0.0936333016,-0.0509127527,0.1553960741,0.1638024896,-0.049965851,-0.0431557,-0.0225414019,-0.0087185428,0.0355217606,0.1283807606,-0.0768480003,-0.0061464212,0.0872049257,0.2583307326,0.0367298648,0.0483262725,0.0901402235,-0.1841648668,0.0057794526,-0.0430898294,-0.0592351519,0.180190742,-0.0166690331,-0.0745146126,-0.1885195374,0.0278585684,-0.0705316514,0.0226008501,-0.0918404683,0.08490666,-0.0429283306,-0.0388227291,0.019049447,0.1494749635,-0.0991835445,0.0115094213,0.0988356918,0.0545206629,-0.1501428038,-0.1882065237,-0.0349818096,-0.0565049201,-0.0468959063,0.0424612127,-0.000874217,-0.0039575901,-0.1895717084,-0.0157300755,0.0326899774,-0.1056113541,-0.0586288013,-0.0978975892,0.1495917588,-0.1601097882,0.080120787,-0.0157538541,0.0528500751,-0.0118926885,0.0352282375,0.0406039245,0.076996915,0.1474328041,-0.0512724817,-0.1322679073,-0.1786150485,0.0149555141,-0.0044132853,0.0692799687,-0.0334155485,-0.019353928,-0.1411475539,-0.0703007802,-0.0599810854,0.1912063211,0.0162701681,0.1080921516,-0.1425321698,0.1072760448,0.1545228958,0.0155364936,0.1459302753,0.1545883864,0.1547107697,-0.150907144,0.070250392,0.0062396885,-0.1240591258,-0.0869357586,0.1077268049,0.0205958504,0.0183270257,0.0798507035,-0.0915014073,-0.063445121,0.1436436325,0.1217376068,-0.0468969718]],"hackathon_name":"Code for the Kingdom Bay Area Hackathon 2016","index":762,"project_description":"Bringing accessibility and reading pleasure to the daily bible reading plan.Code for the Kingdom Bay Area Hackathon 2016Justin Ross\n          started this project\n\n          \n            \u2014\n            \n\n                Sep 25, 2016 05:02 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ReadScripture.org Chrome Extension","project_tags":["javascript","scss","html5","chrome"],"project_url":"https:\/\/devpost.com\/software\/readscripture-org-chrome-extension","keywords":"readscripture,org,tksanfrancisco,tk,ran,proud,next,learned,inspiration,extension,chrome,challenges,built,accomplishments"},{"level_0":763,"hack_vector":[[0.141115427,-0.1348255873,-0.0218511838,0.0224093832,-0.0291565862,0.1106035933,0.2046123296,-0.0185806453,-0.022694122,-0.011621437,0.0020700705,-0.0590526499,0.144459188,-0.0628977045,0.0575410463,0.0183723774,0.211687386,-0.0021178937,0.0388345383,0.1185021773,-0.2404345721,0.048100926,-0.032481242,-0.026679365,0.120165877,-0.0287395883,-0.0284312982,-0.1677947789,-0.0003272114,-0.0927639231,0.0433137044,-0.1297245771,0.0310600605,-0.0768732056,-0.0149893062,-0.0374890566,0.1188153625,-0.1622871757,-0.0705051646,-0.0123373894,0.0203457642,-0.1490467787,-0.1451571584,-0.0486835949,0.0471638516,-0.0653194785,0.0127668688,-0.0718150735,-0.0072775441,-0.1802516133,-0.1408970505,0.0078910505,-0.1184850857,-0.0069619012,-0.1879512817,0.1661540866,-0.1317597032,-0.0274139121,0.0512855798,-0.0968234986,-0.08361049,0.0231859479,0.0739165023,0.064374797,0.0895985067,0.0232419856,-0.1125691906,-0.1356023103,0.0333451554,0.0296948198,0.0865492523,-0.0697611272,0.0264169108,-0.1233678758,0.0220609475,-0.154933691,0.1602099836,0.0024927594,0.0357541554,-0.1215003729,0.1270169467,0.152785942,0.0525605194,0.1653529704,0.117060408,0.1771615595,-0.128728047,-0.0270704534,-0.0203499645,-0.0846015438,-0.1279724836,0.0599597618,0.0977423713,-0.0537440367,0.0116349347,-0.0142377494,-0.1726745963,0.2149616629,0.0203221459,-0.0754511878]],"hackathon_name":"Predicting pollution incidents","index":763,"project_description":"Pollutions were happened when the pumping station failed. The best way to prevent pollution is to predict PS failure.To solve the real life problem which can improve my analysis skillsThree correlation factors are found and analysed, which are water level variations, running period of pumping station and power consumption distribution.Firstly, the water level variations data is calculated, these type of data are sufficient. By compaying the normal pattern with abnormal pattern of pumping station, the trend of blockages can be identified.Then, the running period is developed. because if the blockages enter into the pumping station, the operation time will be significantly increasing.Last, the power consumption of pump, is another important factors which can be used to predict the failure of pump station.Understand the data, I have asked many questions to find the right data,many thanks to the kind staffs.Some important data are not available, for example, normal running period data and hourly power consumption data.The model is effective, it does forecast the blocakge which can prevent the pollutions in advance.The whole pumping station, the seweage system.Model improvement, the model is for example, each pumping station has its own model, which should be built individually.Predicting pollution incidentsYapeng Li\n          started this project\n\n          \n            \u2014\n            \n\n                Sep 11, 2016 09:50 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"An effective model for pollutions prediction in SPS","project_tags":["excel"],"project_url":"https:\/\/devpost.com\/software\/an-effective-model-for-pollutions-prediction-in-sps","keywords":"data,station,pumping,model,power,period,running,consumption,effective,normal,example,pump,pollutions,pattern,factors,built,blockages,many,water,level"},{"level_0":764,"hack_vector":[[0.1397485137,-0.162240386,-0.006200952,0.0384805836,-0.0273825601,0.1167553365,0.1916335374,-0.0348040238,-0.0308295339,-0.0078365197,0.0076727192,-0.0119031938,0.1423698962,-0.0668634623,0.0456104688,0.0326145887,0.2305185348,0.0003249062,0.0513308011,0.1173428148,-0.2484419197,0.0315153934,-0.0364643931,-0.0352026671,0.1426161081,-0.0335097983,-0.0411110558,-0.1786750406,0.0178073049,-0.0992539972,0.048032809,-0.1335838437,0.0415073559,-0.0614644364,-0.0270668417,-0.0352302268,0.1149012968,-0.1459025294,-0.0389962047,0.0104267597,0.0335986614,-0.1545472443,-0.1632855386,-0.0602035299,0.0130475424,-0.0536872894,0.0198475383,-0.0487641357,-0.0136208888,-0.1822967082,-0.1025491208,0.0173874032,-0.1243905202,-0.0196033567,-0.1782451123,0.1695299894,-0.150003463,0.0072421702,0.0172004662,-0.0436168574,-0.0575373024,0.0343646631,0.0570481196,0.0715634748,0.1062870845,0.0026571909,-0.1245861575,-0.1537443697,0.0251975898,0.0217395518,0.0782131851,-0.0577749647,0.0295102354,-0.1261736602,-0.0064523611,-0.1224981025,0.1683980376,0.0109802233,0.0518232174,-0.1374223828,0.1315660328,0.1616242826,0.0335028879,0.1712750196,0.1407658011,0.1927209347,-0.1347837299,0.0010364106,-0.0156753846,-0.0785583332,-0.1139701381,0.0850482211,0.0834912434,-0.0315080807,0.0267740991,-0.0408456624,-0.1401032209,0.1815149635,0.0468498804,-0.0660401285]],"hackathon_name":"Predicting pollution incidents","index":764,"project_description":"Predicting pump failures by spotting anomalies in the signals between different pumps.Spike in august of 2016 indicates a possible pump failure at Fishburn pumping station.Large spike in the difference between the analogue signals recorded between the two pumps at Chilton SPS indicating a possible pump failure.A python script calculates the difference at each second in the SCADA data between two pumps at the same station. The difference jumps when one pump behaves differently to usual meaning it may have failed or started to slow down.Given more time, these observations could be included with other features to try and predict a pump failure before it actually happens.Predicting pollution incidentsJames Rampersad\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 06:43 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Pump prediction","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/pump-prediction","keywords":"difference,pump,usual,may,behaves,calculates,could,data,differently,failed,failure,features,given,happens,included,jumps,meaning,two,observations,one"},{"level_0":765,"hack_vector":[[0.1389714479,-0.1008054838,-0.0245758463,0.0294085462,-0.0289596841,0.118351467,0.1973761767,-0.0164439864,-0.0120429602,-0.0211812332,0.0250053946,-0.0565282963,0.1412470341,-0.0639490187,0.0657037646,0.0050077294,0.2055760473,-0.0033389651,0.0361044407,0.1374153197,-0.2432288527,0.0207371097,-0.0386824422,-0.0266217347,0.0944396332,-0.0257110167,-0.0214268249,-0.1704550982,-0.0042072758,-0.1033579856,0.0481639169,-0.1107133776,0.0200080201,-0.0772545785,0.0004019092,-0.0155486083,0.1145258322,-0.1521907747,-0.0752408206,-0.0028339832,0.03557368,-0.1281872094,-0.1353303641,-0.0388774239,0.0626482293,-0.069537431,0.0167628303,-0.0753643662,-0.0248090774,-0.2062946111,-0.1567998379,0.0107690115,-0.1103603393,-0.0114467107,-0.1981784701,0.1704904884,-0.1134644598,-0.0304597933,0.0362458155,-0.1064759344,-0.0681814551,0.0205536801,0.0787819624,0.0620354377,0.1157654822,0.018325638,-0.1005459055,-0.124305062,0.0293468945,0.0155925546,0.060727682,-0.0497330837,0.0204399154,-0.1180139259,0.0230705775,-0.1361717284,0.1704929024,0.0054896204,-0.0051826476,-0.1439558268,0.1232471541,0.1689446419,0.0444458053,0.1658857763,0.0986993238,0.2033718377,-0.1031563729,-0.0460552759,-0.0288776476,-0.0762776285,-0.1559729576,0.0603405386,0.1007612497,-0.0385557674,-0.0051101209,0.0029015332,-0.1655449271,0.2375466973,0.000859327,-0.0748366639]],"hackathon_name":"Hack4Equality 2016 Live Demo (Los Angeles)","index":765,"project_description":"An SMS bot service that connects those without wifi-access to nearby gender-neutral restrooms & charging outlets.LooBotThe inspiration came from tackling down discrimination against members of the LGBTQ community. Being discriminated against for being who you are and being denied access to bathroom and other services because of that was something we were not too fond of. We took it upon ourselves to help out members of this wonderful community, more specifically those who are homeless and tech savvy, and created something that is so simple to use in an attempt to connect them to services that they seek.Our app connects those without wifi-access to gender neutral restrooms and charging outlets nearby. All that the user has to do is text our phone number.We built our services using twilio, api.ai and different apis we used from sites like refugerestrooms.org and google places. We then integrated intents within api.ai and connected them to our twilio phone number that would then bring about information from the cloud in heroku which sent back information from refugerestrooms.org and google places.Training our intents was a bit difficult for there are millions of ways that an interaction can take place between our uses and our bot. Also, connecting places nearby with users in need, and training our bot to know whether an establishment is open or not took some digging.We are proud to be able to to reach out and impact that lives of those in deed. Although it may not be in a large scale yet, i feel honored that i can create something that can touch and impact so many people who are in need, in a positive effective way.I learned that you dont have to relate to anything or anyone in particular to lend a helping hand. At the end of the days we are all humans, created equally and we should strive to always help those in need. There is nothing more rewarding than to be able to create something that can benefit the lives of others'.We started LooBoot 2 weeks prior to demo day. With such little time on our side, we have created an MVP that touches solely on gender neutral restrooms and phone outlets nearby for those needing this service. We plan on growing and expanding our service by integrating shelters, housing accessibility, soup kitchens and much more.Hack4Equality 2016 Live Demo (Los Angeles)Marlon Lopez\n          posted an update\n\n          \n            \u2014\n            \n\n                Sep 26, 2016 06:57 PM EDTTook 1st Place at the Hack4Equality Hackathon in West Hollywood!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Vicc Alexander\n          started this project\n\n          \n            \u2014\n            \n\n                Sep 23, 2016 02:50 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"LooBot","project_tags":["heroku","python","flask","api.ai","twilio","google-places","sketch","photoshop","google-geocoding"],"project_url":"https:\/\/devpost.com\/software\/loobot","keywords":"something,phone,created,services,bot,nearby,need,places,number,org,create,service,refugerestrooms,proud,outlets,able,community,neutral,google,help"},{"level_0":766,"hack_vector":[[0.1431861818,-0.1094052568,-0.0223034807,0.0333809964,-0.0210519265,0.1245808229,0.1940582842,-0.0224354789,-0.0169039499,-0.0061445227,0.0298279095,-0.0698910654,0.144189015,-0.061348699,0.0774277821,-0.0003097409,0.19447577,-0.0068890294,0.036860615,0.1324968487,-0.2471400201,0.0378966071,-0.0369258933,-0.0202531703,0.0950182974,-0.0335757062,-0.0191807933,-0.178380236,-0.0177246463,-0.0929402635,0.0639037937,-0.1127120033,0.0124347229,-0.0859146342,-0.0127028739,-0.0249582436,0.104502514,-0.1557120681,-0.0814268738,-0.0147348568,0.0277800709,-0.1298201084,-0.1257611364,-0.0387918651,0.0711427182,-0.0524902605,0.0136049362,-0.080989182,-0.0233501717,-0.2060250789,-0.1592800021,0.011193281,-0.1159267798,0.0015669885,-0.1987311691,0.1695773154,-0.107461594,-0.0292008463,0.045451384,-0.1161275879,-0.0771287456,0.0185223967,0.0760013908,0.0662523136,0.0994474739,0.0270207971,-0.0991295725,-0.1151863039,0.0238085277,0.0102014439,0.0636159256,-0.0489281043,0.037049029,-0.1156599447,0.0327010117,-0.1410149187,0.1717070192,-0.010147485,0.0011047039,-0.13598454,0.1338243186,0.1639549285,0.048000332,0.1595965773,0.0979189351,0.2035574466,-0.0921877995,-0.0568303205,-0.02981342,-0.0632630289,-0.1542617083,0.0541452281,0.0978367478,-0.0582920983,-0.007847283,0.0167318638,-0.1655970216,0.2311691195,-0.0012198125,-0.0764142945]],"hackathon_name":"Hack4Equality 2016 Live Demo (Los Angeles)","index":766,"project_description":"Political Advocacy Platform Where Everyday LGBT People Are Seen and HeardWhen the discriminatory legislation known as North Carolina\u2019s HB2 (\u201cthe bathroom bill\u201d) came into national spotlight earlier this year, we were interested in learning more about it and its impact on the trans and gender-queer community, especially from people whose lives would be directly affected. Naturally, we clicked on #HB2 on Twitter, expecting to browse through personal perspectives shared online; to our disappointment, we only saw coverage by national media outlets and personal narratives were few and far between. This is due to Twitter\u2019s algorithm prioritizing crowd traffic over individual voices and the same phenomenon is seen across the modern media landscape. This made us interested in creating a impact sharing platform designed to feature individual LGBT voices.The more we brainstormed the idea, the more we realized the potential value these shared stories could have as a vehicle for political advocacy\u2014so we began to investigate how we might introduce advocacy features into the app. As we aimed to improve on what\u2019s available today, we examined the shortcomings of advocacy organizations and platforms like the Human Rights Campaign and the White House\u2019s We The People. We saw that we could create a more agile, strategic and purposed tool for LGBT personal advocacy.Speakout provides consumer-facing apps that empower citizens to share their personal stories and see the personal stories of others who are impacted by LGBT legislation. Through the app, it amplifies their voices and also encourages them to contact their elected representatives.The server also provides API access that could provide valuable insight for NGOs interested in the perspectives of everyday LGBT people whose perspectives provide valuable research.Eddie designed the wireframes, built the iPhone application using Swift, and built the server and API using Firebase as the backend. Leonard developed the Android app. We stayed in regular contact so we could collaborate on the broader mission and make sure our respective projects aligned.We ran into many technical challenges (implementing authentication, connecting to the backend, parsing data).We also ran into challenges deciding how to our users could present themselves on the app. For political advocacy, it is often most effective to have official names and official addresses on petitions. But for many in our community, official names may not be how we see ourselves, and sharing their addresses may impact their safety. For this reason, we have made it open-ended what people can choose to share.We\u2019re proud of completing two apps, creating a server, implementing live data from the Sunlight Foundation and Google\u2019s Civic API -- and in less than 9 weeks!Leonard learned a lot about Android development, including implementing fragments, implementing images and interacting with servers.We would love to work directly with an LGBT rights organizations (domestic or international) interested in gaining the perspective of LGBT people on a specific issue, then use Speakout to empower that community to be heard.Hack4Equality 2016 Live Demo (Los Angeles)Eddie Chen\n          started this project\n\n          \n            \u2014\n            \n\n                Aug 26, 2016 07:13 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Speakout","project_tags":["ios","firebase","swift"],"project_url":"https:\/\/devpost.com\/software\/speakout","keywords":"lgbt,people,advocacy,could,personal,app,implementing,interested,challenges,server,ran,speakout,community,stories,api,perspectives,built,also,impact,official"},{"level_0":767,"hack_vector":[[0.1365429163,-0.1063612029,-0.0469159782,0.0255734921,-0.0221452359,0.1157089919,0.1821001619,-0.0161287375,-0.0100830579,-0.0315128863,0.0172468554,-0.0855003595,0.1451069415,-0.0651864186,0.0751226768,0.0087214606,0.2069386095,-0.0075422963,0.0317589045,0.1361899972,-0.2451770008,0.0236168262,-0.0335362889,-0.0193137042,0.0822515711,-0.0329809859,-0.0191092435,-0.1654748023,-0.0302283503,-0.1011120975,0.0605636388,-0.1121924967,0.0229585934,-0.0789493844,-0.009398126,-0.02594156,0.1030322984,-0.1532753557,-0.069205299,-0.0127473921,0.0359138027,-0.110891588,-0.149686411,-0.0278144199,0.0804302841,-0.0711882859,0.0199557934,-0.0824296325,-0.0288944859,-0.2231056988,-0.1714789122,0.0005629148,-0.0941756591,-0.0213901363,-0.2082581371,0.16233854,-0.1004275754,-0.0440609381,0.0487190746,-0.1191357374,-0.0852012262,0.0260678325,0.0740635693,0.0511761829,0.096089907,0.0281252619,-0.0906267911,-0.1142979711,0.0274793953,0.013709073,0.0697452873,-0.0502850823,0.0196847729,-0.1089633852,0.0256798137,-0.1294915974,0.1730951667,-0.0035835376,-0.0050026448,-0.1270302981,0.1214300171,0.1654524952,0.0427368134,0.1732226163,0.0862841308,0.1972770989,-0.0863211229,-0.0511000082,-0.0376964174,-0.0719362497,-0.1481925398,0.0520261601,0.0985968783,-0.0517676286,-0.0173754357,0.0130064692,-0.1693380177,0.2474811971,-0.0023407114,-0.0829274505]],"hackathon_name":"Hack4Equality 2016 Live Demo (Los Angeles)","index":767,"project_description":"HeyBud is the friend you've always had-to be there and answer any sexually related questions.HeyBud LogoThe intial inspiration came from a counselor who stood up at the info session and explained how helped many young people via the Grindr app and text messaging. On his profile picture he had \"Ask me about sexual health information\". He later explained that sometimes he has to balance 3 phones just to keep up with the message and that it would great to have a tool to help with that. I thought the idea was ok at the time but chose to join another team. Then I woke up one morning with an idea that would not leave me.  \"This guy is saving lives and slowing down the spread of STI's and STD's \" And that is awesome!!How could he connect to multiple users on device? How could he connect with multiple users on multiple platforms on one device? How does he know all the information that he needs to know? How does he access this information? Does he ever get tired of answering the same question over and over? Can his time be used more efficiently? How does he get the resources he needs to the right people? How much does he know about the person  in order to give them relevant information? How does the person stay private and comfortable to ask the questions? How does he reconnect with users and alert them- or inform them of valuable information? And how can we make this cool enough that it takes the taboo out of  chatting about Sexual Health.  Frankly, is there a better way. Needless to say, thought would not leave my head.  And that is how HeyBud came about.HeyBud is  \"non-judgmental and chill\" hybrid (AI and Human powered) chat bot to answer sexually related questions, present users with access to health-related resources and automate complex on-boarding paperwork\/processes required for health treatment.--To the user it is a familiar chat application that happens to know a lot about sexual information.-- To a counselor it is so much more: behind the scenes - when the chatbot can not answer a question or if a \"red flag\" is raised during the conversation- the conversation is automatically rerouted to a counselor who fits the skillset of what is needed to help the individuals.-- Additionally the counselor is connected to valuable ESRI and Grindr resources to better understand the person and provide them valuable visual feedback.Sweat, Prayers and Tears\nUnfortunately, we lost some team members  due to day-to-day work overload and the immensity of this project. Therefore, Savalas had to build the back-end systems  (on AWS Serverless, PHP, MySQL and Firebase) and the client apps (iOS, Facebook Messenger). Savalas first pitched a slide presentation to his mentors to get their buy-ins. He then gathered relevant information to test the project feasibility. He then put together the architecture with designs. \nAnd the building began. With Prayers Savalas reached out to his friend Eddie to have him put together a video vision that would explain how HeyBud is \"the friend you always had\"-- We lost team members\n-- We also are trying out cutting edge technology like serverless and  SpeechKit.\n-- The area is so new to us that it was somewhat challenging to gather information from mentors. Fortunately, they were great to work with and review our script and directions on multiple occasions.Proud to see the vision to come into fruition. Very proud of the product because we believe that we can save multiple live and livelihoods with HeyBud. We tested multiple times (concept and app with various mellinials)Lots to Share via SlidesHack4Equality 2016 Live Demo (Los Angeles)Back-End, DB, AI and Client AppsSavalas Colbert\n          started this project\n\n          \n            \u2014\n            \n\n                Aug 16, 2016 02:08 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HeyBud","project_tags":["ios","api.ai","node.js","objective-c","cocoapods","afnetworking","php5","esri","core-location","firebase","npm","amazon-web-services","facebook-graph"],"project_url":"https:\/\/devpost.com\/software\/heybud","keywords":null},{"level_0":768,"hack_vector":[[0.1592630893,-0.117785573,-0.0305634439,0.0398265906,-0.0211664978,0.135498032,0.1862063706,-0.0346108451,-0.0056297532,-0.0162567738,0.0219175536,-0.0656046569,0.1434812248,-0.0516580418,0.0691056028,0.0052188318,0.1958470196,-0.0076073036,0.0466573648,0.1159848869,-0.244671151,0.0269553568,-0.0387982987,-0.0089691756,0.0950004905,-0.0395542532,-0.0183151253,-0.1689372212,-0.0314167961,-0.0976650864,0.0722276792,-0.1126070544,0.0249635186,-0.0803443044,-0.0138711333,-0.0251554456,0.1073062792,-0.1477018446,-0.0685012266,-0.0131640052,0.0491598062,-0.1172504127,-0.1409354359,-0.0344158001,0.0645552725,-0.0574551933,0.0162293743,-0.0808035061,-0.0271942485,-0.2138251662,-0.1561925411,0.0097347777,-0.112786971,-0.009514668,-0.2118851691,0.1549923569,-0.1188244075,-0.0371741615,0.0507184006,-0.0957361907,-0.077147983,0.0144376745,0.0724162459,0.0406042896,0.0992677733,0.025431158,-0.0993815884,-0.1181487888,0.0237907097,0.018616613,0.0712012127,-0.0506579094,0.0177613571,-0.1222737506,0.0148626436,-0.1284366399,0.1872787476,0.0067972075,0.0007115413,-0.1402429938,0.1115493327,0.1657163203,0.0266044941,0.1710546315,0.1118778139,0.2093703747,-0.0935398638,-0.0385488421,-0.0239305384,-0.0768154338,-0.1421895921,0.067447871,0.0968879163,-0.041914545,-0.0160360076,0.0027072025,-0.1532893181,0.2406376153,0.0078320391,-0.074431628]],"hackathon_name":"Hack4Equality 2016 Live Demo (Los Angeles)","index":768,"project_description":"Transgender name and identity change simplified.Our LogoFinal DesignThe wireframeConfirmation ScreenA Completed PDFAs a transgender woman I found the process of gender and name change to a journey of frustration. So many transgender people already feel alone, hopeless and left out of the normal social community. It is so hard to then be faced with constant roadblocks and confusion in trying to claim your true identity. I wanted something that would make it as easy as possible. Something that would welcome my brothers and sisters into their life of joy with open arms. I can't imagine anything being more economically empowering than claiming your own identity.I used Ruby on Rails as the web framework. PNG files are edited using ImageMagick and then packed up into PDFs and delivered via SendGrid.Source code is up on Github:\n[link]https:\/\/github.com\/jjeffus\/kristening[\/link]It's a lot of detail work and I have ADD to the MAX.I'm glad I could participate and finish something. Feels great!There's a right time for things to come together.Right now it works for California. The system is structured so new states can be easily added without a lot of technical knowledge. The core work involves identifying and locating form elements and deciding what their values should be. We need the energy to build this out and make it a real-flawless experience for every trans-person.Rigorous testing both legal and automated needs to be done. Full integration and unit tests should be added for all test systems. The code needs a full security audit as well as some devops considerations for future hosting.Hack4Equality 2016 Live Demo (Los Angeles)Janet Jeffus\n          started this project\n\n          \n            \u2014\n            \n\n                Sep 21, 2016 02:21 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Kristening.me","project_tags":["ruby-on-rails","nginx","ruby","javascript","imagemagick"],"project_url":"https:\/\/devpost.com\/software\/kristening-me","keywords":null},{"level_0":769,"hack_vector":[[0.1464524865,-0.1196455434,-0.0312737748,0.0205249824,-0.0213122107,0.1085827351,0.1920724511,-0.0185036045,-0.003502426,-0.0254364125,0.0174587518,-0.0696969107,0.1382338107,-0.0580530353,0.0705247745,0.0005432884,0.1897766441,-0.0215235185,0.0387677252,0.1438975334,-0.2617148459,0.0197562426,-0.03002025,-0.0096652815,0.087977767,-0.031586621,-0.0165492129,-0.1484522372,-0.0172272399,-0.1168151796,0.0563765801,-0.1077630594,0.0093142269,-0.0738581792,-0.0025467819,-0.0448158011,0.0977365151,-0.1626387537,-0.0791777298,-0.0245436952,0.0405940711,-0.1069013029,-0.1241658404,-0.047818847,0.0769493729,-0.0711507052,0.0047001177,-0.0864521861,-0.0199018344,-0.2049650699,-0.1706656367,0.0190866832,-0.1108372062,-0.0046845526,-0.2206420004,0.1689830571,-0.1077681482,-0.0540811867,0.0412009507,-0.1210698411,-0.080090709,0.0211780779,0.0715643093,0.0488261431,0.0937695056,0.0368427522,-0.1019733399,-0.1079325303,0.0221835691,0.0262600034,0.0620572865,-0.0461851172,0.0197927319,-0.110349223,0.0335734338,-0.1277737021,0.1594077349,-0.0007473089,-0.0229076799,-0.13772434,0.1095245853,0.1610696465,0.0337347239,0.1644044369,0.0982538313,0.2121636719,-0.082358785,-0.0587340705,-0.038759008,-0.054005947,-0.1425561905,0.0547089167,0.1163297221,-0.0467380732,-0.0314419083,0.020916203,-0.1794107705,0.2403030097,-0.0111984108,-0.0714415312]],"hackathon_name":"Hack4Equality 2016 Online-Only (Global)","index":769,"project_description":"raTe is a review platform for finding healthcare that\u2019s trans* friendly and to be able to avoid healthcare that\u2019s notHealthcare should be equally accessible for everyone. Today that\u2019s not the case.\nTrans* people face a larger risk of discrimination, bad treatment and trans unawareness in the healthcare system because of professionals lack of knowledge, and also problematic attitudes and unawareness towards trans people. This is a reality for our trans friends, lovers and the trans community that we\u2019re closely connected to. We hope to be a part in giving the power and possibility to find healthcare that matches ones needs, and avoid healthcare that don\u2019t.Mina has been working with LGBTQI issues for the last ten years, both voluntary, as elected and as an employee. Minas main focus in their work has been hiv\/STI-prevention, sex education and trans health and rights. Bj\u00f6rn has been working with programming, web design and user experience for almost 20 years. Both of us are activists and a part of the LGBTQI-community in Stockholm and Berlin. The challenge for trans persons of finding good an avoid bad healthcare is something that we've experienced very close. We decided that if we combine our knowledge and experience, we mabye could add a little contribution to the work with conquering this challange.With the digital service we've developed, our aim is to:We\u2019re really hope that this service can be used by people in the entire trans community, and also mabye by trans allies who want to choose healthcare where trans people get a good treatment.'* In this context, trans is used as an umbrella term to refer to people whose binary or non-binary gender identity and\/or expression differ from the sex they were assigned at birth. The term trans in this context includes, but are not limited to, people who are ftm\/transmasculine\/trans men, mtf\/transfeminine\/trans women, non binary, genderqueer, two spirit and gender non-conforming people.The service we've developed gives trans people the possibility to review health care facilities based on one's own experience, both by rating and in free-text reviews (something like trip advisor, but about health care and just for trans people. For people moving to a new city, or just wanting to find a trans friendly endocrinologist, hiv\/STI testing facility, gyneacologist or General Practitioner, we hope that this platform can be a big help.Filters can be applied to narrow down the search to the kind of healthcare, and reviews from people with a certain kind of sexual orientation and trans experience. For example you can search for clinics that prescribes gender confirming hormones reviewed by people who are transsexual, or hiv\/STI-clinics that have got reviews by gay trans guys.This platform will hopefully be used globally, the outspoken aim is that it should be used in several different countries. A clinic appears on the platform as soon as someone reviews it, independent on where it is located. Since one of the challenges we want to facilitate solving is finding the healthcare providers you need when moving to a new country, which quite often can be an obstacle for people who for example need to find somewhere to get hormones and check up values, find a hiv\/STI-testing clinic where you can feel safe as a trans person.The work has been done in close connection with or network of trans friends, family members and lovers, as well with the trans community and individuals at trans\/LGBTQI NGO:s (TGEU, ILGA Europe and The Swedish Youth Federation for LGBT Rights). The work process has been:The main challenge we have experienced is the distribution of the prototypes and getting actual reviews. We get lots of positive feedback about the project and that this platform is something that people has been longing for and really think is needed. The amount of reviews that we have gotten so far does however not correspond with the positive feed back we have gotten. A part of this is probably that it feels less inspiring to send in feedback in a prototype where you don't know what the end result will be, than giving reviews on a platform that's online and working. But one challenge has definitely been to get people to do actual reviews, and not only saying that it's a really good and needed project.Another challenge has been to find a balance between how much background info you want to have about the reviewers, and how much details to ask about in the review function. For some people, lots of details are good, both about the reviewer and the clinic. On the other hand, some people don't think it feels good to be asked to much questions about yourself, and too many questions in the review function can be a big barrier for giving a review.How to be correct with all rules concerning storage and display of personal data was a field that was new to us, and that at firs felt like quite a bit of a challenge. But after communication with The Swedish Data Protection Authority (our servers are based in Sweden) and checking up European and international legal system concerning this field, we feel that we're safe and know what we're doing.We're really proud about having spoken and gotten feedback from so many people in the target group and with organizations working with sexual health and trans rights and health. All in all, we've reached out to approximately 200 people so far, which feels like a big accomplishments. We're also happy for having gotten our work mentioned in national Swedish radio in a program with about half a milion listeners. And at last, we're really proud about all the positive feedback we've gotten from individuals, NGO:s, our network and other parts of the trans community.We learnt lots in the work with the different prototypes of the review form and all the feedback we got through it. Individuals that have given us feedback have lots of different views, sometimes totally contradictory. Trying to find ways to fulfill the wishes for as many as possible has been a rewarding challange.Since we really wanted to be sure that everything we do is in line with applicable laws, we've learnt quite a bit about the legal system around data use and storage. Another technical stuff we learnt was programming with the Google map API.On a personal level, we've learnt about working together, something that was new to us. We've known each other for several years, but have never worked in a project together before.First of all, we of course hope that the platform will make it easier for many trans people to find good healthcare, and that it will be widely known within the trans community. As mentioned before we have been in contact with several trans and LGBTQI organizations\/networks in the making of the platform. One future possibility we see for the platform is that any of these take over the administration of the platform. Also other actors could be in question for taking over the platform and the administration of it. The most important thing for us is that the actor has approach, values and attitudes in line with ours as well as deep knowledge about trans issues, and that the motives for taking over the app not is just commercial but also ideologically based.Another future alternative for the platform is that we continue to administer it ourselves, and to look for some funding for the administrative work with and distribution of the platform. Another way of sustainable funding could be to offer education to health care services in need of improving their trans competence in countries and regions where there don't exist good trans\/LGBTQI education programs for health care services.With the technical solution, we see several developement possibilities. A push notification when leaving an adress where google has a clinic listed is something we have been discussing. Technical integration with Grindr, where for example  high-rated clinics for hiv\/STI-testning shows on the search grid or come sup as a pop-up when being close, are other possible functions for further development that we have been discussing. Another thing we've been thinking of is to extend the target group for the platform to involve the entire LGBTQI-community. Even though trans people most often face challanges with finding suitable health care, other parts of the LGBTQI-community also struggle with this challenge from time to time.Hack4Equality 2016 Online-Only (Global)Mina G\u00e4redal\n          started this project\n\n          \n            \u2014\n            \n\n                Aug 16, 2016 05:29 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"raTe \u2013 shared trans experiences of healthcare","project_tags":["perl","google-maps","mysql","html5","css3"],"project_url":"https:\/\/devpost.com\/software\/trans-accessability-to-healthcare","keywords":null},{"level_0":770,"hack_vector":[[0.1297110915,-0.0970219597,-0.0162564274,0.0393839851,-0.028141357,0.1322472692,0.2082804441,-0.0265197475,-0.0255243164,-0.0129371053,0.0221888442,-0.0457034484,0.1338808089,-0.0735703632,0.0501363277,0.0349855945,0.2350952774,-0.0000309346,0.0393343233,0.1311362684,-0.2341670543,0.0278933607,-0.0484549999,-0.0329815224,0.1025552452,-0.0246216469,-0.0447818488,-0.1859023571,-0.0041252011,-0.0965969414,0.0559923984,-0.1079424992,0.0353412256,-0.0811333582,-0.0139811188,-0.0003877356,0.1206846982,-0.1317818463,-0.0446124934,0.0177424848,0.0285769664,-0.1419314444,-0.1571566164,-0.042353183,0.0546591617,-0.0639869794,0.0186263043,-0.0608711764,-0.0221952368,-0.2135996073,-0.1181900725,0.0171644986,-0.1072886512,-0.0182541404,-0.1780982167,0.1561132818,-0.1373152137,-0.007622547,0.0285369195,-0.0834602118,-0.0553957634,0.0312960558,0.0800588205,0.0654250979,0.1232688203,-0.0071007768,-0.1051715314,-0.1355006397,0.0383743979,0.0092870314,0.0591525324,-0.0489441827,0.0159204546,-0.1220272407,0.0027794517,-0.1288142353,0.1742442846,0.0005092893,0.0256636832,-0.1534877867,0.1309698522,0.167085439,0.0527280942,0.1700518876,0.1073388681,0.203689009,-0.114365153,-0.0306565333,-0.02398872,-0.0948452279,-0.15996629,0.060857065,0.0852170065,-0.0273470003,0.0059644179,0.0023667419,-0.1525978148,0.2109072953,0.0314899646,-0.0755434558]],"hackathon_name":"Hack4Equality 2016 Online-Only (Global)","index":770,"project_description":"Grindr integration for connecting displaced LGBTQ members.Everyone deserves to feel welcomed and be happy.Welcomr provides a way for displaced LGBTQ peoples to connect with other LGBTQ members in their area of choice.We used Twilio to host an SMS number and send SMS messages. We used the unofficial Grindr API to send and receive Grindr messages. Here is how it works. A refugee texts our Twilio number with a location, the location is converted to a geological location. We then used the unofficial Grindr API to find users in this geolocation that have a tag #Welcomr in their bio.\nWe now have a communication tunnel set up between the refugee and the Welcomr with our web server as a middleman. \nAs a result, the refugee can easily communicate with someone in the LGBTQ community in their area of choice.\nIn addition, if the refugee and the Welcomr speak different languages, our application uses langdetect and goslate to translate the messages so they can easily communicate.Problems with the Grindr API, encoding errors.Making our application accessible to people without smartphones.We learned about problems that the LGBTQ community faces.More in-depth processing before we select who you are matched with.Hack4Equality 2016 Online-Only (Global)Aron Gates\n          posted an update\n\n          \n            \u2014\n            \n\n                Sep 26, 2016 01:36 PM EDTWow this looks super useful! Would be amazing to see this in action, impressive idea! Such spellings. Love the name also, genius to call it welcomr!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Russell Ratcliffe\n          started this project\n\n          \n            \u2014\n            \n\n                Sep 25, 2016 03:47 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Welcomr","project_tags":["twilio","python"],"project_url":"https:\/\/devpost.com\/software\/welcomr","keywords":null},{"level_0":771,"hack_vector":[[0.1403661072,-0.1165636554,-0.0141634131,0.057078626,-0.0372702591,0.1317925304,0.1904199272,-0.0325145721,-0.0264298841,-0.0064166947,0.019991044,-0.0348171256,0.1591003686,-0.0793107972,0.0540567227,0.0235850494,0.2275717109,0.0086545106,0.0527916402,0.1174406335,-0.2332710624,0.0365820788,-0.0462485328,-0.0233274512,0.1336496621,-0.0229527,-0.0443683304,-0.1877607256,0.0008136184,-0.0850968137,0.0487984978,-0.1244535446,0.0397677124,-0.0733324662,-0.0137715647,-0.0028673308,0.1335178167,-0.1368401796,-0.0521957465,0.0251620971,0.0390402563,-0.1598365158,-0.1753279418,-0.0356514677,0.0172130298,-0.0516867414,0.0267147496,-0.071375519,-0.0164052695,-0.1950941682,-0.1190214753,0.0202120841,-0.1171768382,-0.0149510121,-0.1913450062,0.164815098,-0.1441367269,0.008288539,0.0295443051,-0.0632058233,-0.0566490889,0.0326556973,0.0782775208,0.0742629468,0.1172032058,0.0024421483,-0.1062243655,-0.1472699642,0.0305079594,0.0117522804,0.0723247081,-0.0511797592,0.0204679035,-0.1229223311,0.0119301239,-0.1145214662,0.1837687641,0.0037351269,0.0419748537,-0.1389778554,0.1274368018,0.1672257185,0.0570107624,0.1535368115,0.1179503351,0.182015866,-0.1245565042,-0.0177974533,-0.0053509381,-0.0952458233,-0.1187341884,0.0669259131,0.0722445771,-0.0280479472,0.0341925099,-0.0278529283,-0.1445013881,0.1972230971,0.0413173102,-0.0682062134]],"hackathon_name":"Energy management reports for local authorities","index":771,"project_description":"An automated analysis and reporting dashboard for Energy Managers.Our objective has been to reduce the amount of manual work and \u2018number crunching\u2019 involved for energy managers in their report generation process. Previously, reports were emailed out and and analysed on an hour by hour basis on energy managers computers locally, manually. Reports then had to be created by looking at this data and manually finding out statistics from it to then report on. We could see this was a clear problem and so, we built a cloud-based dashboard to automate the process entirely.Energy management reports for local authoritiesDylan McKee\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 08:51 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Project Watergate","project_tags":["node.js","mongodb","chart.js","javascript","context.io","express.js","bootstrap","jquery","moment.js"],"project_url":"https:\/\/devpost.com\/software\/project-watergate","keywords":"energy,week,managers,sites,per,day,report,see,site,reports,usage,weekly,analysed,hour,algorithm,manually,changes,change,objective,instantly"},{"level_0":772,"hack_vector":[[0.1255085021,-0.1004000604,-0.027750453,0.0311042778,-0.0365078188,0.115793854,0.2074260861,-0.0176827926,-0.0281903446,0.0028743194,0.0068835001,-0.0520361997,0.1456921101,-0.0675064772,0.066969879,0.0156305246,0.2132234573,0.0014692958,0.0429866016,0.1191322505,-0.2321050912,0.0435376242,-0.0384469777,-0.0186888725,0.1153764203,-0.0146606173,-0.0371040814,-0.1718514115,-0.0005454869,-0.0808378011,0.0540821552,-0.1310404688,0.0268655829,-0.0792347416,-0.0124606239,-0.007223092,0.1261874884,-0.1393905878,-0.0560363904,0.0138858361,0.0251921471,-0.1674034297,-0.1677328199,-0.0469220765,0.0450202897,-0.0625032485,0.0156126264,-0.0769344419,-0.0144425454,-0.192535162,-0.1343694478,0.0044409013,-0.114904888,-0.0057530003,-0.2041424513,0.1627114564,-0.1478326619,-0.0039413068,0.0445975699,-0.0870683193,-0.0751901269,0.0333882831,0.075619325,0.0677628592,0.1044780016,0.0092109023,-0.0992473364,-0.1334776878,0.0472112745,0.0111777736,0.0742338821,-0.061928384,0.0171293933,-0.1118254885,0.0224129483,-0.1463499516,0.1697449386,0.0085311625,0.0374282114,-0.1360226721,0.1270664483,0.1639941335,0.0672783628,0.1626835018,0.1143219471,0.1874325722,-0.1257997304,-0.0210381392,0.0026487412,-0.1001287177,-0.1356678456,0.0543487333,0.0974669978,-0.0366094857,0.0269794632,-0.0039043408,-0.1625007093,0.2032095641,0.0251971669,-0.0646703318]],"hackathon_name":"Energy management reports for local authorities","index":772,"project_description":"A dashboard showing insight into the energy data available coupled with an alert system for potential issues.OutliersEnergy Usage Comparison by Sq FtEnergy Usage by TypeThe approach we took was to investigate similarities in behaviour for energy usage across similar type of sites whilst accounting for seasonal change. By comparing institutes to their own history has allowed us to get a good idea of when their behaviour is unusual and should be investigated for potential savings.The outputs from this was a dashboard document which shows just a small amount of the information that can be gleamed from the data available and by using exactly the same data and approach a notification system can be implemented to get quick notification for issues.The solution was built using an Azure SQL Database for data storage and transformation. Tableau was then used to visualise this information. From there a dashboard was created to show the real insight from the data.Energy management reports for local authoritiesDaniel Reed\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 09:06 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Energy Dashboard and Anomaly Detection","project_tags":["sql","azure"],"project_url":"https:\/\/devpost.com\/software\/nwl-hackathon","keywords":"data,using,notification,information,approach,dashboard,get,behaviour,good,exactly,gleamed,idea,history,document,implemented,insight,energy,whilst,database,investigate"},{"level_0":773,"hack_vector":[[0.1363263875,-0.1140247732,-0.027224429,0.0348362736,-0.0251508206,0.1176661178,0.1905031204,-0.0181245916,-0.0150903445,-0.0081064506,0.0276185907,-0.0587551147,0.1399273723,-0.0591247268,0.0736120865,0.0045981337,0.1992865354,-0.0027922848,0.0385414325,0.1220558956,-0.2447037846,0.0362225845,-0.0299773086,-0.0220869072,0.0959631279,-0.0254648048,-0.0160214957,-0.1831064522,-0.0074724574,-0.088470377,0.0577899888,-0.1239444241,0.0152183557,-0.0860326663,-0.0089177052,-0.027223656,0.0993945524,-0.15881145,-0.0855446607,-0.0149961617,0.0217076261,-0.1379898489,-0.1332463771,-0.0401951149,0.0594665967,-0.0535778999,0.0095454855,-0.071462363,-0.0192090496,-0.1954917312,-0.1521229595,-0.0007824298,-0.108760789,-0.0072110468,-0.2005117238,0.1615179181,-0.1109940186,-0.0273326505,0.0469196439,-0.1101132184,-0.0795212165,0.0217189137,0.0780359805,0.0653796494,0.1008760706,0.0278119724,-0.0995702967,-0.1232333332,0.0368199125,0.0115454439,0.069148846,-0.0589060113,0.0371452458,-0.1161931902,0.0254513361,-0.1506071091,0.1697111428,-0.0021389562,0.0132620595,-0.1349636912,0.1346009523,0.1664043814,0.0527191274,0.1752515584,0.1017344743,0.2003175765,-0.1077323854,-0.0386797786,-0.0295705833,-0.0702763945,-0.1470455378,0.0631024167,0.1025928557,-0.054648716,0.0016177034,0.0032136284,-0.1680028141,0.2321778983,0.0048692753,-0.0788076967]],"hackathon_name":"Energy management reports for local authorities","index":773,"project_description":"An application and integrated campaign to help the council improve water efficiency and reduce costsWe want to help Sunderland City Council be the UK's most water efficient council - the UK's first Smart Water City.Currently:\nThere is no system integration \u2013 utility data and council data are not combined.\nVisibility is an issue \u2013 lack of rich, human accessible information.\nOperational issues are not highlighted as quickly as they could be and energy managers require genuine insight and  intelligent prioritisation,  live alerts and easy to digest data.Goals:\nImprove efficiency \u2013 You can only measure what you can see\nWork in partnership with sites (or in reality customers) to save water and money, and protect the environment.\nEducate building managers, business managers, caretakers and end-users by providing better and more accessible information and advice through harmonised data.\nPromote awareness and measure the success of water-saving initiatives.\nFacilitate investment to help organisations make further savings in their water use and their bills.Approach:\nDevelop an application that provides visibility of usage patterns and problems to help improve operational efficiency and save money.\nDashboards and visualisations of the data \u2013 including smart site health ratings and intelligent prioritisation. This takes the data admin load away from staff and allows them identify smart strategies that are proactive rather than reactive.\nUsing gamification to bring site managers and wider stakeholders along with the strategy via a campaign (ultimately multi utility).We built:\nOne key area we wanted to address was the lack of data availability that had been seen time and time again in council systems. We looked to address this issue by basing our development on top of a high availability RESTful JSON API. This approach will allow us to provide data to the dashboard and to create the poster in near real time, whilst also opening up the data to facilitate future hackathons, to aid further insight and cost cutting in the future.We we're able to expand the functionality of the API to provide it's first signs of insight by ranking the best preforming schools. This showed that the newer schools were more energy efficient. Proving investments in new systems are already starting to pay off.Summary:\nVisibility and therefore visibility are the major issues\nYou can\u2019t measure what you can\u2019t see \nWater is the worst but provides biggest opportunity\nImprove efficiency at top level gamify site level and wrap in campaignMoving forward:\nMulti utility \u2013 bring data sets together\nAny site, any style\nCan be used to validate business investmentEnergy management reports for local authoritiesIan Birtwistle\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 10:35 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"The UK's First Smart Water City","project_tags":["json","node.js","chart.js","mysql"],"project_url":"https:\/\/devpost.com\/software\/the-uk-s-first-smart-water-city","keywords":"data,water,visibility,managers,council,site,time,smart,insight,improve,utility,measure,efficiency,help,see,campaign,business,multi,city,bring"},{"level_0":774,"hack_vector":[[0.1558363885,-0.1209242418,-0.0071401373,0.0721942782,-0.0456854291,0.1462682635,0.1787537634,-0.0273315851,-0.0239814613,-0.0246034563,0.0119532943,-0.0292250011,0.1499232203,-0.0699632391,0.0366890915,0.0481686704,0.2301547825,0.019438006,0.04275259,0.1204448044,-0.2249671072,0.0002754015,-0.0546628684,-0.0358118154,0.1464635879,-0.0330949835,-0.0593292117,-0.1875718385,0.0037528935,-0.0926397666,0.0450735986,-0.0970432684,0.0329241939,-0.0563679859,-0.0109909056,0.0152226686,0.1316798925,-0.1332283169,-0.0369367264,0.0544223189,0.0495034531,-0.1312981248,-0.1593959481,-0.0265856609,0.00114342,-0.0707600266,0.0330849998,-0.0422706343,-0.0200854074,-0.2125440836,-0.0961216614,0.0252786633,-0.1102018282,-0.0321852826,-0.1695560515,0.1750193238,-0.1345980465,0.0259815287,0.0056509292,-0.0404299907,-0.0452476144,0.0278368201,0.0504971482,0.0853365436,0.1411456615,-0.0029581541,-0.1189463809,-0.1601774096,0.0077063204,-0.0145578897,0.0625341535,-0.0410883166,0.0083155446,-0.1280869544,-0.0035695662,-0.0888897181,0.1962668449,-0.0052251029,0.0371257178,-0.1541565657,0.1146699861,0.174341619,0.0301225595,0.1450330764,0.1264963001,0.1990579367,-0.1255883574,-0.0061293188,-0.0155692389,-0.096904628,-0.1205988824,0.0883412957,0.0591113381,-0.0120590217,0.0311808102,-0.0372760743,-0.12634781,0.2235377431,0.0551546402,-0.0644499138]],"hackathon_name":"Energy management reports for local authorities","index":774,"project_description":"Free your utility data, givIt's all explained in the presentation and write-up.Energy management reports for local authoritiesWhen we innovate in the open and share what we build, we make faster progress. We\u2019ve added new features that we\u2019ve worked on in Sunderland to our open tools. We hope that we can work with Sunderland to include their data too.Amy E\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 09:15 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Meter Explorer (ODILeeds)","project_tags":["javascript","leaflet.js","google-chart"],"project_url":"https:\/\/devpost.com\/software\/meter-explorer-odileeds","keywords":"write,say,really,presentation,nda,limits,explained"},{"level_0":775,"hack_vector":[[0.1342301667,-0.1243021712,-0.0211109668,0.0526070669,-0.0317517594,0.1226040944,0.1903637499,-0.0169514995,-0.0242606271,-0.0103519522,0.0253019333,-0.0400806777,0.1444918215,-0.0672722459,0.0726515353,0.0157349799,0.2236517668,-0.0027292385,0.0437228382,0.1232612878,-0.2539055049,0.0283158664,-0.0336143672,-0.0260591544,0.1144813299,-0.0368058011,-0.0319185965,-0.1887506098,-0.0018556234,-0.0795899928,0.0610877052,-0.1136707142,0.0208987091,-0.0761849284,-0.0239008591,-0.0194689501,0.1094730571,-0.1408233941,-0.0568638705,0.008379261,0.0290153455,-0.1414375752,-0.1589218527,-0.0423943363,0.0412474684,-0.0525850132,0.0149011929,-0.0622493923,-0.0061234292,-0.2026290894,-0.1150212586,-0.001604537,-0.1096226573,-0.0122921569,-0.1985584199,0.1656509936,-0.1310877055,0.0035544578,0.032219518,-0.0775780082,-0.0682475343,0.0323120169,0.0761092976,0.0702371225,0.1121617109,0.0104673356,-0.0979128703,-0.1404931843,0.0378380157,0.005387241,0.0642376468,-0.0461114496,0.0248737074,-0.1182664856,0.0012608722,-0.1365731806,0.1792034358,-0.0028215994,0.0331224687,-0.1368632019,0.1317812651,0.1699568182,0.0408428162,0.1749078184,0.1201799214,0.2004099786,-0.116812557,-0.0218128767,-0.0241012275,-0.0857292786,-0.1423783451,0.0728333592,0.0910731331,-0.0376509055,0.0226519462,-0.0100167468,-0.1436731815,0.2070937306,0.0350640751,-0.0706010386]],"hackathon_name":"Energy management reports for local authorities","index":775,"project_description":"Our approach is coupling simple IT change with process change to drive the biggest short\/medium-term benefitExample report fileWe used a number of key angles to formulate our development:\nIntegration \u2013 Enforce ownership of datasets to drive more efficient process.\nReporting \u2013 Start categorising sites so they can be compared against benchmarks\nOwnership \u2013 Push reports to building owners for them to take a vested interest and ownership of efficiencyBuilds reports for building managers on receiving the NWL data and fires alerts to energy\/asset managers\nThe underlying function of this development is to unload some of the efficiency drive work from the energy manager and empower building management to take ownership and give them a purpose to drive through change themselves.Plenty of scope for future development in this area\nUse of Power BI to create interactive reporting and dashboards for management.  Technology in use is already closely coupled to enable this to happen.\nDynamically connect Tech Forge and System Link\nApply targets and track these\nBring in other utilities to create a one stop shop for reporting.  Also include statutory items\nFactor in more data items to help define a category standard \u2013 e.g. Condition, occupancy etcEnergy management reports for local authoritiesBarry Davison\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 08:59 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Water Efficiency","project_tags":["excel","c#"],"project_url":"https:\/\/devpost.com\/software\/water-efficiency","keywords":"ownership,development,reporting,drive,efficiency,building,management,take,create,reports,managers,data,energy,items,use,enable,datasets,empower,efficient,enforce"},{"level_0":776,"hack_vector":[[0.1474463046,-0.1318114549,-0.0173526686,0.0559112839,-0.029852286,0.1414791048,0.180063799,-0.0460056812,-0.0235811286,0.0045117065,0.0148429843,-0.0405162126,0.1578207165,-0.0729890615,0.050887838,0.029432429,0.2343892604,0.0148985032,0.0428938419,0.1056874171,-0.2281621397,0.040724501,-0.0456262417,-0.0287093669,0.1515181214,-0.02567669,-0.0442773923,-0.1951275617,0.0103294617,-0.0839294046,0.0628419295,-0.1395175159,0.0486119762,-0.0781889558,-0.0311186705,-0.0128043685,0.1282227486,-0.1379368454,-0.0382335074,0.0191399362,0.0309705902,-0.1506750882,-0.1756539792,-0.0350191854,0.0116027044,-0.0431497246,0.0229140464,-0.0503734872,-0.0183429047,-0.1908688247,-0.1139997691,0.0162669383,-0.1160342172,-0.0230170414,-0.165596053,0.1632284522,-0.1351976246,0.0162080992,0.0191147104,-0.0467854738,-0.0515141152,0.0260663461,0.0773029476,0.0832947344,0.1106054187,-0.0044533177,-0.1089355722,-0.1486210972,0.0293340608,0.0162650812,0.087964274,-0.0504155867,0.0248152502,-0.124424085,-0.0000652939,-0.1163354367,0.189542532,0.0134273516,0.0458750315,-0.1348961592,0.1363845468,0.1662115306,0.0497094914,0.1623785049,0.1298322529,0.1790676862,-0.1314959973,-0.0136137232,-0.0064398302,-0.0902340114,-0.1151061803,0.0669990852,0.0824776664,-0.0247684307,0.048845116,-0.0388260484,-0.1209523231,0.1945777535,0.0476415753,-0.0814248398]],"hackathon_name":"Energy management reports for local authorities","index":776,"project_description":"Demand Side Management, Finance ConsiderationTo develop a novel solution of demand side management for non-household sitesFirstly, collect all sites information, then generate the site energy and water performance scorecard. Divid all sites into four domains (for energy), then find out which site has bad energy performance, related priority is set up and with different solution.Using Demand side management technologies, like distribution energy generation, shift energy usage, energy efficiency improvementRunning with timeFind out which site should the manager focus on, short-term and long-term plan is identified.Commericial Building energy performance.identify the finance improvement and pay back period.Energy management reports for local authoritiesYapeng Li\n          started this project\n\n          \n            \u2014\n            \n\n                Oct 02, 2016 08:56 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"A Novel Solution of Demand Side Management and Improve","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/a-novel-solution-of-demand-side-management-and-improve","keywords":"energy,demand,solution,sites,site,side,performance,management,improvement,novel,term,find,finance,firstly,water,focus,four,generation,household,generate"},{"level_0":777,"hack_vector":[[0.1460161656,-0.1061585918,-0.0254154839,0.0760657266,-0.0319404192,0.1478854269,0.2170359045,-0.0464590825,-0.0449153408,-0.0202238597,0.0122677861,-0.017164316,0.1366691738,-0.0689062029,0.0462049693,0.0028637948,0.2292518616,0.0019452635,0.0479856692,0.112011224,-0.2213806212,0.0151718147,-0.0564998761,-0.0096545788,0.1383798867,-0.0009060915,-0.0572059378,-0.1729191244,-0.0125597343,-0.0917279497,0.0716067329,-0.1189573631,0.0422569551,-0.0671875551,-0.0193621051,0.0010816487,0.13939327,-0.1191757619,-0.0323348306,0.031218512,0.0802118182,-0.1378016025,-0.1707664728,-0.0298101176,0.0218511242,-0.0488047004,0.0180273484,-0.0722653568,-0.0310256723,-0.2109161168,-0.0861345604,0.0308635291,-0.1010672078,-0.0036418047,-0.1801840961,0.1588148922,-0.1733847708,0.007712502,0.0041350308,-0.0610277392,-0.0444120914,0.0400767699,0.0861260742,0.0376092829,0.1446641386,-0.0085560707,-0.1231919453,-0.1374652982,0.029859433,0.0294466838,0.0480994843,-0.0179541875,0.0105339615,-0.1395785362,-0.0135631394,-0.0969320536,0.1937847137,0.0164062511,0.0362046175,-0.1514063627,0.1071365029,0.1523059607,0.053931091,0.1503062546,0.1248438731,0.2025105208,-0.116082795,-0.0163165219,-0.0159426406,-0.0995937586,-0.1335847229,0.0837548003,0.083850272,-0.0076791374,0.0162916295,-0.0126496376,-0.1287662536,0.2072564662,0.0371920243,-0.0371107534]],"hackathon_name":"HackSussex2016","index":777,"project_description":"we will fly a drone with leap motiondroneLearn how to use new hardware, and play a little with leap-motion!Well, just fly a drone without a controller.First of all, we have connected a Leap-Motion to an arduino through a computer.\nthen we have managed to connect the arduino to a drone controller using a protoboard.HackSussex2016Xavier Algarra Torell\u00f3\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 24, 2016 06:17 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Leap Drone","project_tags":["python","c","leap-motion","arduino"],"project_url":"https:\/\/devpost.com\/software\/leap-drone","keywords":"drone,arduino,leap,using,controller,motion,learned,use,analog,pass,low,fly,first,finally,filters,filter,emulating,emulate,get,discovered"},{"level_0":778,"hack_vector":[[0.1219416633,-0.125241667,-0.0288282484,0.0416312478,-0.0390537791,0.1190703213,0.1901244223,-0.0208683405,-0.0020360451,-0.0458896942,0.019825628,-0.0400656573,0.1337013245,-0.0574173182,0.0665629879,0.0289255772,0.2361072898,0.0033546453,0.038750764,0.1388622969,-0.2458141893,0.0268363338,-0.030661162,-0.0368912145,0.087709263,-0.0249699093,-0.0190812517,-0.1797244698,-0.0152270598,-0.1033838838,0.0423195884,-0.1149286404,0.0299733989,-0.0729153454,-0.0006403511,-0.0413378291,0.1098847166,-0.1479381323,-0.0591885522,0.0018350637,0.0375651978,-0.1298057139,-0.1532700211,-0.0575860068,0.0501987226,-0.0741643235,0.0259584654,-0.0578400753,-0.0312995091,-0.2103314698,-0.128940776,-0.0074362089,-0.0980348364,-0.041711133,-0.1931493133,0.1633011848,-0.1118933409,-0.0321852081,0.0486626923,-0.0875578448,-0.0768061504,0.0182233602,0.0699792206,0.0440082513,0.0992386192,0.0210095458,-0.1056378186,-0.1451362371,0.0409774072,0.0175547171,0.0654621124,-0.0608652607,0.0207460262,-0.1217286438,-0.0100232102,-0.1361048818,0.1715985239,0.007068214,0.0266762152,-0.1347139031,0.1146124676,0.1713543236,0.0270970035,0.1861319989,0.112767607,0.1900518388,-0.1210828274,-0.0209886525,-0.0366039909,-0.082205072,-0.141841948,0.0766295567,0.0876292214,-0.0367610492,-0.0041800514,-0.0134323118,-0.1557358801,0.2246257067,0.0220077746,-0.0757033676]],"hackathon_name":"HackSussex2016","index":778,"project_description":"Help Octocat overcome commitmet issues and ascend to Valhalla.StillJiffLegend has it that the mystical Octocat is working hard on publishing the perfect app.\nThis of course can not be done without the help of fellow open source contributors.These contributors help by submitting issues with Octocat's codebase. Octocat has to fix these issues with commits.\nThe more issues he fixes the more watchers will join in to contirbute to the codebase.\nIf Octocat fails to fix issues they keep piling up and causing the codebase to lose watchers whenever Octocat stumbles upon these issues.Periodically Octocat will have to make a public release. If successful Octocat's codebase will increase in popularity and gain lots of watchers.\nIf failing to release, the codebase loses a part of it's watchers who decide to go and build node modules for NASA instead.Once Octocat's codebase will gain enough popularity he can retire hapily and go with his brothers to Valhalla. Legend has it, it takes a legion of 2000 faithful watchers to grant him ascension to the heavens.--The game can be played either with a gamepad or keyboard.From the menu select your preferred input and click start.Keyboard input:Left\/Right arrows to move Octocat.\nZ to jump\nX to shoot\nP to restart gameGamepad input:Left\/Right D-pad to move Octocat.\nB to jump\nY to shoot\nStart to restart gameHackSussex2016Mike D\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 24, 2016 06:24 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"octocathascommitmentissues","project_tags":["javascript","html","phaser.js"],"project_url":"https:\/\/devpost.com\/software\/octocathascommitmentissues","keywords":"octocat,codebase,watchers,issues,input,game,right,contributors,gain,gamepad,move,go,popularity,release,restart,fix,shoot,help,start,legend"},{"level_0":779,"hack_vector":[[0.1255068928,-0.089786306,-0.0208035819,0.0390365906,-0.029887503,0.1376781762,0.1931055784,-0.0403916016,-0.0146770179,-0.0222680122,0.0215702895,-0.0580100752,0.1408302188,-0.0577060655,0.0497964881,0.0194546897,0.2301276028,0.0029643273,0.0374492072,0.1400917768,-0.239729926,0.0242039729,-0.0389260687,-0.0188160632,0.1098184437,-0.0150276301,-0.0321031436,-0.1768862605,-0.0156308897,-0.1021560207,0.0587878935,-0.1181783155,0.0316369571,-0.0734980628,-0.0018563542,-0.0197758228,0.1169241071,-0.1389978379,-0.0487812683,0.0077326465,0.036692787,-0.1391834766,-0.154376179,-0.0507115908,0.0485025942,-0.0699638948,0.005264705,-0.0644120052,-0.0259572696,-0.2111299038,-0.1331066638,0.0086564682,-0.0992813408,-0.0188475847,-0.1999242753,0.1675455272,-0.133535549,-0.0223900191,0.0310342144,-0.0987399966,-0.0583293773,0.0125174038,0.0763582364,0.0541809648,0.1139068082,0.0185813531,-0.1000396013,-0.1408970058,0.0413703136,0.0236656014,0.062171407,-0.053728424,0.0220403951,-0.1134185791,0.0084554534,-0.1221579313,0.1742119342,-0.0060880971,0.0143317087,-0.142824173,0.1145762429,0.162809357,0.0535588712,0.1723077148,0.0999675542,0.1982872486,-0.1182749569,-0.0467679501,-0.0302608944,-0.078309603,-0.1488194317,0.0557152033,0.0921986103,-0.039413657,-0.0098212073,0.0069350856,-0.1578599215,0.2271517515,0.0150513425,-0.0797901377]],"hackathon_name":"HackSussex2016","index":779,"project_description":"Dashbot easily connects your Slack channels with dashboardsMain dashboard with a couple of widgets.Github focussed dashboard\"Dashbot\" is an easy way to control your (office) dashboard via Slack. Just write him what you need to see or which widgets aren't needed anymore via your computer or mobile phone and it will automatically update your board.For the frontend we're using a websocket connection to get data pushed from the server. This data is used by react.js to update the grid reactively.On the one hand all of us use Slack at work everyday and we all enjoy playing arround with one of the many different bots aviable, or even with our own ones. \nOn the other hand we were looking for an easy configurable dashboard to use in the office or even at home. \nSo we had the idea to combine both and build a dashboard editable via Slack. \nIn the office colleauges could share current activities or funny gifs with easy and short commands.\nAt home the dashboard can be used to coordinate te everyday life with your flatmates, for exammple with a shared grocery list.In the future we will probably start using Dashbot at home and so find out about missing features and weaknesses in the current controlling. For working on project in the future we will probably rewrite the code using sailes with our newly gained knowledge and experience.\nThe goal for the future is to see Dashbot running in the office.HackSussex2016Niklas Riekenbrauck\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 24, 2016 05:32 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Dashbot","project_tags":["node.js","redis","mongodb","heroku","github","slack"],"project_url":"https:\/\/devpost.com\/software\/dashbot","keywords":"dashbot,dashboard,office,via,slack,using,easy,home,future,current,used,use,update,probably,hand,one,data,everyday,see,even"},{"level_0":780,"hack_vector":[[0.1468706429,-0.1381105781,-0.008752726,0.0628973395,-0.0392806716,0.1520325989,0.1898831874,-0.0472616144,-0.0262714345,-0.0187390186,0.0107227499,-0.010135646,0.143445015,-0.0701106712,0.0330040157,0.048319377,0.2390655279,0.0139466356,0.0429278724,0.1049518287,-0.2211073488,0.0120821437,-0.0464103371,-0.0317190215,0.1550639272,-0.0296004396,-0.044480674,-0.1848665327,0.0001280877,-0.0784586892,0.0510854684,-0.1099484339,0.0549635254,-0.0639895648,-0.0427326821,0.0006127785,0.1379395574,-0.1255656183,-0.0231148209,0.0438507497,0.0465686247,-0.1348020136,-0.1666734517,-0.0404673815,0.0070913476,-0.0546469875,0.0417127199,-0.0314684473,-0.0237035509,-0.2089012861,-0.0828065276,0.0149802379,-0.1216097623,-0.028362928,-0.1486386508,0.1585986912,-0.1531857252,0.0248380136,0.0138678271,-0.0229932144,-0.0517560765,0.0299050771,0.0557701513,0.0631040335,0.1273420006,-0.0151585154,-0.1220334247,-0.1609749049,0.0181894377,0.0024219195,0.0604937375,-0.0436795093,0.0130296852,-0.1391168982,-0.0323279724,-0.0976653174,0.199107036,0.0071453457,0.0669527203,-0.146864444,0.120807752,0.1696731895,0.0197048094,0.1648065448,0.1435512155,0.1837847382,-0.1311234981,0.0297624879,-0.0142967356,-0.1023207009,-0.1229445413,0.1029375046,0.0542131327,-0.0111942049,0.0412578732,-0.0524449758,-0.1088822484,0.1971420944,0.0794119909,-0.0568184443]],"hackathon_name":"HackSussex2016","index":780,"project_description":"Be more productive by reusing code snippets within atomMaking code snippets more accessible across projectsYou can copy snippets to memory and recall them at any timeFirst ever atom plugin we madeAtom is a brilliantly hackable editor you can edit EVERYTHINGFix some errors and publish to the atom plugin directoryHackSussex2016Handled putting together the pluginHandled the interface for the plugin.Pandelis Zembashis\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 24, 2016 05:43 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Footsize","project_tags":["node.js","coffeescript","javascript"],"project_url":"https:\/\/devpost.com\/software\/footsize","keywords":"atom,plugin,snippets,time,first,accomplishments,across,brilliantly,code,copy,directory,edit,editor,errors,ever,everything,fix,footsize,hackable,inspiration"},{"level_0":781,"hack_vector":[[0.1567272693,-0.1135400832,-0.0367547795,0.0569702126,-0.0113180559,0.141910404,0.1891138852,-0.04068508,-0.0219513401,-0.0291542616,0.0076511707,-0.0576053597,0.1496470124,-0.0584841147,0.054266382,-0.0140501289,0.1971486658,-0.0052570649,0.0481392033,0.1245835051,-0.2354590595,0.0328110047,-0.0432702489,0.0099970289,0.1254894286,-0.0337460116,-0.0366708487,-0.1691725254,-0.0514263771,-0.0921537429,0.0843983069,-0.121767886,0.0350901261,-0.0623678342,-0.0146727897,-0.0279253051,0.1186565682,-0.1327848881,-0.0485023372,-0.0146245696,0.0763407797,-0.1343589723,-0.1544142663,-0.031070374,0.0508412719,-0.0481346734,0.0144310175,-0.0807731673,-0.0424861498,-0.2148805857,-0.1384837478,0.0245638434,-0.1019582525,0.0161058679,-0.2204481959,0.1558908969,-0.1388069689,-0.0334859639,0.0305787642,-0.090628624,-0.0753777251,0.0210045911,0.0643872991,0.007144412,0.1028416082,0.0286208875,-0.1042639837,-0.1198053509,0.0192096923,0.0348645449,0.0657715872,-0.0388386659,0.0227266997,-0.1217324361,0.0227768403,-0.0966896415,0.1830055863,0.0018134309,0.0014001264,-0.1350808889,0.0939476341,0.1564009935,0.0365549326,0.1647028029,0.1137397736,0.2124261409,-0.0937164649,-0.0436060131,-0.0186844207,-0.0790123492,-0.1301817298,0.076593481,0.0904969424,-0.0323754065,-0.0216655694,-0.0053454111,-0.1556948274,0.246873647,0.0122663379,-0.059880238]],"hackathon_name":"HackSussex2016","index":781,"project_description":"A platformer where you work your way up the back of a sticker covered laptop. Using a paper bag as a controller.I didn't have an idea until like 5pm.\nI was too busy socialising and getting stickers and putting them on my laptop\nI wanted to make a game with unusual inputs, and use Unity to build it.At about 4.30 I realised I wanted to make a controller using my Makey Makey and a sheet of paper.\nI couldn't find any paper, but I did find a MLH bag.The whole game theme was built around that, with all the platforms being mlh stickers and the background being my laptop.Its a game.\nsome people found it fun, some found it frustrating to play with the terrible controller I built.The paper bag had crocodile clips attached to the side, then i drew thick lines that led to big buttons on it in pencil.The game was made in unity, I took pictures of some stickers, cut them out in an image editor to give them transparent backgrounds then made them objects in unity.THE PENCIL GRAPHITE IS NOT A GREAT CONDUCTORMade a decent game in such short amount of time.I have a better understanding of creating 2D games in unity.Released on the Web for everyone to playHackSussex2016Yuvesh Tulsiani\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 24, 2016 06:25 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Sticker Jump","project_tags":["unity"],"project_url":"https:\/\/devpost.com\/software\/sticker-jump","keywords":"game,unity,built,stickers,made,paper,makey,make,play,controller,bag,found,pencil,laptop,find,wanted,mlh,everyone,whole,frustrating"},{"level_0":782,"hack_vector":[[0.1422196925,-0.0861127451,-0.0478917211,0.0382386073,-0.0276242737,0.1490329802,0.2103108019,-0.0339401998,-0.013855082,-0.013120424,0.0089073731,-0.0618949085,0.1358554363,-0.0636011958,0.0685391054,-0.0114267934,0.2075043172,-0.0003753586,0.0290332064,0.118572779,-0.2335849851,0.0181103088,-0.0363017097,-0.0085337311,0.1180672571,-0.0064685154,-0.0231523514,-0.1677184403,-0.0264293831,-0.0795892477,0.0658075362,-0.1309763938,0.0225036554,-0.0852602422,-0.0225771293,-0.0205129534,0.1161777377,-0.1396512389,-0.0703481138,-0.0068118391,0.0434246361,-0.1232484356,-0.1309709698,-0.0231633205,0.075065136,-0.049949687,0.0050898413,-0.0736649483,-0.0339843854,-0.2127044201,-0.141744867,0.0034900794,-0.0972724706,-0.0039512948,-0.1912904382,0.1660791039,-0.1213506758,-0.0196286347,0.0238718875,-0.1084742546,-0.0668296441,0.0170836616,0.0858245045,0.0353169553,0.1163172349,0.0158017278,-0.1024935395,-0.1192930043,0.0439772457,0.0362154804,0.0657462105,-0.0366497524,0.032005392,-0.1302693635,0.0158475414,-0.1333828121,0.1777320653,-0.0002878274,0.0011622248,-0.134519577,0.1201340109,0.1577780098,0.0709963217,0.1748791784,0.0913851261,0.1990885288,-0.0934151411,-0.0434798747,-0.0185784083,-0.0772778019,-0.1643202603,0.0541584268,0.1098647267,-0.0450859554,0.0045342511,0.0205242988,-0.1495548189,0.2496304065,0.0020318218,-0.0709100217]],"hackathon_name":"HackSussex2016","index":782,"project_description":"Let the emoji ninja transfer your chat experience with a state of the art emojifier\/\/ the domain.com name we've chosen is   teeny-tiny-emojitron-ninja.comMany tools are available for text auto-completion: spell check, voice command; however none are available to finish off a text with an appropriate emoji. We want to make the world a better place by providing everybody with our tool, so that everybody can emojify their sentences.EmojiNinja can look inside your heart and your mind and 100% accurately make your message complete with the emoji your message needs. Emoji is lifeIt's a node.js web chat we made using sockets. At the heart of the project is a neural network which analyzes the sentence and suggests an emoji.Turns out displaying emojis is quite a challengeWe are proud of using our knowledge of Python, node.js and AWS, along with neural networks, to create a tool to facilitate everyone's chat experienceWe learned how to use AMAZON WEB SERVICES. We also learned how to use pybrain, a python library for neural networks. And Carla learned how to make a chat.You will never discover your true self without EmojiNinja, therefore it is our goal for the whole world to use it. And we could get some more training examples...HackSussex2016Jacek Burys\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 24, 2016 06:42 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"EmojiNinja","project_tags":["node.js","python","amazon-web-services","amazon-ec2","amazon"],"project_url":"https:\/\/devpost.com\/software\/emojininja","keywords":"emoji,learned,make,neural,use,emojininja,chat,node,proud,heart,python,networks,com,message,everybody,world,text,using,available,tool"},{"level_0":783,"hack_vector":[[0.1487928182,-0.0985303298,-0.0285330359,0.033561755,-0.0182068609,0.1371815801,0.2134816647,-0.0296836589,-0.0216312259,-0.0039629303,0.0137938159,-0.0714391395,0.1315467209,-0.0760121495,0.0772136226,-0.0035929454,0.2124734819,0.0041497415,0.0405007824,0.1152775288,-0.2316608131,0.0413263068,-0.0516904965,-0.0326089114,0.1002664343,-0.0224418398,-0.0224038195,-0.1940147728,-0.0351268202,-0.0818003565,0.059595041,-0.1301318705,0.037959069,-0.1111656353,-0.0353607722,-0.0114856642,0.1148921922,-0.1402775496,-0.0656682253,0.0044699125,0.0347893871,-0.1363355815,-0.1532027721,-0.0310518183,0.0676891282,-0.0574763305,0.024249224,-0.0798678473,-0.0449592397,-0.2080145776,-0.148747012,0.0068055345,-0.1100076362,-0.0012656279,-0.1684334427,0.1616400182,-0.1280710548,-0.0132699348,0.0234760679,-0.0930950195,-0.0714825168,0.0148355681,0.0842165947,0.0461691022,0.1108222902,0.0001638942,-0.1067926139,-0.1136897504,0.0312702954,0.0190529823,0.0677421838,-0.0560531989,0.014661558,-0.1320426762,0.0334090218,-0.131720379,0.1822282076,0.0169463456,0.0194901247,-0.1362448186,0.1425588578,0.1602818668,0.0766038001,0.1585018337,0.1019546166,0.1981108487,-0.0844298229,-0.0263030883,0.0086408481,-0.0738966689,-0.150104478,0.0514408462,0.0953226686,-0.0371682085,-0.0042642727,-0.0139597086,-0.1462199241,0.2156802714,0.0067213383,-0.0743411034]],"hackathon_name":"HackSussex2016","index":783,"project_description":"Streaming reactive tweet sentiments for selected tagsMain UIWanted to play with Twitter api as well as try to deploy something with docker.Tracks the number of positive vs negative tweets that contain a particular search term\/tag.It runs a separate Scala\/Akka\/JVM based dockerized backend hosted on an AWS EC2 instance orchestrated by TumTum (Docker Cloud) which is connected to the Twitter stream. The API lets you chose tags\/search terms to follow. When a tweet is matched it is sent to the Azure Text Analytics API for sentiment analysis. A running total of positive vs negative tweets is kept for each search term, available on another API.\nAPI GitHubThe front end is written in Javascript using Webix and hosted on AWS S3.\nWebview GitHubStaying awake long enough to finish.\nGetting the Java Twitter4j library to play nicely with Scala - Scala primitives are not always the same.\nCORS - enabling the backing to take requests from other domains.\nMany many more...It works without crashing \\m\/ (so far...)Twitter API. Azure API. Akka Actors api. Docker\/Tumtum.More analytics and persistence of results. Better UI.\nTried to use the domain voucher to buy bitsplease.net for the project but domain.com's site was being less than useful. I think I have managed to buy it now, but they won't send me the details to log in.... meh.HackSussex2016Raghav Narula\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 24, 2016 06:31 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Bits Please","project_tags":["scala","java","javascript","docker","amazon-web-services","azure"],"project_url":"https:\/\/devpost.com\/software\/bits-please","keywords":"api,twitter,docker,scala,search,azure,domain,positive,play,buy,term,github,negative,tumtum,many,tweets,vs,akka,aws,analytics"},{"level_0":784,"hack_vector":[[0.1466210485,-0.1151023731,-0.0169304274,0.0576116666,-0.0308960937,0.1516223401,0.1932287067,-0.0472443849,-0.0203961655,-0.0330101363,0.0111653078,-0.0310497526,0.1414323747,-0.0767890438,0.0399710238,0.0195685811,0.2302106321,0.0105102183,0.0499274842,0.1239363775,-0.2226530463,0.0144640887,-0.048755575,-0.0246184953,0.1459788829,-0.0246967226,-0.0428567529,-0.1813511997,-0.0162675101,-0.0839883536,0.046873685,-0.1195837632,0.0474971645,-0.0694497451,-0.0297609605,-0.0045646369,0.1385082901,-0.1273545325,-0.0433335677,0.0353404693,0.0527796075,-0.1320679039,-0.155494377,-0.036751952,0.0235671401,-0.0689506233,0.0301327463,-0.04361967,-0.0372431651,-0.2200633138,-0.1143995002,0.0226241834,-0.1162627488,-0.0182234365,-0.1648110896,0.1628454924,-0.1416423768,0.0076591712,0.0109215714,-0.0529961586,-0.0485667437,0.023155028,0.0608005635,0.0589814261,0.1263340563,-0.0008525661,-0.1166270524,-0.1468047053,0.0189544596,0.0073393607,0.0556298196,-0.0471806601,0.0151542537,-0.1319718957,0.0017657157,-0.0937927216,0.196753189,0.0004111454,0.0372575782,-0.1553277075,0.1200642437,0.1631210595,0.0399308801,0.165276736,0.1253475398,0.1916547865,-0.1170570105,-0.0077730888,-0.0111369155,-0.0886646435,-0.1366317719,0.07647302,0.0824837014,-0.0196635276,0.0252115969,-0.0440195911,-0.1324359775,0.2207948565,0.046737697,-0.0679152757]],"hackathon_name":"HackSussex2016","index":784,"project_description":"Atom package for Gist code reuse.Baseball OctocatA useful atom package for developers that reuses Gist code easily.It consults all public Gists and lets you filter them so you can look for any function you want written in any language.To toggle: ctrl + alt + oFor developing this tool we used the latest version of the AtomAPI 1.0, including atom-space-pen-views classes.After having some trouble when trying to get our free domain at Domain.com we have decided to develop it locally.\nThe domain name is www.noneedtoreinventthewheel.com\nWe have included the whole web project in the second repository field.HackSussex2016Octavi Prats\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 24, 2016 05:47 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"func-seekr","project_tags":["coffeescript","css3","html5","less","javascript"],"project_url":"https:\/\/devpost.com\/software\/func-seekr","keywords":"domain,atom,com,package,field,including,included,gists,gist,get,function,func,free,filter,www,easily,latest,developing,developers,develop"},{"level_0":785,"hack_vector":[[0.1587404311,-0.1346470714,-0.0023714756,0.0668902621,-0.0347116254,0.1577074081,0.1985072494,-0.0522877574,-0.0480810218,-0.0115745654,-0.0005455252,-0.0104834521,0.1428906173,-0.0799621418,0.0177005343,0.0646735206,0.2646993995,0.0254120361,0.0499589369,0.1024120376,-0.2054033428,0.0310793426,-0.0541432202,-0.0556708202,0.1637758464,-0.0168360732,-0.0707349032,-0.1937835813,0.0114251412,-0.0808126181,0.0452783071,-0.1200523973,0.0741785839,-0.0689938739,-0.0355900154,0.0011873934,0.1383601874,-0.108814247,-0.0107321525,0.0618610084,0.0507609695,-0.1594620645,-0.1862838715,-0.0344122723,-0.0189576484,-0.0556157045,0.0268245507,-0.0317636877,-0.0241622161,-0.1862880588,-0.05139184,0.026499832,-0.1038941294,-0.0381919406,-0.1145088002,0.154235363,-0.1617145538,0.0541125312,-0.0074338634,0.003555198,-0.0286688264,0.0434906781,0.062788941,0.0802796856,0.1348590106,-0.0348561481,-0.1411311477,-0.1709036827,0.02506827,0.0162037648,0.0819377378,-0.0408586971,-0.0051220292,-0.1381278485,-0.0424912646,-0.0931276381,0.1893802285,0.019603882,0.0926595405,-0.1290849298,0.125751704,0.1478295922,0.0409447104,0.1336411387,0.1441001892,0.1608325094,-0.1419426352,0.0320700109,0.0096114418,-0.1110440716,-0.0992603302,0.0865065455,0.0419842303,-0.0032408226,0.0655076504,-0.0646890104,-0.0919981897,0.164630115,0.0800748095,-0.0547827333]],"hackathon_name":"HackSussex2016","index":785,"project_description":"Generates excuses based on input strings.The realisation that lots of coursework deadlines were coming up.Creates excuses from input strings based on how common the word is used in the English Language.HackSussex2016Jamie Ingram\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 24, 2016 06:49 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ExcuseGenerator","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/excusegenerator","keywords":"word,used,strings,realisation,lots,language,inspiration,input,excuses,english,deadlines,creates,coursework,common,coming,based"},{"level_0":786,"hack_vector":[[0.1454524696,-0.0991287157,-0.0381432772,0.0365510434,-0.0204325076,0.1296479702,0.2050761878,-0.0289747827,-0.0270083733,-0.0088901315,0.010695287,-0.07196109,0.1382142156,-0.0769737139,0.0687564388,0.00628846,0.2102901191,-0.008509811,0.0444865078,0.12061169,-0.2348295897,0.0351706892,-0.048400782,-0.0152977724,0.1111310422,-0.024304593,-0.0296989251,-0.1741997004,-0.0246143844,-0.077609852,0.0615408234,-0.1252999902,0.0331159942,-0.0826902688,-0.0303337947,-0.0094857076,0.1179916188,-0.1380015016,-0.0595319159,0.0032276532,0.0388547406,-0.1332801282,-0.1575121284,-0.02446297,0.0639552101,-0.0600541309,0.0169305298,-0.0796466768,-0.01896777,-0.2102802396,-0.1429956406,0.0076307603,-0.107256338,0.0095441835,-0.1884773821,0.1545340419,-0.1351422369,-0.0148282479,0.0251079891,-0.0956803858,-0.070002988,0.0272457022,0.082170777,0.0510352254,0.1137309372,0.004035627,-0.1007484421,-0.1239534095,0.0347978175,0.015539377,0.06681481,-0.0499651432,0.0157669,-0.1215929911,0.0311715063,-0.1296536922,0.1834985316,0.0034221441,0.0201087222,-0.1344140917,0.1336843818,0.1571963131,0.0655538663,0.1697715521,0.1030270383,0.1990318447,-0.0996206701,-0.02667615,-0.0100672627,-0.085056968,-0.1425230801,0.0560765676,0.1031381488,-0.0404166467,0.0053178896,-0.0022979071,-0.1584391892,0.2313475013,0.0179420374,-0.0765467808]],"hackathon_name":"HackSussex2016","index":786,"project_description":"Pebble App to tell you the crime rates in your areaWanted to make something cool with the Pebble and Police data.Takes a user's location and passes that to the Police.uk data API. That then returns a set of data about recent crimes in the area. This is displayed to the user in a variety of ways. For instance, you are able to see how many crimes, the type of crimes and their frequency and the exact spot that most of the crimes occurred.Additionally users can shake the pebble to refetch data and can set the app to automatically update every 20mins if they are walking around and want regular updates.Using the CloudPebble IDE and PebbleJS API (plus GitHub ofc).JavaScript....\nThe Pebble API is lacking when developing in JS as this functionality has only been recently added.  Understanding the documentation (PebbleJS != PebbleKit JS). CloudPebble IDE can be slow to work with. Pebble has a limited screen and button inputs.It runs. First time working with a lot of tech e.g. the Pebble, JSON, JavaScript (for Charlie).[] + [] = \"\"\n[] + {} = {}\n{} + [] = 0\n{} + {} = NaN\nhttps:\/\/www.destroyallsoftware.com\/talks\/wat\nJavaScript is a strange language. However it was something we had not really used before so it was good to learn it. Esp using API to get data and JSON\/AJAX stuff.Tidy up and them put on the Pebble StoreHackSussex2016Charlie Ringer\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 24, 2016 06:08 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"CrimeWatch","project_tags":["javascript"],"project_url":"https:\/\/devpost.com\/software\/crimewatch-zw4jhx","keywords":null},{"level_0":787,"hack_vector":[[0.1433686018,-0.1338169277,-0.0228736121,0.0437980555,-0.0308149382,0.1406010985,0.1773304641,-0.0364992693,-0.0133702932,-0.0370374285,0.0140213501,-0.0432704948,0.1353190243,-0.0624292828,0.048727084,0.0357291177,0.2388376594,0.0082370015,0.0416780412,0.1281693876,-0.2471675575,0.0102698915,-0.0364334472,-0.0299089141,0.111794509,-0.0271529015,-0.0287824869,-0.1787443459,-0.0176631771,-0.1145765856,0.05272853,-0.1148642376,0.0388982408,-0.0698965937,-0.0076206587,-0.0342381187,0.1134306416,-0.1485237479,-0.0419677943,0.0092353811,0.050987184,-0.119904995,-0.1642392129,-0.0432770588,0.0400202461,-0.0672349334,0.0290598422,-0.0523408875,-0.0332628824,-0.2271839827,-0.1160722971,0.0091030644,-0.0966693088,-0.0412063524,-0.1932473183,0.1628682315,-0.1199289784,-0.0178230219,0.0374034382,-0.0662163347,-0.0572735667,0.0166662037,0.0621265247,0.0426377803,0.1076853126,0.0161399078,-0.1101824045,-0.1476867348,0.0296435487,0.0170316659,0.0756883696,-0.0498475991,0.0146494731,-0.125852555,-0.009400663,-0.1170194447,0.1781442761,0.0143755069,0.0359451175,-0.1344682276,0.1145098656,0.1695473343,0.0200746506,0.1868905276,0.1215007007,0.1958025098,-0.1129659414,-0.0153837558,-0.0377241634,-0.0792016312,-0.1210212633,0.0811016783,0.0800749958,-0.038120728,-0.0061267489,-0.019264916,-0.137008056,0.2208516002,0.0308894292,-0.0763844252]],"hackathon_name":"HackSussex2016","index":787,"project_description":"A game where you, a master hacker, keep Sussex Hack de-stressed and running smoothlyMy star reviewerScreencap of actualWelcome to HackSussex The GameYou play as \"Master Hacker Ollie\" and it's your job to keep the team tables destressed by going to them and solving their problems.Use the arrow keys to travel to each of the tables. When you visit them, they'll turn green, showing that they're destressed.\nWhen a table turns red, it's getting stressed, and needs visiting quickly!\nAs the day goes on, the team's get more tired, more stressed, and need more attention!How long can YOU keep HackSussex running?Kudos to Ollie and the team for an awesome job!!! I've had a great time :)HackSussex2016Chris Dudley\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 24, 2016 06:36 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Ollie Simulator 2016","project_tags":["html","javascript","phaser.js"],"project_url":"https:\/\/devpost.com\/software\/hacksussexthegame","keywords":null},{"level_0":788,"hack_vector":[[0.1495608687,-0.1339803487,-0.0092308819,0.0639168546,-0.0254076067,0.1548869163,0.1902805269,-0.0520213135,-0.0393332019,-0.0324547626,0.0066193845,-0.0235395767,0.1327136606,-0.0665086135,0.0251380485,0.0543274172,0.2562760413,0.0139331287,0.0432045572,0.1198795661,-0.2212627381,0.0281984527,-0.0429268219,-0.0390061066,0.1472832114,-0.0207627397,-0.0512034781,-0.1949481219,-0.0163526777,-0.0886608139,0.0575638823,-0.1216147393,0.0624358207,-0.0649497285,-0.0259610079,-0.0175615046,0.1301592141,-0.1189933568,-0.0162272528,0.03923757,0.0538909659,-0.1470517367,-0.1767997295,-0.0473910794,0.0064462479,-0.0592956915,0.0227592327,-0.0326957218,-0.0288696587,-0.2128659934,-0.0648403317,0.010632704,-0.0988092571,-0.0310310125,-0.1502485424,0.1640171558,-0.151552245,0.0218084678,0.0086155906,-0.0339429006,-0.0430914052,0.0236220583,0.0612137243,0.0541034304,0.1271432936,-0.0103960047,-0.1376899332,-0.1635664552,0.0369731709,0.0226006359,0.0717298016,-0.0448045805,0.010904829,-0.1329081357,-0.0322093144,-0.0987904742,0.1847398877,0.0027163166,0.0740629956,-0.1324320138,0.1145805568,0.1593394279,0.0306831542,0.1674159467,0.1334029734,0.1723403782,-0.1401205063,0.007320195,-0.0135526601,-0.1061275303,-0.1192061305,0.0885899141,0.0615985319,-0.0241820104,0.0230282079,-0.0436866283,-0.112828657,0.1897736937,0.0700556412,-0.0626720712]],"hackathon_name":"HackSussex2016","index":788,"project_description":"Use 3D touch on the new iphone 6s to pop balloons and play piano notesHome screenGame screenBubble wrapBallons float to the top of the screen. The higher you press then the higher the note. You can use 3D touch to control the volume of the notes.Swift and Xcodenon linear pressure recognitionThe balloons move at a very good paceBetter audio management on swiftWWDC submissionHackSussex2016Abdulhakim Ajetunmobi\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 24, 2016 06:26 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Stress Popper","project_tags":["swift"],"project_url":"https:\/\/devpost.com\/software\/stress-popper","keywords":"swift,higher,xcode,float,move,management,linear,learned,inspiration,good,control,non,challenges,built,bubble,better,balloons,ballons,audio,next"},{"level_0":789,"hack_vector":[[0.138409704,-0.0954166725,-0.0174855534,0.0589908734,-0.0275722109,0.1340035051,0.2058838308,-0.0302585866,-0.0229568612,-0.0280805025,0.0181690976,-0.0474284664,0.1494379491,-0.0735773742,0.0554865673,0.0048087141,0.2101272643,0.001817914,0.049167566,0.1338848919,-0.2215024829,0.0186197013,-0.062320251,-0.0140726455,0.133253172,-0.0203085206,-0.0412551537,-0.1788885891,-0.0227606855,-0.0849556848,0.0507869124,-0.106305398,0.0420040265,-0.0755401626,-0.0175949223,0.0064499052,0.1289706528,-0.1258993745,-0.0553997681,0.0237990096,0.0544196554,-0.1297507584,-0.147803396,-0.0302570648,0.0361103043,-0.0657665506,0.024413364,-0.073177956,-0.0322836675,-0.213554278,-0.1338883489,0.0199870057,-0.1132930219,0.0006735927,-0.1739792824,0.1697860062,-0.1390635967,-0.0027275837,0.0153331263,-0.0860333219,-0.0603322312,0.0292654857,0.0719217062,0.0537731685,0.1275707781,0.0055523515,-0.110993132,-0.1405698061,0.0187211633,0.0005198706,0.042450428,-0.0416548699,0.0104475161,-0.1238534376,0.0219302066,-0.094608441,0.2033912688,-0.0086900853,0.0181167386,-0.1528221965,0.1149007306,0.158477813,0.0640283525,0.1434005499,0.1132455766,0.2083201557,-0.0961098596,-0.0303385891,-0.0122902934,-0.082570754,-0.1501226723,0.0726845935,0.0934227407,-0.0210508592,0.0094400207,-0.0252928268,-0.1588839889,0.2416049242,0.0247376282,-0.0680069476]],"hackathon_name":"HackSussex2016","index":789,"project_description":"Never forget your phone again.We wanted watch to tell us whether we left our phone.It vibrates whenever the connection is lost with the phone.We used CloudPebble API with C language and some on-line support websites.We could not use the Pebble JS API to be able to use a Worker (background running up on pebble watch), we had to switch code to CWe were able to accomplish this without the need of separate mobile appSome C language (we never programmed in this particular one), Pebble API, Pebble Watch (we also never used one before)Quicker response time with the disconnection (signal strength checker), a better GUI, clean code, add lock functionality for the phoneHackSussex2016Jerzy Borowicz\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 24, 2016 06:18 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Leash","project_tags":["pebble","c"],"project_url":"https:\/\/devpost.com\/software\/leash","keywords":"pebble,api,phone,watch,able,one,used,use,never,language,code,could,js,inspiration,learned,leash,gui,functionality,disconnection,cloudpebble"},{"level_0":790,"hack_vector":[[0.1467919201,-0.1220948324,-0.0260275658,0.0578404702,-0.020650899,0.1448099613,0.1838013679,-0.0357121564,-0.024355188,-0.03327078,0.005620271,-0.0580600463,0.1495479345,-0.0660204142,0.0507748239,0.0042350669,0.2126602083,0.0093688993,0.0531240664,0.1152230576,-0.224760741,0.0452549532,-0.0425153151,-0.0207718518,0.1192097962,-0.0291227046,-0.0428956188,-0.1815423369,-0.0405569412,-0.0882923082,0.0681778193,-0.1310437173,0.0435457788,-0.0733279586,-0.0258965474,-0.0259427205,0.1314214468,-0.1312671304,-0.0573588572,0.012519192,0.0622231737,-0.1402080506,-0.1605449617,-0.0379890241,0.0402555205,-0.0571590513,0.0269335769,-0.0652480572,-0.0481752343,-0.2157950997,-0.136077106,0.026164595,-0.1037845165,-0.0098065948,-0.1870464683,0.1558045447,-0.1280821413,-0.0111769512,0.0292013884,-0.0708313957,-0.0689544529,0.0199869145,0.0587222762,0.039059367,0.1079306155,0.0145754954,-0.1074850783,-0.1315071881,0.0228227414,0.0201152507,0.0752468407,-0.0549077131,0.018340826,-0.1306783259,0.010686405,-0.1007127762,0.1934788078,0.0113122361,0.0256674774,-0.1415482163,0.1147726029,0.1609505117,0.0433929674,0.1605129987,0.124605231,0.1925223172,-0.1045557037,-0.0361465961,-0.006499941,-0.0915863216,-0.134496972,0.0680749938,0.0866915211,-0.0410430953,0.0101410486,-0.0337559842,-0.1437708437,0.2400425076,0.0238230526,-0.0716495216]],"hackathon_name":"HackSussex2016","index":790,"project_description":"Cute bird, flashes when people tweetI bought this cute plastic bird-shaped colour changing light from Tiger (the best shop in the world). I wanted to make something with it!Whenever somebody tweets with #HackSussex it lights up in Twitter-blue!Node.js app listens to a stream from the Twitter api and when it receives a tweet, sends a random signal over serial to the arduino, running a sketch that flashes the light on when it receives anything over serial.I initially wanted to light up the bird when I got a Mac OS notification but the sqlite database containing all of the notifications was total nonsense, so I have up on that idea. Also somebody said the bird looked like the Twitter logo.I must get the award for laziest hack, right?Don't go out the night before a hack. Sleep is the most powerful programming tool!Use the arduino serial rgb led control software I made ages ago instead of this rubbish method. Also get a cuter bow.HackSussex2016Scott Street\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 24, 2016 06:16 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"twit bird","project_tags":["node.js","arduino","twitter"],"project_url":"https:\/\/devpost.com\/software\/twit-bird","keywords":"bird,serial,twitter,light,arduino,get,hack,somebody,receives,wanted,also,learned,hacksussex,flashes,go,got,like,lights,idea,led"},{"level_0":791,"hack_vector":[[0.1512635052,-0.0924069434,-0.0248220414,0.0599583946,-0.0086257188,0.1495409906,0.20108895,-0.0475168377,-0.0347500965,-0.0087771965,0.0103835929,-0.072629936,0.1597017348,-0.0860379338,0.0626206845,0.0053230277,0.2137862146,-0.0195485037,0.0494077988,0.1278539598,-0.2261390239,0.0436278768,-0.0542255826,-0.0040992498,0.146437332,-0.0351521969,-0.0364626497,-0.1868135482,-0.0447407849,-0.0621559806,0.0750768781,-0.1223014295,0.053992372,-0.07669653,-0.0431294516,-0.000888518,0.1318090856,-0.121734865,-0.0333184935,0.0037349591,0.0624888651,-0.1390440613,-0.1667986959,-0.0078602191,0.0518425182,-0.0341663882,0.0211653896,-0.0801227316,-0.0225851871,-0.2182740867,-0.1280411333,0.014921004,-0.1085992903,0.036280714,-0.1908578128,0.1485139877,-0.1508946568,-0.0057907207,0.0111320829,-0.0858562812,-0.0681094825,0.0202188622,0.0804241821,0.0339045227,0.1204387024,0.0027288017,-0.0880783424,-0.1326713413,0.0261729881,0.0170008335,0.0642937273,-0.0451474413,0.0169706121,-0.1220794916,0.0281929076,-0.0883066058,0.1956742704,-0.0084548509,0.015229105,-0.1273883581,0.1231330559,0.1519275755,0.0658814386,0.1543005258,0.1031837687,0.1927936077,-0.0929365754,-0.0271411631,0.003573918,-0.0878987238,-0.1441322714,0.0593533143,0.0838588551,-0.0228033904,0.0036065804,-0.01432731,-0.1361451447,0.225970313,0.036751572,-0.0660626888]],"hackathon_name":"HackSheffield 1.0","index":791,"project_description":"A programable online bot fighting game where the best algorithm wins!We wanted to create fun game that involved programingThe user creates assembly esque instructions to send to the server in order to instruct the bot in the manouvers it should take.We used socket.io to sync clients with the server and send commands to the bots. Javascript and prayers hold it together.sockets was a challenge to get used to first and most of the team is very new to nodethe viral dreamHackSheffield 1.0Worked on building the backend in terms of implementings the bots, arena and contributing to the assembly-esque programming language.I worked on building the front end. Like most of us it was our first encounter with node so it was quite the experience. Would do again!Worked mainly on building the backend with sockets.io, and drawing pretty pictures with canvas on the front end. Great learning experience.I briefly introduced everyone to node and did the initial setup the for express and socket.ioMitchel Starkie\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 20, 2016 07:15 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Algo Fighter","project_tags":["javascript","json","node.js","socket.io","express.js"],"project_url":"https:\/\/devpost.com\/software\/algo-fighter","keywords":null},{"level_0":792,"hack_vector":[[0.1555600017,-0.1385585219,0.0007328664,0.0798758641,-0.0373725258,0.1552488208,0.1810433418,-0.0384874828,-0.0369004793,-0.0171546638,-0.0014719433,-0.0198954474,0.1407002807,-0.0829296261,0.0257356539,0.0693527535,0.2514877021,0.0293961558,0.0602915362,0.0965523794,-0.2172255665,0.027260283,-0.0602441616,-0.0385977998,0.1547311246,-0.0289225634,-0.0755423307,-0.1885687113,0.0053725601,-0.0792346671,0.0441571698,-0.1125447899,0.0654389933,-0.0618965477,-0.0291075818,0.0076472117,0.1395694315,-0.1221632808,-0.0125389304,0.0457377471,0.0438027568,-0.1678522974,-0.1981492788,-0.0285051521,-0.0160833206,-0.0524705909,0.026296258,-0.0361504555,-0.0105111394,-0.1997127086,-0.0564209335,0.034046039,-0.1025728807,-0.0259370841,-0.1535877287,0.1529976726,-0.1602620482,0.047111012,0.0066669877,-0.0014971546,-0.0431067124,0.0417585708,0.0579751693,0.0769277215,0.1209889278,-0.0170314629,-0.118266277,-0.170889914,0.0226384494,0.0099182362,0.0817238539,-0.0462353267,0.007491685,-0.1379371434,-0.02966794,-0.0808225274,0.1868336499,0.0127122924,0.0810674131,-0.1358025968,0.1136427075,0.1537604928,0.0422604233,0.1462291181,0.1390142888,0.1734919548,-0.1397588998,0.0199941434,-0.0004034639,-0.1153836474,-0.0935832188,0.0924549773,0.0473576151,-0.0191636588,0.0567341745,-0.0567187108,-0.0976521075,0.1786022782,0.0813284442,-0.0636393353]],"hackathon_name":"HackSheffield 1.0","index":792,"project_description":"A heatmap of London, displaying the relative heights of buildings, in order to find best placement for Solar PanelsLondHackSheffield 1.0I created the class to calculate the projected shadow of a building at any date\/time.I worked on the data reading and internal format of this dataBoolean Algebra\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 20, 2016 07:53 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HackSheffield - BooleanAlgebra","project_tags":["java","netbeans"],"project_url":"https:\/\/devpost.com\/software\/hacksheffield-booleanalgebra","keywords":"sun,data,angle,solar,heatmap,using,learned,london,produce,position,java,many,calculate,plotting,big,place,panels,positions,use,managed"},{"level_0":793,"hack_vector":[[0.1431610733,-0.0815098211,-0.0416305028,0.0337190107,-0.014956492,0.1229346097,0.199772194,-0.0155840982,-0.0309128184,0.0009186641,0.0128763737,-0.0929218531,0.1420130134,-0.0733479038,0.0774517655,-0.013154842,0.1879874319,-0.0117485737,0.0380266681,0.1248325333,-0.2360984981,0.0373631492,-0.0472264849,-0.0004547987,0.1051782593,-0.0253052954,-0.0302649252,-0.1717559397,-0.0318113975,-0.0782784075,0.0767672062,-0.1237135455,0.0170294959,-0.0826047733,-0.0223346036,-0.0026628184,0.1130805686,-0.1422648728,-0.0647835135,-0.0153091643,0.0373446085,-0.131807819,-0.1468622535,-0.0170134995,0.0796483755,-0.055439163,0.0085042305,-0.0936441422,-0.0193140283,-0.2120779902,-0.1623132229,0.0129480986,-0.1028112024,0.0299121737,-0.2089491636,0.158752054,-0.1295064688,-0.0274371468,0.0281918328,-0.1222640276,-0.0788627565,0.0277159456,0.0805066228,0.0492343009,0.1099177077,0.0191629045,-0.0825526267,-0.108780399,0.0276026037,0.0142346043,0.0668991357,-0.0449515358,0.0236840621,-0.110608831,0.0547957756,-0.1250828803,0.1720506549,-0.003687999,-0.004575558,-0.130812332,0.1280755848,0.1546544582,0.0755416527,0.1575667262,0.0857778713,0.2076510638,-0.0840380862,-0.0573974848,-0.0155483726,-0.0738498643,-0.1526750177,0.046504464,0.1070409641,-0.0480411947,-0.012305188,0.0239704158,-0.1649440527,0.2418142557,-0.0015209015,-0.0748362094]],"hackathon_name":"HackSheffield 1.0","index":793,"project_description":"It's a data visualisation platform for the hottest events happening around you.We realised how there isn't a platform to discover events happening around us that is presented in a way easy to visualise. Many events are sometimes discovered on Facebook by accident when someone clicks \"attending\" or \"interested\" in an event.FootFall is a platform that allows users to visualise the hottest events happening around them. They can search for different locations around the worldWe first gathered data using the Facebook graph API and sorted the data based on location, event dates, duration of the events, and the estimated number of people attending. An API was then created to query this data, which allows to then present in any client we choose. Our data visualisation method of choice is the Google Maps API, which allowed our users to interact with events that they found using a heatmap and a filter for the events based on date ranges. We deployed our website to Amazon AWS and also used a custom domain from Domain.com. On the AWS instance, have an Apache server for serving web content and a node.js server for API calls. We'd like to thank the sponsors of HackSheffield as well as the organisers of the hackathon for running this amazing event.The biggest challenge we ran into was gathering the data itself. We had to be careful to not breach any terms of privacy and it was a major concern to us that there wasn't enough data around as well.We are proud of solving a Big Data problem. Making sense of the data that we had and presenting it in a visually pleasing interface while also using it to benefit potential users around the world is truly satisfying. The team dynamic is also something that we are truly proud of. We enjoyed building something cool that matters during the hackathon.We learnt how messy data is presented to us and sometimes, we don't even realise that there is data that we can utilize in a useful manner useless we actively looked for it.We could implement other sources of data, for example, live tweets from Twitter regarding current events and intergrate that into our platform. We could also allow our users plan a route through popular events in their area to help them discover the events around them.HackSheffield 1.0I was responsible for mostly the front-end parts of the project, using HTML and CSS during the hackathon. I also implemented part of the Google Maps API, including the using the Places API, implementing the search box, and helping to add the heatmap to FootFall. I learnt a lot about jQuery during the hackathon and how it can be implemented into projects.I coded a bit of everything in this project from using python with Facebook graph api in order to come up with a way to get listings of public events to the nodejs backend API to the front end HTML, CSS and jQuery. I learnt a great deal about the Google Maps API during this hack.We created an extremely useful and usable product in just 24 hours which is an incredible achievement! I learned a lot about many aspects of web application design, including utilising Google and Facebook APIs, lots more about JavaScript, how to set up a server with AWS and how to transfer files to and from the server. This was a thoroughly enjoyable experience!Tzen Szen Toh\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 20, 2016 06:36 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"FootFall","project_tags":["jquery","amazon-web-services","facebook-graph","google-maps","apache","node.js","javascript","html","css","sublime-text","python","linux"],"project_url":"https:\/\/devpost.com\/software\/footfall","keywords":"data,events,around,api,also,users,proud,event,using,platform,us,server,ran,presented,could,domain,discover,sometimes,facebook,footfall"},{"level_0":794,"hack_vector":[[0.1513151228,-0.1007646695,-0.0340374373,0.0386534818,-0.0152528156,0.1277729571,0.2093721479,-0.0245305207,-0.0403793082,0.010363413,-0.0005115682,-0.080240801,0.1515028328,-0.0749479607,0.0687864721,-0.0039400677,0.1973230839,-0.0099917818,0.0423698761,0.1087843254,-0.2377474606,0.0579226837,-0.0375226028,-0.0095063262,0.1179421693,-0.0322625898,-0.0387619361,-0.1795665771,-0.0311901998,-0.0671236143,0.0768255591,-0.1370852441,0.0307601597,-0.0831998736,-0.0352880694,-0.0213234276,0.1185359582,-0.140067488,-0.0681762695,-0.0128469039,0.0363497213,-0.1575588882,-0.1465352029,-0.0227692872,0.0579246171,-0.0390971676,0.0054041618,-0.0907951295,-0.0121469079,-0.1821073145,-0.1433335841,0.007955268,-0.1124262586,0.0331620388,-0.2012754232,0.1552250534,-0.1478530914,-0.0123350415,0.0286434311,-0.1045205742,-0.0853107944,0.029627068,0.0805422291,0.0480619334,0.1032752395,0.0174481645,-0.0962262303,-0.1150629148,0.0310784187,0.02959745,0.0817734301,-0.0570388809,0.0321554467,-0.1254794598,0.0445287116,-0.1403597444,0.171292901,-0.0066408492,0.0154037839,-0.1163602471,0.1346920878,0.1444286406,0.0807547644,0.1526757479,0.1052503362,0.1885287464,-0.0992490202,-0.0360932574,0.0061339028,-0.0865384787,-0.1407338679,0.0504414737,0.0921274647,-0.0512526408,0.0087100808,0.0037826272,-0.1633283496,0.2246688157,0.0194307771,-0.0669241622]],"hackathon_name":"HackSheffield 1.0","index":794,"project_description":"Real-world sensor data is really noisy.Let's mix approaches to reduce the noise and properly classify the activitiesProperly classified entry! YeayA bit confused???Learning!!Sensor data from real world can be extremely noisy. Trying to make sense of tens of thousands of entries manually is NOT an option. Our approach uses different techniques to map the entries to the proper activities.Initial dataset has many instances that are mislabeled. \nWe use a rule-based pre-processing routine to filter the meaningless data points.\nA simple neural network is then trained to classify the entries into 6 categories:\nIN_VEHICLE, ON_BICYCLE, STILL, UNKNOWN, TILTING, WALKING\nThe final goal is to visualise this new, improved information on a front-end.The data is in CSV format, the pre-processing is done using simple python scripts and subroutines.\nThe neural-net is written in python and is an input layer directly fed into an output layer. \nActivation function is a simple max function. Noise was introduced to try to reduce the effect of the skew in the classes composing the dataset.The dataset, being real-world sensor data, was skewed towards certain activities.\nThis means that some classes were overrepresented during the learning process and dominated the network.There is [a certain degree of] learning from the network and the visualisation shows that pre-processing is useful to a certain extent.Expect some serious noise in real world-data, sensors are cool but take them with a pinch of salt.\nUnsupervised learning is hard but super-cool.Introducing techniques to reduce the effect of skew in the data.HackSheffield 1.0I worked on the backend, the preprocessing scripts and the neural net development.I worked on the front end, server, and data visualisation.I worked on the data analysis and assisted with the preprocessing scriptsAlvin Pastore\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 20, 2016 07:12 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"NoisyWorld","project_tags":["python","react","node.js","gulp.js","html5","scss"],"project_url":"https:\/\/devpost.com\/software\/noisyworld","keywords":"data,network,certain,processing,pre,entries,simple,dataset,real,world,learning,neural,effect,reduce,python,function,sensor,activities,skew,techniques"},{"level_0":795,"hack_vector":[[0.1645412147,-0.1143507734,-0.0160647668,0.0553502329,-0.0276013911,0.1462996006,0.2021208405,-0.0266537201,-0.031195825,0.008063063,0.0088742599,-0.0587978847,0.1566360593,-0.0766056627,0.0660382733,0.0087282714,0.2144338489,0.0088476166,0.0484701134,0.0999589562,-0.2277639061,0.0384480767,-0.0528949015,-0.0223987028,0.1402182132,-0.0445218012,-0.0432776809,-0.1936959326,-0.0158823729,-0.0646587387,0.0758596957,-0.1218388826,0.0345540084,-0.0772157013,-0.0377985835,0.0148909148,0.1272838265,-0.1328420192,-0.0402518511,0.0194417797,0.0430938452,-0.1528419405,-0.1727377623,-0.0148126567,0.0387694649,-0.0396833196,0.0233979132,-0.068330653,-0.0147193577,-0.1978479922,-0.1288486272,0.0101273926,-0.1187257841,0.008529461,-0.185530439,0.1480337679,-0.1468470693,0.0066288896,0.0234491955,-0.0582550243,-0.0653654635,0.0262673665,0.0743178427,0.0575578809,0.1202077791,-0.0066888789,-0.0896026269,-0.134494856,0.0201139972,0.0000210221,0.0697357804,-0.0495302901,0.0171308909,-0.1228174493,0.0163783506,-0.1225534305,0.1910876036,0.009535091,0.0276434906,-0.1336292326,0.1359523684,0.160900116,0.0520642325,0.1580216587,0.1147360951,0.2078210115,-0.1053399071,0.0018983728,0.0070925732,-0.0976245999,-0.1216127053,0.0707654953,0.0716803968,-0.0213256851,0.0240526628,-0.0255539976,-0.1295673549,0.2130269408,0.0385779701,-0.0673011616]],"hackathon_name":"HackSheffield 1.0","index":795,"project_description":"Idea is to analise and visualise the data related to HackSheffield implemented by one man.Provides statistical information related to FB HackSheffield event, such as FB user id, my personal friends connection at HackSheffieldBuilt using Express+Node.js and d3.js.At start I ran into problems with getting access to FB Graph API and the visualising.I found couple of interesting statistical pieces of data. For example that FB user if make two distinct pieces of data.I learnt that data visualisation can be a fun process :)Getting more data visualised, improving the code, providing RESTful API.HackSheffield 1.0Alikhan Uzakov\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 20, 2016 05:27 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"DataInsights","project_tags":["javascript","json","node.js"],"project_url":"https:\/\/devpost.com\/software\/datainsights-bpu5z2","keywords":"fb,data,hacksheffield,statistical,ran,getting,js,built,user,api,pieces,example,fun,friends,found,graph,express,visualising,event,distinct"},{"level_0":796,"hack_vector":[[0.1456151307,-0.1387857497,-0.0107936747,0.0732709989,-0.0371893048,0.1483618617,0.1866767406,-0.0323439389,-0.0361266397,-0.0163720716,0.0027302767,-0.011357611,0.13563025,-0.0690627024,0.0403123945,0.038877558,0.2495839745,0.0204203576,0.0535177365,0.1056095809,-0.2315266728,0.0297178794,-0.0379143283,-0.0410101414,0.1502311826,-0.0195716228,-0.0605466664,-0.1843333691,0.0165172815,-0.0846515,0.0472126752,-0.1217666939,0.0511520989,-0.065781787,-0.0249695573,-0.0159163307,0.1364711225,-0.1313017756,-0.0324785858,0.0439719409,0.0482067131,-0.1692409217,-0.1771583706,-0.0460461341,0.0047415062,-0.0449450277,0.0206739455,-0.0370488949,-0.0139217069,-0.1951974332,-0.0757267326,0.0252555162,-0.1084046438,-0.0281951409,-0.1591817439,0.156331718,-0.1461696774,0.0338250324,0.0198479611,-0.0213041678,-0.0465507805,0.0342614427,0.0610714443,0.068954356,0.1192759126,-0.0125336554,-0.1209967285,-0.162958324,0.029237764,0.0169183966,0.0788714662,-0.044373855,0.0124648847,-0.1394478381,-0.0331838913,-0.1115055233,0.181448698,0.0158755016,0.07069204,-0.1336427033,0.1213975325,0.1587084681,0.0353110433,0.1627363861,0.1447298676,0.1780614555,-0.1412923187,0.0217059329,-0.0101196906,-0.1023088619,-0.1076707616,0.0888149962,0.0658339486,-0.019958226,0.0628957897,-0.0467875302,-0.1070120335,0.1902647763,0.062542893,-0.0533470921]],"hackathon_name":"HackSheffield 1.0","index":796,"project_description":"Weekly visualisation of a zombie outbreak from a location for a yearDomain registered : www.MarvelVSCap.comWe wanted to create something interesting using all sorts of open data. This project appeals to us because it has funny elements.Predict the spread of the virus\/disease based on the location, commuting between district, employment rate, population & wage + give you morbid thoughts of the future.HackSheffield 1.0Sherlyn Khaw\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 20, 2016 04:42 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"UK Epidemic\/Zombie Outbreak Simulator","project_tags":["javascript","mysql","excel"],"project_url":"https:\/\/devpost.com\/software\/uk-epidemic-simulator","keywords":"data,location,predict,uk,planning,mysql,spread,datasets,ons,open,us,went,wanted,etc,expressions,feature,features,find,exactly,epidemic"},{"level_0":797,"hack_vector":[[0.1608516276,-0.1067295372,-0.0406694077,0.0506143868,-0.0200601183,0.1335251927,0.2059591264,-0.0284169298,-0.0335792229,-0.0179512165,0.0014962092,-0.0591508485,0.1364451796,-0.05771254,0.0521202758,-0.0031319084,0.2058160454,-0.0070444625,0.0465641581,0.1457337886,-0.2473118305,0.0179891922,-0.0331107005,0.0102129383,0.1418521255,-0.0173973124,-0.0342964195,-0.1735568792,-0.0362719744,-0.0930652246,0.0775026381,-0.1169507354,0.0228342824,-0.0734996796,-0.0103685381,-0.0303004161,0.1085993499,-0.1275487244,-0.0572982281,-0.0010180229,0.0735720545,-0.1379817277,-0.1467180848,-0.0480015278,0.055789195,-0.0614206456,-0.0024730461,-0.0741564408,-0.0251145791,-0.2118810564,-0.1209920123,0.0135621196,-0.1034352556,0.0071780002,-0.214468047,0.1679395139,-0.1481577903,-0.023124272,0.0211461075,-0.0923364311,-0.0611051694,0.0272625554,0.0570666716,0.0219327882,0.1175687015,0.0222632345,-0.1182447672,-0.1254585832,0.0291310269,0.0261542462,0.0601578765,-0.03792689,0.0131007563,-0.1109787822,0.0185716432,-0.1045131609,0.1709878743,-0.0169845559,0.0091091432,-0.1322163492,0.0885063782,0.1447884142,0.0500997603,0.1713565588,0.1077005938,0.2174205631,-0.0955373794,-0.0258976966,-0.0236159228,-0.0678374097,-0.1195308492,0.0760435238,0.0926525965,-0.0310992934,-0.0202511959,0.0131516568,-0.1610615551,0.2415255308,0.012082261,-0.0548537187]],"hackathon_name":"HackSheffield 1.0","index":797,"project_description":"It's a small game with VR and hand detectionWe were inspired by the coolness of Oculus Rift, so we decided to use it combined with Leap Motion which is also a really neat device.Basically it's a small VR game, where you can move around and destroy things with your real world hands. We strapped the Leap Motion sensor to Oculus Rift, so that it can detect your real world hands and put them in the real world. This allows you to interact with the VR world.We used Unity for the actual little game and the different types of SDKs and APIs required for the hardware.It was really hard setting up the hardware to work together.Well, it does look really cool.We learned a lot about Unity while doing this. Also that the capabilities of VR are limitless.There's so much to do with VR. I can see almost every type of entertainment migrating to VR in the future.HackSheffield 1.0Mikhail Molotkov\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 20, 2016 08:03 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"VR Simulation","project_tags":["unity","oculus-gear-vr","leap-motion"],"project_url":"https:\/\/devpost.com\/software\/vr-simulation","keywords":"vr,world,real,really,rift,learned,hardware,hands,motion,game,oculus,leap,unity,also,capabilities,challenges,actual,inspired,inspiration,allows"},{"level_0":798,"hack_vector":[[0.1549829394,-0.1157899946,-0.0172339529,0.072556667,-0.0349440537,0.16181916,0.1991324127,-0.0465544052,-0.014344654,-0.026736293,0.0044605783,-0.0190503076,0.1303804368,-0.0706192106,0.0394650288,0.0213326421,0.228878811,0.0244219825,0.0511613712,0.1094955578,-0.218534708,0.0174198486,-0.0587634705,-0.0284449831,0.1389246881,-0.0054393867,-0.0517038815,-0.1788869947,-0.0131743271,-0.0907153487,0.0424669981,-0.1231986359,0.0506973937,-0.0773787424,-0.0305119995,-0.0025318966,0.1361721158,-0.1277520955,-0.0443340614,0.0450571701,0.0603993312,-0.1363518387,-0.1633202732,-0.0409064107,0.014941291,-0.0651183501,0.0289426483,-0.0498012751,-0.0425383002,-0.2093966603,-0.1033896878,0.0287010204,-0.1107569188,-0.0201427639,-0.1576349288,0.1646155864,-0.1443904191,0.0101489229,0.0069368156,-0.0418895744,-0.0501787588,0.024162991,0.0756501481,0.046932999,0.1316639185,-0.0112245297,-0.131363377,-0.1436326206,0.0210004486,0.0280249435,0.0583931878,-0.0358173028,0.0017081321,-0.1380517632,-0.0094992556,-0.0863739476,0.2033191472,0.027217757,0.034685012,-0.1613088399,0.1122350395,0.1668658108,0.0472145043,0.1520841122,0.1308043301,0.1956503987,-0.1094904467,-0.0050214534,0.0025869405,-0.0940836221,-0.1273043454,0.0824502334,0.0798654705,-0.0050448561,0.0281052943,-0.0403604731,-0.125202015,0.2199413627,0.041224312,-0.0637932941]],"hackathon_name":"HackSheffield 1.0","index":798,"project_description":"Plan a journey with a Drone and watch it in Virtual ReaityGot giddy with an Oculus RiftNothingWith bloodAWS, integrating API's, integrating  google sign-in,\nupdating aws-SDK packages, gradle conflicts, waiting for gradle to build...stuck by AWS (first time using it)Don't use AWS if you're not a massive company and have no training on it.If we get a drone.... we'll continue the implementation.HackSheffield 1.0Luke Waugh\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 20, 2016 07:58 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"DroneGuide","project_tags":["java","amazon-web-services","android-studio"],"project_url":"https:\/\/devpost.com\/software\/droneguide","keywords":"aws,gradle,integrating,drone,got,google,giddy,get,first,droneguide,waiting,implementation,conflicts,company,challenges,built,build,blood,api,continue"},{"level_0":799,"hack_vector":[[0.1533623934,-0.098774597,-0.0315001532,0.0527490377,-0.0143369129,0.1376552135,0.2075092643,-0.0292720608,-0.0335312635,0.0051890351,0.0112185124,-0.0807432756,0.1641598493,-0.0639431402,0.0649996549,-0.0368826352,0.1893274039,-0.0069917659,0.0433966853,0.1263176352,-0.2357328832,0.0387803651,-0.044315774,0.0221657343,0.1487453282,-0.0235082917,-0.0337567776,-0.178782478,-0.0351357646,-0.0806513205,0.0964080691,-0.1305557489,0.0108208023,-0.0755212232,-0.0216705836,-0.012051533,0.1136796623,-0.1361952275,-0.0622915663,-0.0264211353,0.0592524596,-0.138687253,-0.1299832165,-0.0225836281,0.0638979301,-0.0455320291,-0.002746609,-0.084393084,-0.0300963875,-0.1990007013,-0.1476339102,0.0138888257,-0.1072294265,0.0417310409,-0.2117257863,0.156714648,-0.1419162303,-0.0399213955,0.0210340843,-0.1127137095,-0.075210534,0.028779678,0.0770099908,0.0323269293,0.1029762924,0.0326315463,-0.0886784568,-0.114226222,0.0134609463,0.0227640942,0.0538368113,-0.0399190262,0.0467360616,-0.1001001373,0.0418116264,-0.1143429652,0.1779391468,-0.0114917215,-0.0034485576,-0.128636241,0.1156061962,0.1421306282,0.062298011,0.1484081149,0.0969119743,0.2155621201,-0.0841621831,-0.0510471351,-0.0184503272,-0.0617739744,-0.127747342,0.0596594624,0.0931692347,-0.0331996605,-0.0106110703,0.0206325278,-0.161425516,0.2457810938,-0.0014276665,-0.0628807992]],"hackathon_name":"HackSheffield 1.0","index":799,"project_description":"A fun Unity based quiz game using Leap Motion which automatically generates questions from given dataset.Firstly, we wanted to build a fun quiz game mainly targets kids right now which is nothing like traditional games which game developers write the questions and answers manually. We tried to build a game that extracts questions and answers from raw data.It uses some data set that contains information about countries, capitals, cities and population. Questions are gathered without knowing the structure of the data using some kind of Data Analysis. After getting the questions and answer, the game that we built in Unity fetches the questions from web server in AWS and users can answer them by just hand gestures received by Leap Motion.We used AWS to store data and the web service that gives the questions. Unity 3D 5.3 for building the game and Leap Motion of course. PHP and MySQL for implementing a web server that outputs in json.We tried to build it in Windows first, after 6 hours of coding for the game in Unity it completely failed. So we started from scratch with Mac. After spending couple hours of more efficient coding, Unity in Mac froze and we lost all our design except C# codes. We spend couple hours just to find an appropriate data set.Although we didn't have any handful experience in Unity 3D or C#, in less than 24 hours we built a functional game with some complex features as getting data from a web server asynchroniously and Leap Motion which we also tried for the first time here.We definitely learned Unity 3D with C# development. Some web services and data analysis.To sum up, the fact that we mainly focused on auto generated questions is because we will not need update questions occasionally, instead we will update question generator algorithms, so we can target all kind of people rather than just kids by customizing question types.HackSheffield 1.0Worked on backend and data analysis.Mainly worked on visualisation part of the game.Hikmat Hajiyev\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 20, 2016 07:59 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Motion Quiz","project_tags":["unity","leap-motion","c#","php","amazon-web-services","mysql","json"],"project_url":"https:\/\/devpost.com\/software\/motion-quiz","keywords":"questions,data,game,unity,web,motion,hours,leap,server,built,tried,build,update,answers,couple,learned,getting,first,kind,coding"},{"level_0":800,"hack_vector":[[0.1429627985,-0.1028683409,-0.0292496197,0.0356582254,-0.0172961093,0.118746981,0.1950240731,-0.0205375943,-0.024151599,-0.0097416295,0.0150634795,-0.0745690838,0.1479940265,-0.0734954253,0.0658561215,0.0086464761,0.19384633,-0.0256276876,0.0442922786,0.1304523051,-0.2440555096,0.0246162731,-0.0468083248,-0.0011226186,0.1189903319,-0.0308086202,-0.0320237279,-0.159642309,-0.0226865038,-0.0946717337,0.0635992512,-0.1064500064,0.028325716,-0.0793969706,-0.0191045944,-0.0179050136,0.1126131266,-0.1455482095,-0.0551920272,-0.012985439,0.0502064712,-0.114699617,-0.1474508941,-0.0247317385,0.0699916184,-0.0576527789,0.0124752978,-0.0892069936,-0.0069699078,-0.2126731426,-0.1524003148,0.018991949,-0.1143798158,0.0185375419,-0.2140583694,0.1655811518,-0.1364647597,-0.0270038396,0.0339926928,-0.1134416312,-0.0683570951,0.0279596988,0.0794233158,0.0545972288,0.1134957299,0.0220997259,-0.0940762311,-0.1245364249,0.0249572918,0.0184367094,0.0649401248,-0.0416796692,0.0066096685,-0.1127113551,0.0369115993,-0.1143058762,0.1820884943,-0.001387561,-0.0012539496,-0.1390705109,0.112598218,0.1584583074,0.0541078299,0.155567959,0.1084879711,0.209497571,-0.0867984444,-0.0487364158,-0.0210758392,-0.0735213012,-0.1473459303,0.0574273951,0.1129212156,-0.0326790549,-0.0118038515,0.0081790788,-0.1665600687,0.233296752,0.0136809871,-0.0695166066]],"hackathon_name":"HackSheffield 1.0","index":800,"project_description":"Web platform for classification and bookmarking of online readingAs there was no theme we came up with plenty of ideas, but in the end we decided to leave the fancy hardware aside and try to do something that could be useful for a potential user.  Everyone is using a bookmarks system (usually the browser integrated one), but most of the time the old links (even important ones) are forgotten and they get burried in the massive list of bookmarks.Our web platform takes an URL input from the user and it automatically categorizes, by analysing the english words and it assigns them to different topics (such as Art, Business, Home, Techology) using public classifiers. Also, it displays the most visited websites and a trend of the website categories which are most visited. A system such as this will be really useful for tracking the online browsing and make efficient use of online resources.We used php for back-end and html and css for the front-end. For the classification algorithm we used uclassify and heroku for deployment.We firstly decided to use Python instead of PHP, but unfortunately we had to change our minds and that made us run out of time. Also, as the sun rised, the long time with no sleep had a word in out focusing ability, but coffee and short naps solved the problem.-Have a running platform for the demo\n-Managed to work together even if each of us had a different background in programmingLoads of stuff: how to use new libraries, how to divide tasks to finish quicker and even how useful Linux can be.Hopefully implement all the detailed ideas we came up with, even though the hackathon is finished.HackSheffield 1.0Bogdana Avadanei\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 20, 2016 07:46 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hackmarks","project_tags":["php","html","css","machine-learning","uclassify","laravel"],"project_url":"https:\/\/devpost.com\/software\/hackmarks","keywords":"even,use,time,end,useful,us,online,bookmarks,php,platform,decided,system,came,used,user,using,ideas,visited,also,different"},{"level_0":801,"hack_vector":[[0.157772854,-0.1204909086,-0.0133657735,0.0592029132,-0.0365125239,0.1400096565,0.1869761795,-0.0310504772,-0.015160271,-0.023582153,0.0145246377,-0.0448850505,0.1524261683,-0.0733216479,0.0602427125,0.0188718848,0.2184096426,0.0128361201,0.0534358099,0.1165838316,-0.2338228822,0.0123369871,-0.0610746443,-0.0223258995,0.1226283088,-0.0290360302,-0.0425263532,-0.1748837978,-0.0121718086,-0.0912425667,0.0408905186,-0.1087442264,0.0267105121,-0.075358279,-0.0189429373,-0.0016522423,0.1199027002,-0.145051226,-0.0640354455,0.0156342015,0.0457659066,-0.1171653271,-0.1482453197,-0.0182249844,0.0337021761,-0.0701412633,0.0311274808,-0.0693717673,-0.0247807037,-0.2093301862,-0.1316275597,0.0204996169,-0.1168946922,-0.0161287077,-0.1768867373,0.1692776382,-0.1257260293,-0.0068953368,0.0268717576,-0.0724374354,-0.0600175858,0.0317333117,0.0720354468,0.069084689,0.1171885654,0.0129555715,-0.1133715138,-0.146587953,0.0075238189,0.0063633434,0.0646640509,-0.0427397154,0.0140945297,-0.1314453185,0.0079586804,-0.1057693362,0.2019935697,0.0065773847,0.0274180919,-0.1456211358,0.1221652254,0.1691995114,0.0443906821,0.1414663196,0.1210068166,0.2065317482,-0.1007643715,-0.0200362001,-0.0200574398,-0.0796457827,-0.1279126704,0.0782162994,0.0829569995,-0.0265627112,0.0167083573,-0.0278321281,-0.1445758939,0.2397728413,0.0299096815,-0.0740338266]],"hackathon_name":"HackSheffield 1.0","index":801,"project_description":"See usages of words or phrases plotted against time, over 1.7 Billion reddit comments!We had access to 1.7 Billion reddit comments, so we thought this could be interesting.Shows the usage of a search term over 8 years of reddit comments.Simple rails app, then lots of javascript to draw the graphs and do the elastic search queries. Elastic searchHosting the data, ended up having to have it locally.How long Hugo managed to stay awake.AWS Elastic Search, some learnt more Javascript.It will sit on GitHub untouched and alone. - Our amazon money hasn't come through, we won't spend our own \u00a3\u00a3\u00a3\u00a3\u00a3 to host the terrabyte of data. We could implement new graphs and other fancy things quite easily if we did keep working on it.HackSheffield 1.0Harry Howarth\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 20, 2016 07:44 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"RedditTrends","project_tags":["ruby-on-rails","javascript"],"project_url":"https:\/\/devpost.com\/software\/reddittrends","keywords":"search,elastic,reddit,graphs,javascript,could,comments,data,easily,fancy,ended,host,hosting,hugo,implement,inspiration,github,years,draw,come"},{"level_0":802,"hack_vector":[[0.1486157626,-0.1230876893,-0.0227669496,0.0525269322,-0.0291099232,0.1453667581,0.1894779801,-0.0430539586,-0.0200072508,-0.0284536108,0.0026463948,-0.0512294248,0.136641711,-0.0699242353,0.0492708422,0.0228462089,0.2262281477,0.0045636604,0.0558823943,0.1276231259,-0.2427635044,0.0314862803,-0.0358614512,-0.0271408111,0.1253309101,-0.0232060123,-0.0354915969,-0.1796376854,-0.02382336,-0.0958261937,0.045508597,-0.1264514029,0.0494275764,-0.0709968731,-0.0159245916,-0.0365741365,0.122948654,-0.1404310465,-0.0561405346,0.0147796907,0.0530223027,-0.1430414766,-0.1533386707,-0.05147532,0.0344521888,-0.0609351434,0.0150214927,-0.0537016019,-0.027112348,-0.2070017755,-0.1233712435,0.011488541,-0.1093071774,-0.0156936441,-0.189172402,0.157561332,-0.1340747625,-0.0104388986,0.0300017446,-0.0703071579,-0.063946031,0.0111060683,0.0612890497,0.0462148786,0.1041219458,0.0158614218,-0.1144415811,-0.1454368979,0.0292130075,0.027615143,0.0737734288,-0.0646754205,0.0185067039,-0.1268147826,0.0092443498,-0.1192793474,0.1754229963,0.002959342,0.0324997567,-0.1335994452,0.1122038737,0.1560494006,0.0474834293,0.1812329888,0.1194170713,0.1883738041,-0.1132514253,-0.0164473839,-0.0141380494,-0.0825695843,-0.1227842048,0.0689007789,0.0887547061,-0.0442475565,0.0104461936,-0.023216635,-0.1446477473,0.2279716283,0.0345272534,-0.073826015]],"hackathon_name":"HackSheffield 1.0","index":802,"project_description":"Device which tells you when to enjoy your drinkAlmost ready!Drink faster!Drink's great!Drink faster!Everyone has experienced the frustration of the coffee cooling down or the beer becoming too warm! This simple yet elegant device addresses this issue.This device is designed to show the user the time he has to drink his drink before it gains uncomfortable temperature. When you place your beverage on the device, it calibrates the thermometer to ensure that the measured temperature is correct. Then it uses several measurements of temperature and Newton's law of cooling to calculate the rate of cooling and the time until your drink becomes too cold or warm to drink.We used Intel Edison dev board and Arduino IDE to run analyze data from temperature sensor and present it on the LCD display.Solving the differential equation for the Newton's law of cooling on the Edison dev board.We gained experience in developing hardware hacks, working with Edison dev board, coding in C++ for Arduino.HackSheffield 1.0Nikita Samarin\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 20, 2016 07:41 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"drink() while(perfect);","project_tags":["intel-edison","arduino","c++"],"project_url":"https:\/\/devpost.com\/software\/drink-while-perfect","keywords":"drink,cooling,temperature,edison,dev,device,board,law,newton,time,arduino,warm,data,elegant,display,differential,ensure,developing,equation,designed"},{"level_0":803,"hack_vector":[[0.118706651,-0.0694066286,-0.0332241394,0.0230289195,-0.0146687012,0.1225735694,0.2143424451,-0.0186849367,-0.0338492766,-0.002956745,0.0128877526,-0.0911717936,0.135378018,-0.0726243407,0.0701637864,0.0001282098,0.2114110291,-0.0126532977,0.042757798,0.1285001785,-0.2361506075,0.05224723,-0.0353625603,-0.0133077651,0.0842164755,-0.0222658459,-0.0338013433,-0.1736108512,-0.0238493681,-0.0892754644,0.0751970336,-0.1281494945,0.0248384774,-0.0830867961,-0.0106229875,-0.0166696347,0.1170871928,-0.1339213997,-0.0545069128,-0.0238394476,0.0357991867,-0.1464758217,-0.1460548341,-0.0346645303,0.0890528709,-0.0507424027,0.0025427251,-0.0878933743,-0.0124636861,-0.2018187791,-0.1471699029,0.0083078751,-0.0968125537,0.0193482526,-0.216716215,0.1444283128,-0.1387625784,-0.0410405025,0.0479000024,-0.1284410506,-0.076406084,0.0223737657,0.0913595706,0.0441975966,0.1052794904,0.0208036806,-0.0694412813,-0.1221459433,0.0507163778,0.0290559679,0.0671034828,-0.0577225126,0.0288965628,-0.1069732159,0.0399358645,-0.1533953696,0.1513689309,-0.0001809918,0.0062711039,-0.1262490153,0.1237145513,0.148262009,0.0761992112,0.1730155945,0.0859756172,0.1903922558,-0.096817717,-0.0578853227,-0.0229123682,-0.0857854784,-0.1612712443,0.0359164365,0.1032517254,-0.0539183468,-0.0202707052,0.0431587622,-0.1739084125,0.2200187892,-0.0004880582,-0.0782956257]],"hackathon_name":"HackSheffield 1.0","index":803,"project_description":"Using an external web service, provide a QR code that can link a phone's (suzz) with a chrome browser extension.Two devices, two different user experiences, too much hassleAt the beginning, our inspiration came from a simple issue: when using a desktop or laptop computer to access a website, all of the functionality of our smartphones and\/or tablets wasn't being used. Mobile devices have become ubiquitous as easily accessible and multi-functional portable computers. These devices, having access to a wide array of sensors (such as cameras, gyroscopes, gps, etc.) are capable of quickly providing various types of data to websites.However, when using our desktops to browse the internet, we are incapable of accessing all of our phone's functionality! We cannot utilize the extra screen space of our phone, nor can we provide data from our phone's sensors to the website. Hence, we came up with the idea for a service that could link the functionality of mobile devices with traditional full-size computers. (And we named it AquaPoodle because why not?)AquaPoodle Transfer (hence referred to as APT) is our proof of concept for a web service that can take data from a mobile device and provide it to a desktop or laptop computer in a simple and accessible manner. To allow a user to send data from one device to another, there are three primary steps:The actual implementation of APT is fairly involved. Here we will break down the primary steps into the actual code involved.Establishing a linkage:\nEnsuring that the user's mobile device and computer are linked requires a lengthy process of developing a unique session ID and then passing it from the computer to the mobile device with a QR code. To achieve, this, the unique ID must traverse the hierarchy of the code, from the web service down to the mobile device.To begin the external web service generates a unique ID hashed from the mac address of the computer, the current time, and an internal device counter. The user will utilize a chrome extension that will then receive the unique ID. From there, the external web interface develops a QR code based on the URL that the mobile device will navigate to, and the unique ID. The QR code is then provided to the chrome extension. The user then scans this QR code with their mobile device's camera. At this point, the chrome extension and the mobile device both have the same unique ID.Prompting the mobile device:\nPrompting the mobile device to provide some data, in this case a photo, is achieved by navigating to a URL that contains javascript that provides the appropriate prompt. This URL is contained in the QR code referred to earlier. Here, assuming an android device is being used, the user may choose to provide a photo in the mobile device's storage, or to take a new photo. In either case, the photo is sent via a post to the server, which then caches it.Sending data to the computer:\nFinally, the server can take the cached photo data (here encoded in base 64) and send it through a post to the user's chrome extension. The chrome extension then decodes the photo data and displays it in the toolbar to then be used where appropriate.SO MANY PROBLEMS PLEZ HALPWe ran into an inane number of issues over the course of our 24 hours of coding, which are compiled here:Although we learned tons about javascript and server hosting, our most important development was how to work as a team. Splitting the workload efficiently, organizing meeting times and working together with synergy was highly rewarding and essential to our success.One early example we envisioned was to display a user's shopping cart for a given webpage on their phone, and then allow them to select items from the phone shopping cart to navigate to the appropriate webpage on their laptop or desktop. Given the chance to extend APT, we would like to work on extending the functionality to be more generalized, and at a further point in development, make an API of this code to provide more possibilities with sharing data between mobile and full webpages, so that the first idea could be possible.HackSheffield 1.0Nicholas Goldstein\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 20, 2016 07:34 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"APT (AquaPoodle Transfer)","project_tags":["javascript","flask","apache","lamp","ubuntu","python","json","jquery"],"project_url":"https:\/\/devpost.com\/software\/apt-aquapoodle-transfer","keywords":"mobile,device,code,data,qr,server,extension,computer,unique,user,chrome,provide,id,functionality,photo,phone,session,web,make,external"},{"level_0":804,"hack_vector":[[0.14073883,-0.0898297951,-0.02152179,0.0409240611,-0.0069846688,0.1158243269,0.2063689232,-0.0239985995,-0.0505386777,0.0008079026,0.0205725953,-0.079372555,0.1513229012,-0.0681316257,0.0744822174,-0.0204619467,0.1863216311,-0.0301227104,0.048092816,0.140451327,-0.2377329618,0.0515308566,-0.0411373042,0.0039369753,0.1252065748,-0.0302101057,-0.029942153,-0.1753723472,-0.036496561,-0.0783801079,0.075919807,-0.1170114353,0.0278950017,-0.0824877173,-0.0166048035,-0.0234665051,0.1160351261,-0.1350906938,-0.0654598475,-0.0229637399,0.0534330867,-0.1398478001,-0.1455522478,-0.0249092933,0.0682323501,-0.037046887,-0.001206688,-0.1040387079,-0.0052960711,-0.2015077323,-0.1465471685,0.0154885966,-0.1154919043,0.0447375774,-0.2141358405,0.1609989256,-0.1491802931,-0.0207263306,0.034949705,-0.1300491393,-0.0747186616,0.030281553,0.0801748037,0.0441013947,0.1077427268,0.0279133562,-0.0936003178,-0.1200543717,0.0247233324,0.024512874,0.0648147985,-0.0416255482,0.0244387519,-0.1134400889,0.0475633666,-0.1253318489,0.1708098203,-0.0178813692,0.0052415817,-0.1158317626,0.1177097261,0.1361314356,0.0789072812,0.1446723938,0.1060667932,0.1969892383,-0.0877688974,-0.0624573864,-0.0181457587,-0.0681453124,-0.1527070254,0.0497520864,0.1100412533,-0.0527246334,-0.013313489,0.0131657599,-0.1671221852,0.2242874205,0.0043121586,-0.0561026111]],"hackathon_name":"HackSheffield 1.0","index":804,"project_description":"Robot controlled by Myo wristband with a fpv.Bad Phototaking skillsWe were inspired by the search and rescue competition to design a robotic vehicle. Once we started the hackathon we were introduced to the myo armband, which we felt would make a cool controller for our robot. Additionally first person view (FPV) would be an important feature as the robot might be out of the operators sight. The Oculus was available which we thought could be implemented into the project to create a VR driving experience. The user would have a first person VR experience of the robot while controlling it with \"driving gestures\" using the Myo armband.The myo armband can classify several different hand gestures, which are fed into an arduino mega. The recognised  gestures are then converted into directions that the robot should follow. These are passed onto the motor controller which drives the corresponding motors. Finally a camera mounted on the front of the vehicle provides a live FPV which is sent over skype to a control computer.We started by building the chassis of the robot and connecting the wheels. Next we programmed the motor controller to power either the left or right side motors. After this we calibrated the myo armband and developed arduino code that extracted the different gestures using Myorduino available on the Myo Market. The camera and live feed were set up via Skype. Finally all the parts were integrated on the chassis.Firstly we hoped to use an oculus rift to provide the FPV however, none of our computers met the minimum system requirements to run the oculus rift.Additionally we were hoping to use a wifi module to communicate with the arduino over wifi. There were several problems with this approach. Firstly trying to update the firmware on the module proved far too problematic. Secondly we could not connect to the local wifi with the wifi module as we needed special administration permission.We were lacking in hardware and had to use leftover bolts and wires from shop floors.Lack of experience working with the new hardware and most programming languages meant a limited amount of features of the myo could be communicated to the Arduino due to inability to edit the source code of the Myoduino.Integrating the myo armband to control the movement of the vehicle while having no knowledge of the myo prior to the project.. \nGetting the microcontrollers to communicate with each other and making use of the limited hardware that was availableBasics of developing for the myo.\nUnderstanding of the myoduino (interaction between Arduino and myo)\nHow gesture extraction works.\nOpenCV is problematic on windows\noculus rift has high system requirements\nHow to get communications running between two micro controllersTo make the robot fully wireless and controllable via odroid.\nAdd semi autonomy in the form of an ultrasonic sensor so the robot doesn't crash.\nVR FPV once we can control the robot wirelessly from a desktop computer\nIncrease the complexity of gestures that the robot recognizes and removal of the delay between input and output to add advanced control.HackSheffield 1.0Learned the basics of myo. Worked with integration of the myo, Arduino and myoduino. Attempted to increase functionality of myoduino but unfortunately was not able to due to inexpeince in coding and no knowledge of myo prior to project. Also attemped to work with Oculus but failed due to hardware specification.I developed the initial code to extract the different gestures from the myo armband to the arduino. I learnt a lot about how the myo armband classifies different gestures based on which muscles are being activated in the fore arm.Attempted to develop the code for the camera\/ Oculus to find that the Oculus would not work with the hardware and that OpenCV doesn't work well on windows (am now very good at adding libraries to various compilers), so found a method to broadcast the camera feed. Also did some of the hardware.Hardware and motor control code. (C++)Daniel Lim\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 20, 2016 05:21 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Myown robot","project_tags":["arduino","myo","skype"],"project_url":"https:\/\/devpost.com\/software\/myown-robot","keywords":null},{"level_0":805,"hack_vector":[[0.1545864344,-0.1162914112,-0.0141758537,0.0540428609,-0.021797711,0.1398899555,0.2008752823,-0.039275378,-0.0349526256,0.006896588,0.01020265,-0.0579356365,0.1478092819,-0.0712466389,0.0665657222,0.0054940684,0.20901227,-0.0015002412,0.0541237853,0.1162325889,-0.2396430075,0.0422055572,-0.0549628884,-0.0111955078,0.1360643357,-0.0266362708,-0.0406375751,-0.1862596869,-0.0190421194,-0.0810665786,0.0720821396,-0.131346792,0.0299382284,-0.0840266421,-0.0344002768,-0.014534615,0.1186876893,-0.1406071037,-0.0560496971,0.0068322527,0.0433148146,-0.1490127295,-0.1491936892,-0.0278045349,0.0418908037,-0.0451958142,0.0125018666,-0.0773095861,-0.0231396053,-0.2022200078,-0.1252273023,0.018224733,-0.1179157272,0.0210993513,-0.1860882044,0.1614517868,-0.1468373239,0.0045435387,0.0131519875,-0.0792451352,-0.0616283454,0.0274365805,0.073560223,0.0618203543,0.1141968518,0.0074048783,-0.1096248552,-0.1313077807,0.0199549701,0.0151323769,0.0697005317,-0.0479197353,0.027709743,-0.1270850152,0.0240891706,-0.1168860719,0.1909330934,0.0062896069,0.0304692332,-0.1353746802,0.1351090819,0.1495578736,0.067253083,0.1456655711,0.118406415,0.201805979,-0.1047047898,-0.0284905601,-0.0039956025,-0.0807194114,-0.1296134442,0.0641400069,0.0935675576,-0.0388764404,0.0153353484,-0.0088953767,-0.1358424127,0.2119279951,0.0264781434,-0.0648167953]],"hackathon_name":"HackSheffield 1.0","index":805,"project_description":"Analytics on UK car crash dataScatter plot of all the accidentsHeatmap overlay over google mapsHALF A GIG OF DATA? What couldn't tickle your curiosity more? When we initially saw this data set provided by the government, we dived straight into it, excited by the results we could produce.Provides two visualisations for the user:\n1: Overlays a google map with a heatmap representing accident severity across the UK\n2: Plots a scatter plot of latitude against longitude for every accidentPython and the Bokeh visualisation libraryWe initially started working on this with SQLite and d3.js however we ran into problems having 1.6 million javascript objects in the browser. Thus, halfway through, we switched to a much simpler implementation in python.Getting working visualisations after hours of grafting and experimentation.Parts of the d3.js library as well as the Bokeh library and pythonWidgets to filter data on the mapHackSheffield 1.0Qumarth Jash\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 20, 2016 06:47 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"CrashMap","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/crashmap","keywords":"data,library,python,working,ran,bokeh,initially,js,map,accident,visualisations,filter,inspiration,visualisation,implementation,however,hours,heatmap,halfway,half"},{"level_0":806,"hack_vector":[[0.147352919,-0.0969968364,-0.0152774788,0.0363288671,-0.0050477087,0.1377135813,0.2238512188,-0.040967688,-0.0408336669,0.0051233834,0.0071546263,-0.0775165707,0.141556561,-0.0732823089,0.0442345627,0.0025309508,0.2180491984,-0.010932073,0.0486206338,0.1193542555,-0.2353257537,0.0642418116,-0.0442998149,-0.0016519862,0.1270928681,-0.027638169,-0.0414781943,-0.1861925721,-0.0301189087,-0.0885284245,0.0858573169,-0.1366459578,0.0405479446,-0.0826710165,-0.0214548092,-0.0276918653,0.1240379214,-0.1326429695,-0.0382528044,-0.0244627129,0.0519730188,-0.1646977216,-0.1548048705,-0.0412481278,0.0698110238,-0.0369902812,0.0009643695,-0.0794004425,-0.02509447,-0.1926771551,-0.1217610762,0.022208482,-0.1055074632,0.0370968357,-0.2114553303,0.1438322663,-0.1601145416,-0.0330025703,0.0309066698,-0.104479894,-0.0703630969,0.0166949444,0.0895000622,0.0245703533,0.1052630395,0.0155125065,-0.0921209604,-0.1222508773,0.0424716547,0.0474677011,0.0768651441,-0.0587299541,0.0316371322,-0.1118463278,0.0287327189,-0.1325161755,0.1529058963,0.0079709589,0.0250776149,-0.1204582304,0.1185479537,0.1370230317,0.0636974871,0.1649302691,0.1031760126,0.1926960945,-0.1074296087,-0.0489350259,-0.012623691,-0.0857747421,-0.1370054781,0.0512101352,0.0841408744,-0.0385796614,-0.0195151586,0.0190722886,-0.1536619961,0.2019695938,0.0168373324,-0.0633865595]],"hackathon_name":"HackSheffield 1.0","index":806,"project_description":"Top trumps with a twist - cards are generated using data of Wikipedia pages!As Wikipedia is one of the largest and most popular websites in the world, and with an intent of exploring the vast quantity of data it has to offer in mind, we figured that it would be an excellent source to base our implementation of an original spin on the classic Top Trumps game on.Effectively a Top Trumps game where the stats of the card are based on a Wikipedia's page data such as number of images and links on the page.The server backend is powered by Bottle, a Python micro web-framework which is lightweight and quick to get a functioning server up and running. The frontend is predominantly built on the HTML5 canvas together with JavaScript.Generating an appropriate image for the cards since the name and link of the image were deeply nested in the JSON objectThe final end productCoding skills, especially the trouble of working with strings in Python 2; the set up process of heroku service and subsequently deploying the app there.As the current working game is generating cards based on a pre-defined list of article titles, the next goal to work towards would be to populate such a list randomly, which was always our intention if we had more time. Further, the game could potentially be made into a multi-player game or a single player game where the player competes against an AI computer player.HackSheffield 1.0I worked on the backend of the game which provides an API for populating the data in each Wiki Trumps card, as well as providing a hosting environment (server) for the game to run on.I worked on the game client. It was made fully in javascript using canvas.Darren Vong\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 20, 2016 06:26 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Wiki Trumps","project_tags":["python","jquery","javascript","html5","css3"],"project_url":"https:\/\/devpost.com\/software\/wiki-trumps","keywords":"game,player,trumps,would,based,python,data,server,page,generating,cards,built,image,next,top,wikipedia,working,list,implementation,javascript"},{"level_0":807,"hack_vector":[[0.1459122747,-0.1361036599,-0.0177907664,0.0535461642,-0.0365842655,0.1308462024,0.1886721998,-0.0159230493,-0.0343143083,-0.0023187136,-0.0002164783,-0.0388164669,0.1387505829,-0.0645909831,0.0560237356,0.0248384401,0.2251806408,0.0249197744,0.0434209369,0.1019788608,-0.2353045642,0.0341810174,-0.0395555794,-0.0319863595,0.1371890754,-0.0203060694,-0.0508158691,-0.1902354211,0.003446284,-0.0888913348,0.0562846698,-0.1311090142,0.031549599,-0.0771447867,-0.0250620823,-0.008500943,0.1227594763,-0.1457228512,-0.0494996347,0.0250343401,0.0249331649,-0.1649569869,-0.1682507098,-0.0469258353,0.0200072601,-0.059799403,0.0168688055,-0.0545166694,-0.0173267778,-0.1958232224,-0.1086806655,0.0158155467,-0.1101749092,-0.0228470508,-0.1762055904,0.1684361398,-0.1400054693,0.0116924578,0.0271178968,-0.0530629978,-0.0656292364,0.0315365195,0.0609384067,0.0741737783,0.1072709262,0.0024663417,-0.1164233387,-0.1440365016,0.0306713376,0.0116533758,0.0797493011,-0.0580570064,0.0227249693,-0.1213846356,0.0077483444,-0.1318292171,0.1711615622,0.0121455938,0.0572654828,-0.1393887252,0.1334343553,0.164150551,0.055571638,0.1660975963,0.1296368092,0.1921570748,-0.1282536834,-0.000795047,-0.0058481428,-0.0937585235,-0.1120638698,0.0736342072,0.0813339651,-0.0384152979,0.0324180424,-0.0257773772,-0.1429312825,0.1996178776,0.0400706828,-0.0710457787]],"hackathon_name":"HackSheffield 1.0","index":807,"project_description":"Understanding crimeWe began by looking at datasets available online, including sets from fregis, and https:\/\/data.gov.uk\/data\/search , where we stumbled upon the existence of the data.police.uk api, which provides geographical crime data for the whole uk for the past 5 years.\nAfter some brainstorming we decided that providing at a glance crime stats to travels, prospective home owners, etc. could be quite a useful project.It allows you to visualise the the total crime levels per category, and also time series data per category, in a mile radius around a point, for the past year.HackSheffield 1.0Euan Rochester\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 20, 2016 05:54 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Neighbourhood crime app","project_tags":["npm","react"],"project_url":"https:\/\/devpost.com\/software\/neighbourhood-crime-app","keywords":"data,crime,uk,react,api,webpack,police,babel,http,one,comparisons,past,per,category,browserify,possible,visualisation,probably,learned,module"},{"level_0":808,"hack_vector":[[0.1468417048,-0.1548693329,0.0138943987,0.0960770696,-0.0547816306,0.1569049656,0.1675502807,-0.054631032,-0.0382136442,-0.0194460526,-0.0110094808,0.0548223555,0.1202273443,-0.0796088427,-0.0097595407,0.09480571,0.2618797123,0.0413669012,0.0526600629,0.0688250214,-0.1749355048,0.0057016974,-0.0517797098,-0.0684709325,0.1785501391,-0.0126769701,-0.0850277916,-0.1732448488,0.0484584495,-0.0691429451,0.0136993267,-0.0945413411,0.0841970146,-0.0434304886,-0.0415838286,0.0219820682,0.1489788145,-0.0956003889,0.0154846655,0.1072244421,0.0546299033,-0.1547845602,-0.1859555095,-0.0318143405,-0.0655530617,-0.0410788096,0.0483072251,0.0074482458,-0.0117424726,-0.1657433808,0.0031005191,0.0355483256,-0.1051384136,-0.0651867241,-0.075381048,0.1339626759,-0.1594401151,0.0876383334,-0.020499168,0.0772746727,-0.0040350948,0.0433690883,0.045622576,0.0828695148,0.1429199874,-0.0640443414,-0.1426454037,-0.1795403063,0.0132747572,0.0016882225,0.0675882101,-0.0289382506,-0.0169449616,-0.1503034234,-0.0889710262,-0.0577976815,0.1883819997,0.0338876545,0.1161322072,-0.1370524317,0.1109994054,0.1478928179,0.0069336179,0.129204616,0.16012761,0.1396318525,-0.1568214297,0.0928394869,0.0145769464,-0.1290204227,-0.0621668957,0.1146236211,0.0098956432,0.036049854,0.1091888249,-0.1058985293,-0.0417595431,0.1209673658,0.126569584,-0.0321166851]],"hackathon_name":"HackSheffield 1.0","index":808,"project_description":"Matt fights off a battlefield of haters generated via tweetsMattHackSheffield 1.0Pandelis Zembashis\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 20, 2016 04:46 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Matt Vs The Haters","project_tags":["node.js","phaser.js","socket.io","twitter"],"project_url":"https:\/\/devpost.com\/software\/matt-vs-the-haters","keywords":"matt,vs,ran,proud,next,learned,inspiration,haters,challenges,built,accomplishments"},{"level_0":809,"hack_vector":[[0.1463958472,-0.0924643427,-0.0200866628,0.062467888,-0.0342462808,0.166840598,0.2234405577,-0.0503886901,-0.0240938589,-0.0154660186,0.0059754136,-0.0238636751,0.1257930696,-0.0701538995,0.0338576548,0.0352963731,0.2425464094,0.0120376013,0.0345232226,0.1023234576,-0.2124988288,0.0263417736,-0.0524067171,-0.0278054494,0.1390395612,-0.0077252276,-0.0495221764,-0.1766006649,-0.0142040355,-0.0806557983,0.0554117598,-0.1168843359,0.0545998812,-0.0744872391,-0.0296096522,0.0140843103,0.1436356306,-0.1141461805,-0.0361054204,0.0493920892,0.0579744205,-0.1600742191,-0.1635809839,-0.0425775051,0.0262042321,-0.0573029965,0.016530985,-0.051633954,-0.0307730567,-0.2095759362,-0.0989002809,0.0278453603,-0.1093542799,-0.0178659055,-0.1640181094,0.148922354,-0.1680994779,0.007951729,0.0128409117,-0.0501683168,-0.0546615645,0.0334683768,0.0774894282,0.0428975634,0.1421101093,-0.0238808617,-0.1235802248,-0.1433435082,0.0351591036,0.0224171225,0.0527743846,-0.0385087803,0.0080141239,-0.1348617077,-0.0133305695,-0.1034007072,0.1909656823,0.0130649693,0.0404840484,-0.1489775628,0.1215142608,0.159992516,0.0503062345,0.1580098867,0.1206704453,0.1934038401,-0.1188296378,0.0124309137,0.00220718,-0.1016873866,-0.1338989735,0.0789088756,0.0590419956,-0.0054361634,0.0281598158,-0.0085982662,-0.1209783852,0.2180843502,0.0479659662,-0.0481661409]],"hackathon_name":"BrumHack 4.0","index":809,"project_description":"You control a phone with your phone with google cardboard.We decided VR would be cool, so we decided google cardboard would be cool.\nBuilt a google cardboard renderer from scratch, and connect to another phone via a node server.One phone is a controller, and the other is the cardboard display.BrumHack 4.0Dan Jones\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:39 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"drunk drive simulator","project_tags":["node.js","javascript","java"],"project_url":"https:\/\/devpost.com\/software\/drunk-drive-simulator","keywords":"cardboard,would,phone,cool,decided,google,renderer,one,node,vr,display,scratch,server,controller,connect,via,built,another"},{"level_0":810,"hack_vector":[[0.1441788226,-0.1576681286,0.0151965683,0.1012191325,-0.0571184978,0.155944109,0.1591677219,-0.0504283495,-0.0319671407,-0.0352825671,-0.0109177334,0.0598264337,0.1249940395,-0.0803595856,-0.0117671303,0.0909640789,0.2583167851,0.0454766713,0.0552266277,0.0717570931,-0.1761793494,-0.0095287971,-0.0518502221,-0.0714569315,0.179518342,-0.0177617501,-0.0807531551,-0.1755826622,0.0412877947,-0.0768220127,0.0064717098,-0.0835580677,0.0858497322,-0.0345774703,-0.0400465727,0.0263977628,0.1441236436,-0.0974747688,0.0164824333,0.1104476228,0.0596558005,-0.1350035518,-0.1853512973,-0.0281657595,-0.0757683516,-0.0572395809,0.0528689846,0.0082525425,-0.0082687978,-0.1783742607,-0.0027618471,0.0414921194,-0.1027678624,-0.0738888383,-0.0750485957,0.1441844255,-0.1585942954,0.0857388303,-0.0231661201,0.0767569467,-0.0098738484,0.0450256094,0.0338665806,0.0815785378,0.1442362219,-0.0537133515,-0.1393898427,-0.1826647967,0.0032032221,-0.006417898,0.0579973646,-0.0268086884,-0.0239604302,-0.1453164071,-0.0814949721,-0.0366560519,0.1953077614,0.0318387561,0.1119863614,-0.1434458047,0.1021350324,0.1498875916,0.0030130909,0.1279093325,0.1657516658,0.1497636437,-0.1431524754,0.0908871815,0.0102356132,-0.116794847,-0.0610053055,0.1209296808,0.0096833166,0.0396440141,0.0923853591,-0.1192897558,-0.0513250418,0.1314385533,0.1253169328,-0.0393270887]],"hackathon_name":"BrumHack 4.0","index":810,"project_description":"Internet easter egg hunt.No time to explain....BrumHack 4.0Cameron Angus\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:43 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"EggHack","project_tags":["javascript","php","sql","jquery","html"],"project_url":"https:\/\/devpost.com\/software\/egghack","keywords":"time,explain"},{"level_0":811,"hack_vector":[[0.1540929079,-0.1106459871,-0.0269337222,0.0387414508,-0.0161167178,0.1379938424,0.202885583,-0.0389230289,-0.0072804429,-0.0245868471,0.0211625881,-0.0676402077,0.1362988353,-0.0682416856,0.0729341805,-0.0116512794,0.1988218129,-0.0122937663,0.0535985976,0.1222739592,-0.2436568737,0.0308554228,-0.0439895503,-0.0124658104,0.0935609192,-0.0322901793,-0.0161754359,-0.1705978066,-0.041176036,-0.0904447809,0.0652659908,-0.1143067405,0.0278029405,-0.0933855698,-0.0301504098,-0.0257538538,0.1096607149,-0.1453297138,-0.0741112456,-0.0107009206,0.045627702,-0.1122190133,-0.1356030703,-0.0343232974,0.0735601559,-0.0668086857,0.0200164299,-0.0830491632,-0.0366676264,-0.2161504477,-0.1599881649,0.0144292591,-0.1150229648,0.0031995815,-0.1972964704,0.1584740877,-0.1255409867,-0.0368429236,0.0357485674,-0.1053235829,-0.0782392323,0.0206680354,0.0793170854,0.0373702869,0.1020700708,0.0222427417,-0.1061547175,-0.1091934815,0.0143746622,0.0254185107,0.0597533397,-0.0463552363,0.0173170045,-0.1263000369,0.026579136,-0.1154259816,0.190295741,0.0073315827,-0.0011130676,-0.1464607865,0.1186148524,0.1591227204,0.0452095754,0.160294354,0.1022665277,0.2085105181,-0.0787045807,-0.0410008579,-0.0192457624,-0.0660962611,-0.1509875655,0.0599278025,0.1008563638,-0.0379728004,-0.0168870986,0.0010947807,-0.1527043134,0.231778264,0.0062882071,-0.0729875267]],"hackathon_name":"BrumHack 4.0","index":811,"project_description":"An API to talk to libraries (the book-lending kind).Library fines are sad. They cost money. Students don't like spending unnecessary money. This API allows students \/ people to avoid fines by writing a short (6 lines, excluding blank lines) script to automatically renew their library books. It's possible to do much more, like send a text \/ email with details of where to find a list of books in the library (dewey classifications), or how to cite a specific book correctly.It scrapes data from the various library catalogues and presents it in a nice way. It's designed to have a minimal barrier to entry, so anyone can use it, even if they have very little coding experience.Using Python and the requests module. https:\/\/regex101.com\/ was incredibly useful for testing the numerous regular expressions used, and the Chrome developer tools were helpful for working out how web browsers interacted with the online library catalogue.Perhaps unsurprisingly, the online catalogues aren't built to be friendly to screen scrapers. In some cases, they're really quite horrible.It works! While it's not complete in any sense of the term, it works well with the SirsiDynix Enterprise library catalogue. Support for WebPAC Pro is being implemented, and support for ExLibris Primo is being planned - this should mean that over 83% of BrumHack participants can use the API!We developed our skills in screen scraping, as well as our tenacity for when things don't go so easily. Scott learned Python! We also focused on usability and providing a \"nice\" interface of commands for users (who potentially aren't experienced coders).More implementations - ExLibris Primo is used by a large number of libraries, we hope to support it soon! Other catalogues which are also popular, such as Spydus \/ Selms and Capita Prism will be considered.BrumHack 4.0I developed the main module and the integration for SirsiDynix Enterprise. I also helped teach Scott Python and how to screen-scrape.I worked on an implementation for WebPac Pro! It didn't work 100% but I didn't even know python before this hack!!Benjamin Howe\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:56 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Library API","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/library-api","keywords":"library,support,catalogues,api,works,students,primo,catalogue,online,learned,built,money,books,use,screen,used,exlibris,fines,python,lines"},{"level_0":812,"hack_vector":[[0.1483437419,-0.1087087393,-0.0277191941,0.0537645295,-0.026218934,0.1510210484,0.2235694677,-0.0411782302,-0.0320298672,-0.0050880685,-0.0003845967,-0.0412904918,0.1274376065,-0.0788053349,0.0473899394,0.0262903683,0.2347639948,0.0059994501,0.0430982299,0.1136713251,-0.2253851742,0.0352896973,-0.0516032316,-0.0268545095,0.1425267756,-0.0087470924,-0.0452786684,-0.1847649068,-0.0062196995,-0.0767733455,0.056178499,-0.1372481585,0.0533894785,-0.0818024203,-0.0335236751,-0.0016521926,0.1341308057,-0.1256242245,-0.0336806998,0.0257953145,0.0467916578,-0.1567595303,-0.1673174948,-0.0331273377,0.0383394547,-0.046803318,0.0183944087,-0.0582420453,-0.0248714257,-0.2048294842,-0.1014311612,0.0162001494,-0.1074084714,-0.0027651871,-0.1597621888,0.1497664452,-0.1556491256,0.0162315704,0.0035541581,-0.0585685596,-0.0515154526,0.0310730431,0.0828517154,0.0500533916,0.1291379184,-0.0149436593,-0.1150461137,-0.1454782784,0.0426104814,0.0270149149,0.0701406673,-0.045825202,0.0140545797,-0.1373757571,-0.0000997207,-0.1168644726,0.1796178371,0.0179145988,0.0472586602,-0.1390131265,0.1303268224,0.1570212245,0.0704732835,0.1681758016,0.1171821207,0.182834968,-0.1151917502,0.0010542244,-0.0002120489,-0.0988619253,-0.1356197149,0.0703607649,0.0865705013,-0.0213387758,0.0324980468,-0.0219753105,-0.1240042672,0.2009020597,0.0399644002,-0.0575347953]],"hackathon_name":"BrumHack 4.0","index":812,"project_description":"Imagine a world where trello is actually kept up-to-date via a sequence of actions committed by GitMain script interfaceTrello boardGitK proof of project flowThen our command line script to integrate trello (with git) is the script for YOU!!!The script links a given trello board with a github repository, when using the script a user can perform git actions and the trello board will be updated accordingly.We built it using the trello api and python invoked shell commandsHaving the patience to deal with out of date API documentationLearning new python skillsBrumHack 4.0Brad Rowe\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:45 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Trello Version Control (with Git integration)","project_tags":["python","json","trello","git"],"project_url":"https:\/\/devpost.com\/software\/trello-version-control-with-git-integration","keywords":"trello,board,branch,script,using,git,card,new,updated,control,task,moved,progress,project,increased,integration,python,review,master,date"},{"level_0":813,"hack_vector":[[0.1504036933,-0.1039451659,-0.0198416915,0.0474429429,-0.0080699772,0.1383149177,0.2037434131,-0.0384107344,-0.0383903347,-0.0099442219,0.0091540636,-0.0607163124,0.137211442,-0.0548492074,0.0502409451,0.0010379263,0.2069123536,-0.0146702016,0.0524783656,0.1346164048,-0.2404585332,0.0401595794,-0.0383935682,0.0053857584,0.1406145841,-0.0247434154,-0.0337560028,-0.1797729433,-0.035650149,-0.0933357924,0.0808214769,-0.1249560714,0.0352692418,-0.0757700205,-0.0158224925,-0.0312034506,0.1156084239,-0.1281599104,-0.0476562157,-0.0083874185,0.0672540143,-0.148529917,-0.148949638,-0.0513327122,0.0493294001,-0.0468227044,-0.0019835804,-0.0733530074,-0.019691797,-0.2014771402,-0.1167707592,0.0172700938,-0.1128259301,0.0247438606,-0.2112908661,0.1578921974,-0.1607673913,-0.0208998322,0.0306846816,-0.0983656123,-0.068289794,0.0211059172,0.0667844191,0.025946809,0.1146602705,0.0213220194,-0.1143352985,-0.1366722733,0.0316528827,0.0345388316,0.0692386031,-0.0489936322,0.0237122029,-0.1140812114,0.0213970654,-0.11276979,0.1724823564,-0.0083536021,0.0230420306,-0.129280448,0.0977935642,0.1400474459,0.0518632643,0.1648550034,0.1203791946,0.2038297802,-0.106986627,-0.03476879,-0.0188609697,-0.0713068247,-0.1344669759,0.0710290074,0.0937303901,-0.0390472226,-0.0192691237,0.007349622,-0.1548821926,0.2267850339,0.0199465323,-0.0555672385]],"hackathon_name":"BrumHack 4.0","index":813,"project_description":"A first person shooter controlled by your hands.Using the leap motion, we detect changes in the vertical motion of your hands so that you can \"shoot\" out of your fingers to knock over bottles as fast as possible.We used Unity to easily create a 3D world and support the Oculus Rift for vision.It was difficult to properly detect the gesture required to shoot. It may have been easier on an older SDK, but the tracking was a lot worse so we decided it would be better to use the newer SDK and manually detect the motion.Creating something in Unity after not properly using it before, and effectively using the Leap Motion.We may develop this into a small full demo (Or at least make the shooting much more reliable).BrumHack 4.0Came up with the concept, built the game world, set up oculus rift compatibility and assisted with the testing of the shooting mechanicsHelped with the creation of the game world and the adjusting of the hand controls. Also made a basic story to put the game in context.**************It is the year 3571. A superintelligent alien being known only as The Sheriff has taken control of the Earth and regressed it to the era of the Wild West. Only four noble Sheriffs: Sheriff Kaye, Sheriff King, Sheriff Bennett and Sheriff Sabourin can save the world, by destroying nondescript glass bottles in the evil Sheriff's arena of death.Worked on leap integration and created shooting mechanics.Alex King\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:34 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"The Sheriff","project_tags":["c#","unity","leap-motion","oculus"],"project_url":"https:\/\/devpost.com\/software\/finger-bang","keywords":"motion,using,detect,unity,may,leap,properly,shoot,sdk,create,fast,better,least,bottles,knock,hands,gesture,full,fingers,built"},{"level_0":814,"hack_vector":[[0.1736952066,-0.1383208036,-0.0088499421,0.076394923,-0.0276497807,0.1681372821,0.1985243559,-0.0637436733,-0.0221006796,-0.0184015688,0.0008201902,-0.0058764466,0.1442077309,-0.0839753076,0.0332027338,0.024820853,0.2283591479,0.0058925459,0.0525343455,0.0993497446,-0.2187181413,0.0080511197,-0.0431351811,-0.0391868278,0.1821880788,-0.0218680669,-0.039996352,-0.1814175993,0.0047055692,-0.0676362664,0.0509017594,-0.1173171028,0.0672090277,-0.0596969835,-0.0562553816,-0.0020416121,0.1380722076,-0.1272885948,-0.0215093661,0.0627821013,0.068609409,-0.1282642931,-0.1658263803,-0.0249581654,-0.0020931899,-0.0486430973,0.0318106897,-0.0377976932,-0.0215706993,-0.2081607282,-0.0860029534,0.0225428063,-0.1228607893,-0.0208852552,-0.1380909979,0.1646616459,-0.1589786112,0.0363073759,-0.0188704859,-0.0073060314,-0.0309782866,0.0227943473,0.066324465,0.0568391308,0.1492073089,-0.0267265849,-0.1285960674,-0.1419059932,0.0146903433,0.0179858599,0.0643024743,-0.0292373132,-0.0069200667,-0.1475065649,-0.0242447201,-0.0694470331,0.209425807,0.0236223862,0.0439201593,-0.150401324,0.1222650781,0.1585088968,0.0272192415,0.1533887684,0.1342719942,0.1875556111,-0.1181361154,0.0373228602,0.0057200668,-0.0931401104,-0.1110792384,0.0842680112,0.0681934804,0.0137398597,0.0512328222,-0.0617323592,-0.0885015503,0.1812053025,0.0715572387,-0.0508892387]],"hackathon_name":"BrumHack 4.0","index":814,"project_description":"Simplifying university systems\/lifesupAnnoying systems that are hard to use during uni.Simplifies everything you need to know at uni into one place.Using node.js as a backend, and using firebase for authentication and socket.io for chat.Learning nodeChatroomsMore nodeFull development, security, push with university.BrumHack 4.0Connor Cartwright\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:59 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Dash","project_tags":["jquery","node.js","socket.io","javascript","html5","css3","heroku","github","firebase"],"project_url":"https:\/\/devpost.com\/software\/dash-hcgvx8","keywords":"node,using,uni,dash,inspiration,hard,full,firebase,everything,development,chatrooms,js,chat,challenges,built,backend,authentication,annoying,io,know"},{"level_0":815,"hack_vector":[[0.1389643848,-0.1093692705,-0.0357204787,0.0470571592,-0.0269779973,0.1411475241,0.1993590295,-0.0193784609,-0.0305898041,-0.0217183381,0.0043383371,-0.0552417189,0.1431459039,-0.0612235405,0.0554417595,0.0287246853,0.2356449664,0.0089486651,0.0328126997,0.1356814504,-0.2516485453,0.0151742194,-0.0454653762,-0.0155632496,0.1215087473,-0.027804248,-0.0473772921,-0.1752621233,-0.0152344462,-0.0948945656,0.0645118281,-0.1162626594,0.0276178941,-0.066859588,-0.0241564792,-0.0152007444,0.1219075397,-0.1354966909,-0.0375849269,0.0097290985,0.0468308069,-0.1291493177,-0.1641884148,-0.0353052095,0.0573512204,-0.0697700679,0.0120941726,-0.0587998405,-0.0162451006,-0.221019879,-0.1015587896,0.0039531109,-0.095370844,-0.0090613598,-0.1870699674,0.1691429019,-0.1403572112,-0.0080516469,0.0269026291,-0.0778427273,-0.0691367388,0.0322739445,0.0681650862,0.049280677,0.1143938303,0.0065925713,-0.1005725935,-0.1501917392,0.0406943485,0.0179656129,0.0615175143,-0.0356738791,0.0154417604,-0.1195117831,-0.01538915,-0.12054874,0.1801158637,-0.0022136306,0.0317314751,-0.1276857257,0.1105430946,0.1587354243,0.0419048145,0.1627523154,0.1190347895,0.1996954083,-0.1073214188,-0.0178198032,-0.0298205726,-0.0877246931,-0.143979609,0.0745783597,0.0864570066,-0.0411155261,0.0009984915,0.000922154,-0.1428761929,0.2251015306,0.0365660898,-0.0655474141]],"hackathon_name":"BrumHack 4.0","index":815,"project_description":"A quick way to receive messages without having to look at the screen of you computerWe wanted to make a extremely quick way to know when you receive a message from the most popular social media applications.It uses the Razer Croma keyboard to show images of the apps that you have unread messages in.With a lot of sweat and tears.I had to make stop motion animation images for the logos of the applications.The final product code is ~5500 lines of code more than 3000 of which are for the animationsI learned a lot about the Razer Croma SDK and about C++ in generalWE will expand the capabilities of the app in order to make it better.BrumHack 4.0Kiril Nedkov\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:49 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Keyboard notifier","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/keyboard-notifier","keywords":"make,razer,learned,keyboard,images,croma,lot,code,applications,built,general,lines,animation,know,animations,inspiration,app,final,capabilities,extremely"},{"level_0":816,"hack_vector":[[0.1726403087,-0.1285617054,-0.0072081382,0.0748352557,-0.0251354482,0.1526276469,0.1748196632,-0.0546745807,-0.0259456411,-0.0114370156,0.0152436448,-0.0418233387,0.1553462893,-0.0834821537,0.0409274921,0.0288196653,0.222214669,0.0058362912,0.0609796047,0.1036183536,-0.2264806032,0.028457934,-0.0644002482,-0.0162860584,0.1532109082,-0.0439284258,-0.0507072769,-0.1892058849,-0.0169239659,-0.0771591812,0.0511579886,-0.1116219461,0.0570847765,-0.0788383633,-0.0316714458,-0.0025047283,0.1379846036,-0.136845991,-0.0390599743,0.0295761079,0.0618540198,-0.1333571523,-0.1802850217,-0.0104347412,0.0056394199,-0.0436338037,0.0324390978,-0.0614964813,-0.0183219835,-0.2035979033,-0.1078565493,0.0271988083,-0.1217700168,-0.0016176414,-0.1716246307,0.1544326246,-0.1453503668,0.0266148131,0.0085970201,-0.0324371122,-0.0449321382,0.0236903727,0.072364144,0.0654559657,0.1255811155,-0.0062519992,-0.1129473448,-0.1479028165,0.0071404641,0.0085127512,0.0761844069,-0.039327275,0.0067819967,-0.1429765821,0.0007083462,-0.0824566483,0.215151459,0.0127305677,0.0414121635,-0.1348140389,0.1228405833,0.1551819444,0.0369763114,0.1411695778,0.1399874687,0.1868427247,-0.1116389781,-0.004776489,-0.0018796155,-0.089797385,-0.1064386219,0.0851981714,0.0737498403,-0.0158640668,0.037685167,-0.059959963,-0.1070815623,0.2098171711,0.061419744,-0.063560538]],"hackathon_name":"BrumHack 4.0","index":816,"project_description":"Want GitHub in Minecraft? Well we have the plugin for you!logoBeen sucked into minecraft recently, and fed up of svn.Visualises git repositories into minecraft buildings.blood sweat and tears.dependenciesdependenciesdependenciesnot dependenciesBrumHack 4.0I did something.I did stuff in website + java + sysadmin stuff\n+ super useful comments\n+ LOTS OF FACEKEYBOARDSMASHING due to lack of javadocI rolled my face against the keyboard and code came out. Somehow it made sexy buildings in minecraft after lots of pain and sufferingI worked on the back-end generation of the git api data download and pull.christina ermongkonchai\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:47 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"GitCraft","project_tags":["java","php","mysql","json","github"],"project_url":"https:\/\/devpost.com\/software\/gitcraft","keywords":"dependencies,minecraft,visualises,inspiration,blood,buildings,built,challenges,fed,git,gitcraft,learned,tears,next,proud,ran,recently,repositories,sucked,svn"},{"level_0":817,"hack_vector":[[0.1416666359,-0.0977619812,-0.0058583082,0.0511985347,-0.0097212316,0.16695714,0.1974743903,-0.0653362572,-0.0352879465,0.0130335232,0.0217613839,-0.0670104474,0.1544125229,-0.1058032736,0.0395416953,0.0393330343,0.2535391748,-0.0037687779,0.0547560118,0.0979996547,-0.210241273,0.0597509854,-0.0609832183,-0.0311731156,0.1453065127,-0.0349242613,-0.0549174398,-0.207188651,-0.0098636579,-0.0730811059,0.0746776164,-0.1319651902,0.0728810802,-0.1003393978,-0.0439723097,0.0090224035,0.1446552128,-0.1211429089,-0.0141553022,0.0153199891,0.0404262878,-0.1555006504,-0.1872692257,-0.0097386148,0.0387906171,-0.020247424,0.0261580572,-0.0541950949,-0.0251432415,-0.2034226656,-0.1124551371,0.0337713957,-0.1111298054,0.0025457318,-0.1613950133,0.1394046992,-0.1477771103,0.0155459708,0.0123042474,-0.0516947806,-0.0419763289,0.0177925173,0.0919092223,0.0745151043,0.1219456196,-0.0195774958,-0.086559847,-0.1429875642,0.0291183367,0.0173674915,0.0834135786,-0.049597282,0.0301811695,-0.1366374642,0.0105558354,-0.0996307433,0.195858255,0.0085123172,0.044285696,-0.1280211657,0.150862515,0.1528050452,0.0681500658,0.1524269581,0.106458962,0.1637845337,-0.1099431887,-0.0245885495,0.0017716436,-0.0966318548,-0.1286033839,0.0486851409,0.0598640703,-0.0169923194,0.0382386558,-0.0235046428,-0.1056565195,0.1764687151,0.0579362549,-0.0807814375]],"hackathon_name":"BrumHack 4.0","index":817,"project_description":"The best chrome extension for sharing links online.Shared linksChrome extensionChecking share historyChecking share historyViewing active groupsThe increased effort when sharing links with friends via Facebook or other means.Creates online groups via the chrome extension. One click link share directly from the web page.Backend server: LAMP Stack and Pusher API\nFront end: JavascriptLots of issues with the PHP PusherAPISolving all the issues we ran into as a groupLearnt about the PUSHER APIImprove our UI and the backend serverBrumHack 4.0Worked on chrome extension and the front end Pusher APIWorked on the back end server sideArgha Sarkar\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 08:05 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"URL Share","project_tags":["pusher","php","javascript","html5","css3"],"project_url":"https:\/\/devpost.com\/software\/url-share","keywords":"api,backend,via,share,server,ran,pusher,issues,web,facebook,increased,improve,groups,group,front,friends,directly,extension,end,effort"},{"level_0":818,"hack_vector":[[0.1477515846,-0.1558245271,0.0115283439,0.0802531242,-0.0446874946,0.1518937647,0.1730290353,-0.0425722376,-0.0473983586,-0.013698644,-0.0141602475,0.0164792296,0.1265687495,-0.0738010034,0.0057499153,0.0916043222,0.2625089884,0.0302125402,0.0511673614,0.0897804648,-0.2044964731,0.0194754098,-0.0513520204,-0.0479798429,0.1739651263,-0.0163121149,-0.0835154653,-0.1754716486,0.033044748,-0.0849673823,0.0294671264,-0.102992028,0.0708574653,-0.057453718,-0.0340391621,0.0002648313,0.1430945396,-0.1133810729,0.0044575594,0.069911994,0.047852587,-0.1631997079,-0.1957571208,-0.0399672985,-0.0369908996,-0.0426524766,0.0313032046,-0.0131319854,-0.0025611827,-0.1813506484,-0.01465098,0.0406277664,-0.1058196649,-0.0461081713,-0.1162204593,0.1518520266,-0.1622326672,0.0708432794,-0.0044395933,0.0374561138,-0.021842083,0.0471442007,0.0478967987,0.0802465901,0.1318420321,-0.0419291779,-0.1421804726,-0.1826561391,0.0212327354,0.0121437805,0.0838628858,-0.0309183113,-0.0037940026,-0.1480311453,-0.0689140186,-0.0747220516,0.1814906597,0.0235625282,0.1054663062,-0.1305888593,0.1087285951,0.1484959573,0.0244561303,0.1399957687,0.162147209,0.1543529183,-0.1522607654,0.0567714684,0.000444863,-0.1202302501,-0.0777530596,0.1055315956,0.0378981009,0.0021157004,0.0828749686,-0.0759582445,-0.0737441108,0.1499647498,0.1043549329,-0.043202851]],"hackathon_name":"BrumHack 4.0","index":818,"project_description":"Find the seed of a minecraft world by brute forcing!Finds the seed of a Minecraft worldUse the power of the GPU!BrumHack 4.0Amar Saggu\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 08:06 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Minecraft Seed Reversererer","project_tags":["c++"],"project_url":"https:\/\/devpost.com\/software\/minecraft-seed-reversererer","keywords":"seed,minecraft,world,use,reversererer,ran,proud,power,next,learned,inspiration,gpu,finds,challenges,built,accomplishments"},{"level_0":819,"hack_vector":[[0.1672211289,-0.1540116668,-0.0022132739,0.0801844224,-0.0338762514,0.1596781611,0.1869983077,-0.0551531836,-0.039904613,-0.0205880795,-0.0053191786,0.0043681231,0.1414218843,-0.077373676,0.0108068911,0.0514825471,0.2373995036,0.0073506325,0.0570220873,0.0865693241,-0.2127085626,0.0127869779,-0.0500137694,-0.0326864645,0.1747646779,-0.0338272452,-0.0645799264,-0.1752299964,0.0036902146,-0.0829179958,0.0524014942,-0.1010309905,0.0687575638,-0.0535219051,-0.0465710871,0.0025784713,0.1429308653,-0.1208978519,-0.0101454109,0.0607104637,0.0692650378,-0.1356254071,-0.1696712077,-0.0231965557,-0.0164786521,-0.0500348508,0.0355642736,-0.0333114117,-0.0196430124,-0.2058516145,-0.0595200919,0.0392548665,-0.1140398756,-0.0207147971,-0.1368458569,0.1455738395,-0.1682893634,0.0403188542,-0.0104504172,0.0099929068,-0.0356715061,0.0404009335,0.0485632755,0.0550621375,0.1392989457,-0.0301093739,-0.1405658871,-0.1591067165,0.0035298197,0.0123884305,0.0662287176,-0.0323263668,-0.0034538948,-0.1525748223,-0.0443975255,-0.070258677,0.2058462203,0.0207652524,0.0757637694,-0.145506382,0.1148433685,0.1505871564,0.0120686833,0.143289119,0.157243371,0.1809084713,-0.1289134026,0.0453883447,-0.0021537964,-0.1120509654,-0.0949595571,0.110767886,0.0450601131,0.0056056315,0.0504830293,-0.0701963231,-0.0877726153,0.1826546341,0.0913403779,-0.0398114249]],"hackathon_name":"BrumHack 4.0","index":819,"project_description":"The 3D WebSurfing BrowserRace the Sun the videogameIt is a videogame, that can also act as a browserCommiting unity projects.I did something in unityTo properly setup git ignore files and toA lot of recoding!BrumHack 4.0Kyle Allen-Taylor\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:58 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"UperDooperNavigateForTheWebPagesmatronopolis","project_tags":["unity",".net"],"project_url":"https:\/\/devpost.com\/software\/uperdoopernavigateforthewebpagesmatronopolis","keywords":"videogame,unity,learned,act,also,browser,built,challenges,commiting,files,git,ignore,inspiration,lot,uperdoopernavigateforthewebpagesmatronopolis,next,projects,properly,proud,race"},{"level_0":820,"hack_vector":[[0.1505257636,-0.1051486507,-0.0255362149,0.0689488053,-0.0266193897,0.1550049335,0.1998360902,-0.0508193374,-0.0319051668,-0.0051505291,0.0123113105,-0.0476635285,0.1532609314,-0.0883377045,0.0446732529,0.0258336551,0.2230712026,-0.0054392177,0.0552728064,0.1103340983,-0.2176365107,0.0315617844,-0.0577052832,-0.0129492106,0.1514752507,-0.0289195031,-0.0501583889,-0.1835224479,-0.0274284035,-0.0683935285,0.0705105066,-0.1128034592,0.0550862886,-0.071424,-0.0458886363,0.0103694387,0.1373102814,-0.1161970422,-0.022957677,0.0296377875,0.0582809299,-0.1351895928,-0.182256788,-0.0083834007,0.0282615591,-0.0485008843,0.0268767662,-0.0664702058,-0.0191181656,-0.2177852541,-0.1097583473,0.0254817903,-0.1078582406,0.0089384103,-0.1795214415,0.1435129642,-0.1649187654,0.0174873639,0.0046219537,-0.0485329777,-0.0495565459,0.0354694128,0.0772880614,0.0494479313,0.1296125203,-0.0100886878,-0.0993794128,-0.1423744112,0.0233962853,0.0120202675,0.0648024678,-0.0379377156,-0.0037431759,-0.1308102161,0.00800806,-0.077039279,0.2058166713,0.0062252143,0.0363976471,-0.149873212,0.1243955866,0.1591528505,0.0561338849,0.1537092626,0.1236083582,0.1982180625,-0.1075792313,-0.0058773886,0.0042757671,-0.099285394,-0.1294071525,0.0717160851,0.0802925825,-0.006756824,0.025402844,-0.0313502736,-0.119895786,0.2076031119,0.0593325011,-0.0669943839]],"hackathon_name":"BrumHack 4.0","index":820,"project_description":"A up-to-date website for the Minecraft server known as TwistedVanilla with a OpenSource API for creating blogpostsNeeded a wesbsite to post blog postsIt shows a website, can log in to edit, and submit blog postsTeam help with CSS, HTML, PHP and mySQLLogin didn't work for ages, got it working though!Everything seems to be working in order?PHP and MySQL :DGetting this finalised and using it in the real worldBrumHack 4.0I worked on the blog api mostly, along with the session part of the site. I learned MySQL and PHP in 2 days - which was very fun and interesting!George King\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:58 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"TwistedVanilla-WebsiteTeam","project_tags":["html5","css","php","mysql"],"project_url":"https:\/\/devpost.com\/software\/twistedvanilla-websiteteam","keywords":"working,blog,php,posts,mysql,help,login,log,learned,inspiration,html,world,got,finalised,everything,edit,css,challenges,built,ages"},{"level_0":821,"hack_vector":[[0.146053195,-0.1046096236,-0.0320331044,0.0314552821,-0.0164629649,0.1438922137,0.1862536222,-0.0397534966,-0.0062407469,-0.0186556876,0.021995144,-0.0893666819,0.1436513215,-0.0654938072,0.0743242651,-0.0116932606,0.213319838,-0.0032147125,0.0409747548,0.1194487438,-0.2396432459,0.0395802855,-0.0461898744,-0.0038505178,0.1133304611,-0.0274603851,-0.0177789573,-0.1729896963,-0.0354433879,-0.0948435068,0.0734129846,-0.1419724822,0.0242615603,-0.0912275165,-0.0134471562,-0.0323487222,0.1150104553,-0.1494386941,-0.071629703,-0.0283055697,0.0418558083,-0.1278946847,-0.1451921165,-0.0338495672,0.0624480098,-0.0546753109,0.01477871,-0.0668392405,-0.0389564484,-0.1995496005,-0.1597861797,0.0122871362,-0.1035631523,0.0051444666,-0.2060822845,0.1558742374,-0.1152225658,-0.0345295519,0.0360170566,-0.1135940924,-0.0792442784,0.0146704912,0.078269206,0.0431406461,0.0891573578,0.0311542302,-0.0923409536,-0.1239544526,0.0244868975,0.0310186315,0.0771462917,-0.0504058488,0.047651574,-0.1209218726,0.0359572545,-0.1240508258,0.1783988476,0.0080710724,0.0027214685,-0.1202080473,0.116450645,0.1582650244,0.0531588383,0.1650924683,0.0989461318,0.1807335019,-0.1036895588,-0.0596673898,-0.0262564048,-0.0659461245,-0.1279585809,0.0569288507,0.101002045,-0.0477118939,0.0019594459,0.0037310105,-0.146253556,0.248813346,-0.0016549982,-0.0827801377]],"hackathon_name":"BrumHack 4.0","index":821,"project_description":"An image-based analysis of all of the crap you've bought, based on your bank statementsMain homepage logo & customer searchImage stackRetailer transaction count and total spendPie charts (retailers on the left, categories on the right)Working out why your cupboards are so full is difficult, and it involves actually moving around your house, from room to room, to find where all of your space is gone. We decided that since moving your own body is so labourious nowadays (think Uber, Self-Driving Cars, hoverboards, skyhooks, etc) we decided to bring the contents of your cupboards to your computer screen (since that's where you probably are anyway)!A query-based analysis of the lines on your statement that show you random pictures from the retailers that you have been spending at, with the hope of encouraging you to spend less and save more (ha!).Importing all of the data into MySQL, then doing SQL-views of the data to minimise code. A random image table is used to select a random image that matches the retailer, and we return this line-by-line back to the PHP which writes javascript into an image array (amongst other things).We present the five analysis areas; favourite retailer, bar chart showing retailer transaction count and total spend, stack of pictures, pie chart showing tags, and pie chart showing retailer usage.Javascript is tough, man. Don't judge. Also, Jack can't tear himself away from his phone for more than a few minutes so we don't have as many images as we'd like...Collaboration of a brand new back-end dev (Daniel) and front-end dev (Alex) to create something that actually works! Everything is modular so we can work together, simultaneously.Not much, unless we get some real data to put into it...BrumHack 4.0Backend development, collaboration system and hostingI thought of the domain name and helped with the database and images.I worked on the front end of the project brining together the back end (PHP) and from end (HTML, CSS, jQuery, JS).Daniel Dainty\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:58 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Do You Even Hoard?","project_tags":["php","mysql","javascript","jquery"],"project_url":"https:\/\/devpost.com\/software\/do-you-even-hoard","keywords":"retailer,showing,chart,image,random,data,spend,since,moving,code,end,challenges,cupboards,room,decided,back,dev,line,php,analysis"},{"level_0":822,"hack_vector":[[0.1382067055,-0.09310399,-0.0234174374,0.0557587929,-0.0238181613,0.1483905613,0.2087207437,-0.0440720096,-0.0284080785,-0.0170319881,0.0066037779,-0.069086507,0.1435936689,-0.0784224644,0.0574103929,0.0044293036,0.2203881145,0.001364611,0.0518957525,0.1208031178,-0.222935468,0.053036321,-0.0512565374,-0.0141220847,0.1210435629,-0.012047817,-0.0414747894,-0.1744324565,-0.026628824,-0.0852595121,0.0640176311,-0.1309919953,0.0439119972,-0.0789838284,-0.0340638086,-0.0102195656,0.1425291449,-0.1302943677,-0.0489647016,0.0065335166,0.0504197218,-0.1450012475,-0.1544288844,-0.0349089131,0.0573576652,-0.0526004508,0.0209690463,-0.0727363527,-0.0260385592,-0.2104953527,-0.1340555996,0.0273577534,-0.1063486114,0.0196016971,-0.189247027,0.1481705606,-0.1456487775,-0.0192298628,0.0276472513,-0.0898450688,-0.065903984,0.0177981798,0.0922048166,0.0415508039,0.1110350564,0.0050950195,-0.0916419998,-0.1320230663,0.0314712264,0.035439346,0.0636938214,-0.0512294956,0.0159702189,-0.1174278259,0.023494415,-0.1105459407,0.1813672483,0.0111212963,0.019677151,-0.1452560723,0.1211520582,0.1560919434,0.0640891045,0.1632545888,0.1082666516,0.1877688617,-0.1066859886,-0.0381034911,-0.0104069049,-0.0932496637,-0.1428028792,0.0516481586,0.0954381973,-0.0272193346,0.0080680382,-0.0006497239,-0.149467513,0.224498421,0.0265429225,-0.0759725645]],"hackathon_name":"BrumHack 4.0","index":822,"project_description":"wave it, if you crave itAt the last hackathon we all volunteered for, there was a cool way of providing the hackers with food on demand via the tag KurtCart on Twitter. As a group, we believe that this was a mess and there could be a better way of implementing this idea, hence using the Myo. It also then doesn't require a twitter account for those who don't have it.It is the most convenient way of providing hackers with snacks and drinks.We used the myo and connected it to an android app and created a server which received the data and posted the results up on a website ready for the volunteers to watch over, with a continuous refresh featureBrumHack 4.0Developed back-end in Node.JS running on Amazon Web Services.Built the android app, and connected it to the Myo armband, and sent the data to the server.Richa Shah\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:57 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Bring me food","project_tags":["jade","javascript","node.js","amazon-web-services","mongodb","css3","html5","github","express.js","android","android-studio","vim"],"project_url":"https:\/\/devpost.com\/software\/bring-me-food-mc2u9v","keywords":"way,hackers,myo,twitter,providing,created,hackathon,group,food,feature,drinks,demand,data,website,hence,cool,convenient,continuous,connected,built"},{"level_0":823,"hack_vector":[[0.1459740549,-0.1478693932,0.0180842243,0.0957962871,-0.0597408265,0.1587097943,0.1567902416,-0.0548154302,-0.030352341,-0.0373885073,-0.0119609451,0.0637748614,0.1168820336,-0.0785903186,-0.025638381,0.1077110469,0.2685054243,0.0536585078,0.0448578075,0.0705288723,-0.1619356275,-0.0142144328,-0.0545660369,-0.0733420253,0.1811275035,-0.0129006468,-0.0856485143,-0.1662989259,0.0444377586,-0.077974245,0.0012136882,-0.0755876452,0.0917113572,-0.0338404588,-0.0368677191,0.0302774534,0.1496546268,-0.0846967176,0.0252896007,0.1227919087,0.0544775091,-0.1359663755,-0.1842692792,-0.029420644,-0.0791966394,-0.0599915534,0.0562610701,0.022015851,-0.0136796655,-0.1694663018,0.0168547351,0.0389335491,-0.0979710594,-0.0848023072,-0.0557324775,0.1363267601,-0.1557720751,0.0936979204,-0.0265660845,0.0927187279,0.0049108034,0.0439826325,0.0352942608,0.0785870925,0.1448882073,-0.066717349,-0.148679316,-0.1842440218,0.0072196606,-0.0042419527,0.0544937477,-0.0206475724,-0.0328396149,-0.144282043,-0.096967265,-0.0343744606,0.1872430295,0.0303491969,0.1209627017,-0.1411199719,0.0952866375,0.1479171813,-0.0066701076,0.117683351,0.1609746665,0.1288793385,-0.1533712894,0.1062891632,0.0101078795,-0.1299640089,-0.0510138124,0.1202477738,-0.0077040861,0.0475982204,0.1028724611,-0.1199110597,-0.036360994,0.1142186373,0.1380201876,-0.0334682129]],"hackathon_name":"BrumHack 4.0","index":823,"project_description":"TFW you procrastinateBrumHack 4.0Amir Makanvand\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:55 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"The Abyss","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/the-abyss","keywords":"abyss,many,inspiration,accomplishments,advanced,building,built,bulb,challenges,css,fell,head,html,images,worked,website,learned,light,next,overlapping"},{"level_0":824,"hack_vector":[[0.1479654461,-0.1507776529,0.0061708959,0.0938821808,-0.0471060723,0.1471639425,0.1722634286,-0.0373143069,-0.0362216011,-0.0296650715,-0.0112697361,0.0336980261,0.1336369812,-0.0801060498,0.0079498282,0.0683024079,0.2459284812,0.0294814017,0.0601411909,0.0886910185,-0.2072652876,-0.0040853899,-0.0494919233,-0.056148883,0.1702628285,-0.0225218181,-0.0742648095,-0.1788859963,0.0281221103,-0.0900949687,0.0187723208,-0.0920216218,0.0725470558,-0.0400212519,-0.0371970907,0.0190902445,0.1406609714,-0.1157656834,0.0018734942,0.0897807032,0.0611234903,-0.1379100084,-0.1837453544,-0.0360645838,-0.0469265692,-0.0669256523,0.0397567786,-0.0189980287,-0.0040084608,-0.1972808838,-0.0354640596,0.0378922708,-0.1117416248,-0.0496795177,-0.1167296395,0.1585031003,-0.1708019525,0.0577625968,-0.0126477377,0.0333946608,-0.0294110477,0.0417101793,0.0404421017,0.0769335628,0.1432203948,-0.0351693891,-0.1360521764,-0.1734672785,0.0110374792,-0.0002273029,0.0604164749,-0.0388527773,-0.0213714279,-0.13656573,-0.0465313643,-0.0588234998,0.1924498975,0.0284849592,0.0892579705,-0.1534641385,0.1063690186,0.156973213,0.0180185046,0.1441104859,0.1630355716,0.1779153645,-0.1351279914,0.0602298118,0.0044094659,-0.11095763,-0.0846816674,0.1085676178,0.0407013074,0.0218000319,0.0589765869,-0.0911380798,-0.0903003812,0.15498586,0.104543224,-0.046652846]],"hackathon_name":"BrumHack 4.0","index":824,"project_description":"A Bukkit plugin for TNT time bombs that require problem solving to defuse.TwistewdNot enough time to fill in the whole story. Such challenging!BrumHack 4.0EverythingAdam Woollen\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:55 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"TwistedVanilla - Bomb Defusal (Minecraft!)","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/bomb-defusal-minecraft","keywords":"whole,twistedvanilla,bomb,built,challenges,challenging,defusal,enough,fill,inspiration,learned,minecraft,next,proud,ran,story,time,accomplishments"},{"level_0":825,"hack_vector":[[0.1450740695,-0.1143829376,-0.0218013357,0.0581539124,-0.0202149935,0.146225214,0.1941246241,-0.0522016063,-0.0255796965,-0.0227893181,0.0176665448,-0.0533485748,0.1570253074,-0.0921492428,0.0417455472,0.0256097708,0.2364526838,-0.0075429701,0.0544909574,0.1174111962,-0.222415328,0.0416910872,-0.0459515788,-0.0119645474,0.1414668858,-0.0300622247,-0.0380010419,-0.1863325089,-0.0209350251,-0.0777228996,0.0607360005,-0.1235860959,0.0629547611,-0.0760912523,-0.0366077423,-0.0043549119,0.1435903609,-0.1300292164,-0.0381009728,0.0062227766,0.0507686324,-0.1368843913,-0.1736999154,-0.0203746036,0.0330100022,-0.0446885303,0.0322051272,-0.0619625412,-0.0180986412,-0.2124768347,-0.122566238,0.0256006401,-0.1122815907,-0.0015575008,-0.180820331,0.147254765,-0.1502650082,-0.0062861666,0.0245245546,-0.0675601959,-0.0632993951,0.0342168249,0.0812966228,0.0499101281,0.1161536127,-0.0005720761,-0.0960281566,-0.1428872198,0.0188670903,0.0167193748,0.071145989,-0.0452199578,0.022678908,-0.1348441392,0.0081593227,-0.0911171734,0.1986564547,-0.0049601374,0.0375972949,-0.1386140436,0.1213200465,0.1593227386,0.0484101214,0.1653224975,0.1099748164,0.1698125452,-0.1136522293,-0.0145370448,-0.0172192585,-0.0987746567,-0.1301461011,0.0744615644,0.0665951893,-0.0194539297,0.0250475071,-0.029008409,-0.1339069158,0.2086765915,0.0566718392,-0.0750628635]],"hackathon_name":"BrumHack 4.0","index":825,"project_description":"Competitive coding, while battling through distractionsTwo players can compete to complete an algorithm given by our sever.  Once code is written, players can't go back and edit there code, so it has to be right first term.  Throughout this, events change the players code and distract them, forcing them to respond to events.Parsing the Java, and communicating between a server and devicesDank memesAlways check the small things, and don't update code right before the deadlineBrumHack 4.0During the design and creation of this development tool, I implemented the front end and the distractions.Worked on server-client communication and processing the messages sent to the client.Peran Truscott\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:56 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Algo-rekt","project_tags":["php","java","javascript"],"project_url":"https:\/\/devpost.com\/software\/algo-rekt","keywords":"code,players,events,right,compete,edit,distract,devices,deadline,dank,complete,written,first,check,change,challenges,back,always,algorithm,communicating"},{"level_0":826,"hack_vector":[[0.140869379,-0.1140338853,-0.0154316593,0.0664048269,-0.0146023929,0.1542302221,0.2034511119,-0.046495989,-0.0364726819,-0.0062863287,0.0104074609,-0.0496432371,0.1419391185,-0.0840171427,0.0406007916,0.0155123509,0.2395738959,-0.0082611013,0.0579445288,0.1130964011,-0.2338639051,0.0473886803,-0.0423547849,-0.0133547438,0.1493918896,-0.0209948607,-0.0565724485,-0.1947000921,-0.0159394871,-0.0858327672,0.0760434419,-0.1300730556,0.0567314774,-0.0859416351,-0.0311706197,-0.0157514736,0.129551515,-0.1301983744,-0.0272660423,0.0111156115,0.0547035821,-0.1523853093,-0.1734973788,-0.0311764963,0.0332556553,-0.0283757448,0.0078637581,-0.0635916144,-0.0177074075,-0.2034917027,-0.1084249616,0.0389983952,-0.1037516296,0.0084887762,-0.1856001467,0.1448418647,-0.1562057137,0.0081887254,0.0141443033,-0.0662185624,-0.0525728576,0.028836064,0.0815860704,0.047208745,0.1223070249,0.0015031726,-0.0968971029,-0.1393160969,0.0321628079,0.0301435348,0.0740418062,-0.0420345217,0.0212458037,-0.1329162717,0.0070490683,-0.0968017727,0.182580635,0.009330797,0.0370551944,-0.1355355084,0.1238134503,0.146104306,0.0624394827,0.1617864072,0.1259128749,0.1913949251,-0.1086734608,-0.0253402069,-0.0085362392,-0.0852936581,-0.1280169636,0.066395089,0.08876542,-0.0186470635,0.0188248474,-0.0178886689,-0.1277177632,0.1958568692,0.0421949811,-0.0619135089]],"hackathon_name":"BrumHack 4.0","index":826,"project_description":"Let the party define the playlist.Second team member: Alex Wiley, BCUMany parties with music not matching the mood.Measure the liveliness of a room and generate music genres (and soon music playlists) from this data.Using Java for the initial version along with a custom fork of a webcam library, modified to detect levels of motion in a frame.Starting the hack with only 12 hours to go, and as a solo project. Before luckily gaining a second team member in the latter stages.Writing the computer vision code without the use of openCV.Never convert to web based in the last 4 hours.Complete the web based version with full spotify api integration.www.algorhythm.spaceBrumHack 4.0Front end website design.Aran Long\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:44 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Algorhythm","project_tags":["java","javascript","html","css"],"project_url":"https:\/\/devpost.com\/software\/algorhythm","keywords":"music,algorhythm,web,version,based,second,team,member,hours,www,go,gaining,generate,genres,initial,hack,frame,inspiration,integration,java"},{"level_0":827,"hack_vector":[[0.1716855615,-0.1261944026,-0.0176085457,0.0695078149,-0.0110448617,0.1657772362,0.1913926005,-0.0582291521,-0.0335407183,-0.0060741692,0.0076960009,-0.048394639,0.1509929746,-0.088200137,0.0461540818,0.0112530021,0.213766396,-0.0138956904,0.0553036556,0.1087265462,-0.2295961827,0.0337511413,-0.0410060994,-0.018297134,0.1717842519,-0.039023377,-0.043099802,-0.1861955225,-0.026892921,-0.0628096163,0.0694779456,-0.1286621988,0.0598022379,-0.0699883252,-0.0526757278,-0.0091940938,0.1359199733,-0.1281721294,-0.0282150116,0.0278252028,0.0719114617,-0.1399536878,-0.1685630381,-0.0231372211,0.020959923,-0.025842132,0.0295779929,-0.0585138388,-0.0229254086,-0.2083617151,-0.1127291098,0.0296007097,-0.1251787692,0.0166400541,-0.1748135239,0.1524315327,-0.1522675902,0.0167441275,0.0033617159,-0.0469438657,-0.0517436787,0.0157589801,0.0656931847,0.0477756932,0.1299522519,-0.005477651,-0.1107268035,-0.138116315,0.0135661978,0.0197226088,0.0775578618,-0.0404659361,0.0130879199,-0.1387533695,0.0212951358,-0.0827692002,0.1974853575,0.005194216,0.0284010042,-0.1319572926,0.1263488084,0.1596560627,0.0431383848,0.1581308097,0.1269655228,0.1868269145,-0.1018831879,0.0000258555,0.0120692039,-0.0839846507,-0.1168302447,0.0744886994,0.0728317648,-0.0151042212,0.0306620449,-0.0412621982,-0.1153898239,0.2035180926,0.0563123114,-0.056022089]],"hackathon_name":"BrumHack 4.0","index":827,"project_description":"Spirograph generation using user inputted machine learningMachine learning is cool, so we thought we'd make some pretty patterns with it!Generates spirographs and incrementally improves based on users' input.Scala for the backend, and HTML5 canvasDNS PROPAGATION AT UNI IS TERRIBLE. PLEASE WORK.\"HTML5 Canvas drawing\", \"learning scala at 4am\", \"forcing Jack to learn scala at 4am\".ScalaUpdating the DNS. HTTPS.BrumHack 4.0Front-end, actually drawing the spirographs to the screen at the end, making sure the program communicated with the API correctly.I organised the team and wrote scala very early in the morning.Made a generic user-rating powered genetic algorithm written in Scala, using Typesafe's Play! Framework. Also encouraged Jack to learn Scala very early in the morning.Tom Gardiner\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:48 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Spirographinator","project_tags":["scala","javascript","jquery","html5","postgresql"],"project_url":"https:\/\/devpost.com\/software\/spirographinator","keywords":"scala,learning,canvas,dns,html,work,generates,input,incrementally,improves,https,drawing,forcing,jack,cool,challenges,built,based,backend,inspiration"},{"level_0":828,"hack_vector":[[0.16978921,-0.1540649086,-0.0121717136,0.0672719926,-0.0345894657,0.1586789638,0.1993408203,-0.0767269433,-0.0259788278,-0.0063584354,0.0153282452,0.002614737,0.1395780146,-0.0727535114,0.0406016409,0.0217736047,0.2443886846,0.0123621263,0.0548434108,0.0956764966,-0.2189882547,0.0393390879,-0.0488393307,-0.032530643,0.1615519226,-0.0223270189,-0.0452905707,-0.1915887445,0.0050889309,-0.0705886036,0.0577269644,-0.1309391409,0.0579653606,-0.0822662935,-0.0429514311,-0.0223909952,0.1382348984,-0.1246561706,-0.0378099009,0.0308932886,0.0526667349,-0.1554764509,-0.1691066623,-0.0434245355,-0.0003011199,-0.0332823917,0.0242735408,-0.0387774818,-0.0337600335,-0.1848957241,-0.081906952,0.0245064367,-0.1248666048,-0.0209042355,-0.1436781734,0.1552337408,-0.1463249028,0.0343852043,0.0016185874,-0.011288425,-0.0403911322,0.0222751647,0.0788156837,0.0599170476,0.1129209623,-0.0194596145,-0.1385651678,-0.1421928108,0.0209079683,0.033302635,0.0768942758,-0.036631003,0.0286620017,-0.1488020569,-0.0311492793,-0.1111178994,0.1951991469,0.0201495551,0.0629528239,-0.1307628155,0.1286024153,0.1510026157,0.0331957974,0.1655183285,0.1448603421,0.1775960922,-0.1351415217,0.0113367466,0.0039222427,-0.0891300812,-0.1010183915,0.0905854702,0.0716879889,-0.0091898227,0.0622948296,-0.0607947744,-0.0841504037,0.1744357795,0.0601980351,-0.0512384474]],"hackathon_name":"BrumHack 4.0","index":828,"project_description":"Arduino controls 8x8 Led Matrix for Pong with ultrasonic controllerTheDeviceAllan Alcorn.Can play 2 player pong on 8x8 Led matrix controlled with ultrasonic sensors and displays scores on 2nd 8x8 Led matrix.Connecting stuff together then programming stuff for it.2 arduinos died. Buttons are hard for some reason. Led referencing is difficultWe finished pong kind of.Dot matrix display control.A plethora of ultra pong sequels.BrumHack 4.0David Mason\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:45 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Ultra Pong","project_tags":["arduino"],"project_url":"https:\/\/devpost.com\/software\/ultra-pong","keywords":"pong,led,matrix,ultra,stuff,ultrasonic,dot,displays,display,difficult,died,controlled,hard,control,connecting,challenges,buttons,built,arduinos,allan"},{"level_0":829,"hack_vector":[[0.170464322,-0.1430264115,-0.0198802184,0.0713014379,-0.0276604481,0.1538209766,0.1959763169,-0.0491165854,-0.0359807722,-0.0059325374,0.0130233234,-0.0191099644,0.1594353169,-0.067923218,0.0557019599,0.0190077797,0.2235453725,-0.0023715072,0.0481243581,0.1092627421,-0.2352422625,0.0045453925,-0.0549099296,-0.0121366354,0.1647858024,-0.032469701,-0.0426137224,-0.1823597699,-0.0199604072,-0.0789670348,0.0796561837,-0.105177179,0.0456775464,-0.0684923306,-0.0441767685,-0.0057744994,0.1147120222,-0.1175911129,-0.0323343948,0.0275117718,0.0627157167,-0.1221682653,-0.1556417346,-0.0196325444,0.0129486481,-0.0524724796,0.0209579635,-0.0545411482,-0.0182488151,-0.2110426277,-0.0907147601,0.007735623,-0.1162993237,-0.011627743,-0.1679446846,0.1680111587,-0.1585509777,0.0205148198,-0.0052695572,-0.0310345553,-0.0417521968,0.0423094593,0.0622926168,0.0498390384,0.1291619241,-0.0092929555,-0.1346024871,-0.1442446709,0.0089394804,0.0067460509,0.0524863899,-0.0198674034,0.0083196247,-0.1298251599,-0.023268085,-0.0872270018,0.2120888531,-0.0036110918,0.0387718044,-0.1447193623,0.1149778366,0.157207191,0.030243583,0.1485739797,0.1353628784,0.2088601589,-0.0993496776,0.0194620453,-0.0070850598,-0.0865060166,-0.1157112271,0.098640345,0.0700350553,-0.0088085765,0.0243449993,-0.03915295,-0.1177669615,0.2109244317,0.0582919605,-0.0561064817]],"hackathon_name":"BrumHack 4.0","index":829,"project_description":"Destroy planets!We wanted to try new things and like VRLook at planets and it destroys them, regenerates new planets each levelC# and Unity with OculusNever used Unity or programmed in C# before - it was a learning curve!Getting a product that works!How to use Unity and C# for VR gamesMake the planets move, more levels, better UIRevolutionUCI worked on various parts across the projectLily Elshaktori\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:48 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Star Killer","project_tags":["oculus-gear-vr"],"project_url":"https:\/\/devpost.com\/software\/planet-destroyer","keywords":"unity,planets,vr,new,works,inspiration,like,levels,level,learning,learned,games,getting,make,destroys,destroyer,curve,challenges,built,better"},{"level_0":830,"hack_vector":[[0.1346630901,-0.1107241213,-0.028555939,0.0336271487,-0.0476358123,0.1405781955,0.1956273764,-0.0286502466,0.0116161741,-0.0528641641,0.0140826153,-0.0338613428,0.1197039708,-0.0571630858,0.0458661988,0.044456169,0.2547569871,0.0141292736,0.0299655441,0.1322801113,-0.2371720076,0.0005749749,-0.0440162309,-0.0331951082,0.1204021201,-0.0216625202,-0.0309804734,-0.1660795957,0.000639955,-0.1106288955,0.0297920108,-0.1076916754,0.0407382995,-0.0694785416,-0.0004048035,-0.0130621353,0.1249378324,-0.1405733228,-0.0418583825,0.0217425507,0.0365440957,-0.1269688457,-0.1661420316,-0.0550715402,0.035980463,-0.0900070965,0.0260375328,-0.0392739661,-0.0223193653,-0.2149402052,-0.114526242,0.0131211169,-0.0972092748,-0.0518018156,-0.1840780675,0.1700900644,-0.1252465248,-0.0166996252,0.0366651863,-0.0714665502,-0.0674412325,0.0180717055,0.0709572509,0.0481678545,0.110149093,0.0087093487,-0.1175859198,-0.1638368517,0.0437753573,0.0265374016,0.0664267763,-0.0467372462,0.0064742635,-0.1277506053,-0.0187982041,-0.1177397519,0.1765075177,0.0128198834,0.0392013155,-0.1392307132,0.0944669694,0.1711534262,0.0218010321,0.1773218811,0.1175197735,0.17911309,-0.1351424158,-0.0128792282,-0.0357702896,-0.0947416499,-0.1306503713,0.0779867619,0.0785845742,-0.0199287087,0.0121146236,-0.0199527256,-0.1358109713,0.2245377004,0.0349194631,-0.0777546838]],"hackathon_name":"BrumHack 4.0","index":830,"project_description":"Like food? Can't decide what to have? Eat Spin is here for youThe dire situation everyone fears of is of course, being unable to decide what cuisine to order with friends. We have devised the end-all solution for all of your nutritional needs.Create a room with your post code and share it with your friends, be prepared though, after the countdown you will be able to frantically tap for your prefered cuisine of choice, weighting the results as to which JustEat page you will be redirected to!InternetCodeThingsCodeThingsBrumHack 4.0backendLiam Sorta\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:44 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Eat Spin","project_tags":["node.js","javascript","amazon-web-services","jquery"],"project_url":"https:\/\/devpost.com\/software\/eat-spin-tm2v45","keywords":"code,cuisine,things,friends,devised,inspiration,frantically,fears,everyone,end,eat,dire,weighting,decide,justeat,create,course,countdown,choice,challenges"},{"level_0":831,"hack_vector":[[0.1424044073,-0.1547264308,0.0178800784,0.0986012146,-0.0592493378,0.15413858,0.1601528525,-0.0515410155,-0.0366585404,-0.0302884858,-0.0153738754,0.0651731789,0.1203845665,-0.080122672,-0.0214262027,0.1042085737,0.2623400986,0.0467700735,0.0505430959,0.0631405041,-0.1631930023,-0.007686561,-0.0524435639,-0.072007142,0.179460302,-0.0125284186,-0.0884446129,-0.1633280516,0.0488351248,-0.0742516145,0.0074336766,-0.0778917223,0.0885202587,-0.033272285,-0.0431643128,0.0292653944,0.1503417045,-0.0870267153,0.0268918648,0.1197877973,0.057532791,-0.1387314498,-0.185401395,-0.0272504725,-0.0767509267,-0.0524325259,0.0561245754,0.0127388639,-0.0090700611,-0.1677948534,0.0166015048,0.042509459,-0.0993690267,-0.0778651163,-0.0626541674,0.1361938417,-0.1617879122,0.0934475586,-0.0273575969,0.0939752683,0.0034838284,0.0482321195,0.037687812,0.0798729584,0.1474326551,-0.0688803494,-0.1443039924,-0.1811869144,0.0076710298,-0.0035698414,0.0574681498,-0.0200147219,-0.033551015,-0.1470060796,-0.0979361162,-0.0368053503,0.1891611665,0.035616342,0.1199881583,-0.1425871551,0.0998193547,0.1464520544,-0.0046246238,0.1161172837,0.1646087468,0.1335212737,-0.151294902,0.1048929915,0.0143443327,-0.1327724457,-0.0534735247,0.120206356,-0.0025151982,0.0486329235,0.1050242335,-0.1160004362,-0.0379185639,0.1100745201,0.1368243545,-0.029270947]],"hackathon_name":"BrumHack 4.0","index":831,"project_description":"A 'smashing' gameStuffBrumHack 4.0Sam Kirsten\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:43 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Phone Gladiator!","project_tags":["javascript","socket.io","node.js","digitalocean"],"project_url":"https:\/\/devpost.com\/software\/phone-gladiator","keywords":"stuff"},{"level_0":832,"hack_vector":[[0.1511974335,-0.1558627188,0.0015367772,0.0839644596,-0.0452045538,0.160725832,0.1880232245,-0.0624393746,-0.0418336466,-0.0216182359,-0.0084826369,0.0364157185,0.130982995,-0.0796051472,-0.006467062,0.0710155368,0.2534657419,0.0245005544,0.0474726409,0.0814323798,-0.1985536516,0.009784543,-0.041656442,-0.0477212854,0.1826466471,-0.0194414537,-0.0724155456,-0.1721208394,0.0231663492,-0.078082867,0.0377465673,-0.104192853,0.0741830394,-0.0386104286,-0.0496734269,0.0018963061,0.1513960958,-0.1040912941,0.0114049427,0.0849992782,0.0697736517,-0.1525588036,-0.1805015057,-0.0410473719,-0.0373752601,-0.0471924618,0.0409790166,-0.0068201935,-0.0201756097,-0.1882590652,-0.0218095127,0.0378856324,-0.1079463288,-0.037466459,-0.1200913042,0.1472646147,-0.1761694849,0.0587148853,-0.0202944838,0.0426118448,-0.0223353002,0.0365714505,0.0485894866,0.0590615869,0.1431568414,-0.044253163,-0.1389258206,-0.1665747762,0.0191039592,0.0180083718,0.0612016208,-0.0318287127,-0.0121873328,-0.1413297355,-0.0659122542,-0.0644394904,0.1860619634,0.0281985663,0.0935645029,-0.1431156993,0.1121296212,0.1538028419,0.0043700598,0.1500899047,0.1621782035,0.1669932455,-0.1498611122,0.0651553869,0.0078334436,-0.11661461,-0.081988968,0.1113203913,0.0271861553,0.0226391815,0.0698933303,-0.079199627,-0.0702970847,0.1446747631,0.1105224639,-0.0296271183]],"hackathon_name":"BrumHack 4.0","index":832,"project_description":"A small tech demo for a Java 2d game in SwingMathsEntertainJava PlzSleepIt made Brandon smileSleep is for the weakPi is infinite and seemingly random, who knowsBrumHack 4.0Aaron Tello-Wharton\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:41 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Pi","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/pi","keywords":"sleep,pi,weak,learned,brandon,built,challenges,entertain,infinite,inspiration,java,knows,made,smile,maths,next,plz,proud,ran,random"},{"level_0":833,"hack_vector":[[0.1562158614,-0.1474191397,0.0077604325,0.0879386887,-0.0474525839,0.1658893079,0.1685069054,-0.0495790839,-0.0264285058,-0.0293016639,0.0040867068,0.0027836433,0.1448471695,-0.1010171697,0.0121080251,0.0832348615,0.2661472857,0.0375039801,0.0525522716,0.0750108436,-0.1915823817,0.0131031424,-0.056163311,-0.0692797899,0.1639898419,-0.039386861,-0.0720937327,-0.194491744,0.0168868024,-0.0681041107,0.0283894036,-0.0901376978,0.0818334669,-0.0613947771,-0.036982093,0.0207544938,0.146570161,-0.1113773286,-0.0012262091,0.0802722499,0.0505015701,-0.148260951,-0.2008505613,-0.0131383445,-0.0346839316,-0.0414727256,0.0599525608,-0.0141121941,-0.0194736999,-0.1902451813,-0.0448563732,0.0324634798,-0.1052213088,-0.0680281594,-0.1144246906,0.153592363,-0.1384868473,0.067181319,-0.0022134043,0.0413299873,-0.0197119098,0.0375343822,0.0571859516,0.0835843608,0.1364182085,-0.0375968032,-0.1262158006,-0.1706779748,0.0060985461,-0.0037323753,0.074485369,-0.0304984134,-0.0065576457,-0.1517065167,-0.0518804602,-0.0622998662,0.1997505724,0.0182297491,0.0864279345,-0.135956347,0.1254441589,0.1676118374,0.0129028969,0.1347630918,0.1377451122,0.1476010531,-0.1292027533,0.0628801137,0.0088994512,-0.1225071028,-0.0713372454,0.0973804966,0.0066628959,0.0158539228,0.0897619426,-0.0929011554,-0.069379203,0.1526353508,0.1084385514,-0.0589588359]],"hackathon_name":"BrumHack 4.0","index":833,"project_description":"Find people's personality form what they spendBrumHack projectBrumHack 4.0Worked on back-end, creating algorithms to process data.Luxman Elangeswaralingam\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:36 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MoneyTalks","project_tags":["java","android"],"project_url":"https:\/\/devpost.com\/software\/moneytalks-z65d4p","keywords":"project,moneytalks,brumhack"},{"level_0":834,"hack_vector":[[0.1424648166,-0.1060632169,-0.0190076046,0.042688489,-0.0137206689,0.1369414926,0.2103609145,-0.0416072085,-0.0305659734,-0.0066875434,0.0159456395,-0.0509238243,0.1413738728,-0.0645261556,0.0460639,0.0158080813,0.2216519117,-0.0103907874,0.043155957,0.135554567,-0.2373095751,0.0476175845,-0.0365996398,-0.0030750351,0.1430474371,-0.0240865685,-0.0355636589,-0.1887256652,-0.0245629475,-0.0874993354,0.0790370479,-0.1234737262,0.0457525067,-0.0815143809,-0.0130198067,-0.0207053479,0.1224362031,-0.1282224208,-0.0371576659,-0.008289949,0.0473016277,-0.1624930054,-0.1622891873,-0.0486736782,0.0459345058,-0.042830281,-0.0000396854,-0.0722061694,-0.019657312,-0.2036884576,-0.1190978661,0.0210655648,-0.1142181903,0.0119380727,-0.2075557858,0.1595165282,-0.1600709856,-0.0138226291,0.0329813659,-0.0930429846,-0.0663254112,0.0267637949,0.0758726299,0.0397185981,0.1092759594,0.0177996177,-0.1089853719,-0.1369950622,0.0371191613,0.0333651267,0.0690537617,-0.0498235114,0.0299937166,-0.1146702617,0.0168142095,-0.1166431755,0.1667079329,-0.0149148805,0.0305861291,-0.130947873,0.1066570356,0.1465845555,0.0575779267,0.1665166169,0.1089556366,0.1955962181,-0.111884363,-0.032700114,-0.0168654658,-0.0768137872,-0.1358889639,0.0670067742,0.0814799219,-0.038435977,-0.007557882,0.0069583808,-0.1502286345,0.2014707923,0.0250826906,-0.0592709966]],"hackathon_name":"BrumHack 4.0","index":834,"project_description":"VR Earth viewer controlled by gestures to rotate the globe and enter photo spheres at locationsThe project allows you to view the globe of Earth in space inside virtual reality, with interesting locations marked on the surface, with names and miniature photos. The globe can be rotated by hand gestures and locations can be selected by looking at them. Another gesture allows entering a selected location to see the inside of a photo sphere.We used Unity as the engine, Oculus Rift for the virtual reality and the Myo wristband for gestures.There were certain technological issues with the Rift and Myo working together on an old Windows laptop.It kinda works, who would have thought.You need a better computer for virtual reality and prepare earlier.BrumHack 4.0I worked on the implementation of the Myo using its SDK for Unity. Our purpose was to rotate the globe and navigate through different pictures using the Myo. Furthermore, I helped and fixed C# scripts in general for the virtualisation. At the end, I was able to run the app in a macbook pro without any evident lag.Marcin Wisniowski\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:37 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Globulus Rift","project_tags":["unity","oculus"],"project_url":"https:\/\/devpost.com\/software\/globulus-rift","keywords":"reality,virtual,selected,gestures,locations,inside,rift,globe,myo,allows,computer,earlier,looking,location,learned,laptop,kinda,issues,interesting,another"},{"level_0":835,"hack_vector":[[0.1386046559,-0.1387177557,0.0003246641,0.0809055641,-0.0393916145,0.1584252119,0.1877371222,-0.0493626297,-0.0325845517,-0.0454542413,-0.0033245971,0.0178433694,0.1275860965,-0.0772300363,-0.0035405413,0.0734120384,0.2763130963,0.0290043764,0.0444232114,0.1036290377,-0.1993950158,0.0183514953,-0.0386503711,-0.0544094779,0.1645496637,-0.022453364,-0.0698804185,-0.1906809509,0.0098115178,-0.0868065953,0.040195968,-0.0961783677,0.0810522661,-0.0552382842,-0.0260237511,0.0084716044,0.1513335556,-0.1096512154,0.0081534917,0.0713626668,0.055457186,-0.1561800987,-0.1891030371,-0.0386836641,-0.0212174449,-0.0544529967,0.0376604795,-0.014028674,-0.0222260728,-0.2088744193,-0.0431209356,0.0400670581,-0.1009900942,-0.0547010526,-0.1256087124,0.1470135152,-0.1622973382,0.0440025665,0.0071551744,0.0089489231,-0.0345326327,0.0392279178,0.0482517146,0.0535610355,0.1337723434,-0.0291750394,-0.1284478009,-0.1740055233,0.0195354521,0.009001106,0.0632743686,-0.0390812904,-0.0004076578,-0.1458654702,-0.0583412275,-0.06948293,0.1846561432,0.0059960107,0.0923700854,-0.1424235702,0.1054267213,0.153497681,0.0139353285,0.1600539833,0.1449251026,0.1623638123,-0.1470648348,0.0486252606,-0.0116406968,-0.1140356511,-0.0986903533,0.1084889099,0.0230733883,0.0102314707,0.0510986857,-0.0708706528,-0.0862068683,0.1603611708,0.0966661721,-0.0429716222]],"hackathon_name":"BrumHack 4.0","index":835,"project_description":"Because who wants to play ordinary Jenga?The LeapMotion allows the player to directly interact with the tower.. can you keep a steady hand?BrumHack 4.0I created the entire project aloneNick Jennett\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:39 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Gesture Control Jenga","project_tags":["c#"],"project_url":"https:\/\/devpost.com\/software\/brumhack2016","keywords":"tower,steady,remove,player,many,leapmotion,keep,interact,hand,falls,directly,brumhack,blocks,allows"},{"level_0":836,"hack_vector":[[0.1411493421,-0.0979978591,-0.0417114496,0.0262294933,-0.0337190926,0.1385982633,0.2019003183,-0.0224666055,0.027291663,-0.0491859391,0.0046861721,-0.0556880124,0.1134296134,-0.0525873005,0.0572284944,0.0163182467,0.2383534312,0.036474932,0.0187645201,0.1339657009,-0.2439377606,0.0038142467,-0.0443185605,-0.0344840176,0.1040140092,-0.0003166773,-0.0165783241,-0.1751343757,-0.0125927096,-0.1158669889,0.028978575,-0.1275907606,0.0389426462,-0.0984629393,-0.0004350641,-0.0353280082,0.1063291803,-0.1575018466,-0.084999986,0.0006317075,0.0213580634,-0.1244431958,-0.1298469007,-0.0531530529,0.0540748537,-0.0951801538,0.0161094181,-0.0473896004,-0.0509242453,-0.2060574442,-0.1450210661,-0.0022588465,-0.0919866711,-0.0506625772,-0.15582636,0.1735930443,-0.1008481383,-0.0329036787,0.0324473493,-0.095376879,-0.0753507838,0.016030943,0.0798539519,0.03388419,0.0967184156,0.0190627687,-0.128140375,-0.1366568655,0.0447018556,0.0414282791,0.0598459654,-0.0548418686,0.0255181286,-0.1320664138,0.0014630485,-0.1334168315,0.1718036532,0.0163539723,0.0189945921,-0.141286701,0.1058005467,0.1654110104,0.0542854965,0.1706279218,0.0937146619,0.1825846881,-0.1064389944,-0.0115943896,-0.0304248091,-0.0729063526,-0.1330504417,0.0688830316,0.0924843848,-0.0401091203,0.0048709009,-0.0034493664,-0.1533395201,0.2472742498,0.0000646626,-0.0906408355]],"hackathon_name":"BrumHack 4.0","index":836,"project_description":"Emotion detection platform that uses gifs to cheer you upWelcome pageAnalising...You sad? Not any more!Have you ever had a bad day? One of those days in which you only want to eat chocolate ice cream? Those days are over, with ReactGif, we will analyse your face and show you funny stuff until you don't feel sad any more.ReactGif analyse your face emotions and with a complex algorithm determines whether you are happy or not. In case ReactGif detects you are not feeling good, it will display funny stuff until it detects you are happy.ReactGif uses the Google Cloud vision API to detect your face and obtain values for different kinds of emotions. ReactGif also uses Flask to create the server and OpenCV to take tllehe picture.BrumHack 4.0victor perez\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 06:38 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ReactGif","project_tags":["python","html5","javascript"],"project_url":"https:\/\/devpost.com\/software\/reactgif","keywords":"reactgif,funny,face,algorithm,stuff,happy,emotions,detects,days,gifs,cloud,google,vision,uses,analyse,api,case,different,also,flask"},{"level_0":837,"hack_vector":[[0.1590299457,-0.11272531,-0.0203443021,0.0664068535,-0.0196124464,0.1401446462,0.1999488026,-0.0391566381,-0.0385368615,-0.0258373357,0.0164932664,-0.0398075767,0.1492061466,-0.063110888,0.0422521196,-0.0154576804,0.207617268,-0.0152621744,0.057890214,0.133343786,-0.235005334,0.0206570961,-0.0402786806,0.0057317838,0.1508148313,-0.0227768756,-0.0390961841,-0.1713848412,-0.0321103558,-0.0994085968,0.0705016032,-0.1117616892,0.0381178223,-0.0635819286,-0.0074696271,-0.0213426128,0.1182977259,-0.1251269579,-0.0489823632,0.0055240775,0.0868298337,-0.1291654408,-0.155267626,-0.0390105434,0.0366161019,-0.0516444594,0.0086582592,-0.0771180615,-0.0233991593,-0.2084284127,-0.1177036762,0.0228543896,-0.1102315336,0.0124500999,-0.2101661265,0.1644955873,-0.1549990028,-0.022250779,0.0237226058,-0.0863994509,-0.0573250353,0.0272261277,0.0687975958,0.0230573621,0.1259779185,0.0258816797,-0.1216101423,-0.136228323,0.0179059971,0.0302026924,0.0563757792,-0.0306022372,0.0086908974,-0.1174146309,0.0146359773,-0.0981175676,0.1847046465,0.0012598202,0.0181763917,-0.1363499314,0.0970416367,0.1473505348,0.0401753895,0.1570442766,0.1249221414,0.2124731094,-0.0952469185,-0.0323683806,-0.0233123619,-0.0763354972,-0.1251959503,0.0773489997,0.0890445337,-0.0217114966,-0.0106457481,-0.0135326916,-0.1564761549,0.2301682234,0.0228045452,-0.0487014018]],"hackathon_name":"BrumHack 4.0","index":837,"project_description":"The best experience of punching Steve, using your handsA sunny day in Birmingham inspired us to create a fully immersive game using the latest technology including the Oculus Rift, Muse Myo and Leap Motion. After many hours we gave up on using the Muse after finding it only works on Android or iOS. Several hours later the Rift decided it wouldn't work either, leaving us with only the Leap Motion.Stressfully, we continued and the Oculus Rift, mind-controlled game was reduced to a steve punching bag simulator. This actually turned out to be quite fun. As-well as being able to punch steve you also have the ability to slap him or alternatively look at a selection of 2D sunflowers!I also learnt how to create a game and had a complete lack of sleep.BrumHack 4.0Michael Senior\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 06:23 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Me vs Steve","project_tags":["unity","leap-motion"],"project_url":"https:\/\/devpost.com\/software\/me-vs-steve","keywords":"rift,game,motion,oculus,using,us,leap,also,hours,create,steve,muse,fully,gave,fun,either,immersive,including,finding,works"},{"level_0":838,"hack_vector":[[0.1569942832,-0.0840199143,-0.0015890213,0.0603804439,-0.0237565879,0.1707083136,0.2127254456,-0.0614896528,-0.0311030317,-0.0107602952,0.0366606154,-0.039290864,0.1352108121,-0.0696309656,0.0370622054,0.0043493663,0.2333794236,0.000544311,0.0663544238,0.1138823852,-0.2287237495,0.0296211075,-0.0572122857,-0.0127123343,0.1130179316,-0.0187136903,-0.0369896516,-0.1792179346,-0.0143470578,-0.1056853831,0.0664877445,-0.1039215028,0.0546419546,-0.0806607679,-0.0068971999,-0.0104753599,0.1362584829,-0.1240222901,-0.0468488149,0.011834315,0.0576916263,-0.1283462197,-0.1531157345,-0.0354740284,0.0405507647,-0.0581636615,0.0148984194,-0.0570556559,-0.0155308768,-0.2176238894,-0.1067672819,0.0304406695,-0.1136144847,0.0020061256,-0.192806989,0.1274217218,-0.1578882784,-0.0078075239,0.042367097,-0.0743846074,-0.0356595926,0.0224766452,0.0919954479,0.0402054228,0.1208890304,0.0004184238,-0.1126341224,-0.1389939934,0.025549151,0.0301667415,0.0529822744,-0.0306631792,0.0079033142,-0.1327299327,-0.0034974036,-0.1304451525,0.1915290207,0.0226789415,0.0440781713,-0.1511704326,0.105240196,0.1457332075,0.0364495814,0.1643802375,0.1351373196,0.1878497154,-0.1135553494,-0.0267997067,-0.0403150022,-0.0985445082,-0.1348207593,0.0719811097,0.0807653815,-0.0257725492,0.0116951531,-0.0025543913,-0.135178104,0.2089312971,0.0384306572,-0.067021735]],"hackathon_name":"BrumHack 4.0","index":838,"project_description":"An app which discovers your nearest iBeacon and notifies you when you go to far.An app which discovers your nearest iBeacon and notifies you when you go to far. The app displays an image for each item and the range from the device being used.This can be applied as both a security feature and\/or an exhibition feature.Using Android Studio and Java, along with the estimote iBeacons.Android studio was a bit of challenge, as well as java.We learnt about Java and the challenges of Android Studio, as well as the inaccuracy of bluetooth.BrumHack 4.0Oliver Vlaytchev\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 05:27 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ComeFindMe","project_tags":["estimote","android","java"],"project_url":"https:\/\/devpost.com\/software\/comefindme","keywords":"java,studio,android,well,app,feature,challenges,exhibition,estimote,displays,discovers,device,challenge,comefindme,built,bluetooth,bit,applied,along,far"},{"level_0":839,"hack_vector":[[0.1562158614,-0.1474191397,0.0077604325,0.0879386887,-0.0474525839,0.1658893079,0.1685069054,-0.0495790839,-0.0264285058,-0.0293016639,0.0040867068,0.0027836433,0.1448471695,-0.1010171697,0.0121080251,0.0832348615,0.2661472857,0.0375039801,0.0525522716,0.0750108436,-0.1915823817,0.0131031424,-0.056163311,-0.0692797899,0.1639898419,-0.039386861,-0.0720937327,-0.194491744,0.0168868024,-0.0681041107,0.0283894036,-0.0901376978,0.0818334669,-0.0613947771,-0.036982093,0.0207544938,0.146570161,-0.1113773286,-0.0012262091,0.0802722499,0.0505015701,-0.148260951,-0.2008505613,-0.0131383445,-0.0346839316,-0.0414727256,0.0599525608,-0.0141121941,-0.0194736999,-0.1902451813,-0.0448563732,0.0324634798,-0.1052213088,-0.0680281594,-0.1144246906,0.153592363,-0.1384868473,0.067181319,-0.0022134043,0.0413299873,-0.0197119098,0.0375343822,0.0571859516,0.0835843608,0.1364182085,-0.0375968032,-0.1262158006,-0.1706779748,0.0060985461,-0.0037323753,0.074485369,-0.0304984134,-0.0065576457,-0.1517065167,-0.0518804602,-0.0622998662,0.1997505724,0.0182297491,0.0864279345,-0.135956347,0.1254441589,0.1676118374,0.0129028969,0.1347630918,0.1377451122,0.1476010531,-0.1292027533,0.0628801137,0.0088994512,-0.1225071028,-0.0713372454,0.0973804966,0.0066628959,0.0158539228,0.0897619426,-0.0929011554,-0.069379203,0.1526353508,0.1084385514,-0.0589588359]],"hackathon_name":"BrumHack 4.0","index":839,"project_description":"Find people's personality form what they spendBrumHack projectBrumHack 4.0Worked on back-end, creating algorithms to process data.Luxman Elangeswaralingam\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:36 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MoneyTalks","project_tags":["java","android"],"project_url":"https:\/\/devpost.com\/software\/moneytalks-z65d4p","keywords":"project,moneytalks,brumhack"},{"level_0":840,"hack_vector":[[0.1424648166,-0.1060632169,-0.0190076046,0.042688489,-0.0137206689,0.1369414926,0.2103609145,-0.0416072085,-0.0305659734,-0.0066875434,0.0159456395,-0.0509238243,0.1413738728,-0.0645261556,0.0460639,0.0158080813,0.2216519117,-0.0103907874,0.043155957,0.135554567,-0.2373095751,0.0476175845,-0.0365996398,-0.0030750351,0.1430474371,-0.0240865685,-0.0355636589,-0.1887256652,-0.0245629475,-0.0874993354,0.0790370479,-0.1234737262,0.0457525067,-0.0815143809,-0.0130198067,-0.0207053479,0.1224362031,-0.1282224208,-0.0371576659,-0.008289949,0.0473016277,-0.1624930054,-0.1622891873,-0.0486736782,0.0459345058,-0.042830281,-0.0000396854,-0.0722061694,-0.019657312,-0.2036884576,-0.1190978661,0.0210655648,-0.1142181903,0.0119380727,-0.2075557858,0.1595165282,-0.1600709856,-0.0138226291,0.0329813659,-0.0930429846,-0.0663254112,0.0267637949,0.0758726299,0.0397185981,0.1092759594,0.0177996177,-0.1089853719,-0.1369950622,0.0371191613,0.0333651267,0.0690537617,-0.0498235114,0.0299937166,-0.1146702617,0.0168142095,-0.1166431755,0.1667079329,-0.0149148805,0.0305861291,-0.130947873,0.1066570356,0.1465845555,0.0575779267,0.1665166169,0.1089556366,0.1955962181,-0.111884363,-0.032700114,-0.0168654658,-0.0768137872,-0.1358889639,0.0670067742,0.0814799219,-0.038435977,-0.007557882,0.0069583808,-0.1502286345,0.2014707923,0.0250826906,-0.0592709966]],"hackathon_name":"BrumHack 4.0","index":840,"project_description":"VR Earth viewer controlled by gestures to rotate the globe and enter photo spheres at locationsThe project allows you to view the globe of Earth in space inside virtual reality, with interesting locations marked on the surface, with names and miniature photos. The globe can be rotated by hand gestures and locations can be selected by looking at them. Another gesture allows entering a selected location to see the inside of a photo sphere.We used Unity as the engine, Oculus Rift for the virtual reality and the Myo wristband for gestures.There were certain technological issues with the Rift and Myo working together on an old Windows laptop.It kinda works, who would have thought.You need a better computer for virtual reality and prepare earlier.BrumHack 4.0I worked on the implementation of the Myo using its SDK for Unity. Our purpose was to rotate the globe and navigate through different pictures using the Myo. Furthermore, I helped and fixed C# scripts in general for the virtualisation. At the end, I was able to run the app in a macbook pro without any evident lag.Marcin Wisniowski\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:37 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Globulus Rift","project_tags":["unity","oculus"],"project_url":"https:\/\/devpost.com\/software\/globulus-rift","keywords":"reality,virtual,selected,gestures,locations,inside,rift,globe,myo,allows,computer,earlier,looking,location,learned,laptop,kinda,issues,interesting,another"},{"level_0":841,"hack_vector":[[0.1386046559,-0.1387177557,0.0003246641,0.0809055641,-0.0393916145,0.1584252119,0.1877371222,-0.0493626297,-0.0325845517,-0.0454542413,-0.0033245971,0.0178433694,0.1275860965,-0.0772300363,-0.0035405413,0.0734120384,0.2763130963,0.0290043764,0.0444232114,0.1036290377,-0.1993950158,0.0183514953,-0.0386503711,-0.0544094779,0.1645496637,-0.022453364,-0.0698804185,-0.1906809509,0.0098115178,-0.0868065953,0.040195968,-0.0961783677,0.0810522661,-0.0552382842,-0.0260237511,0.0084716044,0.1513335556,-0.1096512154,0.0081534917,0.0713626668,0.055457186,-0.1561800987,-0.1891030371,-0.0386836641,-0.0212174449,-0.0544529967,0.0376604795,-0.014028674,-0.0222260728,-0.2088744193,-0.0431209356,0.0400670581,-0.1009900942,-0.0547010526,-0.1256087124,0.1470135152,-0.1622973382,0.0440025665,0.0071551744,0.0089489231,-0.0345326327,0.0392279178,0.0482517146,0.0535610355,0.1337723434,-0.0291750394,-0.1284478009,-0.1740055233,0.0195354521,0.009001106,0.0632743686,-0.0390812904,-0.0004076578,-0.1458654702,-0.0583412275,-0.06948293,0.1846561432,0.0059960107,0.0923700854,-0.1424235702,0.1054267213,0.153497681,0.0139353285,0.1600539833,0.1449251026,0.1623638123,-0.1470648348,0.0486252606,-0.0116406968,-0.1140356511,-0.0986903533,0.1084889099,0.0230733883,0.0102314707,0.0510986857,-0.0708706528,-0.0862068683,0.1603611708,0.0966661721,-0.0429716222]],"hackathon_name":"BrumHack 4.0","index":841,"project_description":"Because who wants to play ordinary Jenga?The LeapMotion allows the player to directly interact with the tower.. can you keep a steady hand?BrumHack 4.0I created the entire project aloneNick Jennett\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 07:39 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Gesture Control Jenga","project_tags":["c#"],"project_url":"https:\/\/devpost.com\/software\/brumhack2016","keywords":"tower,steady,remove,player,many,leapmotion,keep,interact,hand,falls,directly,brumhack,blocks,allows"},{"level_0":842,"hack_vector":[[0.1411493421,-0.0979978591,-0.0417114496,0.0262294933,-0.0337190926,0.1385982633,0.2019003183,-0.0224666055,0.027291663,-0.0491859391,0.0046861721,-0.0556880124,0.1134296134,-0.0525873005,0.0572284944,0.0163182467,0.2383534312,0.036474932,0.0187645201,0.1339657009,-0.2439377606,0.0038142467,-0.0443185605,-0.0344840176,0.1040140092,-0.0003166773,-0.0165783241,-0.1751343757,-0.0125927096,-0.1158669889,0.028978575,-0.1275907606,0.0389426462,-0.0984629393,-0.0004350641,-0.0353280082,0.1063291803,-0.1575018466,-0.084999986,0.0006317075,0.0213580634,-0.1244431958,-0.1298469007,-0.0531530529,0.0540748537,-0.0951801538,0.0161094181,-0.0473896004,-0.0509242453,-0.2060574442,-0.1450210661,-0.0022588465,-0.0919866711,-0.0506625772,-0.15582636,0.1735930443,-0.1008481383,-0.0329036787,0.0324473493,-0.095376879,-0.0753507838,0.016030943,0.0798539519,0.03388419,0.0967184156,0.0190627687,-0.128140375,-0.1366568655,0.0447018556,0.0414282791,0.0598459654,-0.0548418686,0.0255181286,-0.1320664138,0.0014630485,-0.1334168315,0.1718036532,0.0163539723,0.0189945921,-0.141286701,0.1058005467,0.1654110104,0.0542854965,0.1706279218,0.0937146619,0.1825846881,-0.1064389944,-0.0115943896,-0.0304248091,-0.0729063526,-0.1330504417,0.0688830316,0.0924843848,-0.0401091203,0.0048709009,-0.0034493664,-0.1533395201,0.2472742498,0.0000646626,-0.0906408355]],"hackathon_name":"BrumHack 4.0","index":842,"project_description":"Emotion detection platform that uses gifs to cheer you upWelcome pageAnalising...You sad? Not any more!Have you ever had a bad day? One of those days in which you only want to eat chocolate ice cream? Those days are over, with ReactGif, we will analyse your face and show you funny stuff until you don't feel sad any more.ReactGif analyse your face emotions and with a complex algorithm determines whether you are happy or not. In case ReactGif detects you are not feeling good, it will display funny stuff until it detects you are happy.ReactGif uses the Google Cloud vision API to detect your face and obtain values for different kinds of emotions. ReactGif also uses Flask to create the server and OpenCV to take tllehe picture.BrumHack 4.0victor perez\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 06:38 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ReactGif","project_tags":["python","html5","javascript"],"project_url":"https:\/\/devpost.com\/software\/reactgif","keywords":"reactgif,funny,face,algorithm,stuff,happy,emotions,detects,days,gifs,cloud,google,vision,uses,analyse,api,case,different,also,flask"},{"level_0":843,"hack_vector":[[0.1590299457,-0.11272531,-0.0203443021,0.0664068535,-0.0196124464,0.1401446462,0.1999488026,-0.0391566381,-0.0385368615,-0.0258373357,0.0164932664,-0.0398075767,0.1492061466,-0.063110888,0.0422521196,-0.0154576804,0.207617268,-0.0152621744,0.057890214,0.133343786,-0.235005334,0.0206570961,-0.0402786806,0.0057317838,0.1508148313,-0.0227768756,-0.0390961841,-0.1713848412,-0.0321103558,-0.0994085968,0.0705016032,-0.1117616892,0.0381178223,-0.0635819286,-0.0074696271,-0.0213426128,0.1182977259,-0.1251269579,-0.0489823632,0.0055240775,0.0868298337,-0.1291654408,-0.155267626,-0.0390105434,0.0366161019,-0.0516444594,0.0086582592,-0.0771180615,-0.0233991593,-0.2084284127,-0.1177036762,0.0228543896,-0.1102315336,0.0124500999,-0.2101661265,0.1644955873,-0.1549990028,-0.022250779,0.0237226058,-0.0863994509,-0.0573250353,0.0272261277,0.0687975958,0.0230573621,0.1259779185,0.0258816797,-0.1216101423,-0.136228323,0.0179059971,0.0302026924,0.0563757792,-0.0306022372,0.0086908974,-0.1174146309,0.0146359773,-0.0981175676,0.1847046465,0.0012598202,0.0181763917,-0.1363499314,0.0970416367,0.1473505348,0.0401753895,0.1570442766,0.1249221414,0.2124731094,-0.0952469185,-0.0323683806,-0.0233123619,-0.0763354972,-0.1251959503,0.0773489997,0.0890445337,-0.0217114966,-0.0106457481,-0.0135326916,-0.1564761549,0.2301682234,0.0228045452,-0.0487014018]],"hackathon_name":"BrumHack 4.0","index":843,"project_description":"The best experience of punching Steve, using your handsA sunny day in Birmingham inspired us to create a fully immersive game using the latest technology including the Oculus Rift, Muse Myo and Leap Motion. After many hours we gave up on using the Muse after finding it only works on Android or iOS. Several hours later the Rift decided it wouldn't work either, leaving us with only the Leap Motion.Stressfully, we continued and the Oculus Rift, mind-controlled game was reduced to a steve punching bag simulator. This actually turned out to be quite fun. As-well as being able to punch steve you also have the ability to slap him or alternatively look at a selection of 2D sunflowers!I also learnt how to create a game and had a complete lack of sleep.BrumHack 4.0Michael Senior\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 06:23 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Me vs Steve","project_tags":["unity","leap-motion"],"project_url":"https:\/\/devpost.com\/software\/me-vs-steve","keywords":"rift,game,motion,oculus,using,us,leap,also,hours,create,steve,muse,fully,gave,fun,either,immersive,including,finding,works"},{"level_0":844,"hack_vector":[[0.1569942832,-0.0840199143,-0.0015890213,0.0603804439,-0.0237565879,0.1707083136,0.2127254456,-0.0614896528,-0.0311030317,-0.0107602952,0.0366606154,-0.039290864,0.1352108121,-0.0696309656,0.0370622054,0.0043493663,0.2333794236,0.000544311,0.0663544238,0.1138823852,-0.2287237495,0.0296211075,-0.0572122857,-0.0127123343,0.1130179316,-0.0187136903,-0.0369896516,-0.1792179346,-0.0143470578,-0.1056853831,0.0664877445,-0.1039215028,0.0546419546,-0.0806607679,-0.0068971999,-0.0104753599,0.1362584829,-0.1240222901,-0.0468488149,0.011834315,0.0576916263,-0.1283462197,-0.1531157345,-0.0354740284,0.0405507647,-0.0581636615,0.0148984194,-0.0570556559,-0.0155308768,-0.2176238894,-0.1067672819,0.0304406695,-0.1136144847,0.0020061256,-0.192806989,0.1274217218,-0.1578882784,-0.0078075239,0.042367097,-0.0743846074,-0.0356595926,0.0224766452,0.0919954479,0.0402054228,0.1208890304,0.0004184238,-0.1126341224,-0.1389939934,0.025549151,0.0301667415,0.0529822744,-0.0306631792,0.0079033142,-0.1327299327,-0.0034974036,-0.1304451525,0.1915290207,0.0226789415,0.0440781713,-0.1511704326,0.105240196,0.1457332075,0.0364495814,0.1643802375,0.1351373196,0.1878497154,-0.1135553494,-0.0267997067,-0.0403150022,-0.0985445082,-0.1348207593,0.0719811097,0.0807653815,-0.0257725492,0.0116951531,-0.0025543913,-0.135178104,0.2089312971,0.0384306572,-0.067021735]],"hackathon_name":"BrumHack 4.0","index":844,"project_description":"An app which discovers your nearest iBeacon and notifies you when you go to far.An app which discovers your nearest iBeacon and notifies you when you go to far. The app displays an image for each item and the range from the device being used.This can be applied as both a security feature and\/or an exhibition feature.Using Android Studio and Java, along with the estimote iBeacons.Android studio was a bit of challenge, as well as java.We learnt about Java and the challenges of Android Studio, as well as the inaccuracy of bluetooth.BrumHack 4.0Oliver Vlaytchev\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 05:27 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ComeFindMe","project_tags":["estimote","android","java"],"project_url":"https:\/\/devpost.com\/software\/comefindme","keywords":"java,studio,android,well,app,feature,challenges,exhibition,estimote,displays,discovers,device,challenge,comefindme,built,bluetooth,bit,applied,along,far"},{"level_0":845,"hack_vector":[[0.1373075396,-0.0827694163,-0.0289288145,0.0415906273,-0.0088056941,0.1328401864,0.2132983506,-0.0311904792,-0.0432994552,0.0004657572,0.0235186163,-0.0816935077,0.1518542469,-0.085476689,0.0659223273,0.002231027,0.206297636,-0.021506805,0.0353921242,0.1316565871,-0.2316783518,0.044551447,-0.0494834594,-0.0057012714,0.1187676787,-0.0353605188,-0.0328362957,-0.1819417924,-0.0329063721,-0.0681466609,0.0788461044,-0.1145299971,0.0363337472,-0.0765828192,-0.0346576236,-0.0021950169,0.1255320013,-0.129158169,-0.0452227369,-0.0144901071,0.0472108833,-0.1321728975,-0.1528331339,-0.0104150958,0.0772866532,-0.0414396413,0.0165864769,-0.0861498266,-0.0137655875,-0.2183357775,-0.1363784224,0.0142092835,-0.1060787216,0.042484384,-0.1951833814,0.1545280814,-0.1460184157,-0.018752154,0.0195964035,-0.1136228815,-0.0704580396,0.0276473388,0.0899282992,0.0475182869,0.1170706749,0.0073960866,-0.0784658492,-0.1231472492,0.0315401256,0.0146151427,0.0516444035,-0.0380787812,0.0263000075,-0.1162545606,0.0355149992,-0.1193751618,0.1790324599,-0.0147985397,0.0082390886,-0.1275405735,0.1351718009,0.1562238187,0.067939423,0.1567804664,0.096102044,0.1969207525,-0.0910362527,-0.0486568473,-0.0175748859,-0.0858385339,-0.1652840227,0.0536830053,0.0906085894,-0.0424756929,-0.0077704983,0.0148959057,-0.1515003443,0.2225514054,0.0229791421,-0.0673797578]],"hackathon_name":"StacsHack 2016","index":845,"project_description":"Program using emojis.The main menu, presenting all of the user's \"scoops\" \u2014 programs written in icecream.The console showing the result of a simple \"hello, world\" program.The custom keyboard for inputting emoji characters.A built-in guide to help users new to the language.Traditional programming languages are cumbersome, monotonous, and difficult to learn. The icecream language is different \u2014 allowing users to quickly and easily create working programs directly on their phone.The iOS app allows users to create programs written completely in emojis.The language itself is compiled on the back-end to valid swift code, which is executed and returned to the client.Unicode characters caused a variety of issues, especially working between operating systems and programming languages. We are happy that we were able to resolve most of these issues.We are especially proud of the separation of our code between the client and the server. Everything is general enough to allow us to add more features in the future.We learned a lot about the unicode system and how it is represented in various systems.We would like to expand the language to support further interaction with the user (being able to prompt them for program inputs, implement a simple drawing and animation API). We also would like to create a web front-end to allow users without an iOS device to program in icecream.Happy coding!StacsHack 2016I made the iOS app and did the graphic design.I contributed example icecream code.I worked on the emoji and unicode dictionary initially, then started to develop web app.I made the server side node engine that interprets and compiles the code coming in from the phone via a REST connection to the AWS server. All requests are logged in mongo and accessible through various endpointsNathan Gitter\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 06:50 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"icecream","project_tags":["xcode","cocoa-touch","iphone-sdk","javascript","node.js","mongodb","amazon-web-services","json","swift"],"project_url":"https:\/\/devpost.com\/software\/icecream","keywords":"create,icecream,users,language,languages,proud,programs,programming,program,like,learned,issues,client,ios,would,end,happy,especially,code,able"},{"level_0":846,"hack_vector":[[0.1461742371,-0.0830392241,-0.0137414169,0.0495637469,-0.0059373984,0.1613405496,0.2038228512,-0.0614374019,-0.0254341625,-0.0100111086,0.0272282306,-0.0806899518,0.1455715299,-0.0827544779,0.0538159497,-0.00436643,0.2175059319,-0.0146601703,0.0532721132,0.1161962077,-0.2225710601,0.051598303,-0.0571819954,-0.0063128229,0.1206347644,-0.0355112851,-0.0332022794,-0.1871982962,-0.0435518287,-0.0781944916,0.0774913505,-0.1239105985,0.0510195605,-0.0840820968,-0.0322228745,-0.0107857138,0.1336341351,-0.1263266802,-0.044940725,-0.0067559648,0.0564962439,-0.1309401989,-0.1578482985,-0.0172487274,0.0577598102,-0.034333609,0.0143546946,-0.0723082498,-0.0310788564,-0.2139523774,-0.1361505985,0.0307962671,-0.1060525626,0.031479232,-0.1937917173,0.1351608187,-0.1436783671,-0.0157740172,0.0185389798,-0.0964472666,-0.0619421229,0.0100004561,0.0911366418,0.0369534716,0.1154985577,0.0096808011,-0.0867467746,-0.1253854781,0.0248980634,0.0309595317,0.0645407438,-0.0476219468,0.0312649645,-0.1295278519,0.0327344649,-0.1058276892,0.1877618134,0.0035577822,0.0108853206,-0.1359473318,0.1276092231,0.1490170807,0.0628435388,0.1630640626,0.1026563495,0.1908935457,-0.0980167538,-0.0574807823,-0.0158023536,-0.0830147639,-0.1536882818,0.049876187,0.0917880088,-0.0389905386,-0.0024409404,0.000093066,-0.1364842057,0.2273954898,0.0214287471,-0.0768519491]],"hackathon_name":"StacsHack 2016","index":846,"project_description":"Continuous Integration meets Server Management: Your Ship Has Just Come In\u2122.This is the main interface of our Electron application.Our Android and iOS applications.The dialog for adding a repository to your Harbor.After adding a repository, the API endpoint is provided to place into the GitHub settings.Our Pebble app.A screen showing PushBullet notifications sent by our application.In the past, we have used various continuous integration tools like Travis CI and Jenkins, but have always felt that they do not properly fulfil our use case. Shipyard is our answer to that. Written with Sails.js and utilising GitHub webhooks, it pulls the latest code whenever something is pushed, checks all is well, then restarts your server to minimise downtime in production.It also has extensive server management tools. In Shipyard, we're referring to server repository instances as \"Boats\", and the collection of boats as a \"Harbor\".\nWhen you ship code, the Boat \"sets Sail\" and you do not have to go through the trouble of manually going back to your server, running git pull, then manually restarting your server.In addition, we have written multiple apps and services for various platforms:StacsHack 2016I wrote a fair portion of the backend API, as well as the entirety of the Pebble application.I made the iOS\/Android apps, worked on some design with Tim, Pushbullet integration and worked with Scott on the code to keep the boats live and up to date.I wrote the Electron app, and did a bit of design with Jordan.I worked mainly on the backend (largely the models and controllers), and made the boat-add page in the web app. I'd never used Node or Sails before.Scott Maxwell\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 06:14 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"shipyard","project_tags":["javascript","html","css"],"project_url":"https:\/\/devpost.com\/software\/shipyard-a12jln","keywords":"server,code,written,us,shipyard,boat,let,ship,manually,js,tools,various,boats,sail,also,harbor,get,git,github,go"},{"level_0":847,"hack_vector":[[0.1435427666,-0.0873236433,-0.0128673855,0.0486346707,-0.0227324981,0.1303002685,0.1955385655,-0.0176437609,-0.0455204211,-0.0068616569,0.0102774976,-0.077926375,0.1515164673,-0.0714648739,0.0687327683,-0.0111647276,0.1935025901,-0.0096010901,0.059851706,0.1212321818,-0.2347679734,0.0391192436,-0.042423863,-0.0089332266,0.112891309,-0.0330847837,-0.0404587239,-0.1686045378,-0.0214266106,-0.0807556361,0.0695980117,-0.1060318127,0.0187949501,-0.0705563128,-0.0194401368,-0.0097008403,0.1282555163,-0.1388718784,-0.0625207648,-0.0003961486,0.0523646772,-0.1406398714,-0.1486478448,-0.0276746955,0.0595499724,-0.0525219664,0.0092528369,-0.0884210914,0.0017035918,-0.2039514929,-0.1446316093,0.0271641556,-0.1175643355,0.0324144624,-0.2194161713,0.1624160856,-0.1474865228,-0.0139027135,0.0366404802,-0.1058291793,-0.0709224567,0.024533011,0.0741332695,0.0558307581,0.1199302673,0.0214108657,-0.0832586065,-0.1301667988,0.0179019291,0.0142139234,0.0663373321,-0.0445526019,0.0133153424,-0.1147909835,0.041911684,-0.1244227886,0.1756257713,-0.0006293452,0.0053143166,-0.1331773698,0.1168578863,0.1459970027,0.0623013042,0.148439005,0.1180059388,0.2070918232,-0.0969622657,-0.046606265,-0.0191672482,-0.0779679194,-0.1426209956,0.0557937361,0.1005991474,-0.0448668674,-0.0042108959,0.0092430152,-0.164203614,0.2380592078,0.0138934804,-0.0647281408]],"hackathon_name":"StacsHack 2016","index":847,"project_description":"Athletics done rightWe were really excited for the hardware that the MLH brought to StaCS Hack and we really wanted to get our hands dirty with some of them. \nAfter a bit of brainstorming, being that most of our teammates are part of some of the sport teams here at St. Andrews, an application for athletes became an obvious. The best piece of hardware to facilitate this was the Myo Armband.Our app currently takes a constant stream of data from the Myo's 8 muscle activity sensors and translates it into data about each muscle group that it is connected to. We consider that even though the current prototype shows only real-time data, the access to that data allows us to add a multitude of features in the future.Our app is built in Android Studio, using Java. We tried to abide to the material design rules as much as we could.One of the main challenges that we had is the Android SDK for Myo doesn't expose the raw data for the 8 muscle activity sensor. Thankfully the open source community came to our rescue, and we found a project that implemented an API that exposed the data we needed. \nThe other challenge was in aggregating the individual sensor data so that we match it to the individual statement.We made a working product that might be commercially viableAndroid development and interacting with hardwareWe'll add more features in the future like:StacsHack 2016Worked on the data acquisition for the app. Pulled the data from the Myo and molded it into a easy to use stream. Also helped with testing the app.Alex Ungurianu\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 05:32 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Myo Athletics","project_tags":["java","android","myo"],"project_url":"https:\/\/devpost.com\/software\/myo-for-athletes","keywords":"data,myo,hardware,muscle,android,individual,really,exercise,features,challenges,future,app,built,like,add,activity,sensor,even,dirty,development"},{"level_0":848,"hack_vector":[[0.1517232805,-0.1152059361,-0.0308250263,0.0472947396,-0.0219820216,0.1126852259,0.1928748488,-0.0171454288,-0.02586261,-0.0197351705,0.0103501687,-0.0587480552,0.1603437662,-0.0710995793,0.065150626,-0.0056798416,0.1916535944,-0.0239899736,0.0480747744,0.1385708749,-0.2545909584,0.0201273523,-0.0342144258,-0.0047559557,0.1264305413,-0.0306763146,-0.027862547,-0.1554465592,-0.017833164,-0.1004999578,0.0499412008,-0.1097249463,0.0295228846,-0.065964587,-0.0114256004,-0.0321915187,0.1172976047,-0.1526394188,-0.0728083402,-0.0025100473,0.0630291104,-0.1204248294,-0.1399866939,-0.0289472379,0.0564963967,-0.0575431287,0.013922344,-0.0917566717,-0.0107521368,-0.2037380338,-0.1509666443,0.0130878985,-0.115351595,0.0077294321,-0.2101786435,0.166197449,-0.1327336878,-0.0292030033,0.0351098888,-0.101105921,-0.0698715672,0.030155845,0.0688288808,0.0463089496,0.1138236597,0.0247017145,-0.1051923633,-0.1233931482,0.0178124085,0.0204959959,0.0660911575,-0.0445051864,-0.0011857274,-0.1198462099,0.0285505485,-0.1144002527,0.1810229272,0.0000097447,-0.0051813731,-0.135640353,0.1105685681,0.1576447785,0.0437200479,0.1518160552,0.1118160263,0.2050124854,-0.0939952582,-0.028577216,-0.0234599654,-0.0746389925,-0.135610491,0.0646629184,0.1044314057,-0.0300840754,-0.0005138965,-0.0049312976,-0.1709780097,0.2385242134,0.0170089975,-0.058594577]],"hackathon_name":"StacsHack 2016","index":848,"project_description":"Created an algorithm for Arduino Robot to beat various difficulties of a pre-set track and reach the finish.Always wanted to try out Arduino robot, thus decided to pick up this challenge set by J.P. Morgan.The robot has few sensors which are used to follow the \"track\" which is basically a black line throughout many duck-taped sheets of paper and dealing with various difficulties like dead ends or part of path missing in order to reach the finish.Learning to use the robot and upload code to it was probably the biggest challenges of all because there are not many guides and examples of how to do so and docs sometimes could be a bit more extensive\/helpful. Another challenge was getting out of big loops in the traffic as this robot has really small memory capacity, thus cannot remember that he already was in a particular path and that it is actually spinning around. In order to override this problem, we had to include some randomness to the robot which resolved this problem (eventually), but made robot's line-tracking a bit poorer.We are proud that our robot actually manages to go through nearly all difficulties in the track and most of the time does so without loosing the right path and doing something which is not sensible.We enhanced our C skills and, of course, learned to use Arduino Robot.StacsHack 2016Ignas Kancleris\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 04:08 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"LineFollowIno","project_tags":["c"],"project_url":"https:\/\/devpost.com\/software\/linefollowino","keywords":null},{"level_0":849,"hack_vector":[[0.1392129511,-0.0869410858,-0.0303093158,0.0220670626,-0.0161960535,0.1222538203,0.2150717974,-0.0154551016,-0.0158758592,-0.006227389,0.0196499024,-0.0662714615,0.1261525601,-0.0615798682,0.0764075518,-0.0040337592,0.2039304078,-0.0013467408,0.0404114164,0.123888582,-0.243158564,0.0355088264,-0.0413392782,-0.0213958491,0.0858244821,-0.0214710794,-0.0213490631,-0.1787922978,-0.0161583461,-0.0977138206,0.0638836473,-0.1291643083,0.019979747,-0.0978383198,-0.0037434779,-0.0172404144,0.102572076,-0.1428589821,-0.0773149207,-0.0241701938,0.0297523011,-0.1415465176,-0.1323040724,-0.0438930281,0.0772045627,-0.0580573529,0.0044760429,-0.0866163895,-0.0240120776,-0.1979162544,-0.1497838199,0.0026725964,-0.1089021489,-0.0061718561,-0.2024500966,0.1573234797,-0.1292997748,-0.0401286557,0.046902433,-0.1197223067,-0.0726361722,0.0254613701,0.0900198817,0.0463380106,0.1018090919,0.0179242454,-0.1030495092,-0.1153726652,0.0465716533,0.0281203892,0.0647450909,-0.0529538766,0.0303570684,-0.1159041896,0.0321605429,-0.1615484506,0.1577711552,0.0042787241,0.006574532,-0.1375096738,0.121968098,0.1552373618,0.0688115209,0.1710425317,0.0909969509,0.199996829,-0.0865564793,-0.0423496217,-0.0175945349,-0.0757783502,-0.1554382443,0.0464208312,0.1036714464,-0.0499869473,-0.0154085979,0.0269522499,-0.1721091866,0.2210467607,-0.0075641666,-0.0772249848]],"hackathon_name":"StacsHack 2016","index":849,"project_description":"Social-oriented facial recognition allowing for unlocking of actions only when certain people are nearby at once.Built at St Andrews University Hackathon 2016Originally intended to be an Oculus Rift application, Social Face Recogniser uses computer vision technology to first identify that faces exist, and then recognise who those faces are.Social Face Recogniser adds an overlay that displays a user's social media feed next to their face (as well as their name). On Oculus this would have been amazing to look around a room and see all your friend's feeds, but due to technical limitations of the hardware (and would-be time constraints) we decided to reduce the scope to use a web cam.Social Face Recogniser consists of two programs. The first lets you add a user, and build up a repository of images of them. You also input their name, and social media usernames.The second program uses sets of images of multiple users to build up an identity profile (the program is trained on the image sets). It then uses the webcam feed to identify who is currently in shot, adds an overlay to identify them as a known user (or an unknown l33t hacker).Using a configuration file, you can specify a set of users that should be able to \"unlock\" the profile. All these users must appear on camera at the same time. This could be used as a developer tool to secure processes. For example, perhaps in a code review scenario, you only want a Pull Request to be accepted if both your managers have looked everything over and agree to unlock the repository.The programs are written in Java 8. We use JavaCV (CV = Computer Vision) as a wrapper around OpenCV. We also use Twitter4J to pull Twitter data, and began implementing GitHub feeds using a 3rd Party API (but ran out of time).JavaCV presented numerous challenges -Having all the basic functionality working! Our demo video shows how well it works (given that it was built in 24 hours).Facial recognition is impressively accurate when training data is large enough (around 30+ images seems good).StacsHack 2016Added several features (Authenticated Box, Colours, Twitter format, and conf file for authenticated box)Isaac Jordan\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 03:45 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Social Face Recogniser","project_tags":["java","opencv","twitter"],"project_url":"https:\/\/devpost.com\/software\/social-face-recog","keywords":null},{"level_0":850,"hack_vector":[[0.1524928212,-0.0926349089,-0.0260127373,0.0444745347,-0.0160243753,0.1684086472,0.1938053966,-0.0458274744,-0.0098951124,-0.011747743,0.0113397287,-0.0840862542,0.13153781,-0.0649064183,0.0627276078,0.0058093634,0.2311289757,0.0226516351,0.0385331884,0.1105374023,-0.2283831984,0.0384639949,-0.0533212498,-0.0201097969,0.1240014657,-0.0165517963,-0.0295407511,-0.1976418346,-0.0395654514,-0.0829242989,0.0731391832,-0.135369882,0.0485178754,-0.1035342067,-0.0228945836,-0.0130978012,0.1172296554,-0.1347031146,-0.0525640175,-0.002579822,0.0344391689,-0.1464965045,-0.1616999656,-0.0274351165,0.0494970866,-0.0508283637,0.0081268447,-0.0606149212,-0.0422124527,-0.2146829367,-0.1298049539,0.0178990215,-0.0930152312,-0.0104466723,-0.17154935,0.160183683,-0.1247335598,-0.0065366901,0.0212244876,-0.0821351185,-0.0622276329,0.0113417506,0.0804020166,0.0382483117,0.1064156666,0.0119620496,-0.1111093462,-0.1352993995,0.0361801386,0.0359743834,0.079804875,-0.0487366319,0.0378368013,-0.1333044618,0.0166528113,-0.1169568449,0.18335931,0.0063479613,0.0295399167,-0.1290560514,0.1221094653,0.1555393338,0.0739591494,0.1642328799,0.0915915594,0.1824727058,-0.0983177796,-0.0369177125,-0.0084615247,-0.0800945908,-0.1337015927,0.0538791008,0.0819711834,-0.0522927381,0.0083260527,-0.0009543356,-0.1351924688,0.2366268039,0.0067137191,-0.0924586505]],"hackathon_name":"StacsHack 2016","index":850,"project_description":"Lift your mood by listening to music generated by analysing your github commitsGithub has saved our lives many times: in case of fire, git add, git commit, git push. But have you ever thought about what your commits say about you? Are you the type who just writes \"blabla\" all the type or do you give lots of details?Our app  fetches your commits history from github, runs sentiment analysis on it and then based on the result suggests a song to match your mood, using spotify playlists. It also comes with a really cool design. The fun never stops!Github, spotify, sentiment analysis. What's not to love?StacsHack 2016I worked on the backend, build the web application using flask and fetched the data using APIs for github and sentiment analysis.I worked on the sentiment analysis part of the project, using a python and nltk API and the frontend development.Ramona Comanescu\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 06:06 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MoodHub","project_tags":["python","html","css","javascript","flask","github","alchemyapi","nltk","sentiment-analysis-online"],"project_url":"https:\/\/devpost.com\/software\/stacshack-koala9000","keywords":"github,git,type,thought,analysis,spotify,sentiment,commits,design,fun,food,fire,fetches,ever,details,writes,cool,commit,give,case"},{"level_0":851,"hack_vector":[[0.1522882432,-0.1074818224,-0.0237256382,0.0599736087,-0.0259837992,0.1525130421,0.2108577639,-0.0449781716,-0.0386839509,0.004314451,0.015212141,-0.0373037457,0.1433483064,-0.0769786164,0.0537633188,0.0018957695,0.2221325785,0.0056975964,0.0546105951,0.1035715938,-0.2247581035,0.0376630239,-0.0495190062,-0.0251166318,0.132209003,-0.0186240915,-0.0424516313,-0.1924681216,-0.0122903101,-0.0700058714,0.0673286691,-0.1411699206,0.0427243486,-0.0815626904,-0.0332626998,-0.006076809,0.1328094304,-0.1269122511,-0.0479586571,0.0152860405,0.0549723916,-0.1510510445,-0.1647373885,-0.0294453762,0.0388254859,-0.0387029499,0.0152084958,-0.0677507967,-0.0285254978,-0.1982409507,-0.1103265956,0.0120784352,-0.1082870141,0.0055722734,-0.1768700778,0.1480973512,-0.1509298235,0.0018575529,0.0147853699,-0.0620318986,-0.0492517427,0.0193312205,0.0855768919,0.049122069,0.128125295,-0.0090425378,-0.1035821885,-0.1325187236,0.0369644165,0.0270919297,0.0726844221,-0.0471666306,0.0195103828,-0.1339534521,0.0038464712,-0.1272633374,0.1851913631,0.0178380944,0.0360707603,-0.1355376989,0.134400174,0.1538878381,0.0636893883,0.1701588333,0.1155991629,0.196658656,-0.1128452718,-0.01584775,0.0008679173,-0.0923532397,-0.1384966969,0.0643922985,0.0858301967,-0.0254540332,0.0242940523,-0.0208304375,-0.1288222522,0.2083600014,0.0356150493,-0.0659714267]],"hackathon_name":"StacsHack 2016","index":851,"project_description":"Graph visualization of repository structure for GitHub projectsmbostock\/d3FreeCodeCamp\/FreeCodeCampatom\/atomMicrosoft\/CNTKWhen contributing to new GitHub projects, especially those which are relatively mature, it takes lots of time to understand the code base. Inspired by WinDirStat, a disk usage statistics viewer, the aim is to allow developers to quickly explore the structure of unfamiliar GitHub projects without having to trawl through web interfaces or clone the repository first.Provides an at-a-glance overview of the repository structure. Finer details can be explored via zooming and tooltips. It makes exploring large and complex projects a breeze.Files are displayed as a directed graph, color coded based on file types, and sized accordingly to length of file.Data binding and wrangling along with drawing SVG components is handled with D3.js library. Requests to GitHub's API are made through jQuery AJAX.I've made a functional tool that solves a real problem. And it looks great too.D3.js is a powerful library for data visualization.StacsHack 2016Qingzhuo Aw Young\n          posted an update\n\n          \n            \u2014\n            \n\n                Feb 23, 2016 09:58 PM ESTFully functional version now available on http:\/\/allyourrebasearebelongtous.com\nSource is also on Github!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Qingzhuo Aw Young\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 04:15 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"All Your Rebase Are Belong To Us","project_tags":["d3.js","jquery","html5","css"],"project_url":"https:\/\/devpost.com\/software\/github-visualizer","keywords":null},{"level_0":852,"hack_vector":[[0.1548830718,-0.132541284,-0.0181299783,0.0756106526,-0.0370511264,0.1462709308,0.1905183494,-0.0358416103,-0.0235889591,-0.0336565822,0.0239530969,-0.0260054953,0.1543304473,-0.0758701488,0.0565871485,0.0295298994,0.2178794444,0.0058922516,0.0477793254,0.117076315,-0.2339871377,0.0066676969,-0.0559700131,-0.0317257605,0.133306995,-0.0261248033,-0.0481144078,-0.1757896692,-0.0140924146,-0.0915727168,0.0432555117,-0.1007774398,0.0389360711,-0.0631010309,-0.0178858638,0.0000014769,0.1284239292,-0.1397351921,-0.0491590239,0.0337017812,0.0597998835,-0.1242856309,-0.1670504063,-0.0180821344,0.0114045171,-0.0625484586,0.0356504545,-0.0634796247,-0.0220093802,-0.2185535133,-0.1081399545,0.0266605318,-0.1076617166,-0.0168446898,-0.1792631298,0.1764004976,-0.141203925,0.0119253946,0.0197203197,-0.0591362678,-0.0595962666,0.0356119685,0.0661108047,0.0692223385,0.1271443516,0.0115142427,-0.1179559231,-0.1450337619,0.0076849023,0.0028322116,0.057277903,-0.0314711183,0.0047278255,-0.1360177696,0.0010617914,-0.080366604,0.2015039474,-0.0006654862,0.0281229503,-0.1485266834,0.1157627702,0.1698303819,0.0406203307,0.1405663043,0.1262568533,0.2004486322,-0.1097291112,-0.0156574883,-0.0118356301,-0.0851376951,-0.1255993992,0.0853976831,0.0750240162,-0.0198425092,0.0224739015,-0.0394381993,-0.1319715381,0.2189886123,0.0438566096,-0.0558063127]],"hackathon_name":"StacsHack 2016","index":852,"project_description":"leanrning Dijkstras!We asked everyone for their best and worst algorithm and decided to use codio to build a tutorial for Dijkstras with a story based on hackathons. We're proud of learning python and helping a beginner learn git, and we didn't quite have time to finish but we would love to expand this idea to other algorithms eg, algorithms related to red\/black trees.StacsHack 2016I was the writer of the narrative.Rosina Paige\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 06:46 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"stacs","project_tags":["python","html","javascript"],"project_url":"https:\/\/devpost.com\/software\/stacs","keywords":"algorithms,would,codio,finish,expand,everyone,eg,dijkstras,decided,build,worst,black,best,beginner,based,asked,git,hackathons,helping,idea"},{"level_0":853,"hack_vector":[[0.1361450702,-0.1204565242,-0.013818196,0.0484294891,-0.0299461372,0.1441717893,0.2111457288,-0.0475785732,-0.0194456987,-0.0288483538,0.0186727941,-0.0398917012,0.1544477791,-0.0831046775,0.0584896691,0.0190404132,0.2416651398,0.0043738303,0.041398529,0.1211654916,-0.2249398232,0.0366132148,-0.0502219796,-0.0313279964,0.1264973581,-0.0244855806,-0.0361773223,-0.1805417687,-0.0169140678,-0.0846148804,0.0555001125,-0.1278300583,0.0404987969,-0.0792714134,-0.0359369107,-0.0100190556,0.1382748783,-0.1346267462,-0.0449408181,0.006293335,0.0427455269,-0.1339839846,-0.1562613845,-0.0294102319,0.0403602012,-0.0599596351,0.0341213085,-0.0555573963,-0.0366374515,-0.2068818808,-0.1205239147,0.0187104605,-0.1129896417,-0.0108673954,-0.1671771854,0.1639140248,-0.1430320591,-0.0067337072,0.0170384441,-0.0747551546,-0.0661285669,0.0307056047,0.0817364082,0.0581412502,0.1115411445,0.0018899663,-0.1013727859,-0.1393653601,0.0214095023,0.0160231683,0.0566638745,-0.0445560031,0.029614469,-0.1302455664,0.0022279478,-0.1048937887,0.192058742,0.0033133356,0.0261437409,-0.1446261853,0.1335243434,0.169012323,0.0489420295,0.1573994756,0.1162414104,0.184220612,-0.1150941253,-0.0253136847,-0.0072700032,-0.0862491503,-0.1432194859,0.0714494362,0.0795298964,-0.0149109429,0.0208847895,-0.0295277666,-0.1320834309,0.2105678022,0.0368582271,-0.0672396794]],"hackathon_name":"StacsHack 2016","index":853,"project_description":"P2P image sharing site for ultimate scaleability of memesMeme research centreWe didn't want to spend money on hosting servers but needed to share our dank memes.\nWe are going to make AWS obsoleteShares images through P2P connections so users can seed the images to each other, reducing server loadThere is a back-end written in Nodejs that handles upload and seeds the images for when no-one else is.\nWe used the JS library Webtorrent to do the P2P stuffNodejs.The fact it actually works for a small number of imagesDon't Nodetrying to support more images and an image ranking systemStacsHack 2016Finlay Marno\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 06:28 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"The Dank Web","project_tags":["node.js","bootstrap"],"project_url":"https:\/\/devpost.com\/software\/the-dank-web","keywords":"images,nodejs,dank,hosting,needed,money,memes,make,load,library,learned,js,inspiration,image,handles,node,going,fact,end,else"},{"level_0":854,"hack_vector":[[0.1559310853,-0.1393777877,-0.0204009432,0.0695974752,-0.0161232501,0.1440600604,0.1958192289,-0.0426362865,-0.0208030846,-0.0365585685,0.0001883301,-0.0297532212,0.1430807263,-0.0705156028,0.0367940851,0.0007717965,0.2050291747,-0.00774018,0.0600707717,0.1267926097,-0.2414283752,0.0350650661,-0.027346896,-0.008422886,0.14506419,-0.0294936113,-0.040314801,-0.1656416208,-0.0258858558,-0.0936589465,0.054774005,-0.1199996993,0.0499977544,-0.0573259667,-0.0216006059,-0.0382184461,0.1351400912,-0.1433128566,-0.0513603799,0.0205674767,0.0778845623,-0.1474775374,-0.1480160505,-0.0516171902,0.034481544,-0.0423212647,0.0167846084,-0.0621991232,-0.0350569412,-0.2084454149,-0.1324203163,0.037429966,-0.1184549183,0.0012372193,-0.2022870779,0.1494605392,-0.1411915421,-0.0190867316,0.0286121443,-0.0676646605,-0.0664347336,0.0186168347,0.0562436059,0.0257870834,0.1125438884,0.0166439861,-0.1116709784,-0.1249876991,0.0136829354,0.0290249661,0.0629216805,-0.0529528707,0.010878305,-0.1296252459,0.0061704889,-0.089211911,0.1787968278,0.0030845378,0.011816822,-0.1465555131,0.101459235,0.1550314426,0.0241464376,0.1739188135,0.1239489838,0.2019926757,-0.107769005,-0.0144931348,-0.016703397,-0.0795638561,-0.1263198704,0.0807050169,0.0841246471,-0.0216249824,0.010389505,-0.0306699928,-0.1492125541,0.2291713506,0.0336446241,-0.0454842709]],"hackathon_name":"StacsHack 2016","index":854,"project_description":"Unconventional jump'n'jump platformer with periods of \"inversed death logic\"A 2D jump'n'jump (we're talking about a bunny with a pogo stick, so there's not much running involved) featuring a slightly suicidal bunny. Randomly throughout the game, suicide mode is triggered which inverts the death logic of the game.This means the player has to deliberately jump into deadly traps to stay alive which is somewhat counter-intuitive :-)All assets have been created on the fly and the music used has been composed and produced by FoxPopuli, who allowed me to use it for the project.The Godot game engine was used in this project. I have been loosely following its development ever since it has been released under an open source license by Okam Studio but never found the time to actually build something with it.\nThis is why I decided to try Godot in the course of this Hackathon and I really liked it!StacsHack 2016Manuel Kehl\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 06:58 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Suicide Death Bunny of Doom","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/suicide-death-bunny-of-doom","keywords":"game,jump,used,bunny,project,godot,fly,following,found,foxpopuli,hackathon,ever,intuitive,inverts,involved,license,featuring,engine,logic,development"},{"level_0":855,"hack_vector":[[0.151229918,-0.099283196,-0.0091943108,0.06114728,-0.0178164281,0.154379651,0.2020630091,-0.0643271878,-0.0378205143,0.0003966102,0.0405105017,-0.0416488722,0.1584448367,-0.0792775899,0.0574201904,0.0140599813,0.2226136923,-0.0009828374,0.0500055067,0.1129106656,-0.2098988742,0.0266674627,-0.06650915,-0.0279884301,0.1310860217,-0.0235824548,-0.0379990414,-0.1995678842,-0.014771306,-0.0673144385,0.0756197274,-0.1148223802,0.0495011583,-0.0850894526,-0.0409532972,0.0200076476,0.1265162081,-0.1163722277,-0.0348446518,0.0263206251,0.0517307743,-0.1286578625,-0.1699115187,-0.0126091717,0.0266542342,-0.0460583009,0.0211569723,-0.0663283169,-0.0298052784,-0.2221518904,-0.117872946,0.0183812976,-0.1147902757,-0.0076196222,-0.148465246,0.1624450535,-0.1490696371,0.018757835,-0.0012138666,-0.0613672994,-0.0377825461,0.0338157676,0.0860253647,0.0736636296,0.1359221637,-0.0238247141,-0.1100753248,-0.1338590682,0.0229077023,-0.0060603339,0.046231091,-0.0231181197,0.0096021276,-0.1308000237,-0.0049035377,-0.0931461975,0.2204979509,0.0008424322,0.0320148095,-0.1477253288,0.1438491344,0.1598171443,0.0602496564,0.1428526044,0.1186977848,0.2010322511,-0.0942657366,-0.0171712898,0.0006937382,-0.0864539817,-0.1464886218,0.0672535822,0.0854148045,-0.0135051124,0.0227686223,-0.0360453278,-0.1241740808,0.2034611255,0.0403377861,-0.072996892]],"hackathon_name":"StacsHack 2016","index":855,"project_description":"Directly make issues through atom and get feedbackCoffeescriptTo make easier for atom users to talk about problems within their code with teachers and other studentsCreates an issue on github directly from atom containing the currently highlighted code and shows notification to all people in the repositoryWe used atom development tools with coffeescript as the base language. We also used github API and node.js.New language (coffeescript) and new API'sWe did itDon't use coffeescriptDirect interaction through issues on code.StacsHack 2016Michalis Psalios\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 06:55 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Github Issues","project_tags":["coffeescript","node.js","github"],"project_url":"https:\/\/devpost.com\/software\/github-issues","keywords":"atom,github,code,coffeescript,issues,used,api,language,new,development,highlighted,easier,directly,direct,containing,currently,creates,interaction,challenges,built"},{"level_0":856,"hack_vector":[[0.1456237435,-0.0993941203,-0.042746827,0.0214848053,-0.0132828429,0.1147789881,0.1964675486,-0.0166992359,-0.0124194119,-0.0252107866,-0.0017686737,-0.0792265758,0.1218126044,-0.0592321493,0.0661496744,-0.0001271154,0.2038896233,-0.0110188387,0.0368609279,0.1350159198,-0.2526606619,0.0276050828,-0.0371218659,-0.0046915403,0.0940823853,-0.0261126701,-0.0212190561,-0.1535300761,-0.0352108702,-0.1030713767,0.0490669608,-0.1263486147,0.0262656771,-0.0822297558,-0.0157537349,-0.039479062,0.1092446893,-0.1456288397,-0.0687300935,-0.0144710634,0.0476737209,-0.1251781434,-0.1419826597,-0.0504341908,0.0835445672,-0.0754121765,0.0085744672,-0.0798477009,-0.0284344442,-0.2013569325,-0.1523765624,-0.0004146859,-0.1033022478,0.0072844094,-0.2133257985,0.1542219073,-0.1271650642,-0.0519012846,0.0450456999,-0.1118613183,-0.0861497521,0.015663784,0.0777567253,0.0198107399,0.0981394202,0.0205596015,-0.105888322,-0.1198849231,0.0359481946,0.0417293571,0.0712747946,-0.060219232,0.0088231675,-0.1093532518,0.0353275053,-0.1381490827,0.1623814404,0.0088786865,-0.0031309871,-0.1282011122,0.1083879769,0.1584330499,0.0439506359,0.1797523201,0.0999017358,0.1986539215,-0.0950329304,-0.0324211121,-0.0230846573,-0.0703774393,-0.1410348117,0.0558736883,0.1084846631,-0.0407587141,-0.0264192689,0.0134360017,-0.1763790697,0.2482678741,0.0032491004,-0.0742736533]],"hackathon_name":"StacsHack 2016","index":856,"project_description":"pin-boardWhen you code, often you copy a line of code (ctrl+c) and you would like it to be with you, to stay in memory, to be able to retrieve it later, but then you copy another piece of code and the previous one gets lost, forever.\nIf you need it again, you have to copy it again, but you have to start looking for it again and wasting time.Pin Board is a storage tool that other than copying a piece of code\/text in memory (same function of ctrl+c), it also adds it to a \"Pin Board\" where you are able to see it. Not only see it, but if you click on one of the stored items, you can copy it in memory and quickly retrieve it with the usual paste command (ctrl+v).The copy command of Pin Board is triggered by the combination Ctrl+Alt+C.Pin Board is a plugin of the Atom editor, therefore it was built using CoffeScript and the Cson notation.CoffeeScript is a weird language, but after you get used to it it's cool! The API of Atom is not documented properly enough, and there is not enough material about Atom on the Internet.The storage capacity of PinBoard is limited, because of a problem in making the data retrieval from the Pin Board generic. In fact, it seems quite hard to get to know which item on the Pin Board was pressed, and because of this, there has to be a method for each slot in the Pin Board, making the storage capacity limited.Creating a tool that can make the life of programmers easier! And of course taming CoffeeScript ;-)First of all, that Atom is a stunning text editor, and it's easily customizable! How the plugins in Atom work, their structure and functions.\nLet's not forget about the revision of JavaScript but in a different shape, CoffeeScript :)Making it possible to get to know which Pin Board element was pressed, in order to make its capacity unlimited and make only one function to retrieve the data stored in it.Making the pinboard graphical: it will be possible to open it by pressing a button on the editor and see a list of boxes, each containing one of the copied texts.StacsHack 2016Erik Minhas\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 06:54 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Pin Board","project_tags":["coffeescript"],"project_url":"https:\/\/devpost.com\/software\/pin-board-4bz8rp","keywords":"board,pin,copy,atom,ctrl,one,making,code,coffeescript,memory,see,editor,capacity,get,retrieve,make,storage,pinboard,piece,limited"},{"level_0":857,"hack_vector":[[0.1658138335,-0.1096897051,-0.0242313426,0.0510854572,-0.019578306,0.1382196546,0.2034923732,-0.030529622,-0.0294059291,0.0080030486,0.0143223628,-0.0675498471,0.1402763128,-0.0733102486,0.0761729106,-0.0015000644,0.2025167644,-0.0007914968,0.0530455671,0.1066357568,-0.2396100312,0.0354475491,-0.0505072325,-0.0244379882,0.1139050126,-0.0253542624,-0.0287284292,-0.1964821815,-0.0204865076,-0.0679889396,0.0634084344,-0.1248211414,0.0300169978,-0.1065675467,-0.0389265604,-0.0114793349,0.1047211736,-0.1462210119,-0.0795709044,0.0060173911,0.0349373072,-0.1362268478,-0.1457785368,-0.0233956128,0.0535358228,-0.048987329,0.0112028522,-0.0827460513,-0.0182296839,-0.1989957839,-0.1438170969,0.0067620785,-0.1183142662,0.0076508452,-0.1729066521,0.169167906,-0.1300703585,-0.000815991,0.0184658989,-0.0850094557,-0.0666618943,0.0247058682,0.0847429335,0.0637311786,0.1185045913,0.0017569601,-0.1123971641,-0.1145488471,0.0213501584,0.0122895315,0.0704434812,-0.0447470844,0.0176205263,-0.1343981326,0.0260440148,-0.1303724945,0.1953107715,0.0069798296,0.0195561089,-0.1314036995,0.1430372596,0.1489197165,0.0736574829,0.1483549029,0.1089189053,0.2062000632,-0.0818850547,-0.0180569254,0.0048238547,-0.072265625,-0.1346181035,0.0573313572,0.0980748087,-0.0375868715,0.0146385487,-0.0136367464,-0.1415719539,0.221144259,0.0181881618,-0.0749831572]],"hackathon_name":"StacsHack 2016","index":857,"project_description":"The biggest open Speech Synthesis database for Machine Learning in the universe.Public TTS services are not so good. We couldn't find big public data sets to train state-of-the-art algorithms. Aspects of Google Voice are trained on 1900 hours of private data. Power to the people!Uses YouTube and handmade Closed Captions to create audio snippets with correct English text.Python, Google YouTube API, PyDubPython's type safety, python in general, lack of video decoder capabilities on lab machines, sleep, annoying peoplerunning and easy to use product, 7000 sentences with audio snippet and accurate English text.after just 3 hours of running (on one slow ass machine).The Google API is powerful, this is actually totally possibleDRAIN YOUTUBE!! Minor post-processing of the data, error evaluation, build a huge data set and publish it, expand to audio books (highly illegal) and movies (even more highly illegal) and other languages (totally possible as well)StacsHack 2016Chuck Five\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 06:40 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SpeechFrenzy","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/speechfrenzy","keywords":"data,youtube,audio,google,python,illegal,hours,highly,people,possible,english,public,running,totally,text,api,big,error,even,expand"},{"level_0":858,"hack_vector":[[0.1565489173,-0.1325311512,-0.0159798432,0.0686362684,-0.0406343788,0.1583583057,0.1795078963,-0.0526671,-0.0185295157,-0.0405269265,-0.0017653664,-0.0034429496,0.1330359429,-0.0736837015,0.0125947716,0.049976334,0.2593510449,0.0329553112,0.0526625253,0.1029267311,-0.2211207896,0.0003785834,-0.048817195,-0.039852418,0.1500934958,-0.0186838657,-0.0601746924,-0.173452884,0.0139239458,-0.101162903,0.031690795,-0.1200253069,0.0647221431,-0.0612472482,-0.0195143148,-0.0114772664,0.144242093,-0.1228490993,-0.0267519318,0.0575134568,0.0633100122,-0.1377434731,-0.1800292134,-0.0391372703,-0.0065368479,-0.0655381978,0.037205603,-0.0277232882,-0.033913888,-0.198208943,-0.0741926134,0.0277612582,-0.1045264378,-0.0516360737,-0.1416712105,0.1561936885,-0.1403085887,0.0267238524,0.0070389425,0.0012198455,-0.0313231163,0.0295696743,0.0597034469,0.0568435937,0.1358435005,-0.0215041321,-0.1358730197,-0.1676949263,0.0205578599,0.0244040098,0.0753020868,-0.0376871973,-0.0043071848,-0.1488872319,-0.0439822152,-0.0870521739,0.1961749941,0.0312845856,0.0631538779,-0.142389223,0.1100672558,0.1599155664,0.0148313707,0.1592715383,0.1451827139,0.1747973114,-0.1327073425,0.0357304178,-0.0146387191,-0.1003447846,-0.0958476141,0.0977730006,0.0531342402,-0.0024632039,0.0537168607,-0.0645101741,-0.0994576588,0.2013783455,0.0713108331,-0.0593298674]],"hackathon_name":"StacsHack 2016","index":858,"project_description":"The perfect esoteric programming language, all you need is a deck of cards.With just a deck of cards, you can program literally anything.  Once domain.com gets itself sorted out, try it out at haveyouseenthesizeofmydeck.comStacsHack 2016Paul Sinclair\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 06:35 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Joker","project_tags":["python","html","javascript","css"],"project_url":"https:\/\/devpost.com\/software\/stacshack","keywords":"com,try,sorted,program,literally,haveyouseenthesizeofmydeck,gets,domain,deck,cards,anything"},{"level_0":859,"hack_vector":[[0.1484605968,-0.1090373471,-0.036036551,0.0491834022,-0.0131934853,0.1413637847,0.196385026,-0.0316769853,-0.0269120727,-0.0250523426,0.0090369172,-0.0582162291,0.1387628168,-0.0565360151,0.0466141105,-0.0046461872,0.2085806429,-0.0055642226,0.0341163054,0.13105537,-0.241217196,0.0262239687,-0.0324214138,0.009245472,0.1417674273,-0.0211223252,-0.0273725279,-0.1705133766,-0.0373818539,-0.0912635773,0.0758715123,-0.1315645576,0.0275516752,-0.0648577958,-0.0136286737,-0.028473977,0.1197177991,-0.1380424649,-0.0485387333,-0.0089835366,0.0645776242,-0.1374126673,-0.1434348226,-0.0419875458,0.0611105748,-0.0516240969,0.0097750882,-0.0676269755,-0.0380219929,-0.2131504864,-0.1237809733,0.0068160971,-0.1000504196,0.0141563546,-0.2124982625,0.1624665856,-0.1386554241,-0.0337133519,0.0274027232,-0.1032276079,-0.0721702278,0.0171681419,0.0683477148,0.0189521275,0.1155419797,0.0291807353,-0.1101027504,-0.1338156164,0.032087151,0.0349654295,0.0663131177,-0.0456436761,0.034861818,-0.1127129495,0.0188201591,-0.1156296358,0.1690369844,-0.0071594766,0.0164771918,-0.1272403896,0.1041620001,0.1596116275,0.0374183767,0.1770925522,0.1023690552,0.1973781586,-0.1110132858,-0.0361684449,-0.0337504633,-0.0725085214,-0.1368626058,0.0780711919,0.0813266486,-0.0413165055,-0.0154221067,0.0104202023,-0.1525353938,0.243411839,0.0168496277,-0.0548784696]],"hackathon_name":"StacsHack 2016","index":859,"project_description":"Multiplayer 2D wizard duelling.We were at a loss for what to do at the start of this project. We spent the first 5 or 6 hours contemplating and trying out different ideas. Eventually we decided to make a game. Inspired by a video of the Warcraft 3 mod Warlocks we decided to make a Side-on wizard duelling.The game allows multiple people to connect and battle wizards. The aim of the game is to knock your opponents of the platform. You can move left and right using A and D, and you can jump using W. You can fire a spell using by clicking. Spells will fire towards the mouse position. Spells send any opponents that are hit by it flying back. You can charge up a spell by holding down the mouse button. The more charged a spell is the more it will knock your opponents back. The platform that you are duelling on is gradually crumbling away making it harder and harder to stay on.We built it in the Unity game engine using their 2D tools. The graphics we all created in Photoshop.Deciding on a project was an initial challenge. \nLearning how to use Unity took a while however once we got the hang of it we made quite good progress.Making a fun game in 24 hoursWe learned how to make 2D games using Unity.Infinity and Beyond...StacsHack 2016Worked on movement, spells and networking.I created the art and helped code the word generation and movement.Luke Bissell\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 05:24 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Spell Ops 4","project_tags":["unity","photoshop","c#"],"project_url":"https:\/\/devpost.com\/software\/spell-ops-4","keywords":"using,game,spell,opponents,unity,make,fire,duelling,mouse,platform,hours,decided,project,making,spells,learned,knock,built,back,harder"},{"level_0":860,"hack_vector":[[0.1500937641,-0.1097568944,-0.0299977399,0.0392109565,-0.0076472843,0.1251110584,0.2071466148,-0.0302486643,-0.0199376941,0.0132397339,0.0204484779,-0.0744224414,0.1474981308,-0.0726109967,0.0884118229,-0.0031520959,0.1971990913,-0.0108597958,0.0459370464,0.1192577481,-0.246782586,0.0510126464,-0.0492290817,-0.0161710829,0.1189617664,-0.0248505734,-0.0226618927,-0.1922540516,-0.0180179738,-0.0787833482,0.0712332278,-0.1371363848,0.0419321358,-0.1081229001,-0.0254826173,-0.0268498156,0.0997610316,-0.1472565234,-0.0790189505,-0.026993623,0.0252871662,-0.1496086568,-0.1394165605,-0.0267605428,0.0558703132,-0.0349866748,0.0034991985,-0.0860118344,-0.0176952481,-0.1889464408,-0.1498850882,0.0008024133,-0.1168702915,0.0144109987,-0.1811350733,0.1556685865,-0.1335756183,-0.0130450111,0.0326761007,-0.1072172448,-0.0758880004,0.0355621204,0.0890683234,0.0599000081,0.0942778289,0.0141898915,-0.10860347,-0.1186277419,0.0316472389,0.0250826683,0.0742825344,-0.0532626063,0.0381557979,-0.1257694066,0.0343956351,-0.1417681128,0.1800153852,-0.003346446,0.0162526425,-0.1270939261,0.133925572,0.1465587318,0.086516425,0.1502212733,0.0961133614,0.1880525649,-0.0853230059,-0.0301066991,-0.0018440918,-0.0716575757,-0.1389947236,0.0522657484,0.1053029597,-0.0502926968,0.0184105914,0.0057821833,-0.1544916928,0.2124906778,0.0066320477,-0.0786430612]],"hackathon_name":"StacsHack 2016","index":860,"project_description":"A facial recognition software hell bent on finding IrmaMachine learning in facial recognition software based on caricatures, which emphasise facial proportions over absolute measurements.Based on a real-time video stream from a webcam, identifies the biggest face in each frame with Haar-cascades from openCV, further Haar-cascades identify 2 eyes within that area. Calculates the positions of individual pupils and compute the distance between them. If this value falls within the range specific to the primary user, return the user's name above the face box, else returns 'Who are you?'Used python libraries in Linux to install OpenCV software. Used available OpenCV modules to detect faces and eyes, implemented code to compute and return relevant variable and text.Choosing which facial proportions gave the most distinctive results, so as to identify different people with a minimum of measurements. Candidates include: distance between each pupil and the bottom of the face box, area between pupils and the chin, distance between each eye and the closest side of the face\nIdeally the model would have used Elastic Bunch Graph Matching, for increased resilience to out-of-plane rotations, but this feature was not obviously available in openCV.Installing OpenCV (time-consuming.) Finding Irma. Getting a working program and reasonably accurate result over only 24 hours.How to use OpenCV, basic face recognition theory, implementing custom extensions, perseverance, python.Finding Jack. Implementing k-means clustering, wider positive and negative sample pool to train and automate machine learning algorithm.StacsHack 2016Mostly back-end, wrote computation of box sizes and centres, did initial background research into facial detection and recognition. Was found. (This joke will end eventually, honest.)jack mcalpine\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 06:28 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Where's Irma?","project_tags":["opencv","python","machine-learning"],"project_url":"https:\/\/devpost.com\/software\/where-s-irma","keywords":"opencv,face,facial,distance,used,cascades,learning,proportions,return,machine,finding,software,implementing,recognition,measurements,pupils,eyes,compute,box,python"},{"level_0":861,"hack_vector":[[0.134637028,-0.1405179203,0.004253997,0.0874349624,-0.0569072887,0.1584111899,0.1853841543,-0.051132787,-0.0248628557,-0.0372805409,0.00435891,0.0402134359,0.1301326603,-0.0827216655,-0.0115968268,0.0924708992,0.27641505,0.0436140671,0.0482131727,0.0882746056,-0.1876816601,0.00439526,-0.0517642796,-0.0634862632,0.1557188481,-0.0096595436,-0.0800095722,-0.1777148396,0.0368703492,-0.0814897269,0.0243355408,-0.0851114616,0.0797604993,-0.0506690443,-0.0269809458,0.0193587616,0.1538818777,-0.1030570641,0.010416897,0.0918403491,0.0484124981,-0.1474136561,-0.1907549202,-0.0398884565,-0.0367262922,-0.0608206689,0.0476131737,-0.003318025,-0.0187772531,-0.1959313601,-0.0267275814,0.041508235,-0.0996757001,-0.0769044086,-0.1074249372,0.1467614025,-0.1530715525,0.0618154258,0.0020118363,0.0402882658,-0.0083986316,0.0433559343,0.0610382222,0.0772309154,0.1397942156,-0.0492856838,-0.1302000731,-0.1711413115,0.0244605001,0.0034530591,0.0529023558,-0.0256133415,-0.0196987726,-0.1406338811,-0.0862003416,-0.0651132092,0.1927039325,0.0219706986,0.0961716399,-0.1539789587,0.1033753529,0.1573768705,0.001991689,0.1425703317,0.1473876834,0.1558504999,-0.1496986896,0.0578015968,-0.0052425754,-0.1305069178,-0.086578086,0.1079907343,0.0164677221,0.0306212194,0.081664212,-0.0833104625,-0.0703878254,0.1386844069,0.1110608876,-0.0427301936]],"hackathon_name":"StacsHack 2016","index":861,"project_description":"An app for freshers where they create a profile and can match with potential friendsgStacsHack 2016Laurabrewis\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 06:27 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Fresh","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/fresh","keywords":null},{"level_0":862,"hack_vector":[[0.1273326725,-0.1431594044,-0.0112434123,0.0493658967,-0.0543395579,0.145130828,0.1662511528,-0.0381805003,0.0018439,-0.0594585799,-0.0071622157,-0.0212599635,0.1278682947,-0.0623817556,0.010505151,0.0604873635,0.2618670464,0.0237375833,0.0437629633,0.1230534837,-0.2445250452,-0.0052505736,-0.0335742459,-0.0398395918,0.130834654,-0.0137456898,-0.0451231226,-0.1539655775,0.0054768971,-0.1365888715,0.012196308,-0.1120611802,0.0549262613,-0.0487243906,0.0116191544,-0.0408313014,0.1256224811,-0.1476617903,-0.0264900997,0.0358642936,0.0538990796,-0.1236160621,-0.1695843935,-0.0629196018,0.0040154406,-0.0938359201,0.0331576541,-0.0239651073,-0.0332294479,-0.204430759,-0.0908619463,0.0138065442,-0.0899249464,-0.0720911101,-0.1802538335,0.1627638638,-0.1273584664,-0.0169548187,0.0290618334,-0.0288896039,-0.0380979218,0.0083201239,0.0502240472,0.0405410901,0.1089017615,0.0163245834,-0.1261414737,-0.1760670394,0.031493701,0.0350236818,0.0786542818,-0.0631486624,0.004176985,-0.1329715401,-0.0324368179,-0.1077213511,0.1657105088,0.032393381,0.0507692732,-0.1444466561,0.0969321057,0.1750287563,0.0075342441,0.1867038906,0.1282760501,0.1699350625,-0.1431799978,0.0049785962,-0.0384070352,-0.0979898125,-0.0912573338,0.0861788392,0.0618585944,-0.0240594298,0.0167062134,-0.0478500053,-0.1362726837,0.213866502,0.0502515845,-0.0745822489]],"hackathon_name":"StacsHack 2016","index":862,"project_description":"Your best ally when going back home after a long day of studying, or when going out for a beer, or four.See where the bus is compared to your current locationHave you ever missed the night bus or waited in the cold while it arrives several minutes late? Say no more...  The St Andrews night bus tracker will be your ally when going back home after a long day of studying, or when going out for a beer, or four.StacsHack 2016Sebastian Duque\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 06:14 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"St Andrews night bus tracker","project_tags":["android","react","java","javascript","twilio"],"project_url":"https:\/\/devpost.com\/software\/st-andrews-night-bus-tracker","keywords":"andrews,st,night,bus,tracker,going,waited,four,arrives,back,beer,cold,day,ever,home,late,long,minutes,missed,nightbus"},{"level_0":863,"hack_vector":[[0.1631966233,-0.1357866973,-0.0120877316,0.0618053637,-0.0275038388,0.1533813626,0.2114183605,-0.0520579889,-0.0283569284,-0.0043115248,0.0045594461,-0.0079256343,0.1417594999,-0.0850529894,0.0254333057,0.0344560631,0.2337029427,-0.0066049611,0.0471555367,0.1109402701,-0.2303264737,0.0225200914,-0.0392929651,-0.0305492487,0.1657021344,-0.0252911523,-0.0447838046,-0.1777986139,0.0085173426,-0.0842905343,0.0507701077,-0.1252570152,0.0580217466,-0.0644303858,-0.0433370285,-0.005517697,0.1315577328,-0.1319833398,-0.0314805061,0.0400400795,0.0544992276,-0.1395230889,-0.1486779898,-0.0374333784,0.0169585459,-0.0463327356,0.0227806754,-0.0449154191,-0.0203085598,-0.1966080517,-0.0930781588,0.0249812547,-0.1251926124,-0.0107778292,-0.1523064226,0.1506241113,-0.1625472158,0.0163794663,-0.0010903362,-0.0341524035,-0.0430867262,0.0340579413,0.0677416846,0.0605217405,0.1365052611,-0.0240408313,-0.1294514835,-0.1443077028,0.0230816584,0.0184547026,0.0615056418,-0.0407129861,0.0054794904,-0.1382992268,-0.0130063538,-0.101664111,0.1914969981,0.0137554556,0.0460101515,-0.1511805207,0.1322995275,0.164188534,0.029657919,0.1590092033,0.1321134567,0.1902433634,-0.1203913838,0.0232718773,-0.0012209109,-0.0968110859,-0.1241562366,0.085562855,0.0678880438,0.005695445,0.040703088,-0.0371180885,-0.1194523722,0.1861154288,0.0706536174,-0.04905596]],"hackathon_name":"StacsHack 2016","index":863,"project_description":"Bridging the gap between farming and codingFarm Script in actionFarming is food, thus farming matters. However, farming may be hard without the proper automation. This is where Farm Script comes in.Farm Script allows you to automate farming tasks and produce instant output - grow as many as 10,000,000 orchids in less than a second!We built Farm Script using our beloved HTML, CSS and JavaScript.Making the god damned thing.StacsHack 2016Domantas Jurkus\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 05:50 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Farm Script","project_tags":["html","css","javascript","json"],"project_url":"https:\/\/devpost.com\/software\/farm-script","keywords":"farming,farm,script,built,without,however,hard,grow,god,food,css,damned,inspiration,comes,challenges,beloved,automation,automate,html,instant"},{"level_0":864,"hack_vector":[[0.1598745883,-0.0969207585,-0.0270324387,0.0463465229,-0.0122891953,0.1329394728,0.2012171,-0.0338972509,-0.036586076,0.0048373761,0.0184893142,-0.0659690872,0.1535238773,-0.0733215734,0.0716632828,-0.0203147382,0.1871550381,-0.0214145351,0.0575665943,0.1243018135,-0.2411630303,0.0252242386,-0.0541942269,0.0032678917,0.1305746287,-0.0310322549,-0.0321620144,-0.1700610071,-0.0228438452,-0.0790236294,0.067712523,-0.122992985,0.0239597484,-0.0780405328,-0.022465026,-0.0064557954,0.1179226115,-0.1349965483,-0.0608335361,-0.0117061557,0.0653131604,-0.1209324896,-0.1491231918,-0.0152332569,0.0550723299,-0.0438282937,0.0099742264,-0.0938857347,-0.0148886079,-0.2048241645,-0.1442961246,0.0245595388,-0.1197836474,0.0365650989,-0.2041582763,0.1570022255,-0.1433313042,-0.0150305182,0.0223541595,-0.0987276956,-0.0647006333,0.029522568,0.0754469037,0.0515217371,0.1188277081,0.0161751658,-0.0926030874,-0.1237063408,0.0143714128,0.0112266038,0.0649669468,-0.0350458734,0.0191644598,-0.1214872524,0.044309862,-0.1129798666,0.1886914372,0.0019571807,0.0033673884,-0.1305932254,0.1195899695,0.148298353,0.0648418888,0.150293991,0.1170302108,0.2157213092,-0.0805932879,-0.0420391411,-0.0098795826,-0.0606581233,-0.1392681301,0.0624602996,0.1105610952,-0.0343487598,-0.0004062792,-0.0021811849,-0.1551034451,0.2378930449,0.006054692,-0.062873885]],"hackathon_name":"StacsHack 2016","index":864,"project_description":"Achievement System Package for Atom Editor\"First Commit\" Achievement & Level Up\"20 Lines of Code\" AchievementAchieve The Atom packageOnline LeaderboardAchieve The Atom packageThe project was inspired by the GitHub challenge to create a new development tool. We decided to make achievement system, so that it motivates developers to build quality code in a more entertaining way.It adds several types of achievements, such as number of lines, number of commits and quality of code (i.e. number of comments weighed by the total number of lines in a file). Obtaining achievements allows users to gain experience and levels. Developers can also compete with their friends, whose information is fetched from GitHub.We used CoffeeScript, as it is the language of choice for Atom packages development. Some backend is implemented using Python. We divided the tasks, such that some of us were working mostly on frontend, while others focused on backend.None of us used CoffeeScript before, so it was a real challenge to go from JavaScript to developing in a similar, but at the same time very different language. We have never developed packages for Atom before, so we spent a fair amount of time learning that as well. Other difficulties were related to the GitHub API and efficient GitHub repository management.We are proud that we managed to build our first real Atom package and publish it to https:\/\/atom.io\/packages\/.We improved our JavaScript knowledge, got to know GitHub API, learned CoffeeScript and Atom Package development.StacsHack 2016Nikita Samarin\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 05:34 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Achieve The Atom","project_tags":["coffeescript","javascript"],"project_url":"https:\/\/devpost.com\/software\/achieve-the-atom","keywords":"github,atom,number,development,coffeescript,packages,challenge,language,proud,learned,javascript,quality,used,real,code,achievements,package,developers,build,backend"},{"level_0":865,"hack_vector":[[0.1436256468,-0.1028471515,-0.0317370407,0.0291635636,-0.0220927969,0.1143450066,0.2048605233,-0.0144306887,-0.0315618329,0.0137175182,0.0098189469,-0.0808486044,0.1437759995,-0.0661484599,0.0815841556,-0.0025057434,0.1975085437,-0.0090990607,0.0373687036,0.1165505201,-0.2477670759,0.0428152718,-0.0416953415,-0.011552887,0.096297048,-0.0314432383,-0.0304353312,-0.1761216819,-0.0195847061,-0.0832321346,0.0754716843,-0.1237331927,0.01312159,-0.0883185938,-0.026837362,-0.0164618697,0.1064129174,-0.1508256197,-0.0654804483,-0.0135517232,0.0293145142,-0.139558509,-0.1426164508,-0.0302697718,0.0770130455,-0.0539212078,0.010675597,-0.090556398,-0.0143235307,-0.1957862526,-0.1538977027,0.0031144912,-0.1089204252,0.0186751205,-0.2081702352,0.1529342234,-0.1319117546,-0.0306368489,0.0381164774,-0.1096574441,-0.0783352777,0.0240940377,0.0827773884,0.0520430021,0.1017150506,0.0112476833,-0.0860500261,-0.11009074,0.0301091354,0.0142543772,0.0674682856,-0.0542800613,0.0229104944,-0.1116915718,0.0383985229,-0.152357474,0.1694448441,0.0041305358,0.004850117,-0.1304284632,0.1373858303,0.1594764441,0.0623280145,0.1642727256,0.1011964455,0.2089511752,-0.0960750803,-0.033734668,-0.0117972679,-0.0797479153,-0.140174374,0.0531425551,0.1008212268,-0.0402179249,-0.0088311182,0.0175922811,-0.1688414365,0.2236426026,0.0052950587,-0.0725915581]],"hackathon_name":"StacsHack 2016","index":865,"project_description":"We make gorgeous graphs easy.HomeUsage instructionsProfilePain is always a good motivator. I can attest to the physical and mental pain inflicted to all its users by Michael Bostock: creator of data visualisation library D3.js.However, being able to make visualisations in JavaScript, especially reasonably nice-looking ones with animations and an enormous amount of flexibility regarding how the data is presented, is the reason we endure it.With Gorgeous Graphs Mwah, we simplify the data collection and representation in a variety of common formats, so that users can enjoy Mr. Bostock's work, without giving their life away to StackOverflow.It provides a way to easily send unstructured data to the service, as well as a way to easily retrieve a visualisation of the data in popular formats (e.g. bar charts, line charts, pie charts).As an API that accepts data, placing it into a MongoDB instance. Then we query it and display with a Python NVD3 wrapper, which is an open-source project modified by us.Some of the challenges were especially to do with displaying dates and multiple data sets in one chart. For example, each data point has a date field associated with it, so it makes sense to display a data set as the data contained in each point along with each points' date field. However, doing this results in each data set having different dates, which then results in display inconsistencies.It was necessary to calculate the maximum and minimum dates in the set, and then allow the user to pick a granularity interval. For each interval space, we aggregate the data that belongs in that interval's date range.It works!The front-end is very appealing and user-friendly, and the insertion and retrieval of visualisations works as originally intended. There are some things to iron out though.Wholly unstructured data is not good for aggregation, because it is difficult to aggregate based on more than one field. We learned more about using Flask and MongoDB.Improve the displaying of multiple data sets, add more graph types, and simplify the user onboarding process and graph creation process.StacsHack 2016Jose Salvatierra\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 05:20 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Gorgeous Graphs Mwah","project_tags":["python","python-package-index","flask","mongodb","html5","css3","javascript","bootstrap","jinja","heroku","git","github"],"project_url":"https:\/\/devpost.com\/software\/gorgeous-graphs-mwah","keywords":"data,charts,interval,display,dates,date,set,user,field,process,mongodb,results,bostock,challenges,multiple,especially,mwah,point,one,displaying"},{"level_0":866,"hack_vector":[[0.1306573153,-0.1097368076,-0.0287119076,0.0460685603,-0.0242624041,0.1268532872,0.2071481794,-0.0231006686,-0.0166431069,-0.0276084784,0.0253726412,-0.0521727391,0.1382576972,-0.0639720559,0.0627352744,0.0171972476,0.214046374,-0.0034890715,0.036046546,0.138054803,-0.2441925406,0.0351315551,-0.0377372615,-0.0210271571,0.1014136747,-0.0248241816,-0.0358992331,-0.1739308238,-0.0217111409,-0.0951580927,0.0613629371,-0.1072978079,0.0248000566,-0.0736853778,-0.0053629479,-0.0192267168,0.1141725183,-0.1389251798,-0.0607289895,-0.004602693,0.0390247405,-0.1435890943,-0.1445756108,-0.0457651392,0.0601262376,-0.0565959737,0.0126439258,-0.070816651,-0.0220963489,-0.210947305,-0.1371159405,0.0166387744,-0.1054136381,-0.0073680487,-0.2062951028,0.1554570347,-0.1296567023,-0.0280907601,0.0486591496,-0.1099769697,-0.0740892962,0.0341597125,0.0782806575,0.0516551211,0.1032184139,0.0243037734,-0.1024605408,-0.1271019578,0.0325052142,0.015784353,0.0509973057,-0.0470803343,0.0278186966,-0.1141127124,0.0138670541,-0.1269887388,0.1660121381,-0.0187124144,0.0090593956,-0.1472358555,0.1145877615,0.1657542437,0.0470555499,0.1725840718,0.1002803221,0.2041707486,-0.1047530249,-0.0419923887,-0.0309246145,-0.080357261,-0.1508867145,0.0658467412,0.0909529477,-0.0415492281,-0.0041418709,0.0114802662,-0.1701560616,0.2276783884,0.009777504,-0.0654299632]],"hackathon_name":"StacsHack 2016","index":866,"project_description":"System combining Myo Wristband and Estimote Beacons to help visually impaired people.Traffic light serverIf a person wants to use a pedestrian crossing, they must press the control box button manually. This can be a challenging task for someone who is visually impaired or\/and has reduced mobility.We remove the requirement to physically touch the control box and allow users to control it with a Myo Wristband. At the same time we provide feedback to the wristband user in the form of vibrations based on the proximity of a traffic light and its current state (green\/red).We created an Android app which communicates with the Myo Wristband and with the traffic lights (but there is no need to use the phone - user only needs to launch the app and after syncing with Myo they can put it in their backpack and never use it... user only needs to control the MyoWe didn't have a physical Pedestrian control box - so we had to create a server which listens to the requests and updates\/schedules light switching. We used WebSockets to do this dynamically. Then of course we used the Estimote Beacon which would be part of the same physical control box.We would like to make people involved in city councils around the country aware of this project. We would love to see a real world implementation. We believe that this system could help many people with visual impairment and make their lives significantly easier...StacsHack 2016Dalimil Hajek\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 05:01 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MyoCross","project_tags":["android","myo","jquery","javascript","python","estimote","flask"],"project_url":"https:\/\/devpost.com\/software\/myocross","keywords":"control,myo,box,user,would,use,wristband,needs,make,used,app,traffic,light,physical,people,pedestrian,help,easier,estimote,feedback"},{"level_0":867,"hack_vector":[[0.139899388,-0.0926563293,-0.0438362844,0.0301835742,-0.0351394936,0.1561850905,0.1888582855,-0.0324627459,0.0258821882,-0.0467939302,0.0156864654,-0.0732467845,0.1207965165,-0.054238528,0.0646754578,0.0188330691,0.2466140091,0.0327247083,0.0337373316,0.1088202,-0.2371362895,0.0108794663,-0.0490332209,-0.0253207218,0.0827143118,-0.013486295,-0.0197285693,-0.1758442968,-0.0277922563,-0.102380462,0.0558304191,-0.1308787912,0.0274662767,-0.0889396295,-0.0017438987,-0.019586008,0.105447568,-0.1390655786,-0.0674661249,-0.0115182661,0.0230223313,-0.1289123148,-0.1482177228,-0.0462282896,0.0564600565,-0.0837062001,0.0152105857,-0.0437785573,-0.0518769547,-0.2063254863,-0.1415442824,-0.0026131,-0.0840171874,-0.045046974,-0.1835945547,0.1528236866,-0.1031841189,-0.0386729687,0.0457880497,-0.0908563957,-0.0821949616,0.0190477278,0.0816681311,0.0324164554,0.0881657153,0.0270351674,-0.110166885,-0.1442371607,0.0405655727,0.0373928584,0.0700991899,-0.057229273,0.0463960692,-0.1250487715,0.0020514322,-0.1375076771,0.173503533,0.0113346297,0.020597918,-0.1344350129,0.1076616123,0.1689945012,0.0414112657,0.1861170083,0.0855840966,0.1857661158,-0.1083836928,-0.0249002576,-0.0367022529,-0.0794180185,-0.1252474487,0.0720951855,0.0762823671,-0.0498381108,0.0032546523,0.0102228941,-0.144664526,0.2615739703,0.0019628333,-0.1015685275]],"hackathon_name":"StacsHack 2016","index":867,"project_description":"Uses your existing Facebook data to automatically generate a chatbot that talks like youTired of responding to nagging messages on facebook?Sick of people who never reply to your own nagging messages?uAI cleverly impersonates you so that your friends will never be without you - and you can never speak to them again!Python, python, and more python. It's efficient right?50MB text files full of facebook messages take a long time to index.Not only can you generate a chatbot based on yourself, but you can generate one based on any of your friends using your data! Don't do this! It's creepy!Facebook has a legitimately scary amount of data about you. You should probably check up on that.More efficiency, and a web interface so people can generate their bots more easily!StacsHack 2016I worked on sleepingAlex Olson\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 04:34 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"uAI","project_tags":["python","github"],"project_url":"https:\/\/devpost.com\/software\/uai","keywords":"generate,messages,never,facebook,python,uai,based,nagging,friends,data,people,without,efficient,impersonates,full,files,efficiency,inspiration,easily,creepy"},{"level_0":868,"hack_vector":[[0.1563514471,-0.0969173461,-0.0305779576,0.0494307689,-0.012293715,0.1293232143,0.2044261098,-0.0340296179,-0.042808529,-0.0092421379,0.0128220581,-0.064040035,0.153901279,-0.0632050335,0.0590077378,-0.0195352379,0.196735844,-0.0175500959,0.0442185178,0.1418763846,-0.2370554656,0.0246297792,-0.0382298864,0.0062978812,0.1482689083,-0.0245603826,-0.0280773062,-0.1785554439,-0.0367194228,-0.0839575157,0.07459528,-0.1147587895,0.0352316909,-0.0762414187,-0.0171334352,-0.0137449186,0.115613699,-0.1302826703,-0.0600637235,-0.0044012638,0.0704951957,-0.1320010871,-0.1475679874,-0.0280450601,0.0477017276,-0.0513720401,0.0004909788,-0.090174742,-0.0188568737,-0.2122556567,-0.1359231323,0.0121219344,-0.1143208593,0.0188043173,-0.1990035921,0.1681976616,-0.1552450955,-0.0167113002,0.0221296549,-0.1034534648,-0.0653678253,0.0310330857,0.0673842803,0.0323084854,0.1173072606,0.0225118175,-0.1089820489,-0.1266788542,0.0214721579,0.0191231668,0.0567208529,-0.0367751494,0.0171400905,-0.1146492586,0.035577219,-0.1092936024,0.184344247,-0.0181847494,0.0069386298,-0.1273731887,0.1092812046,0.141402036,0.0643505231,0.1533407569,0.1104566306,0.2098404616,-0.0859115198,-0.0304410476,-0.0134926131,-0.0638703331,-0.1354341209,0.0670469403,0.0979059115,-0.0347650312,-0.0144451112,-0.0018317713,-0.1630094498,0.235476464,0.0118048349,-0.054547105]],"hackathon_name":"StacsHack 2016","index":868,"project_description":"Write \"Brainfuck\" code using leap motion gestures, compile the code you've just written, check the result in textfileWe liked the challenge of company \"CodePlay\" which was to create the most ridiculous programming language and compiler and we also wanted to try out leap motion. Thus we decided to use leap motion for writing the language and since leap motions gestures and time given in hackathon are very limited, we decided to go with the most minimalistic and simplistic programming language called \"Brainfuck\".You can write \"Brainfuck\" code with hand gestures using leap motion and then the program compiles what you just written outputing the result in a text file.Leap motion was not very good at recognising similar hand gestures, thus sometimes the gestures had to be repeated few times in order to make the input. Mac and Windows tend to interpret frameworks in a slightly different ways, thus some of us were forced to contribute to the project without actually having one on their computer.I improved my leap motion implementation skills, learned that there exist programming language which is actually called \"Brainfuck\", got some great ideas from other contestants about their projects.StacsHack 2016Martynas Paulikas\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 03:24 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Brain Motion","project_tags":["leap-motion","c++"],"project_url":"https:\/\/devpost.com\/software\/brain-motion","keywords":"leap,motion,language,gestures,programming,brainfuck,thus,actually,called,learned,decided,hand,go,good,got,great,ideas,hackathon,implementation,improved"},{"level_0":869,"hack_vector":[[0.153934285,-0.1151714325,-0.0214088243,0.0381405763,-0.0144785615,0.1330375671,0.2112635225,-0.0466154628,-0.0266479533,-0.0144108739,0.0040969108,-0.0460952893,0.1346277893,-0.065942958,0.0556970797,0.0064383191,0.2079533339,-0.0162375215,0.0517021567,0.1153785735,-0.2307419181,0.0488241687,-0.0361452401,-0.0249054078,0.1258122772,-0.0300699789,-0.02766761,-0.1715707332,-0.0192165934,-0.076339446,0.0585537925,-0.125405997,0.0534583628,-0.0804637149,-0.0343797766,-0.0222092066,0.1326990873,-0.1354033649,-0.0600084215,0.0139537193,0.0483737141,-0.1536440849,-0.1395921111,-0.0520007387,0.0457662344,-0.0563328564,0.0147133097,-0.066484265,-0.0239366852,-0.1933634728,-0.138104707,0.0113664791,-0.1312998831,0.0081515014,-0.173362866,0.1453251839,-0.1572750956,-0.0158774517,0.0309219044,-0.078444384,-0.0737916231,0.0217124186,0.071744673,0.0418120623,0.1155279279,-0.0040679323,-0.1250275671,-0.1260607094,0.0243566427,0.0319028459,0.0720865503,-0.0664302632,0.0163058676,-0.1348944157,0.0102940677,-0.1373792291,0.1822947562,0.0042637824,0.0251977798,-0.142799601,0.1234847009,0.149697125,0.0422306843,0.1708688885,0.120169431,0.1834200025,-0.1246263757,-0.006004591,-0.0025550709,-0.0964293778,-0.1472507864,0.0678116381,0.0906729996,-0.027940955,0.0192676857,-0.0192602146,-0.1474628597,0.2178327739,0.0336620025,-0.0573462583]],"hackathon_name":"StacsHack 2016","index":869,"project_description":"a program language that uses only emoticonsa program language that uses only emoticonsin the antlr-ver\/grammer\/ foulder \ncompile code using javac emlgrun.javaThen programs can be run using emlgrun filepathwhere filepath is the path to a file , it will first check that the syntax in the file is correct then execute the codean example program is this that calculates the factorial of the imputed number\n|\u2011O:):$:))XD:):$><>:):>1<3:)XD:)<:|1:$:))XD:)):D:):$<\/3:O:)):$other example programs can be found in the antler-ve\/test\/ folder including this one\nthe full Syntax is found in antler-ve\/grammer\/emlg.g4\nand some non compact programs with comments that explain what is happingSimilar take on the \"altr-ver\" but instead uses the Unicode emoji images.compile using: javac *.javaThen programs can be run using: java Program \/path\/to\/source\/file [OPTIONAL -I \/path\/to\/vm\/spec\/file\/]Example of FizzBuzz: https:\/\/raw.githubusercontent.com\/Dillnot\/emoticon-lang\/master\/emjInter\/fizzbuzz.emwe tried to write a compilet that compile the programs into java byte code but over estimated how long it would take , the file has been started and is in the grammar folder called compVisitor.java but is it not functional or finishedStacsHack 2016dylan stevenson\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 03:07 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"emoticon-lang","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/emoticon-lang","keywords":"programs,file,java,ver,using,xd,code,program,compile,run,path,example,antlr,emjinter,emlgrun,grammer,javac,lang,found,folder"},{"level_0":870,"hack_vector":[[0.1365337074,-0.1147822812,-0.0083601763,0.0626337081,-0.0321980193,0.1587538868,0.2030577809,-0.0438688733,-0.0389922634,-0.0121559314,0.0159420241,-0.0312012732,0.1419712752,-0.0765588731,0.0479666367,0.0335621238,0.2567572296,0.0285791345,0.0516407937,0.1072109714,-0.2213963121,0.0452075116,-0.0507148169,-0.051246196,0.1198634356,-0.0183817875,-0.0541062243,-0.2090260684,-0.0105680628,-0.079876475,0.0582569353,-0.1345953643,0.0533486344,-0.0888587162,-0.0325273238,-0.0074205049,0.1364332438,-0.1206388399,-0.0327497348,0.0319396965,0.0403051674,-0.1582792699,-0.172774896,-0.0355049819,0.0246760715,-0.0477624685,0.0315618217,-0.0460356399,-0.0383010618,-0.2023927271,-0.0841216594,0.0124459909,-0.0984152332,-0.0232174098,-0.1478445083,0.1504495442,-0.1394244581,0.0193116795,0.0219490286,-0.0406818315,-0.0431617647,0.0194846746,0.0804881528,0.0632141829,0.1217907891,-0.014942145,-0.1088870391,-0.1545804888,0.0388723835,0.0186747182,0.0695307553,-0.0522389337,0.0206046905,-0.1367848217,-0.0209618565,-0.1260029078,0.1850073934,0.0175146274,0.0660011023,-0.1377249509,0.1405606121,0.1619407982,0.0551138669,0.1587692499,0.1262220293,0.1726171672,-0.1261346638,-0.0056382255,0.0030000375,-0.1046680808,-0.1356883347,0.0724394917,0.0619694181,-0.0274474639,0.0313430764,-0.0384501368,-0.1150828078,0.1857175678,0.0481838062,-0.0695748776]],"hackathon_name":"StacsHack 2016","index":870,"project_description":"Twitter based service to automatically add issues to the git repository when tweeted atThe added issueRunning on Amazon AWSThe response tweetThe initial tweetTwitter based service to automatically add issues to the git repository when tweeted at\n\nWhenever it receives a tweet in the format:\n@1_pjp <title> | <body> #gitbug\nit creates an issue on the GitHub repository and tweets back the user. A much easier way of quick bug reporting!\n\nUses libraries:StacsHack 2016Philip Pratt\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 02:51 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"GitBug","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/gitbug","keywords":"github,twitter,repository,com,githubpy,gitbug,python,https,bug,body,issue,creates,easier,format,bear,git,based,back,automatically,whenever"},{"level_0":871,"hack_vector":[[0.153934285,-0.1151714325,-0.0214088243,0.0381405763,-0.0144785615,0.1330375671,0.2112635225,-0.0466154628,-0.0266479533,-0.0144108739,0.0040969108,-0.0460952893,0.1346277893,-0.065942958,0.0556970797,0.0064383191,0.2079533339,-0.0162375215,0.0517021567,0.1153785735,-0.2307419181,0.0488241687,-0.0361452401,-0.0249054078,0.1258122772,-0.0300699789,-0.02766761,-0.1715707332,-0.0192165934,-0.076339446,0.0585537925,-0.125405997,0.0534583628,-0.0804637149,-0.0343797766,-0.0222092066,0.1326990873,-0.1354033649,-0.0600084215,0.0139537193,0.0483737141,-0.1536440849,-0.1395921111,-0.0520007387,0.0457662344,-0.0563328564,0.0147133097,-0.066484265,-0.0239366852,-0.1933634728,-0.138104707,0.0113664791,-0.1312998831,0.0081515014,-0.173362866,0.1453251839,-0.1572750956,-0.0158774517,0.0309219044,-0.078444384,-0.0737916231,0.0217124186,0.071744673,0.0418120623,0.1155279279,-0.0040679323,-0.1250275671,-0.1260607094,0.0243566427,0.0319028459,0.0720865503,-0.0664302632,0.0163058676,-0.1348944157,0.0102940677,-0.1373792291,0.1822947562,0.0042637824,0.0251977798,-0.142799601,0.1234847009,0.149697125,0.0422306843,0.1708688885,0.120169431,0.1834200025,-0.1246263757,-0.006004591,-0.0025550709,-0.0964293778,-0.1472507864,0.0678116381,0.0906729996,-0.027940955,0.0192676857,-0.0192602146,-0.1474628597,0.2178327739,0.0336620025,-0.0573462583]],"hackathon_name":"StacsHack 2016","index":871,"project_description":"a program language that uses only emoticonsa program language that uses only emoticonsin the antlr-ver\/grammer\/ foulder \ncompile code using javac emlgrun.javaThen programs can be run using emlgrun filepathwhere filepath is the path to a file , it will first check that the syntax in the file is correct then execute the codean example program is this that calculates the factorial of the imputed number\n|\u2011O:):$:))XD:):$><>:):>1<3:)XD:)<:|1:$:))XD:)):D:):$<\/3:O:)):$other example programs can be found in the antler-ve\/test\/ folder including this one\nthe full Syntax is found in antler-ve\/grammer\/emlg.g4\nand some non compact programs with comments that explain what is happingSimilar take on the \"altr-ver\" but instead uses the Unicode emoji images.compile using: javac *.javaThen programs can be run using: java Program \/path\/to\/source\/file [OPTIONAL -I \/path\/to\/vm\/spec\/file\/]Example of FizzBuzz: https:\/\/raw.githubusercontent.com\/Dillnot\/emoticon-lang\/master\/emjInter\/fizzbuzz.emwe tried to write a compilet that compile the programs into java byte code but over estimated how long it would take , the file has been started and is in the grammar folder called compVisitor.java but is it not functional or finishedStacsHack 2016dylan stevenson\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 03:07 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"emoticon-lang","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/emoticon-lang","keywords":"programs,file,java,ver,using,xd,code,program,compile,run,path,example,antlr,emjinter,emlgrun,grammer,javac,lang,found,folder"},{"level_0":872,"hack_vector":[[0.1365337074,-0.1147822812,-0.0083601763,0.0626337081,-0.0321980193,0.1587538868,0.2030577809,-0.0438688733,-0.0389922634,-0.0121559314,0.0159420241,-0.0312012732,0.1419712752,-0.0765588731,0.0479666367,0.0335621238,0.2567572296,0.0285791345,0.0516407937,0.1072109714,-0.2213963121,0.0452075116,-0.0507148169,-0.051246196,0.1198634356,-0.0183817875,-0.0541062243,-0.2090260684,-0.0105680628,-0.079876475,0.0582569353,-0.1345953643,0.0533486344,-0.0888587162,-0.0325273238,-0.0074205049,0.1364332438,-0.1206388399,-0.0327497348,0.0319396965,0.0403051674,-0.1582792699,-0.172774896,-0.0355049819,0.0246760715,-0.0477624685,0.0315618217,-0.0460356399,-0.0383010618,-0.2023927271,-0.0841216594,0.0124459909,-0.0984152332,-0.0232174098,-0.1478445083,0.1504495442,-0.1394244581,0.0193116795,0.0219490286,-0.0406818315,-0.0431617647,0.0194846746,0.0804881528,0.0632141829,0.1217907891,-0.014942145,-0.1088870391,-0.1545804888,0.0388723835,0.0186747182,0.0695307553,-0.0522389337,0.0206046905,-0.1367848217,-0.0209618565,-0.1260029078,0.1850073934,0.0175146274,0.0660011023,-0.1377249509,0.1405606121,0.1619407982,0.0551138669,0.1587692499,0.1262220293,0.1726171672,-0.1261346638,-0.0056382255,0.0030000375,-0.1046680808,-0.1356883347,0.0724394917,0.0619694181,-0.0274474639,0.0313430764,-0.0384501368,-0.1150828078,0.1857175678,0.0481838062,-0.0695748776]],"hackathon_name":"StacsHack 2016","index":872,"project_description":"Twitter based service to automatically add issues to the git repository when tweeted atThe added issueRunning on Amazon AWSThe response tweetThe initial tweetTwitter based service to automatically add issues to the git repository when tweeted at\n\nWhenever it receives a tweet in the format:\n@1_pjp <title> | <body> #gitbug\nit creates an issue on the GitHub repository and tweets back the user. A much easier way of quick bug reporting!\n\nUses libraries:StacsHack 2016Philip Pratt\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 02:51 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"GitBug","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/gitbug","keywords":"github,twitter,repository,com,githubpy,gitbug,python,https,bug,body,issue,creates,easier,format,bear,git,based,back,automatically,whenever"},{"level_0":873,"hack_vector":[[0.1650943607,-0.1385086328,-0.0176582653,0.0653884634,-0.0215787999,0.1519241035,0.2048255503,-0.0519790091,-0.0357674956,-0.0044282963,0.019567579,-0.0292989127,0.1419303566,-0.0746654943,0.050887011,0.0121845827,0.2234769762,0.0090563856,0.0460194312,0.0974558964,-0.227386415,0.0364976861,-0.0484082811,-0.0279445909,0.1440572143,-0.0214232765,-0.0420595109,-0.1947354674,-0.0085304566,-0.0760284737,0.0663405955,-0.1338534802,0.054314442,-0.0816982761,-0.0340967216,-0.0161626805,0.1322769225,-0.1312541217,-0.0474599861,0.0228786021,0.0573471598,-0.1514719874,-0.1656164676,-0.0288678333,0.0174151976,-0.032230895,0.0276669264,-0.0621131659,-0.0361650586,-0.1992278546,-0.100405857,0.0229216479,-0.1133278459,-0.0073343236,-0.1590556651,0.156228736,-0.145684734,0.0188387781,0.0099592553,-0.0463739932,-0.0486295074,0.031688299,0.0772620738,0.0582371205,0.1283090115,-0.0097193653,-0.126793772,-0.1327442974,0.0212885793,0.022239428,0.0710591972,-0.0354681723,0.0274160691,-0.1476864517,-0.0087845437,-0.1146777272,0.1937700957,0.0154416617,0.0512835421,-0.1351551265,0.1358254254,0.1595511138,0.0464371368,0.1595624238,0.1273698807,0.1810044348,-0.1184693575,-0.0022471575,-0.0068418509,-0.0971250683,-0.1218214035,0.0810488388,0.0727401599,-0.0298377834,0.0440882817,-0.0358589254,-0.1148735359,0.1958213151,0.0420542359,-0.054579109]],"hackathon_name":"IC Hack '16","index":873,"project_description":"Learn to write sexier code and docs through a personalized quiz gameDashboard viewJavascript quiz questionEnglish quiz questionsTraining session configurationStylist teaches developers good programming and documentation style through a quiz where \nquestions are automatically generated from prior projects.We use JSCS to lint code extracted from a user-submitted\nGithub repository following the Google style guide.We use a fork of\na Strunk and White english\nlinter by @deniseli.\nThe rules which are checked include:IC Hack '16I worked on the Frontend.Feynman Liang\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 05:50 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Stylist","project_tags":["javascript","css","php","node.js","jquery","express.js","github","bootstrap"],"project_url":"https:\/\/devpost.com\/software\/stylist-ltxzrh","keywords":"style,documentation,context,english,programming,javascript,stylist,strunk,use,google,guide,white,good,extracted,github,generated,free,format,fork,following"},{"level_0":874,"hack_vector":[[0.1518455595,-0.1359407008,-0.0087985741,0.0625372082,-0.0246576108,0.1476809382,0.1979506612,-0.043885231,-0.039075233,-0.000708627,0.0066619073,-0.0275838468,0.142106086,-0.0730767027,0.0482259616,0.0369568281,0.2337327152,0.0027818498,0.0490179025,0.112460725,-0.2360766828,0.0391034372,-0.0394578911,-0.0340372287,0.1565022022,-0.0220032148,-0.0477937572,-0.192158252,0.0080096778,-0.0758819133,0.061547298,-0.1298121512,0.0542358644,-0.0729763731,-0.0313557312,-0.0134545537,0.131203413,-0.1327204406,-0.0271640811,0.0307959244,0.0477871783,-0.1695661545,-0.1796580106,-0.0411998816,0.0062490953,-0.0333422832,0.0159250498,-0.0510532893,-0.0104895625,-0.1923956424,-0.0877263024,0.0229934808,-0.1135635674,-0.0080140242,-0.1668922901,0.1531564742,-0.1620907933,0.0294864196,0.0076983855,-0.0392277986,-0.050252948,0.03674566,0.0693855584,0.0648894459,0.1285358667,-0.0128444619,-0.1184989214,-0.1537276208,0.0285098385,0.0231900997,0.0852333456,-0.0456371494,0.0185509026,-0.1387261599,-0.0168560855,-0.1067968681,0.1779501736,0.0113697099,0.0526452474,-0.1289536655,0.1281608939,0.1543633491,0.0510459654,0.1632249504,0.1310277134,0.1781756729,-0.1342630535,0.0092132231,-0.0032926055,-0.0944230407,-0.1156301424,0.0782186538,0.0719097927,-0.0219486095,0.048139926,-0.0360518694,-0.1110296473,0.181288287,0.0554813966,-0.0531610884]],"hackathon_name":"IC Hack '16","index":874,"project_description":"ANN that trains using a genetic algorithm to direct 'fish' to seek food and avoid dangerscreenshotA 'fish tank' with a set of creatures that evolve each generation with the goal of collecting food and avoiding danger.Each creature is controlled by an artificial neural network, and training is carried out by a genetic algorithm, mixing the 'chromosomes' of the 'fittest' from to form the next generation.Written in python, using the pygame module for graphics, during ichack16.IC Hack '16James Lane\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:03 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"fish","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/evolvingann-2alhe7","keywords":null},{"level_0":875,"hack_vector":[[0.1535698622,-0.1089896336,-0.022841882,0.0446789525,-0.0195864625,0.159290731,0.1821789742,-0.0447054431,-0.0091423709,-0.0309965443,0.0255136229,-0.0684790537,0.1387764961,-0.0686886981,0.0554687902,0.0115657076,0.2294654548,0.0151530812,0.0383621342,0.1165571287,-0.2335496247,0.0332348943,-0.0423212163,-0.0279347301,0.1054004058,-0.0315373652,-0.0292476062,-0.1892529428,-0.0348195247,-0.0956287757,0.069970496,-0.1149707511,0.0420375206,-0.0892950594,-0.012722373,-0.0272705499,0.1200367436,-0.1395667046,-0.0590911731,-0.0065959776,0.043561928,-0.1334884763,-0.1612345427,-0.0315314978,0.0528436117,-0.0471537262,0.0203943085,-0.0577054732,-0.0418276787,-0.2196284235,-0.1397987455,0.0282878615,-0.0971984193,-0.0206880532,-0.1910211593,0.1588014215,-0.1056383029,-0.0155958422,0.0380153246,-0.0833291262,-0.063641198,0.0119980667,0.0772455633,0.0417035669,0.1066104025,0.0202303976,-0.10603825,-0.1289674938,0.0261279549,0.031330213,0.0768678039,-0.0411213636,0.0328253694,-0.132221356,0.0101047028,-0.1144107878,0.178802371,0.0050031352,0.015457971,-0.1322449148,0.1190601513,0.1648429781,0.038520962,0.1755360663,0.1032068804,0.1918876171,-0.0980081037,-0.045943886,-0.0308110248,-0.075298883,-0.1347117722,0.0645563602,0.0768854991,-0.0529044196,0.0019231805,-0.0057208538,-0.1418906897,0.2412165552,0.0086130202,-0.0874715447]],"hackathon_name":"IC Hack '16","index":875,"project_description":"Find hidden treasures near youFront pageList your treasureAdd location and detailsLook at the details of what you findFind treasures around you!We wanted to make a tool that helps people share with their neighbours what they not need anymore. One man trash is another man's treasure!Treasure helps community get tighter, people explore and find new cool stuff. It lets you list your stuff and find what other people have listed around you.Treasure is an Android application that relies on a Elasticsearch backend. All the search and insertion operation are made by a Django powered RESTful API.Location, location, locationIt actually works pretty well, we're pretty surprisedAndroid, AWS, BanterTreasure Hunts - Organized city roams to find new treasuresIC Hack '16I worked on the backend, realized the API entry points and the query to the Elasticsearch instance.I had the chance to learn more about android developmentI pair programmed with Tom(Fangyi) on the front end and also offered help to Fred while he worked on the backend with Vince.I made the UI and ViewController for the Android App.Vincenzo Pandolfo\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:12 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Treasure","project_tags":["android","elasticsearch","django","python","java"],"project_url":"https:\/\/devpost.com\/software\/treasure-wnpv0r","keywords":"treasure,location,find,people,helps,new,man,stuff,android,pretty,hunts,insertion,get,inspiration,explore,elasticsearch,django,cool,city,community"},{"level_0":876,"hack_vector":[[0.14797692,-0.1166500822,-0.0309860539,0.0396063589,-0.0314258784,0.1442494839,0.2052391469,-0.0438892171,-0.0109886806,-0.0345293507,0.0166739989,-0.038038142,0.1354679167,-0.0677988753,0.0431717671,0.0080249775,0.230778262,0.004936697,0.0432421193,0.1159388646,-0.2378068715,0.0135970945,-0.0361597203,-0.0297680832,0.1105984524,-0.0183042698,-0.0271102339,-0.165750578,-0.0070096287,-0.1080944836,0.0427774601,-0.1319808215,0.0354316905,-0.0673708543,-0.0154347662,-0.0225300882,0.1301184595,-0.1431742758,-0.0582448207,0.0184195973,0.0558194742,-0.1221143082,-0.1494771838,-0.0428043231,0.0448579863,-0.0763000026,0.0251953006,-0.057668224,-0.0416306891,-0.2113163769,-0.1319320798,0.0165915694,-0.1042312905,-0.0279486012,-0.1810977012,0.1568123549,-0.1306158304,-0.0288631991,0.0295030922,-0.0752214193,-0.0640107691,0.0186622571,0.0761725008,0.0510215424,0.1205406934,0.0114576491,-0.1161201522,-0.135155797,0.0272296034,0.0291867517,0.0650540292,-0.0521408655,0.0144902403,-0.1311646551,0.002949635,-0.1253391206,0.181626752,0.0239918083,0.0245738588,-0.1438899785,0.1259625703,0.1675664485,0.0280864313,0.1760433167,0.1154335439,0.1877915561,-0.1172202155,-0.0207898449,-0.0256596711,-0.0825825483,-0.1348364055,0.0692103729,0.0834030434,-0.0282085426,0.0072661024,-0.0180334225,-0.1447229683,0.2255574912,0.0207275227,-0.067616187]],"hackathon_name":"IC Hack '16","index":876,"project_description":"There for you when Github isn't - automatic replication of your git repos so you can still pull when Github is down.The inspiration is pretty obvious - Github goes down at least once a week and is a threat to productivity and peacefulness alike. Therefore we are allowing users to cache all\/specific repos (subject to selection on the UI) to our mirror which updates every time something new is committed. We have created a proxy acting as a 'Git server' that goes through Git unless it is unavailable - in which GitStash will be called so users can still pull from these repos and work can continue.IC Hack '16Jenny Lea\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:13 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"GitStash","project_tags":["express.js","handlebars.js","node.js","php","golang","postgresql","mongodb","github"],"project_url":"https:\/\/devpost.com\/software\/gitstash-ymx5ct","keywords":"git,users,repos,goes,work,new,mirror,least,inspiration,gitstash,github,every,peacefulness,created,continue,committed,called,cache,allowing,alike"},{"level_0":877,"hack_vector":[[0.1552544981,-0.1161959469,-0.0313531682,0.0572057031,-0.025206862,0.1353875548,0.1954152733,-0.0262395497,-0.0171416253,-0.028092213,0.0056185056,-0.0527580939,0.1464102715,-0.0728036836,0.0666760653,-0.0001761639,0.2200849354,0.0067701642,0.0515086055,0.1183777452,-0.2356699109,0.0286510289,-0.0451566949,-0.021736702,0.1203336641,-0.0275298394,-0.0327122845,-0.1780754328,-0.0212828927,-0.0862161443,0.0584582426,-0.1228115559,0.0390403047,-0.0766612589,-0.0314430892,-0.0116835134,0.1273821592,-0.1381588727,-0.0531684943,0.015899105,0.0569124743,-0.1280899495,-0.1599197537,-0.0256595891,0.04555865,-0.0664267689,0.0291979946,-0.07628721,-0.0279192422,-0.2115767747,-0.1409885585,0.0125687439,-0.1093604714,-0.0032632796,-0.186916098,0.1628288031,-0.1369496435,-0.0176415872,0.0259655137,-0.0743411779,-0.0707927942,0.0266716648,0.0777382925,0.0423159376,0.11624524,0.0063193096,-0.1017807871,-0.1338500232,0.0156686846,0.0231283475,0.0677487776,-0.0469117239,-0.0002905191,-0.1257961392,0.0130362036,-0.1064620987,0.1977023333,0.0157421622,0.0182455275,-0.1418149322,0.1184586957,0.1645164639,0.0392908044,0.1593709141,0.1161376238,0.198179394,-0.1035535932,-0.0147992456,-0.0096045658,-0.085591495,-0.1324034035,0.0720324665,0.0849523321,-0.0159447789,0.0093588419,-0.0241235532,-0.1395082176,0.2264981866,0.0268397555,-0.0706446618]],"hackathon_name":"IC Hack '16","index":877,"project_description":"Repairing the comment system all over the internet, single handedly. Think of it like a Yelp for websites.Running into different comment registrations, not being able to post comments anonymously and having content moderated by site owners is annoying.It makes sense to outsource comments to a single provider, one login, community moderation.I built it on a Flask framework and used Firebase to store data in the backend.Cross site cookies isn't allowed. I needed to change my project architecture to get it working.Making it alone from start to finish and not giving up on all the features which I had planned to bake in.There are a lot of workarounds required to building something that works for every website and even after that it probably doesn't.Using Machine Learning to stop spam.\nMaking a solid voting system for community moderation.IC Hack '16Raghav Toshniwal\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:15 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Commeta","project_tags":["azure","flask","jquery","heroku"],"project_url":"https:\/\/devpost.com\/software\/commeta","keywords":"community,making,moderation,comments,site,built,works,finish,different,even,every,features,firebase,cross,flask,framework,get,giving,inspiration,learned"},{"level_0":878,"hack_vector":[[0.1487540603,-0.0986484736,-0.0263251197,0.0410327092,-0.0076174219,0.1337343305,0.2218082994,-0.0313655511,-0.0514294654,-0.0041766576,0.0060528358,-0.0547275767,0.1356919706,-0.0638075843,0.0541381575,-0.0124085136,0.2070144713,-0.020528594,0.0439301468,0.1404955834,-0.2451163828,0.036476694,-0.0344098136,-0.0022479354,0.1350809932,-0.0208471231,-0.0389360338,-0.1767689288,-0.0295544136,-0.0991227105,0.0817670897,-0.1251426637,0.0291261543,-0.0748620853,-0.0139477067,-0.0236854646,0.1162820607,-0.1268252581,-0.0422710143,-0.0058727805,0.0725933984,-0.1403476,-0.14522098,-0.043323718,0.0626852959,-0.0445935912,0.0005834345,-0.0854990557,-0.0188936554,-0.2069650143,-0.1184783801,0.0262225773,-0.1092298925,0.0288875382,-0.2086456269,0.1613362283,-0.1618955582,-0.023540942,0.0259827375,-0.1047199741,-0.0630089045,0.0264480766,0.0683482662,0.0273116231,0.1255441904,0.0148556,-0.1071744636,-0.1223641187,0.0311332401,0.026951151,0.0623230152,-0.0360302292,0.0138299465,-0.1151497662,0.0310584512,-0.1217269674,0.1630617976,-0.0036025073,0.0170355737,-0.1289975643,0.1074270606,0.1427488178,0.0591192581,0.1617027968,0.1168964952,0.2122787088,-0.092131421,-0.0379032157,-0.0151606072,-0.0660053566,-0.1413362622,0.0610103831,0.0979990214,-0.0315785296,-0.0274445917,0.0191264693,-0.1646735072,0.2103487402,0.0074514523,-0.0456317142]],"hackathon_name":"IC Hack '16","index":878,"project_description":"A couple of simple games using the Myo gesture recognition device.The Myo gesture control armband seemed really interesting to us so we wanted to see what cool things we could make with it.There are two simple games controlled by the Myo.The first is a top down space shooter where the player shoots asteroids through a gesture as well as controlling the ship by moving their arm.The second is a first person shooter that uses VR through Google Cardboard. The Myo is used in order to control shooting while the VR is used to control player movement.The assets for both games were from two Unity tutorials. We then edited the behaviours slightly to use the Myo device rather than the default controls. We also had to replace the player completely in the second game as it was originally top down.Trying to incorporate the Myo with Android.Replacing the top down controller with a first person controller.We managed to understand a completely new API and managed to get it running.We learned a lot of the basics of Unity as well as the Myo API.IC Hack '16Oliver Norton\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:15 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MyoGaming","project_tags":["c#","java"],"project_url":"https:\/\/devpost.com\/software\/ic_hack_2016","keywords":"myo,top,player,control,first,well,controller,second,completely,shooter,person,games,gesture,managed,two,unity,api,used,learned,vr"},{"level_0":879,"hack_vector":[[0.1714249253,-0.1127637699,0.0001109051,0.0888544619,-0.0117329173,0.1779386103,0.1802107245,-0.0621820278,-0.0459419452,-0.005073952,0.007064797,-0.0585963801,0.1567602456,-0.0840704441,0.0384852402,0.021015482,0.2221353948,0.0055312794,0.0642208606,0.098729983,-0.2140179127,0.0444391333,-0.0593995005,-0.0159166362,0.16319713,-0.0436349772,-0.0598156191,-0.1972405612,-0.0326078013,-0.0560871251,0.0869106278,-0.1030542701,0.0699281842,-0.0738870949,-0.0491712801,0.0111104064,0.1448384821,-0.1205865517,-0.0137379216,0.0307247527,0.0635839626,-0.1504456997,-0.1891761422,0.002333414,0.0108831227,-0.0216001961,0.0211343318,-0.0657558963,-0.006196083,-0.2167979479,-0.1028102711,0.050642401,-0.1147926748,0.021658523,-0.1662435383,0.1479622871,-0.1616703868,0.0396395214,0.0042835493,-0.0384337269,-0.0467369072,0.0307904352,0.067980215,0.053646449,0.1341677457,-0.0100791631,-0.0987610742,-0.1443147361,-0.0015023244,0.0150111504,0.0773544386,-0.0263942871,0.0104886889,-0.1472954303,-0.0021010002,-0.0591147505,0.2135008126,-0.0013162969,0.0441529341,-0.1277083308,0.1191236451,0.1374828666,0.0528906472,0.1317997575,0.1292487681,0.1883708537,-0.1001629755,-0.0093929721,-0.0022173191,-0.0918544754,-0.1142470762,0.0774887949,0.0554271154,-0.0248570144,0.0346992612,-0.0411751233,-0.0957787484,0.2069117129,0.0609322488,-0.061779242]],"hackathon_name":"IC Hack '16","index":879,"project_description":"Never set an alarm againIC Hack '16Worked on the UI Design of the app using the Android IDE.I worked on developing retrieving the calendar data mainly using the API. During the duration of the project I helped with different components. I learnt a lot about using APIs and linking together all the componentsCo-built the stuff to do with setting alarms.Alarm clock package,\nRepeaterChecking of the alarm, and providing moral support to teammates.Sarah Baka\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:16 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AutoAlarm","project_tags":["android","java","google-maps","android-studio"],"project_url":"https:\/\/devpost.com\/software\/autoalarm","keywords":"time,well,android,next,challenges,functionality,factors,event,emulator,distance,different,customisation,conflicts,built,calculated,given,blood,automatic,autoalarm,apis"},{"level_0":880,"hack_vector":[[0.151259914,-0.1133609489,-0.01752639,0.0698589906,-0.0225450881,0.1519813985,0.2148212492,-0.0525005497,-0.0408887938,-0.024834143,0.0150839165,-0.0277074147,0.1479388773,-0.0705075562,0.0425796323,-0.0025188513,0.2237450033,-0.0009904208,0.0529038273,0.1239722148,-0.2247698158,0.0274588149,-0.0359451063,-0.0218189545,0.1480376273,-0.0180892609,-0.0385468341,-0.1919444203,-0.029528657,-0.0772367641,0.0706030875,-0.1212528348,0.0484875292,-0.0698936731,-0.0300817899,-0.0181121938,0.1309812367,-0.1207352057,-0.0391191505,0.0320633091,0.0779509097,-0.1420947313,-0.1616961956,-0.0405473895,0.0266686007,-0.0492635183,0.0193536375,-0.0629578382,-0.035002958,-0.2120483518,-0.105307743,0.0131818699,-0.1126031578,-0.0028186357,-0.1798456907,0.1705753505,-0.164239794,0.0052723205,0.010283309,-0.0638807118,-0.0530673452,0.0223669261,0.0681489408,0.034003377,0.1366922408,0.0063358517,-0.1201414019,-0.1327814758,0.0255177077,0.0225680228,0.0541710705,-0.0361777805,0.0022291583,-0.1276277602,-0.0033269688,-0.0941575468,0.1920946687,0.0044068368,0.0333964825,-0.1400947273,0.1145585179,0.1533646435,0.0439693555,0.155447036,0.1266635656,0.2009359747,-0.1071615815,-0.0096712327,0.0003371834,-0.08504498,-0.135908708,0.0764547512,0.0777820572,-0.0117470101,0.0065617887,-0.0288064554,-0.1294989884,0.2024941146,0.0441514924,-0.0443106592]],"hackathon_name":"IC Hack '16","index":880,"project_description":"Multiplayer wizard's chess for Oculus RiftWe wanted to use an oculus rift, and wizard's chess seemed pretty coolA chess game for oculus rift in which the player can walk around on the board. Online multi-player is also implementedServer was written in Golang, client was created using Unreal 4 with C++Getting libraries to work with unreal: the provided headers failed to compile\nGetting networking to workGetting networking running\nA working move checker on the serverDon't use Unreal\nAlso, bring a more powerful computer if we want to use VRConsignment to the indie game graveyard (just kidding, probably)IC Hack '16Callum Mance\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:17 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"VizChess","project_tags":["golang","unreal-engine"],"project_url":"https:\/\/devpost.com\/software\/vizchess","keywords":"getting,use,unreal,server,work,also,player,game,rift,oculus,networking,chess,written,created,golang,graveyard,headers,implemented,failed,compile"},{"level_0":881,"hack_vector":[[0.1761904806,-0.1545872837,0.0022316528,0.1032637134,-0.0438588969,0.1688317806,0.1762639731,-0.0454074219,-0.0255707838,-0.0165240224,0.0075262748,0.0271883011,0.1399021298,-0.0763288215,0.0200145654,0.0564325042,0.2383266091,0.0289453082,0.0565158688,0.0716963559,-0.2045495659,-0.0018335932,-0.0464189462,-0.0588084124,0.1728984714,-0.0227143317,-0.0664882883,-0.1937317401,0.0233558416,-0.0597576573,0.0292282272,-0.0937262475,0.07374008,-0.0709950104,-0.0433774143,0.0132265016,0.1256170124,-0.1155510321,-0.0316480324,0.0912665501,0.0504590347,-0.136335969,-0.171562314,-0.0194115657,-0.0430892222,-0.0419189371,0.0370708071,-0.0226422027,-0.0102448538,-0.1860492229,-0.0549852587,0.0264969151,-0.1179993004,-0.0661142543,-0.1048807427,0.1593958735,-0.142984882,0.0681753233,-0.0028776266,0.0327216871,-0.0174237601,0.0423084274,0.0585505553,0.0823736563,0.1459927112,-0.0373136364,-0.1484018117,-0.1516014934,0.0011797145,-0.006952276,0.0689663589,-0.0187384207,-0.0135377152,-0.1612578779,-0.0610085875,-0.0706648603,0.2173668295,0.0144847203,0.0737909749,-0.1468015462,0.1186935082,0.1509042829,0.016464144,0.1300183684,0.1500400454,0.1697347313,-0.1198400259,0.0672238022,0.017689757,-0.109544605,-0.0891307965,0.0976906419,0.0318712033,0.0169689935,0.0940263942,-0.098271139,-0.0713818148,0.1670865566,0.1002851501,-0.0487223268]],"hackathon_name":"IC Hack '16","index":881,"project_description":"Find parking easily with machine learning technologiesFive overzealous newbie hackathoners use machine learning and computer vision technologies to find empty parking spaces.IC Hack '16Hellothereimaaron\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:15 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ParkWare","project_tags":["html","javascript","css","c++","python","shell","makefile","opencv","google-prediction","google-maps","ajax","jquery"],"project_url":"https:\/\/devpost.com\/software\/ichack-empty-parking-lot-detection","keywords":"vision,use,technologies,spaces,parkware,parking,overzealous,newbie,machine,learning,hackathoners,five,find,empty,computer"},{"level_0":882,"hack_vector":[[0.1375283748,-0.1266109794,-0.0205010977,0.0618919171,-0.0442709662,0.1524361968,0.2123617977,-0.0335395075,-0.0298641417,-0.0139396638,0.0092123942,-0.0091195013,0.1374796629,-0.0770599246,0.0472209193,0.0355689302,0.2630864978,0.0296909176,0.0386596918,0.1092087254,-0.2261491865,0.0328338929,-0.0364274271,-0.0621919446,0.132394284,-0.0128096631,-0.054912746,-0.2016030997,0.0164821856,-0.0883817151,0.0498779565,-0.1288508922,0.0495643169,-0.0788137168,-0.0260534696,-0.0015192863,0.1363610029,-0.1241873354,-0.0333141983,0.0497252755,0.0386403203,-0.1629217714,-0.1720299125,-0.0400311127,0.0114117488,-0.0521057695,0.0249107499,-0.036534559,-0.0302434918,-0.1932644844,-0.0840704888,0.0150164366,-0.0988662764,-0.0453633033,-0.1385228932,0.1536411196,-0.1420764923,0.0282956827,0.0157071687,-0.0245013982,-0.0484009571,0.03617917,0.0702884719,0.0728500932,0.1278065443,-0.0207447149,-0.1153462306,-0.1522623748,0.0356509648,0.0098790089,0.0689231455,-0.046793431,0.0147034302,-0.1415858269,-0.033477705,-0.123500891,0.1776198894,0.019474132,0.0642143115,-0.1394297183,0.1398819834,0.1623147875,0.0459992588,0.1635532677,0.131205827,0.175398618,-0.1328675151,0.022103468,0.0050536999,-0.1013698727,-0.1250232458,0.0766796991,0.0616158098,-0.0087987389,0.055163566,-0.041884616,-0.1079632863,0.1748378873,0.0523253977,-0.0583261065]],"hackathon_name":"IC Hack '16","index":882,"project_description":"Crowd source podcasts , constructed from reddit postsReddit has a lot of text-based quality content that is unavailable to people who may prefer to listen to that.Generates podcasts from subredditsThe server uses watson api to synthesize the posts. Client provides playlist based podcast appCreating sound for posts longer than a few paragraphsEverythingUser accounts , mobile clientIC Hack '16Leonardo Ciocan\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:18 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Crowdcast","project_tags":["react","ibm-watson","amazon-web-services","chrome"],"project_url":"https:\/\/devpost.com\/software\/crowdcast","keywords":"based,posts,client,watson,everything,may,lot,longer,listen,inspiration,generates,creating,crowdcast,next,content,challenges,built,app,api,accounts"},{"level_0":883,"hack_vector":[[0.1607300639,-0.0993018225,-0.0301989354,0.0468065739,-0.0215614513,0.1435514838,0.2084014118,-0.042630937,-0.0236471854,-0.00880941,-0.0113684945,-0.066935271,0.1483544409,-0.0780790895,0.0656138062,-0.0056861811,0.1866923869,-0.0127767101,0.0519481897,0.1176602319,-0.2341220081,0.0354280956,-0.041418355,-0.0078415647,0.129402563,-0.024178287,-0.0325382911,-0.1570115089,-0.03368726,-0.0765652657,0.0602438897,-0.1246768236,0.0418121777,-0.072929576,-0.0424291156,-0.0196280871,0.1335168928,-0.1401223689,-0.0629414245,0.0102045713,0.0650454164,-0.1379244626,-0.1369817108,-0.0202700403,0.0630715713,-0.0460101329,0.017328782,-0.0885942057,-0.0278206524,-0.2106452286,-0.1552062482,0.0250819419,-0.1202020645,0.0266467668,-0.1934453696,0.152948156,-0.1458967328,-0.0160337817,0.0135531677,-0.0814449936,-0.0679541826,0.0164481588,0.0697258711,0.0299378131,0.119156912,0.0025687909,-0.0981608108,-0.1131021827,0.022627946,0.0297716893,0.0663884804,-0.0515833832,0.0042439536,-0.1367929727,0.0318659842,-0.1037893146,0.1879146844,0.0139154838,-0.0106775062,-0.1409950852,0.1232187152,0.1487548351,0.0624333136,0.1538426578,0.1131518856,0.2058761716,-0.0838354602,-0.0169135425,0.0131813204,-0.0848847702,-0.1432782114,0.0539155081,0.105372183,-0.0265824627,0.0035862098,-0.0091620712,-0.1462810785,0.2450674623,0.0169241708,-0.0576285459]],"hackathon_name":"IC Hack '16","index":883,"project_description":"Training for our young Padawans in the footsteps of YodaThe prizes were definitely a huge motivation, but most of the inspiration for this project came from the fact that I wanted to build a webchat with Node JS and AngularJS. But, at the same time I was interested in natural language processing so I decided to combine the two for all the Star Wars fans out there!It's a webchat that automatically translates the user's input into Yoda's words.It's a simple chatroom built with Node JS, but with an algorithm that converts the user's sentences using natural language processing techniques.Running Python alongside Node JS. Node JS is an unfamiliar language, so that was definitely a challenge. And deployment on Heroku was new.It actually works and we're proud to demonstrate that it does!A lot of Node JS and web development.It could be developed as a popular service, especially since the rest of the Star Wars franchise is set to be released over the next couple of years.IC Hack '16Jacek Burys\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:19 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Yoda Chat","project_tags":["node.js","python"],"project_url":"https:\/\/devpost.com\/software\/yoda-chat","keywords":"js,node,language,yoda,built,natural,next,processing,proud,definitely,star,inspiration,webchat,user,wars,came,angularjs,huge,actually,algorithm"},{"level_0":884,"hack_vector":[[0.1534755528,-0.1030088067,-0.0187733769,0.0554170758,-0.0138118397,0.1531417221,0.2038012594,-0.0411496684,-0.0314476788,-0.0041711889,0.0228016432,-0.0736444294,0.1475992054,-0.0770249441,0.0621485002,0.0127820224,0.2140088677,-0.0052530137,0.0522875562,0.1115866825,-0.2309918106,0.0476308949,-0.0519558266,-0.0168430656,0.1213340014,-0.0400937423,-0.0334867686,-0.199312076,-0.0402138345,-0.0683667809,0.083506383,-0.117560558,0.0507159531,-0.0882510096,-0.0376065895,-0.006581746,0.1250541508,-0.127102077,-0.0436985493,0.0058066398,0.0485156141,-0.1456092745,-0.169043541,-0.0234661847,0.0512638241,-0.0406215116,0.0183409043,-0.0744899809,-0.024061773,-0.2179884911,-0.1273856014,0.010177549,-0.1093167812,0.015623345,-0.1932201385,0.1463265419,-0.1507695317,-0.0027189257,0.0228827633,-0.0820988491,-0.0661901012,0.0217915997,0.0812102258,0.0460757501,0.1154277921,0.0043785828,-0.0973579288,-0.1301795244,0.0283698775,0.0200070031,0.0638803542,-0.0494839661,0.0214753244,-0.1284378469,0.0148069374,-0.1154958755,0.1908758432,-0.0008166549,0.0292666461,-0.1324289888,0.1267793775,0.1533427984,0.0582101867,0.1593005061,0.1071509123,0.1885534078,-0.0953281969,-0.026225606,-0.0060803816,-0.0978232622,-0.1405807436,0.0633918867,0.0731239468,-0.042736128,0.0066285087,-0.008716098,-0.1305743456,0.2091596723,0.0359471962,-0.0695597753]],"hackathon_name":"IC Hack '16","index":884,"project_description":"A tool that reads user's winking patterns to automate tasksJust a fun project about procrastination.A java app that uses the webcam to read user's eye patterns and executes various commands, like opening websites. Useful for quickly switching between websites to appear like you're working!OpenCV in Java for image processing and Java Swing for the GUIFinding OpenCV documentation for Java,\nIssues with OpenCV on MacOSEye tracking and managing to handle the APIHow not to use Git and OpenCVProcrastEnabler can be extended to support more eye patterns and scriptsIC Hack '16I worked on the UI, as well as the loading and management of eye pattern configurations and external scripts to be executed by the program.I worked on implementing the EyeDetector, the Calibrator, the CameraFeed and the heuristic Calculation class to determine open\/closed eye.I worked on the implementation of the input from the camera to run commands by matching patterns in Java.I worked at back-end, accessing the camera and processing the data in a way in which my teammates can use it. Helped at coming up with a solution to finding out if an eye is open or closed. Contributed at CameraFeed and Calculation class.Han Thi Nguyen\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:20 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ProcrastEnabler","project_tags":["java","opencv","xml"],"project_url":"https:\/\/devpost.com\/software\/procrastenabler","keywords":null},{"level_0":885,"hack_vector":[[0.1450322419,-0.1062891334,-0.0376266614,0.0463659689,-0.0228430629,0.1344632208,0.1995440125,-0.02200526,-0.0252957586,-0.0037575967,0.0182331298,-0.0570035316,0.1368423402,-0.0720880255,0.0681998208,0.002939295,0.2192965299,-0.0032272788,0.0453938209,0.1155080944,-0.248848632,0.0206393562,-0.0449574403,-0.0147900805,0.1070248112,-0.0283313692,-0.0315686204,-0.1836302578,-0.0182199236,-0.0938782841,0.0717012063,-0.1175503805,0.0281944424,-0.0880299062,-0.0261145532,-0.0070830821,0.1064313054,-0.1436420083,-0.0524335429,0.0024263435,0.0405022465,-0.1212655902,-0.1546360403,-0.0226455238,0.0711824,-0.0590949468,0.0148556931,-0.0782335028,-0.0203798637,-0.2227603048,-0.1330280006,0.0055152872,-0.0985052958,-0.0062904982,-0.1953035295,0.1545346975,-0.1322784722,-0.0183896665,0.0308719911,-0.0902299508,-0.0647004023,0.0273236781,0.0812294036,0.0496286824,0.1151086167,0.0072091091,-0.0962250978,-0.12270578,0.0352570675,0.0130839758,0.0649548024,-0.0425478444,0.0120206345,-0.1215658635,0.0132351387,-0.1322642565,0.1845164001,0.0116966609,0.0228591599,-0.1393022984,0.1306233555,0.1611505002,0.0498237088,0.1748981178,0.1054769158,0.2122081071,-0.0942067951,-0.0255201086,-0.0259158704,-0.0813173577,-0.1450519115,0.0636391789,0.096589528,-0.0326869301,-0.0065189013,0.006950716,-0.1438451558,0.2144166529,0.0224457756,-0.0741830617]],"hackathon_name":"IC Hack '16","index":885,"project_description":"A simple web app for organising guitar songs just by pasting their URL, with many useful features.Songs screenI had a lot of guitar songs which I needed to organise, view and print songbooks of. This program makes this task much easier to do.You first login through Facebook, paste a URL to a guitar song to add it to your collection, and the linked website is automatically parsed and relevant data such as artist, title and content are extracted and saved to a database. You can then view and delete the songs and download all of them as a songbook in PDF format. The chords are also highlighted, making it easier to play the songs.24 hours of hard work, lot of caffeine.Not getting Facebook API to do what I wanted for a long time.Finishing in time.How to work with Facebook API, how to parse HTML using DOM in PHP, improved my REGEX knowledge, learned how to set up a web server and a database quickly...Adding support for more guitar song websites, perhaps extending the project outside guitar songs as well.IC Hack '16Marian Longa\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:19 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MySongBook.io","project_tags":["php","mysql","html","facebook","css"],"project_url":"https:\/\/devpost.com\/software\/mysongbook-io","keywords":"guitar,songs,facebook,work,time,learned,easier,database,song,lot,view,api,first,getting,adding,hard,highlighted,hours,html,built"},{"level_0":886,"hack_vector":[[0.1371465623,-0.1317690909,0.0038871525,0.0925144404,-0.0608390309,0.1690516919,0.1538749486,-0.0420512557,-0.0160767324,-0.0500945821,-0.0033517496,0.0387646519,0.1222188249,-0.068690747,-0.00375483,0.0774117708,0.2643691301,0.0530851483,0.054119762,0.0805743635,-0.1874139905,-0.0216454975,-0.0457349829,-0.0677948147,0.160394147,-0.0154293953,-0.0674919263,-0.1809819341,0.0230406933,-0.0804158449,0.0106034949,-0.0866891742,0.0705183819,-0.0495401025,-0.023791343,0.0208042637,0.1408783942,-0.105719991,-0.0047010262,0.1050802916,0.0631890371,-0.1315507591,-0.1845878512,-0.0318643525,-0.0488022678,-0.0660471693,0.0519132167,-0.0008941343,-0.0211039577,-0.1984407902,-0.0294373799,0.0308369994,-0.0935737491,-0.0901588053,-0.1098489538,0.157222569,-0.1423253417,0.0643679574,0.0024178622,0.0472999178,-0.0102322353,0.0247565452,0.0397478864,0.0637797639,0.153575778,-0.0383133739,-0.1349510849,-0.1885161251,0.0193123408,-0.0069689904,0.0658501089,-0.0321087241,-0.0244035274,-0.1513700783,-0.0768927336,-0.0584732704,0.2040152103,0.0260063633,0.0949862152,-0.1485511363,0.0976163149,0.1608868092,0.0016057165,0.1481658667,0.1533418,0.1643846035,-0.1420942247,0.0739700645,0.0019443323,-0.1117804423,-0.0796022788,0.112198472,0.0191375986,0.0223904345,0.0721911341,-0.0998421684,-0.069312796,0.1746800393,0.1023267135,-0.0544674285]],"hackathon_name":"IC Hack '16","index":886,"project_description":"Makes your life easierfacebookMakes your life easier.JSHad to sleep.Managed to do it.FB apiNew featuresIC Hack '16Andrei Cioara\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:22 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Facebook Offliner","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/facebook-offliner","keywords":"facebook,sleep,ran,api,built,challenges,easier,fb,features,inspiration,js,learned,life,makes,managed,new,next,offliner,proud,accomplishments"},{"level_0":887,"hack_vector":[[0.1575126797,-0.1239076629,-0.029062707,0.0537238941,-0.012637441,0.1379780024,0.2009930909,-0.0318377577,-0.0206709411,-0.0318209901,-0.0027376646,-0.0605749674,0.1459083706,-0.0620915107,0.048635222,-0.0100581339,0.2015417069,-0.0134030897,0.0460755453,0.122177206,-0.2463247776,0.0354585312,-0.0248938203,-0.0061652479,0.1245840043,-0.0329110213,-0.0285061356,-0.1645237505,-0.04302283,-0.0943902284,0.0692857876,-0.1257046908,0.0342650935,-0.0673625022,-0.031480968,-0.0352519304,0.12094751,-0.1437288672,-0.060773503,0.0049052732,0.0732115284,-0.130970642,-0.1373853534,-0.0444748253,0.0614252463,-0.0546586588,0.0162391849,-0.0804728791,-0.0361559801,-0.2066675872,-0.1449044198,0.0162585862,-0.1093311161,0.0100047691,-0.2056867331,0.1573898643,-0.1391417086,-0.0440846682,0.0315275863,-0.0936459228,-0.0866725594,0.0173103958,0.0670992061,0.0143720144,0.1127194613,0.0241491962,-0.1107547656,-0.1175904572,0.0210800264,0.0400412232,0.0640749782,-0.053656783,0.0118981227,-0.118627958,0.0186008886,-0.1081005931,0.1789783537,0.0110214492,0.0029717477,-0.1327352375,0.112857163,0.1584374011,0.0270442571,0.1616061181,0.1146177202,0.2040715367,-0.0884150863,-0.0215225406,-0.0111725079,-0.075704731,-0.1339312643,0.0689093396,0.0841354877,-0.0268078316,-0.0180099364,-0.0042599007,-0.1594425291,0.2391084284,0.0219376907,-0.0520926565]],"hackathon_name":"IC Hack '16","index":887,"project_description":"A doom rewrite aiming to support original assets of the game without modificationthe floating hand appears to be a platform-specific issue?We wanted to learn OpenGL and thought making a simple game engine would be quite cool.Loads the original WAD (short for where's all the data?) files of the game back from 1993. Renders the levels in a 3D environment that resembles the classic game.eyeballingFloor and ceiling rendering is tricky and is not implemented properly. The techniques used in the original engine cannot be applied because that assumes rendering on the CPU and we really wanted to do OpenGL. The archaic file format is also a bit inconvenient to work with, especially in a strongly typed setting. Raw 1:1 bindings to OpenGl aren't too nice either. nullPtr in Haskell just doesn't feel right.Managed to draw pixels on the screenNothing really, it was planned to be a weekend hack and thus has fulfilled its purpose\n(it is currently a bit broken, might fix up the simple low hanging fruit)\nlet's just say the no-clip cheat is turned on by default, and turning it off is not implemented yet\nand a bit (very) inefficient tooIC Hack '16Worked on the low-level stuff.Csongor Kiss\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:21 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Doom in Haskell","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/doom-in-haskell","keywords":"opengl,bit,game,engine,code,original,rendering,haskell,wanted,implemented,really,simple,environment,especially,eyeballing,feel,file,files,floor,fix"},{"level_0":888,"hack_vector":[[0.1635627598,-0.1411140263,-0.0076297801,0.0703570619,-0.0136456303,0.1576026082,0.2087675333,-0.0430377424,-0.0393243432,-0.0015467502,0.0121032167,-0.0241668914,0.1483682841,-0.0712725297,0.0380878113,0.012417173,0.2188151628,-0.0134411268,0.0549720638,0.1101944596,-0.2397101074,0.0231485739,-0.0372203067,-0.0066105016,0.1731654853,-0.0390387326,-0.0364494435,-0.1990556866,-0.0170022212,-0.0831673667,0.0843389556,-0.1162207425,0.0469142646,-0.0649241135,-0.0370873772,-0.0141404653,0.1137122735,-0.1273779571,-0.0266327541,0.0136003019,0.0699474514,-0.135391593,-0.1445716023,-0.0312939584,0.0273077469,-0.0336914025,0.0123058604,-0.0487386733,-0.0151449488,-0.2107876539,-0.0939729661,0.0229069535,-0.1190718263,0.0091681881,-0.1859464645,0.1518808454,-0.1663714647,0.0030628673,0.0070980974,-0.0510856695,-0.050148733,0.0291656051,0.058006756,0.0351203568,0.1322548091,0.0036136636,-0.1138551533,-0.1424038261,0.0161197539,0.0114129623,0.0600833967,-0.037483871,0.0202705264,-0.1251999885,-0.0039938102,-0.0927917287,0.1893657893,0.0005987311,0.0385067202,-0.1386555433,0.1161676645,0.1490978748,0.0265559778,0.1670378149,0.1350770444,0.2127862275,-0.1029680893,0.0083022006,-0.0184493624,-0.0751729235,-0.1211893633,0.0931854397,0.0678169802,-0.0098096207,0.0013758417,-0.0257043578,-0.1236336231,0.2016985267,0.0565285534,-0.0481525995]],"hackathon_name":"IC Hack '16","index":888,"project_description":"2d rogue-like strategy gameMagic Tower \/ Binding of Isaac \/ScavengerTry to survive in a cave and fight against monsters.Unity with C#Our team is relatively new to the Unity Engine, thus we needed to cope with the steep learning curve Unity Engine presented and then built something upon it.Animation and Good game arts by our team mate.C# and Unity Engine.Generating endless map and adding more game modes, like the timing mode which the player should try to beat as much monster as he can in the certain time limit.IC Hack '16Built up the UI design and help developing the backend.hongtao li\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:23 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"IC_HACK_16_CAVE_SURVIVOR","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/ic_hack_16_cave_survivor","keywords":"unity,engine,try,game,team,built,cave,ic,generating,good,hack,upon,fight,isaac,learned,learning,inspiration,curve,endless,limit"},{"level_0":889,"hack_vector":[[0.158952266,-0.1551521719,0.0122382119,0.097174637,-0.0447512381,0.1734309793,0.1669816971,-0.0640575886,-0.0296731982,-0.0215799678,0.0039007375,0.0229797158,0.1359986663,-0.0797254443,-0.0059301592,0.0869715586,0.2653323114,0.0468123965,0.0523978025,0.068742387,-0.1852662861,0.0206087232,-0.053313639,-0.0658851042,0.1640910208,-0.0231766012,-0.0798359588,-0.1936570704,0.0199793279,-0.0786172003,0.0373987146,-0.1007908434,0.0891230404,-0.0586969703,-0.0377279148,0.0182792079,0.1502269655,-0.1049368829,0.0067892303,0.0918351114,0.0560913049,-0.1587409228,-0.1974600554,-0.0230866261,-0.0541629717,-0.0403900631,0.047039751,-0.0075520421,-0.0252648704,-0.183546111,-0.0299460012,0.0454336479,-0.0994304568,-0.0640533939,-0.0984509438,0.1360105127,-0.1538535655,0.0700386763,-0.0029874125,0.0545046404,-0.0193423145,0.0373488329,0.0523297861,0.0793395191,0.1384521574,-0.0453055874,-0.1302079856,-0.1677656919,0.0084462678,0.003405347,0.0749963894,-0.0352010056,-0.0075880573,-0.1506246179,-0.0750041902,-0.0528679639,0.1999461651,0.029877454,0.10181088,-0.1370748281,0.117374815,0.1496296823,0.0075625521,0.1297343075,0.1503780335,0.145703122,-0.1446199417,0.0611639544,0.0115455808,-0.1231907532,-0.0687850863,0.103801176,0.0018452433,0.017995717,0.0854910761,-0.0971970186,-0.0513379388,0.1371818036,0.1083167046,-0.0485299863]],"hackathon_name":"IC Hack '16","index":889,"project_description":"Receipt Scanner and transaction pusherScan a receipt and request money from friendsIC Hack '16I worked on the OCRElliot Greenwood\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:05 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Dinner With","project_tags":["iphone-sdk","swift","ruby","ruby-on-rails"],"project_url":"https:\/\/devpost.com\/software\/dinner-with","keywords":"scan,request,receipt,money,friends"},{"level_0":890,"hack_vector":[[0.1514125764,-0.0878223702,-0.02905057,0.0534762144,-0.0057773506,0.1407587379,0.1917930841,-0.0419762284,-0.0277889669,-0.0084869964,0.0190558042,-0.0868864954,0.1535738707,-0.07054241,0.0681283325,-0.0202954318,0.1890389472,-0.0218195971,0.0543077253,0.1260002255,-0.2331386805,0.038372647,-0.05348216,0.0131797064,0.1306800693,-0.0300492849,-0.0310046766,-0.1753786355,-0.0476587601,-0.0766565874,0.0846162885,-0.1199507713,0.034542758,-0.0818126872,-0.0240396932,-0.0132188201,0.1180807799,-0.1297139674,-0.0583214983,-0.014290588,0.0651684254,-0.1244670674,-0.1477597058,-0.0203296039,0.0604667179,-0.0426067933,0.0098254802,-0.090929769,-0.0251336917,-0.2124062032,-0.1579345465,0.024519112,-0.1136839017,0.0407780334,-0.2120617032,0.1567134261,-0.1397265494,-0.0272260141,0.0224184226,-0.1145145446,-0.0712969676,0.0210322589,0.0791302398,0.0327364393,0.1107964069,0.0249149315,-0.0922921747,-0.1169900894,0.0133432979,0.025063144,0.0615605749,-0.0377937667,0.024765458,-0.113845557,0.0481214859,-0.0952259973,0.1923324317,-0.0079452172,-0.0085181314,-0.1308912486,0.1086726785,0.1455921978,0.0647010952,0.1475291848,0.1003980264,0.2073239088,-0.0779733136,-0.0594741069,-0.0141278282,-0.0658026338,-0.1389361769,0.0535689816,0.1010325849,-0.0353631601,-0.011897549,0.0064135753,-0.1540119499,0.2481097281,0.0068786386,-0.0704824105]],"hackathon_name":"IC Hack '16","index":890,"project_description":"The virtual reality, multi-desktop companion.We as software developers usually work on multiple screens but it is always not the case that we have a monitor with us. So we came up with an idea to solve this problem with all the desktops and workspaces being projected in 3D on your phone using the fantastic Google Cardboard.It basically runs on your local machine and local network and captures all the active spaces on your computer and transmits them to our Android application where you use it with the help of Google Cardboard to project every workspace in virtual reality. These spaces keep on refreshing so that you can get a real time view of your desktop.For the front end of the application we have used Unity along with Google Cardboard SDK for Unity 3D. For this Unity project we have used certain GameObjects which run on C# scripts to query the back end and get the latest update of the desktop screens and workspace. Whereas on the back end we run a node.js server which streams the images which are captured from X11 using FFMpeg.The basic idea was to use Android Studio but then we switched to Unity after a great talk by David. But none of our team members had experience in Unity so we had to learn everything from the basics, learn C# etc. Another challenge was to refresh the stream constantly so that we don't miss out on anything going on. On the back end it was tough streaming the images correctly and efficiently.First accomplishment would be not sleeping for almost 24 hours. Second would be to pick up a new programming language in a day and make something useful with it. Learning new software and SDK from scratch.We learned C#, Unity and core features of Linux to capture the image. Maybe some experience in Karaoke singing as well. Also we worked with graphics a little bit so it was good. Above all we learned how to use Google Cardboard.Using live video feeds instead of image feeds. Better rendering in 3D and mayb full HD resolution.IC Hack '16I worked on the front end of the application. Wrote some code in C# and didn't sleep much. Ate a lot. Yeah! maybe that's it...I worked on sending out the stream and image data from the Linux machine to the Android Unity application. Also helped out with some parts of the Unity application.Abhinav Mishra\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:25 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Desky","project_tags":["node.js","unity","c#","javascript","html5","css3","google-cardboard"],"project_url":"https:\/\/devpost.com\/software\/desky","keywords":"unity,end,cardboard,google,using,back,use,learned,spaces,software,feeds,new,sdk,screens,experience,run,project,desktop,get,would"},{"level_0":891,"hack_vector":[[0.1424032897,-0.0873015746,-0.0093358681,0.0512883589,-0.0077769072,0.1455941051,0.2087352127,-0.0429995619,-0.0403333195,0.0120739015,0.0395311005,-0.0757323876,0.1551304013,-0.088442944,0.0572660044,-0.0066513787,0.2109559029,-0.0156639069,0.0541769378,0.1110180393,-0.2251817733,0.0648439005,-0.0534138344,-0.0074937115,0.1184497923,-0.0352369063,-0.0386866368,-0.1941297203,-0.0251199622,-0.0761920512,0.085297823,-0.1155714914,0.0427393541,-0.0945272595,-0.023827754,-0.0051041692,0.1308219135,-0.1322110444,-0.050300803,-0.0254191682,0.0444862209,-0.1424536258,-0.1610978395,-0.0120828953,0.0652247071,-0.0183348916,0.0138947703,-0.0864470452,-0.011788493,-0.2022040635,-0.1383210421,0.0368297547,-0.1121872216,0.0389712565,-0.204431057,0.136582464,-0.141047895,-0.017433051,0.03885502,-0.1052460745,-0.0584635772,0.0223971922,0.1048050821,0.0514079407,0.1110350341,0.0132229747,-0.0762664229,-0.1210897192,0.0259318538,0.0258938931,0.0654430911,-0.0368475057,0.0334401615,-0.1221307069,0.0377751589,-0.125218749,0.1775508672,0.0001699257,0.0166956689,-0.1301849931,0.1345857382,0.1503460705,0.0680952966,0.1553987265,0.1051422358,0.1930198669,-0.0912612379,-0.0616593063,-0.0208474249,-0.0814112797,-0.1480682939,0.0511530377,0.0861396715,-0.0391738862,0.0039183833,0.0093537429,-0.1475292295,0.2069006711,0.0189668816,-0.0743131638]],"hackathon_name":"IC Hack '16","index":891,"project_description":"A community based approach to playlistingWe saw a gap in the market between music applications which allow users to create and share playlists and the DJ and live music industries.We have tried to combine the best of both worlds by creating an application to allow users to vote on and select the DJs candidate tracks. They are also able to up-or down-vote the current song being played, as well as suggest tracks, which other people also vote on.Meanwhile, the DJ receives visualised live data through live graphs and charts, showing not just the song votes and participant reactions, but also the amount of movement (i.e. dancing) of the crowd in live-time.We created an API using the web framework, Django, to integrate a front-end web interface and an Android application with an online database. Live data is passed between these.Effective workflow using Git branching was difficult, as was effectively coordinating tasks between a team of five. Some problems were also posed by different Android versions.The final product and its excellent features and quality are the things we are most proud of.Effective technical team working, Django development and Android development.IC Hack '16I created a library of methods as an interface between the app and the server. I also worked on threading the app to prevent blocking in the UI.Front-end Django web page integration with the database API.Java and XML Android app development for some activities and fragments.Worked on the Android App and hardware api calls.Server side!WebsiteMatthew Brookes\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:26 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Alpaca","project_tags":["java","android","django","javascript","css","html5","python","last.fm","highcharts"],"project_url":"https:\/\/devpost.com\/software\/alpaca-7wuj9b","keywords":"live,also,android,vote,django,effective,song,dj,team,application,tracks,data,users,using,development,proud,web,allow,music,different"},{"level_0":892,"hack_vector":[[0.148522377,-0.1145513728,-0.025006365,0.0377839431,-0.0230492428,0.1255532354,0.2175679952,-0.0220700055,-0.0321841687,0.0219767746,0.0118631525,-0.0442905389,0.1339168698,-0.0743225291,0.0808139965,0.0069399714,0.2109734714,-0.0030693754,0.0416731276,0.1124954224,-0.23506549,0.0549273491,-0.039054174,-0.0269418117,0.1260875762,-0.0217339788,-0.0304233097,-0.1987963319,-0.0064836885,-0.063550368,0.0604975522,-0.1314767599,0.0410603024,-0.1080971584,-0.0351354033,-0.0084391292,0.1135996953,-0.1335437447,-0.0644195154,0.0092296004,0.0212895609,-0.168852374,-0.1492904574,-0.0354854912,0.0527805015,-0.0307156406,0.0151495561,-0.077462472,-0.0210414901,-0.1914808899,-0.1297638118,0.0014274411,-0.1250642538,0.0012612857,-0.1684728861,0.1496949196,-0.1367888898,0.0068538892,0.0308483634,-0.075417988,-0.0613976493,0.0300554577,0.0841530263,0.0613038987,0.1078651622,-0.0098089911,-0.1147460788,-0.1226640046,0.0369852483,0.0100336671,0.0735564679,-0.0557584912,0.0295251813,-0.1326728761,0.0194536131,-0.1600479931,0.176028803,0.0025468115,0.0415690243,-0.1342714727,0.14927876,0.1579909474,0.0756429359,0.1702985317,0.1103510857,0.1864269376,-0.1066810712,-0.0018128825,0.0156492256,-0.0966511667,-0.1437577456,0.0566055886,0.090194881,-0.0380743109,0.0391784422,-0.0125695365,-0.1413634121,0.1884538829,0.0262300447,-0.062792182]],"hackathon_name":"IC Hack '16","index":892,"project_description":"A user-friendly feed for accessing exterior ministry statement, sortable by automatically generated keywordsWhen reading the news, I always wanted a directed source for when officials were being quoted.A user-friendly feed for accessing exterior ministry statement, sortable by automatically generated keywords.It uses web crawlers by import.io to access the statements directly from the government website. It then uses indico.io machine learning api to generate keywords for each entry and store them together with other information in mongo DB. The user can query the keywords and only be shown the statements that relate to a specific topic.Integrating indico.io into mongo DB proved very difficult due to lacking documentation.Integerating UK and US feeds using machine learning APIs.Machine learning APIsExpand the number of countries crawled by Gov Feed.\nEnabling to sort query results chronologically and by relevance.IC Hack '16Jakub Kus\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:26 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Gov Feed","project_tags":["php","html"],"project_url":"https:\/\/devpost.com\/software\/gov-feed","keywords":"keywords,io,learning,machine,feed,statements,gov,mongo,query,db,indico,uses,user,apis,built,exterior,import,accessing,government,accomplishments"},{"level_0":893,"hack_vector":[[0.150313139,-0.0932395458,-0.0246294662,0.0397195481,-0.0059602978,0.1270538867,0.2095721662,-0.0283103827,-0.0375823267,0.0015169723,0.008616711,-0.0814677849,0.1455285102,-0.069991678,0.0650484189,-0.0134568419,0.187363252,-0.0242837947,0.0510965362,0.1295306981,-0.2401114702,0.0472424142,-0.0403271206,0.0026990396,0.1258942336,-0.0353668109,-0.0341231041,-0.1724950075,-0.0383684859,-0.0801786333,0.0799159408,-0.1200592294,0.0305723529,-0.0834126547,-0.0249428898,-0.0161454789,0.1165472493,-0.1363755316,-0.0578833595,-0.012067588,0.0561434478,-0.143261373,-0.1435389221,-0.030540688,0.0724623352,-0.0392791592,0.0025695618,-0.0972995162,-0.0143766161,-0.2016100436,-0.1526919156,0.0213808548,-0.1178051159,0.0399843268,-0.2183478177,0.1515546292,-0.149306044,-0.028327005,0.0347871929,-0.1198372617,-0.0770693645,0.0222307164,0.0757285804,0.0379157513,0.1115398183,0.024198005,-0.0917330459,-0.1153158173,0.0252721235,0.0255030561,0.0673420802,-0.0516427979,0.0186337307,-0.1126927808,0.0508070849,-0.1229495332,0.1704599261,-0.0085346168,0.0021365597,-0.1269642115,0.1149264053,0.1419355124,0.0671399236,0.1520458609,0.1005985737,0.2069968283,-0.0826210827,-0.0453843623,-0.0082872184,-0.0704337135,-0.1447989345,0.0507363863,0.1004213095,-0.0414914116,-0.0195773598,0.0172825269,-0.1663580537,0.2250303626,0.0062492942,-0.0571341626]],"hackathon_name":"IC Hack '16","index":893,"project_description":"Intuitive financial data visualization using hand gesture recognitionOur primary inspiration for this project were the sponsors. As this is a Hackathon, we decided it would be best to adopt the theme of the event instead of working on something unrelated.Our project is a web application at it's core but comes with a twist. It cannot be navigated using a mouse and keyboard. All the user interaction is done via gesture tracking and state control. The gesture tracking is powered by Leap Motions Controller which uses a set of cameras to achieve accurate finger, hand and arm tracking.The first thing we did was to split the project into its smaller components; namely the gesture recognition part and the web user interface part. 2 of us worked on the first while the remaining 3 on the later.Gesture Recognition\nLeap Motion has created a variety of libraries that can be used to interact with the Controller. We used the one written in Javascript in order to make the interfacing with the website as effortless as possible. While working on this project we discovered that even though the controller has a wide range of \"preset\" gestures, we needed to add some new ones such as the whole hand roll (X - Y axis). We also discovered that while the technology is certainly impressive, it comes with some limitations. For example, some gestures appear to be more accurate than others and there were occasions where the Controller was picking up a lot of unrelated noise. The noise can be cancelled by keep track of how long each object has been in view for, but unfortunately we did not have enough time to implement this.User Interface\nFor the user interface we wanted to use as much available code as possible. The charts were generated using the Google Chart libraries and the financial data were taken from fixer.io. For styling, we used the Materialize CSS framework in order to make the website look decent with the least amount of effort possible.The biggest challenge we had was getting all the data necessary asynchronously while also keeping the performance at acceptable levels. Also, we found that it was difficult to get the sensor to work once we deployed our website to Azure.The Leap Motion controller is an impressive device and can have a wide range of applicationsIC Hack '16Worked on the hand gesture recognition and part of the graph visualization algorithmsCreated the second graph on website. Used JavaScript with Google Charts to make visualization and JQuery to get data from server....Assited with the graphsHelped with Data selection and website user interface (not coding).Harry Detsis\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:27 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"FinanceMotion","project_tags":["azure","javascript","leap-motion","html","css","jquery"],"project_url":"https:\/\/devpost.com\/software\/financemotion","keywords":"controller,project,gesture,user,also,interface,possible,tracking,used,leap,website,data,gestures,part,discovered,noise,wide,range,recognition,comes"},{"level_0":894,"hack_vector":[[0.1450076699,-0.1095223203,-0.020472385,0.06147236,-0.0103904139,0.149222523,0.2073652744,-0.0307558104,-0.0260184463,-0.0152188614,0.0119033568,-0.0497979149,0.1451510936,-0.0847674906,0.0445579402,0.0107327029,0.2157794386,-0.0018264457,0.0509803854,0.1251077801,-0.2391355038,0.026374409,-0.0403357781,-0.0074937684,0.1517298222,-0.0251599923,-0.0403704494,-0.1839495897,-0.0227591172,-0.0766365603,0.0692690015,-0.1249585152,0.0423105173,-0.0642596334,-0.0372439101,-0.0066838479,0.1232059002,-0.1356365383,-0.0347592346,0.0080650728,0.0553730652,-0.143272683,-0.1595265865,-0.0363850258,0.0487059467,-0.0522991009,0.011316143,-0.0596911311,-0.0209993962,-0.2229460776,-0.1162481532,0.0255337674,-0.1071496457,0.0128607806,-0.1992052495,0.1631152183,-0.1588015854,-0.0111031039,0.0107379034,-0.0819221064,-0.0625570416,0.0277474467,0.0699895769,0.0378762707,0.1219946966,0.0134134637,-0.0923161954,-0.1310160011,0.03715121,0.0199962426,0.0559409969,-0.0431800559,0.0186790172,-0.1137153283,0.0198919978,-0.0887629017,0.1754987389,-0.0028075026,0.0205936097,-0.1444882005,0.115651831,0.1591755748,0.0513683856,0.1673289686,0.1084709689,0.2089455128,-0.1002017781,-0.0239328872,-0.0150708314,-0.0785616785,-0.1404316872,0.0689437166,0.0829526857,-0.0225843322,-0.00242989,-0.0062462501,-0.1441405118,0.210299179,0.0403240956,-0.0629096404]],"hackathon_name":"IC Hack '16","index":894,"project_description":"Game driven chat app.Students in lectures keep texting each other, not paying attention to the lecturer. This app poses a limit to this.\nThis app is also an excellent tool against spammers.You have to play games, in order to earn points, in order to send messages.Using html css javascript and socket.io for the backend.Creating multiple rooms and inviting friends for a game. Unfortunately because of the short time we couldn't do neither, only one room an single player games. We also wrote two more games in javascript that unfortunately did not manage to implement.Learning the structure of the backend for a chat, and at the same time using javascript to write cool and traditional games.Learning the structure of the backend for a chat, and at the same time using javascript to write cool and traditional games.Creating multiple rooms and inviting friends for a game. Facebook loginIC Hack '16Alessandro Bonardi\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:28 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HackChat","project_tags":["javascript","html5","css","socket.io"],"project_url":"https:\/\/devpost.com\/software\/hackchat-lvmk7i","keywords":"games,javascript,using,time,backend,chat,creating,game,friends,multiple,inviting,learning,write,rooms,order,cool,structure,app,traditional,also"},{"level_0":895,"hack_vector":[[0.1569776535,-0.1057847291,-0.0345134772,0.0415051877,-0.0157349948,0.1356715858,0.1893291175,-0.035578493,-0.0104306964,-0.0311959144,0.0068961973,-0.0769471973,0.1450615823,-0.0632329211,0.060394749,-0.0068645333,0.2056574076,-0.0036796834,0.045882348,0.1216200292,-0.2390174568,0.0360232703,-0.0413935818,-0.0109242471,0.1057955548,-0.0363558158,-0.027332725,-0.1712205857,-0.0430964157,-0.0957358629,0.0696815103,-0.1216248348,0.0401799046,-0.0785990879,-0.0177835915,-0.0280192569,0.1236162707,-0.1419534832,-0.0602985322,-0.0081676329,0.0581282899,-0.1248187497,-0.1514998972,-0.0347741842,0.063021563,-0.06035579,0.019718593,-0.0811236873,-0.0387038589,-0.210567683,-0.1581207663,0.0149148349,-0.1052794382,0.0049970178,-0.2073333263,0.1520680785,-0.1264538616,-0.039774444,0.040021468,-0.0975723565,-0.0830218419,0.0088731823,0.0738667771,0.0245808791,0.1008102149,0.02461976,-0.0990910679,-0.1183888167,0.0210711043,0.0352555625,0.0743101612,-0.0577286072,0.0170475245,-0.1223086342,0.0288396217,-0.1179511175,0.1795297861,0.0091414107,0.000220891,-0.1331410855,0.106641233,0.1578815877,0.0361157209,0.1695413738,0.1044624075,0.1990159899,-0.0951810256,-0.0422072187,-0.0188433137,-0.0806574896,-0.136306569,0.0608673207,0.0925219283,-0.0374197327,-0.0165469982,-0.0048705484,-0.1531609893,0.2447009534,0.0087261461,-0.0744461268]],"hackathon_name":"IC Hack '16","index":895,"project_description":"A dashboard for grabbing a quick, actionable overview of your server fleetIt gathers metrics, logfiles and alerts from supported platforms. At present the only \"host\" adaptor provided is a generic \"Linux\" one (i.e. literally just the box you're on) but I wanted to add, e.g. a \"Docker\" one that allows discovery of services within Docker containers, etc. etc.It's supposed to be simple to set up - it has very few dependencies, just Go (on some server somewhere!) and Postgres, unlike some reporting stacks which are quite complex to put together. I like to think I kept to that.Literally just me! I decided it might be interesting to see how far I could get trying to work on the app alone, full-stack.I fleshed out the backend collection agent first, which was a ton of fun. I think the first code that went in was the code that interacts with DBus to gather some interesting data about the number of packages installed on your system.It's actually quite hard to do everything alone :o) but I knew that going in, anyway.The backend supports shuttling logs upwards, and the architecture is designed such that you can chain nodes together.The provisioning system is super neat as well - you end up with (eventually, once the server support is there) a binary containing a one-time use, embedded certificate which can be used for generating proper key material on the target server.Red Bull sugar free tastes like death.IC Hack '16Luke Granger-Brown\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:28 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"phalanx","project_tags":["go","react"],"project_url":"https:\/\/devpost.com\/software\/phalanx","keywords":"server,one,interesting,together,docker,etc,first,code,system,backend,think,quite,like,literally,alone,going,discovery,installed,embedded,end"},{"level_0":896,"hack_vector":[[0.1529712826,-0.1307299435,-0.0082280654,0.0807931721,-0.0441635586,0.1749246866,0.1661407053,-0.0640245378,-0.0218805298,-0.0134814475,0.0057552005,0.0022625341,0.1314300001,-0.0692604482,0.0159165636,0.0677014142,0.252425313,0.0355667733,0.0507562049,0.0907119364,-0.2055916041,0.0080613773,-0.0433778577,-0.0526877828,0.1633634865,-0.0150235863,-0.0612623394,-0.2030025274,0.0077694762,-0.0705660582,0.0473679788,-0.1151922047,0.0673317015,-0.0709223151,-0.0322131179,-0.0032062742,0.1253088117,-0.1164306477,-0.0198593847,0.0683694631,0.0506899804,-0.1529674083,-0.1844388098,-0.0326052643,-0.0279807299,-0.0391970165,0.0241374206,-0.0193246771,-0.0231922176,-0.1993754804,-0.0650454685,0.0326285996,-0.1029330492,-0.0620328709,-0.1345357895,0.1608902067,-0.1431526095,0.0600027815,-0.0013796982,0.0121696163,-0.0207868051,0.0231138971,0.0509325005,0.0706716478,0.1404765248,-0.0251527261,-0.1354917884,-0.1671339124,0.0282257572,0.0089420164,0.0864648819,-0.0380904302,0.0029451721,-0.1543266922,-0.0464512706,-0.0768639147,0.1998121738,0.0110503435,0.0740099251,-0.1394595057,0.1198967546,0.1549573094,0.0377658568,0.1600706875,0.1403989047,0.180904448,-0.1322547495,0.0344838053,0.0076665911,-0.0955064893,-0.0930108428,0.0897257775,0.048886288,-0.0076938136,0.0618986711,-0.065676935,-0.0842745304,0.1870465577,0.0787761062,-0.071577318]],"hackathon_name":"IC Hack '16","index":896,"project_description":"Here's your real life sims!The simsPuts diamonds around the head and make them usable (recognize people on facebook with your camera)Reading JSONReading JSONReading JSON, working with alamofire and 3rd party libraries in XCodeRecognize everything!IC Hack '16Razvan-Gabriel Geangu\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:28 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ICHackEclipse","project_tags":["iphone-sdk"],"project_url":"https:\/\/devpost.com\/software\/ichackeclipse","keywords":"json,reading,recognize,xcode,alamofire,around,built,camera,challenges,diamonds,everything,facebook,head,ichackeclipse,inspiration,libraries,learned,working,make,next"},{"level_0":897,"hack_vector":[[0.1478609741,-0.1242512167,-0.0228931569,0.0440907702,-0.0381021649,0.1414117962,0.2073755413,-0.0213711224,-0.0109173721,-0.0273027141,0.0113768214,-0.0306612682,0.1325895935,-0.0774248764,0.0592860244,0.0365600549,0.2438843846,0.0244808551,0.0426844098,0.1160275638,-0.2316415906,0.019101195,-0.0379557312,-0.0553642437,0.1093683988,-0.023586493,-0.0395819172,-0.1919727921,0.001089035,-0.0982973427,0.0400556773,-0.1160648689,0.0402364545,-0.0889389068,-0.0154991113,-0.0100214658,0.1191087812,-0.1371843815,-0.060710609,0.0251156241,0.0324151404,-0.142375797,-0.1521577835,-0.0373926051,0.0358871184,-0.063981995,0.0328012481,-0.0498116091,-0.0313576125,-0.2065166384,-0.1186633483,0.0134421345,-0.1089318171,-0.0575492494,-0.1640803665,0.1668573767,-0.1241237223,0.003042869,0.0311126877,-0.0539121777,-0.0563747697,0.0349789523,0.0701896921,0.0653586537,0.1153320521,-0.0022650671,-0.1195831522,-0.1398250759,0.0294470061,0.0060916962,0.0700064674,-0.0492271557,0.0128306542,-0.1382717192,-0.0064543267,-0.1283141822,0.1747519523,0.0064210589,0.0340797231,-0.1497477442,0.1312703341,0.1711353511,0.0446592569,0.1726770997,0.1180917546,0.187323153,-0.1082937121,0.0068716151,-0.0086220894,-0.0910657644,-0.1342690438,0.0706479251,0.0726864263,-0.0200881846,0.0274185408,-0.0281670596,-0.1407486945,0.2071444541,0.0339152031,-0.075436987]],"hackathon_name":"IC Hack '16","index":897,"project_description":"Balancing social media's positive feedbackexampleMost machine learning algorithms aim to show people content that is most similar to their views already. We believe you should always listen to the other side.It's a news website that displays articles from different viewpoints and sources. It automatically finds opposing views for a certain article and tries to highlight the key sentences.With great difficulty.Our language processing algorithms didn't live up to their expectationsSome articles have been processed surprisingly accuratelyIC Hack '16balassaloci\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:28 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"perspective","project_tags":["python","django","postgresql","bootstrap"],"project_url":"https:\/\/devpost.com\/software\/perspective-a6x3vl","keywords":"algorithms,articles,views,website,content,inspiration,highlight,great,finds,expectations,displays,difficulty,different,certain,challenges,built,believe,automatically,article,always"},{"level_0":898,"hack_vector":[[0.1551044583,-0.1031026989,-0.0213912372,0.0359143242,-0.0056655039,0.1227627993,0.208111763,-0.0267500151,-0.0389540568,0.0023560172,0.0197233111,-0.06932915,0.1396139562,-0.0672618672,0.0606981218,-0.0099618826,0.1960783154,-0.0292284116,0.0467104204,0.1346094161,-0.253564477,0.0293197148,-0.0362073407,0.0011058626,0.1209168732,-0.0328731276,-0.027264921,-0.1742270142,-0.0239478648,-0.0965770259,0.0815945268,-0.11309167,0.0233552679,-0.0783311576,-0.0143649457,-0.0259862673,0.1012222767,-0.1414360851,-0.0573336333,-0.0200160444,0.0576029159,-0.1258862168,-0.1361471266,-0.0359775014,0.0753372163,-0.0448914617,-0.0041177333,-0.0955086276,-0.007705946,-0.2079557925,-0.1451029778,0.0242722891,-0.1151474863,0.0251149405,-0.2162599266,0.1642066389,-0.1434037834,-0.0327698067,0.0285244845,-0.117446512,-0.0612250343,0.0251523033,0.0774024725,0.0395612791,0.119296819,0.0228399932,-0.0997492075,-0.1134071052,0.0229415838,0.0263756365,0.0647470504,-0.036290206,0.0196534339,-0.1124824956,0.040943224,-0.1272086501,0.1651983112,-0.0062062815,-0.0028623391,-0.1270167232,0.1181337908,0.1448087096,0.0545005836,0.1604436785,0.1013658345,0.2193982452,-0.0793009624,-0.0498220697,-0.0322825201,-0.0581048168,-0.1417641193,0.0560784377,0.1010704562,-0.0405246951,-0.0315397568,0.0275630411,-0.1651710123,0.218735069,0.0038425548,-0.0610292591]],"hackathon_name":"IC Hack '16","index":898,"project_description":"A fun, engaging, interactive media viewer using cheap technology in virtual reality.We showed up to the hackathon with little to no ideas about what to make or do. However after seeing the google cardboard and the ease of use with unity, we felt we'd be able to make something fairly substantial. We then decided on a VR file viewer as an interesting way of searching through and looking at files. The ideas developed form there throughout the hackathon to the finished product.Our project, VR file viewer, currently takes a folder full of images and populates a virtual world with interactive frames with these images on them. The world is easily traversable using the magnetic switch on the Google Cardboard and the head tracking of the phone. The hack also currently includes a method of playing music through this file viewer, and can easily be shown to switch between files when run on a PC, repopulating the world with images for each folder.Using Unity, the C# programming language and much caffeine, eventually a working product made its way onto a phone. We split the work between the two of us by one creating the main world and user interactions, and the other working on algorithms and working out how Unity handled files which were to be implemented in the final product.Unity is a little awkward at times, and the Google Cardboards were prone to being difficult to put together and stay together, as well as the apps made through unity heating the phone to a large extent and causing memory leaks. These were only small hurdles though.Getting a full finished product together in time even with a small team of two. We are also very proud of the positive responses we got whenever other participants tried our product.How to code better in C# as well as dealing with file systems etc. from within other environments such as unity. We also learned that flexible plans are the most likely to succeed.Cloud support,  iOS implementation, more filetypes supported, multi user environments so others can see what you're looking at- possibilities are endless.IC Hack '16Jacques Elliott\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:28 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"VRFileViewer","project_tags":["unity","c#"],"project_url":"https:\/\/devpost.com\/software\/vrfileviewer","keywords":"unity,product,file,world,also,working,together,files,viewer,google,phone,images,easily,currently,well,switch,small,hackathon,environments,full"},{"level_0":899,"hack_vector":[[0.1552699059,-0.1130166054,-0.0359818935,0.0506547987,-0.0270790551,0.1317313761,0.1824428737,-0.0232287701,-0.0066624265,-0.029089231,0.0003295529,-0.064067699,0.1449984461,-0.0594248511,0.0618378371,-0.0149546033,0.1833056211,0.0022311497,0.0463858582,0.1320021003,-0.2522248626,0.0136500848,-0.0267457739,-0.0084304595,0.1116088405,-0.0251271147,-0.0281401351,-0.1545491368,-0.0260106064,-0.1048617288,0.0508750863,-0.1170627549,0.0164781101,-0.0700192302,-0.0102270311,-0.0303325839,0.1174216419,-0.1610990316,-0.0795518383,-0.0008637339,0.061920207,-0.1177196354,-0.1286598146,-0.0371911041,0.0630874634,-0.0608214736,0.0174091663,-0.0851324871,-0.0289042201,-0.2107486129,-0.1706497818,0.0255590081,-0.1136409342,-0.0028526345,-0.2173513621,0.17376028,-0.1115662232,-0.0377004817,0.0416370071,-0.1044479609,-0.0825214311,0.0138558587,0.0608687103,0.0396348946,0.1068965346,0.0403621905,-0.0939797089,-0.1136493683,0.0107035823,0.0238158181,0.067969054,-0.0479525067,0.0159294903,-0.1204179153,0.0384106934,-0.1058289036,0.1739661396,0.0056703123,-0.0211959668,-0.1390306205,0.1041797623,0.1616545469,0.0398376696,0.1593379676,0.1088103428,0.2124924511,-0.0748111978,-0.0440202542,-0.0207479279,-0.0518779531,-0.1337072551,0.064283371,0.1016217321,-0.0367987528,-0.0161097832,0.0025689085,-0.1649373323,0.2571609318,-0.0052162339,-0.0640860647]],"hackathon_name":"IC Hack '16","index":899,"project_description":"It's so simple!At University, we tend to go out to restaurants a lot for big friends gathering. But every single time, we spend as much time talking about our lives than about the bill.\nFor the sake of enjoy more quality time with our friends, we thought of way to make this process of splitting the bill faster.Split is a very simple and straightforward app. Take a picture of your receipt, we\u2019ll analyse it and convert it to a simple table. From then on, each person just tap the elements he ate and even shared with some other people, and the magic is done.\nEverything will be calculated, from sharing starters between some people to service charge and tip splitting.Swift with Microsoft Oxford Project's OCR for text recognition.Using an OCR is WAY more complicated than we expected. After having used Tesseract, post-image processing, we still didn\u2019t get anything good enough for the product quality we were aiming at. We therefore moved on to using Microsoft\u2019s Project Oxford OCR which was a lot more accurate. Unfortunately, we couldn\u2019t implement it on our iOS devices because of a common problem but we plan on doing it next.\nAlso, the project was meant to be completed by three people, but unfortunately, one of us feeling sick had to go back home. We still did it and (hopefully?) made him proud (and jealous).It works! We can split bills and individual elements!That Paul Balaji is an awful rapper.We\u2019re going live ASAP! The main reason why we came to the hackathon is to actually get this project done and functional..!IC Hack '16Saurav Mitra\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:29 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SPLIT","project_tags":["swift"],"project_url":"https:\/\/devpost.com\/software\/split-mpbvcq","keywords":"project,people,split,time,ocr,done,next,elements,friends,simple,splitting,get,still,oxford,quality,bill,go,lot,way,using"},{"level_0":900,"hack_vector":[[0.1445203722,-0.1556178629,0.0285891127,0.1056938767,-0.0548380241,0.1627178639,0.147646457,-0.0549300425,-0.032953728,-0.0328202993,-0.0090147378,0.0687774494,0.1170761809,-0.0808100551,-0.0329820141,0.1065414771,0.2579352558,0.0508424491,0.0562229492,0.055182606,-0.1566932648,-0.0086045591,-0.0488075949,-0.0784473717,0.1811694652,-0.0197111666,-0.0882514492,-0.1728118658,0.0469062179,-0.0655747503,0.0055849827,-0.0728837177,0.0940660685,-0.0361745283,-0.0426577553,0.034193337,0.148403883,-0.0872072205,0.027962381,0.1308383495,0.059641283,-0.1391471922,-0.1873533726,-0.0253683422,-0.0857005343,-0.0457545482,0.0572711639,0.0188076198,-0.0111030424,-0.1662176996,0.0142283775,0.051066,-0.0994664133,-0.0850648358,-0.0563403592,0.1302377433,-0.1555160135,0.0980404764,-0.0229561534,0.1017281562,0.009726298,0.0400429517,0.0318878517,0.0840129256,0.1551043093,-0.0681762919,-0.1386995614,-0.1780592799,0.0004146037,-0.0114392797,0.0613138974,-0.0231557935,-0.0359715596,-0.1496913433,-0.1007784382,-0.0242601912,0.1922999173,0.0347436816,0.1188706383,-0.1396155208,0.1011427268,0.139769569,-0.0140613765,0.1106477976,0.1607609987,0.1322029978,-0.14717637,0.1071134582,0.0171822403,-0.1245585531,-0.0467186086,0.1170525029,-0.017638132,0.0501740389,0.1066072062,-0.1289527565,-0.0231368002,0.1021830142,0.1407358795,-0.0280988105]],"hackathon_name":"IC Hack '16","index":900,"project_description":"asdasfasfasgIC Hack '16Ryan Chung\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:33 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"asfasf","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/asfasf","keywords":"ran,proud,next,learned,inspiration,doesasfasfasfa,challenges,built,asfasf,accomplishments"},{"level_0":901,"hack_vector":[[0.1478609741,-0.1242512167,-0.0228931569,0.0440907702,-0.0381021649,0.1414117962,0.2073755413,-0.0213711224,-0.0109173721,-0.0273027141,0.0113768214,-0.0306612682,0.1325895935,-0.0774248764,0.0592860244,0.0365600549,0.2438843846,0.0244808551,0.0426844098,0.1160275638,-0.2316415906,0.019101195,-0.0379557312,-0.0553642437,0.1093683988,-0.023586493,-0.0395819172,-0.1919727921,0.001089035,-0.0982973427,0.0400556773,-0.1160648689,0.0402364545,-0.0889389068,-0.0154991113,-0.0100214658,0.1191087812,-0.1371843815,-0.060710609,0.0251156241,0.0324151404,-0.142375797,-0.1521577835,-0.0373926051,0.0358871184,-0.063981995,0.0328012481,-0.0498116091,-0.0313576125,-0.2065166384,-0.1186633483,0.0134421345,-0.1089318171,-0.0575492494,-0.1640803665,0.1668573767,-0.1241237223,0.003042869,0.0311126877,-0.0539121777,-0.0563747697,0.0349789523,0.0701896921,0.0653586537,0.1153320521,-0.0022650671,-0.1195831522,-0.1398250759,0.0294470061,0.0060916962,0.0700064674,-0.0492271557,0.0128306542,-0.1382717192,-0.0064543267,-0.1283141822,0.1747519523,0.0064210589,0.0340797231,-0.1497477442,0.1312703341,0.1711353511,0.0446592569,0.1726770997,0.1180917546,0.187323153,-0.1082937121,0.0068716151,-0.0086220894,-0.0910657644,-0.1342690438,0.0706479251,0.0726864263,-0.0200881846,0.0274185408,-0.0281670596,-0.1407486945,0.2071444541,0.0339152031,-0.075436987]],"hackathon_name":"IC Hack '16","index":901,"project_description":"Balancing social media's positive feedbackexampleMost machine learning algorithms aim to show people content that is most similar to their views already. We believe you should always listen to the other side.It's a news website that displays articles from different viewpoints and sources. It automatically finds opposing views for a certain article and tries to highlight the key sentences.With great difficulty.Our language processing algorithms didn't live up to their expectationsSome articles have been processed surprisingly accuratelyIC Hack '16balassaloci\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:28 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"perspective","project_tags":["python","django","postgresql","bootstrap"],"project_url":"https:\/\/devpost.com\/software\/perspective-a6x3vl","keywords":"algorithms,articles,views,website,content,inspiration,highlight,great,finds,expectations,displays,difficulty,different,certain,challenges,built,believe,automatically,article,always"},{"level_0":902,"hack_vector":[[0.1551044583,-0.1031026989,-0.0213912372,0.0359143242,-0.0056655039,0.1227627993,0.208111763,-0.0267500151,-0.0389540568,0.0023560172,0.0197233111,-0.06932915,0.1396139562,-0.0672618672,0.0606981218,-0.0099618826,0.1960783154,-0.0292284116,0.0467104204,0.1346094161,-0.253564477,0.0293197148,-0.0362073407,0.0011058626,0.1209168732,-0.0328731276,-0.027264921,-0.1742270142,-0.0239478648,-0.0965770259,0.0815945268,-0.11309167,0.0233552679,-0.0783311576,-0.0143649457,-0.0259862673,0.1012222767,-0.1414360851,-0.0573336333,-0.0200160444,0.0576029159,-0.1258862168,-0.1361471266,-0.0359775014,0.0753372163,-0.0448914617,-0.0041177333,-0.0955086276,-0.007705946,-0.2079557925,-0.1451029778,0.0242722891,-0.1151474863,0.0251149405,-0.2162599266,0.1642066389,-0.1434037834,-0.0327698067,0.0285244845,-0.117446512,-0.0612250343,0.0251523033,0.0774024725,0.0395612791,0.119296819,0.0228399932,-0.0997492075,-0.1134071052,0.0229415838,0.0263756365,0.0647470504,-0.036290206,0.0196534339,-0.1124824956,0.040943224,-0.1272086501,0.1651983112,-0.0062062815,-0.0028623391,-0.1270167232,0.1181337908,0.1448087096,0.0545005836,0.1604436785,0.1013658345,0.2193982452,-0.0793009624,-0.0498220697,-0.0322825201,-0.0581048168,-0.1417641193,0.0560784377,0.1010704562,-0.0405246951,-0.0315397568,0.0275630411,-0.1651710123,0.218735069,0.0038425548,-0.0610292591]],"hackathon_name":"IC Hack '16","index":902,"project_description":"A fun, engaging, interactive media viewer using cheap technology in virtual reality.We showed up to the hackathon with little to no ideas about what to make or do. However after seeing the google cardboard and the ease of use with unity, we felt we'd be able to make something fairly substantial. We then decided on a VR file viewer as an interesting way of searching through and looking at files. The ideas developed form there throughout the hackathon to the finished product.Our project, VR file viewer, currently takes a folder full of images and populates a virtual world with interactive frames with these images on them. The world is easily traversable using the magnetic switch on the Google Cardboard and the head tracking of the phone. The hack also currently includes a method of playing music through this file viewer, and can easily be shown to switch between files when run on a PC, repopulating the world with images for each folder.Using Unity, the C# programming language and much caffeine, eventually a working product made its way onto a phone. We split the work between the two of us by one creating the main world and user interactions, and the other working on algorithms and working out how Unity handled files which were to be implemented in the final product.Unity is a little awkward at times, and the Google Cardboards were prone to being difficult to put together and stay together, as well as the apps made through unity heating the phone to a large extent and causing memory leaks. These were only small hurdles though.Getting a full finished product together in time even with a small team of two. We are also very proud of the positive responses we got whenever other participants tried our product.How to code better in C# as well as dealing with file systems etc. from within other environments such as unity. We also learned that flexible plans are the most likely to succeed.Cloud support,  iOS implementation, more filetypes supported, multi user environments so others can see what you're looking at- possibilities are endless.IC Hack '16Jacques Elliott\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:28 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"VRFileViewer","project_tags":["unity","c#"],"project_url":"https:\/\/devpost.com\/software\/vrfileviewer","keywords":"unity,product,file,world,also,working,together,files,viewer,google,phone,images,easily,currently,well,switch,small,hackathon,environments,full"},{"level_0":903,"hack_vector":[[0.1552699059,-0.1130166054,-0.0359818935,0.0506547987,-0.0270790551,0.1317313761,0.1824428737,-0.0232287701,-0.0066624265,-0.029089231,0.0003295529,-0.064067699,0.1449984461,-0.0594248511,0.0618378371,-0.0149546033,0.1833056211,0.0022311497,0.0463858582,0.1320021003,-0.2522248626,0.0136500848,-0.0267457739,-0.0084304595,0.1116088405,-0.0251271147,-0.0281401351,-0.1545491368,-0.0260106064,-0.1048617288,0.0508750863,-0.1170627549,0.0164781101,-0.0700192302,-0.0102270311,-0.0303325839,0.1174216419,-0.1610990316,-0.0795518383,-0.0008637339,0.061920207,-0.1177196354,-0.1286598146,-0.0371911041,0.0630874634,-0.0608214736,0.0174091663,-0.0851324871,-0.0289042201,-0.2107486129,-0.1706497818,0.0255590081,-0.1136409342,-0.0028526345,-0.2173513621,0.17376028,-0.1115662232,-0.0377004817,0.0416370071,-0.1044479609,-0.0825214311,0.0138558587,0.0608687103,0.0396348946,0.1068965346,0.0403621905,-0.0939797089,-0.1136493683,0.0107035823,0.0238158181,0.067969054,-0.0479525067,0.0159294903,-0.1204179153,0.0384106934,-0.1058289036,0.1739661396,0.0056703123,-0.0211959668,-0.1390306205,0.1041797623,0.1616545469,0.0398376696,0.1593379676,0.1088103428,0.2124924511,-0.0748111978,-0.0440202542,-0.0207479279,-0.0518779531,-0.1337072551,0.064283371,0.1016217321,-0.0367987528,-0.0161097832,0.0025689085,-0.1649373323,0.2571609318,-0.0052162339,-0.0640860647]],"hackathon_name":"IC Hack '16","index":903,"project_description":"It's so simple!At University, we tend to go out to restaurants a lot for big friends gathering. But every single time, we spend as much time talking about our lives than about the bill.\nFor the sake of enjoy more quality time with our friends, we thought of way to make this process of splitting the bill faster.Split is a very simple and straightforward app. Take a picture of your receipt, we\u2019ll analyse it and convert it to a simple table. From then on, each person just tap the elements he ate and even shared with some other people, and the magic is done.\nEverything will be calculated, from sharing starters between some people to service charge and tip splitting.Swift with Microsoft Oxford Project's OCR for text recognition.Using an OCR is WAY more complicated than we expected. After having used Tesseract, post-image processing, we still didn\u2019t get anything good enough for the product quality we were aiming at. We therefore moved on to using Microsoft\u2019s Project Oxford OCR which was a lot more accurate. Unfortunately, we couldn\u2019t implement it on our iOS devices because of a common problem but we plan on doing it next.\nAlso, the project was meant to be completed by three people, but unfortunately, one of us feeling sick had to go back home. We still did it and (hopefully?) made him proud (and jealous).It works! We can split bills and individual elements!That Paul Balaji is an awful rapper.We\u2019re going live ASAP! The main reason why we came to the hackathon is to actually get this project done and functional..!IC Hack '16Saurav Mitra\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:29 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SPLIT","project_tags":["swift"],"project_url":"https:\/\/devpost.com\/software\/split-mpbvcq","keywords":"project,people,split,time,ocr,done,next,elements,friends,simple,splitting,get,still,oxford,quality,bill,go,lot,way,using"},{"level_0":904,"hack_vector":[[0.1445203722,-0.1556178629,0.0285891127,0.1056938767,-0.0548380241,0.1627178639,0.147646457,-0.0549300425,-0.032953728,-0.0328202993,-0.0090147378,0.0687774494,0.1170761809,-0.0808100551,-0.0329820141,0.1065414771,0.2579352558,0.0508424491,0.0562229492,0.055182606,-0.1566932648,-0.0086045591,-0.0488075949,-0.0784473717,0.1811694652,-0.0197111666,-0.0882514492,-0.1728118658,0.0469062179,-0.0655747503,0.0055849827,-0.0728837177,0.0940660685,-0.0361745283,-0.0426577553,0.034193337,0.148403883,-0.0872072205,0.027962381,0.1308383495,0.059641283,-0.1391471922,-0.1873533726,-0.0253683422,-0.0857005343,-0.0457545482,0.0572711639,0.0188076198,-0.0111030424,-0.1662176996,0.0142283775,0.051066,-0.0994664133,-0.0850648358,-0.0563403592,0.1302377433,-0.1555160135,0.0980404764,-0.0229561534,0.1017281562,0.009726298,0.0400429517,0.0318878517,0.0840129256,0.1551043093,-0.0681762919,-0.1386995614,-0.1780592799,0.0004146037,-0.0114392797,0.0613138974,-0.0231557935,-0.0359715596,-0.1496913433,-0.1007784382,-0.0242601912,0.1922999173,0.0347436816,0.1188706383,-0.1396155208,0.1011427268,0.139769569,-0.0140613765,0.1106477976,0.1607609987,0.1322029978,-0.14717637,0.1071134582,0.0171822403,-0.1245585531,-0.0467186086,0.1170525029,-0.017638132,0.0501740389,0.1066072062,-0.1289527565,-0.0231368002,0.1021830142,0.1407358795,-0.0280988105]],"hackathon_name":"IC Hack '16","index":904,"project_description":"asdasfasfasgIC Hack '16Ryan Chung\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 21, 2016 07:33 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"asfasf","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/asfasf","keywords":"ran,proud,next,learned,inspiration,doesasfasfasfa,challenges,built,asfasf,accomplishments"},{"level_0":905,"hack_vector":[[0.1447853297,-0.1605933458,-0.0072691073,0.0655444339,-0.044447273,0.1522209644,0.1792263091,-0.0324740931,-0.0140443584,-0.0120995501,0.016560724,-0.0049800323,0.1484305561,-0.066518113,0.0458836854,0.0461850949,0.2405380011,0.0283582211,0.0433074385,0.0868819654,-0.2285147607,0.0115433307,-0.0424554721,-0.0435160249,0.1452088654,-0.0343144462,-0.0461477712,-0.1906820983,0.0164336897,-0.0813540816,0.0572570227,-0.1096196473,0.0383269414,-0.0718910992,-0.0432656445,-0.0025345746,0.1208729446,-0.1381033063,-0.0346371979,0.033494696,0.0273665562,-0.1348850131,-0.1627630144,-0.0349622257,0.006576899,-0.046476692,0.0379658528,-0.0275677554,-0.0199216194,-0.1988319457,-0.0911684036,0.0150103904,-0.1199342757,-0.0508014746,-0.1535741389,0.1671913266,-0.1310110688,0.0267047826,0.025032239,-0.0163877215,-0.0494025163,0.0352789834,0.0611247309,0.0796062127,0.1172654256,-0.0085360715,-0.1169877723,-0.1566777974,0.018944826,0.0009800397,0.0717299357,-0.0395052209,0.023096716,-0.1349974871,-0.0411899053,-0.1107478291,0.1955892295,0.0150976982,0.0600047745,-0.1516020745,0.1329022795,0.1759399176,0.0115368376,0.1646824479,0.1399247646,0.1953582913,-0.1258624643,0.0233617071,-0.0162391085,-0.0937967747,-0.1175960898,0.1000910476,0.0544653498,-0.0149925947,0.0534591787,-0.0515865199,-0.1086592451,0.1936642081,0.0665857792,-0.0693193376]],"hackathon_name":"Improve water utility efficiency","index":905,"project_description":"Developing a NWL resource management hub for better more effective site \/ asset managementDeveloping a NWL resource management hub for better more effective site \/ asset managementWe have taken multiple unconnected NWL data sets and inter related them to help the experts at NWL better understand their assets, their management and where cost savings and efficiences can be made.Improve water utility efficiencyIan Birtwistle\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 07, 2016 09:29 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"NWL Hack by Enigma Interactive","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/nwl-hack-enigma","keywords":"nwl,management,better,understand,hub,assets,cost,data,developing,effective,efficiences,experts,help,inter,unconnected,made,multiple,related,resource,savings"},{"level_0":906,"hack_vector":[[0.1424082965,-0.097490631,-0.0245914385,0.0579230301,-0.0302064214,0.1351662129,0.2011790872,-0.0110401968,-0.0414138176,0.0271974299,0.0191941448,-0.071642004,0.1592135876,-0.0778322071,0.084791109,-0.0009995205,0.2282720357,0.0163535662,0.0465693511,0.0931349099,-0.2308186293,0.0547100604,-0.0517189689,-0.0282228235,0.1190314814,-0.0343095362,-0.0468972698,-0.2117193788,-0.0005870168,-0.0540211163,0.0810414031,-0.1343767047,0.0201343726,-0.0987462327,-0.0321518555,0.0132254288,0.116073221,-0.1369396597,-0.0565619916,0.0071693915,0.0171905998,-0.1673085243,-0.1762004197,-0.0122570451,0.042658411,-0.0383044817,0.012107118,-0.0733227283,-0.0024179453,-0.1759928316,-0.1242747158,-0.0081239948,-0.1049537286,0.0061658206,-0.1839187294,0.1546200067,-0.1362821162,0.0132698491,0.0378554501,-0.070959568,-0.0706181601,0.0344422162,0.0918028951,0.0822354853,0.109457396,-0.0007705014,-0.0748179778,-0.1325144619,0.0355518572,-0.0040072515,0.0769377351,-0.049046915,0.0296963863,-0.1163509637,0.0190466121,-0.152588129,0.1887462884,0.0073358477,0.0409417674,-0.1173032448,0.1536278427,0.155065164,0.0739234239,0.1460818797,0.108290866,0.1905776113,-0.1154364571,-0.0111978166,0.0067672622,-0.0932899415,-0.1220183074,0.0551241115,0.0765147284,-0.0293339808,0.0451291576,-0.0099175675,-0.1347147524,0.1982640624,0.0350525081,-0.0772908553]],"hackathon_name":"Improve water utility efficiency","index":906,"project_description":"Top level report based visualisation for quick observation of trendsInfographic browser-based visualisations of data.Surfaces information from various sources and displays in a meaningful manner.Imported data into MSSQL database and developed queries to link data in meaningful ways.  Developed application to convert data into form browser manipulation (JSON). Developed Javascript based application to visualise data.Data was fragmented into different sources with no easy way to link them.  Data was of poor quality.Creating end-to-end proof of concept (from xlsx to browser visualisation).Need more structured data sources for computer processing (not human readable sheets)Filtering and sorting of data - allowing specific queries.  Different types of visualisation to explore added value.Improve water utility efficiencyI worked on the backendDarren Smith\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 07, 2016 09:24 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Northumbrian Water Data Visualisation","project_tags":["javascript","scala","d3.js"],"project_url":"https:\/\/devpost.com\/software\/northumbrian-water-data-visualisation","keywords":"data,developed,visualisation,browser,sources,link,meaningful,different,queries,end,based,application,easy,fragmented,form,imported,filtering,explore,infographic,information"},{"level_0":907,"hack_vector":[[0.1636873484,-0.1487834156,-0.0115969656,0.0667940751,-0.0381776728,0.1498565972,0.1834941208,-0.0511488952,-0.0268517509,-0.0102016665,0.002856768,-0.0053407261,0.1395657361,-0.0675292462,0.0370993614,0.0555439182,0.2462479919,0.0139687154,0.0496183746,0.1108372509,-0.2334369868,0.0198288467,-0.0397716574,-0.0408596918,0.1514835954,-0.0226547103,-0.0485720783,-0.183172062,0.0215679072,-0.0931343809,0.0437721163,-0.1198571175,0.0568502843,-0.0695281997,-0.0362106338,-0.0190228615,0.133018896,-0.1335730702,-0.0280064661,0.0443871729,0.0487984493,-0.1417014301,-0.1674635261,-0.0420767404,-0.001045862,-0.052704975,0.0252275914,-0.0342649035,-0.0126303313,-0.1974757314,-0.0799444169,0.0228733197,-0.116449289,-0.0366060324,-0.1481036544,0.1625210643,-0.1438328177,0.0273377057,0.0072336132,-0.0059088618,-0.0386798419,0.025496792,0.0627216026,0.0757912174,0.1273043305,-0.0259225536,-0.1287219375,-0.1602519006,0.0240743645,0.0164675266,0.0783355758,-0.0406939611,-0.0050392449,-0.13858518,-0.0419428349,-0.0994221419,0.1946140975,0.020600399,0.0594072714,-0.1419255883,0.1198419705,0.1603662819,0.018949125,0.1611122042,0.1475586891,0.1798244417,-0.134179011,0.0288132951,-0.0057666381,-0.0961142257,-0.1084927991,0.0899718776,0.0651550964,-0.0061306818,0.0477972962,-0.0526456572,-0.0986537412,0.1838947684,0.0716313869,-0.0610450841]],"hackathon_name":"Improve water utility efficiency","index":907,"project_description":"Platform for integrated asset and fault management across all infrastructuremanaging assetsNicander's new AFMS product is supporting the management and repair of network assets across Ireland and throughout the City of Dublin.  It will manage all asset infrastructure for the new Mersey Gateway Bridge when it opens in 2017. But where next.............Improve water utility efficiencyTrevor Platt\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 09, 2016 04:13 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Nicander AFMS","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/nicander-afms","keywords":"new,throughout,ireland,afms,asset,assets,bridge,city,dublin,gateway,infrastructure,manage,supporting,management,mersey,network,next,nicander,opens,product"},{"level_0":908,"hack_vector":[[0.1458717436,-0.1144130677,-0.0397895537,0.0234761555,-0.0158422738,0.1087419242,0.1875709742,-0.0150871342,-0.0095052524,-0.0252531841,0.0045352951,-0.0821076557,0.1474808604,-0.0580714606,0.0703479797,-0.0100177703,0.1847068965,-0.011132529,0.0422842912,0.1273490041,-0.2505645156,0.0327091701,-0.0337660536,-0.0088738762,0.0914666876,-0.0380264185,-0.0212052446,-0.1521907747,-0.0303575043,-0.1036891565,0.060030479,-0.1180798337,0.0234945063,-0.0751197934,-0.0082152775,-0.037233185,0.1057968438,-0.1610952914,-0.0782166272,-0.0265608542,0.0439414196,-0.1233391836,-0.1387739778,-0.0341020189,0.0751191974,-0.0683127195,0.0116537455,-0.0971670374,-0.0243555829,-0.2019375265,-0.1804018319,0.0114626456,-0.1071786806,0.0031711455,-0.2206957638,0.1616203785,-0.1160590649,-0.0553951338,0.0548407286,-0.121655643,-0.0937341228,0.0230185725,0.0691484064,0.0357304439,0.0866950676,0.0391053557,-0.0941745713,-0.1096703485,0.0196445789,0.0315154083,0.0763090402,-0.0589762777,0.0175650455,-0.1125059798,0.0397192985,-0.1320806742,0.1693538725,0.0054662717,-0.0114829503,-0.125304684,0.1098388135,0.1512637734,0.0449115559,0.1582381576,0.0956111923,0.2041935623,-0.0833958685,-0.0492006764,-0.0252609123,-0.0654621571,-0.1347531527,0.0531671531,0.1036095694,-0.0541748963,-0.0231019519,0.0098455725,-0.1804576665,0.2478647381,-0.0103777349,-0.0744195282]],"hackathon_name":"Improve water utility efficiency","index":908,"project_description":"Semi-abstract pictures of jobs for assets show patterns & impact of bad data maintenance.The data is bad. My mind connected with the jobs data, understanding how engineers are sent out for maintenance but might abort the job due to lack of information about was needed. That engineer might not bother to accurately record why they aborted the job, or even if finished they might not record what they did.I could have reviewed the data, running queries to flag up places issues commonly happen and I could have written a report on how good it was. That's my day job, and as this is a hackathon I wanted to see how my coding would follow my wandering mind. I also wanted to think how engineers and team leaders could be engaged with gaps in data and a potential domino effect. Simply pointing out which engineers\/jobs had bad data, wasn't enough.My hacked-together project takes all the jobs associated to an asset. It then paints different aspects of the jobs onto a \"flag\" image. The human mind can easily spot patterns, and most importantly breaks in patterns. [see annotated flag] An asset may get jobs every few months and that be normal, but at one point there is is a job that was only a few days after the following job. That can draw us in, and perhaps every time the pattern breaks it is after an orange dot which means no comment was given.The real benefit is the view of assets. The idea is that NWL staff will be able to filter the list of assets (or generating reports) in the way they are used to, I have just hard-coded some examples. For example, show all assets with more than had more than 40 jobs, or show pump assets. On this page, the \"flag\" images of each asset are shown. Because the filter has selected assets of an specific nature, the flags are likely to be the same. For example the time-since-last-job bar may be all greens because the assets are reliable ones maintained every 5 years. It is not the individual assets to look at, but the typical pattern of these flags and then you can see where there are breaks.The data was converted from Excel into CSV and into a mySQL database, thanks to critical help from Simon and his patience waiting for conversions to run. When the detail page of an asset is looked at, PHP runs some queries on the tables to get various data of the jobs. The GD image library is used to draw different shapes onto a grey rectangle. There is nothing amazing to this build, but I hadn't spent a lot of time with the GD functions before as previous work had started with images rather than create them from scratch. My main work was reviewing the data, and learning what the field names were.Converting the data had it's problems. Large Excel files are horrible, CSV is better.\nI was aware of limited time, and thus limited opportunity I had. I didn't push myself to build a big user interface, and that actually resulted in me skipping on another project idea I started forming.Visualising about 50 rows on a 300 x 100 pixel image, displaying those on a page\/gird, and thus being able to visualise multiple tables\/queries of a relational database on such a flat view. Normally such a view would require flicking between tabs\/sheets and keeping in mind what each one looked like and how they linked.\nPlaying with the GD image library was a fun accomplishment, but it's only the start.GD library has some bugs in it that limited what I could draw, I may be able to get around those. I've been able to learn about specific assets that stood out as a result of the flag images, although I'm not a domain-expert to know exactly what  that means or confirm it is something that isn't right.Understanding the values is important, and although advice is on hand it would need a lot of sit-down time to see what is relevant. The break points for shapes changing colour, and what information to display could be tweaked and  adjusted. One of the things to add next would be a marker as to the priority-level of jobs. The image could also display information about the asset that isn't job-specific.Improve water utility efficiencyGregory Marler\n          started this project\n\n          \n            \u2014\n            \n\n                Feb 07, 2016 03:54 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Abstract Assets","project_tags":["php","html","mysql"],"project_url":"https:\/\/devpost.com\/software\/abstract-assets","keywords":"assets,data,jobs,job,could,flag,time,asset,image,able,gd,mind,see,would,draw,specific,breaks,information,queries,limited"},{"level_0":909,"hack_vector":[[0.1334433407,-0.1012085378,-0.0341845602,0.0430769436,-0.0337271802,0.1285841912,0.1762982458,-0.024626961,-0.0045102132,-0.0343509093,0.0220541283,-0.0569475032,0.1432932317,-0.0620080903,0.0597571433,-0.0009719008,0.2065613866,-0.0010340557,0.0402989574,0.1381394267,-0.244064793,0.0087035168,-0.0363435671,-0.0053555146,0.1106050536,-0.0218791217,-0.026867399,-0.1613525897,-0.0096426541,-0.1088832766,0.0476365946,-0.1143956855,0.0188239291,-0.0651067495,0.0050182799,-0.0240656268,0.1170669794,-0.1521683186,-0.0712552741,-0.0044053225,0.0467842892,-0.1148925051,-0.137942031,-0.0364416242,0.0524032004,-0.0660556629,0.019695729,-0.0656319559,-0.0241996013,-0.214287743,-0.1541991383,0.02035366,-0.1043393016,-0.0093794679,-0.2156732827,0.174688071,-0.1084344909,-0.0288212206,0.0369956046,-0.1085215434,-0.0732737929,0.017346764,0.0668531433,0.0552224405,0.1067477986,0.0362866744,-0.0927675739,-0.1348556876,0.0231072046,0.0154386293,0.0622236393,-0.0414880253,0.0295859892,-0.1186758876,0.0275158845,-0.1137864813,0.1770250797,-0.0016483366,-0.0040172464,-0.1405633688,0.1037950963,0.1675089747,0.0404083543,0.1705086976,0.1081135496,0.1991384327,-0.1029249579,-0.0580991656,-0.0428909138,-0.0669913068,-0.1448258609,0.0678249821,0.1054397896,-0.0419325233,-0.0035013382,0.0004806359,-0.1624595672,0.2560491264,0.0056841848,-0.0770675093]],"hackathon_name":"Code for the Kingdom Nashville 2016","index":909,"project_description":"Enhance your prayer life with intimate and private prayer groups.We don't pray nearly enough and we fail to pray for others when we say we will!As Christians do we really believe that prayer is communication with our Creator and that it changes things?  We've learned that many of us have struggled in our prayer lives; not praying enough, failing to pray for others, and a general lack of disbelief in prayer.We've set out to help our brothers and sisters cultivate this foundational spiritual discipline.What about new believer's who don't have anyone to pray for them? We've all felt the emptiness and loneliness of knowing and sensing no one is praying for me.PrayerGroups\u2122 provides small, private prayer groups to stay abreast of your prayers and others prayers requests.Throughout the day, we encourage you to use Prayer Groups App to List your prayers. \nBring all your prayers the the Lord!You can also request supplication from your personal 'Prayer Groups' - who can now join you in prayer.Finally, provide spiritual help to others, you can respond to 'Prayer Requests', submitted from members in your personal Prayer Groups.Sketch, Invision.\nWe spent a considerable amount of time in ideation. It was important that we fully understood what we were setting out to accomplish.  This allowed us to hone in on our requirements to produce a minimal viable product.Ensuring adherence to the original vision.  Through our cumulative experience, we have learned that sometimes too many features\/options can detract from the overall design of the project - \"Less is More\".We came into this project with just an IDEA.  By the end of our weekend, we had provided the groundwork to an App that we believe will change the world, \"One Prayer at a Time\"Front end and back end development languages.This is the start of our new ministry - PrayerGroups App.Consider business development and marketing partnerships to sustain platform (Kendrick Brothers - War Room Prayer App)Code for the Kingdom Nashville 2016Ideation and system designVision - Project Management. \nGet coffee and snacks for team.Brandon Heller\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 04, 2016 09:02 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"PrayerGroups\u2122","project_tags":["flow","sketch","html","css"],"project_url":"https:\/\/devpost.com\/software\/prayergroups","keywords":"prayer,groups,others,prayers,app,pray,learned,end,brothers,one,new,requests,personal,enough,spiritual,praying,many,development,help,time"},{"level_0":910,"hack_vector":[[0.147796616,-0.109538354,0.0002751556,0.0886815414,-0.022247931,0.1756990105,0.178622961,-0.0602618307,-0.0396544598,-0.0093268389,0.0220095217,-0.0520423688,0.1661668122,-0.0991259441,0.031769067,0.0418077148,0.238056004,0.0072629466,0.0646042973,0.0884149149,-0.198953554,0.0502427854,-0.0648060143,-0.0194243118,0.1571420729,-0.0423791222,-0.0591395646,-0.2036360502,-0.0224224329,-0.0537896231,0.0800351053,-0.0999443457,0.0785664842,-0.0729364529,-0.0448069312,0.0119998669,0.1571138501,-0.1129407436,-0.0086680884,0.0253841188,0.061394047,-0.1462234408,-0.1990079582,-0.0050424635,0.0101668853,-0.014872958,0.0371629819,-0.0472824387,-0.0085570039,-0.2110379785,-0.0946200714,0.0456008986,-0.1126066148,0.0109760053,-0.174593389,0.1397960633,-0.157748729,0.036876414,0.0136882802,-0.0329273939,-0.0421768874,0.0246633403,0.0794243664,0.0596105233,0.1260918826,-0.0123247355,-0.0801328123,-0.1562594622,0.0131749883,0.0103846602,0.0684652776,-0.0323460884,0.0131742852,-0.1384662986,-0.0105271647,-0.0680928305,0.2086452544,0.0019845369,0.0509852655,-0.134102717,0.116206646,0.1550585032,0.042895712,0.1448036879,0.1350550354,0.1729608029,-0.1141081527,-0.0074065216,-0.006682964,-0.1083202884,-0.1142604128,0.0846519396,0.0485090464,-0.0112585975,0.0458244868,-0.0477009714,-0.0929387957,0.1984311491,0.0840288997,-0.0656361356]],"hackathon_name":"Code for the Kingdom Nashville 2016","index":910,"project_description":"An app that encourages students to read and respond to God's Word.Some sample screens.Code for the Kingdom Nashville 2016I helped with ux strategy, development strategy, front-end, moral support, fist bumps.Came up with the idea and created the general flow and content of the app.I worked on the front end of the app.  Configured the build tools for React.  Helped with data models and workflow.Kevin Adelsberger\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 12, 2016 09:49 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Formed App","project_tags":["react","bootstrap"],"project_url":"https:\/\/devpost.com\/software\/formed-app","keywords":"app,youth,students,team,ministers,different,backend,read,developer,development,end,formed,front,ran,content,future,project,groups,need,kristin"},{"level_0":911,"hack_vector":[[0.1489041746,-0.0908164084,-0.0234275609,0.0645132661,-0.0283518992,0.1613591164,0.2276764065,-0.0435330234,-0.0332459323,0.0005378721,0.0000208942,-0.0334227979,0.1330492198,-0.0925061554,0.0443003923,0.0139956502,0.2236897051,0.0088509303,0.042831447,0.1062724441,-0.2060634941,0.041284956,-0.0416646339,-0.0264868531,0.1502689123,-0.0056766146,-0.0446209349,-0.190557614,-0.0135611081,-0.0497021265,0.0635291189,-0.1273890734,0.0570643954,-0.087522909,-0.0609814115,0.0112374565,0.1474949867,-0.1187021956,-0.0422609486,0.038404163,0.0409491174,-0.1565967947,-0.1469488293,-0.0242948104,0.0506613739,-0.0324688666,0.0156340972,-0.0503690653,-0.0300473031,-0.2114959359,-0.1080216691,0.016379999,-0.1146522537,0.006553215,-0.144753322,0.1466346681,-0.1586805433,0.0241633356,-0.0076923519,-0.0559756607,-0.0464807712,0.0232611578,0.0847097486,0.0462271459,0.1368687004,-0.0346449614,-0.1053695232,-0.1214563623,0.0440500379,0.018511638,0.0496356972,-0.041500859,0.0115119899,-0.1417777538,-0.0091103325,-0.1097147986,0.187800169,0.0014737622,0.0350053348,-0.1565154195,0.136333093,0.1553516537,0.0751207471,0.1685635895,0.108217828,0.1902285814,-0.106627807,0.0067935116,0.0185240861,-0.1138279662,-0.1672312915,0.0638514012,0.0871664733,-0.0061932006,0.042926468,-0.0224426668,-0.1122521162,0.2031526268,0.0564772561,-0.0552664064]],"hackathon_name":"Code for the Kingdom Nashville 2016","index":911,"project_description":"Empowering JavaScript developers with God\u2019s Word, leveraging the Digital Bible Platform API.This project is a JavaScript and Node.js client for the Digital Bible Platform Digital Bible PlatformThe Digital Bible Platform is an online API for Bible Text, Audio, and Video. This client module for Node.js provides an easy-to-use set of functions designed to simplify the building of JavaScript applications that use the Digital Bible Platform.Electron Bible is a cross-platform desktop application that uses the client to provide basic Bible reading and text search features.Code for the Kingdom Nashville 2016David Neal\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 12:08 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Digital Bible Platform JS SDK","project_tags":["javascript"],"project_url":"https:\/\/devpost.com\/software\/digital-bible-platform","keywords":"bible,client,platform,digital,api,js,versions,node,application,electron,javascript,key,var,text,use,require,cross,err,easy,usage"},{"level_0":912,"hack_vector":[[0.1526589096,-0.1163128465,-0.0299520399,0.0600718036,-0.029049946,0.1503483057,0.1910277903,-0.0416531824,-0.0118030515,-0.0238560047,0.0160059612,-0.0426643342,0.1498845071,-0.0701870769,0.0639319792,0.0193244964,0.214643687,-0.000672681,0.0451654904,0.1221463829,-0.2383701354,0.0227186438,-0.0420607738,-0.0212512109,0.1195029169,-0.0380145758,-0.0301076006,-0.1864352673,-0.031464234,-0.0825322866,0.072251223,-0.1102757528,0.0431025252,-0.0698428378,-0.0236869175,-0.0138106728,0.1218387708,-0.1336703002,-0.0460799001,0.0146018863,0.0555260107,-0.1315593123,-0.1631060988,-0.0297790132,0.043161884,-0.0496029966,0.0228539538,-0.0629311353,-0.0312283598,-0.2276041508,-0.1259323359,0.0145593816,-0.1051437855,-0.0139351944,-0.1987869591,0.1572410613,-0.1331242323,-0.0071935793,0.0223689601,-0.0641392618,-0.068489641,0.017285293,0.063450098,0.0398851745,0.1161171198,0.0058060335,-0.0972455665,-0.1315279752,0.033583425,0.0124223856,0.0586261116,-0.0438826345,0.0105104065,-0.1287011057,-0.0041204537,-0.1001373306,0.1913521588,0.003650178,0.0130573558,-0.1437952965,0.1097136885,0.1697427928,0.0338990241,0.1723405123,0.114602074,0.210131824,-0.0963974148,-0.015149992,-0.0121680135,-0.0920182392,-0.1399315596,0.0749880895,0.0847469494,-0.0289181694,-0.0004872399,-0.0134327961,-0.1326262802,0.2271527201,0.0360449031,-0.0670608953]],"hackathon_name":"Code for the Kingdom Nashville 2016","index":912,"project_description":"Connecting All Gods Children To Better Serve In Thy KingdomThe drive to help God's Kingdom to start leading the world on the social, technology and educational fore front.This web platform allows for end users to create a profile with-in a network that will allow for sharing,distribution and community growth with God's word.I created it with word press, js and css.Time...I was bless with this conceptual ideal today and worked as much as God enabled me to create such vision.I'm proud that I was blessed to be chosen to introduce such a beautiful advancement for the Glory of God's Kingdom.I've learned that sometimes you have to wait a little longer than others to find God's calling and direction.100 percent completeness and marketing to reach all God's children!Code for the Kingdom Nashville 2016Michael Crayton\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 02:23 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Thy Kingdom","project_tags":["wordpress","javascript","css"],"project_url":"https:\/\/devpost.com\/software\/thy-kingdom-ankd9z","keywords":"god,kingdom,proud,word,learned,create,educational,css,direction,distribution,drive,find,enabled,end,fore,front,glory,created,world,help"},{"level_0":913,"hack_vector":[[0.1397504508,-0.1381355077,0.0039271619,0.0927580148,-0.0516109057,0.1625255942,0.175824523,-0.0572384521,-0.0330048949,-0.0235232376,0.005562711,0.0328888819,0.1320631355,-0.0763447955,0.0035741583,0.084123157,0.262252599,0.0416221619,0.0502991192,0.0966749117,-0.1865588725,0.0140870875,-0.0465854481,-0.0578125939,0.1723294258,-0.011095251,-0.071387887,-0.1908652782,0.0290016364,-0.0661424026,0.0324177258,-0.0975431204,0.0804514065,-0.0468263552,-0.037916638,0.016821349,0.1506284326,-0.0968455449,0.0092841722,0.0928621441,0.0501042232,-0.1576783806,-0.1933972389,-0.0491398126,-0.0434078872,-0.0505481996,0.0416969843,0.0035825653,-0.0112881195,-0.1941436678,-0.023208024,0.0323693193,-0.1070568264,-0.0575596616,-0.1062866151,0.1526053101,-0.1592117101,0.0749402344,-0.0094365934,0.0397325456,-0.0157348122,0.0326469205,0.0505529046,0.0824024379,0.139168188,-0.0455703177,-0.1236565933,-0.1736258268,0.0282017756,-0.0030954287,0.0579995811,-0.0311139189,-0.0147587489,-0.1320479363,-0.0740138516,-0.0633009747,0.1893554479,0.0149312867,0.0997412428,-0.1502270103,0.1031181067,0.1613931209,0.016002927,0.1488474756,0.1518469304,0.1570947766,-0.1556965411,0.0555733293,0.0036136385,-0.1249558255,-0.0934898481,0.1026899591,0.0286246464,0.018826263,0.0822155923,-0.0824157149,-0.0643333495,0.1383865327,0.1124217436,-0.0477478579]],"hackathon_name":"Code for the Kingdom Nashville 2016","index":913,"project_description":"This app using location with beacon, geo-fencing, qr code to create tours for colleges, museums and churchesYour tour guideCode for the Kingdom Nashville 2016Jerry Hamby\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 02:31 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"WalkBy","project_tags":["iphone-sdk","apigee","swift","node.js"],"project_url":"https:\/\/devpost.com\/software\/walkby","keywords":"work,finish,api,apigee,baas,beacons,eddystone,endless,ios,walkby,market,possibilities,seem,swift,take,think,always"},{"level_0":914,"hack_vector":[[0.138927564,-0.1146639511,-0.0263500046,0.0427376591,-0.0235981327,0.1229002923,0.1973360479,-0.0154806022,-0.0270542186,-0.0116612064,0.014099245,-0.0559952259,0.1448755264,-0.0640764534,0.0694616958,0.0181564931,0.2105042934,-0.0174200218,0.0316854715,0.132562533,-0.2520204782,0.0275355168,-0.0346818082,-0.0154160494,0.117973052,-0.035204757,-0.030215852,-0.1704251021,-0.0141643574,-0.0913409367,0.068273358,-0.1121923998,0.0227712076,-0.0666580051,-0.0246673133,-0.0160118733,0.1128637269,-0.1423328668,-0.0510952659,0.0006536607,0.0416141488,-0.1348644644,-0.1503195465,-0.0363177098,0.0566532724,-0.0562140457,0.0093530826,-0.0728157461,-0.0049764006,-0.2104488909,-0.1288367659,0.0081124771,-0.1067626253,0.0050693746,-0.2082656622,0.1649260521,-0.1417016685,-0.0169862043,0.0241355225,-0.0932017043,-0.075306721,0.0334398262,0.0716762617,0.0536011457,0.1169193909,0.0092546884,-0.0956673473,-0.1360149533,0.0355860814,0.0160412584,0.0609447435,-0.0429138429,0.015830921,-0.1125192121,0.0126553681,-0.1213930249,0.1741625667,-0.0026080178,0.0084588854,-0.1353918612,0.1225489452,0.166756466,0.0423914716,0.1677990258,0.1130321398,0.2053999901,-0.1056459174,-0.0271211881,-0.0226180702,-0.0826483443,-0.1514673382,0.0693166628,0.0978936851,-0.0336769074,-0.0055929194,0.0094076656,-0.1550108492,0.2275703102,0.0277404916,-0.0654937699]],"hackathon_name":"Code for the Kingdom Nashville 2016","index":914,"project_description":"A movement to awaken people to the needs of immigrants, and become involved in caring for and loving them.To call the church, and society in general to be more like the Samaritan in the parable Jesus told, in a culture that is increasingly divisive and not at all Samaritan-like.It is currently a website, with incomplete content, that is designed to change opinions towards immigrants and provide a sign up to be part of the movement.We used a WordPress theme from StudioPress to be mobile responsive.Limited programming knowledge in our team to build all the functionality for applications we wanted, and narrowing down the scope of our presentation.Building a fully functional website in less than two days that communicates our message, and forming the concepts that make the foundation of a movement.Learning story boarding and project planning, consolidating ideas to form a larger vision. Group dynamics and cooperation in compromising ideas to form a vision and plan. Increased WordPress skills for several members and increased interest in programming and future attendance in local Nashville tech community events.We would like to propel this into a movement that is adopted by masses of people, and specifically all ideological groups, especially Christians to come together to face and change the human challenges associated with immigration. A strong media strategy is needed. Technically, we would like to see applications built to bring disparate groups of people together to serve the needs of immigrants. Also, relaunching the site in completed form on the domain that was purchased: www.BeTheSamaritan.orgCode for the Kingdom Nashville 2016I managed the projectJason Weakley\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 01:02 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Be The Samaritan","project_tags":["wordpress"],"project_url":"https:\/\/devpost.com\/software\/be-the-samaritan","keywords":"like,form,samaritan,movement,change,people,groups,challenges,built,ideas,immigrants,programming,would,wordpress,applications,increased,website,vision,together,immigration"},{"level_0":915,"hack_vector":[[0.141928345,-0.1169287562,-0.0298870672,0.0312244836,-0.0134952925,0.1277797967,0.19836016,-0.0294024404,-0.0055111735,-0.0230175275,0.0189488381,-0.0663208365,0.1535881758,-0.0690940693,0.0646742657,0.0097097745,0.2046861649,-0.0103477966,0.0358714573,0.1231225654,-0.2453508377,0.0252508875,-0.0488809273,-0.0135667166,0.1091530621,-0.0424777567,-0.0245383009,-0.1687043309,-0.0267268121,-0.0997771323,0.0732096061,-0.1103783697,0.0361706689,-0.0727932081,-0.020614516,-0.0221303292,0.1105905026,-0.1457468271,-0.0508486256,-0.018600652,0.0441592298,-0.1156897321,-0.1474400759,-0.0263525713,0.0670576394,-0.0590042099,0.025223637,-0.0820921957,-0.0329144336,-0.21359092,-0.1556589454,0.0167823043,-0.1078137308,0.00047192,-0.2032793313,0.1634127945,-0.125899151,-0.0382905789,0.0374467224,-0.1020270437,-0.0777793527,0.0267679244,0.0745464191,0.0392959937,0.1006830856,0.0232155975,-0.0965499803,-0.1224524155,0.0222941246,0.0254156236,0.06061415,-0.0453088619,0.0207217038,-0.1201387867,0.0194281507,-0.1120447144,0.1848053634,0.002033835,0.0002954686,-0.1435287744,0.1161410511,0.1683064252,0.0346403494,0.1580002159,0.1019123942,0.2106359452,-0.0879682302,-0.0362274796,-0.0285564717,-0.0750695989,-0.1479938328,0.0666748434,0.0925251916,-0.0365428366,-0.0154151786,0.0023913039,-0.1627106369,0.2331145853,0.0120798815,-0.0759976655]],"hackathon_name":"Code for the Kingdom Nashville 2016","index":915,"project_description":"By selecting personal and professional skills from a list, people can find a ministry that could use their help.Ministries are chose based on skillsPeople have a hard time figuring out what ministries they would fit in, and many ministries lack talented people. There should be a simple way to help both parties connect.Ministries add skills they think they need. Members register and then list the skills they have. After that, they see the matching ministries.I used Ruby on Rails with postgres as a database. I used a css framework called Foundation to style the front end, with minimal extra CSS added. No javascript is used.I modeled the Ministries, Skills, Members and relationships in Rails, and added a simple registration\/login system for Members. Most everything in Skills and Ministries is editable by anyone at the moment, but there are also standard seeds to set up some initial data.It was difficult to try to list all the skills a given ministry might need. The interface for adding skills is a bit gaudy as I am not in any way a designer.I would like to ad admin roles, so not just anyone can add new skills\/ministries. I would like to clean up the member skill chooser UI\/UX. I would like to have more logic around finding matching ministries, including partial matches ranked with some computed score.Code for the Kingdom Nashville 2016Christopher Coleman\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 12:35 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Ministry Skill Matcher","project_tags":["ruby-on-rails","ruby"],"project_url":"https:\/\/devpost.com\/software\/ministry-skill-matcher","keywords":"ministries,skills,would,like,used,members,simple,list,way,matching,ministry,need,people,css,rails,add,added,anyone,skill,called"},{"level_0":916,"hack_vector":[[0.1577076912,-0.1484788805,-0.0204833094,0.0687464029,-0.0379464924,0.1441375911,0.1713598669,-0.0344818048,-0.0270955935,-0.0141263902,0.0104441261,-0.0241213031,0.1552616656,-0.0750264674,0.0509158112,0.0433343984,0.2278280705,0.0122842584,0.0431349762,0.1054914519,-0.2307298183,0.0097797262,-0.0495789312,-0.0288006142,0.148712337,-0.0386030376,-0.0431514382,-0.1867002696,-0.0015966925,-0.0788789168,0.0603738837,-0.105432488,0.0485218726,-0.0579821952,-0.0392972603,0.0045780106,0.1240794435,-0.1358108073,-0.0291253347,0.0364573635,0.0426142029,-0.130125612,-0.1759564281,-0.0190843437,0.0055643246,-0.0571978167,0.034815181,-0.0405807644,-0.0158826243,-0.219672963,-0.0982166305,0.0112851048,-0.1120741293,-0.0284011792,-0.1632860303,0.1620406508,-0.1420339793,0.0278441571,0.0035443373,-0.023750212,-0.0524047613,0.0413096212,0.0501487851,0.0730725005,0.1215827316,-0.013966905,-0.1135533154,-0.1507034302,0.0122892186,-0.0065336484,0.0662801787,-0.0377147272,0.0100292042,-0.1304488629,-0.0239883456,-0.0910976455,0.2025972009,0.0056989235,0.0520317554,-0.1430517435,0.1245438159,0.1736662686,0.0230556335,0.1643077582,0.131870538,0.1953138262,-0.1234461367,0.0182116553,-0.0158988088,-0.1030151546,-0.1138036251,0.0984004214,0.0630808324,-0.0172590297,0.0417834669,-0.0479663052,-0.1100232154,0.2095382512,0.0705455691,-0.0668955147]],"hackathon_name":"Code for the Kingdom Nashville 2016","index":916,"project_description":"helping young people defend their faith(Kasey Smith answering)Kasey Smith\nWayne Birch\nMatthew the AmazingMy love for science and Creation science.Gives brief answers to challenging questions, and references to where to find more information.Sublime editorVisual layout.That I was able to get this all done in time.I learned a lot about CSS and HTML and that kind of programming.More home content and videos.Code for the Kingdom Nashville 2016Jonathan Field\n          started this project\n\n          \n            \u2014\n            \n\n                Mar 13, 2016 03:45 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Apologetics App","project_tags":["html","css"],"project_url":"https:\/\/devpost.com\/software\/apologetics-app","keywords":"kasey,smith,science,learned,wayne,challenges,find,editor,done,css,creation,content,challenging,built,gives,brief,birch,app,apologetics,answers"},{"level_0":917,"hack_vector":[[0.1390507221,-0.1061545312,-0.0087410072,0.0684540942,-0.0309384763,0.1597754359,0.208019495,-0.0557127967,-0.0445397794,0.0030581069,0.0077340039,-0.0380910672,0.15195252,-0.0839085132,0.0488169715,0.0159854442,0.2343307137,0.0120212724,0.0526974089,0.1000417918,-0.2060856819,0.0478156433,-0.0586148053,-0.0239422154,0.1475148797,-0.0134123405,-0.0549916774,-0.1870375574,-0.0143027976,-0.0724004656,0.0713201165,-0.1348416358,0.0526830405,-0.0708918348,-0.0486578159,0.0050172228,0.1489896029,-0.1172389761,-0.023768587,0.0304151326,0.0506441519,-0.153643325,-0.1743161231,-0.022532491,0.0227348432,-0.0435646661,0.0233968925,-0.0560088381,-0.030159371,-0.2090286613,-0.0909422264,0.0210414771,-0.1047420502,0.006895246,-0.1563256979,0.1373341978,-0.1659823656,0.0178556889,-0.0006308554,-0.0405913368,-0.0421052799,0.0266806744,0.0844803303,0.0520279706,0.1253578365,-0.0245042108,-0.1012610421,-0.1422546953,0.0322306715,0.0203703083,0.0680952221,-0.0456191599,0.0157365743,-0.1322238296,-0.0034371524,-0.1022649407,0.1958448142,0.0224271305,0.049196545,-0.1459557712,0.1411209106,0.1533064395,0.0657645985,0.1603660583,0.1294816732,0.1867078543,-0.1244924515,-0.0091910362,0.005434881,-0.1096785963,-0.1325391382,0.0628041252,0.0828702226,-0.0125306575,0.0395300686,-0.0350970812,-0.1148731709,0.1986346692,0.0526842736,-0.0686759874]],"hackathon_name":"Hack the Holidays","index":917,"project_description":"A wifi-enabled christmas tree that visualises data from a pollWe had LEDs, it's Christmas.It visualises votes on a poll, by colour, across a load of LEDs wrapped around a tree.Server is built with Node.JS, which exposes a REST API using Express and also sends real-time data to the clients via Socket.IO. The server talks to an MQTT server, which a little ESP8266 microcontroller (running some C++ witchcraft) receives, and sends the data out to the LEDs.Hack the HolidaysAll the C++ programming for the ESP8266, as well as wiring things together.Worked on the polling website and Node.js server that talks to the ESP.Matt Randell\n          posted an update\n\n          \n            \u2014\n            \n\n                Jun 26, 2016 11:21 AM EDTRepurposed the server for something else - sorry about that!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Tim Stallard\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 20, 2015 04:50 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Sherry the tree","project_tags":["node.js","express.js","html","css","javascript","c++","socket.io","handlebars.js"],"project_url":"https:\/\/devpost.com\/software\/sherry-the-tree","keywords":"leds,tree,server,esp,data,built,mqtt,next,sends,library,little,learned,js,express,io,inspiration,infinity,good,load,getting"},{"level_0":918,"hack_vector":[[0.156248346,-0.1032337621,-0.0118416408,0.0501195826,-0.0138335545,0.1466806382,0.1974122822,-0.040398635,-0.0352581665,0.0054874895,0.0208175499,-0.0666086823,0.1482259035,-0.0773116797,0.0639125705,-0.0005121033,0.2010114491,-0.0099353259,0.0537336841,0.1138209999,-0.2325409502,0.0412751175,-0.0504552573,-0.0125552434,0.1316460818,-0.0359313674,-0.0377318673,-0.190514639,-0.0268111676,-0.0783645511,0.0723205432,-0.118936345,0.0398118794,-0.0897133574,-0.0264757294,-0.0075034578,0.120014824,-0.138711974,-0.0561756417,0.0015265201,0.0467033125,-0.1449369788,-0.1536608934,-0.0178708062,0.0505880974,-0.0310733989,0.0135501288,-0.0820077956,-0.0213482697,-0.2086847574,-0.1397176236,0.0295708533,-0.1175941005,0.0193931907,-0.1942519695,0.1550448835,-0.1393856853,0.0002182348,0.0250122771,-0.0892724469,-0.0600663498,0.0207882933,0.0742981955,0.0556491762,0.1191944629,0.0091947448,-0.1017051265,-0.1243871376,0.0182995107,0.0158251971,0.076559186,-0.0465035588,0.02241778,-0.1331874877,0.0337341465,-0.1132163554,0.1856315732,0.000453171,0.0161158033,-0.1324892789,0.1322385669,0.1498512477,0.0687026381,0.1505752653,0.1112523079,0.2027744353,-0.0944310278,-0.0394789018,-0.0064300415,-0.0774002373,-0.1428679675,0.0563233756,0.0929961503,-0.0416382179,0.0060666851,-0.0079328893,-0.141166091,0.2216869891,0.0206711646,-0.0670001954]],"hackathon_name":"Hack the Holidays","index":918,"project_description":"Calculate your festivity through Twitter analysis!Lost in the jungle of social media, the few remaining cheerful voices are drowned in the horrors of modern society.   We wanted a way to be able to identify who was left in the defence against the war against Christmas.  This is why we created Festive O Meter.Based on any Twitter handle, it analyses their tweets, and brings back a percentage of their Christmas spirit.  A map displaying festive hotspots is also showed on the webpage.Using the Twitter API and our own sentiment analysis engine we found a way to judge someone on how festive they are.  Then, we built an angular based frontend which interfaces with our REST API endpoints and Google Maps API.We emulated the Hack The Holidays design scheme and incorporated this graphical design amongst our final products.  With this rengineering of scalable and globalised Twitter data we put context into an otherwise abstract dataset using Web 2.0, without boiling the ocean.By being both time, and space efficient, we allowed for maximum productivity with frequent localised on site scrum meetings with the product owner collective.Had to submit to devpost 3 hours before deadline.\nLead designer learnt design.\nTaught algorithm developer JSLead designer learnt design.\nTaught algorithm developer JSDesign, and Javascript.\nProducing performant scalable software.Hack the HolidaysI did all of the Twitter API interfacing, including storing relevant data to MongoDB. I also structured the backend node endpoints and helped everyone implement their algorithms in node.I made the interface, lots of experimentation with angularI was incharge of the sentiment analysis engine, as well as coordinating the agile process across the entire team. This included numerous scrum meetings, as well as ensuring that goals were clearly defined, in order to really increase our overall productivity over the course of the hack. I also learned node.js (I got by with a little help from my friends), and was able to apply my new skills to implement the algorithms that I developed for the project.Peran Truscott\n          posted an update\n\n          \n            \u2014\n            \n\n                Dec 20, 2015 05:44 AM ESTNow our software solution harnesses the scope, the scalability, and the strength of the cloud with use AWSLog in\n      or\n      sign up for Devpost\n      to join the conversation.Peran Truscott\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 20, 2015 03:59 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Festive O Meter","project_tags":["javascript","mongodb","twitter","google-maps","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/festive-o-meter","keywords":"design,festive,api,twitter,js,christmas,built,based,learnt,lead,taught,using,algorithm,designer,way,developer,scalable,emulated,efficient,endpoints"},{"level_0":919,"hack_vector":[[0.1546097696,-0.1123280153,-0.0224641543,0.0653728992,-0.0037278428,0.1568567604,0.2036558241,-0.0579332672,-0.0324238315,-0.0159813855,0.0092430413,-0.0520991087,0.1534736753,-0.0680415407,0.0454356708,-0.0102656949,0.2094038576,-0.0057411124,0.0541962385,0.1234214157,-0.2263098806,0.0424770452,-0.0405929014,0.0023560359,0.1549553871,-0.0224153381,-0.0398620069,-0.1836425066,-0.0440756381,-0.0746927708,0.0860756338,-0.1342160106,0.0457931533,-0.0728587806,-0.03660037,-0.0228289422,0.1214873269,-0.125715822,-0.0381962322,-0.0054122494,0.0734734982,-0.1446502805,-0.1543120146,-0.0324093401,0.0418576002,-0.0370535329,0.0073560784,-0.0710075274,-0.0393153019,-0.2137772888,-0.1227072701,0.0275643356,-0.1099526063,0.0224638935,-0.193443954,0.1608796418,-0.1542622596,-0.0163695756,0.015833376,-0.0835098997,-0.0654073507,0.0218937434,0.0689640343,0.0225873757,0.111877732,0.0217209216,-0.1095631197,-0.1249128729,0.0231670104,0.0329238959,0.0662746951,-0.0396807864,0.0267648101,-0.1219774559,0.0181759186,-0.0847958773,0.1902882904,-0.0034502037,0.0208112802,-0.135097459,0.1098039374,0.1478685886,0.0536049046,0.1556952,0.1157617122,0.2073027939,-0.0945088193,-0.0352594778,-0.0031438805,-0.0693369433,-0.1340852976,0.0677450597,0.0877756998,-0.0239450056,-0.006140654,-0.0129105831,-0.1429520994,0.2238718867,0.0255770441,-0.0585329048]],"hackathon_name":"Hack the Holidays","index":919,"project_description":"webgl 'game''christmas tree?'Penguins-> Wanted to make something, anything with webgl \n-> Originally based around old games such as Doom-> Renders a map in the style of an old ray-casted game but with hardware acceleration in the browser\n-> Allows for movement around the game world using two mobile devices-> With the webgl graphics rendering pipeline\n-> twgl.js to wrap tedious functionality (compiling shader programs, creating a context, managing some uniforms)\n-> javascript to script the game-> webgl is frustrating (especially for us 'gl noobs)\n->-> getting anything rendered in the first place \n->-> Don't use webgl for 24hr hackathons?\n-> Don't be too ambitious!-> Perhaps not the penguins but we may build further on the level rendering techniqueHack the HolidaysI done the webgl side of things & helped out with general problemosI worked on the html5 accelerometer and linking it to the game via socket.ioIt was my first time using a javascript backend framework, and the first time i'd seen\/ used WebGLOliver Barnwell\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 20, 2015 03:41 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"deranged penguins?","project_tags":["javascript","html"],"project_url":"https:\/\/devpost.com\/software\/hacktheholidaything","keywords":"webgl,game,rendering,anything,around,penguins,old,wrap,getting,frustrating,functionality,games,graphics,gl,especially,hackathons,hardware,hr,inspiration,javascript"},{"level_0":920,"hack_vector":[[0.1604186743,-0.1415463835,0.0130690765,0.0901436731,-0.0195203722,0.1732900739,0.1869019866,-0.0628883913,-0.0535759218,-0.0185367186,0.0019917386,-0.0131188529,0.1487008035,-0.0805255473,0.0035295039,0.0408299379,0.2513350546,0.0151152741,0.0649586543,0.0985973701,-0.2081933469,0.0364546329,-0.0413123928,-0.0319065601,0.191087991,-0.0320444703,-0.0657430366,-0.2091143429,-0.0186501592,-0.0745465904,0.0737313703,-0.113891229,0.077481389,-0.0664664954,-0.0454092659,-0.0069571747,0.1419502646,-0.1054908559,-0.0024558455,0.0540109053,0.0749633983,-0.1612884253,-0.1809011102,-0.0329845995,-0.0185833592,-0.0332116373,0.0196469203,-0.0336642824,-0.0212150253,-0.2027750015,-0.0503002107,0.0398251712,-0.1095794588,-0.0144455405,-0.1435796767,0.1527405679,-0.179122448,0.0406006165,-0.0024834189,-0.0046895738,-0.0292420872,0.0281342492,0.0517774075,0.0481469072,0.1394281983,-0.0148156099,-0.1298812777,-0.1615855098,0.0130869187,0.0205860455,0.0729949996,-0.041782219,0.0098378174,-0.1360641867,-0.032353878,-0.0639113039,0.1957101673,-0.0003656853,0.0837460235,-0.1295856088,0.1142486259,0.1305504143,0.0319377035,0.1424542814,0.1428613961,0.1763159335,-0.124144882,0.0225439277,0.002480393,-0.0952390805,-0.0905113816,0.0891785771,0.0299234763,-0.0094580157,0.0339674503,-0.061395932,-0.0900396481,0.1640461832,0.0869615078,-0.0472655669]],"hackathon_name":"Hack the Holidays","index":920,"project_description":"Feel the holidays, feel the force. Motion controlled VR spaceship game.Hack the HolidaysGot the core physics and controlls working for the gameWorked on testing VR and controls. Collecting 3D assets. Managing the github repository.Worked on leap motion intergration, added several enemy types to the gameLuke Harris\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 20, 2015 04:10 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Forcemas","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/forcemas","keywords":"work,oculus,unity,leap,github,motion,game,inspiration,gsme,forcemas,fun,first,develp,continue,challenges,built,learned,next,well,open"},{"level_0":921,"hack_vector":[[0.1479224265,-0.1577846408,0.016452603,0.0961340219,-0.0495855436,0.1582914293,0.1624686718,-0.0442006178,-0.0358294733,-0.0256662089,-0.0142108677,0.046409402,0.1255851537,-0.0780947581,-0.0132188117,0.096798189,0.2618697882,0.0430847406,0.0525369346,0.073947154,-0.1877982169,-0.0033728953,-0.0471927598,-0.0667681992,0.17781955,-0.0186467059,-0.0871257931,-0.1771561503,0.0430312157,-0.0789795071,0.0203199442,-0.0885558575,0.0800948068,-0.0457551368,-0.0388383009,0.0197474416,0.142369777,-0.1043078825,0.0155313695,0.1017958522,0.0557287782,-0.1456576288,-0.1849456877,-0.0278709996,-0.0584750995,-0.0454100668,0.0443055145,-0.0003531463,-0.0086243423,-0.1801058203,-0.0071831043,0.0465903431,-0.1008237153,-0.071975179,-0.0875495896,0.1461062282,-0.1555176824,0.0799302533,-0.0147191463,0.0675751567,-0.0052445605,0.0446925983,0.0403958857,0.0810116753,0.1502337456,-0.0537672006,-0.1376087517,-0.1804589778,0.012260844,-0.0026518747,0.0708452463,-0.0261172745,-0.0231620166,-0.1518484354,-0.0881455019,-0.0496656895,0.1923752278,0.0303829778,0.1057952493,-0.1418670416,0.1092506275,0.1478611082,0.0015176827,0.1258105934,0.1609396189,0.1551525891,-0.1425569654,0.0858128965,0.0085279597,-0.1202529818,-0.0680846572,0.1133272201,0.0102336137,0.0297094323,0.0897147804,-0.1014930978,-0.0528802425,0.1323185265,0.1199805513,-0.0374403298]],"hackathon_name":"Hack the Holidays","index":921,"project_description":"a new kind of social networkThe story.Hack the HolidaysWing-Hou Chan\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 20, 2015 06:04 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"wisp","project_tags":["javascript","node.js","sails.js"],"project_url":"https:\/\/devpost.com\/software\/wisp-r5sedb","keywords":"story"},{"level_0":922,"hack_vector":[[0.154820621,-0.1574301422,-0.0046169567,0.0680229664,-0.0260178111,0.1529986858,0.1954934001,-0.0561482161,-0.0382324271,-0.0114008505,0.0101598771,-0.0109069441,0.1397034079,-0.0713331699,0.0183201078,0.0528421551,0.2443343848,-0.0025160792,0.0455391258,0.1042405739,-0.2356384546,0.0242892001,-0.035866119,-0.03678317,0.1559184194,-0.0274029262,-0.0503155664,-0.1921324879,-0.0020676334,-0.1003448665,0.0629018322,-0.1172470525,0.0620969012,-0.0598685406,-0.0304322671,-0.0172250103,0.1196686178,-0.133707121,-0.0130860452,0.0353114195,0.0616031177,-0.1452308744,-0.1733193249,-0.0423352458,0.0000635222,-0.0491430014,0.0162560344,-0.0355759673,-0.0190939102,-0.2086596787,-0.071022369,0.0278182253,-0.1012310088,-0.0273994468,-0.1659850031,0.1479687691,-0.1671631783,0.0093135312,0.0059335115,-0.023906311,-0.0458869934,0.0316967107,0.0562953949,0.0545489006,0.1310086846,-0.0099806814,-0.1259245425,-0.1537621766,0.0255796649,0.0169785619,0.0698969513,-0.048711814,0.0108156549,-0.1335299164,-0.0317810774,-0.0928548872,0.181951195,0.0154658239,0.0652599931,-0.1382267922,0.1262626499,0.1557603776,0.0212744195,0.1717570126,0.1387626529,0.1937691867,-0.1270405352,0.0185475089,-0.0147335147,-0.0922248587,-0.1010316163,0.092419371,0.0527724475,-0.0096686622,0.0155761149,-0.0398472138,-0.1156945452,0.1763315052,0.0678450167,-0.0543352701]],"hackathon_name":"Hack the Holidays","index":922,"project_description":"Monster Gamescreen shootCreating a game in a short amount of time ideas from somes games as super mario or speedrunnersit's a 2 players platform games where the goal is to escape the dragon and to go to the flag before the other playerbuild in XNA (C#)physics and gravity managmentphysics and gravity managment and side scrollingphysics gravity and side scrollingdifficulties (sidescrolling speed change and other mode as split screen or infinite mode)Hack the HolidaysGuillaume Letuppe\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 20, 2015 04:29 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Plateform Game","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/plateform-game","keywords":"gravity,physics,managment,mode,side,scrolling,games,game,xna,flag,ideas,goal,go,escape,inspiration,dragon,difficulties,creating,change,challenges"},{"level_0":923,"hack_vector":[[0.1334905475,-0.0646371618,-0.0262991823,0.0170077682,-0.025117036,0.1501672417,0.1973968148,-0.0311794095,-0.0068491441,-0.0332346708,0.0166740883,-0.0784678981,0.1172213405,-0.0594201237,0.0511492565,0.015336588,0.2462342381,0.015316966,0.0391804017,0.1291007549,-0.2260804921,0.021447394,-0.0369598083,-0.0276846383,0.0902968347,-0.0100234067,-0.0259271972,-0.1769448072,-0.0255969707,-0.12397632,0.0541949645,-0.1235074475,0.0382339098,-0.0921810046,0.0097543988,-0.021347506,0.1173953041,-0.1323065907,-0.0583114997,0.004161099,0.0401421674,-0.1295718998,-0.1509446353,-0.0528186299,0.0659958348,-0.0865280405,0.0087530389,-0.0526990294,-0.0342824832,-0.2184920758,-0.1395966858,0.0118607385,-0.0917234868,-0.0413780622,-0.199101299,0.1580637544,-0.1285975873,-0.0360896178,0.0512779616,-0.1036188081,-0.0593767241,0.008324367,0.0771680251,0.0389591977,0.109989062,0.0158442464,-0.1026649475,-0.137249127,0.0469567403,0.0297605693,0.0735702068,-0.0555369556,0.015380621,-0.1144823059,0.0203440338,-0.1410137117,0.1626381278,0.0135461641,0.0190337822,-0.1381933838,0.1018427983,0.1556651443,0.0504627936,0.1832463145,0.0990192965,0.1794200242,-0.1137233898,-0.0430239663,-0.0314585268,-0.083643876,-0.1403992772,0.0429709218,0.091832839,-0.0377962254,-0.0186165571,0.021905005,-0.1580419242,0.2340082973,0.0041497285,-0.0947109386]],"hackathon_name":"Hack the Holidays","index":923,"project_description":"AirDrop that does work. Transfer photos wirelessly from your mobile to your Computer as easy as possible.PeterDropAirDrop that does work. Transfer photos wirelessly from your mobile to your Computer as easy as possible.\nThe main problem was that when we try to transfer a photo from our mobile phone to our mac, it's so frustrating. That's because AirDrop 1 out of 5 times works great and the other 4 does not detect the other device (the one you want to send the files).\nSo then we built our own, one that within an app you choose your photos from your mobile phone and then the device itself detects the computers you have at the same network and then you choose where you want to send it and it saves directly into the folder you have set.Hack the HolidaysDaniel Gil\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 20, 2015 04:21 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"PeterDrop","project_tags":["java","javascript","css","html","apache","jquery"],"project_url":"https:\/\/devpost.com\/software\/peterdrop","keywords":"mobile,airdrop,want,choose,transfer,one,send,phone,device,photos,directly,folder,files,easy,detects,great,detect,computers,computer,built"},{"level_0":924,"hack_vector":[[0.1499945223,-0.1261211038,-0.0337972306,0.0682545528,-0.0322976373,0.1485339999,0.1943936944,-0.037903659,-0.0064086788,-0.0376394205,0.0121960947,-0.0291298162,0.1437967271,-0.0564954281,0.046730876,0.0080481246,0.2170753181,0.0169989672,0.0288414042,0.1335232854,-0.2432173491,0.0063673612,-0.0323579572,-0.0163424853,0.1390586942,-0.016022725,-0.0302417129,-0.1791760325,-0.0221294891,-0.0978621915,0.0583038963,-0.1208410412,0.0312532112,-0.0614766628,-0.011295516,-0.0246425867,0.1200815141,-0.1444164813,-0.0548742339,0.0235406514,0.0638903528,-0.1290428787,-0.1434971988,-0.0451407954,0.0344041586,-0.0648978651,0.0212201905,-0.0509849973,-0.0459401309,-0.21962367,-0.1196119413,0.0082720025,-0.0996896178,-0.0283030737,-0.1862385124,0.1713296324,-0.1262969971,-0.0184887759,0.0225686077,-0.0718312562,-0.0638733134,0.018300999,0.0612154156,0.033236593,0.1226760074,0.0204229653,-0.1156881154,-0.1341947913,0.0279945228,0.0176724382,0.0526779145,-0.0404185466,0.018313868,-0.1234859675,-0.007170123,-0.1000825092,0.1859501153,0.0034441587,0.0156407971,-0.1472942829,0.1081589237,0.1737663746,0.0249648094,0.170590356,0.113288857,0.2068683803,-0.108812131,-0.0102734715,-0.0267774481,-0.0740839019,-0.1286669821,0.0840311423,0.0797314048,-0.0212712903,0.0026758225,-0.0155918486,-0.144351989,0.2353386283,0.0261638239,-0.056893155]],"hackathon_name":"Hack the Holidays","index":924,"project_description":"A game where Santa attempts to deliver presents.Soon Christmas is here, and what better than a game to play with friends and family.This Christmas you take Santa's job and decide to deliver presents yourself. You run from roof to roof dropping presents through people's chimneys. Look out for obstacles.We built it using PyGame in Python using Visual Studio Code and Photoshop.Detecting collision detection took longer than what we anticipated.We've managed to make a fully functional game in under 24 hours.We had to play around with sprites and implement collision detection.Next for Santa Claus Job we will have bonus points, lives and shields which will protect you against some obstacles.Hack the HolidaysDaniel Pacheco\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 20, 2015 04:23 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Santa Claus Job","project_tags":["python","pygame"],"project_url":"https:\/\/devpost.com\/software\/santa-claus-job","keywords":"presents,roof,job,using,obstacles,detection,play,collision,game,christmas,santa,claus,dropping,around,functional,better,fully,friends,family,built"},{"level_0":925,"hack_vector":[[0.1406018734,-0.0896031559,-0.0228893366,0.0344388969,-0.0094012367,0.1225406826,0.1916572601,-0.0215632133,-0.0215363856,-0.0130959842,0.0147433551,-0.0837856978,0.1484725773,-0.0690174922,0.067279093,-0.0100109251,0.1804749072,-0.0225945543,0.0533778854,0.1320613623,-0.2442863435,0.0280512776,-0.0448391028,0.0053794035,0.1098355949,-0.0401419029,-0.0273456238,-0.1580315977,-0.0352342054,-0.0995760933,0.0673116297,-0.1057351455,0.0280538332,-0.0723834112,-0.0129976925,-0.02047492,0.1158514321,-0.1458197832,-0.059563458,-0.017994687,0.0566352904,-0.1198094115,-0.1397270262,-0.0276282579,0.0755306408,-0.0555460081,0.0148105267,-0.0971160978,-0.0169403311,-0.2146806121,-0.1642857641,0.0270581804,-0.1143092662,0.0318976827,-0.2307484597,0.1604781002,-0.1355199516,-0.0403438658,0.0453616455,-0.1227981821,-0.0805675611,0.0164259281,0.0690155849,0.037047185,0.1057232618,0.0348884612,-0.0829171315,-0.1178454757,0.0178465266,0.0216312576,0.0637991428,-0.0515214279,0.0114910631,-0.1114079431,0.0548802838,-0.1106494665,0.1751059592,-0.001660213,-0.0106715234,-0.1358381659,0.1042816788,0.1513032019,0.0534948222,0.149809435,0.1025263965,0.2125552893,-0.0791743174,-0.058384303,-0.0253959559,-0.0657672957,-0.1488188952,0.0529674143,0.1041098535,-0.0460377634,-0.032009434,0.0197970755,-0.1727448404,0.239179045,0.0022918801,-0.0677443147]],"hackathon_name":"Hack the Holidays","index":925,"project_description":"Never miss a deadline again with Todio task manager, designed to store all your tasks - from schoolwork to shopping.After a difficult week at school, we realised that it is necessary to stay organised - and what better way to do that other than an app. This way, we can access our tasks around the globe, whether we're on holiday or we've simply forgotten our bags. Later, we realised this app can be used by more than just school children, so we removed the school theme by not using words such as \"subject\" for the tags.Todio is a todo list which stores your tasks and adds tags to them, and then displays the tags. It allows for adding descriptions to the tasks too.We used css for the style of the webpage, then we used javascript for the client-side scripting along with the jquery plugin for increased functionality. We used AJAX to talk to the server whilst remaining on the same webpage allowing for data to be loaded on demand and the page to be more dynamic. Html was used to create the website itself.Our first challenge was the login, as we attempted to use Google's login API. Though this was guaranteed as secure, it did not work and we later realised we would have to code the login in php. To prevent a compromise on security, this took a rather long amount of time, and we faced many bugs too, so before we knew it, it was past midnight and all we really had was a login. Time management is a target for the future.\nAnother challenge was that one team member did not have a pc to work from, so our productivity was minimised (by 33%), which will change next time for sure.We managed to create a prototype of our core idea and created a basic UI. Though none of had special expertise in any particular language, or any experience with hackathons, we worked under the pressure and produced a product, though substandard.Alongside actual programming knowledge, such as MySQL, we have learnt many skills that will help us to improve our programming experience and maybe even to perform better at a future hackathon. This includes planning the amount of time we dedicate to each task, by producing a Gantt chart for example. We will also plan the UI in more detail, as the choosing of colours took an unnecessary amount of time, as did choosing the layout.We have many ideas for improving our current product as it did not reach the level of completion we initially hoped for. The most important next step is including a calendar function, as this was the basis for a lot of the app. Then, we plan to improve the UI, making it more accessible not only to the average user but to those who are less able, for example a setting for the visually impaired or colour changes for the colour blind. A further stretch would be allowing for a link to other file services, such a dropbox, allowing people to work on their tasks wherever in the world they are. \nLast but definitely not least, a working Google login will be an aim for the future, as well as working logins from other popular OpenID Providers.Hack the HolidaysThough my coding skills were not apt, and the fact that I did not have a PC did not help the product itself, my role was managing the team as a whole. I ensured that the coders were motivated and positively coding, even when the app felt like it was failing. \nI also visualised the initially idea, and created draft designs, which were the basis for the app. \nLastly, I became a spokesperson for the team, and also dealt with all of the form-filling and part of the hackathon not directly linked to coding.\nOf course, I did code parts of the app, primarily the UI, and if I wasn't directly coding it, I did provide direction to whoever was.I was the main person when linking the databases to the front end. In addition I helped to create the tables used within the website and worked on the technical aspects of the front end site.CaughtEx\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 20, 2015 04:12 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Todio","project_tags":["html5","css3","php5","javascript","jquery","ajax"],"project_url":"https:\/\/devpost.com\/software\/todio","keywords":"time,login,used,tasks,realised,tags,though,ui,amount,school,allowing,app,many,work,next,future,later,improve,better,challenge"},{"level_0":926,"hack_vector":[[0.1488810182,-0.1324042678,0.001776555,0.0613908991,-0.0414189771,0.1613674462,0.1781550795,-0.0466913842,-0.0292877331,-0.0144005436,-0.0115943719,-0.0094839819,0.1290673316,-0.0730302334,0.009264987,0.0784478113,0.2670274675,0.0409867838,0.0450387187,0.0894808471,-0.2046895474,0.020308882,-0.0445642062,-0.0618969873,0.1562422365,-0.0181852207,-0.0664881021,-0.1935465336,0.0192310922,-0.0861121044,0.0321250372,-0.1198418438,0.0733838007,-0.0723780245,-0.0297306627,0.0077925911,0.138210699,-0.1197176054,-0.0070629166,0.0793452039,0.0415517502,-0.166635707,-0.1932946891,-0.0397097096,-0.0234550107,-0.0590641126,0.0326677449,-0.0224710815,-0.0262219757,-0.1928117126,-0.0575581938,0.0306012966,-0.1012598947,-0.0667784065,-0.1202433631,0.1587701291,-0.1510567963,0.0531927906,0.0046171509,0.0167688504,-0.0281224232,0.0282044038,0.0469190292,0.0809698403,0.1386373192,-0.0365313664,-0.1349122077,-0.1750762016,0.0280467011,0.0078279246,0.0915696546,-0.0530743301,-0.0084063308,-0.1458538324,-0.0475447215,-0.0871718526,0.1900414377,0.0267711338,0.094038114,-0.1311907023,0.1229659542,0.1550530344,0.0349516273,0.1458878964,0.1379749179,0.154831484,-0.1468640417,0.0465312041,0.013772768,-0.1140708402,-0.0896389708,0.0841271132,0.0282821115,-0.0056892396,0.0629672706,-0.0688414201,-0.0850518122,0.1626685858,0.0826599598,-0.0622130297]],"hackathon_name":"Hack the Holidays","index":926,"project_description":"Shows GIFs Based on the twitter search of your entered termsReading is hard, my hack saves precious seconds by condensing all the \"information\"from twitter into gifsHack the Holidaysjack galvin\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 20, 2015 04:02 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"CmonDevpostPleaseDontmakeMeThinkOfAName","project_tags":["python","flask","html","css","bootstrap"],"project_url":"https:\/\/devpost.com\/software\/cmondevpostpleasedontmakemethinkofaname","keywords":"twitter,seconds,saves,reading,precious,inspiration,information,hard,hack,gifs,condensing"},{"level_0":927,"hack_vector":[[0.1619697809,-0.141958952,-0.0093151126,0.0828027949,-0.0361959673,0.1672630161,0.1951993853,-0.0559736975,-0.0209283028,-0.0267842449,0.0066790516,-0.0184491873,0.1411372125,-0.0769261867,0.029366076,0.0306947604,0.2459821999,0.0247606952,0.0626707375,0.0924926177,-0.224937737,0.0316498391,-0.0479978621,-0.0408119746,0.1316076666,-0.0099822879,-0.0680104494,-0.1809269786,0.0037716141,-0.0934946388,0.0466242358,-0.1228467152,0.0550563037,-0.0737844929,-0.0190315824,-0.017341923,0.1385282278,-0.137617752,-0.0431721695,0.0323655494,0.065557383,-0.1519453973,-0.171793595,-0.0291629303,-0.0014536077,-0.0382674932,0.0262400005,-0.0481826365,-0.0366906412,-0.1889045537,-0.0974088758,0.0544599406,-0.1032744125,-0.0228525177,-0.1585821509,0.1494322121,-0.1339273453,0.0138425482,0.0237610769,-0.0257910062,-0.0521698967,0.0323304348,0.07681676,0.0596960038,0.1246363595,0.0051603909,-0.1246213391,-0.1514697224,0.0054022218,0.0344119444,0.0802173242,-0.038051419,0.0170256943,-0.1562329829,-0.0229570698,-0.093605727,0.1925169379,0.0316079035,0.0483756438,-0.1421094239,0.1246379688,0.1553477198,0.0355851576,0.1444659233,0.1376101226,0.1910746396,-0.1186490729,-0.0010223754,-0.0052216002,-0.0887385607,-0.1004065946,0.0902777612,0.0589413159,-0.0175821986,0.0512653291,-0.0430017896,-0.1100116372,0.2085405588,0.0411168709,-0.0559308529]],"hackathon_name":"Hack the Holidays","index":927,"project_description":"A triangulation based location service not reliant on GPS exploiting GSM network dataNo of us knew Java...some of us still don't BUT we have a working hack!We can generate a lat\/lon of a Android device's location based on discrete GSM data harvested.Hack the HolidaysJava and PHPHugh Wells\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 20, 2015 04:00 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"GSM Hack","project_tags":["php","java","android"],"project_url":"https:\/\/devpost.com\/software\/gsm-hack","keywords":"us,working,hack,based,data,device,discrete,generate,gsm,harvested,java,knew,lat,location,lon,still,android"},{"level_0":928,"hack_vector":[[0.1510724425,-0.0818367079,-0.0264524166,0.0639862567,-0.0166285206,0.1409266442,0.1948279142,-0.0407977775,-0.0321505852,-0.0092083234,0.0159360524,-0.0699983314,0.1632878184,-0.0748430789,0.0619304478,-0.0351879001,0.1735262871,-0.0213852748,0.0537463464,0.133388266,-0.2249509692,0.0387035012,-0.0412501022,0.0098626316,0.1430187821,-0.0211725365,-0.0313073881,-0.1651739329,-0.039300818,-0.0759713948,0.0679088086,-0.1187582314,0.0319626071,-0.0658379421,-0.0109069897,-0.0100697735,0.132671684,-0.1319855005,-0.0656120852,-0.0010148456,0.0788711533,-0.1323660761,-0.1422708482,-0.0142992353,0.0507672578,-0.0314931087,0.0106653217,-0.0973280072,-0.0235516913,-0.2075123042,-0.1617558151,0.032431338,-0.1161277667,0.0409342051,-0.2176842839,0.1545583159,-0.137368843,-0.0183443259,0.0282980427,-0.1106830388,-0.0641946793,0.0173497666,0.0774321854,0.0360130072,0.1242525131,0.031230934,-0.0861946493,-0.1180601418,0.0125463856,0.022352539,0.0629335493,-0.0381015874,0.0176562928,-0.1164010912,0.0584252812,-0.0940168947,0.1864223778,-0.0040749046,-0.0169667918,-0.1340208352,0.110638231,0.1479652822,0.0688890889,0.1451658458,0.1025388017,0.2062560022,-0.08115343,-0.0610254705,-0.0086022057,-0.065637283,-0.142635271,0.0501978733,0.1067066342,-0.0335289203,0.0009052557,0.0021098796,-0.1607857347,0.2516885996,0.0007796918,-0.0567105524]],"hackathon_name":"Hack the Holidays","index":928,"project_description":"Tinder for Hackathon Ideas!When we arrived we had no idea what we are going to build and half an hour into Hack the Holidays we still had no idea. So we pulled random and weird ideas out of our heads until we came up with: Hackindr - Tinder for Hackathon Ideas! However, this idea was quickly sidelined by the arrival of the MLH hardware lab and the realisation that I had bought my Passport. The next few hours were spent renting out a selection of hardware, from Oculus Rifts to Leap Motions, and we quickly came up with the idea of a virtual keyboard that allowed you to type in midair using the Leap Motion. But we had little success with tracking individual fingers with enough accuracy so we attempted to use the Thalmic Myo to create a morse code keyboard but we also ran into problems. So, driven by our aim to actually finish a hack within 24 hours we returned to Hackindr.Hackindr is a mobile and web app that allows users to like or dislike random hackathon ideas, see the top ten ideas and submit their own.Firstly, we built a REST API using Python, Flask and Postgres which was deployed on Heroku. We then connected this to our native Android app written into Java. We then built a web interface, originally using Angular, but ended up being built in Node.js and Express.js and hosted on Heroku. Finally, we also began to work on an iOS version using Swift.After encountering problems with Thalmic Myo and Leap Motion we were hoping for Hackindr to relatively problem free, however, this was not the case. Our first major problem was when the backend suddenly stopped accepting valid usernames and passwords which was solved by turning it off and on again. Our next problem was trying to figure out how to make HTTP requests in Swift which was eventually solved. Additionally, we encountered a nearly infinite series of NullPointerExceptions in Android app which were mostly caused by ourselves accidently deleting lines in our sleep deprived haze.Overall, we are really impressed by the fact we actually finished our hack with the web and android versions working before 9am.Hack the HolidaysI built the REST API using Python and Flask which I deployed on Heroku. I also worked alongside Emily on the Android implementing Sign Up pages and improving the UI. I also developed the iOS version using Swift which was my first time using Swift to interact with a REST API.Charles Thomas\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 20, 2015 03:53 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hackindr","project_tags":["python","flask","postgresql","java","android","android-studio","node.js","express.js","git","github","heroku"],"project_url":"https:\/\/devpost.com\/software\/hackindr","keywords":"ideas,using,idea,built,hackindr,problem,app,hack,android,leap,web,hardware,however,solved,random,ran,quickly,problems,myo,next"},{"level_0":929,"hack_vector":[[0.1509924531,-0.1001786962,-0.0337651335,0.0430411734,-0.0175755359,0.1312418878,0.2011670917,-0.0188093763,-0.0232540518,-0.0271918084,0.0090420377,-0.0710251927,0.1425454617,-0.0727756545,0.0613348633,0.0057334099,0.204234466,-0.0079583703,0.0472654402,0.1326330602,-0.2417570949,0.0239561461,-0.0388150625,-0.020668719,0.1062506586,-0.0362104587,-0.0372357965,-0.1676082313,-0.0348066427,-0.0869387388,0.0579006709,-0.1034278721,0.0367329568,-0.077046901,-0.0202922188,-0.0120642288,0.1181103364,-0.1412394345,-0.0603027977,0.013137144,0.0539331622,-0.1292746961,-0.1549873054,-0.0280653723,0.0684125349,-0.0665809363,0.0187698919,-0.085434936,-0.0242022611,-0.2239105254,-0.1513098776,0.0146915643,-0.1063023433,-0.0016549495,-0.2015913278,0.1614386588,-0.1308471411,-0.02184969,0.0410322398,-0.099407129,-0.0760060474,0.0244923998,0.0691023692,0.0451346561,0.1173708141,0.0164524615,-0.100228861,-0.1224128082,0.0237284228,0.0150904199,0.0646630153,-0.051159475,-0.0026867043,-0.1234881654,0.0235709958,-0.1156793609,0.1852604896,-0.0029357849,0.0062841736,-0.1375541687,0.1140244827,0.1577106118,0.0477793887,0.156516239,0.0994776413,0.2058821172,-0.0901835933,-0.0331291668,-0.0141222235,-0.0868621096,-0.1488886625,0.0592751354,0.0848731697,-0.0389731675,-0.006896344,-0.0026560882,-0.1595351845,0.2329509109,0.0153866252,-0.0643126965]],"hackathon_name":"Hack the Holidays","index":929,"project_description":"The Intelligence Plant PotiPotMy Inspiration came from gardening , where I realise , plants are not connected to the Internet of things.This Prototype, is able to provide user with soil moisture reading, Temperate \/ Humidity sensor reading .At the current time am working on so the device is connected to the Internet via Azure mobile services, hence allowing user to see how well their plant is doing, in addition the plant pot can send push notification to your device alerting user if it requires attention.This Prototype was build using Arduino Uno , DHT22 Humidity sensor , OLED Display and Soil moisture sensor.The challenges I ran into , being dyslexic meant I had to re-read three or four times a same webpage with additional information. so it was slow process , still not able to fix the Arduino Ethernet shield IP address issue. but I do have another 3 hours to go so anything can happen.The accomplishment I am proud of is that I learnt how to use the sensor with Arduino , and in doing so I also learnt how to use Microsoft Azure mobile services.The future is full of unlimited possibilities for this type of device , plan is to add a basic A.I ability, if the IP issue is not fix within the next three hours , then to find a fix for this and make it easier for other user to be able to fix this bug with Arduino.Hack the HolidaysWaheed Rafiq\n          started this project\n\n          \n            \u2014\n            \n\n                Dec 20, 2015 03:43 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"iPot","project_tags":["c#","asp.net"],"project_url":"https:\/\/devpost.com\/software\/ipot-the-intelligence-plant-pot","keywords":"arduino,user,fix,sensor,able,device,plant,learnt,pot,reading,connected,proud,prototype,moisture,next,mobile,issue,ip,internet,humidity"},{"level_0":930,"hack_vector":[[0.1488236189,-0.1088566929,-0.037361484,0.0230861548,-0.0158573389,0.1139167771,0.1966699809,-0.0148965688,-0.0263464898,-0.0075192992,0.0135939009,-0.0899781436,0.1461511701,-0.0687109753,0.0698860288,0.0056059742,0.1938534826,-0.0154354777,0.0364909582,0.1321679205,-0.2483941168,0.0292908214,-0.046285145,-0.0035476352,0.1111174151,-0.0340845324,-0.0347699299,-0.1594077647,-0.0235963464,-0.0980522186,0.0651913136,-0.1186185181,0.0196697488,-0.0769111365,-0.0142346798,-0.0229488593,0.1074785963,-0.1528562456,-0.0665893853,-0.0150515633,0.0377689302,-0.1226760149,-0.1482929885,-0.0291964132,0.0784711167,-0.0652646273,0.01145944,-0.0855717883,-0.0173721984,-0.2081439793,-0.1560468078,0.0126006035,-0.1054337844,0.0152525436,-0.2138888389,0.1672815084,-0.1244802326,-0.0331072174,0.0393531248,-0.1217634678,-0.081613265,0.0304459315,0.074026309,0.0593987964,0.1024690866,0.0277700927,-0.0992521644,-0.1165641323,0.0233946815,0.0214325264,0.0757230595,-0.047625646,0.0197321493,-0.10896229,0.0405579247,-0.1275858581,0.1685448438,-0.0050049024,0.001486033,-0.1250324249,0.1168782562,0.1552977562,0.0549983568,0.1504933089,0.0900789425,0.1999987066,-0.0957328379,-0.0612891391,-0.0308673047,-0.0748587921,-0.1421451867,0.0489553809,0.1016849577,-0.0525688268,-0.0094138281,0.0203882027,-0.1716174334,0.2350980341,0.0025858397,-0.073721908]],"hackathon_name":"AstonHack","index":930,"project_description":"Visualising the spread of data on the internet.We wanted to see how data and information is spread on the internet and how you can find out new ways of manipulating this spread and maybe not get affected by it.It displays how information is spread on the internet and how links\/informations is linked between each other.From there you can see what domains are referenced by each other and who has the biggest influence.We built it using php, python and gource for visualising the data.We had some problems with the implementation of the shortest path between two URLs as there was a big amount of BackLinks which had to be taken into consideration. At the moment this process runs smooth as long as you have a modest amount of nodes between the links. This could be improved by building the dataset using C++ and buying a better computer.We managed to make a significant and trust full visualisation of how one piece of information surfs over the internet and influences our lives even if we do not realise this. We can also use these data to find out about other webpages that referenced the main URLs.I have learned a lot about crawling and about how big the internet is. The main lesson was why algorithms have to be efficient. THE INTERNET IS HUGE!!!We might have to improve the efficiency of our shortest path tree algorithm and rewrite some of our function. Create a powerful front-end.AstonHackI worked on the second part in which we show the shortest path between 2 links. We have built a tree which we are plotting in 3D to see the click we have to do in order to get from a link to the second one.Stefan Idriceanu\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 04:47 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"LinkTracker","project_tags":["php","python","javascript"],"project_url":"https:\/\/devpost.com\/software\/linktracker","keywords":"internet,spread,information,data,links,big,referenced,see,shortest,built,using,main,find,path,amount,urls,learned,gource,full,function"},{"level_0":931,"hack_vector":[[0.1556432992,-0.1076517701,0.0056883018,0.0813918486,-0.0347759761,0.1683312804,0.1829703599,-0.0543679073,-0.042394679,-0.019399628,0.0163109433,-0.0330306143,0.1399440318,-0.0969263092,0.0344789959,0.0509555936,0.2406620234,0.0199656878,0.0617645085,0.0924172327,-0.19027403,0.0235120133,-0.0682224408,-0.0466944762,0.1465853751,-0.0372546464,-0.0551473536,-0.2056860775,-0.0258836709,-0.0604013912,0.0517604053,-0.0908645988,0.075818561,-0.0772654265,-0.0461692959,0.0312643163,0.1455053985,-0.1030679867,-0.009206132,0.0690223277,0.0604986921,-0.1427231431,-0.2022540569,-0.0029524884,-0.00549105,-0.0474607013,0.0432996675,-0.0492837615,-0.0218488313,-0.2279791236,-0.0789777786,0.0331788324,-0.1069321483,-0.0229225475,-0.1408069432,0.1598818898,-0.1621362418,0.0567736924,-0.0095246248,-0.0062636561,-0.0267468505,0.0253003575,0.0608798265,0.0670370832,0.1514057815,-0.0321948417,-0.1134984717,-0.1553462148,0.0104491105,-0.010989272,0.0631370395,-0.0338810645,-0.0187999364,-0.1489929408,-0.0109988134,-0.0578123257,0.215082258,0.0094099408,0.0683026984,-0.1420070231,0.1315000206,0.1557381153,0.0545991957,0.1379373968,0.1282100976,0.1793287247,-0.1060580909,0.0174850244,0.0197295602,-0.111907728,-0.1146100163,0.0777981356,0.0415878408,-0.0112351254,0.0368783362,-0.0703235641,-0.08623337,0.1806169003,0.0793719739,-0.0656908974]],"hackathon_name":"AstonHack","index":931,"project_description":"Aston Hack 2015 JS projectAstonHackI worked on the javascript needed for the telerik platform to work.Also,I introduced the Google API for the maps to work and mixed them all together .I worked on trying to connect twilio's APi to our appAndrei Tuta\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 05:46 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SafeDrive","project_tags":["javascript","html","telerik","google-directions","twilio","google-maps"],"project_url":"https:\/\/devpost.com\/software\/safedrive-ails80","keywords":"location,making,learned,javascript,inspiration,everything,discribe,directions,custom,work,built,best,arrive,app,android,also,adapting,challenges,message,word"},{"level_0":932,"hack_vector":[[0.1525527388,-0.1633213907,0.0195302051,0.0931274667,-0.053302452,0.1567187905,0.1611863077,-0.0555365086,-0.0390984714,-0.0279018525,-0.0068388353,0.0450564213,0.1281448603,-0.078070201,-0.0075795692,0.0907527879,0.2584285438,0.0347952507,0.0600459389,0.0793742687,-0.1852333099,0.002534678,-0.0488700829,-0.0707601383,0.1729543358,-0.019494148,-0.0769011155,-0.1718883514,0.0405603275,-0.0810537934,0.0102927005,-0.0902085379,0.0836832747,-0.0444913916,-0.0384350419,0.0077528395,0.1467560083,-0.1093280762,0.0075385724,0.1011398807,0.0606152751,-0.1380755156,-0.1820008904,-0.0328290574,-0.0583268367,-0.0497729592,0.0510283783,0.0011718048,-0.0117618479,-0.1785695702,-0.0147614833,0.0382376872,-0.1107603312,-0.0675886795,-0.0849413574,0.1434559375,-0.1515716165,0.0777292773,-0.0113154305,0.0671867952,-0.0024090549,0.0340436846,0.0395873599,0.0845436826,0.1411565095,-0.0521027185,-0.1419694871,-0.1784826666,0.0044949907,-0.0009466163,0.0713987052,-0.0318169594,-0.0264254175,-0.1524878144,-0.0812513083,-0.0570312254,0.194787845,0.0359952934,0.1059352607,-0.1395213157,0.1115967482,0.1503294855,-0.0022222137,0.1289701462,0.1683911234,0.1455279142,-0.1506579965,0.0806121379,0.0083163157,-0.120068118,-0.0665855184,0.1122031137,0.021755157,0.0296949968,0.0940751508,-0.1136494577,-0.0504179522,0.1327910274,0.1219440922,-0.0361489095]],"hackathon_name":"AstonHack","index":932,"project_description":"The Useless Chat AppUsing iMessage when drunkCompletely misrepresents youNot very wellAlmost everythingAlmost nothingThe meaning of sleep deprivationComplete abandonmentAstonHackMisha Wagner\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 05:57 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Misconstrue","project_tags":["java","javascript","meteor.js","ibm-watson"],"project_url":"https:\/\/devpost.com\/software\/misconstrue","keywords":"almost,well,imessage,accomplishments,built,challenges,complete,completely,deprivation,drunk,everything,inspiration,using,learned,meaning,misconstrue,misrepresents,next,nothing,proud"},{"level_0":933,"hack_vector":[[0.1476781666,-0.1092667952,-0.0256515909,0.0636016354,-0.0259913392,0.1470720172,0.2015067339,-0.0314896107,-0.0354926139,-0.0021320044,-0.0085535469,-0.0474523231,0.1421027184,-0.0766201243,0.0447637588,0.0173244942,0.2140953094,0.002305371,0.0517469868,0.0996341705,-0.2270181626,0.0292991437,-0.0484967455,-0.0175087377,0.1423097402,-0.0244724713,-0.0539392605,-0.1746817976,-0.0157861374,-0.0727919415,0.0615979992,-0.1177828908,0.0485300794,-0.0733542368,-0.0497287661,0.007181447,0.1354332268,-0.1301842481,-0.0333533213,0.031098891,0.0556416698,-0.1458408684,-0.1669091433,-0.0230759177,0.0348096974,-0.0495584719,0.0230187308,-0.0722226277,-0.0125608249,-0.2088765055,-0.1191110611,0.0306170639,-0.1152610481,0.012795398,-0.1758419275,0.1531167924,-0.1612061411,0.0095207291,0.0130580179,-0.0519394241,-0.0606146455,0.0308720376,0.0698624998,0.0485719331,0.1303261966,-0.01069404,-0.100795716,-0.1401499659,0.0243481919,0.0149971331,0.0662249476,-0.0453400053,-0.0011818914,-0.1328616142,0.0111254547,-0.0977508649,0.1990900785,0.0165366083,0.0348701589,-0.1496854275,0.1274517924,0.1576831788,0.0562930182,0.1545477957,0.1327886134,0.2062878609,-0.0991190746,0.0068227178,0.0116778687,-0.0957227424,-0.1308003217,0.0742480755,0.0834003314,-0.014534574,0.0233784672,-0.0290739089,-0.1382224411,0.2201850563,0.0472304635,-0.0617811792]],"hackathon_name":"AstonHack","index":933,"project_description":"Graphs created using Majestic APIThe Majestic API is a very powerful tool for providing data,so i decided to use it in a proper way.Provides the user with a graph according to the data from a website,the amount of visitors it had in the last period of time and everything else.Python and Majestic APIInstalling all the modules for python.Developed my Python Engineering Skills even moreNothing unfortunately,it was just a hackaton project,but the API may be developed in more tools featuring web development.AstonHackAndrei Tuta\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 06:04 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Linear Graph \/w Majestic API","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/linear-graph-w-majestic-api","keywords":"api,majestic,python,modules,use,data,developed,graph,everything,learned,last,installing,inspiration,hackaton,featuring,website,even,engineering,linear,development"},{"level_0":934,"hack_vector":[[0.14168863,-0.1246835366,-0.008484995,0.0920483321,-0.0445702448,0.1619561613,0.1977788061,-0.0311067067,-0.047903996,-0.0146863097,-0.0025161672,0.0142517323,0.1428048164,-0.0700180456,0.0252826177,0.0426078029,0.2521016002,0.0256653894,0.0426348969,0.0974026844,-0.2050743997,0.0140514597,-0.0437621661,-0.0450114459,0.1693986803,-0.013644577,-0.0721609816,-0.1918218732,0.0110989902,-0.0717843771,0.0565056875,-0.1144322976,0.0518655367,-0.0501976199,-0.0331985466,0.0240988303,0.1398085356,-0.1034458876,-0.0078699011,0.0779836997,0.0612897314,-0.1594177336,-0.170738399,-0.0337058753,-0.0183324683,-0.0539718121,0.0250128359,-0.0224692728,-0.0178669095,-0.1944193393,-0.043645259,0.0160651151,-0.0997538716,-0.0343325809,-0.1331484318,0.1555012017,-0.1700215042,0.0472852103,-0.0063906028,0.0008476251,-0.033645384,0.0430544168,0.0511371568,0.0643276051,0.1529008001,-0.0345085226,-0.1245765388,-0.166085884,0.0272163488,-0.0024157441,0.0555593148,-0.0315699875,-0.000086315,-0.1317951828,-0.0457882434,-0.0888293833,0.1960967332,0.0120527893,0.0727967918,-0.1473064274,0.1184636578,0.1620419174,0.0327677652,0.1458005458,0.1408625543,0.1839076728,-0.142636016,0.0445285738,0.0082458723,-0.1200345382,-0.1130087748,0.0967612341,0.0412545428,0.0172421355,0.060907796,-0.0523763262,-0.1015755534,0.1808806956,0.0871388987,-0.0420981459]],"hackathon_name":"AstonHack","index":934,"project_description":"A 3D Dungeon crawler that uses data from Wikipedia to generate the levels.We decided to make a 3D dungeon crawler in Java using our own openGL engine to explore wikipedia...AstonHackDan Jones\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 06:06 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"WikiCrawler","project_tags":["java","glsl","opengl","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/astonhack-2015","keywords":"wikipedia,using,opengl,make,java,explore,engine,dungeon,decided,crawler"},{"level_0":935,"hack_vector":[[0.162783742,-0.1273241639,-0.005361795,0.0394146629,-0.0046028937,0.1384304613,0.2172855139,-0.0324537568,-0.0350555293,0.0028838294,0.008287455,-0.0619048961,0.1228995994,-0.0743559226,0.0499881394,0.0163037498,0.2218122631,-0.005230925,0.0531837679,0.1035182849,-0.2441854924,0.0497340783,-0.0504559688,-0.0243412834,0.1195699796,-0.0421409048,-0.0431334339,-0.195079267,-0.0155698806,-0.0956659988,0.0763958097,-0.1263083965,0.0459504761,-0.0942241475,-0.0293180794,-0.0190905407,0.1127889082,-0.1447138935,-0.0377316587,-0.001417657,0.0479213595,-0.1599429101,-0.1573812217,-0.0380788334,0.059927199,-0.0373928957,0.0202857107,-0.0734371394,-0.0270487536,-0.2062774897,-0.1184135899,0.0298525244,-0.1150736138,0.0105261002,-0.1893191785,0.1391682178,-0.1472792327,-0.0159362033,0.0296143275,-0.0745236725,-0.0578362979,0.0238897298,0.0793598741,0.0384739451,0.1118274629,-0.0039800345,-0.1099083796,-0.1227414906,0.0295653753,0.0217567552,0.0757771283,-0.0553978942,0.0241386406,-0.132717669,0.0180430934,-0.1411838531,0.1698518842,0.0264856089,0.0430194512,-0.134959802,0.137753427,0.1483752131,0.0449855253,0.1669933051,0.1189631745,0.2009578496,-0.0971560329,-0.0127849896,-0.0105695343,-0.09131217,-0.1209655255,0.0658790693,0.0757280663,-0.0365388766,-0.0033891783,-0.007027057,-0.1385940909,0.1866168827,0.0197667629,-0.0600084439]],"hackathon_name":"AstonHack","index":935,"project_description":"Visualising the influence of Twitter users in a game like environment.Thought of the pun \"Tweat\" of the word \"Tweet\" and thought of Twitter user data visualisation using an Agar.IO like game environment.Players are represented as 'blobs', these blobs have a size proportional to the influence of a Twitter user. When one user tweets another in the game they will being travelling towards them. When a user sends a tweet they grow in size. When a player encapsulated another it gains the others influence.Twitter as a backend, Java as a back\/frontend.Twitter API usage limitations, rather obscure bugs.Graphics.The value of planning and scrum meetings.Open source on GitHub (as soon as we remove API keys...)AstonHackI worked on integrating the API into the project, and various utility functionality.I worked as a project manager, problem solver and \"maths guy\".Aran Long\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 06:25 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"TwEAT","project_tags":["java","twitter"],"project_url":"https:\/\/devpost.com\/software\/tweat","keywords":"user,twitter,game,size,another,api,tweet,tweat,blobs,thought,influence,github,graphics,grow,word,inspiration,io,gains,keys,learned"},{"level_0":936,"hack_vector":[[0.1461572349,-0.1360720396,-0.0076515395,0.0789961666,-0.0431519859,0.1570653468,0.1884195656,-0.0458539017,-0.0292265322,-0.0231502485,0.0092102457,0.0010419067,0.1335320026,-0.0708951578,0.0224381555,0.060143929,0.2526564002,0.0255991295,0.0426765606,0.1023525968,-0.2193471342,0.010294456,-0.0401339494,-0.0459155887,0.1463718116,-0.013497727,-0.0544072986,-0.1867292672,0.0141527522,-0.0879000872,0.0416311845,-0.1044092998,0.0566568896,-0.0632128641,-0.032004375,-0.0081187468,0.1307994574,-0.1232477054,-0.0266889539,0.0568392165,0.0544142909,-0.1375519037,-0.1724218726,-0.0396631993,-0.0080893924,-0.0528212972,0.0299264528,-0.0235984139,-0.0121660884,-0.2007914633,-0.0648063496,0.0247298237,-0.1062789559,-0.0439305753,-0.1456955969,0.1627590358,-0.1518672109,0.0370847359,0.0053747157,-0.007914328,-0.0325536244,0.0345545858,0.0641108602,0.0667892769,0.144244656,-0.0223719347,-0.1271557957,-0.161760211,0.0251833778,0.0078924112,0.0603596121,-0.0304972604,-0.0033034768,-0.1411287934,-0.0461805463,-0.089266032,0.1939393431,0.0140399132,0.0641136765,-0.1514159143,0.1186255142,0.1675199419,0.0223214813,0.1647384316,0.1461709291,0.1867918223,-0.132448107,0.0333645158,-0.0119424043,-0.1016882509,-0.112743564,0.1003626212,0.0574127808,0.0007923236,0.0475680642,-0.0532830097,-0.1093986109,0.1938229054,0.0752794594,-0.0597212575]],"hackathon_name":"AstonHack","index":936,"project_description":"Gnome Child is bigger and better than Siri, Cortana and Google Now Combined. Maybe.Something fun and differentWill answer any one of your questionsAndroid StudioWriting the app in 4 hoursHow to use a hybrid frame work to push apps onto two platformsTo rule the world?AstonHackAssa Singh\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 06:31 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Gnome Child","project_tags":["android"],"project_url":"https:\/\/devpost.com\/software\/gnome-child-u8gxf7","keywords":"writing,world,android,answer,app,apps,built,challenges,child,different,frame,fun,gnome,hours,hybrid,inspiration,learned,next,one,onto"},{"level_0":937,"hack_vector":[[0.1529484838,-0.1493139267,0.0171232615,0.1033307761,-0.0547559373,0.1679296792,0.1668445319,-0.0561146885,-0.0368240774,-0.0274831541,-0.0090478342,0.0599575527,0.1285760254,-0.0803349838,-0.0207949579,0.0959202126,0.2597913146,0.0464186221,0.0526573807,0.0705688596,-0.1666271836,0.0001093385,-0.0554815829,-0.0657848641,0.1815485209,-0.0209834483,-0.0889077038,-0.1742803901,0.0307511482,-0.0728013515,0.0198379084,-0.079798229,0.0915501043,-0.0376261845,-0.0386705138,0.0327872522,0.1533739418,-0.0871481672,0.0235734023,0.1129770577,0.0641768649,-0.1447983384,-0.1816764027,-0.0246494915,-0.0668681562,-0.0478325523,0.0537310243,0.0093075465,-0.0170865022,-0.1746978164,0.0018164937,0.0433318913,-0.1028060243,-0.0642047524,-0.0759837925,0.1337702423,-0.1635622233,0.0838661268,-0.0194599926,0.0816600546,0.0004635782,0.0388852693,0.0348388106,0.0706369355,0.148314327,-0.0636512116,-0.1376482397,-0.1739512831,0.0036532362,-0.0059176409,0.0551194809,-0.0235887188,-0.0296440758,-0.146759674,-0.0903810039,-0.0362360254,0.1949982643,0.0268176962,0.1051917151,-0.1460472792,0.0964382663,0.1480261385,-0.0061093555,0.1189806908,0.1596788019,0.1458634585,-0.1490042508,0.0916524306,0.0177489407,-0.132261306,-0.0657665804,0.1201113388,-0.0056712567,0.0492215343,0.0916295797,-0.1127031744,-0.0409483612,0.1245854273,0.1335394382,-0.0282263812]],"hackathon_name":"AstonHack","index":937,"project_description":"simple grind base 2d gameWhat I learnedAstonHackOlawumi Ajileye\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 06:35 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"game","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/game-df5k1h","keywords":"ran,proud,next,learned,inspiration,game,challenges,built,accomplishments"},{"level_0":938,"hack_vector":[[0.1510598361,-0.1028964221,-0.0368859619,0.0272701662,-0.0056915311,0.1281000227,0.2008342445,-0.0281726178,-0.0256050508,-0.0092495596,0.0054292413,-0.0894025117,0.1428741813,-0.0702370703,0.0658929795,-0.0101552103,0.196595639,-0.0169491954,0.0436115004,0.1272365749,-0.2415698916,0.0424882919,-0.0389446467,-0.0023555877,0.1077203155,-0.0331212282,-0.0252146032,-0.1698446572,-0.0449376814,-0.0967484117,0.0759314746,-0.1300182492,0.033484567,-0.0872726515,-0.0208540615,-0.0295805819,0.111102432,-0.1470785141,-0.0590001084,-0.0246589091,0.0550819859,-0.1285243183,-0.1481305957,-0.0263667982,0.0815688223,-0.0519508533,0.0121881906,-0.0923147276,-0.0338657387,-0.2138726413,-0.1625580639,0.0181725267,-0.101873599,0.0171462148,-0.2124688476,0.1523900777,-0.1297255754,-0.0444353037,0.0375223421,-0.1134409904,-0.078658022,0.0181465205,0.0700017586,0.0262939595,0.0982546657,0.0230888613,-0.0888622925,-0.1055904776,0.0248373989,0.0265922081,0.0733437613,-0.0524606667,0.0167974718,-0.1191130504,0.0432294533,-0.1191055626,0.171195358,0.0057499171,-0.0010603116,-0.1268139929,0.1180120334,0.1505044103,0.0575937107,0.1659285128,0.0983983427,0.2002007812,-0.0802685469,-0.0465280749,-0.012173132,-0.0730175823,-0.1395137608,0.0489520617,0.1014670879,-0.0420427509,-0.0265968107,0.0109338257,-0.1674217284,0.230452612,-0.0024201924,-0.0735752434]],"hackathon_name":"AstonHack","index":938,"project_description":"Like the TV show Pointless, but online and with domain names insteadInspired by the TV show Pointless, and the Topic feature of the Majestic API - as it uses Majestic and Pointless but there is no easy way to combine these names I called it M'pointless.It's a multiplayer browser-based game where you play a (funky type of) Pointless game, but rather than generic concepts as in the TV show, it uses web topics and domain names.Out of many players in the game, one is chosen as a contestant, the rest are the audience. Everyone is given a specific topic (eg. Video Games) and the audience must all submit one or more websites which they think are related to the given topic. After the round ends (after 30 seconds), the contestant must then choose a website themselves, and the aim is to pick the website which was chosen least by the audience (such as by picking a very obscure website) while still being related to the topic.M'pointless uses the Majestic API to judge whether a given website is related to the topic,I started off not sure what to build, so I wrote an events system which allows the JS frontend to talk to the Bottle back-end through Ajax calls. After I wrote this, I needed to decide what to actually make that was multiplayer and web-based, so I brainstormed various game ideas until I came to TV shows, and realised that Pointless works well as it has a large audience.The JSON payload of each Ajax call is quite a lot if it's being sent to >100 people at once so I needed to find a way to condense all of the information in each event into as little space as possible.As I didn't spend a lot of time structuring the project at the start, all of the client-side logic is one ugly JavaScript file, so maintaining it toward the end of the project wasn't easy!Finally the Majestic API was very information-dense and returned a lot of numbers so I wrote my own Python wrapper around Majestic's Python wrapper around their own web API, to allow the server code to at least be a little bit maintainableLiterally the only frameworks I've used are Bottle on the backend and jQuery\/Bootstrap on the front-end  - everything else is done from scratch!Basically had to learn Ajax from scratch as I've never used it before, and also got to know some of the more detailed intricacies of routing in the Bottle frameworkMake the website look nicer! :DTry it out at http:\/\/tomgalvin.uk\/AstonHackThomas Galvin\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 06:54 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"M'pointless","project_tags":["bottle","python","javascript","html5"],"project_url":"https:\/\/devpost.com\/software\/m-pointless","keywords":"pointless,website,majestic,topic,api,audience,game,wrote,end,related,one,lot,tv,given,uses,ajax,web,bottle,easy,must"},{"level_0":939,"hack_vector":[[0.1456772983,-0.1161828414,-0.0046032835,0.0610007681,-0.0263912361,0.1522314548,0.199981913,-0.0322019719,-0.0493154675,0.0048381621,0.0072664614,-0.0487191007,0.1401724964,-0.079236947,0.0487824343,0.0583335981,0.2484702617,0.0239500515,0.0483552366,0.104189299,-0.2146705836,0.0438269489,-0.0648146123,-0.048774194,0.1400900185,-0.018752601,-0.0602854267,-0.2097913176,-0.0049583171,-0.0737224594,0.0557561591,-0.1251681596,0.0591794923,-0.0933312923,-0.0346129686,0.0112023689,0.1257720739,-0.1246213764,-0.0239455849,0.0310744513,0.0274886396,-0.1650513411,-0.1868859529,-0.0244382285,0.0167051479,-0.04927871,0.0166517291,-0.0468940251,-0.0111148804,-0.2018932998,-0.0767764822,0.0140124233,-0.1009791195,-0.0157454349,-0.137444973,0.1616839319,-0.1534264684,0.0365624689,0.0122271236,-0.0434409454,-0.0469864421,0.0350804627,0.0743071511,0.0850355998,0.1234539226,-0.0212349035,-0.1165817603,-0.1616840065,0.038947586,0.0059836437,0.0797283053,-0.0498932526,0.0105651058,-0.1281463951,-0.0156772994,-0.1132462397,0.1850422472,0.008316162,0.0777361616,-0.1271786094,0.1379534006,0.1512593329,0.0763606206,0.1451340616,0.1219212785,0.1746693254,-0.1240087673,0.0006805356,0.0091454946,-0.1072780639,-0.1247826219,0.0681065097,0.0680911914,-0.029963024,0.0383952223,-0.0386151783,-0.1149948463,0.1822965741,0.0579886809,-0.0760210529]],"hackathon_name":"AstonHack","index":939,"project_description":"Influence of trending twitter tags on the structure of the internetA tool which tries to visualize the dynamic structure of the internet based on trending twitter tags. Using Majestic API and data the tool finds websites related to trending twitter tags and visualize new backlinks added to the site during the trending time frame of the tag.AstonHackNishanthan Kamaleson\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:02 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"#TrendingInternet","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/uob_f4-8fqh4x","keywords":"trending,internet,twitter,tool,tags,visualize,websites,api,backlinks,based,data,dynamic,finds,frame,hashtag,related,majestic,new,site,structure"},{"level_0":940,"hack_vector":[[0.1588633806,-0.1196656227,-0.0242204946,0.0825653821,-0.0378721654,0.1593862474,0.1840450019,-0.031611111,-0.0345320702,-0.0069998805,-0.0061813393,-0.0282161869,0.1454648972,-0.0701227263,0.0462273285,0.0241987072,0.2163239717,0.0247700289,0.0469511151,0.0929409936,-0.2183144838,0.0091925962,-0.0505172722,-0.0281083509,0.1513767838,-0.020340208,-0.0524888858,-0.1839786768,-0.0104275607,-0.0650915205,0.0554612316,-0.110108681,0.0443609059,-0.0688239858,-0.0434016362,0.0187859107,0.1284307092,-0.1347123533,-0.0388560705,0.0590652674,0.0498914793,-0.1414324641,-0.1708565205,-0.0086971205,0.0093945144,-0.0559409223,0.0270855445,-0.0559887104,-0.0176815055,-0.2178457677,-0.0981748998,0.0164292846,-0.1050080806,-0.0235088672,-0.1538797766,0.1635592878,-0.1473781914,0.0375114791,0.0002701691,-0.0219034906,-0.045355022,0.0341224708,0.0595291778,0.0585721247,0.1404663026,-0.0225180555,-0.117658101,-0.1451780647,0.0229011364,-0.0057468163,0.0633969903,-0.0323334783,-0.0041790162,-0.1409645826,-0.013304377,-0.0885024518,0.2138498574,0.0134997657,0.0491931587,-0.1488687545,0.1311346591,0.1635467559,0.0498156101,0.1470245123,0.1305682808,0.2033629566,-0.107118398,0.0304907784,0.0062800879,-0.1000550836,-0.1154203117,0.0860385597,0.072222814,-0.014873934,0.0423152819,-0.0493247174,-0.1219353527,0.2241766453,0.0584524982,-0.0609709322]],"hackathon_name":"AstonHack","index":940,"project_description":"Your data in square format using majestic APII wanted to learn a little about the majestic API and visualizing data.Presents the majestic API data in a readable and usable format.The project was built with pythonMany challanges....I still managed to complete something, event though my original plan failedI learned about visualizing datamake it look better and cleanerAstonHackOliver Vlaytchev\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:11 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"DataSquared","project_tags":["python"],"project_url":"https:\/\/devpost.com\/software\/datasquared","keywords":"data,built,learned,majestic,api,visualizing,better,challanges,challenges,cleaner,complete,look,datasquared,event,failed,format,inspiration,learn,little,wanted"},{"level_0":941,"hack_vector":[[0.1366911829,-0.0828568563,-0.0366825536,0.0372483209,-0.0085659046,0.1330111623,0.217484504,-0.0311189163,-0.0357252434,-0.0108977426,0.0184245929,-0.0716497749,0.1432089657,-0.0729402229,0.0624994747,-0.0078122299,0.200698182,-0.0162798408,0.0425310507,0.1308863163,-0.2271009833,0.0334328301,-0.0499240272,0.0013493844,0.1215834767,-0.0236600302,-0.0304242112,-0.172150597,-0.0380146541,-0.088232249,0.0797910988,-0.1211383119,0.033016298,-0.0683973953,-0.0103437034,-0.0052139484,0.117515184,-0.1250965446,-0.0395624861,-0.0189615022,0.0643595681,-0.1329601407,-0.1549904495,-0.0213259272,0.0730907246,-0.0488709174,0.012714277,-0.0886023492,-0.0277994163,-0.2212219387,-0.1358629912,0.0162228253,-0.0986592546,0.0291608721,-0.2128010988,0.1528061032,-0.1500227302,-0.0361249223,0.032120388,-0.1164670438,-0.0684934109,0.0271292441,0.0788840279,0.0244439095,0.1142699197,0.0220265072,-0.088914074,-0.1258053631,0.0381108448,0.0213795472,0.054927431,-0.0419143923,0.0191502217,-0.1103790849,0.0403938666,-0.1153827086,0.1690674424,-0.0034597961,0.0116914464,-0.1344345659,0.1139279753,0.1538373232,0.0657552704,0.1659566909,0.0987381414,0.2084845901,-0.0900465623,-0.0500567108,-0.0190916415,-0.0780742168,-0.1510266364,0.0575789101,0.0984326452,-0.0371471234,-0.0273117572,0.0206677355,-0.1689455956,0.2288985997,0.004258119,-0.0644834936]],"hackathon_name":"AstonHack","index":941,"project_description":"A football game using a real time application called Pusher to allow users to have their smartphones as controllers.After watching a fellow hacker using Pusher for a cool real-time application, it inspired us to create a football game, allowing users to use their smartphones as virtual controllers to control an individual football player.When connected to the URL, the system will detect whether you are using a smartphone or a computer to connect to it. If you are connecting using a smartphone, It will redirect you to a \"controller\" page which has a virtual joystick and a \"Kick\" button. The computer will be redirected to the game display where the actual game will be shown as the users control the players with their phones.We had built the entire system using a mix of JavaScript and css, whilst using the Pusher API. The controller and game scene were built in JavaScript whereas the website layout is in css.We had problems coming to terms with how to integrate Pusher into our system as it was a completely new API for us to learn. We had all also lost a bit of proficiency when it came to JavaScript, so we had to brush up on our skills!As a whole team, we were able to overcome the daunting Pusher API and made a very impressive game (at least in my opinion ;) ). Also, I and my team had amazing teamwork as we worked to each other's strengths and helped each other out when we could.I had learned how to use the Pusher API to create a JavaScript game.Who know's what the future holds? ;)AstonHackSet up the server, designed the website.I developed the backend part of the game regarding web. \nI used PHP, JavaScript and Pusher.com as API for real-time interaction with different clients.\nI designed the controller for the smartphone page.Shuaib Saddique\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:14 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AstonBall","project_tags":["javascript","css","pusher"],"project_url":"https:\/\/devpost.com\/software\/astonball","keywords":"game,pusher,using,javascript,api,built,system,computer,control,create,css,football,smartphone,learned,team,controller,us,use,users,virtual"},{"level_0":942,"hack_vector":[[0.1309640706,-0.0999722555,-0.0110485628,0.0596545264,-0.0276409425,0.1474345922,0.2028773874,-0.0340815671,-0.0448821187,0.0008566416,0.0167133473,-0.0369630791,0.1409846544,-0.0900362656,0.0382533297,0.0363412797,0.2384530008,0.0125304423,0.0511879064,0.0968558565,-0.210060671,0.0329557508,-0.0614209957,-0.0357822254,0.138986662,-0.0211100075,-0.0567331873,-0.1986254752,-0.0005511743,-0.0788003132,0.0574169196,-0.1210807934,0.0581770651,-0.0873878673,-0.0314143039,0.0144468052,0.1394794881,-0.1220031977,-0.0235758666,0.0360766686,0.0445639975,-0.152970016,-0.1875423789,-0.0241281185,0.0235865079,-0.0483619124,0.0338284522,-0.0514917448,-0.0194557011,-0.2036643773,-0.0916377157,0.0176372491,-0.1085511222,-0.0119573679,-0.1607572585,0.1550171822,-0.1608214676,0.0271090884,0.0109103918,-0.0420110859,-0.0354998931,0.0302914977,0.0814337432,0.0674209744,0.1408943683,-0.0269381702,-0.1048141792,-0.1493986547,0.0369082429,0.0023230249,0.0677415058,-0.0435240455,-0.0010753492,-0.1353536099,-0.0014862061,-0.1069774255,0.1956379712,0.0214070678,0.0536867268,-0.1468220502,0.1370712221,0.1614044905,0.0637670234,0.1551359147,0.1325477064,0.1832824796,-0.11898873,0.0007640218,0.006411457,-0.1055520102,-0.1299340874,0.0741518363,0.0717839971,-0.006296576,0.0378692895,-0.0441332944,-0.123230949,0.1877936125,0.0596975088,-0.0668697134]],"hackathon_name":"AstonHack","index":942,"project_description":"An intuitive way of interpreting dataWe are aiming to use Majestic API to extract information regarding the popularity of websites and display them through a 2D game, as a result the users can interact with the data in real-time. Making the information more fun to encapsulate.The whole project is written in C#. It is divided into 2 phases: the extraction phase, which uses the Majestic API to get a websites' back-links, ref-domains and trust-flow, calculating a popularity rating for each site. While the secondThe challenges the team face was to fight fatigue at night-timeteam work plays a major part in accomplishing a projectAstonHackAndrei-Cristian Gheorghe\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 10, 2015 07:20 AM ESTMajestic API ,coded using C# ,google API, both back-end and front-end deveolopmentLog in\n      or\n      sign up for Devpost\n      to join the conversation.Taha Yazici\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:17 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Waheed Rafiq\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:09 AM ESTResearch into Majestic API , experiment with different Majestic API , relay this data back to the team , coded using C#  , used API back-links , refdomains , and trust flow.Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Game Your Data","project_tags":["c#"],"project_url":"https:\/\/devpost.com\/software\/game-your-data","keywords":"project,team,majestic,time,work,popularity,challenges,information,websites,api,calculating,get,accomplishments,game,fun,flow,fight,fatigue,face,extraction"},{"level_0":943,"hack_vector":[[0.160300076,-0.1378331631,0.0037594675,0.0870004967,-0.042592179,0.1688333899,0.1877292991,-0.0583705604,-0.0295835622,-0.0248079877,-0.0106988437,0.0210964903,0.1317682415,-0.0853643715,0.0001873738,0.0677075088,0.2541038096,0.0355236195,0.0517753065,0.0898274407,-0.1969512403,0.0116561856,-0.0482377373,-0.0562221371,0.1717657596,-0.0091196913,-0.0667752102,-0.1807458103,0.0150312204,-0.0793849304,0.0314840302,-0.1111160442,0.0850076973,-0.0548946261,-0.0371205658,0.0035113585,0.150536567,-0.1133234873,-0.0077713127,0.0832009539,0.0605594255,-0.156627655,-0.173367247,-0.037143819,-0.0292941462,-0.0487672873,0.037797913,-0.0161986519,-0.030105412,-0.1913856417,-0.0447851047,0.0339379981,-0.1103579551,-0.0521086939,-0.1102108136,0.15108338,-0.1607010216,0.0585497282,-0.0146874227,0.0283750687,-0.0149922837,0.0332628526,0.0568183847,0.059113387,0.1455665827,-0.0470182076,-0.1449362189,-0.1605777591,0.0215756986,0.0216661021,0.0673303828,-0.0350502059,-0.0159075335,-0.1501172185,-0.0553475358,-0.0688257962,0.1932062954,0.0298130643,0.0804617479,-0.1491404921,0.1136838719,0.1580207795,0.0226828419,0.1407812238,0.1434770972,0.1617486626,-0.1370609701,0.0590284914,0.0122686587,-0.1235274747,-0.0913425162,0.098671779,0.0319604911,0.0202950463,0.0750229135,-0.0767710134,-0.0772219226,0.1621201336,0.1003239602,-0.0437632576]],"hackathon_name":"AstonHack","index":943,"project_description":"Simulator being an administrator during the 2007 financial crashIt's a fun thing using Majestic and socket.io where you bid on companiesAstonHackJack Wearden\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:20 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"FinancialCrashAdministrativeTakeoverSimulator15MMORPG","project_tags":["javascript"],"project_url":"https:\/\/devpost.com\/software\/financialcrashadministrativetakeoversimulator15mmorpg","keywords":"using,thing,socket,majestic,io,fun,companies,bid"},{"level_0":944,"hack_vector":[[0.1532157809,-0.1073707715,-0.0228057969,0.0500964597,-0.0066795307,0.1419663429,0.1984054148,-0.0262715295,-0.0248045512,-0.0138208438,0.008595678,-0.0742219836,0.1479369253,-0.0709901229,0.0480919033,-0.0006283812,0.1969228834,-0.0148278931,0.0513441153,0.1275679767,-0.2464835048,0.038562756,-0.0378925391,0.0022501166,0.1313343942,-0.0483252145,-0.0380496345,-0.1754873246,-0.0376848914,-0.0881886333,0.0770008862,-0.1104181558,0.037198171,-0.0669457167,-0.0235314909,-0.0190818515,0.1221831664,-0.1435198039,-0.0439045802,-0.0111241601,0.0647170246,-0.1337469965,-0.1523032486,-0.0295725316,0.0646361262,-0.0452607609,0.0144667691,-0.0819378644,-0.01716871,-0.2178585529,-0.145041436,0.0313296244,-0.1154746413,0.0302825235,-0.2217030823,0.1501602083,-0.146130085,-0.0336550847,0.0397300236,-0.098896265,-0.0781910568,0.0163109526,0.0652494431,0.02584612,0.1087460592,0.0286225583,-0.0814747065,-0.1234066188,0.022431355,0.0210122243,0.0683038533,-0.0512623787,0.0186037924,-0.1166830361,0.0348793492,-0.1029787883,0.1723807007,-0.0023740055,0.0044394424,-0.131385982,0.1042710841,0.1498734355,0.0374432318,0.160074085,0.1095088869,0.2107033432,-0.0880405828,-0.0427035689,-0.022317335,-0.0733572096,-0.137177512,0.0656092837,0.0793225616,-0.0390478969,-0.0241409,0.0038473133,-0.1566510051,0.2299501151,0.0207178406,-0.0607642606]],"hackathon_name":"AstonHack","index":944,"project_description":"A interactive leakage fixer multiplayer game, that rises awareness of water problems.We were working on the project \"Gamification\", created by \"Severn trent\"We as a team were inspired to come up with an interesting educational and entertaining idea for this so important problem that should be given more attention.It is a location-based game app. The player will have an office in the centre of the map and some randomly generated leakages will appear in the area. Then the player will have to send their plumbers to fix the problem. There are mainly 3 types of plumbers: normal, quick, efficient. The bigger leakages are be fixed only if you have certain tools. A really important thing to mention is that the player will also be given the opportunity to win big prizes and bonuses in game, whenever they report a real leakages.For my first time, I was mostly focusing on the front-end. Helped develop the login, options, register, loading forms. My main focus was the user friendly interface to engage people into playing more and more. I enjoyed writing C# in Unity in a really fun way.I ran into challanges mostly in the begining, when I had to watch loads of tutorials about using the Unity's API and that of C# as well. It was hard for me to build the location based map, but finally managed to take the Google Maps api working on our app.I am proud of the work me and my team have put into this project. I really enjoyed the idea and mostly enjoyed its implementation.I have learned new languages and more about the Unity game engine. I am also planning to create my own mini projects in the future as well.If the app is approved I would like to have it go to the next level. For example, multiple minigames between players. real time reports, interesting communication system, more and more upgrades and tools.AstonHackI developed 95% of server-side in PHP.I developed the main application back-end, together with the login system, in C#.\nI also retouched the interface.Kalin Smolichki\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:20 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Fix My Link","project_tags":["c#","php","unity"],"project_url":"https:\/\/devpost.com\/software\/fix-my-link","keywords":"game,unity,enjoyed,mostly,app,player,really,leakages,location,real,ran,project,map,proud,team,problem,plumbers,fix,given,important"},{"level_0":945,"hack_vector":[[0.1427405924,-0.0896445885,-0.0249021966,0.0485731885,-0.0276606418,0.1327718496,0.2020300925,-0.0139367944,-0.0310738198,-0.0055515822,0.0146553861,-0.0706985891,0.1550310999,-0.0767255053,0.0708723217,-0.0007047881,0.1939396113,-0.0053916513,0.0444441475,0.1253669709,-0.2306320965,0.0238046963,-0.0528354645,-0.0124861021,0.1227830201,-0.0227160696,-0.0423549041,-0.1645570099,-0.0121251773,-0.0870932192,0.0576905794,-0.1106272563,0.0209948141,-0.0731854439,-0.0131789166,0.0007138261,0.127452895,-0.1406432837,-0.0637299418,0.0034194852,0.0520093106,-0.1335329413,-0.1410847008,-0.016588049,0.0596197173,-0.0502974913,0.0147148231,-0.0784406289,-0.0150249423,-0.2024154961,-0.1485435069,0.020678265,-0.1135993898,0.0217159223,-0.2005742788,0.1638622284,-0.1343647093,-0.0147351231,0.0284154247,-0.1052374318,-0.0632863939,0.0288293865,0.0785888061,0.06473919,0.1245209798,0.0143926591,-0.0900306776,-0.1299570352,0.0181129947,0.0111027183,0.0578697547,-0.0409667864,0.0131075662,-0.1163834259,0.0353923142,-0.1189810038,0.1806618422,0.0000529444,-0.0080789411,-0.1441554427,0.1213743538,0.1620263159,0.0670175403,0.1466761231,0.1039255038,0.2086694241,-0.0958834067,-0.0421762802,-0.0124445613,-0.0839311332,-0.1512145549,0.0574641041,0.1055806801,-0.0289944913,0.0120332306,0.0059251739,-0.1629101336,0.2488736063,0.0121139986,-0.0651428401]],"hackathon_name":"AstonHack","index":945,"project_description":"A majestic way of implementing dataWe wanted to make an amazing product, more accessible to people not familiar with it.Graphical representation of data acquired from the majestic api and sourcing it to gather interesting information regarding a user's site.We used php back-end to collect, store and manage data which we implemented in our web service using JavaScript.We created our own graphical representations which were time consuming, but provided us with the flexibility that we needed for implementation.We have a program called Stitches that collects screenshots of the linked sites from the url entered, and creates a interesting collage of all the screenshots.We learnt cross-platform collaboration which is beneficial to our skill sets and something that we could use for implementation in future hackathons\/projects.Sleep, but after that we are thinking of expanding the capabilities of our system to reach our vision that we had in the beginning.AstonHackchristina ermongkonchai\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:19 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"OperationRedBrick","project_tags":["javascript","php","html5","css"],"project_url":"https:\/\/devpost.com\/software\/operationredbrick","keywords":"graphical,interesting,data,implementation,screenshots,inspiration,information,implemented,javascript,hackathons,cross,gather,future,flexibility,familiar,expanding,entered,end,learned,web"},{"level_0":946,"hack_vector":[[0.1454034746,-0.152603358,0.0232091434,0.0916443393,-0.0537969843,0.1654006988,0.1735394448,-0.0645927265,-0.0299246572,-0.0248294473,-0.0087161483,0.0538897514,0.1278907508,-0.0893187821,-0.0109034972,0.0903171822,0.2625154555,0.0432951935,0.0521966331,0.0671702698,-0.1636471152,0.0083348751,-0.0598507263,-0.0697076023,0.1886571348,-0.0178195946,-0.0766112581,-0.1748372614,0.0372613333,-0.0652870014,0.0150193125,-0.0942593142,0.0911207721,-0.0447503105,-0.0583207123,0.0264425892,0.1565245241,-0.0931931511,0.0177880637,0.1073899865,0.0501846746,-0.1409495175,-0.1790376008,-0.0238615386,-0.0623136014,-0.0424793661,0.0544895157,0.0108843921,-0.0167451669,-0.1716551632,-0.0067431047,0.0435285829,-0.1117156371,-0.0618157052,-0.0648078471,0.1379197389,-0.1620856375,0.08963494,-0.0330854654,0.0732734278,-0.0000182212,0.0371082835,0.0469851121,0.0782547295,0.1413853168,-0.0691178739,-0.1386861503,-0.1687865108,0.0070521692,-0.0005853765,0.0576501079,-0.0269553512,-0.0155222239,-0.1502492577,-0.0792807117,-0.0423290581,0.1970943958,0.0279947612,0.1081697121,-0.147349149,0.1188497767,0.1482290924,0.0119361095,0.1229491308,0.1582897007,0.1426565051,-0.1516736746,0.0848988146,0.0207913164,-0.1248688251,-0.0736169666,0.1023931801,0.0136759672,0.0403383113,0.1011859179,-0.1132799536,-0.0385723263,0.1221535504,0.1317990869,-0.039506074]],"hackathon_name":"AstonHack","index":946,"project_description":"Crafting the best customer feedback experienceDashboard for customer feedbackNode.js, Express.js, MEAN, etc.AstonHackdeleted deleted\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:21 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Severn Trent Water Custom Support Web App","project_tags":["node.js","express.js","jquery","angular.js","bootstrap","font-awesome","google-fonts","twilio","google-maps","html5"],"project_url":"https:\/\/devpost.com\/software\/severn-trent-water-custom-support-web-app","keywords":"js,node,mean,inspiration,feedback,express,etc,dashboard,customer,built"},{"level_0":947,"hack_vector":[[0.1444191188,-0.1582472771,0.0096880859,0.0724368915,-0.0510579683,0.1432103664,0.1786192954,-0.048098214,-0.0278332476,-0.0250387117,0.0091616903,0.0322575457,0.1297842562,-0.0796931386,0.0140195815,0.090007171,0.2690863907,0.0353813879,0.0453888029,0.0974660888,-0.2056158781,0.005084971,-0.0511536933,-0.0675406605,0.1559088379,-0.0215686448,-0.0683029816,-0.1837754995,0.0412405729,-0.0873997584,0.0207376387,-0.098444812,0.0702196807,-0.0539473295,-0.0252291113,0.0043041017,0.1361868531,-0.1168330759,-0.0008368654,0.0772271678,0.039308466,-0.1558079123,-0.1949238628,-0.044995416,-0.0369273946,-0.0541496612,0.0445802733,-0.010189726,-0.0150801511,-0.1858278811,-0.0373729356,0.0326374248,-0.1082919538,-0.0732178167,-0.1183860675,0.1573760062,-0.1473312825,0.0631911829,-0.0026107959,0.0357103013,-0.015674673,0.0405331478,0.0548804477,0.0871995091,0.1312886477,-0.0423177518,-0.1343154311,-0.1719745696,0.023100432,0.0005213693,0.0671827644,-0.0341315642,-0.0082531059,-0.1400754154,-0.0652393624,-0.0796166137,0.1809820086,0.0205241274,0.0878348798,-0.1433805525,0.121596761,0.1645793617,0.011116012,0.1523335874,0.1500379741,0.1654977947,-0.1522175074,0.0569747835,-0.0048927218,-0.1132165864,-0.0807809681,0.1021310687,0.0345142446,0.0153889768,0.0766080692,-0.0850017443,-0.079895936,0.140489012,0.0963810757,-0.0522681922]],"hackathon_name":"AstonHack","index":947,"project_description":"Fixing leaks, one snowden at a timeAllows users to submit pictures of potential leaks they identify and earn points for, weekly highscores with prizes.AstonHackLiam Sorta\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:22 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SevernTrent Fixit","project_tags":["unity","c#","google-maps"],"project_url":"https:\/\/devpost.com\/software\/severntrent-fixit","keywords":"weekly,users,submit,prizes,potential,points,pictures,leaks,inspiration,identify,highscores,earn,allows"},{"level_0":948,"hack_vector":[[0.1603190601,-0.1432660371,0.0070439721,0.0934944227,-0.0556415282,0.1458106935,0.1736295819,-0.0448336937,-0.0369031914,-0.0115845893,-0.004459505,0.0436736867,0.145109877,-0.0856967494,0.0040630857,0.0715482533,0.2369398028,0.0312229469,0.062699154,0.0941297263,-0.1962287128,0.0001404558,-0.0487006009,-0.0479273945,0.1864894181,-0.0140871322,-0.0757255554,-0.173673749,0.037387114,-0.082146056,0.0086086662,-0.0918612778,0.0774347261,-0.0528643169,-0.0260736756,0.0170428921,0.1502090096,-0.112369597,-0.0156759117,0.0961941481,0.0626213774,-0.1522079557,-0.1823781729,-0.0276985615,-0.0506060459,-0.0455339774,0.0455966815,-0.0248615835,-0.0074491925,-0.1797467172,-0.0403269716,0.042934753,-0.1238051504,-0.0502767973,-0.1192942709,0.1550560892,-0.1609537601,0.0752289444,-0.003000888,0.045570448,-0.0137099698,0.0428390391,0.0414284319,0.0835800022,0.1487811208,-0.0417998917,-0.1398414373,-0.1676887721,0.0074129431,-0.0113379247,0.0665587708,-0.031514477,-0.0315454379,-0.1450898498,-0.048615355,-0.0587574281,0.1944128871,0.0205921568,0.087155059,-0.1520608068,0.1035388634,0.1540614665,0.0248989146,0.1253230125,0.1603447646,0.1662249267,-0.1344711483,0.07360439,0.0194415096,-0.1139910668,-0.0747887939,0.1071057469,0.0313518569,0.0283717308,0.088933818,-0.0972831026,-0.0827450305,0.1463622749,0.1056824625,-0.0321311206]],"hackathon_name":"AstonHack","index":948,"project_description":"Community forum interaction for reporting problemsThe challenge was given us by Severn Trent and we took this challenge.AstonHackMayur Bhadracant\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:25 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Severn Trent Water Report Forum","project_tags":["javascript","html5","css","jquery","php","mysql","bootstrap"],"project_url":"https:\/\/devpost.com\/software\/severn-trent-water-report-forum","keywords":"challenge,us,trent,took,severn,given"},{"level_0":949,"hack_vector":[[0.1486937851,-0.122085236,-0.0211315267,0.0561531819,-0.0311324578,0.1417784542,0.1969411075,-0.0433848277,-0.0118737295,-0.0096023763,0.027249191,-0.0434549525,0.1433740854,-0.0702506229,0.0639560744,0.0232848264,0.215572536,-0.0037543094,0.0465516672,0.1079357117,-0.2382867485,0.0267685018,-0.0551283695,-0.0252931044,0.1130781174,-0.0284434855,-0.0339159928,-0.1828500628,-0.0094985012,-0.0889605731,0.0622749738,-0.1099705696,0.0413539745,-0.0818352178,-0.0209159199,-0.0069548637,0.1171826497,-0.1435384452,-0.0510957986,0.0089355139,0.0428666435,-0.1353792101,-0.1621705592,-0.030118892,0.0398544259,-0.0490569174,0.0192684792,-0.068295829,-0.0239116903,-0.2131551802,-0.1346761286,0.0206337739,-0.1109071001,-0.0115048718,-0.1887230575,0.1543099731,-0.1334410757,-0.0111829527,0.0263323281,-0.0700113177,-0.0615205318,0.0243363194,0.0829439163,0.0581158996,0.1152871028,0.0012293326,-0.1059906632,-0.1299512088,0.0275044646,0.0167594086,0.0604686812,-0.0444039404,0.0189928338,-0.1336662918,-0.0007076692,-0.1151925102,0.1921233982,0.0145045351,0.0176649615,-0.1487721205,0.1289204955,0.166669324,0.0437362008,0.16684255,0.1144508272,0.2069482505,-0.1051461846,-0.0216506794,-0.0166584924,-0.0893951729,-0.1343111396,0.0722156391,0.0911359936,-0.0266274177,0.0130651863,-0.0146672959,-0.1365814954,0.2188804001,0.0281982496,-0.071319297]],"hackathon_name":"AstonHack","index":949,"project_description":"A unique way to find people willing to help teach, run workshops, speak and present ideascode.orgRecently i became a code.org volunteer and they have a interesting way of allowing teachers access talented coders and volunteersConnects talented volunteers with teachersOpenTeach will be run in beta as a technology only service in birmingham and we will aim to provide it overseas to developing countries so that teachers and schools can access talented volunteers or teachers for other subjects like math, science, english etcAstonHackWorked on Google Maps API, struggled with Node.js for a long time, and aided with front end integration of our systems.I did a lot of stuff with login systems and databases! Also maps. And I found a pretty nice looking stock image for the homepage!!Pandelis Zembashis\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:25 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"OpenTeach","project_tags":["node.js","socket.io","google-maps","express.js","postgresql"],"project_url":"https:\/\/devpost.com\/software\/openteach","keywords":null},{"level_0":950,"hack_vector":[[0.14108558,-0.1493193209,0.0235585831,0.1000099853,-0.0602976494,0.1574597508,0.1561359614,-0.0517007671,-0.0355731547,-0.031261608,-0.0107041346,0.068194963,0.1196378917,-0.0819039717,-0.0274874233,0.1113903373,0.2637730539,0.0517185256,0.0524773188,0.0624750853,-0.1540584415,-0.0094489781,-0.0552394241,-0.0786162168,0.1793376952,-0.0131354555,-0.0903288499,-0.1658966392,0.051011499,-0.0721139982,0.0012831615,-0.0718345866,0.0938285887,-0.0371480808,-0.0398384817,0.0358871631,0.1505688727,-0.0849652812,0.0282434244,0.1252611279,0.0547314472,-0.1370016336,-0.1867164671,-0.0255116671,-0.0814238787,-0.0532873906,0.057221517,0.0181014184,-0.0070716813,-0.1650226712,0.0186467655,0.0450906679,-0.0992747098,-0.0844069943,-0.0521306247,0.1350669563,-0.1582994163,0.0967924967,-0.023990646,0.0987517834,0.0102427425,0.0460139923,0.0362467915,0.0861022249,0.1500530839,-0.0730737299,-0.1413143724,-0.181019038,0.0051749106,-0.0100028729,0.0559610277,-0.0189625435,-0.0396885052,-0.1460478902,-0.1021102145,-0.0304733254,0.1905171722,0.0336106755,0.1203844026,-0.1421903521,0.0973199382,0.1416467726,-0.0056034219,0.1077955365,0.1615025103,0.1278863549,-0.1494742483,0.1060687229,0.0174111053,-0.1319784522,-0.0511462837,0.117052123,-0.0108567327,0.0544640012,0.1087072641,-0.1236173734,-0.0321004726,0.1030535847,0.1410025507,-0.0308161937]],"hackathon_name":"AstonHack","index":950,"project_description":"coolNO timeAstonHackJonas Pfeuffer\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:27 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"FighttheWeb","project_tags":["c#","unity"],"project_url":"https:\/\/devpost.com\/software\/fighttheweb","keywords":"time,fighttheweb"},{"level_0":951,"hack_vector":[[0.170520559,-0.1381302178,0.0003048838,0.071683377,-0.0256062131,0.1538929641,0.1944710314,-0.0548338071,-0.033174213,-0.0046709427,0.0263167135,-0.0294990819,0.1590937525,-0.0785790533,0.0466246232,0.0162127409,0.2307480574,0.0092513217,0.0552578308,0.1071130931,-0.2305966914,0.0253834836,-0.0531520545,-0.0268056821,0.153475523,-0.0436210297,-0.0463602878,-0.1986026466,-0.0019554477,-0.0855346397,0.0697481856,-0.1099111438,0.0492158495,-0.0738902092,-0.0378660075,-0.0066128662,0.1300066113,-0.1327234507,-0.0383411087,0.0251273736,0.060880959,-0.133261919,-0.1636828035,-0.0197302531,0.0174490847,-0.0316690505,0.0347759724,-0.0581575073,-0.0179905258,-0.200758338,-0.1060658172,0.0305547006,-0.1245887056,-0.004721438,-0.1659764946,0.1616119742,-0.1418041289,0.015615372,0.0100571904,-0.0390957259,-0.042620182,0.023550773,0.0750703067,0.0643695816,0.1301250756,-0.0050248243,-0.1084238291,-0.1397116631,0.0044160783,0.0087915342,0.0645209104,-0.03120552,0.0202643126,-0.1364490539,-0.0071357503,-0.0971653834,0.2028151304,0.0090512009,0.038047038,-0.1373204738,0.1320614517,0.1563842595,0.0298333727,0.1518470347,0.1325542331,0.2027637511,-0.104929544,-0.0044726902,-0.0168303475,-0.0828256235,-0.1155284941,0.0818384066,0.0634832308,-0.0146279708,0.0296331942,-0.0447064936,-0.1142176837,0.1966621727,0.0495810434,-0.064539358]],"hackathon_name":"AstonHack","index":951,"project_description":"Octopuses, code and much more!Inspiration came from Cookie clicker game and Severn Trent company itselfGamifies user experience, saves moneyWe have decided not to use Agile since we work next to each otherMaking all components work together.80 percent of features we planned are workingAlikhan : Angular.Js\nBrandon : He needs sleep\nCallum : Server side on Flask and PythonImproving code, adding features such as deleting adding records etcAstonHackI worked on building the iOS application for reporting problems with the Severn Trent Water networkAlikhan Uzakov\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:27 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Severn Trent","project_tags":["javascript","angular.js","python","flask","swift"],"project_url":"https:\/\/devpost.com\/software\/severn-trent","keywords":"inspiration,adding,work,trent,features,severn,next,company,experience,etc,deleting,decided,cookie,components,clicker,code,game,challenges,came,callum"},{"level_0":952,"hack_vector":[[0.153254956,-0.1487007439,-0.0232441146,0.0714553818,-0.0415219329,0.1434064955,0.1877947897,-0.0428212285,-0.0195697825,-0.0225879177,0.0133515978,-0.000226344,0.147444725,-0.0656102002,0.0481893755,0.0321597829,0.2344248146,0.0220882017,0.0471304581,0.107160978,-0.2356857359,0.0171069112,-0.0408896692,-0.0376921855,0.1277358532,-0.0161178093,-0.0460055061,-0.1728503555,0.0105255498,-0.1015375704,0.0504329167,-0.1144650728,0.0448001176,-0.0623852834,-0.0179429147,-0.0183400977,0.1305912882,-0.1411219835,-0.0422546193,0.0283728112,0.0535039417,-0.1424601674,-0.1658913344,-0.036349386,0.0105666742,-0.050406348,0.0269247741,-0.0494824648,-0.0255503412,-0.204928264,-0.0979083478,0.0212062374,-0.1084588468,-0.0421480872,-0.1702979654,0.1574868858,-0.1353489459,0.0133042652,0.0283596851,-0.0281897429,-0.0460691974,0.0367599241,0.0712212846,0.0621898584,0.1180466786,-0.006750566,-0.1202836409,-0.1448912919,0.0232993998,0.0177629907,0.0682833344,-0.0358753651,0.0083767036,-0.1351247728,-0.0331456959,-0.1096017957,0.1926791817,0.0215971451,0.0424600653,-0.1494410634,0.1204815656,0.169980064,0.0200190879,0.169104591,0.1380416006,0.1984299272,-0.1254828423,0.0088246847,-0.0201963745,-0.0926421732,-0.1152237877,0.0951439813,0.0786574557,-0.0125652663,0.0419372804,-0.0378035419,-0.122375071,0.2057900727,0.0467893966,-0.0570325665]],"hackathon_name":"AstonHack","index":952,"project_description":"a website which hosts peoples grave plotsMy dad said he wanted an easy way of remembering loved ones after they pass away and a cheeper alturnative to burrying\/cremating someoneit allows custom grave plots for family members to veiw and walk around there graves and other peoples public graveswe made it using putty and filezillawe had a great time i learnt alot about making a websiteAstonHackRyan Fuller\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:28 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"GraveSite","project_tags":["php","css","javascript","html5"],"project_url":"https:\/\/devpost.com\/software\/gravesite","keywords":"graves,website,loved,great,grave,filezilla,family,easy,dad,custom,cremating,cheeper,burrying,away,around,alturnative,alot,learnt,made,way"},{"level_0":953,"hack_vector":[[0.1472677439,-0.1045978069,-0.021338677,0.0491932593,-0.0230753999,0.1470078975,0.1976099461,-0.0421321504,-0.0164454039,-0.0213823989,0.0134303095,-0.0596735366,0.1503351182,-0.0821979418,0.0496682227,0.0163121745,0.2210627198,-0.001491594,0.0476048924,0.1278322637,-0.230670929,0.0251268279,-0.053784769,-0.0159929134,0.1401948333,-0.0255216919,-0.0331161283,-0.1795244813,-0.0252827071,-0.0842931792,0.05460646,-0.1220591366,0.0451191366,-0.0754726455,-0.0280101504,-0.0116331615,0.1252514422,-0.1379258931,-0.051644329,0.0044626002,0.050442487,-0.1263270378,-0.154613331,-0.0262035541,0.0436720401,-0.0608481504,0.0172631629,-0.0658859015,-0.0300612096,-0.2155193388,-0.1325807124,0.0211930908,-0.109276548,-0.0004297993,-0.1816090941,0.1629328579,-0.1397443563,-0.0093348846,0.0088352216,-0.0818665922,-0.0573094487,0.0217264444,0.073186323,0.0503154472,0.1178261265,0.0107705221,-0.1052918807,-0.1425316334,0.0278744996,0.0212670583,0.0639258325,-0.0482704565,0.019317979,-0.1275024265,0.0201630108,-0.0979964808,0.1903458387,0.0006481207,0.0186487678,-0.1411332935,0.1204570606,0.1603779346,0.0595004931,0.1574096978,0.1067285538,0.1962114573,-0.1019776687,-0.0306347981,-0.0161031093,-0.0792799592,-0.1376503706,0.0663787723,0.0901145712,-0.0287927706,0.0060595926,-0.0191144887,-0.1440715194,0.232831493,0.0309403874,-0.0763214752]],"hackathon_name":"AstonHack","index":953,"project_description":"Super fast email searching and sortingWe were fed up with how slow email clients are at searching through emails, especially when you have thousands in your inbox. There were no alternatives that we are aware of, so we decided to make our own!You can bring up a command palette to quickly perform functions on your emails. For example, to search for every email that contains the phrase \"twitter\", in the subject, sender, or body, case sensitive or not.Sublime Text, Atom, Node.JS, Electron, jQuery, HTML and CSS.IMAP is a right pain. Especially in javascript! Some inboxes still don't even work, and some stop half way through, for some unknown reason that we will fix in the future.Adding multiple accounts, OAuth login, sending emails (no time to add this! :c), draggable panes, etc.AstonHackI made the UI layout with HTML and CSS3, and implemented some of the jQuery responsible for the command palette.I worked on the IMAP backend, handling the downloading and caching of emails into the application.Tom Gardiner\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:28 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Email CMD","project_tags":["javascript","html","css","jquery","node.js"],"project_url":"https:\/\/devpost.com\/software\/email-cmd","keywords":"email,emails,especially,work,example,etc,even,every,fed,draggable,fix,functions,future,half,html,imap,electron,decided,inboxes,bring"},{"level_0":954,"hack_vector":[[0.1477314234,-0.1589097381,0.0123665519,0.0986811668,-0.05358034,0.1645268351,0.1593613476,-0.0778243765,-0.0394948311,-0.0225553252,0.0098922979,0.0579610988,0.1173094809,-0.0755607039,0.0144023281,0.0701208413,0.2488105744,0.0361419022,0.0587234236,0.0648033321,-0.1689441204,0.0159287378,-0.046345856,-0.0799597576,0.1613152921,-0.0167033523,-0.0595506169,-0.1933334172,0.0280452389,-0.0510640405,0.0175601896,-0.109924458,0.0862067044,-0.0508200563,-0.0429438055,0.0066508856,0.1458492577,-0.0949708894,-0.0054149427,0.1041884124,0.0575178042,-0.1545227915,-0.1824400127,-0.0351309739,-0.0732267722,-0.0278380197,0.0560230762,0.0100741312,-0.027590394,-0.1713540256,-0.0120325573,0.024902612,-0.1079522595,-0.0617103726,-0.0737897679,0.1315614432,-0.1442420334,0.096659489,-0.0194305275,0.073087424,-0.0086063789,0.0248064734,0.0389961749,0.0801939368,0.1426226199,-0.0590950474,-0.1439348906,-0.1699267328,0.0111299204,-0.0039690943,0.0712286234,-0.0374641083,-0.004089932,-0.1637504101,-0.0775923803,-0.0681778863,0.1953868121,0.0351164676,0.1159841865,-0.1331679374,0.1286939532,0.1540111899,0.0099372482,0.1478573531,0.1643738896,0.1346202344,-0.1602306962,0.0803674608,0.0222266801,-0.1210339144,-0.0765880868,0.1125840843,0.0246823989,0.016079016,0.1108655855,-0.122198388,-0.0341897942,0.1298479736,0.1168412641,-0.0377521254]],"hackathon_name":"AstonHack","index":954,"project_description":"Microcontroller-powered robot to check pipe faultsDropbox link to PowerPoint presentation: https:\/\/www.dropbox.com\/s\/6u7niytw9idh0y6\/Aston.ppt?dl=0AstonHackdeleted deleted\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:28 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Severn Trent Water Testing Robot Technology","project_tags":["node.js"],"project_url":"https:\/\/devpost.com\/software\/severn-trent-water-testing-robot-technology-zo1wem","keywords":null},{"level_0":955,"hack_vector":[[0.143244043,-0.098580122,-0.0232136399,0.0722140372,-0.0223862063,0.1449064165,0.1867372096,-0.0415122733,-0.0404621586,-0.0033495505,0.0333663933,-0.0467707478,0.1621963382,-0.0758381262,0.0623210892,-0.0022084911,0.2129698545,-0.0073179193,0.0591993928,0.1161645576,-0.2301699817,0.0333742537,-0.0477445684,-0.0103173815,0.1190362871,-0.0281452797,-0.0440420434,-0.1842630804,-0.0157334674,-0.0792968571,0.0739385337,-0.1101306751,0.0402404368,-0.0763952136,-0.0164622851,-0.0150919501,0.1225992143,-0.1264349371,-0.0535590164,-0.0050022355,0.0600500852,-0.1241566762,-0.1655851305,-0.010634386,0.0435109064,-0.0271318182,0.0154380416,-0.0794018209,-0.008377539,-0.2107670754,-0.1292730868,0.026357824,-0.1096044853,0.0053545255,-0.2023501694,0.1520864367,-0.1302262247,0.0042874054,0.0359508991,-0.0794041306,-0.0479582213,0.0328751355,0.087557584,0.05684679,0.119027622,0.0149915656,-0.0895069838,-0.1346408874,0.0217657126,0.0152011067,0.0678314343,-0.0219433643,0.0140002109,-0.1270497888,0.0093335174,-0.1133213192,0.1975520998,0.0045149191,0.0161888674,-0.1364798695,0.1223782897,0.1571239382,0.0522732399,0.1583572179,0.1311595887,0.2078876644,-0.090729259,-0.0424727909,-0.0263963044,-0.0780067071,-0.1465246081,0.0680247992,0.1004814059,-0.0317538381,0.0229992401,-0.0121889925,-0.1427629143,0.2328910083,0.028775394,-0.0716079026]],"hackathon_name":"AstonHack","index":955,"project_description":"An interface between Severn Trent and customers, encouraging them to help map pipe lines and track down problems.Better communication with customers\nReducing water consumption\nHelping provide uninterrupted water supply (identify pipelines and infrastructure)Users\nHunt manholes, gain points, rank up, get discounts\/vouchers\/swagIn android studio, using Java, with difficultyLeaning something new.Setting up android on 3 devices (a little time consuming)\nWorking out how to use GitHub, connecting Android Studio to GitHub, trying to pull... respositories.  Trying to make and push commits.\nLearning how to create an android app in a short time frame with no previous experience.Actually getting a working app with a wide variety of functions, includingAstonHackI did some of the app design\/development and strapped everybody's work together at the endI was the head of the graphical input. I was the one who designed all of the logos and ensured that all of the images would fit accordingly.Adam Woollen\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:29 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Water Reporter","project_tags":["java","android-studio"],"project_url":"https:\/\/devpost.com\/software\/water-reporter","keywords":"android,water,working,trying,github,studio,time,app,including,identify,infrastructure,discounts,hunt,helping,inspiration,getting,get,gain,functions,frame"},{"level_0":956,"hack_vector":[[0.1458535939,-0.1106755584,-0.0092159444,0.0599037297,-0.0277035143,0.147216171,0.1981681436,-0.0298902914,-0.0434624217,-0.0058561843,0.017955754,-0.0354330502,0.1442779899,-0.0820096284,0.0359428115,0.0395726636,0.239128232,0.0026721561,0.0558152683,0.1091403514,-0.2262446433,0.0297804624,-0.0544659942,-0.0305699799,0.1344039589,-0.0291000158,-0.0567601249,-0.1866088212,0.0043008495,-0.0994685367,0.0527432449,-0.1133283377,0.0538021848,-0.0771422237,-0.022172587,-0.0013626791,0.138155669,-0.1294228435,-0.0316038392,0.0241416991,0.0539011359,-0.1390028298,-0.1757671386,-0.0324948505,0.0300175864,-0.0508655384,0.0284169894,-0.053645432,-0.008082022,-0.2000433803,-0.0897896439,0.0218246914,-0.1125160605,-0.0054546581,-0.1731669307,0.153035447,-0.1561597437,0.0090160761,0.0258734617,-0.0493338145,-0.0466165915,0.0273120441,0.0812531337,0.0652805269,0.1315576881,-0.0121181076,-0.1109264866,-0.1549187154,0.0316931419,0.0192496199,0.0744136274,-0.0417686254,0.0005348749,-0.1316735744,-0.0075031756,-0.1165543646,0.1867010444,0.0220767818,0.0479015186,-0.1404798478,0.120083265,0.1610991657,0.0400047265,0.1584642678,0.1397625953,0.1835977286,-0.1224511191,-0.0087858317,-0.014010163,-0.1053184718,-0.1303982437,0.0775113553,0.0741598383,-0.0092449477,0.0279057194,-0.0343749374,-0.1294003576,0.1966270357,0.0624740608,-0.0641402826]],"hackathon_name":"AstonHack","index":956,"project_description":"Pipe discovery systemThe difficulties that there are from building on top of an archaic water system.Surveys the water system by allowing you to analyse the time take for the beacons to reach different points across the network.Using A mixture of cheap Arduino Hardware and A simple Python API.Communication between the front-end and back-end system was not possible to achieve in the time frame.The design suits that of Severn Trent water and everything is as simple as possibly can be.Sometimes it is best to drop a lot of useful features in the pursuit of something that works.Scaling up and finishing the interface to make the entire system simply work.AstonHackJack Stephenson\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:30 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Pierre\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:30 AM ESTHardware!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SevernTrentWater","project_tags":["python","flask","arduino"],"project_url":"https:\/\/devpost.com\/software\/severntrentwater","keywords":"system,water,simple,time,end,entire,design,different,difficulties,drop,works,cheap,everything,features,finishing,frame,front,communication,building,challenges"},{"level_0":957,"hack_vector":[[0.1569264084,-0.1194829419,-0.0231432021,0.0539711379,-0.0322889462,0.124393627,0.2011749595,-0.0151322419,-0.0202759579,-0.0024493462,0.025539536,-0.0445873924,0.1535043567,-0.0582197011,0.0830207393,0.0057032816,0.1959032863,-0.0066787116,0.0412512124,0.1062875837,-0.2374582887,0.0261313654,-0.0493839532,-0.0202359613,0.1060078442,-0.0425282642,-0.0245749038,-0.1779528111,-0.016353881,-0.0775945634,0.0680914372,-0.099013567,0.0215960927,-0.0800069422,-0.0291932281,0.006624023,0.1090973839,-0.1429917663,-0.0648271739,0.0122336363,0.0371146016,-0.127019003,-0.1468075365,-0.022243144,0.0493318439,-0.0609564446,0.0269530509,-0.0808054656,-0.0120742656,-0.2019748986,-0.1403535157,-0.0083249062,-0.1202587038,0.000410624,-0.1949710399,0.1537410915,-0.1396009475,-0.0197608992,0.042298615,-0.0824773312,-0.0794544965,0.0340475589,0.0805801526,0.0545860864,0.1155014858,0.0032555861,-0.10395208,-0.1246015653,0.0196371805,-0.0056544589,0.0512035266,-0.0437377617,0.0053129066,-0.1207921803,0.0051508103,-0.1373150796,0.2012463063,0.0068396721,0.0148828318,-0.1488404125,0.12983495,0.1723705679,0.0292392336,0.1536718458,0.1204959378,0.2128428966,-0.1044156551,0.0015769588,-0.0098484615,-0.0993761122,-0.1440256089,0.079977423,0.0841979533,-0.0136835389,0.0073434501,-0.0181446243,-0.1530352086,0.2251934409,0.0309058558,-0.0613632537]],"hackathon_name":"AstonHack","index":957,"project_description":"WarcraftCapgemini Data visualisation ChallengeDisplays Data Visually to allow people and interpret data in manner that is more precise and easier to see.Using Bluemix , VSJS and JSONChallenges were great, firstly I\u2019m overly new to javascript as a consequence it was a steep learning curve to be able to manage it into 24 hours.That i was able to write a program as efficiently as possible in a language that i wasn\u2019t overly familiar with.Bluemix , VSJS and JSON,Possibilities could be to allow users to add and edit nodes something which further enhance use of data manipulation. Colour variations could it vibrancy and help clients distinguish vast number of nodes more precisely and efficiently.AstonHackyacub elmi\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 09:13 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Warcraft","project_tags":["d3.js"],"project_url":"https:\/\/devpost.com\/software\/warcraft","keywords":"data,challenges,nodes,overly,efficiently,json,could,able,bluemix,allow,vsjs,capgemini,accomplishments,interpret,inspiration,hours,help,great,firstly,familiar"},{"level_0":958,"hack_vector":[[0.1477314234,-0.1589097381,0.0123665519,0.0986811668,-0.05358034,0.1645268351,0.1593613476,-0.0778243765,-0.0394948311,-0.0225553252,0.0098922979,0.0579610988,0.1173094809,-0.0755607039,0.0144023281,0.0701208413,0.2488105744,0.0361419022,0.0587234236,0.0648033321,-0.1689441204,0.0159287378,-0.046345856,-0.0799597576,0.1613152921,-0.0167033523,-0.0595506169,-0.1933334172,0.0280452389,-0.0510640405,0.0175601896,-0.109924458,0.0862067044,-0.0508200563,-0.0429438055,0.0066508856,0.1458492577,-0.0949708894,-0.0054149427,0.1041884124,0.0575178042,-0.1545227915,-0.1824400127,-0.0351309739,-0.0732267722,-0.0278380197,0.0560230762,0.0100741312,-0.027590394,-0.1713540256,-0.0120325573,0.024902612,-0.1079522595,-0.0617103726,-0.0737897679,0.1315614432,-0.1442420334,0.096659489,-0.0194305275,0.073087424,-0.0086063789,0.0248064734,0.0389961749,0.0801939368,0.1426226199,-0.0590950474,-0.1439348906,-0.1699267328,0.0111299204,-0.0039690943,0.0712286234,-0.0374641083,-0.004089932,-0.1637504101,-0.0775923803,-0.0681778863,0.1953868121,0.0351164676,0.1159841865,-0.1331679374,0.1286939532,0.1540111899,0.0099372482,0.1478573531,0.1643738896,0.1346202344,-0.1602306962,0.0803674608,0.0222266801,-0.1210339144,-0.0765880868,0.1125840843,0.0246823989,0.016079016,0.1108655855,-0.122198388,-0.0341897942,0.1298479736,0.1168412641,-0.0377521254]],"hackathon_name":"AstonHack","index":958,"project_description":"Microcontroller-powered robot to check pipe faultsDropbox link to PowerPoint presentation: https:\/\/www.dropbox.com\/s\/6u7niytw9idh0y6\/Aston.ppt?dl=0AstonHackdeleted deleted\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:28 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Severn Trent Water Testing Robot Technology","project_tags":["node.js"],"project_url":"https:\/\/devpost.com\/software\/severn-trent-water-testing-robot-technology-zo1wem","keywords":null},{"level_0":959,"hack_vector":[[0.143244043,-0.098580122,-0.0232136399,0.0722140372,-0.0223862063,0.1449064165,0.1867372096,-0.0415122733,-0.0404621586,-0.0033495505,0.0333663933,-0.0467707478,0.1621963382,-0.0758381262,0.0623210892,-0.0022084911,0.2129698545,-0.0073179193,0.0591993928,0.1161645576,-0.2301699817,0.0333742537,-0.0477445684,-0.0103173815,0.1190362871,-0.0281452797,-0.0440420434,-0.1842630804,-0.0157334674,-0.0792968571,0.0739385337,-0.1101306751,0.0402404368,-0.0763952136,-0.0164622851,-0.0150919501,0.1225992143,-0.1264349371,-0.0535590164,-0.0050022355,0.0600500852,-0.1241566762,-0.1655851305,-0.010634386,0.0435109064,-0.0271318182,0.0154380416,-0.0794018209,-0.008377539,-0.2107670754,-0.1292730868,0.026357824,-0.1096044853,0.0053545255,-0.2023501694,0.1520864367,-0.1302262247,0.0042874054,0.0359508991,-0.0794041306,-0.0479582213,0.0328751355,0.087557584,0.05684679,0.119027622,0.0149915656,-0.0895069838,-0.1346408874,0.0217657126,0.0152011067,0.0678314343,-0.0219433643,0.0140002109,-0.1270497888,0.0093335174,-0.1133213192,0.1975520998,0.0045149191,0.0161888674,-0.1364798695,0.1223782897,0.1571239382,0.0522732399,0.1583572179,0.1311595887,0.2078876644,-0.090729259,-0.0424727909,-0.0263963044,-0.0780067071,-0.1465246081,0.0680247992,0.1004814059,-0.0317538381,0.0229992401,-0.0121889925,-0.1427629143,0.2328910083,0.028775394,-0.0716079026]],"hackathon_name":"AstonHack","index":959,"project_description":"An interface between Severn Trent and customers, encouraging them to help map pipe lines and track down problems.Better communication with customers\nReducing water consumption\nHelping provide uninterrupted water supply (identify pipelines and infrastructure)Users\nHunt manholes, gain points, rank up, get discounts\/vouchers\/swagIn android studio, using Java, with difficultyLeaning something new.Setting up android on 3 devices (a little time consuming)\nWorking out how to use GitHub, connecting Android Studio to GitHub, trying to pull... respositories.  Trying to make and push commits.\nLearning how to create an android app in a short time frame with no previous experience.Actually getting a working app with a wide variety of functions, includingAstonHackI did some of the app design\/development and strapped everybody's work together at the endI was the head of the graphical input. I was the one who designed all of the logos and ensured that all of the images would fit accordingly.Adam Woollen\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:29 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Water Reporter","project_tags":["java","android-studio"],"project_url":"https:\/\/devpost.com\/software\/water-reporter","keywords":"android,water,working,trying,github,studio,time,app,including,identify,infrastructure,discounts,hunt,helping,inspiration,getting,get,gain,functions,frame"},{"level_0":960,"hack_vector":[[0.1458535939,-0.1106755584,-0.0092159444,0.0599037297,-0.0277035143,0.147216171,0.1981681436,-0.0298902914,-0.0434624217,-0.0058561843,0.017955754,-0.0354330502,0.1442779899,-0.0820096284,0.0359428115,0.0395726636,0.239128232,0.0026721561,0.0558152683,0.1091403514,-0.2262446433,0.0297804624,-0.0544659942,-0.0305699799,0.1344039589,-0.0291000158,-0.0567601249,-0.1866088212,0.0043008495,-0.0994685367,0.0527432449,-0.1133283377,0.0538021848,-0.0771422237,-0.022172587,-0.0013626791,0.138155669,-0.1294228435,-0.0316038392,0.0241416991,0.0539011359,-0.1390028298,-0.1757671386,-0.0324948505,0.0300175864,-0.0508655384,0.0284169894,-0.053645432,-0.008082022,-0.2000433803,-0.0897896439,0.0218246914,-0.1125160605,-0.0054546581,-0.1731669307,0.153035447,-0.1561597437,0.0090160761,0.0258734617,-0.0493338145,-0.0466165915,0.0273120441,0.0812531337,0.0652805269,0.1315576881,-0.0121181076,-0.1109264866,-0.1549187154,0.0316931419,0.0192496199,0.0744136274,-0.0417686254,0.0005348749,-0.1316735744,-0.0075031756,-0.1165543646,0.1867010444,0.0220767818,0.0479015186,-0.1404798478,0.120083265,0.1610991657,0.0400047265,0.1584642678,0.1397625953,0.1835977286,-0.1224511191,-0.0087858317,-0.014010163,-0.1053184718,-0.1303982437,0.0775113553,0.0741598383,-0.0092449477,0.0279057194,-0.0343749374,-0.1294003576,0.1966270357,0.0624740608,-0.0641402826]],"hackathon_name":"AstonHack","index":960,"project_description":"Pipe discovery systemThe difficulties that there are from building on top of an archaic water system.Surveys the water system by allowing you to analyse the time take for the beacons to reach different points across the network.Using A mixture of cheap Arduino Hardware and A simple Python API.Communication between the front-end and back-end system was not possible to achieve in the time frame.The design suits that of Severn Trent water and everything is as simple as possibly can be.Sometimes it is best to drop a lot of useful features in the pursuit of something that works.Scaling up and finishing the interface to make the entire system simply work.AstonHackJack Stephenson\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:30 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Pierre\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 07:30 AM ESTHardware!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SevernTrentWater","project_tags":["python","flask","arduino"],"project_url":"https:\/\/devpost.com\/software\/severntrentwater","keywords":"system,water,simple,time,end,entire,design,different,difficulties,drop,works,cheap,everything,features,finishing,frame,front,communication,building,challenges"},{"level_0":961,"hack_vector":[[0.1569264084,-0.1194829419,-0.0231432021,0.0539711379,-0.0322889462,0.124393627,0.2011749595,-0.0151322419,-0.0202759579,-0.0024493462,0.025539536,-0.0445873924,0.1535043567,-0.0582197011,0.0830207393,0.0057032816,0.1959032863,-0.0066787116,0.0412512124,0.1062875837,-0.2374582887,0.0261313654,-0.0493839532,-0.0202359613,0.1060078442,-0.0425282642,-0.0245749038,-0.1779528111,-0.016353881,-0.0775945634,0.0680914372,-0.099013567,0.0215960927,-0.0800069422,-0.0291932281,0.006624023,0.1090973839,-0.1429917663,-0.0648271739,0.0122336363,0.0371146016,-0.127019003,-0.1468075365,-0.022243144,0.0493318439,-0.0609564446,0.0269530509,-0.0808054656,-0.0120742656,-0.2019748986,-0.1403535157,-0.0083249062,-0.1202587038,0.000410624,-0.1949710399,0.1537410915,-0.1396009475,-0.0197608992,0.042298615,-0.0824773312,-0.0794544965,0.0340475589,0.0805801526,0.0545860864,0.1155014858,0.0032555861,-0.10395208,-0.1246015653,0.0196371805,-0.0056544589,0.0512035266,-0.0437377617,0.0053129066,-0.1207921803,0.0051508103,-0.1373150796,0.2012463063,0.0068396721,0.0148828318,-0.1488404125,0.12983495,0.1723705679,0.0292392336,0.1536718458,0.1204959378,0.2128428966,-0.1044156551,0.0015769588,-0.0098484615,-0.0993761122,-0.1440256089,0.079977423,0.0841979533,-0.0136835389,0.0073434501,-0.0181446243,-0.1530352086,0.2251934409,0.0309058558,-0.0613632537]],"hackathon_name":"AstonHack","index":961,"project_description":"WarcraftCapgemini Data visualisation ChallengeDisplays Data Visually to allow people and interpret data in manner that is more precise and easier to see.Using Bluemix , VSJS and JSONChallenges were great, firstly I\u2019m overly new to javascript as a consequence it was a steep learning curve to be able to manage it into 24 hours.That i was able to write a program as efficiently as possible in a language that i wasn\u2019t overly familiar with.Bluemix , VSJS and JSON,Possibilities could be to allow users to add and edit nodes something which further enhance use of data manipulation. Colour variations could it vibrancy and help clients distinguish vast number of nodes more precisely and efficiently.AstonHackyacub elmi\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 08, 2015 09:13 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Warcraft","project_tags":["d3.js"],"project_url":"https:\/\/devpost.com\/software\/warcraft","keywords":"data,challenges,nodes,overly,efficiently,json,could,able,bluemix,allow,vsjs,capgemini,accomplishments,interpret,inspiration,hours,help,great,firstly,familiar"},{"level_0":962,"hack_vector":[[0.1444957554,-0.148307696,0.0220042858,0.1055910364,-0.0540163815,0.1635053754,0.1587287784,-0.0556517951,-0.0371458791,-0.0298508946,-0.0054461127,0.0639901683,0.1183412299,-0.0829980597,-0.0251398347,0.0965268239,0.2645820379,0.047124926,0.0579983555,0.0633976161,-0.1614045203,-0.0006010723,-0.0490308218,-0.0744234696,0.1795361191,-0.0159542747,-0.0862006173,-0.1769049913,0.0475369617,-0.0697989017,0.0080345413,-0.0778973028,0.0939583033,-0.0442602895,-0.0415340029,0.033516027,0.1527592242,-0.0937072039,0.0204379074,0.1208552122,0.0544003882,-0.1431350708,-0.1858486831,-0.0258765146,-0.0724783465,-0.0431353934,0.0538311154,0.0106775919,-0.0081487512,-0.1747101992,0.0025199591,0.0497047268,-0.1040600538,-0.0791159794,-0.0656688213,0.1316672415,-0.1564201564,0.092954345,-0.0197381545,0.0857135355,0.0072383084,0.0415271409,0.0409366302,0.0846955776,0.1497134715,-0.0662050471,-0.1354384422,-0.1744380891,0.0044817613,-0.0097660078,0.0590302795,-0.0222933292,-0.0289071128,-0.1504347026,-0.0915627033,-0.0387707762,0.1911084503,0.0307279117,0.1155862659,-0.1451663673,0.1060222685,0.1423427314,-0.0022607103,0.1232171133,0.1617306769,0.1335506737,-0.147527501,0.0967477784,0.011373885,-0.1245556846,-0.0604395121,0.114995189,-0.0029062182,0.0478447787,0.1053454429,-0.1213252693,-0.0338227414,0.1091995686,0.1340876371,-0.031448815]],"hackathon_name":"HackTrain 2.0","index":962,"project_description":"Momi Air ProjectMomi Apps Smart Project 9-1-1HackTrain 2.0Momi Apps\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 07:35 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Frist Time Air 9-1-1","project_tags":["android"],"project_url":"https:\/\/devpost.com\/software\/frist-time-air-9-1-1","keywords":null},{"level_0":963,"hack_vector":[[0.1501928568,-0.1011044979,-0.0303580835,0.0395244919,-0.0265144296,0.1258955151,0.2002357841,-0.0095922081,-0.0226058587,-0.008348695,0.0098791681,-0.0741861984,0.1450508237,-0.0711539611,0.0746336058,0.0014581716,0.2012650967,0.0010063357,0.0492141396,0.1056240946,-0.2374957502,0.0297278464,-0.040030431,-0.0264220554,0.1041864231,-0.0339576453,-0.0295250397,-0.1807035655,-0.0121238315,-0.0746769831,0.0648959354,-0.1181499362,0.0198229253,-0.0820213705,-0.0199246723,-0.0077681569,0.1100910828,-0.148904264,-0.073400721,-0.0005983243,0.0318570398,-0.1404645592,-0.148775205,-0.0237287395,0.062188752,-0.0561582483,0.0093661174,-0.0832900926,-0.0077765868,-0.1949782819,-0.1496593356,0.0033194132,-0.1066814587,-0.0014694984,-0.205415085,0.1693501174,-0.1275558919,-0.0158533007,0.0370391421,-0.1015592888,-0.078971304,0.0252279472,0.0819987059,0.0630835295,0.1187145486,0.0179831982,-0.0963804871,-0.1259993911,0.0313727483,0.0176984537,0.076237224,-0.0535679273,0.0164383128,-0.123963356,0.030156374,-0.1418766975,0.1776190251,0.0010791756,0.0110306423,-0.1320068985,0.1282880157,0.1575020701,0.0642095655,0.1591757536,0.0932957307,0.2031775713,-0.0975648165,-0.0269562472,-0.0138218151,-0.0857150555,-0.141498059,0.0561924763,0.0915729627,-0.0450814366,0.0067969388,0.0076340865,-0.1618890762,0.2316393256,0.0119375894,-0.078904517]],"hackathon_name":"HackTrain 2.0","index":963,"project_description":"Rail engineering works will delay your journey. Subscribe to our feeds to avoid them.Our attempt to build a calendar feed with personalised disruption services has mostly failed due to lack of structured data.It is a demonstration of what disruption data feeds can look like with no complicated steps on the side of the data providers. Also a visualisation that can be built with ease using our purposed structure.Making good use of disruption data feeds, as the important bits of the data is not structured.We are building a demonstration of what can be done and attempting to convince the relevant people to adopt this new data structure, which will save months for many companies attempting to use this data.Open data is the first step towards useful things. The next step is to make this data structured and easily accessible. Our vision goes beyond disruption in rail services, we want to fix rail open data, one feed at the time.Moving to other open data feeds which are too hard to use, and make them actually useful, not just available.HackTrain 2.0I worked on the backend and cleaned up some dataI worked on design and interface.Vlad Velici\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 11:04 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Disruption Feeds","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/disruption-feeds","keywords":"data,disruption,feeds,open,use,structured,services,next,demonstration,rail,make,built,attempting,structure,feed,useful,step,complicated,ease,due"},{"level_0":964,"hack_vector":[[0.1342888027,-0.1190895438,-0.0163461547,0.0527968518,-0.0367096215,0.1501010209,0.1943319738,-0.0342710949,-0.0169539023,-0.0084922761,0.0228127837,-0.040128883,0.1463106126,-0.0804765522,0.0466558523,0.0488964655,0.2507787347,0.0230673701,0.0422046296,0.113574788,-0.221578002,0.036649771,-0.0526032485,-0.043310646,0.1214307845,-0.020123085,-0.049775295,-0.2002949119,0.0050996188,-0.0875122994,0.0526043549,-0.1301510483,0.0462323129,-0.0921374038,-0.018368246,0.0005631004,0.1286193579,-0.1328475773,-0.0380288772,0.0219044425,0.0292164702,-0.1512639821,-0.1770489812,-0.0387731604,0.0324041583,-0.0484339222,0.0323571377,-0.0417783447,-0.0388629064,-0.2018590271,-0.1093165576,0.0102291862,-0.1048982143,-0.0381907374,-0.1619285345,0.1567816585,-0.1186144948,0.0063487426,0.0258962195,-0.0509149618,-0.0473683104,0.0233906526,0.0852797404,0.0799909383,0.1165386215,-0.0115798423,-0.1026199162,-0.1495219171,0.0414698012,0.0090645486,0.072147809,-0.0504581109,0.0258039758,-0.1241380423,-0.0147025371,-0.1219805256,0.1837014556,0.0171589404,0.0436695032,-0.1423080266,0.1361718178,0.179027468,0.0470742434,0.167496413,0.1123044565,0.1788746864,-0.1199907064,-0.0161075071,-0.0063279509,-0.1016629562,-0.1302272677,0.0685687438,0.0669081733,-0.0184070896,0.04239792,-0.0325248316,-0.1262443066,0.1990072727,0.0434192307,-0.0811955333]],"hackathon_name":"HackTrain 2.0","index":964,"project_description":"Let\u2019s Travelhttps:\/\/richard140.typeform.com\/to\/OtqNeSOver 80% of customers search for Train Tickets and EXIT on the search results and also to  attract 87% of customers buying tickets at Train stations.Putting the human touch back to ticket purchasing experience.HTML5, Single page Web application, Responsive Web Design, Intelligent back end with personalised recommendationJavaScript issues & slow API connectivity.We built the solution by addressing the problem.Rail Travel can be Simplified and there is a lot more room for Improvement. And Let's Do IT.Display useful information about overcrowded trains from statistics on Tickets results page, even before user actually Buy their Train Tickets.Attract new customers with Cheapest\/Flexible Tickets by up-selling Rail-cards on Search Results and encouraging  customers to Buy Rail-cards  and get discounted tickets where applicable.HackTrain 2.01. Back-end server2. Integration with SilverRail APIRichard Townsend\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 22, 2015 05:49 AM ESTSome screenshots perhaps?Log in\n      or\n      sign up for Devpost\n      to join the conversation.Ajay Kumar Akkineni\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 09:42 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"JOURNEY","project_tags":["python","javascript","html5","silverrail-journey-planner"],"project_url":"https:\/\/devpost.com\/software\/journey-s6qmni","keywords":"tickets,customers,search,train,page,rail,results,web,attract,back,built,buy,cards,journey,single,com,home,get,flexible,experience"},{"level_0":965,"hack_vector":[[0.138263464,-0.1292443722,-0.0063630519,0.066518195,-0.0311701372,0.1490386277,0.1893095672,-0.0402836725,-0.014753799,-0.0490540117,0.0159220044,-0.0235801507,0.1363589466,-0.0762683749,0.0313152373,0.044089295,0.2533609271,0.0238814913,0.0459160693,0.1137533486,-0.218188867,0.0214706622,-0.0461086296,-0.052395273,0.1324731708,-0.0252010617,-0.0411996469,-0.1947784573,-0.0056702062,-0.0904543027,0.0380908363,-0.1115667671,0.0624486133,-0.0698514134,-0.0238751229,-0.0124887303,0.1331146955,-0.1325109303,-0.0357520841,0.0419598818,0.0437184833,-0.1353418678,-0.1711203307,-0.0410888717,0.0103008458,-0.0722659379,0.0384316593,-0.0357032567,-0.0350329801,-0.2191973776,-0.0941953436,0.0175975505,-0.1019072607,-0.0474051237,-0.1460087895,0.1646217555,-0.1336521953,0.0126954885,0.0179241039,-0.0407799408,-0.0501709431,0.0263446067,0.0688968375,0.0587234795,0.1225894168,-0.005432338,-0.1250195205,-0.1579897255,0.0278181415,0.013138785,0.0638850927,-0.04978659,0.0090832235,-0.1384731531,-0.0214809161,-0.0962619931,0.1936224699,0.0100242486,0.0605540983,-0.1497794092,0.1240115613,0.1702235639,0.0290736631,0.1641671658,0.12945351,0.1746118069,-0.1311336309,0.0070814393,-0.0218419693,-0.09956792,-0.1253918707,0.0838933736,0.0621266924,-0.0199847072,0.0321970843,-0.0545325503,-0.1211833432,0.1998376846,0.0593233071,-0.0745463446]],"hackathon_name":"HackTrain 2.0","index":965,"project_description":"Goodthing...for those who wait== READMEThis README would normally document whatever steps are necessary to get the\napplication up and running.Things you may want to cover:Ruby versionSystem dependenciesConfigurationDatabase creationDatabase initializationHow to run the test suiteServices (job queues, cache servers, search engines, etc.)Deployment instructions...Please feel free to use a different markup language if you do not plan to run\nrake doc:app.HackTrain 2.0Worked on the magic server side... oh the beatiful darwinAlex Kustov\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 11:27 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Goodthings","project_tags":["ruby","html","javascript","coffeescript","css"],"project_url":"https:\/\/devpost.com\/software\/cashtrain-server","keywords":"database,readme,run,would,engines,job,instructions,initialization,get,free,feel,etc,document,markup,doc,different,deployment,dependencies,creation,cover"},{"level_0":966,"hack_vector":[[0.138184458,-0.1100223958,0.000769485,0.0697394833,-0.0453420207,0.1531004757,0.1868332326,-0.037843246,-0.0285474695,-0.0224359222,0.0212815497,-0.0103760967,0.1445671618,-0.0711079389,0.0214881133,0.0490907431,0.2471046299,0.0235832129,0.0537350848,0.1159669012,-0.2142726183,0.0199872479,-0.0515306853,-0.0437359996,0.1265101433,-0.0193884261,-0.0651160255,-0.1794996709,0.0144958887,-0.1074770764,0.0364527628,-0.1084868163,0.0529329926,-0.0602384806,-0.0011543356,0.0013928805,0.1486339569,-0.1257554293,-0.0307028554,0.0458699204,0.0547843277,-0.1498005837,-0.1772093773,-0.0478985645,0.0038883649,-0.0628411174,0.0329742022,-0.0360980369,-0.0217711572,-0.1984305978,-0.0845689774,0.0276724752,-0.1095578745,-0.0338556208,-0.1676662266,0.1498634219,-0.1460387409,0.0089756167,0.0327127576,-0.029130144,-0.035007596,0.0227024481,0.0725266263,0.0677261874,0.1341306418,-0.0169563983,-0.1114425063,-0.1620995402,0.0267662685,0.0142299496,0.0710997134,-0.0464558974,-0.0033157405,-0.130397886,-0.0280099083,-0.1074132398,0.1870247126,0.026365418,0.0466934368,-0.1556415558,0.1103892997,0.1691181362,0.025758557,0.1588303596,0.1385270208,0.1853875518,-0.1427517086,-0.0104758106,-0.0164124183,-0.1117372438,-0.1262069046,0.0809216872,0.0584649704,-0.0043342612,0.0399988852,-0.0410341918,-0.1262497306,0.2051304877,0.0619628839,-0.067279309]],"hackathon_name":"HackTrain 2.0","index":966,"project_description":"Automating information collection and distribution for train carriage occupancy ratesAs the team formed during the #HackTrain2015, our combination of skills and interests led us to tackle the problem of real-time crowd counting and seat availability during train journeys in the UK. Vadim had prior experience working with beacons technology, Nick is already a hackathon war-hero and veteran, Marius is the laser-focused web-dev guy and myself, well, I'm soaking all that we're doing. Be it through business modelling, joining dev talks, searching for resources or APIs or writing our story. \nAs it unravels.waveRoll is a solution to one big pain point from UK's rails industry: counting in real-time the people from each carriage during a journey. Based on this, it can provide business insights for the train operators and it can also tell passengers where there is a high probability that they can get a seat. Before they board.We actually started having in mind the two elements, the silverrail API capabilities and the iBeacons techology. After quickly sketching up the requirements for a webAPI, talking about microservices, scalability, we thought more in depth about how we might get this in front of company executives and travellers alike.Getting into the core of waveRoll, there are a few considerations to be made. First, the analytics system is built around the Apache Kafka high-throughput messaging system, which is designed to efficiently aggregate massive amounts of data; its distributed nature allows capacity to be added simply by allocating nodes. \nFor data at rest, we are using ElasticSearch as our storage engine, which is similarly distributed and resilient. In a massive real-world deployment, we would likely abandon this prototype in favour of a higher performance database such as PostGreSQLWho doesn't love random technical incongruences on a Saturday evening during a 60h+ hackathon?\nThe actual JSON that we were receiving from the silverrail API, our beloved sponsor, was in the wrong format. The coordinates were almost unusable, save for a brilliant algorithm furiously typed by Nick, chief-in-hackathon.Now, I'm not saying that this was our best accomplishment. The actual greatness was for all 120 of us to be here, building and iterating over ideas. Beginners and artisans alike, contributing towards a palpable progress within an entire industry. In less than 3 days.As of now, we're still inching away in developing our beloved creation, making waveRoll robust and focused on solving a single paint point. \nIt's tomorrow when we'll demo it and all the cards will fall into place. For me, it already is a crazy learning experience which I will never forget. My only hope is that someday, I will be able to pass over what I've learned now to someone who, like me today, was given a chance to see product development at its best.HackTrain 2.0Nicholas Lee\n          posted an update\n\n          \n            \u2014\n            \n\n                Mar 06, 2016 07:59 AM ESTWaveRoll Connect made an appearance at the HackUPC Hackathon in Barcelona one or two weeks ago, and we've got the beginnings of our prototype ecosystem put together!Next week, we'll be running this at a startup competition, and then... Who knows!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Andrei Stroescu\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 22, 2015 05:30 AM ESTThe team just arrived in York. Last minute .key preparations.Log in\n      or\n      sign up for Devpost\n      to join the conversation.Andrei Stroescu\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 22, 2015 03:59 AM ESTJust left Newcastle onto our last 2 hours of coding and preparing.\nAnd then we'll PITCH!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Andrei Stroescu\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 22, 2015 02:50 AM ESTHouston, we have a BIG problem.\nFire-debugging mode on!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Vadim Drobinin\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 10:27 PM ESTWhile Andrei is peacefully sleeping, I will take over this feed and tell you a bit about the latest updates.So for now we're already showing heat maps of network latency times, and soon will be able to predict number of people inside carriages. Excited? Stay tuned!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Andrei Stroescu\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 08:31 PM ESTMacBook Air\/Pro overload!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Andrei Stroescu\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 08:18 PM ESTthings start to cool down.\nmy top priority? delivering an awesome pitch tomorrow at the demoLog in\n      or\n      sign up for Devpost\n      to join the conversation.Andrei Stroescu\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 07:48 PM ESTit's incredibly reassuring to hear completed checklistsLog in\n      or\n      sign up for Devpost\n      to join the conversation.Andrei Stroescu\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 07:31 PM ESTLog in\n      or\n      sign up for Devpost\n      to join the conversation.Andrei Stroescu\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 06:49 PM ESTLog in\n      or\n      sign up for Devpost\n      to join the conversation.Andrei Stroescu\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 05:17 PM ESTPitch slides structure almost ready!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Andrei Stroescu\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 04:59 PM ESTTo be remembered: \n\"Users should and WILL not notice any impact on device battery life or performance!\"Log in\n      or\n      sign up for Devpost\n      to join the conversation.Andrei Stroescu\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 04:24 PM ESTLog in\n      or\n      sign up for Devpost\n      to join the conversation.Andrei Stroescu\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 03:58 PM ESTLog in\n      or\n      sign up for Devpost\n      to join the conversation.Andrei Stroescu\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 03:42 PM ESTjust made our minds about how to pitch this wonderful tool that we're building so eagerlyLog in\n      or\n      sign up for Devpost\n      to join the conversation.Andrei Stroescu\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 02:27 PM ESTshould start as soon as we have the wifi passwordLog in\n      or\n      sign up for Devpost\n      to join the conversation.Andrei Stroescu\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 01:17 PM ESTwe're gonna pack in exactly 7 minutes to head on to the #2 location in our epic trip through Newcastle.p.s. still didn't solve the formatting issue between silverrail API and our JSON requirementsLog in\n      or\n      sign up for Devpost\n      to join the conversation.Andrei Stroescu\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 12:25 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"waveRoll","project_tags":["json","elasticsearch","flask","swift","silverrail-technologies","google-maps","javascript","html","css","jquery","python"],"project_url":"https:\/\/devpost.com\/software\/waveroll","keywords":"waveroll,real,hackathon,business,built,experience,nick,system,best,beloved,train,team,get,point,silverrail,seat,time,massive,api,focused"},{"level_0":967,"hack_vector":[[0.1572701484,-0.1478810459,0.0088485312,0.0853297785,-0.0513567664,0.1566928476,0.1751690507,-0.0353903584,-0.0273408368,-0.0404435024,-0.0028395939,0.0285102688,0.1317723095,-0.080088079,-0.0001278915,0.0796630085,0.2608498633,0.0433875471,0.0558303967,0.0945638046,-0.1945800185,-0.0021372263,-0.0512016863,-0.0714258924,0.1548905671,-0.0209038593,-0.072165437,-0.1778828651,0.0310985427,-0.0936485678,0.0115169222,-0.0890940279,0.0764363185,-0.0497225635,-0.0254477896,0.0170414113,0.1472985446,-0.1201882064,-0.0101054795,0.095241189,0.0590855032,-0.1374842525,-0.1781199276,-0.0356616005,-0.0341333598,-0.0650876239,0.0527116694,-0.0089620352,-0.0217236523,-0.1891510636,-0.0504458621,0.0346265882,-0.110399276,-0.0674581826,-0.103676863,0.1563446075,-0.14282538,0.0528281964,0.0004143491,0.0317823142,-0.021441035,0.0331394374,0.0470075235,0.0797732472,0.1458065808,-0.0401875302,-0.1378569156,-0.1712227464,0.0012197661,0.0006756215,0.0632910207,-0.0361613296,-0.0253591333,-0.1450371295,-0.0631409734,-0.0711061731,0.1960981041,0.0305404402,0.0799989179,-0.1525798142,0.11134848,0.1656201333,0.0015716803,0.1341502666,0.1476673186,0.1664838791,-0.1437844634,0.0610620715,-0.0015576113,-0.1194053218,-0.0905241668,0.1105906591,0.0215856656,0.0259183142,0.0702777877,-0.0888985172,-0.0775358751,0.1655262113,0.101775974,-0.0442688949]],"hackathon_name":"HackTrain 2.0","index":967,"project_description":"Providing passenger assistance when everything elThe current system does not elegantly handle changes. We want to fix that.HackTrain 2.0Robin Wohlers-Reichel\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 05:39 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"RailAssist","project_tags":["golang","objective-c","swift","mysql","redis","docker","ibeacon"],"project_url":"https:\/\/devpost.com\/software\/railassist","keywords":"want,system,inspiration,handle,fix,elegantly,current,changes"},{"level_0":968,"hack_vector":[[0.1472294629,-0.1442900896,0.0085742222,0.0824747756,-0.0517563447,0.1544565856,0.1759745628,-0.0332717486,-0.0220779777,-0.0379207954,-0.0036524737,0.0309281424,0.1265265197,-0.0772354007,0.0005695384,0.0805941671,0.257258743,0.0428068638,0.0526241101,0.0888743997,-0.1959773749,-0.0026232749,-0.0484579504,-0.0693861023,0.1478227377,-0.0212120935,-0.0725005418,-0.1759798825,0.0262407232,-0.08955881,0.0144284135,-0.088052012,0.0716108978,-0.0520889536,-0.0309693851,0.0163791161,0.1423088014,-0.120217748,-0.0082801171,0.0993641689,0.0503434651,-0.1377805918,-0.1811420321,-0.0394354202,-0.0308381338,-0.0693792254,0.0441930033,-0.0103455698,-0.0213097595,-0.1965930015,-0.0492209122,0.036197301,-0.1072646603,-0.0736858696,-0.1101620421,0.1569550633,-0.1462875456,0.0564386956,0.0011138926,0.0299280509,-0.0208096076,0.0349462815,0.0479322709,0.0795454904,0.1481571794,-0.0422012918,-0.1376643628,-0.1639966518,0.0127190761,-0.0022505957,0.0608066767,-0.0374372341,-0.0297964904,-0.1451075971,-0.0649126023,-0.0736522004,0.1986038387,0.0303656328,0.0817972869,-0.1608770043,0.114950113,0.1686141938,0.0078135934,0.1388380527,0.1489851475,0.1763052046,-0.1420989186,0.0562389567,0.0051742699,-0.1218839809,-0.1006957218,0.1026993841,0.0310069378,0.020181844,0.068787083,-0.0852309465,-0.0856396705,0.1615032703,0.0996002927,-0.0470837615]],"hackathon_name":"HackTrain 2.0","index":968,"project_description":"A hub for smart reschedulingThe train schedulers currently do not have nearly enough information readily available to make good decisions.HackTrain 2.0Jakub Langr\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 09:39 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"PlanAroo","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/planaroo","keywords":"train,schedulers,available,built,challenges,currently,decisions,enough,good,information,inspiration,learned,make,nearly,next,planaroo,proud,ran,readily,accomplishments"},{"level_0":969,"hack_vector":[[0.133360669,-0.1182964295,-0.0295473915,0.0303969532,-0.028844988,0.126242429,0.1895106733,-0.0260298848,-0.0083524948,-0.0274760593,0.025269974,-0.0538960956,0.1365165412,-0.0641232654,0.0643630102,0.0168603547,0.2302295268,0.0052437619,0.0388069041,0.1253118217,-0.2446731627,0.0342931263,-0.0309804305,-0.0367389061,0.0886247829,-0.0246713348,-0.0251829829,-0.1782424897,-0.0039060973,-0.1101234034,0.0530746765,-0.127051875,0.0260377303,-0.0814814791,-0.0023279244,-0.0324968137,0.111485295,-0.1476642042,-0.0661541298,-0.0104096746,0.0330684483,-0.1358670592,-0.1529805958,-0.0492273085,0.0532385297,-0.0615848303,0.0174594037,-0.0659074336,-0.0290954914,-0.2010820955,-0.1442223042,0.011413849,-0.102779448,-0.031441249,-0.1978574246,0.1645319611,-0.1111046448,-0.0324857906,0.0481319949,-0.0940464959,-0.0728391558,0.0238109529,0.0811190307,0.0608719215,0.0993444324,0.0224943385,-0.1041655689,-0.1319982409,0.0334770232,0.0281583797,0.0789651498,-0.0546362959,0.0322692059,-0.1188958138,0.012129779,-0.1427845061,0.1636859626,0.0093581332,0.0175321158,-0.1333792061,0.1277391315,0.1691451818,0.0392059423,0.1820715219,0.1042680144,0.189698115,-0.1110150963,-0.0422112457,-0.0315430164,-0.0727142096,-0.1367527097,0.0584796444,0.089137122,-0.0469010919,0.0023574103,0.0032084999,-0.1592141837,0.2218195796,0.0059761377,-0.0854393616]],"hackathon_name":"HackTrain 2.0","index":969,"project_description":"Integrated taxi sharingWeb AppMobile AppBenefitsWhat we are aboutSteve regularly commutes home from London to his local station, he normally arrives home in time for the last bus to his village but tonight his meeting overran and he needs a taxi. Arriving at his station, Steve joins a queue of 8 people also waiting for a ride home, in the cold and wet British weather.What Steve doesn't know is that Sally was on the same train visiting her Aunt  who lives just 3\/4 mile from Steve and she too is in the queue waiting for a taxi.Wouldn't it be great if there was some way that Steve and Sally could identify their common destination and share a single taxi there.Traxi brings people together to share taxi rides to their final destination, reducing costs to passengers and giving them a more integrated stress free travel experienceJust by visiting the Traxi webapp Steve and Sally can enter a few basic details and they will then get notified of passengers who could potentially share a ride. All that is left to do is meet up and share that ride to their final destinationThe technology behind traxi is a spatial aware Geofire database, cloud hosted for scalabiliy both up and out. Utilising APIs from google and Uber, Traxi uses its search algorithm to match people to their taxi needs.\n...Reliance on connectivity during trials\nUber API different across platforms\n.Net support for Geofire\nLearning new apis, development platforms\nIdentifying our business model\n...Managing to focus on a specific problem and producing a tangible solution\nFeedback from customers trialed on train from Kings Cross to YorkData connectivity is sketchy at best on the rail network.\nThere are so many \"what-ifs\" to considerThe initial proof of concept is targeting rail journeys and bringing passengers together on the same train, in the future, our matching technology can be extended to pre-booking and make the vision of door to door booking a reality. Beyond that, the other markets that this technology can reach are huge, airports based on flight arrivals to hotels, major events, ferry terminals, just about anywhere where you have a volume of people looking to move to similar locations by a taxi.HackTrain 2.0I worked on the windows phone app and the business modelWeb app. Database backend. Getting it all working. Making stupid comments.Lead the team, developed our idea and business model, delivered our pitchBen\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 22, 2015 06:46 PM ESThttp:\/\/traxi.taxiLog in\n      or\n      sign up for Devpost\n      to join the conversation.Simon Davis\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 22, 2015 04:25 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Traxi","project_tags":["google-places","uber","c#","javascript"],"project_url":"https:\/\/devpost.com\/software\/traxi-ewp78u","keywords":null},{"level_0":970,"hack_vector":[[0.1416262537,-0.0878326148,-0.0161595531,0.0671664774,-0.0239726547,0.1433301568,0.2119289041,-0.0293302443,-0.0393126644,0.002240391,0.0100668864,-0.0491489805,0.1515430063,-0.0779582709,0.061200805,-0.0055905469,0.2042130232,0.0027778784,0.0557957999,0.1123313382,-0.2197284997,0.050802663,-0.0580793768,-0.0170421209,0.136291787,-0.0164669883,-0.050541129,-0.1809169948,-0.0100646187,-0.0700483248,0.0608045422,-0.1290923506,0.0375027284,-0.0767015144,-0.0204986837,0.0139583815,0.1409191489,-0.1320881993,-0.0563406646,0.0114244828,0.0477962531,-0.1599598676,-0.16009821,-0.019630868,0.0265953839,-0.0415615849,0.0104163876,-0.0777763203,-0.0065865214,-0.1904913336,-0.1269004941,0.0265524015,-0.1193467602,0.0273876358,-0.180275023,0.1434661746,-0.160972923,0.0048564766,0.0236778576,-0.0814049765,-0.0635723993,0.0380769372,0.0875153169,0.0614290386,0.1244597882,-0.0002777865,-0.0937874317,-0.1368332505,0.0269528106,0.0108266063,0.0609431528,-0.0452383123,0.0244075898,-0.1237315908,0.0304816253,-0.1183950901,0.187411204,0.0084782662,0.0228878967,-0.144252941,0.1285428256,0.1472696215,0.0824061781,0.1459344476,0.1183701381,0.1965572685,-0.1067191958,-0.028377492,0.0065902998,-0.0903995484,-0.1378483921,0.0603845939,0.0981444418,-0.0254897866,0.0341374762,-0.0150921233,-0.1517087221,0.2271122634,0.0261930581,-0.0632081255]],"hackathon_name":"HackTrain 2.0","index":970,"project_description":"Using CCTV feeds and image detection software to solve overcrowding in trainsOne of the problems that many train operators have been facing is the lack of real-time passenger volume data. Taking into consideration infrastructure and cost constraints, we decided to build a solution that leveraged upon CCTV image feeds to calculate in real-time the level of crowdedness in carriages.We created an image parser using python and opencv. The data output was piped into a postgresql database. A node server was then used to call the data and create a REST API. Finally, we also built an android app that called the API that had been exposed.HackTrain 2.0android displaybusiness model + pitch + interaction designinitial idea + computer vision + demo videobackend + part of pitch deckDavid Yong\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 22, 2015 05:49 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Trainlicious","project_tags":["node.js","opencv","python","android","bluemix","heroku","postgresql"],"project_url":"https:\/\/devpost.com\/software\/trainlicious-mva0je","keywords":"data,api,time,real,image,volume,cost,feeds,facing,exposed,decided,database,crowdedness,created,create,cctv,constraints,consideration,carriages,called"},{"level_0":971,"hack_vector":[[0.135827288,-0.1322517842,-0.0220104773,0.046379216,-0.0405977741,0.1270441413,0.1972133219,-0.0180173162,-0.004878582,-0.0320596471,0.0191851873,-0.0319431201,0.136398077,-0.0654634163,0.0530775599,0.0267032441,0.2237352878,0.0153981512,0.0420103259,0.1196202487,-0.2399616688,0.0242801178,-0.0389110483,-0.0362908244,0.1118324026,-0.0249281134,-0.031510625,-0.185364455,-0.0016224771,-0.0942298397,0.0383446664,-0.1188365966,0.0311565883,-0.0777601376,-0.0077757807,-0.0141427377,0.1197963357,-0.1565631777,-0.0637829527,0.018666245,0.0267927591,-0.141752094,-0.1584551632,-0.0477390848,0.0351371728,-0.0794720352,0.0271842536,-0.0561526567,-0.0294504035,-0.2094354331,-0.1300081164,0.0091377022,-0.1076350883,-0.0370986499,-0.1876467317,0.1704431027,-0.1236861274,-0.014325751,0.0398410298,-0.0779729858,-0.0749210119,0.0240677129,0.06983082,0.067759566,0.1076836661,0.0167240929,-0.1083243117,-0.1387235224,0.0354673415,0.0078071696,0.0644667968,-0.0603693984,0.0217157025,-0.1247251257,0.002189754,-0.1265956461,0.176692158,0.0089721922,0.0374430753,-0.1458573341,0.1203964353,0.1705664098,0.039532613,0.1672744304,0.1115975827,0.1898867041,-0.1239643842,-0.022599319,-0.0217915215,-0.0883476585,-0.1331606209,0.0750435144,0.0807936043,-0.0377968661,0.0124830129,-0.0262230895,-0.1483977288,0.2085543573,0.0257513635,-0.0714865997]],"hackathon_name":"HackTrain 2.0","index":971,"project_description":"IR-based passenger counting and generalised API for tracking train loadingWhen planning, Train Operating Companies need to know:\n    Can we adjust pricing to manage demand?\nIf journeys are full for part of the route, should we run short-haul shuttles?When booking, Passengers want to know:\nWhich trains are less crowded?When at the station, Passengers want to know:\n    Will I get a seat?\nWhich coaches will be less crowded?\nWill the train after this one be less crowded?\nShould I get another coffee and wait?Infrared (thermal) cameras have reduced dramatically in size and cost.  This project trials a commercially available camera to determine its ability to identify and count boarding passengers.  We also build an API to support passenger counting regardless of source to serve queries on historical data for planning and booking and to serve near real-time data for query by apps serving passengers in transit.HackTrain 2.0Paul Webb\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 22, 2015 05:55 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"CrowdCount","project_tags":["ruby-on-rails","android"],"project_url":"https:\/\/devpost.com\/software\/crowdcount","keywords":"know,passengers,less,train,get,crowded,want,booking,planning,passenger,seat,serve,data,one,trains,demand,cost,determine,dramatically,full"},{"level_0":972,"hack_vector":[[0.1421162933,-0.151219666,0.024081938,0.1007401794,-0.058498472,0.1597185135,0.1551462561,-0.0554966815,-0.0349071249,-0.0314739682,-0.0088160923,0.0676568151,0.1193264723,-0.0809318125,-0.0261399467,0.1081840172,0.262689203,0.0495768972,0.0540244505,0.0615292601,-0.1556939036,-0.0058451793,-0.0532751754,-0.0784964189,0.1791446507,-0.0149053633,-0.0879982114,-0.1678680331,0.0500852093,-0.0706917346,0.0028533391,-0.0742965192,0.0941538587,-0.0373742767,-0.0403818786,0.0328157581,0.1515148729,-0.0872176886,0.0266030598,0.1236993372,0.0558294617,-0.1394736767,-0.1869688779,-0.0275212955,-0.0815389827,-0.0492169112,0.0570791736,0.018320784,-0.007857359,-0.1646150053,0.0145744858,0.0465165079,-0.1018135548,-0.0811712667,-0.0552503653,0.1329780668,-0.1572517753,0.095438078,-0.0212606806,0.0961196199,0.0073626298,0.0433359519,0.037022762,0.0854304284,0.1493868381,-0.0712058246,-0.1407880038,-0.1804857999,0.0040490613,-0.0077130939,0.058805652,-0.021357866,-0.0349180624,-0.1478127539,-0.1001378968,-0.0333013199,0.1908523887,0.0342755914,0.1196314991,-0.1413226873,0.0995683074,0.1424792111,-0.006773971,0.1121344268,0.1622623503,0.1283673346,-0.1520215422,0.1037843302,0.0163413361,-0.1300438493,-0.0521236733,0.1172230914,-0.0093466258,0.0511056408,0.1091882512,-0.1231100559,-0.0316957273,0.1059885621,0.1397268772,-0.0310322139]],"hackathon_name":"HackTrain 2.0","index":972,"project_description":"HackTrain 2.0 ProjectHackTrain 2.0 ProjectHackTrain 2.0Hannah Blair\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 22, 2015 04:24 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"TripTrack","project_tags":["meteor.js"],"project_url":"https:\/\/devpost.com\/software\/tiptrack","keywords":"triptrack,project,hacktrain"},{"level_0":973,"hack_vector":[[0.1567264497,-0.1342381984,0.0133956578,0.0994940177,-0.0235518161,0.186831966,0.1748759598,-0.0824758932,-0.0472150631,0.0016760138,0.0264477488,-0.0124222888,0.1494570076,-0.0970890597,0.0245316941,0.0390488543,0.2444767356,0.0077923872,0.071406655,0.0680907071,-0.1885133684,0.0563437976,-0.0581422746,-0.0373171903,0.1767556816,-0.0366513021,-0.0607670844,-0.2087267488,-0.0026781363,-0.0442882031,0.0636113733,-0.1214605868,0.0831888989,-0.0745913312,-0.0615377985,0.0051108133,0.1547711939,-0.1044559255,-0.0129963737,0.042887114,0.0558488294,-0.1515969634,-0.1812004596,-0.0072304746,-0.0219676048,0.0038215886,0.0365295038,-0.0203308742,-0.0151744271,-0.1841273606,-0.0590225533,0.0418963879,-0.118993111,0.0070560686,-0.1252341419,0.1177114621,-0.1535185874,0.0648310483,-0.0054489542,0.0101150926,-0.024230469,0.0243890621,0.0782821774,0.0748682916,0.1329605281,-0.0307219736,-0.1085116863,-0.1632433236,0.0064357808,0.0158770233,0.0796066001,-0.0352065004,0.0301765967,-0.1540864706,-0.0297782645,-0.075677909,0.2076530308,0.0155969579,0.0818348154,-0.1308751106,0.1426313668,0.1470140517,0.0356364287,0.1494921148,0.1500086039,0.1507906169,-0.1339861751,0.0154423937,0.0049402378,-0.1071647555,-0.1064850092,0.0893456861,0.0459420867,-0.0059555047,0.0914785862,-0.0779130906,-0.0580809489,0.1701975763,0.0991721153,-0.0595419221]],"hackathon_name":"HackTrain 2.0","index":973,"project_description":"The future of local communication in trainsPRESENTATION HERE!\nBUBBLE UP EVERYBODY!https:\/\/www.dropbox.com\/sh\/871fxx449fbms26\/AAC9psQympMgB_2Pf8SkVrUoa?dl=0Format : Zipped Keynote and PDF \/ Zipped PDFHackTrain 2.0Front-end web development, pitcher, UI\/UXResponsible of the design and UI\/UX-parts!Worked on the Business model, Innovation pottential, Interviews, Raspberry Pi setupDeveloped the Android application and the NodeJS server.Andreas Gr\u00fcnewald\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 22, 2015 06:51 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Team Bubble","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/presentation-j2p3xw","keywords":"zipped,pdf,fxx,bubble,com,dl,dropbox,everybody,fbms,format,https,www,keynote,pf,presentation,psqympmgb,sh,skvruoa,aac"},{"level_0":974,"hack_vector":[[0.135340184,-0.1088634506,-0.0206871331,0.0151868528,-0.018085463,0.1191819534,0.19355461,-0.0267705694,-0.0003480791,-0.0325325765,0.0229558405,-0.0714522302,0.1371959597,-0.0650494099,0.0644924194,0.0224063471,0.2121022344,-0.005645337,0.0384651423,0.1410672963,-0.251612246,0.0297399834,-0.0389580727,-0.027702149,0.0857382193,-0.035163641,-0.0215450674,-0.1661033779,-0.0179901011,-0.1063623726,0.0497060828,-0.1067817658,0.0230852533,-0.0788619816,0.0039312528,-0.0365341976,0.1037426963,-0.158371076,-0.067158483,-0.0244111791,0.0299396869,-0.1344091445,-0.1458474547,-0.0484902896,0.0719420463,-0.0674292147,0.0110168206,-0.0791070238,-0.0283188336,-0.209486559,-0.1595982462,0.0202073921,-0.1077949107,-0.0176947657,-0.2128496468,0.1696877182,-0.1092797518,-0.044094149,0.0526025258,-0.1169314757,-0.0767823681,0.0192904491,0.0767978206,0.0526466258,0.0913518593,0.035059914,-0.100818783,-0.1249060854,0.031918671,0.0286744181,0.0717377737,-0.0565293282,0.0320751779,-0.1155488193,0.026784461,-0.1304896921,0.1553215235,-0.0075273872,-0.0029386641,-0.131606549,0.11615742,0.1603400111,0.0437455587,0.1669373065,0.0876974389,0.2022980452,-0.0947613269,-0.0537699424,-0.037288826,-0.0580778569,-0.1406646818,0.0515865013,0.0932871699,-0.0593610369,-0.0237901974,0.016472511,-0.1714269668,0.2291406989,-0.0081061125,-0.0810201913]],"hackathon_name":"HackTrain 2.0","index":974,"project_description":"Making rail travel an unforgettable experience by connecting passengers to each other.Why are people having fun in packed pubs, gruesome standing times for royal events or even new years eve fireworks, and always complain about trains? They practically have the same conditions. Well, it's because they are in good company with friends and other people who celebrate the same thing. Why cant we have this kind of environment for trains? We want to start pioneering that shift of mindset through our app ChatPoint.ChatPoint is an application that encourages customers to socialize with others on a train by providing them a platform to chat with other people they could possibly get along with.Using JavaScript at the client side to display data and node.js on the server side to manage distribution of messages.Most customers described their train rides as \"long\", \"dull\", and \"boring\".And contrary to popular belief, they do talk to other people on the train. But only if the coversation was started by the other person.We found it interesting that only 2 out of the 12 people we physically approached declined a chat with us for the survey.Most of them are open to chatting especially when they are interested on the topic.Chat point would be a great tool for them to pass their time on the train.Since we have a huge collection of customer data, train companies can now adjust certain strategies accordingly. For example some months could be lean seasons and some unknown tourist destinations could only have a few passengers.Through the app's backend analytics, you could see patterns of certain type of people who use the trains that you couldn't have guessed normally. So you could adjust the marketing accordingly.You could also see patterns of people's behaviour and their sentiments so you could also adjust operations accordingly.We would have certain chat topics that are sponsored by brands and people would get certain perks if they participate in the discussion such as a discount on the ticket or in shops. So it's kind of an ad but not really because based on their likes, people would want to participate in the discussion.Based on our survey, the 70% of yes' was raised to 93% when the concept of discounts was introduced.HackTrain 2.0I worked mainly on the backend, getting the chat clients communicating with one another through the server.Cameron Wright\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 22, 2015 07:00 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ChatPoint","project_tags":["html","css","javascript","node.js"],"project_url":"https:\/\/devpost.com\/software\/chatpoint-rxnck9","keywords":"people,could,train,would,chat,certain,trains,accordingly,data,adjust,also,chatpoint,discussion,want,participate,see,survey,patterns,kind,based"},{"level_0":975,"hack_vector":[[0.1462090313,-0.0944578648,-0.0270631257,0.0250335578,-0.0127834883,0.1320116371,0.2188796401,-0.0266459752,-0.028270036,0.0153467134,0.0253099054,-0.0793967173,0.1303544641,-0.0665976107,0.0854398757,0.0071417498,0.2019808739,-0.0045152535,0.0329089426,0.1202054247,-0.2412016988,0.046157673,-0.0479853898,-0.0243454427,0.0921188742,-0.0187920034,-0.0190906562,-0.1936097592,-0.0204781331,-0.0855075195,0.0750269666,-0.1302774251,0.0262612086,-0.1085347086,-0.0234278832,-0.0167630631,0.1013444588,-0.1441035569,-0.068223834,-0.0180466212,0.02400456,-0.1399698704,-0.1387500912,-0.0330170393,0.0793531239,-0.0446160771,0.0077298535,-0.0798351616,-0.0279118326,-0.203491345,-0.1405556649,-0.000815893,-0.1080403253,0.0127251754,-0.1826648265,0.1587962508,-0.1280973554,-0.0178190209,0.0285314564,-0.1131163612,-0.0709884167,0.0186442155,0.0921322852,0.060989283,0.1070613489,0.0066927136,-0.0994782075,-0.1112410575,0.044707153,0.0169423651,0.0629028231,-0.0506990738,0.032483235,-0.1192210093,0.0303374268,-0.1554643363,0.1643909365,0.0057177157,0.0131412419,-0.1300451607,0.1411563754,0.1579717845,0.0792308673,0.1645740122,0.095596388,0.1969639957,-0.0890776515,-0.0424116738,-0.008336491,-0.0762937218,-0.1601306498,0.0483246967,0.1073224545,-0.0520751402,-0.0089875078,0.0209300853,-0.152151823,0.209370926,-0.0030437652,-0.0731536672]],"hackathon_name":"HackTrain 2.0","index":975,"project_description":"We're making train station ticket terminals faster and easier to use through voice input interfacing.We're making the ticket purchasing experience quicker, more intuitive, and more accessible. Using voice analysis we are able to provide travelers with exactly what they want and in a matter of seconds, rather than wasting their time with clunky interfaces that create stress and long queues.Train of Thought is built by integrating advanced speech recognition API's, IBM's Watson Artificial Intelligence services including the Natural Language classifier and the SilverRail API to pull up to date information about train routes and schedules in the United Kingdom. As a voiced based application, we focussed on an ultra-high accuracy of speech-to-text transcription using Google's new web speech API. The accuracy is above 90% for most accents and use cases, and we achieved 100% accuracy for most tests and common queries. IBM's Natural Language classifier service, a part of the Bluemix basket of Watson service, then run the transcribed speech through a classifier that we trained to recognize common customer queries at kiosks such as route finding, ticket purchasing and ticket printing based on a pre-booked purchase and reference number. The confidence index for most results returns by the classifier is over 98% due to the extraordinarily well trained, machine learning service that we built and integrated.  Once queries are classified, the Dialog AI service from Watson is used to provide a fast and accessible interaction with the customer to buy tickets, see route information or print pre-booked tickets. For ticket purchasing and routing, the SilverRail API is called to get the up to date routes between two locations which are extracted from the transcribed text.A seamless, fast and accessible user experience. Buy a ticket in less than 10 seconds.HackTrain 2.0Designed the UI\/ UX for interaction with the voice controlled system + rendering of proposed kiosk design.I worked on the back - end of the system implementing the functionality to be able to route  the cheapest\/fastest trains from a station to another as well as book the ticket. To do that I used silvercore api and python flask.Integrated IBM Watson Natural Language classification to classify customer request such as ticket purchases, route info and ticket printing.Karan Chaitanya Mudgal\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 22, 2015 06:56 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Train of Thought","project_tags":["ibm-watson"],"project_url":"https:\/\/devpost.com\/software\/train-of-thought","keywords":"ticket,api,classifier,service,speech,accuracy,accessible,watson,queries,purchasing,customer,buy,pre,route,experience,common,date,seconds,fast,natural"},{"level_0":976,"hack_vector":[[0.136137709,-0.1039351746,-0.0160874166,0.0471637212,-0.0226501152,0.1320484579,0.2133418471,-0.0303899702,-0.0375037678,0.0053417557,0.0150211696,-0.0401566103,0.133439973,-0.0767844692,0.0591844097,0.0170734227,0.2251738608,0.0035123511,0.0495741963,0.1144592091,-0.2369887531,0.0557570048,-0.0357571281,-0.0387820415,0.1074386686,-0.014794643,-0.0404226109,-0.1930871904,0.0076937517,-0.0840574801,0.0575003698,-0.1368722618,0.0384146757,-0.0918604806,-0.0209436752,-0.0180641338,0.1267124712,-0.1408428103,-0.0603105873,0.0101675307,0.031824369,-0.1716000438,-0.1546781659,-0.0444343425,0.0453947634,-0.034200266,0.0097342404,-0.0698061511,-0.0180627629,-0.1902718395,-0.1180788055,0.0165330451,-0.1142948493,0.0001185047,-0.1770229489,0.1500405669,-0.1440462023,0.002742786,0.0313738212,-0.0781249553,-0.0605888963,0.0273471829,0.0906607658,0.0680091903,0.1186693683,-0.0077553736,-0.1056828573,-0.1311582178,0.0457096361,0.0233258586,0.0726212114,-0.0576285757,0.0269026197,-0.1327416897,0.0095789563,-0.1492907703,0.1653490067,0.0120330742,0.0394613147,-0.1364447623,0.1452713907,0.1536974013,0.070503898,0.1691766381,0.1149383634,0.1853633672,-0.11807587,-0.0205074549,-0.0042662551,-0.090910092,-0.1440186203,0.0569895208,0.0901579112,-0.0405883081,0.0273049902,-0.0036392789,-0.1444815397,0.1904917061,0.0273285434,-0.0642035082]],"hackathon_name":"HackTrain 2.0","index":976,"project_description":"Dynamic train service schedule recoveryRICCS is an automated train service disruption solver. Train service disruptions occur for many reasons, including train malfunction, accidents, congestion and human error. When disruptions occur, the resulting delays propagate to other trains operating on the same line. This problem is one of the biggest in the rail industry today. A common solution is to re-route trains and reshuffle staff rotas to minimise the effect of a disruption. This is currently done manually, on an ad-hoc basis by dedicated teams. RICCS uses a mathematical constraints model that takes into account routes, trains and staff in order to optimise the schedule given a service disruption scenario as input.HackTrain 2.0Built the web application and required plumbing components - parsing model output into a timeline of train and staff positions. Integrated National Rail API with Google Maps API to create a visualisation of model output.Designed the mathematical to solve the problemNick Tikhonov\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 22, 2015 08:04 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"RICCS","project_tags":["python","flask","javascript","bootstrap"],"project_url":"https:\/\/devpost.com\/software\/riccs-cfpbsz","keywords":"riccs,train,service,trains,disruption,occur,disruptions,staff,industry,input,human,hoc,given,error,effect,done,including,uses,delays,malfunction"},{"level_0":977,"hack_vector":[[0.1360626519,-0.1059895232,-0.0421347991,0.0294417609,-0.0348360911,0.1262334883,0.1913992018,-0.0230319872,0.0122924047,-0.0411748216,0.0095841531,-0.0525446162,0.1274614185,-0.0505895391,0.0517588332,0.0219953451,0.2239044756,0.0107995886,0.0360791236,0.1329813153,-0.2455547154,0.0106326081,-0.0372900665,-0.0176494401,0.0998045206,-0.0169464238,-0.0239573456,-0.1615705192,-0.0065209209,-0.1118133068,0.0460695848,-0.1179533526,0.0249461345,-0.0774568096,0.0030540754,-0.0177052822,0.1157297045,-0.1501662731,-0.0646244958,0.0021526245,0.0324806347,-0.125666976,-0.1451781243,-0.0507798903,0.0538095199,-0.0942013562,0.0162731037,-0.0621842965,-0.0282129738,-0.2123991251,-0.1498768032,0.0090323742,-0.1029003337,-0.032867182,-0.1968942583,0.1630389243,-0.1175821871,-0.0442327335,0.0520002954,-0.0959496424,-0.0803858265,0.0276072733,0.0702363327,0.0494321883,0.1048138291,0.0234928466,-0.1101865098,-0.1381653249,0.0312467869,0.0242475029,0.0652494207,-0.0566141568,0.022704836,-0.1175937876,0.0057993256,-0.1250064373,0.1775301993,0.0068965862,0.0159317479,-0.1466622502,0.1002563313,0.1644142121,0.0311207976,0.1768443584,0.1035531461,0.1938071102,-0.1140601784,-0.0259794611,-0.0367886722,-0.074888505,-0.1330048144,0.0741423145,0.089489162,-0.0350916609,-0.00610587,0.0048486786,-0.1613630503,0.2449818999,0.006804036,-0.0810279474]],"hackathon_name":"HackTrain 2.0","index":977,"project_description":"Wireless, no cost, saves your from getting lost.Maps are difficult to navigate around, and for tourists; it can be, aggravating to do so. Even Londoners may find it troubling, we can all agree that London can be confusing, and we\u2019ve finally found the solution to the problem. We\u2019ve created an idea of using and coding QR codes which can be scanned by any Smartphone and can redirect you to a vast information database that will give you directions, opening times and any additional information about any place. Now, why don\u2019t people just Google it? With QR codes it makes things faster and simple, we can cut out the middle man and save you a lot of time. With billboards in key areas of London, QR codes will provide a fast alternative for looking at a map for 10 minutes.HackTrain 2.0Sumaan Khokhar\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 22, 2015 08:09 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Tapp On","project_tags":["php5"],"project_url":"https:\/\/devpost.com\/software\/tap-on","keywords":"codes,qr,london,information,directions,key,idea,google,give,found,find,finally,faster,fast,even,vast,difficult,londoners,cut,created"},{"level_0":978,"hack_vector":[[0.1263821721,-0.0840378776,-0.029058123,0.0346067064,-0.0170290861,0.1142164096,0.1991293579,-0.0117488392,-0.0385711901,0.0046924283,0.0175857898,-0.0857950673,0.1448804289,-0.0622475073,0.0825738162,0.0060199909,0.2053212374,-0.0070268493,0.0410252959,0.1324816793,-0.235935539,0.0539650619,-0.0476094261,-0.0132163931,0.1016523466,-0.0229453165,-0.0327576324,-0.18363747,-0.0193396416,-0.0800137594,0.0714852512,-0.1271716952,0.0213279445,-0.0871668607,-0.0098626837,-0.0095339892,0.1117077321,-0.1372545958,-0.0603491589,-0.0158640873,0.0255354028,-0.1561166942,-0.1585078239,-0.0370358117,0.0654825717,-0.0557390675,0.000941401,-0.0879435539,-0.0054393616,-0.198795259,-0.1424839199,-0.0003080158,-0.1051192954,0.0187354572,-0.2066996545,0.1607428789,-0.1376258284,-0.0203414652,0.0479453914,-0.121414803,-0.0800660476,0.0294864848,0.0835297033,0.0665560514,0.0978626013,0.0190927815,-0.0851458758,-0.1305254102,0.042135071,0.0119962823,0.0718246624,-0.0585879311,0.0275973324,-0.0993545875,0.0393045582,-0.1467906088,0.1646846831,-0.0118891997,0.0214098115,-0.1220011488,0.1244043112,0.1507222354,0.0802341923,0.1597085893,0.0975803807,0.1913695931,-0.109610945,-0.0522893295,-0.0151250083,-0.0804583207,-0.1462814808,0.0432102792,0.1051186174,-0.0543153659,-0.0019047078,0.0205026604,-0.1692657918,0.2196764201,0.0074167559,-0.0791705847]],"hackathon_name":"HackTrain 2.0","index":978,"project_description":"Real-time health (service disruption) data visualisation of the rail networkThe inspiration behind the project arose from the precedent set by Google with it's real-time traffic monitoring for roads and we want to replicate that for the rail network.We've used real-time rail data to create a colour-coded representation of the rail network that illustrates the level of service disruption on the line down to the resolution of between stationsWe built the MVP over the course of two days responding to the challenge set by the Department for Transport as find better ways to visually communicate the nature and severity of service disruption.We used historical data from the SilverSearch API and 'cleaned' it for use in the demo where we would find a particularly 'eventful' day then speed it up to 10x to illustrate.On the front end we used Swift to create a simulation of how the iOS app would look and created the route between London and Birmingham (a particularly significant route strategically for the UK with HS2 en route)The route was broken down into sections between stations that would change colour depending on the severity of the delay experienced on that line of track.One of the major challenges was being able to clean the data and convert it into a consistent format that could then be used with any reliability. With so many different formats and naming conventions combined with the scale of the data, it was incredibly difficult to make this useful. All credit to Tom for making this happen!!!We want to expand on the prototype we built using the London to Birmingham line and plan to take it further to other major rail routes in the country. Ultimately the idea is that we will be able to use historic data to create a predictive analysis of where disruption will occur so that proactive action can be taken.HackTrain 2.0Collected survey responses and analysed them to find out demand and established requirements for our app.Made the web app interface overlaid onto Google maps which reads in data from JSON files to plot locations of stations and colour code sections of track based on delay health.Processing historical dumps of the National Rail Darwin feed to replay and populate a database with train positions and track delay health.REST endpoint to consume the database.jlb-qi\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 24, 2015 05:45 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Ripple","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/ripple-zdqf75","keywords":"data,route,used,rail,would,built,create,disruption,line,network,service,real,particularly,find,major,inspiration,severity,colour,challenges,birmingham"},{"level_0":979,"hack_vector":[[0.1502674967,-0.1376730204,0.0098064449,0.0889908075,-0.0474142879,0.1571175009,0.178077206,-0.0375666916,-0.030137362,-0.0181124192,0.0104628205,0.0221709758,0.134523809,-0.0737523735,0.0195574015,0.0745601431,0.2562186122,0.0323160589,0.052747786,0.0911990628,-0.208176136,0.0034450963,-0.0504698679,-0.0631618127,0.1486671716,-0.0300318208,-0.0621573031,-0.1948291063,0.0251866113,-0.0772941262,0.0323606953,-0.0858481452,0.0623182431,-0.0626380965,-0.0397113301,0.0258250218,0.1368961334,-0.1167710721,-0.005060391,0.0927267224,0.0432151593,-0.1402236521,-0.1868208051,-0.0345885418,-0.0248450562,-0.064116694,0.0415028073,-0.0192975476,-0.0058124289,-0.200903818,-0.046173878,0.0188483577,-0.1143047884,-0.0557775758,-0.1220639348,0.1563613862,-0.1562917978,0.0553175025,0.0062769661,0.0221338384,-0.0260840952,0.0328045934,0.0591411032,0.0860188529,0.1460600942,-0.0427749753,-0.1242096797,-0.1666681617,0.0176957455,-0.01366797,0.0568997897,-0.0379451215,-0.0208491366,-0.134992823,-0.0581707396,-0.0820536092,0.2025737166,0.0198478661,0.0845736638,-0.1519431472,0.1219083145,0.1652851701,0.011093379,0.1439153403,0.1491524577,0.1773825288,-0.1391224563,0.0557141379,0.002967905,-0.1115780398,-0.101481013,0.1004689932,0.0300108455,0.0185807087,0.059144225,-0.0777771249,-0.0791895166,0.1502984613,0.1035721079,-0.0505926609]],"hackathon_name":"HackTrain 2.0","index":979,"project_description":"Visualisation and analytics tool to support long-term decision making for train scheduling.Visualisation and analytics tool to support long-term decision making for train scheduling.HackTrain 2.0Nora Tejeda\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 24, 2015 07:30 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"OnTrack","project_tags":["python","javascript","d3.js","bootstrap","html5","node.js"],"project_url":"https:\/\/devpost.com\/software\/ontrack-ig3tw9","keywords":"visualisation,train,tool,term,support,scheduling,making,long,decision,analytics"},{"level_0":980,"hack_vector":[[0.1385647058,-0.1339447498,0.0014103297,0.0818696544,-0.0501419157,0.162617296,0.1835362762,-0.040919669,-0.0278298873,-0.0259149447,0.0080951303,0.0266111568,0.1251772046,-0.0777448118,0.0063197413,0.091104649,0.2770701051,0.0498255566,0.0442430526,0.0836609453,-0.1910290569,0.0129592428,-0.0464670882,-0.0738163665,0.1349205524,-0.0163502544,-0.0742498413,-0.1877055615,0.0453809947,-0.082648769,0.0298170131,-0.0941041335,0.0682398155,-0.0573913828,-0.03086734,0.0297077708,0.1457201689,-0.110109657,-0.0001766709,0.0890642777,0.0331319012,-0.153232947,-0.1890520155,-0.0344260074,-0.0260515511,-0.0609694421,0.0449363925,-0.0019643914,-0.0158242155,-0.1967961341,-0.0310219433,0.0297005717,-0.0992455631,-0.0786236525,-0.1007379219,0.1404293776,-0.1442531943,0.0544328317,0.0087367529,0.034568388,-0.0213961098,0.0461353175,0.0644244403,0.0933478475,0.1418189704,-0.0532478765,-0.1262599826,-0.1692436934,0.0287741031,-0.0081502488,0.0582029298,-0.0311589595,-0.0036409406,-0.1391586363,-0.0798686817,-0.0936089009,0.1873944402,0.024098061,0.0975297615,-0.1521000266,0.125576809,0.1670387685,0.0068071946,0.1533010304,0.1412181407,0.1552903205,-0.1515450925,0.0615652949,-0.0113092419,-0.1312602758,-0.0979101062,0.1008105278,0.0156029658,0.0138020571,0.0838206783,-0.0657281578,-0.0776503757,0.1466566324,0.0991929993,-0.0554244481]],"hackathon_name":"HackTrain 2.0","index":980,"project_description":"A mobile app that allows users to store train tickets and receive information about delays, route validity, etcHackTrain 2.0Dominic McManus\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 25, 2015 04:20 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Ticket","project_tags":["ionic","html5","css3","angular.js","javascript"],"project_url":"https:\/\/devpost.com\/software\/ticket-rxo1di","keywords":"ticket,ran,proud,next,learned,inspiration,challenges,built,accomplishments"},{"level_0":981,"hack_vector":[[0.1271751523,-0.0878339559,-0.0251213834,0.0422406495,-0.0359094813,0.1485875994,0.183076784,-0.0277546048,0.0045726369,-0.0406348705,0.0179691296,-0.047223866,0.1219542623,-0.0561410114,0.0361791514,0.043391902,0.2610706985,0.0374318957,0.0381326675,0.1236918494,-0.2278229743,0.0219714828,-0.0350001976,-0.0436168946,0.0970250145,-0.0106797833,-0.032935068,-0.1932906806,0.0078915432,-0.1039908603,0.0473109856,-0.1216410846,0.0411718301,-0.0810830593,0.0087762354,-0.0105351452,0.1228188202,-0.1388407201,-0.0491077565,0.0183870792,0.0209281798,-0.1469747722,-0.1665228158,-0.056240391,0.0304650106,-0.0847240537,0.0137586724,-0.0374912359,-0.0273705274,-0.2161329091,-0.1128357276,0.0089316396,-0.0877361819,-0.064244993,-0.1760344356,0.158667475,-0.1160639748,-0.0127065536,0.0422879867,-0.0679324269,-0.0502250008,0.0182466265,0.0811589956,0.0613778494,0.1162657961,0.0019242215,-0.1066680253,-0.1569190472,0.0553761646,0.0194855239,0.0754467323,-0.0558166765,0.0251514893,-0.1197825,-0.0175328068,-0.1375784278,0.1712464541,0.0090025468,0.0468338355,-0.1462663561,0.1068349183,0.1666686535,0.0363170244,0.1896464527,0.1019939631,0.1725858748,-0.1379186213,-0.0230692923,-0.0394737832,-0.0963094383,-0.1322439164,0.0676390305,0.0684561208,-0.0402748436,0.0174587686,-0.0022029374,-0.1390492916,0.2210355848,0.0235340428,-0.0985511765]],"hackathon_name":"HackTrain 2.0","index":981,"project_description":"A mobile app that allows users to store train tickets and receive information about delays, route validity, etcThe biggest update to the train tickets in 190 years.Developed during HackTrain 2.0Simply scan your paper train ticket and the app will create an e-ticket so that you can see the next valid train, platform information, calling points, disruption and an overview of available seats on your mobile device.Looking for today\u2019s first class menu? or maybe that all important lost property number? Ticket serves up tailored journey information for your train operator with ease; and once you\u2019ve settled into your seat, use Ticket to check in and see what your fellow passengers are up to.Download it on Google PlayHackTrain 2.0Tobias B\u00fcschel\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 23, 2015 08:34 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Ticket","project_tags":["javascript","html5","css3","angular.js","ionic"],"project_url":"https:\/\/devpost.com\/software\/ticket","keywords":"train,ticket,information,see,years,ease,lost,looking,journey,important,hacktrain,google,first,fellow,disruption,download,menu,device,developed,create"},{"level_0":982,"hack_vector":[[0.1362884045,-0.1179072335,-0.0204195604,0.0345902182,-0.0080465134,0.1307037324,0.1920024753,-0.0258750245,-0.0172116179,-0.0251260791,0.0138515774,-0.0714489296,0.1368266046,-0.0839907229,0.044721216,0.0389913693,0.2279977202,-0.0145442253,0.0424365215,0.1279968768,-0.2456195354,0.0372585692,-0.0401553251,-0.0232573189,0.1142249256,-0.0401013307,-0.0365400687,-0.1745283008,-0.0146052809,-0.1042839065,0.0532359034,-0.1141189411,0.0491869785,-0.0764476731,-0.0144018037,-0.0234977864,0.1168788895,-0.154647544,-0.042117741,-0.0083110873,0.0362442136,-0.1351044327,-0.1642204374,-0.0346427038,0.0638004467,-0.0562288798,0.0202167127,-0.0700848028,-0.0139526911,-0.2188104242,-0.1387575716,0.0267051607,-0.1084055677,-0.0143242367,-0.2032499611,0.1608577967,-0.1313728243,-0.0267549325,0.0412463583,-0.0996893942,-0.0689642802,0.02772047,0.0765373111,0.0582372695,0.1029523164,0.0179156121,-0.096256651,-0.1320507228,0.0314001106,0.0218750276,0.0778598934,-0.0539023131,0.022499904,-0.1191972867,0.0224532746,-0.1162651107,0.1668537557,-0.0042750621,0.0178194232,-0.1343320906,0.1228735894,0.162323907,0.0428471863,0.173451826,0.0998545811,0.185514763,-0.1031911075,-0.0375236236,-0.0348658524,-0.0826197267,-0.1385487765,0.05437636,0.0819735751,-0.0431517921,-0.0027320189,0.0013904263,-0.1573102623,0.2106591314,0.0296812337,-0.0784012228]],"hackathon_name":"HackTrain 2.0","index":982,"project_description":"Bring Teacher and Learner together in the Train.This project is made as part of the Hacktrain 2.0 HackathonThe average commuter working in London spends about two times one hour a day on the train. The perfect length of time to absorb new information is 50 minutes.  Our application makes use of this through bringing teachers and learners together.Users connect through their social network login. They then state if they would like to learn or teach and what their interests are. After this they enter what time they will travel between which locations. The app then matches the learner with possible teachers and shows what they teach.The learner can message a teacher to see if they would like to attend a lesson of theirs. If so the learner books the teacher and pays it's lecture fee. The learner and teacher then get seats assigned in the train and they meet up and exchange knowledge!Due to the project being build in a Hackathon we have hacked together a prototype to show the workings of the application. Because the most important thing was the back-end the front-end has been designed to match the resolution of the demo machine (half the screen of a 1920x1080 monitor). The eventual application would be focussed on the mobile platform, thus the resolution choice.HackTrain 2.0I built the backend and implemented the front-end design using Meteor.js and Ionic.Design & ConceptBeer van der Drift\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 24, 2015 11:44 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Training","project_tags":["javascript","html","css","meteor.js","ionic"],"project_url":"https:\/\/devpost.com\/software\/training-948psu","keywords":null},{"level_0":983,"hack_vector":[[0.1476066262,-0.1218942851,-0.0104814079,0.0599544048,-0.0301226787,0.1669497043,0.1846822947,-0.0436152704,-0.0148126204,-0.0214918349,0.0262270924,-0.023852434,0.1308942288,-0.0734370723,0.0284416694,0.0467318036,0.2610962987,0.0237449072,0.0476583913,0.1001252234,-0.2282724679,0.0230514631,-0.0492193215,-0.0415463932,0.1248097941,-0.0353063047,-0.0535112806,-0.1964679062,0.0043941615,-0.0972711891,0.0554302894,-0.118673265,0.0555277653,-0.076092951,-0.0212932825,-0.0008869505,0.1292785555,-0.1294289082,-0.0264427122,0.0337797254,0.0384364985,-0.1430200189,-0.1798434556,-0.0452853516,0.0166224279,-0.0528490543,0.0301808622,-0.0261834785,-0.0277028494,-0.203615278,-0.0876078084,0.0200271867,-0.1067818701,-0.0386047065,-0.1603396535,0.1417183876,-0.1347147673,0.0093077067,0.0291399676,-0.0358046442,-0.0473891608,0.0245780256,0.0768762529,0.0666112304,0.1235364601,-0.0147140054,-0.1158720925,-0.1561156213,0.0287581999,0.0189981833,0.0744994953,-0.0436627939,0.0233651809,-0.1332998574,-0.0285466351,-0.1218879893,0.1872543544,0.0239641611,0.0562859513,-0.144548431,0.1244402379,0.1715995371,0.0176796392,0.1759837419,0.1260056347,0.1806762218,-0.1317336261,-0.0044318675,-0.0252845082,-0.1039385051,-0.1231186464,0.0850148201,0.0477137417,-0.0184877049,0.0383209139,-0.0295981225,-0.1100227833,0.1965217292,0.0601694658,-0.0750233009]],"hackathon_name":"HackTrain 2.0","index":983,"project_description":"Now you gougo concept illustrationJust ask ugoWhy ugo?Final MVP from HackthonScreen Saver of ugo on a specific platformAfter scanning your ticket, you can choose how to continue your journeyugo is a digital information kiosk that is designed to be placed in train stations in order to inform travellers about disruptions & delays as well as provide them with personalised information about their own journey at the right time in the right place.HackTrain 2.0User Interaction, Customer Validation, Business Plan, Prototype PolishingTicket scan implementation, front-end implementation and general developmentUser research, Interaction Design, UX, UI, User Evaluation, Customer Validation. Business PlanSoftware development and cardboard hackingDiana Lipcanu\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 04:56 PM ESTJust finished the start screen UI => moving into devLog in\n      or\n      sign up for Devpost\n      to join the conversation.Hanlin Xu\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 04:47 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ugo","project_tags":["html5","javascript","asp.net","css","c#"],"project_url":"https:\/\/devpost.com\/software\/ugo","keywords":"travellers,ugo,information,tablet,ticket,new,stations,prototype,train,station,personalised,demo,web,data,current,phone,pilot,right,next,delays"},{"level_0":984,"hack_vector":[[0.1360626519,-0.1059895232,-0.0421347991,0.0294417609,-0.0348360911,0.1262334883,0.1913992018,-0.0230319872,0.0122924047,-0.0411748216,0.0095841531,-0.0525446162,0.1274614185,-0.0505895391,0.0517588332,0.0219953451,0.2239044756,0.0107995886,0.0360791236,0.1329813153,-0.2455547154,0.0106326081,-0.0372900665,-0.0176494401,0.0998045206,-0.0169464238,-0.0239573456,-0.1615705192,-0.0065209209,-0.1118133068,0.0460695848,-0.1179533526,0.0249461345,-0.0774568096,0.0030540754,-0.0177052822,0.1157297045,-0.1501662731,-0.0646244958,0.0021526245,0.0324806347,-0.125666976,-0.1451781243,-0.0507798903,0.0538095199,-0.0942013562,0.0162731037,-0.0621842965,-0.0282129738,-0.2123991251,-0.1498768032,0.0090323742,-0.1029003337,-0.032867182,-0.1968942583,0.1630389243,-0.1175821871,-0.0442327335,0.0520002954,-0.0959496424,-0.0803858265,0.0276072733,0.0702363327,0.0494321883,0.1048138291,0.0234928466,-0.1101865098,-0.1381653249,0.0312467869,0.0242475029,0.0652494207,-0.0566141568,0.022704836,-0.1175937876,0.0057993256,-0.1250064373,0.1775301993,0.0068965862,0.0159317479,-0.1466622502,0.1002563313,0.1644142121,0.0311207976,0.1768443584,0.1035531461,0.1938071102,-0.1140601784,-0.0259794611,-0.0367886722,-0.074888505,-0.1330048144,0.0741423145,0.089489162,-0.0350916609,-0.00610587,0.0048486786,-0.1613630503,0.2449818999,0.006804036,-0.0810279474]],"hackathon_name":"HackTrain 2.0","index":984,"project_description":"Wireless, no cost, saves your from getting lost.Maps are difficult to navigate around, and for tourists; it can be, aggravating to do so. Even Londoners may find it troubling, we can all agree that London can be confusing, and we\u2019ve finally found the solution to the problem. We\u2019ve created an idea of using and coding QR codes which can be scanned by any Smartphone and can redirect you to a vast information database that will give you directions, opening times and any additional information about any place. Now, why don\u2019t people just Google it? With QR codes it makes things faster and simple, we can cut out the middle man and save you a lot of time. With billboards in key areas of London, QR codes will provide a fast alternative for looking at a map for 10 minutes.HackTrain 2.0Sumaan Khokhar\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 22, 2015 08:09 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Tapp On","project_tags":["php5"],"project_url":"https:\/\/devpost.com\/software\/tap-on","keywords":"codes,qr,london,information,directions,key,idea,google,give,found,find,finally,faster,fast,even,vast,difficult,londoners,cut,created"},{"level_0":985,"hack_vector":[[0.1263821721,-0.0840378776,-0.029058123,0.0346067064,-0.0170290861,0.1142164096,0.1991293579,-0.0117488392,-0.0385711901,0.0046924283,0.0175857898,-0.0857950673,0.1448804289,-0.0622475073,0.0825738162,0.0060199909,0.2053212374,-0.0070268493,0.0410252959,0.1324816793,-0.235935539,0.0539650619,-0.0476094261,-0.0132163931,0.1016523466,-0.0229453165,-0.0327576324,-0.18363747,-0.0193396416,-0.0800137594,0.0714852512,-0.1271716952,0.0213279445,-0.0871668607,-0.0098626837,-0.0095339892,0.1117077321,-0.1372545958,-0.0603491589,-0.0158640873,0.0255354028,-0.1561166942,-0.1585078239,-0.0370358117,0.0654825717,-0.0557390675,0.000941401,-0.0879435539,-0.0054393616,-0.198795259,-0.1424839199,-0.0003080158,-0.1051192954,0.0187354572,-0.2066996545,0.1607428789,-0.1376258284,-0.0203414652,0.0479453914,-0.121414803,-0.0800660476,0.0294864848,0.0835297033,0.0665560514,0.0978626013,0.0190927815,-0.0851458758,-0.1305254102,0.042135071,0.0119962823,0.0718246624,-0.0585879311,0.0275973324,-0.0993545875,0.0393045582,-0.1467906088,0.1646846831,-0.0118891997,0.0214098115,-0.1220011488,0.1244043112,0.1507222354,0.0802341923,0.1597085893,0.0975803807,0.1913695931,-0.109610945,-0.0522893295,-0.0151250083,-0.0804583207,-0.1462814808,0.0432102792,0.1051186174,-0.0543153659,-0.0019047078,0.0205026604,-0.1692657918,0.2196764201,0.0074167559,-0.0791705847]],"hackathon_name":"HackTrain 2.0","index":985,"project_description":"Real-time health (service disruption) data visualisation of the rail networkThe inspiration behind the project arose from the precedent set by Google with it's real-time traffic monitoring for roads and we want to replicate that for the rail network.We've used real-time rail data to create a colour-coded representation of the rail network that illustrates the level of service disruption on the line down to the resolution of between stationsWe built the MVP over the course of two days responding to the challenge set by the Department for Transport as find better ways to visually communicate the nature and severity of service disruption.We used historical data from the SilverSearch API and 'cleaned' it for use in the demo where we would find a particularly 'eventful' day then speed it up to 10x to illustrate.On the front end we used Swift to create a simulation of how the iOS app would look and created the route between London and Birmingham (a particularly significant route strategically for the UK with HS2 en route)The route was broken down into sections between stations that would change colour depending on the severity of the delay experienced on that line of track.One of the major challenges was being able to clean the data and convert it into a consistent format that could then be used with any reliability. With so many different formats and naming conventions combined with the scale of the data, it was incredibly difficult to make this useful. All credit to Tom for making this happen!!!We want to expand on the prototype we built using the London to Birmingham line and plan to take it further to other major rail routes in the country. Ultimately the idea is that we will be able to use historic data to create a predictive analysis of where disruption will occur so that proactive action can be taken.HackTrain 2.0Collected survey responses and analysed them to find out demand and established requirements for our app.Made the web app interface overlaid onto Google maps which reads in data from JSON files to plot locations of stations and colour code sections of track based on delay health.Processing historical dumps of the National Rail Darwin feed to replay and populate a database with train positions and track delay health.REST endpoint to consume the database.jlb-qi\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 24, 2015 05:45 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Ripple","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/ripple-zdqf75","keywords":"data,route,used,rail,would,built,create,disruption,line,network,service,real,particularly,find,major,inspiration,severity,colour,challenges,birmingham"},{"level_0":986,"hack_vector":[[0.1502674967,-0.1376730204,0.0098064449,0.0889908075,-0.0474142879,0.1571175009,0.178077206,-0.0375666916,-0.030137362,-0.0181124192,0.0104628205,0.0221709758,0.134523809,-0.0737523735,0.0195574015,0.0745601431,0.2562186122,0.0323160589,0.052747786,0.0911990628,-0.208176136,0.0034450963,-0.0504698679,-0.0631618127,0.1486671716,-0.0300318208,-0.0621573031,-0.1948291063,0.0251866113,-0.0772941262,0.0323606953,-0.0858481452,0.0623182431,-0.0626380965,-0.0397113301,0.0258250218,0.1368961334,-0.1167710721,-0.005060391,0.0927267224,0.0432151593,-0.1402236521,-0.1868208051,-0.0345885418,-0.0248450562,-0.064116694,0.0415028073,-0.0192975476,-0.0058124289,-0.200903818,-0.046173878,0.0188483577,-0.1143047884,-0.0557775758,-0.1220639348,0.1563613862,-0.1562917978,0.0553175025,0.0062769661,0.0221338384,-0.0260840952,0.0328045934,0.0591411032,0.0860188529,0.1460600942,-0.0427749753,-0.1242096797,-0.1666681617,0.0176957455,-0.01366797,0.0568997897,-0.0379451215,-0.0208491366,-0.134992823,-0.0581707396,-0.0820536092,0.2025737166,0.0198478661,0.0845736638,-0.1519431472,0.1219083145,0.1652851701,0.011093379,0.1439153403,0.1491524577,0.1773825288,-0.1391224563,0.0557141379,0.002967905,-0.1115780398,-0.101481013,0.1004689932,0.0300108455,0.0185807087,0.059144225,-0.0777771249,-0.0791895166,0.1502984613,0.1035721079,-0.0505926609]],"hackathon_name":"HackTrain 2.0","index":986,"project_description":"Visualisation and analytics tool to support long-term decision making for train scheduling.Visualisation and analytics tool to support long-term decision making for train scheduling.HackTrain 2.0Nora Tejeda\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 24, 2015 07:30 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"OnTrack","project_tags":["python","javascript","d3.js","bootstrap","html5","node.js"],"project_url":"https:\/\/devpost.com\/software\/ontrack-ig3tw9","keywords":"visualisation,train,tool,term,support,scheduling,making,long,decision,analytics"},{"level_0":987,"hack_vector":[[0.1385647058,-0.1339447498,0.0014103297,0.0818696544,-0.0501419157,0.162617296,0.1835362762,-0.040919669,-0.0278298873,-0.0259149447,0.0080951303,0.0266111568,0.1251772046,-0.0777448118,0.0063197413,0.091104649,0.2770701051,0.0498255566,0.0442430526,0.0836609453,-0.1910290569,0.0129592428,-0.0464670882,-0.0738163665,0.1349205524,-0.0163502544,-0.0742498413,-0.1877055615,0.0453809947,-0.082648769,0.0298170131,-0.0941041335,0.0682398155,-0.0573913828,-0.03086734,0.0297077708,0.1457201689,-0.110109657,-0.0001766709,0.0890642777,0.0331319012,-0.153232947,-0.1890520155,-0.0344260074,-0.0260515511,-0.0609694421,0.0449363925,-0.0019643914,-0.0158242155,-0.1967961341,-0.0310219433,0.0297005717,-0.0992455631,-0.0786236525,-0.1007379219,0.1404293776,-0.1442531943,0.0544328317,0.0087367529,0.034568388,-0.0213961098,0.0461353175,0.0644244403,0.0933478475,0.1418189704,-0.0532478765,-0.1262599826,-0.1692436934,0.0287741031,-0.0081502488,0.0582029298,-0.0311589595,-0.0036409406,-0.1391586363,-0.0798686817,-0.0936089009,0.1873944402,0.024098061,0.0975297615,-0.1521000266,0.125576809,0.1670387685,0.0068071946,0.1533010304,0.1412181407,0.1552903205,-0.1515450925,0.0615652949,-0.0113092419,-0.1312602758,-0.0979101062,0.1008105278,0.0156029658,0.0138020571,0.0838206783,-0.0657281578,-0.0776503757,0.1466566324,0.0991929993,-0.0554244481]],"hackathon_name":"HackTrain 2.0","index":987,"project_description":"A mobile app that allows users to store train tickets and receive information about delays, route validity, etcHackTrain 2.0Dominic McManus\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 25, 2015 04:20 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Ticket","project_tags":["ionic","html5","css3","angular.js","javascript"],"project_url":"https:\/\/devpost.com\/software\/ticket-rxo1di","keywords":"ticket,ran,proud,next,learned,inspiration,challenges,built,accomplishments"},{"level_0":988,"hack_vector":[[0.1271751523,-0.0878339559,-0.0251213834,0.0422406495,-0.0359094813,0.1485875994,0.183076784,-0.0277546048,0.0045726369,-0.0406348705,0.0179691296,-0.047223866,0.1219542623,-0.0561410114,0.0361791514,0.043391902,0.2610706985,0.0374318957,0.0381326675,0.1236918494,-0.2278229743,0.0219714828,-0.0350001976,-0.0436168946,0.0970250145,-0.0106797833,-0.032935068,-0.1932906806,0.0078915432,-0.1039908603,0.0473109856,-0.1216410846,0.0411718301,-0.0810830593,0.0087762354,-0.0105351452,0.1228188202,-0.1388407201,-0.0491077565,0.0183870792,0.0209281798,-0.1469747722,-0.1665228158,-0.056240391,0.0304650106,-0.0847240537,0.0137586724,-0.0374912359,-0.0273705274,-0.2161329091,-0.1128357276,0.0089316396,-0.0877361819,-0.064244993,-0.1760344356,0.158667475,-0.1160639748,-0.0127065536,0.0422879867,-0.0679324269,-0.0502250008,0.0182466265,0.0811589956,0.0613778494,0.1162657961,0.0019242215,-0.1066680253,-0.1569190472,0.0553761646,0.0194855239,0.0754467323,-0.0558166765,0.0251514893,-0.1197825,-0.0175328068,-0.1375784278,0.1712464541,0.0090025468,0.0468338355,-0.1462663561,0.1068349183,0.1666686535,0.0363170244,0.1896464527,0.1019939631,0.1725858748,-0.1379186213,-0.0230692923,-0.0394737832,-0.0963094383,-0.1322439164,0.0676390305,0.0684561208,-0.0402748436,0.0174587686,-0.0022029374,-0.1390492916,0.2210355848,0.0235340428,-0.0985511765]],"hackathon_name":"HackTrain 2.0","index":988,"project_description":"A mobile app that allows users to store train tickets and receive information about delays, route validity, etcThe biggest update to the train tickets in 190 years.Developed during HackTrain 2.0Simply scan your paper train ticket and the app will create an e-ticket so that you can see the next valid train, platform information, calling points, disruption and an overview of available seats on your mobile device.Looking for today\u2019s first class menu? or maybe that all important lost property number? Ticket serves up tailored journey information for your train operator with ease; and once you\u2019ve settled into your seat, use Ticket to check in and see what your fellow passengers are up to.Download it on Google PlayHackTrain 2.0Tobias B\u00fcschel\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 23, 2015 08:34 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Ticket","project_tags":["javascript","html5","css3","angular.js","ionic"],"project_url":"https:\/\/devpost.com\/software\/ticket","keywords":"train,ticket,information,see,years,ease,lost,looking,journey,important,hacktrain,google,first,fellow,disruption,download,menu,device,developed,create"},{"level_0":989,"hack_vector":[[0.1362884045,-0.1179072335,-0.0204195604,0.0345902182,-0.0080465134,0.1307037324,0.1920024753,-0.0258750245,-0.0172116179,-0.0251260791,0.0138515774,-0.0714489296,0.1368266046,-0.0839907229,0.044721216,0.0389913693,0.2279977202,-0.0145442253,0.0424365215,0.1279968768,-0.2456195354,0.0372585692,-0.0401553251,-0.0232573189,0.1142249256,-0.0401013307,-0.0365400687,-0.1745283008,-0.0146052809,-0.1042839065,0.0532359034,-0.1141189411,0.0491869785,-0.0764476731,-0.0144018037,-0.0234977864,0.1168788895,-0.154647544,-0.042117741,-0.0083110873,0.0362442136,-0.1351044327,-0.1642204374,-0.0346427038,0.0638004467,-0.0562288798,0.0202167127,-0.0700848028,-0.0139526911,-0.2188104242,-0.1387575716,0.0267051607,-0.1084055677,-0.0143242367,-0.2032499611,0.1608577967,-0.1313728243,-0.0267549325,0.0412463583,-0.0996893942,-0.0689642802,0.02772047,0.0765373111,0.0582372695,0.1029523164,0.0179156121,-0.096256651,-0.1320507228,0.0314001106,0.0218750276,0.0778598934,-0.0539023131,0.022499904,-0.1191972867,0.0224532746,-0.1162651107,0.1668537557,-0.0042750621,0.0178194232,-0.1343320906,0.1228735894,0.162323907,0.0428471863,0.173451826,0.0998545811,0.185514763,-0.1031911075,-0.0375236236,-0.0348658524,-0.0826197267,-0.1385487765,0.05437636,0.0819735751,-0.0431517921,-0.0027320189,0.0013904263,-0.1573102623,0.2106591314,0.0296812337,-0.0784012228]],"hackathon_name":"HackTrain 2.0","index":989,"project_description":"Bring Teacher and Learner together in the Train.This project is made as part of the Hacktrain 2.0 HackathonThe average commuter working in London spends about two times one hour a day on the train. The perfect length of time to absorb new information is 50 minutes.  Our application makes use of this through bringing teachers and learners together.Users connect through their social network login. They then state if they would like to learn or teach and what their interests are. After this they enter what time they will travel between which locations. The app then matches the learner with possible teachers and shows what they teach.The learner can message a teacher to see if they would like to attend a lesson of theirs. If so the learner books the teacher and pays it's lecture fee. The learner and teacher then get seats assigned in the train and they meet up and exchange knowledge!Due to the project being build in a Hackathon we have hacked together a prototype to show the workings of the application. Because the most important thing was the back-end the front-end has been designed to match the resolution of the demo machine (half the screen of a 1920x1080 monitor). The eventual application would be focussed on the mobile platform, thus the resolution choice.HackTrain 2.0I built the backend and implemented the front-end design using Meteor.js and Ionic.Design & ConceptBeer van der Drift\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 24, 2015 11:44 AM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Training","project_tags":["javascript","html","css","meteor.js","ionic"],"project_url":"https:\/\/devpost.com\/software\/training-948psu","keywords":null},{"level_0":990,"hack_vector":[[0.1476066262,-0.1218942851,-0.0104814079,0.0599544048,-0.0301226787,0.1669497043,0.1846822947,-0.0436152704,-0.0148126204,-0.0214918349,0.0262270924,-0.023852434,0.1308942288,-0.0734370723,0.0284416694,0.0467318036,0.2610962987,0.0237449072,0.0476583913,0.1001252234,-0.2282724679,0.0230514631,-0.0492193215,-0.0415463932,0.1248097941,-0.0353063047,-0.0535112806,-0.1964679062,0.0043941615,-0.0972711891,0.0554302894,-0.118673265,0.0555277653,-0.076092951,-0.0212932825,-0.0008869505,0.1292785555,-0.1294289082,-0.0264427122,0.0337797254,0.0384364985,-0.1430200189,-0.1798434556,-0.0452853516,0.0166224279,-0.0528490543,0.0301808622,-0.0261834785,-0.0277028494,-0.203615278,-0.0876078084,0.0200271867,-0.1067818701,-0.0386047065,-0.1603396535,0.1417183876,-0.1347147673,0.0093077067,0.0291399676,-0.0358046442,-0.0473891608,0.0245780256,0.0768762529,0.0666112304,0.1235364601,-0.0147140054,-0.1158720925,-0.1561156213,0.0287581999,0.0189981833,0.0744994953,-0.0436627939,0.0233651809,-0.1332998574,-0.0285466351,-0.1218879893,0.1872543544,0.0239641611,0.0562859513,-0.144548431,0.1244402379,0.1715995371,0.0176796392,0.1759837419,0.1260056347,0.1806762218,-0.1317336261,-0.0044318675,-0.0252845082,-0.1039385051,-0.1231186464,0.0850148201,0.0477137417,-0.0184877049,0.0383209139,-0.0295981225,-0.1100227833,0.1965217292,0.0601694658,-0.0750233009]],"hackathon_name":"HackTrain 2.0","index":990,"project_description":"Now you gougo concept illustrationJust ask ugoWhy ugo?Final MVP from HackthonScreen Saver of ugo on a specific platformAfter scanning your ticket, you can choose how to continue your journeyugo is a digital information kiosk that is designed to be placed in train stations in order to inform travellers about disruptions & delays as well as provide them with personalised information about their own journey at the right time in the right place.HackTrain 2.0User Interaction, Customer Validation, Business Plan, Prototype PolishingTicket scan implementation, front-end implementation and general developmentUser research, Interaction Design, UX, UI, User Evaluation, Customer Validation. Business PlanSoftware development and cardboard hackingDiana Lipcanu\n          posted an update\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 04:56 PM ESTJust finished the start screen UI => moving into devLog in\n      or\n      sign up for Devpost\n      to join the conversation.Hanlin Xu\n          started this project\n\n          \n            \u2014\n            \n\n                Nov 21, 2015 04:47 PM ESTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ugo","project_tags":["html5","javascript","asp.net","css","c#"],"project_url":"https:\/\/devpost.com\/software\/ugo","keywords":"travellers,ugo,information,tablet,ticket,new,stations,prototype,train,station,personalised,demo,web,data,current,phone,pilot,right,next,delays"},{"level_0":991,"hack_vector":[[0.1183200926,-0.1163747907,-0.0306546651,0.0222016554,-0.0223338734,0.1160964742,0.1834020168,-0.0064577865,-0.0065853759,-0.0409784168,0.0107194725,-0.0735418946,0.1340872496,-0.0631573647,0.0597507171,0.0261364784,0.2227135152,-0.0000741949,0.0310789868,0.1412065625,-0.2531879246,0.0247905869,-0.0245874804,-0.0237086881,0.085995622,-0.0269597378,-0.0274677519,-0.1626813114,-0.0177714266,-0.1127791256,0.0539605841,-0.1147237048,0.0191907343,-0.072497122,-0.000173732,-0.0414220393,0.102046214,-0.1552013457,-0.0579290353,-0.0183007643,0.0279864687,-0.1200241297,-0.147300303,-0.0496872403,0.0761323646,-0.0751348585,0.0149211334,-0.0669358671,-0.0282972716,-0.2209581137,-0.1471996158,0.011750577,-0.0932846442,-0.0334284753,-0.2115479559,0.1704026312,-0.1013335884,-0.0419349857,0.0511644706,-0.1149444953,-0.0759219453,0.0252394956,0.0674086511,0.0536507592,0.0902930126,0.0350530334,-0.0896856487,-0.1280860752,0.0393524468,0.0188728403,0.0694139227,-0.0537533946,0.0315974355,-0.1048054174,0.0173985269,-0.1332514584,0.1545438319,-0.0043693823,0.0068217511,-0.1338455975,0.1148556694,0.1705675572,0.0363825858,0.1828230172,0.0952206403,0.1981815398,-0.0973129198,-0.0562064201,-0.0482399911,-0.0708800182,-0.1465903819,0.053713128,0.0984944552,-0.0608271658,-0.0171779972,0.0176047832,-0.1744754165,0.2343762666,-0.000210384,-0.0827732757]],"hackathon_name":"Destination Hack: London","index":991,"project_description":"Travel like a local. Further your experience.We\u2019re from Cyprus -  and when our friends go there, we always tell them about the amazing secret places that we know about. They're often difficult to find, but we can tell you how to get there. These are the secrets that the tourists don't know about, but they're always magical.With this hack, we want to tackle this problem and scale the solution. Not everyone has a friend in the country that they want to go visit - Further becomes that trusted friend in your pocket.Locals share their experiences, so that Travellers can experience places like a local. Travellers pay a small fee to access the full itinerary of items and the locals get paid for sharing their knowledge.Where a startup like Hype is about advice from locals for locals, and another startup called Esplorio is about advice by tourists for tourists - Further solves the problem through local knowledge for tourists.A local goes online to write an experience, they log in and see their dashboard.\nThey want to create a new experience, so they add a title, categories, summary & a heads up of a budget if the experience is likely to cost the traveller something.The local then adds  the items - the step by step bits of the day. These nuggets include how to get there, where to eat, what to take with and when to go. Locals include the tips they feel are important to the experience.When the local is done, the experience goes live. The local then sees a dashboard to view the experiences they have uploaded. Since the experiences are sold for a small fee, the locals can see & manage their revenue. The locals get 80% of the amount paid by the travellers and we get 20%. It is a marketplace business model with the potential to become subscription based too.Andreas\u2019s Nordic twin Brother Andrs (who likes cats) wants to go to Cyprus.He logs into the app, where he\u2019ll find the experiences he's bought. For this trip he wants a new experience so he heads over to Search & Discover.He selects Cyprus & chooses a few categories, like romantic, beach, sunshine, coastal. Out of the suggestions, he chooses the experience he wants and looks at the summary. He decides to purchase and gets access to the full experience.During the experience, he can check his watch for full access to the details of the experience as the final step in a truly multiplatform travel experience.Destination Hack: LondonProduct Design - information architecture, wireframing, UX, brand development, interface design & a sprinkle of magic.Helped refine the business model, contributed to the overall brand development and colour scheme, and helped out with the design. Also wrote out all of the example content for the demo.Database setup, built API for serving content & web development of content creation app for locals.Unique IOS Development :)Eleanor Harding\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 27, 2015 02:29 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Further","project_tags":["ios","braintree","html5","javascript","python","objective-c","css3","twilio","photoshop","adobe-illustrator"],"project_url":"https:\/\/devpost.com\/software\/further","keywords":"experience,locals,local,get,tourists,go,experiences,access,know,like,full,problem,step,cyprus,travellers,wants,want,app,find,dashboard"},{"level_0":992,"hack_vector":[[0.1148271263,-0.1189549267,-0.0253114868,0.017401889,-0.0249012504,0.1182374358,0.1846993268,-0.0188235436,-0.0057677962,-0.0181272924,0.0203578845,-0.0681117848,0.127198875,-0.0539545566,0.0634361506,0.0362561643,0.2275906801,0.0070417626,0.0291596986,0.1289148182,-0.251562506,0.0370660424,-0.0279699937,-0.0337274559,0.0733255669,-0.0243480783,-0.0230682045,-0.179827556,-0.0094988858,-0.1141156033,0.0583201535,-0.1200523749,0.0225265604,-0.0890064761,-0.002286443,-0.0445384532,0.0936760306,-0.1577790976,-0.0602730699,-0.0233443733,0.0131392926,-0.1386713684,-0.1444427073,-0.0566585064,0.0705612525,-0.0648792088,0.0099124862,-0.0596237443,-0.0287432484,-0.2073170394,-0.1414313167,0.0004275173,-0.0939958096,-0.0345388539,-0.2022161335,0.1623502523,-0.1046219468,-0.0391293131,0.0567580871,-0.107426919,-0.0781062245,0.016137898,0.0753860772,0.0600609183,0.0838399157,0.0305228066,-0.0949430838,-0.131550774,0.0490311496,0.022649698,0.0763083771,-0.0680601075,0.0396966115,-0.1100207046,0.0051455824,-0.1558982134,0.1521049589,0.0024908674,0.0220026989,-0.1313448548,0.1282175779,0.1675023288,0.0437954813,0.1896895617,0.0982483849,0.1935925484,-0.1104857177,-0.0466175564,-0.040888872,-0.0730148032,-0.146649912,0.0568410158,0.0931208953,-0.0655284822,-0.0176211279,0.017789498,-0.1666937023,0.2165083885,0.0002241617,-0.090236783]],"hackathon_name":"Destination Hack: London","index":992,"project_description":"Swap, Sell or Gift your Flight or Accommodation Bookings!Airline Business is very advanced today, comparing to the 60's but still far from perfection.Airlines say they charge change fees and cancellation penalties to give travelers incentives to purchase full-fare, unrestricted tickets and to limit no-shows for flights, reducing the need to overbook. By paying higher prices, travelers can buy flexibility and avoid change fees\/surcharges, where lower prices represent a trade-off, with more restrictions.The Airlines take advantage of that and collect over $2 Billion every year just from the US travellers just on cancellation fees.\nMillions of travellers are disappointend and hurt by harsh cancellation fees, booking restrictions and charges.Today's technological advancement can allow the airlines become FAIRER to their clients and approach their problems and needs!Examples where companies stimulate bookings and consumer stimulation are:If the airlines do not keep their lion's share of travellers in fear of high fees for cancellations and unaffordable prices for flights it will give them an opportunity for continuous market growth and higher revenues with ever more happy clients.\nSome of the advanced insurance companies start to pay back money to their clients, if the latter do not have accidents in a longer period of time. This transforms their clients into permanent and happy clients.Our goal is to generate a product of RADICAL CHANGE (not incremental one).\nTherefore we suggest to the Airline companies a possible cooperation with AIRMAX, that will generate great yields for both businesses and consumers on a new level.The AIRMAX app rips the data from all forwarded emails with flight and accommodation confirmations to TripCase.\nOnce the user opens the APP he can see all his recent open bookings.\nHe can choose one and post it in form of a blogpost on the AIRMAX wall of offers.The user can choose what he prefers: a swap, a sale or both options.AIRMAX charges through PAYPAL the clients that BUY the offered booking.\nIf the Flight or Accommodation booking is swapped - AIRMAX simply transfers the client data to the original service provider and directs the buyer through PAYPAL to send the money to the person who provided the ticket.In case a user wants to make a gift for someone he can share his offer in Facebook\/Twitter and if anyone likes it and the time\/dates convene the person - then the gift is ready!AIRMAX is a bridge (trusted middleman) between the airline companies and the consumers.\nThe consumers pay a small fee each time they swap, sell or transfer the ticket.\nThe partnering airlines get a monthly lump sum payment or per each transfer (as the airline operator chooses).\nIf more and more Airlines will start implementing the AIRMAX system that will allow people swap, sell or gift their booking to another person (without speculation), this will stimulate and boost the consumer activity and in result bring more profit.Contacting the Airlines Companies and the Service Facilitators to accept a new system and way of selling the tickets\/making the bookings.\nThe future of Travel is maximum flexibility and less restrictions for the clients. \nGet a taste of Future with AIRMAX and help us build a more perfect travel world - fairer and less restrictive and more popular for the consumers and more profitable for the airlines!Destination Hack: LondonI worked on Nodejs api and on Android app (integrated with sebre, tripcase ...)Worked on Android appIan Bau\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 27, 2015 08:19 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AIRMAX - Air Travel Reinvented!","project_tags":["node.js","android","oauth","java"],"project_url":"https:\/\/devpost.com\/software\/airmax-swap-sell-or-gift-your-bookings","keywords":"airmax,airlines,clients,bookings,booking,companies,fees,change,gift,swap,airline,cancellation,consumers,sell,time,restrictions,one,prices,person,ticket"},{"level_0":993,"hack_vector":[[0.1229516938,-0.0934182778,-0.0258771125,0.0103829112,-0.0172510892,0.1114608273,0.1956364512,-0.0089952406,-0.0178579539,-0.0129189426,0.0133833122,-0.0937516838,0.1264839768,-0.0652553812,0.064233683,0.0277941469,0.2135495543,0.003026766,0.0263989829,0.1365650892,-0.2433251292,0.035641443,-0.0474947281,-0.0240672175,0.0883497745,-0.0214168057,-0.0291930959,-0.1809231192,-0.0238373857,-0.1088594943,0.0535219386,-0.1272819489,0.0242133476,-0.0964338034,-0.0058586281,-0.0216333196,0.1014659852,-0.1560252756,-0.0641174242,-0.0122712897,0.0130294878,-0.1364156455,-0.1497566402,-0.0440362953,0.0714525878,-0.0837343112,0.0124282176,-0.0766425058,-0.029669378,-0.2105324119,-0.1497866362,0.0072569237,-0.0954513401,-0.0080166049,-0.1953925341,0.1738383323,-0.121089302,-0.0331684016,0.0373495631,-0.1264221519,-0.080752708,0.0188556612,0.0718533471,0.0680090711,0.0989900604,0.0252814647,-0.0990760252,-0.1239671186,0.0441020615,0.0135726258,0.0724717751,-0.0685811341,0.0264838655,-0.1076749414,0.045141805,-0.1353529543,0.1575658768,-0.0022595152,0.021844862,-0.1301186383,0.1277862936,0.1605012566,0.0752883628,0.156032443,0.0880283788,0.1874048561,-0.1033255383,-0.0603627563,-0.0229923781,-0.0732568055,-0.1461335272,0.0402028784,0.0987199843,-0.0625370964,-0.0279438011,0.016101975,-0.1777939498,0.2179152817,-0.0031567547,-0.0887241066]],"hackathon_name":"Destination Hack: London","index":993,"project_description":"Price based searchYou want to go away, you don't care when or where, all you care about is the price. Almost every site requires either a destination or a date before you can even choose the priceThe first page you get to on the site is just a search form with 1 price field. You set you budget and then the you will get Flights and hotels. From these results you can filter by the weather and if there is car rentals available in the destination.Flights: The first step is to use Sabre's DestinationFinder. We start from and London airport and get the maximum of 50 results back, with the lowest fare for that day. Once the flights have been added to firebase the results page starts updating.Hotels: As soon as the flight API is complete we use Mr & Mrs Smith's availability API to retrieve all the available hotels that are near the airports where flights are available. Once we have a shortlist of relevant hotels we get the best bookable rates for the required dates. As these results come in the search results page is updates and hotels are added in the results with the flights.Car Hire: The next step is to do the car search, as this is not always required this is just an option to show results where car hire is available at the destination airport.Weather: We also added a weather API (http:\/\/openweathermap.org\/api) so that we could show the forecast for your trip on the results page.Because of the amount of data required to retrieve for each search we have limited it to the next weekends results (the trip will always be Friday-Sunday). This meant we could limit the amount of data we had to retrieve for the purpose of the demonstration.We began searching for flights based on the maximum price entered, but this sometimes used the maximum budget available (e.g. \u00a3500 was the maximum price some of the flight results that came back were \u00a3500 meaning there was no budget for a hotel). To overcome this, and based on the fact we limited the results to the weekend, we decided to limit the max fare for the flights to 80% of the budget, meaning we were more likely to have enough in the budget to have a hotel too.The gradual display of results, using firebase we save the search and then as we get results we populate the results page.\nThe ease of use of the search.More filters for the search.\nDon't limit the search to the next weekend, we can expand the search to be within the next 3 months, then the next year as we grow.\nAdd all transport options - in the budget include the train fares and\/or taxis to and from the airport (or have them as a filter)\nBooking for the flights and hotels at the quoted prices, and eventually booking within the site.Destination Hack: LondonUsed the search params to get lowest fare data from Sabres DestinationFinder api and loaded into firebase for FE access.Mapped airport codes to cities and hotels, pulling back the in budget and available hotel results. Symfony2 and elasticsearch ftw.Symfony2 functions, Firebase data conversion and push, Sabre Api calls and data collection about car rental availability near destination airports. Learned how to drink litres of coffee and still be sleepy.Handled front-end, including data integration with Firebase, ReactJS\/Flux\/AmpersandJS app development and SASS\/SemanticUI stylingWorked on the backend systems for booking flights (not complete). Setting up services to connect to Firebase and SoapApi'sIain Hay\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 05:20 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Lasso","project_tags":["php","css","firebase","elasticsearch","html","sass","sabre","react"],"project_url":"https:\/\/devpost.com\/software\/lasso","keywords":"results,search,flights,hotels,budget,next,available,get,page,price,car,maximum,api,weather,retrieve,site,required,limit,added,destination"},{"level_0":994,"hack_vector":[[0.1183463335,-0.0998672321,-0.0212188363,0.0293845814,-0.0266955029,0.1226287559,0.1981619149,-0.0159709062,-0.0146780582,-0.0227048602,0.0202662125,-0.057231579,0.1322658211,-0.0687143058,0.0508306958,0.0389893949,0.2280561775,-0.0002054971,0.0351863466,0.1359926164,-0.2446272373,0.0329293683,-0.0362511575,-0.0306613371,0.0963339731,-0.0255726464,-0.0375922658,-0.1813135892,-0.0072766179,-0.1092382446,0.0506709814,-0.1138245985,0.0319531448,-0.0792926326,0.0051436038,-0.0205332749,0.1192893758,-0.146256566,-0.0488143489,0.0035653932,0.0298147742,-0.1469199061,-0.1565617919,-0.0481385365,0.05919604,-0.0650511533,0.0170796812,-0.0670305863,-0.0225055721,-0.2078984678,-0.1305748671,0.0120372782,-0.1018546671,-0.0202089772,-0.2057882398,0.1635513753,-0.1283379346,-0.0278966948,0.0514226295,-0.1059131771,-0.0719569623,0.020201087,0.0772463232,0.0625015125,0.1115500405,0.0199090634,-0.0982243791,-0.1403064281,0.0450840779,0.0180404186,0.0697619319,-0.0632868186,0.0223170239,-0.1155595556,0.0156033263,-0.1370059401,0.1577246487,-0.0037350729,0.0232472997,-0.1403450966,0.1193579212,0.1671141535,0.051797729,0.1719772965,0.0964969769,0.189176172,-0.1187330559,-0.0441258587,-0.0304588005,-0.0870725662,-0.1532159448,0.0561383814,0.0829150379,-0.0483991392,-0.0109550338,0.0159946475,-0.1635488123,0.2069693357,0.0196919497,-0.0734527484]],"hackathon_name":"Destination Hack: London","index":994,"project_description":"Inspire to give - exciting to getProof of concept from an idea in our Travel Agency.The user creates a funding webpage for a travel purpose, and sends invitation by social media and\/or URL to friends and family to contributeThe Contributers access the funding webpage in order to donate money for a travel giftOnce the contribution has been done, the contributors name and the amount will be shown in a list on the funding webpage. There is an interactive map which will be updated with pins, showing to which destinations the contributed amount will cover airline tickets (according to the specifications made when the funding webpage was created \u2013 departure and returning dates and origin). Mouseover on each pin in the map will show destination name, and the lowest price for the airline ticket(s)..Webdevelpment has been a challenge for our team which only consits of  back-end developers.That we actully managed to have a working prototype for proof of concept.We are impressed by the Destination Finder and the Low Fare API's hope we can use them to develop our online solutions further.When we get home, we hope we can take this further:When they start travelling, we will offer a travel blog to share with the contributors. If possible, we would use the TripCase api to follow them around the world.Destination Hack: LondonHarald Slemdal\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 05:24 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"CrowdGift","project_tags":["django","javascript","json","hetzner","sabre","bootstrap","jquery","google-maps"],"project_url":"https:\/\/devpost.com\/software\/crowdgift","keywords":"webpage,funding,travel,map,destination,name,booking,online,made,contributors,hope,api,amount,airline,use,user,pin,proof,concept,develop"},{"level_0":995,"hack_vector":[[0.1528043896,-0.1207932308,-0.0254973508,0.0264706723,-0.0185842831,0.1296960562,0.1929764599,-0.0344303027,0.0064965105,-0.0356022939,0.0188181419,-0.0646313056,0.1399705857,-0.0570361912,0.0655529201,-0.0070854463,0.1895006448,-0.002174499,0.0451467857,0.1252496094,-0.2469994128,0.024568826,-0.0369226635,-0.0187593177,0.0867209956,-0.0359945707,-0.0154349115,-0.159323141,-0.0310673248,-0.1124128327,0.0595163107,-0.111851044,0.0219277218,-0.0788645297,-0.0023825218,-0.0419499539,0.103926599,-0.1590652317,-0.0775469691,-0.0261696316,0.0494465046,-0.1127664447,-0.1264563799,-0.0406071469,0.0680691525,-0.067380257,0.0191024188,-0.0838935822,-0.0444448143,-0.2097848058,-0.1738160849,0.0258104056,-0.1134836897,-0.010913088,-0.2159655094,0.1692404449,-0.1101884171,-0.0504502952,0.0510409847,-0.1121926457,-0.0801353157,0.0131344264,0.0681822076,0.0374873504,0.092796661,0.0449286178,-0.1020686552,-0.1080137789,0.0112700257,0.0299387239,0.0700778291,-0.0515773483,0.0238477737,-0.1235443056,0.0323448442,-0.1194350347,0.170836404,0.0095298765,-0.0167249255,-0.1431786865,0.1042218283,0.1608642638,0.0310923252,0.1593944877,0.1000446454,0.2136788815,-0.081542097,-0.0562525429,-0.0296536349,-0.0535720289,-0.1415596157,0.0612124465,0.099557355,-0.0493745469,-0.0319531858,0.0062590623,-0.1653767228,0.2402308881,-0.0184460599,-0.0725179762]],"hackathon_name":"Destination Hack: London","index":995,"project_description":"Your dream holiday is more affordable than you think!Just this week, my wife and I were researching a summer holiday for the whole family when we realised that we really couldn't afford one. We made a savings plan but I thought we could do more than just squirreling away money into a bank account. Other influences are London FinTech companies like TransferWise, who gave me the confidence to even consider providing consumer facing monetary-like products.A customer (or saver) sets up a recurring transfer using our app and then slowly builds up their travel fund. They also specify what kind of holiday they are saving for, which helps reinforce saving habits by visualising their goal.At the same time, we allow supply side partners to make private sale offers to our savers, based on their account balance as well as holiday preferences. Since our savers are fully qualified, after all they have money in the bank for a trip, they are high value leads. Also, since deals are fenced in for savers, suppliers can charge less than on the internet.Interestingly, it was easier to setup a recurring money transfer than to find hotels for our savers. I finally settled on using Sabre's new Hotel API but unfortunately it is limited to 50 destinations and doesn't have any images. I felt there would be an opportunity to integrate with Google HPA, but they don't offer their hotel ads outside Google properties (as far as I could tell).I probably should have used some of our (Hotels.com) internal APIs.Developed the internal APIs first, which worked well and will replace the Mobile First trend in a few years.  Glad to recruit an iOS developer, I wasn't expecting that. Really enjoyed writing lots of JavaScript for 24 hours.There were a few features of CouchDB that I realised I was using wrong. Also that Stripe is a really good platform for payments, I would definately use them again.As far as I can tell, no one has done this before and I think Paid Vacation is aligned with a number of trends. I could really succeed with some funding. There are challenges on the marketing and regulatory side, but other startups are working through similar issues.Destination Hack: LondonMaciej Matyjas\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 06:49 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Paid Vacation","project_tags":["javascript","couchdb","stripe","jquery","curl","ios","objective-c"],"project_url":"https:\/\/devpost.com\/software\/paid-vacation","keywords":"savers,really,also,using,could,holiday,money,side,saving,since,transfer,paid,first,far,realised,hotel,one,tell,recurring,google"},{"level_0":996,"hack_vector":[[0.1378145218,-0.1012173519,-0.017276952,0.0616802648,-0.0291125011,0.1521696299,0.1741234958,-0.0342840925,-0.0149462018,-0.0314494893,0.0216418859,-0.0542750284,0.1368878633,-0.065658845,0.048735708,0.0358273461,0.2414516956,0.0163068641,0.0518588386,0.119722873,-0.2430227548,0.0209163893,-0.0462652035,-0.0272103772,0.1084382385,-0.0259943865,-0.0433891863,-0.1861940771,-0.008117931,-0.0989590883,0.0516444892,-0.1087121144,0.0392438397,-0.0758607611,-0.0041729431,-0.0186672732,0.1187238619,-0.1396887749,-0.0489789061,0.0107443221,0.0434703939,-0.1363123804,-0.1770432293,-0.0369261354,0.0355798975,-0.0562595502,0.0122974031,-0.0589572042,-0.010609841,-0.2105141282,-0.1091546342,0.0175570771,-0.0964022204,-0.0262610652,-0.1964123398,0.1652516723,-0.124752216,-0.0041418946,0.0376960337,-0.0756942481,-0.0605693534,0.0179698188,0.0826032683,0.0624457002,0.116267778,0.0196879786,-0.1034591869,-0.1628763676,0.0413412191,0.0281854738,0.0784726888,-0.0447607897,0.0204738677,-0.1278951913,-0.0069211079,-0.1192781106,0.1786327362,0.0071949265,0.0363155752,-0.1280421913,0.110114336,0.1616791934,0.0443226136,0.1715868264,0.1170540527,0.1915148795,-0.1157250255,-0.0297213439,-0.039773453,-0.0823660269,-0.1284304112,0.0700950548,0.0832370445,-0.0487570316,0.0086161327,-0.0053869672,-0.1346739084,0.2262918651,0.0336939394,-0.0838136226]],"hackathon_name":"Destination Hack: London","index":996,"project_description":"\u201cNow Boarding\u201d \u2013 A Mobile Apps to take the STRESS out of your Day of TravelA Mobile Apps to take the stress out of your Day of TravelAssures you make your Flight on Time and helps Airlines to achieve On time DepartureOne of the pictures describes a \"Use Case\"  that will walk you thru the Day Of Travel of a passenger ... That describes some of the Features and possibilities this App will provide the everyday Traveler(s) .Some APIs (Tripcase) were hard to implement for Mobile Apps accessHP to work with partners to deploy Now Boarding fully integrated with TripCase, Wayfinding, GoogleMaps,..Destination Hack: LondonWorked on the App Design and Business Functionality and Process FlowRenan Alves\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 06:51 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Now Boarding","project_tags":["sabre","twilio","ibeacon","javascript","html5"],"project_url":"https:\/\/devpost.com\/software\/hp-now-boarding","keywords":"travel,day,hp,mobile,describes,boarding,tripcase,time,app,apps,deploy,events,everyday,features,flight,fully,googlemaps,departure,works,context"},{"level_0":997,"hack_vector":[[0.144719854,-0.156158343,-0.001984885,0.0563243292,-0.0369548462,0.1409786195,0.1821663529,-0.0332500003,-0.0049295495,-0.0320166089,0.0250834171,-0.0072468636,0.1421829462,-0.0638576746,0.0337903053,0.0427907258,0.2378945649,0.0219546873,0.0433179028,0.1145459861,-0.2395128906,0.0157527365,-0.0285682101,-0.053376209,0.124224782,-0.0304277334,-0.0420490429,-0.1876107305,0.0167390965,-0.1159273013,0.0431581624,-0.1093308926,0.0348751359,-0.0684122667,-0.0103695802,-0.0253879577,0.115131557,-0.1534467787,-0.053193368,0.02567086,0.0387604088,-0.1328950226,-0.1468302608,-0.0509930253,0.0133381402,-0.0568766184,0.0296733268,-0.0331567638,-0.0281255692,-0.1990386397,-0.115387097,0.0317134112,-0.1165593117,-0.0578491017,-0.1718090922,0.1625662446,-0.1197893322,-0.0028819172,0.0356802754,-0.0466818325,-0.0498191752,0.0243349764,0.0636998862,0.0761309266,0.1203180701,0.0139460862,-0.1179887131,-0.1443300396,0.0211666357,0.0062783053,0.07124383,-0.0526031926,0.0199387465,-0.1277534664,-0.0212011952,-0.1132848039,0.1736234874,0.0142573472,0.0334075764,-0.1583071798,0.1262114197,0.1747379154,0.0081219058,0.1718461365,0.134393543,0.2050976604,-0.1248358116,-0.0047818338,-0.0336084664,-0.0731237903,-0.1210125685,0.0854910389,0.0714583397,-0.0178310368,0.0212155078,-0.042823486,-0.1391388029,0.2026407123,0.0353115574,-0.0698232651]],"hackathon_name":"Destination Hack: London","index":997,"project_description":"Unique last minute weekend gateways combining affordable air ticket and short rental accommodationPeople have changed the way they travel. Among other changes, low cost carriers and short term rental have made traveling more affordable and more spontaneous.Existing online travel agencies haven\u2019t yet incorporated these changes in traveler behaviour and that is why we have decided to come up with the final solution: a last minute booking website and newsletter that pushes to our users last minute weekend getaways combining cheap air transportation tickets and short term rental accommodation.Destination Hack: LondonNil Sanz\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 06:59 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"6weekends","project_tags":["javascript","node.js","express.js","sabre","airbnb"],"project_url":"https:\/\/devpost.com\/software\/6weekends","keywords":"changes,short,last,minute,travel,term,rental,existing,decided,cost,come,combining,cheap,yet,getaways,changed,carriers,booking,behaviour,among"},{"level_0":998,"hack_vector":[[0.1330516338,-0.1313590705,-0.0136855971,0.055167906,-0.0475994125,0.1392134726,0.1743290722,-0.0291811675,-0.0010423466,-0.0449518561,0.0082623512,-0.0130826784,0.1234800518,-0.0646183789,0.0311666504,0.0623487607,0.2685585618,0.0384048782,0.0308510121,0.1226918399,-0.2340816557,0.0020809858,-0.0386883058,-0.0520293638,0.1223176643,-0.0156956464,-0.0461441539,-0.1937438399,0.0054696342,-0.1117834076,0.0316499509,-0.1099894047,0.0479748659,-0.0773604661,-0.0049587935,-0.016320914,0.1170061603,-0.137565732,-0.035519354,0.0436561406,0.0293599982,-0.1385130882,-0.1723826826,-0.0562596954,0.005830287,-0.0811386704,0.0323952772,-0.030720247,-0.0359580405,-0.2130662352,-0.0846574754,0.0158487428,-0.0925455019,-0.0799649209,-0.1564312577,0.1765699834,-0.1195942611,0.0128087457,0.0219871793,-0.033218611,-0.0456707999,0.0241194963,0.0605692901,0.0626625642,0.1211172044,-0.0042614611,-0.1304123253,-0.1637787223,0.0354925953,0.0114491787,0.0751828328,-0.0508366264,0.0129348766,-0.1321821809,-0.0276049748,-0.1059026271,0.177855283,0.0107270908,0.0609095283,-0.1488565058,0.1152381748,0.1779821962,0.0244674664,0.1752434969,0.1224249899,0.1837426871,-0.1339048147,0.0079695843,-0.027427882,-0.0875740573,-0.1119328514,0.0869845524,0.0543217883,-0.0173025113,0.0217162203,-0.0380275883,-0.1243854463,0.1991166323,0.049781546,-0.0816959515]],"hackathon_name":"Destination Hack: London","index":998,"project_description":"THE Secondary Seat Market for Airplane SeatsToo many flights stuck in the middle seat, willing to pay other passengers to move to a better seat.Login with TripCase and we'll grab your upcoming flights to let you checkout other seats being offered by passengers and even let you put a price on your seat!NONE!IT WORKS!???Destination Hack: LondonMark McSpadden\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:07 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SeatSwap","project_tags":["javascript","ruby","angular.js","ionic"],"project_url":"https:\/\/devpost.com\/software\/seatswap","keywords":"seat,works,flights,let,passengers,next,better,challenges,checkout,even,grab,inspiration,login,many,middle,move,none,willing,offered,pay"},{"level_0":999,"hack_vector":[[0.1637413949,-0.1538704485,0.0150651587,0.0990401581,-0.0401811451,0.1695771217,0.171187222,-0.0572205111,-0.0331306681,-0.0097845728,0.0047823628,0.0242279898,0.137671411,-0.0776180848,0.0147222178,0.0530550778,0.2424368709,0.030051399,0.0616768301,0.0738976672,-0.2005326599,0.023559086,-0.0418065079,-0.0514129438,0.176356554,-0.0293183718,-0.0643359423,-0.1965707093,0.0224983208,-0.0584538877,0.0438112654,-0.1060989723,0.0660830215,-0.063596569,-0.050652571,0.0097132409,0.1431085467,-0.1160465553,-0.0151910437,0.0772251785,0.0536303297,-0.1562790722,-0.1741043031,-0.0287056454,-0.0381138809,-0.0264856163,0.0355458185,-0.015598895,-0.0151056293,-0.1817271262,-0.0477158763,0.0354883708,-0.1230242476,-0.0379289575,-0.1192941293,0.1441423148,-0.153380543,0.0681831166,-0.0033492364,0.0356568508,-0.0230119955,0.027856309,0.0576429665,0.0792578235,0.1423475593,-0.0353636518,-0.1310399026,-0.1645486653,0.0073742098,-0.0005641094,0.0708702952,-0.0361813121,0.0051960549,-0.1516068578,-0.0533402711,-0.075935632,0.2045838535,0.0209769066,0.0843736604,-0.1446319818,0.128588587,0.1549419165,0.0129940286,0.1450837106,0.155589968,0.174259901,-0.1364870667,0.0588617362,0.0117155816,-0.1046599671,-0.0871701688,0.1049166396,0.0326790512,0.0105355438,0.08508946,-0.0887855887,-0.0626251921,0.1558821946,0.1003342122,-0.0436479896]],"hackathon_name":"Destination Hack: London","index":999,"project_description":"Extensible Data Framework for Next Gen Travel AppsSlack and the Apple WatchCommandLine style integration into SabreProject Design\nHard CodingCool Design\nVisionary Multi Platform Nature of ProjectAbout Modern digital travel trendsGlobal DominationDestination Hack: LondonEverything!!!David Turner\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:11 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SabreTuuth","project_tags":["slack","sabre","github"],"project_url":"https:\/\/devpost.com\/software\/sabretuuth","keywords":"design,project,works,modern,apple,challenges,coding,commandline,cool,digital,domination,global,hard,inspiration,integration,learned,multi,watch,nature,next"},{"level_0":1000,"hack_vector":[[0.1445047408,-0.1369589716,0.013798004,0.0882437155,-0.0439131446,0.1619058102,0.1723859459,-0.0512505732,-0.0241518654,-0.0345934778,0.0077669998,0.0188693851,0.1319723725,-0.081688188,-0.0019616843,0.0703359172,0.2646396756,0.0366005711,0.0555153079,0.0911234096,-0.200389564,0.013448094,-0.041529946,-0.0623388179,0.153026849,-0.0192755852,-0.0653184429,-0.1942970008,0.0250920895,-0.08538948,0.0282203928,-0.0953708366,0.0782017857,-0.0603217371,-0.0259442031,0.0077713253,0.1468643844,-0.1179845035,-0.0126760546,0.0807415694,0.0500679798,-0.1518569738,-0.1784230769,-0.0397185758,-0.0315377675,-0.0553567521,0.0402109176,-0.0106851812,-0.0208253618,-0.1988780797,-0.0551587939,0.0399485193,-0.1070161015,-0.0657830536,-0.1228248179,0.1430339217,-0.1479244679,0.0476792455,0.0053658923,0.0206526145,-0.0179155711,0.0315610357,0.0603402853,0.0722437873,0.1448988616,-0.0360128172,-0.1299551427,-0.167649135,0.0163446888,0.0042718682,0.0655518025,-0.0415701531,-0.0066358522,-0.1455910355,-0.0576115809,-0.0764384866,0.1929005533,0.022717189,0.0818051994,-0.1563415527,0.118610613,0.1608737111,0.0087381089,0.1563238204,0.1462848634,0.1649665982,-0.14472121,0.049157545,-0.0096091982,-0.1148562208,-0.0950955227,0.1001408994,0.0280679595,0.0130021218,0.0673738047,-0.0798029602,-0.0851247907,0.1641968489,0.0953972936,-0.0578364767]],"hackathon_name":"Destination Hack: London","index":1000,"project_description":"Exceptional, handpicked weekendsFor that special weekend away, you need to consult an expert. 3, and only 3, specially selected weekends, each weekend.Destination Hack: LondonBuilt the iOS app in Swift, and integrated w\/ Sabre APIsGraham Hinchly\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:13 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Lawrence","project_tags":["ios","swift"],"project_url":"https:\/\/devpost.com\/software\/lawrence","keywords":null},{"level_0":1001,"hack_vector":[[0.1319021583,-0.1043079942,-0.0355186723,0.0272140428,-0.0366161577,0.1378019303,0.19167009,-0.0298006162,0.0178308506,-0.055664178,0.0183282886,-0.0515503958,0.1154668704,-0.0513065793,0.0437943302,0.0319312401,0.2455665469,0.0202306658,0.0178647656,0.1403829306,-0.2466813326,0.0115409018,-0.0388022326,-0.0285844374,0.0922565758,-0.014360318,-0.0237281956,-0.164702639,-0.0191288777,-0.1273812503,0.0295662805,-0.1196253672,0.0347406156,-0.0767741576,0.0156269856,-0.0335827433,0.1123000085,-0.1441378146,-0.066853568,-0.0008724479,0.0297726803,-0.1258697808,-0.1445348263,-0.0626952276,0.0538639575,-0.0934538767,0.0183421727,-0.0423549302,-0.0435028076,-0.2060825229,-0.1327012479,0.0034680539,-0.0880974531,-0.0496640615,-0.1871499568,0.156200245,-0.1030677631,-0.0492545366,0.0539591126,-0.0936983824,-0.0736997426,0.0151901105,0.0756281689,0.0328856818,0.0929411203,0.0269223172,-0.1201597527,-0.1443884373,0.0447321013,0.0378259532,0.0611916929,-0.0564445145,0.0291306525,-0.1160098687,-0.0021115413,-0.132973507,0.1590470225,0.0069456189,0.0190321971,-0.1408299506,0.1016281471,0.1765571088,0.0232879575,0.1895216554,0.0969229564,0.1789797693,-0.1207986623,-0.0306638759,-0.0472637974,-0.0798856169,-0.1316491216,0.0680197552,0.0794614404,-0.0403990448,-0.0075879414,0.0002576667,-0.1669445485,0.2483785748,0.0114693725,-0.0894362405]],"hackathon_name":"Destination Hack: London","index":1001,"project_description":"Stop watching videos or posted photos of your friends, just Be ThereA lot of people seat in front of a TV screen or laptop and watch videos. Even if they are impressed by the place where the video or the photo were taken, they won\u2019t probably think to go there since they don\u2019t know where is it and it is too complicated to plan the trip.We would like to change it and to give these people a new way of traveling - from couch to couch!You are watching a new movie in one of the video platforms and you are impressed by a picturesque place in it. You notice a button from Be There startup inviting you into the movie and you click it. You get a number of locations where the movie was made and you can choose the one you would like to visit. We help you to plan your perfect trip to the place.During actual trip you shall have your itinerary in Be There mobile application and we will remind you about activities you have planned. Hence, you will never miss anything you wanted to do!\nUsing Be There mobile application you can attach photos and videos to activities and share it. The photos and videos will be equipped with Be There button and if many people click on it or, better, book with Be There, you get paid!Destination Hack: LondonIdea creatorUser journey nailing, technical  leadership.Dean Bryan\n          posted an update\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:50 AM EDThttps:\/\/www.dropbox.com\/sh\/k1c9bu68bvpqoxn\/AADCmx05yjr3q4kZMzm1p22Pa?dl=0Mobile and iWatch App filesLog in\n      or\n      sign up for Devpost\n      to join the conversation.Anastasiia Domina\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 27, 2015 11:11 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"BeThere","project_tags":["sabre","getyourguide","tripadvisor","twilio"],"project_url":"https:\/\/devpost.com\/software\/bethere-hvw45","keywords":"place,people,movie,trip,videos,like,photos,one,mobile,would,plan,get,couch,click,button,application,impressed,new,activities,video"},{"level_0":1002,"hack_vector":[[0.1504407674,-0.117983602,0.0012136984,0.04617697,-0.0184849072,0.134633556,0.1920675784,-0.0283428505,-0.0346080959,0.0031062185,0.0199750643,-0.0377609208,0.1367103904,-0.0697273463,0.0480369963,0.0314312354,0.2219714671,-0.0080996193,0.0577567816,0.1178396717,-0.2525337636,0.0168704484,-0.041732803,-0.0309411101,0.1171059236,-0.0397270136,-0.0441012383,-0.191741392,-0.0003565625,-0.1090377867,0.0673500374,-0.1003039628,0.0371246897,-0.0824768469,-0.0225745719,-0.0157313906,0.1050893068,-0.143104881,-0.0358635858,0.0133375898,0.0464647673,-0.1281847358,-0.1567552239,-0.0359415002,0.0426264293,-0.0530325361,0.011904262,-0.0715110227,-0.0047722752,-0.2159816176,-0.1123897806,0.0301779937,-0.1158995628,-0.0112992711,-0.1975598782,0.166220665,-0.1496995986,-0.0012361272,0.0286127049,-0.065497376,-0.047919888,0.0231167022,0.0675942227,0.0655700862,0.1302065998,0.0014310022,-0.1073073596,-0.137978822,0.0262675416,0.0095996689,0.0742767379,-0.0443636887,-0.0038727568,-0.1297502816,0.0044206306,-0.1145951003,0.1836518794,0.0154648013,0.0338393077,-0.1459269673,0.1239172816,0.1539726406,0.0366015434,0.1569589376,0.1358034611,0.2233667523,-0.0971724391,-0.0162621476,-0.0217608269,-0.0729814172,-0.1385858059,0.0691129714,0.0872293711,-0.0246332195,-0.015609487,-0.008506245,-0.1404605359,0.1895327121,0.0379057415,-0.0698894858]],"hackathon_name":"Destination Hack: London","index":1002,"project_description":"The easiest way for booking an AWESOME trip experienceWe pretend to give a full travel experience to the final userUses multiple APIs to have all the needed for a complete travel (flights, car renting, accomodation, activities... ) and the list only could go largerInclude as many APIs as possible to make it as complete and easy as the customer deservesBeing capable of achieve such great challenge in such an event, more being our first time in a hackathon, but not the least excitedGet knowledge of very exciting new APIs and also other people from different places with differents thinkings waysSocial network, mobile tracking, checkin thru wearables...Destination Hack: LondonMostly worked in the design and frontend of the appTom\u00e1s Barderas\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:19 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Route99","project_tags":["javascript","jquery","android"],"project_url":"https:\/\/devpost.com\/software\/route99","keywords":"apis,travel,complete,works,first,event,excited,exciting,experience,final,flights,differents,full,get,give,go,great,easy,deserves,different"},{"level_0":1003,"hack_vector":[[0.1102709621,-0.0786789432,-0.0372580662,0.0157953873,-0.0360496528,0.1284667701,0.1939942092,-0.0200460926,0.0010881197,-0.0277814437,0.0167829953,-0.0603126585,0.1200159639,-0.060543254,0.0553936586,0.0358163007,0.2438045889,0.0274667535,0.0167310722,0.1344450414,-0.2322620004,0.020382328,-0.0331663974,-0.0393903777,0.084824279,-0.0049682292,-0.025748333,-0.188159138,-0.0072918111,-0.1051547304,0.0414833799,-0.1334215403,0.026818566,-0.0897552222,0.0079367245,-0.0175899118,0.1066685393,-0.1414724886,-0.0630038232,0.0052642766,0.0075282739,-0.1450526416,-0.1497999877,-0.0506429933,0.0596890748,-0.0855605304,0.0139932726,-0.048663374,-0.040931154,-0.2126394808,-0.1289721578,-0.006946079,-0.0831263363,-0.0503752418,-0.1826426238,0.1739295423,-0.1082266346,-0.022284979,0.0403859355,-0.1045190617,-0.0690129623,0.0145279486,0.0773610175,0.0630481392,0.105383724,0.0180524439,-0.1020236984,-0.1402222365,0.0650746077,0.0170777012,0.0718518496,-0.0658054873,0.0361097045,-0.1118313372,0.0154407583,-0.1508620828,0.1535636485,-0.0008172779,0.0302151181,-0.1372361928,0.1258990616,0.174144417,0.0681727082,0.1863622665,0.0851625949,0.1777572632,-0.1245931908,-0.0436779968,-0.0253586024,-0.0833711475,-0.1567434072,0.0473221056,0.0901522413,-0.055136662,-0.0050833556,0.0156234419,-0.161270842,0.2201782614,0.0038105946,-0.0965712741]],"hackathon_name":"Destination Hack: London","index":1003,"project_description":"Find available seats for your flight in seconds - online and via text messageWe want to empower users to make an informed decision when booking seats, quickly. OhSeat allows travellers to get seating information via text message in seconds - simply text us with your flight number and we will tell you which seats are the best out of those still available for your flight. Include your current seat and OhSeat will tell you whether you can switch to a better seat within your travel class. Our text service allows users to get seat information even when wifi\/3G reception is unavailable and our responses include reasons for our seat suggestions.Our service sends queries to three services and aggregates the responses from each to choose the best available seat for the user. We scrape FlightAware pages to match flight numbers to airplane models, then call SeatGuru and Sabre Seat Map apis to find the best possible seat. Our server-side logic is written in python Flask and we serve our requests to mobile using Twilio.You: \"Im on flight BA233, which seat should I take?\"\nResponse: \"For your flight towards DME you should book seats 21D, 21F, 21A, 21J. Seat 21D has extra legroom. The footrest at this seat is attached to the seat. The tray table is in the armrest, making the armrest immovable and slightly reducing seat width. There is no floor storage for this seat during take-off and landing.\"We want to:Destination Hack: LondonNick Tikhonov\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:22 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"OhSeat!","project_tags":["python","flask","twilio","sabre","jquery","bootstrap","html5","css3"],"project_url":"https:\/\/devpost.com\/software\/ohseat","keywords":"seat,flight,ohseat,service,text,seats,best,tell,get,include,take,responses,next,information,available,armrest,users,want,allows,informed"},{"level_0":1004,"hack_vector":[[0.1167626083,-0.113785103,-0.0339064896,0.0206725616,-0.0306270327,0.1126438305,0.1839055717,-0.0141851949,-0.0089223031,-0.0446363911,0.0097550415,-0.0644057617,0.1327227354,-0.0607518964,0.0535826422,0.0353734829,0.2255573422,0.004164522,0.0234407205,0.1413566768,-0.2498066872,0.017080389,-0.024758134,-0.0321577825,0.0889404342,-0.0164531358,-0.0263933018,-0.1637513936,-0.0143791111,-0.1162005663,0.0459740013,-0.1135809869,0.0268030353,-0.0692359433,0.0029240742,-0.0434499308,0.1072555855,-0.1511639506,-0.0534657761,-0.0093120178,0.0355034433,-0.1228716224,-0.1530614048,-0.0558743924,0.0663627908,-0.0791353658,0.01428496,-0.0598137975,-0.0297420714,-0.2186638117,-0.1400054693,0.0064562028,-0.0891539082,-0.0362708606,-0.2077404559,0.1761120409,-0.1109305546,-0.0417679958,0.0470487475,-0.1069416627,-0.072498627,0.0164805148,0.0680885911,0.0494748466,0.1012735218,0.0306858644,-0.0986454561,-0.1365562975,0.0441294424,0.0262008756,0.0677485168,-0.0581967086,0.017945217,-0.1077973694,0.0086805476,-0.1304651499,0.1522746384,-0.0032694843,0.0112651996,-0.1348188818,0.1088891923,0.1715462655,0.0377450883,0.1908114851,0.0948970616,0.1994399875,-0.1073562503,-0.042918656,-0.0417901203,-0.0732085183,-0.1422598511,0.0593312159,0.0958220661,-0.0534807816,-0.0234193411,0.0099914679,-0.1758517772,0.2336252779,0.0053427266,-0.0838536844]],"hackathon_name":"Destination Hack: London","index":1004,"project_description":"Experience the world one experience at a timeThe most common way of travelling is sightseeing and going to the top destinations of an area but some people want to have a more immerse cultural experience rather than the informational tours. You can use Foursquare to find the best restaurants, but who's going to show you the best street food? You can use TripAdvisor to find the best attractions, but who's going to show you the laid back-areas where locals go to avoid tourists? How can you truly immerse yourself into the culture within a weekend or a few days? Travellers can do that through Localize.Me.Localize Me is a web service that allows people to find unconventional and exclusive activities organized by locals and provides them with all the information they will need to fulfil that activity, from transportation to accommodation.There is an increasing trend for the democratization of tourism and these services are already out there: Vayable, yPlanApp, Simpki, Airbnb, etc., which is good, because it means it's a good business. But in order to have a complete travel experience, you have to go and sign-up for each service and make a separate search. One for the transport, one for the accommodation and one for the experience.We want to merge all of this and make it easier for the traveller to achieve the cultural experience that they are looking for without spending too much time researching about flights and accommodation.Localize me focuses on the experience.On the other hand, we also want to give locals the opportunity to earn on the side by just hosting someone for dinner or going fishing.Localize.Me wants take out the hassle of planning a holiday and change the way travellers experience the world.Destination Hack: LondonMeztli Morales\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:21 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Localizeme","project_tags":["sabre"],"project_url":"https:\/\/devpost.com\/software\/localizeme","keywords":"experience,going,localize,accommodation,best,find,want,locals,one,show,cultural,go,good,immerse,people,service,make,use,way,travellers"},{"level_0":1005,"hack_vector":[[0.1288695484,-0.1080955341,-0.0136900702,0.0719448403,-0.0297197979,0.1575058103,0.1841504574,-0.0307203159,-0.0287855994,-0.0205085445,0.0150798392,-0.0220385287,0.1368296891,-0.0827085972,0.0283196867,0.0504884347,0.2557744682,0.015645558,0.0517729558,0.1109002307,-0.2264509946,0.0217765365,-0.0434982926,-0.0382400826,0.1372991055,-0.0266197305,-0.0620595366,-0.1957027018,0.0061064945,-0.0864367113,0.0494703874,-0.1091816425,0.0552789867,-0.0721750408,-0.0189288501,0.0061285566,0.1322240084,-0.1224249899,-0.0186284371,0.0397895426,0.0445343517,-0.1461391747,-0.1863763481,-0.0335939452,0.016923381,-0.050810881,0.0304430109,-0.0402509645,-0.0088543622,-0.2109066695,-0.0777923167,0.0239890907,-0.1048991457,-0.0293856338,-0.1727236658,0.1651630104,-0.1444266587,0.0210319068,0.0294571668,-0.0384059027,-0.0438612066,0.0244096965,0.0724090487,0.0735337883,0.135011822,-0.0041527571,-0.1053764001,-0.1622872204,0.0394941047,0.0064330804,0.0718321279,-0.0410985164,0.0109478887,-0.1309068203,-0.0166461971,-0.1020472348,0.1883652061,0.0045469389,0.0602995083,-0.14415811,0.1183956042,0.1691121608,0.0351092219,0.1694557369,0.1296801269,0.1859699488,-0.1259110272,-0.0019658657,-0.0155154979,-0.1008746848,-0.1295985729,0.0745737329,0.0614582263,-0.0159371961,0.0346906669,-0.0314389281,-0.1230305731,0.1868405193,0.0700374842,-0.0717169121]],"hackathon_name":"Destination Hack: London","index":1005,"project_description":"Shop for your tripsDemonstrate the power of Sabre APIs to change business models.Tour operators use a simple web interface to create trip \"apps\". Consumers download the GypsyFeet Travel Marketplace app to find interesting trips & activities. Consumers can easily book these trips using the marketplace app.Completing the entire set of end-to-end scenarios in the time given was challenging for a 3 person team.Destination Hack: LondonArun Rajappa\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:36 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"GypsyFeet London Hack","project_tags":["objective-c","ios","node.js","angular.js","mongodb","express.js","git","github"],"project_url":"https:\/\/devpost.com\/software\/gypsyfeet","keywords":null},{"level_0":1006,"hack_vector":[[0.1404426843,-0.131980598,-0.0252627488,0.0374016948,-0.0353966169,0.1289179921,0.1935518086,-0.0166499522,-0.0173960384,-0.027233839,0.008412892,-0.0422508344,0.1574013531,-0.0674337074,0.0515032224,0.0210961942,0.2243977487,-0.0021050391,0.0355356447,0.1258063465,-0.243666485,0.0124513991,-0.0255361833,-0.0357720405,0.1258789003,-0.0271456409,-0.0336318612,-0.1612309515,-0.0005006804,-0.1079731509,0.0548126101,-0.1083929688,0.0267168619,-0.0672179684,-0.0184885804,-0.0232839044,0.1208181009,-0.1470061541,-0.0511597805,0.0115537373,0.0547781512,-0.1198482662,-0.1498539299,-0.0423048735,0.0519925356,-0.067803897,0.0214655269,-0.0595326275,-0.019450549,-0.2098926604,-0.1384904981,0.0186899547,-0.1107857302,-0.0330426469,-0.193760246,0.1767126322,-0.1283276528,-0.0270411074,0.0370958112,-0.0777580068,-0.0647829771,0.0275232513,0.0644128546,0.0581982248,0.1194045544,0.0123432064,-0.1043344885,-0.1383683085,0.022947168,0.0145414816,0.0641198456,-0.0427386537,0.0034963419,-0.1182429194,-0.0065287021,-0.1184833273,0.178463608,0.0066784597,0.0070896544,-0.1429653317,0.1160169244,0.1717435569,0.0225440599,0.1682591438,0.1205500439,0.2063966841,-0.101951696,-0.011898105,-0.0212921202,-0.0791643634,-0.131962806,0.071946837,0.0844559968,-0.0161725506,0.0045226137,-0.0151043562,-0.1595862508,0.2261603326,0.0217965711,-0.0677812025]],"hackathon_name":"Destination Hack: London","index":1006,"project_description":"Beautiful and simple way to get offers from many providersWe believe that the most important thing are the travelers as persons and the relationships between others rather than any technology.Technology makes us life easier, which is cool, but at the end, is the interaction with peers that makes our lives more valuable.What we try to do is to create a close communication between travelers and services providers. So that each one can trust each others. And, encourage providers to make a gift to its clients. Something little maybe, but that it may be remembered for ever.Destination Hack: LondonJavier Orellana\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:13 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"gift","project_tags":["javascript","html","handlebars.js","css","meteor.js","twilio"],"project_url":"https:\/\/devpost.com\/software\/gift-ennc1","keywords":"providers,makes,travelers,technology,others,valuable,life,interaction,important,gift,ever,encourage,end,lives,easier,create,cool,communication,close,clients"},{"level_0":1007,"hack_vector":[[0.1294228137,-0.1054670587,-0.0176786277,0.0200685877,-0.0166721903,0.1213846877,0.1934810579,-0.0220643636,-0.0135449823,-0.0217750315,0.0247254632,-0.0727108195,0.1322304159,-0.0635789931,0.0582952611,0.0306098014,0.2274908125,-0.003280174,0.0403991453,0.1317756921,-0.2455278784,0.0416568965,-0.040037889,-0.031425707,0.0810946822,-0.0364023075,-0.0271900408,-0.1828537732,-0.0165966228,-0.1079288498,0.0587309375,-0.1146503836,0.033400327,-0.0874974132,0.0024011976,-0.0254497938,0.1069716737,-0.1536258161,-0.0533824004,-0.0157584865,0.0246256627,-0.1444197744,-0.1603216082,-0.0462540723,0.0651121214,-0.0693273395,0.0148440832,-0.0773816034,-0.0252242889,-0.212827608,-0.1439858526,0.0125325341,-0.0998759717,-0.0228952877,-0.208287254,0.1570423692,-0.1214519516,-0.0343778878,0.0549721196,-0.1080898345,-0.0731791854,0.0206968505,0.0781880021,0.0583201721,0.0964022428,0.0234922525,-0.0944897905,-0.1318433732,0.0421658754,0.0191846918,0.0789823905,-0.0639988184,0.0280946493,-0.116701901,0.0196203217,-0.1424209625,0.1613274515,0.0040055816,0.0234778486,-0.1295207441,0.1239660382,0.1608495265,0.0448901691,0.1713314652,0.0991357341,0.1880351007,-0.1111314148,-0.0483932868,-0.0342672095,-0.0789242461,-0.1433006972,0.0543610454,0.0850982741,-0.0555511303,-0.0197860468,0.0089209825,-0.1595042348,0.2079269886,0.0065787854,-0.0817632824]],"hackathon_name":"Destination Hack: London","index":1007,"project_description":"Connecting flyers with baggage space to charities in need\u201cTravita\u201d - an online solution to link flyers with spare baggage capacity with charities that need items that are cheaper overseas, using the Twilio and TripCase APIs.As a frequent flyer I often buy laptops, clothes and other goods overseas in duty free or in other shops overseas to take advantage of lower prices. Then a few years ago I was sent to South Africa, a lecturer at a local University asked me if I could get copies of an economics textbook they needed because textbooks are very expensive there. He also mentioned that electronic items like computers were also extremely expensive. So, I had a brainwave! Why not connect flyers who want to donate to charities that need items from overseas? Many travellers are reluctant to donate money to charities, because they maybe unsure about where the money goes, and may want to shy away from voluntourism. And so Travita was born!Travellers use their Trip Case credentials to log into the Travita website or app. Based on the final travel destination of their journey, they are directed to Charities and items that the Charities want. The Traveller then selects an item they would like to purchase for the Charity. A text message alert is sent to the Charity via Twilio informing them of the purchase.The user then picks up the item at an airport shop or may opt to buy the item second hand.In the future an app version of the website will be available. The traveller will be able to drop off the item in a smart box at the destination airport and the charity will be informed of the drop off and in flight journey using text messages from Twilio.We plan to also contact airlines to get them onboard. Monetisation will be through sponsorship from airlines as part of their strategy for  Corporate Social Responsibility (CSR), who will also pay for the awarding of Air Mile points to travellers as a thank you for their charity work.Other monetisation could come from advertising pop ups on the app or website. During\/after a journey passengers could fill in a customer survey regarding the flight or trip and this information could be sold to the various stakeholders in the journey e.g. airlines, hotel chains and so on. And after completing the drop, the traveller has the option to share news of their charity donation (and Gift Aid) to Facebook or Twitter, which includes an advert from some of the sponsors.Destination Hack: LondonI was the idea person and worked on the pitch and the overall direction of the project.I am the co-founder of a travel start up called Travique.I worked on front- end design, development and user journey of stakeholders.I was responsible for back-end development of the prototype. I worked with various API technologies such as Twilio and Tripcase as well as mySQL database.Kate Rushton\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 01:20 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Travita","project_tags":["css","html","php","twilio"],"project_url":"https:\/\/devpost.com\/software\/travita-b9nqj","keywords":null},{"level_0":1008,"hack_vector":[[0.1359221041,-0.1308978051,-0.0157120079,0.0531500839,-0.0325806402,0.1525133699,0.1906749904,-0.0343364067,-0.0084418813,-0.0177621618,0.0187505148,-0.0174228214,0.1366262138,-0.0581082031,0.033564508,0.0406382419,0.2442691475,0.0242894143,0.0335214585,0.1180124432,-0.2369097769,0.0213748142,-0.0290403832,-0.0321714841,0.1398475468,-0.0042701047,-0.0421693847,-0.1901688129,0.006157577,-0.1101383418,0.0559772812,-0.1259656698,0.0419287272,-0.0783622488,0.0031074116,-0.0252388604,0.1099814549,-0.1366246045,-0.0466149636,0.0094382856,0.0367863439,-0.1507919729,-0.1542525738,-0.0551186018,0.0209421236,-0.043888174,0.0017212597,-0.0326921828,-0.0283824503,-0.1976213753,-0.1059727892,0.0232396349,-0.1037349775,-0.0514573082,-0.1766462922,0.1623673141,-0.1271317154,-0.0051145041,0.039224796,-0.064742364,-0.0479564145,0.0281273015,0.0712169111,0.0620650761,0.1109903157,0.0149071543,-0.1191848591,-0.1495704353,0.0406349748,0.0209022556,0.0662761778,-0.0447666906,0.0352475978,-0.1174786165,-0.0210863817,-0.1242227256,0.1652133912,-0.0004554265,0.0359940901,-0.1482278258,0.1145914346,0.1696900576,0.0432473682,0.1890535653,0.1188509539,0.2039768845,-0.1183201894,-0.0112799844,-0.0280011445,-0.0775218233,-0.124052681,0.0773678645,0.081029214,-0.0308847763,0.0218983479,-0.0146929389,-0.1469603181,0.2138878703,0.0250930041,-0.0763732716]],"hackathon_name":"Destination Hack: London","index":1008,"project_description":"\u2018The 360 degrees inflight virtual reality travel experience\u2019Use the sweetspot (the time between taking off and landing), by providing passengers with virtual reality options, which enhance their travel experience.\n\u2018The inflight virtual reality travel and Try before you Buy experience\u2019Ikaros VR offering\nA B2B solution which offers a new way of capturing passengers, and brings together airlines and third party suppliers, using virtual realityGamify your travel experiencePart 1  Plan your flight transfer, airport path, expoler and buy any product, transfer to hotel\n\u00a0\nPart 2  Try before you buy, tours, escapes, products, click & collect, etcDestination Hack: LondonOrfeuo Lionor\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 27, 2015 01:38 PM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Ikaros VR","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/ikaros-vr","keywords":"buy,travel,experience,reality,virtual,part,try,transfer,passengers,landing,expoler,inflight,ikaros,hotel,gamify,flight,way,escapes,etc,offering"},{"level_0":1009,"hack_vector":[[0.1461690664,-0.1139676422,-0.0192390978,0.0551283546,-0.0399548747,0.1620490998,0.1862613261,-0.0365275219,0.0082643265,-0.0472243614,-0.0020437355,-0.0233407207,0.1181457788,-0.0555317253,0.0280773286,0.0426150262,0.258289516,0.0370307676,0.0379861034,0.1165364757,-0.2363777459,0.0041251676,-0.0329141393,-0.0434180386,0.1221911311,-0.0130697461,-0.03520713,-0.1867065579,-0.0095331063,-0.1119208038,0.0403312184,-0.1190664098,0.0488641821,-0.0784151331,-0.0126181589,-0.0220647696,0.1225353703,-0.1362878978,-0.0416657068,0.0421905108,0.0446025059,-0.1338635087,-0.1508132815,-0.0577028245,0.0244677085,-0.0869637951,0.0243103281,-0.0261620302,-0.0448702164,-0.2158820033,-0.098173894,0.0101981768,-0.0939481035,-0.066317074,-0.1632203162,0.1529806703,-0.1286735386,-0.0064310473,0.0298929382,-0.0393299982,-0.0509775095,0.0131178265,0.064830482,0.0351371877,0.1220936775,-0.0040072049,-0.1261939257,-0.1578114927,0.0395944007,0.0264895614,0.0691293031,-0.0581090227,0.0049939845,-0.1303297579,-0.0305136256,-0.1124846712,0.1826713979,0.0257137045,0.0465926081,-0.1562605649,0.1024500728,0.170243904,0.0166395381,0.1819557548,0.1252671033,0.1869182587,-0.1279759407,0.0186746884,-0.0214804467,-0.0907484144,-0.1204902679,0.0862708837,0.062956579,-0.0109042833,0.0103632007,-0.028632544,-0.1209261492,0.2194354683,0.0436462201,-0.0756833553]],"hackathon_name":"Destination Hack: London","index":1009,"project_description":"A Smart Text Based Travel AgentIts hard to book flightsJust text sarah when you want to travel and She'll reply with pricing options. If you like it, she'll book it for you and your e-ticket will arrive in your email.Building an AI Chatbot that works in 24 hours???? INSANE!!!Finish implementing the AI, hook it up so there is no manual input necessary and launch as my next startupDestination Hack: LondonFelix  Oginni\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:42 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Sarah","project_tags":["html","css","sabre","textmagic","ruby-on-rails"],"project_url":"https:\/\/devpost.com\/software\/sarah","keywords":"works,sarah,book,next,ai,startup,implementing,arrive,travel,building,challenges,chatbot,email,finish,flights,hard,hook,hours,input,text"},{"level_0":1010,"hack_vector":[[0.1187255457,-0.1100457907,-0.0213512145,0.0271185301,-0.0227085557,0.1263534874,0.1897113472,-0.0244888011,-0.0146727581,-0.0166252758,0.0260111764,-0.0659024641,0.138264522,-0.0609917007,0.0585068539,0.0347720049,0.2371467799,0.0055045499,0.0356297381,0.1359755844,-0.2443390787,0.0397003777,-0.0362289362,-0.0320958421,0.088474229,-0.0253248326,-0.0347632691,-0.1896703392,-0.0093093663,-0.1040297449,0.0662720725,-0.114942506,0.02700237,-0.0914837122,0.0013740971,-0.0295572057,0.0992225334,-0.144781068,-0.0505278483,-0.0196217895,0.0214344133,-0.1438616514,-0.1606225967,-0.046995692,0.0631304458,-0.0538429134,0.0075890031,-0.0666383132,-0.0259215925,-0.2111539096,-0.1363680661,0.0154496618,-0.0937253237,-0.0311549343,-0.2015708536,0.1647041887,-0.1096815839,-0.0267358571,0.0519035645,-0.1041496396,-0.0651809275,0.0242027435,0.0787498057,0.0633641556,0.092815876,0.02456747,-0.0953535587,-0.1369714737,0.0437024906,0.0184534416,0.0762419626,-0.0533551089,0.0366016962,-0.1141167432,0.0049682301,-0.1391816139,0.1594972312,-0.0081435768,0.0231282767,-0.1314376891,0.1248765811,0.1637406796,0.0526924841,0.1774568707,0.097005792,0.1983970851,-0.1062041894,-0.0516876467,-0.0362148955,-0.0716828257,-0.1443272382,0.0550718307,0.087870419,-0.057491824,-0.0109569523,0.0137650389,-0.1615723372,0.2129900604,0.0039359522,-0.0891227946]],"hackathon_name":"Destination Hack: London","index":1010,"project_description":"Find and book fun activities offered by locals in your city or aboardI love travelling! But, 95% of the suggested holiday activities in current travel apps are aggregated from big companies who retain most of the profit. Local activity providers rely on word of mouth or the cooperation with travel agencies to secure business. The travel agencies also take big margins for connecting the tourists with these activity providers.Some small providers try to offer their activities directly, but being honest, I've never feel completely safe. However, by connecting with providers and getting to know them as locals, I've met awesome people around the world. With the help of their feedback I came up with the idea of Sharrio. Shariio is a mobile app focusing on connecting people who would like to participate in fun activities locally.We give our providers the ability to post their activities, chat to interested participants within the app and connect directly with each other. Based on the review system and the ID verification feature, tourists feel safe connecting with the local providers directly, and can get an authentic experience at a lower cost. The local providers also take a much higher cut of the revenue and this makes their business more sustainable.The user connects with Facebook. Based on their location he will see all activities offered near-by including important details. Swiping right saves the activity to a favourites list and swiping left skips to the next activity offering. Reviewing the favourites list allows the user to chat directly with the activity provider to determine any unknown details, and can then request a booking.Integration of the following two payment solutions, allowing app monetisation and providers to accept payment directly in the app:Destination Hack: LondonSherin Nuernberg\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:38 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Shariio","project_tags":["javascript","meteor.js","ios","android","apache","hammer.js"],"project_url":"https:\/\/devpost.com\/software\/shariio","keywords":"providers,activities,activity,directly,app,connecting,chat,payment,travel,user,local,favourites,next,experience,big,feel,makes,details,people,review"},{"level_0":1011,"hack_vector":[[0.1487004906,-0.1056509092,-0.0204401035,0.070471175,-0.0156124337,0.161348626,0.1851939112,-0.0384931453,-0.0170532707,-0.0111326482,0.0228524413,-0.0633427873,0.1439680457,-0.0855761766,0.0416835658,0.0229445565,0.2338125706,0.0117093846,0.0603929833,0.113007918,-0.2457001954,0.0421194844,-0.0418376364,-0.0229347814,0.122852914,-0.0415283963,-0.0523170233,-0.2070390135,-0.0208431985,-0.0784875229,0.072025992,-0.1187130958,0.0486805812,-0.0824095234,-0.021392474,-0.0036539899,0.1200131848,-0.1315521449,-0.0438829213,0.0157595873,0.0447308794,-0.1614738256,-0.1751108468,-0.0321204811,0.0394938104,-0.034581162,0.0149468528,-0.062883012,-0.0248947889,-0.2105914056,-0.1220246255,0.0281406119,-0.1025763676,-0.0031910306,-0.1982565522,0.145666942,-0.1296136826,-0.0031678013,0.0341095589,-0.0689537972,-0.0652706549,0.0203826874,0.0775443316,0.0602847077,0.1167502031,0.0169580728,-0.0911962986,-0.1391917914,0.0306762327,0.016396042,0.0760077983,-0.0561680049,0.0330908336,-0.1245299056,0.0155153843,-0.1077481434,0.1799089164,-0.0043752003,0.0308947638,-0.1341554374,0.1269436926,0.1596843153,0.0489974469,0.1676011235,0.0963304564,0.1978938878,-0.0970312804,-0.0280900169,-0.0165105052,-0.0836324468,-0.1222779304,0.0630873442,0.0516525544,-0.0457339585,0.0147359902,-0.0048876354,-0.1305551678,0.2078765035,0.0353476852,-0.0781635121]],"hackathon_name":"Destination Hack: London","index":1011,"project_description":"Plan you trip with Eeze!Too much time is wasted in planning a trip and we saw gap in market. This inspired us to provide a personalized trip planning solution in 3 simple swipes.This solution enables user to select attractions in the cities. Based on user's selection, app will generate a personalised trip plan. User can also share his\/her planned trip with their friends.Routing process data based on ad hoc selections.\nLimited time.Custom engine to generate routine or path from source to destination.Team Work and Team Efforts!\nCoordinationExtending solution using data available from different set of APIs. \nBuild and Share trips to TripCase APIs.Destination Hack: LondonI worked on backend of this application including google map and its services.I worked on the business side of this projectI worked on the front-end development for this app, creating the prototype you can see in the video.I worked on the UI and design of this app.Jagdish Chichria\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:43 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"TripEeze","project_tags":["android",".net","c#","jquery","hackpad","google-maps"],"project_url":"https:\/\/devpost.com\/software\/tripeeze-nmhs6","keywords":null},{"level_0":1012,"hack_vector":[[0.1244923845,-0.1341255307,-0.0228535626,0.0419835672,-0.040205285,0.1229166836,0.1861578971,-0.019909095,-0.0104060536,-0.0206641965,0.0323398933,-0.0228606854,0.1338323653,-0.053277228,0.0734774396,0.0235888027,0.2295923233,0.0133076543,0.033912845,0.1305300742,-0.2453314215,0.0296981521,-0.0266687386,-0.044661928,0.094986856,-0.0165821705,-0.0183119494,-0.1912408471,0.0098887254,-0.1019525751,0.0400039591,-0.1286022365,0.0205455534,-0.0842054635,0.0028101141,-0.0331331342,0.1025849059,-0.1530632228,-0.0709223747,0.0025959481,0.0232682507,-0.1415249705,-0.1529108733,-0.0595127828,0.0374689922,-0.0575931109,0.0190515835,-0.0538982823,-0.0308285803,-0.1992973536,-0.1211248487,-0.0076547996,-0.101194486,-0.0524055846,-0.1816764325,0.167685613,-0.1005664766,-0.0162473358,0.0473403074,-0.0759673789,-0.0643249527,0.0199561696,0.074283205,0.071604684,0.1010453179,0.0163109563,-0.1122128814,-0.1425577998,0.0475048125,0.0094983401,0.0724820793,-0.0540389307,0.0341832526,-0.1233487353,-0.0131961266,-0.1532684118,0.1657148153,0.0101585425,0.0346097164,-0.1363579184,0.1340260655,0.1800817102,0.0372548439,0.1900611222,0.1138729304,0.1850933135,-0.1242448986,-0.0231018197,-0.0313459039,-0.0777967498,-0.1415808499,0.0706902295,0.0939207524,-0.0462027639,0.0189615786,-0.0192328896,-0.1502094567,0.2067114562,0.0153305223,-0.0779297352]],"hackathon_name":"Destination Hack: London","index":1012,"project_description":"Turn Losses into Revenue by converting empty seats into valuable marketing assetsWhy carriers do not look at it\u00b4s own business to drive disruptiveness in the Social Media Era, by reducing marketing traditional investments, adopting sampling and testing FMCG technics. Use social media to bring empty seats to be won for those participants willing to share and influence others to gain opportunities to win the prize -Empty Seats-\nEmpowering people by offering a last minute opportunity where to get a free seat, 2x1, superdiscounts, or upgrades will drive revenue.Social Gamification Business Intelligent Platform that takes all those empty seats select channels and creates promotions to reach leads and customers encouraging them to participate through viralizing and gamification to access a high value prizes - Empty Seats -  Empowering people by offering a last minute opportunity where to get a free seat, 2x1, superdiscounts, or upgrades will drive revenue.Understand the business process of Revenue Management Sys and how this departments are more financial centric than customer centric, where empty seats it\u00b4s a huge problem to market when times run-out. Gapiffy is the solution to fill that gap when empty seats are running out of time.Automatization of driving traffic processed  to our website, gain followers and fans at Social Media, classified, curate, and segment content to maximize ROI by client acquisition, recovery and retentionNew users\/customers accessing travel market are already threat the way of doing business by disruptiveness caused by the empowering people perspective of Collaborative Economy Growth. Gapiffy needs to address and foresight customer behavior with no time limits.Integrates as SaaS for Sabre Clients willing to lead the new approach to customers management while add features to boost its USP by multiple API integrations asDestination Hack: LondonCoduxe Studio\n          posted an update\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 06:50 AM EDTReady to Hack!Log in\n      or\n      sign up for Devpost\n      to join the conversation.Coduxe Studio\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 06:50 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Gapiffy - Social Marketing Management System","project_tags":["sabre","google-maps","google-places","mongodb","node.js","angular.js","bootstrap","bitbucket","font-awesome","google-fonts","sails.js","html5","css3","less"],"project_url":"https:\/\/devpost.com\/software\/gapiffy","keywords":"seats,empty,social,gapiffy,customer,business,drive,customers,media,empowering,revenue,people,free,services,seat,disruptiveness,gain,clients,gamification,opportunity"},{"level_0":1013,"hack_vector":[[0.1236483306,-0.092761308,-0.0404562689,0.0192455612,-0.023109138,0.1205621287,0.1879256517,-0.0195758585,0.0009460739,-0.038099844,0.020548271,-0.0803516284,0.1230624914,-0.0572348796,0.0640586615,0.0097634522,0.2201182246,0.0072929007,0.0235787705,0.1380210668,-0.2444848716,0.023256937,-0.035849072,-0.0236362871,0.0812570527,-0.0123283444,-0.0171438474,-0.1729326993,-0.0250870343,-0.1124870926,0.0481338091,-0.1227981895,0.0217959564,-0.0903819948,0.0075498573,-0.0372399613,0.1013438851,-0.152472347,-0.0765681118,-0.0157688614,0.0281716716,-0.1231631786,-0.1435976475,-0.0499265641,0.072202675,-0.0801388696,0.0131832631,-0.0686002672,-0.0398799069,-0.2131219953,-0.1581826508,0.0080028009,-0.0896942168,-0.0256733522,-0.1981571317,0.1715191901,-0.0988362804,-0.0474610887,0.0494800955,-0.1257263273,-0.0794875696,0.0139262583,0.0782675371,0.0460708104,0.0939400047,0.0355053805,-0.10422948,-0.1225630045,0.0417516083,0.0281183459,0.0677507743,-0.0567600653,0.0312118828,-0.1107743159,0.0320604444,-0.1380531788,0.1570051014,0.0005933217,0.0079838606,-0.131079182,0.1151017547,0.1650222093,0.0542733297,0.17749466,0.0870526507,0.1911423951,-0.0999642462,-0.0567005649,-0.0387884006,-0.0620707273,-0.1405906975,0.048640117,0.1019344404,-0.0598793477,-0.0226037446,0.0181099772,-0.1761547178,0.2429956496,-0.0145718902,-0.0908640921]],"hackathon_name":"Destination Hack: London","index":1013,"project_description":"Inspiration application to plan your trip.We were looking for application to inspire where you can fly and spend your trip depending on the weather forecastWe have built awesome fully fledged application called SunFollower. The goal of the application is to help you find where you can fly and spend your trip depending on the weather forecast. Imagine you just want to get away, rest on a sunny beach and you don\u2019t want to spend millions on that. You don\u2019t want to check every beach destination you now and individually check the weather forecast, flight prices and hotel prices. SunFollower app pro- vides inspirations for possible destinations from your origin airport togeth- er with extended flight itineraries info, weather forecast and hotels listing. Destinations are presented on a Google Map represented by current weather conditions icons. To see the details of the destination just click on it and see detailed weather forecast (temperature, weather conditions, wind speed and directions) for the following 5 days. SunFollower provides you with graph to visualise the prices for the flights for the next 5 days. You can pick a day from the graph and look for flights to see detailed itineraries and prices and actually pick a flight.\nOk, so you\u2019ve selected your flight, but since you\u2019re departing in just a few days it would be nice if the app could help you with finding a hotel for your stay. And that\u2019s what SunFollower actually does \u2013 it gets you a detailed hotel search to help you pick a perfect stay ;)We had to connect to multiple  API's in order to find appropriate information such as airports. Sunflower connects to Sabre API's, GetYourGuide API, Yahoo Weather API through to SimpleWeatherJS library and our own bridge (middleware) which allows us to connect to Sabre API.We delivered fully fledged application during 24 hours! Keeping the deadline it was the most challenging part of that project because there were lots of work ahead of us! The dev team was so tiny, only two persons were working on the app and finally accomplished the goal, so we are very proud of that.We have learned how to use multiples APIs in order to deliver application which can support travellers. We have struggled a little bit with some technologies issues but finally all of them have been solved.There are two possibilities which are implemented in the app where you can book a ticket and monetise the incoming traffic. These options at the moment has been mocked up - but the plan is to replace the mockups with real booking process. We are also going to implement more intelligent search so that the results would be closer to the users requirements.Destination Hack: LondonJakub Hajek\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:43 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SunFollower","project_tags":["angular.js","javascript","css3","html5","moment.js","chart.js","yeoman","grunt.js","bower"],"project_url":"https:\/\/devpost.com\/software\/sunfollower","keywords":"weather,forecast,sunfollower,application,api,prices,app,flight,days,spend,pick,detailed,see,hotel,help,want,fly,graph,sabre,conditions"},{"level_0":1014,"hack_vector":[[0.151382491,-0.1373959035,-0.0158280507,0.0792061687,-0.0447298847,0.1525287926,0.1811462641,-0.0332245938,-0.0191501174,-0.0218913518,0.0243391022,0.0009066775,0.1488390714,-0.0688744262,0.0280556418,0.0552639589,0.2467680126,0.0210752133,0.0383386165,0.0966332555,-0.2215627134,0.0040194569,-0.0392279588,-0.0434586853,0.1404618621,-0.0292755496,-0.0510406196,-0.1894313097,0.0127816983,-0.0890322626,0.0499516465,-0.088519156,0.0488574021,-0.0678352788,-0.0208355412,0.0105623482,0.1269491613,-0.1270110309,-0.0311544966,0.0526030026,0.0477886349,-0.1274972111,-0.1756506711,-0.021972999,0.0028431781,-0.0541436821,0.0336693451,-0.0392121784,-0.0100844577,-0.2092148066,-0.0823741034,0.0188929178,-0.1054457575,-0.0626407862,-0.1581842303,0.163194105,-0.134038642,0.0213337466,0.0324702822,-0.0158285666,-0.0388530232,0.0369155891,0.0706105456,0.0748575926,0.1403128505,-0.0121061224,-0.1241062135,-0.156340152,0.023237044,-0.0063061053,0.0604904406,-0.0271676406,-0.0047685765,-0.1376591474,-0.0457361937,-0.0987920165,0.2055231184,0.0025897943,0.0556413978,-0.1525440067,0.1214420795,0.1756320298,0.0073178909,0.1622437984,0.1366232038,0.1916559041,-0.1220431775,0.0307935961,-0.0180057622,-0.1038133055,-0.1136424989,0.0974850655,0.04645513,0.0016658817,0.043093577,-0.0506207645,-0.1175707355,0.1939983368,0.0725446641,-0.0641276762]],"hackathon_name":"Destination Hack: London","index":1014,"project_description":"Serendipitous Travel Planninghelping people organizing fun and random tripsinsert dates, budget and interests and find a solutionundersized team, trying to make something originala small app which can use different APIs and could be useful to manyto train my skillsfurther development, possible launchDestination Hack: LondonNico\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:35 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ItineRandom","project_tags":["php","bootstrap"],"project_url":"https:\/\/devpost.com\/software\/itinerandom","keywords":"works,useful,learned,launch,itinerandom,interests,inspiration,insert,helping,fun,find,different,development,dates,could,challenges,budget,app,apis,make"},{"level_0":1015,"hack_vector":[[0.1237614155,-0.1050871089,-0.0205309577,0.0381928943,-0.023315521,0.1389189959,0.2004932761,-0.0248684883,-0.0206714515,-0.0152677177,0.0296753943,-0.053703472,0.1436947286,-0.0742477551,0.0614951737,0.0213007666,0.2322215885,0.0087119145,0.0384262577,0.1172368079,-0.2346707731,0.0389818251,-0.0389920212,-0.0389980227,0.0955139399,-0.0290078185,-0.0317722708,-0.1941715181,-0.0098877652,-0.0866148621,0.0669145957,-0.1227713376,0.0315398723,-0.0901229307,-0.0217928719,-0.0131593989,0.1204330251,-0.1415350288,-0.0524147712,-0.0008800242,0.0295639448,-0.1430717111,-0.1561316848,-0.0363641307,0.0644941553,-0.0430833623,0.0281069335,-0.0618867613,-0.031222932,-0.2072592527,-0.1355671436,0.0069331704,-0.1065472662,-0.018845275,-0.1869450063,0.1558838934,-0.1209253445,-0.0147430664,0.0445071943,-0.0946619287,-0.066748701,0.0203280561,0.0891088322,0.0648688748,0.113718681,0.0089277336,-0.0868628323,-0.1342666745,0.0424753278,0.0137658352,0.0646962598,-0.0536602922,0.0323975533,-0.1215052083,0.0018726193,-0.1395863295,0.172531426,0.0055982601,0.0239553005,-0.1375344247,0.1397437453,0.1698586643,0.0459489562,0.1754130572,0.1058207005,0.1925784796,-0.1080113202,-0.0329167582,-0.0238840729,-0.0828598365,-0.1592726111,0.0633275509,0.078884542,-0.0398584567,0.0077027124,-0.0051915534,-0.1447190046,0.2109211832,0.0219626948,-0.0748618618]],"hackathon_name":"Destination Hack: London","index":1015,"project_description":"Empower End TravelerAirlines are shifting to more and more paid ancillary services. Creating an itinerary that gives the end traveler freedom to choose and buy these services at their own convenience.Once a booking is finalized, agency sends the final itinerary (post ticketing) to the traveler.  Smart Itinerary is designed to display any paid ancillary service bookable at segment level. Customer click on the service he\/she intends to avail. System confirms the service and accepts the payment through a payment gateway. Once payment is through, an EMD is issued and added to the itinerary with the respective service and emailed back to the customer.Wanted to add more sponsors content unfortunately we had only limited knowledge of integration of REST APIS with .NET.Got a good idea on the different sponsors API and how it can be used to enhance user experienceAdding more purchasable content along with destination information to enrich Smart Itinerary and turning it into an up-selling tool that would help agency sell even after they completed their sale.Destination Hack: LondonMohammed Alam\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 05:56 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Smart Itinerary","project_tags":["sabre","scribe","javascript","html5"],"project_url":"https:\/\/devpost.com\/software\/smart-itinerary","keywords":"itinerary,service,payment,smart,ancillary,services,sponsors,paid,traveler,agency,customer,content,different,destination,creating,convenience,designed,would,display,emailed"},{"level_0":1016,"hack_vector":[[0.1180457324,-0.0930500254,-0.0194022451,0.0293187741,-0.0287302006,0.1218477711,0.1816028953,-0.0148636978,-0.0210848954,-0.031663347,0.0192194041,-0.0725773498,0.127142325,-0.0666069835,0.0570505001,0.030332325,0.2278358489,0.0223378669,0.0384552144,0.130635336,-0.2256981134,0.0277312919,-0.0512634441,-0.0407094285,0.0837784633,-0.0116451038,-0.0432974026,-0.1857666969,-0.0184410866,-0.1102873385,0.0429199897,-0.1223096475,0.0282262582,-0.094330892,0.0045318035,-0.0106247365,0.1134569496,-0.1440166086,-0.0595782585,0.012590115,0.0250997823,-0.1419654489,-0.1719253063,-0.0458575673,0.0464781448,-0.0895943865,0.0234135799,-0.0684563071,-0.0390454866,-0.2202845663,-0.1370423138,0.0175327212,-0.0915530622,-0.0369511098,-0.1815286875,0.1830574423,-0.1159907281,-0.0143764801,0.0382129848,-0.0996062458,-0.0649612024,0.023477396,0.0704429299,0.0757403076,0.1105962247,0.0158761032,-0.1084803417,-0.1348148286,0.0379007049,0.0046998258,0.0755604059,-0.0581938662,0.0163408294,-0.1153041944,0.0270855632,-0.1209865138,0.1734217107,0.0086218109,0.032491155,-0.1422498524,0.1263193935,0.1660552621,0.0707590505,0.1571203619,0.1049145758,0.1894649863,-0.1096964926,-0.0586786829,-0.0159946177,-0.079766646,-0.1412712634,0.0454005413,0.0960049406,-0.0536219105,-0.0063673244,-0.0114389732,-0.1664051712,0.2206517607,0.001704628,-0.092353262]],"hackathon_name":"Destination Hack: London","index":1016,"project_description":"Finding you the best airline seat using the Sabre SeatMap & Seat Guru APIThe inspiration for this idea came from a dreaded 18 hour journey to Sydney where Nik spent \u00a3800 hoping that he would get a seat of his choice at that price, only to later find out that post booking they were no legroom seats available.The user enters their flight search criteria, we then use the Sabre InstaFlightSearch to find the seats available (Note; we ran into issues, so we have cached this for now for one airline\/trip) but we then do a live call to the SeatMap API from Sabre to get the seat information for that flight followed by doing a call to the SeatGuru API to get an overlay of the best possible seats.Curating the data from the InstaFlightSearch and using it as an overlay to see available seats in real time per leg of the journey. Purely because we didn't have enough time and wanted to focus on the combination of the SeatGuru API and SeatMap API for a specific journeyBieng able to combine both the SeatGuru API and SeatMap API and putting the fundamentals in place to use the InstaFlightSearchOne needs to focus on specific airlines, a lot of the airlines we did calls on the SeatMap API didn't return a response so we didn't get the seat information to help us find the best seat for the person requesting the journey.We are going to look at seeing if we can re-visit the InstaFlightSearch, focussing on only airlines we know return a response from the SeatMap API together with focussing on airlines who offer specific seats for purchase (like emergency exit seats)Destination Hack: LondonThe entire developmentIvan Fraixedes\n          posted an update\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 08:30 AM EDTBy the way the code is on Github\nhttps:\/\/github.com\/ifraixedes\/hack-destination-london-2015Log in\n      or\n      sign up for Devpost\n      to join the conversation.NIk Murthy\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:44 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AirSeat - Finding you the best seat","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/airseat","keywords":"api,seats,seat,seatmap,instaflightsearch,journey,airlines,get,specific,find,seatguru,best,available,response,return,information,flight,focus,focussing,inspiration"},{"level_0":1017,"hack_vector":[[0.1214462146,-0.1014210507,-0.0296669584,0.0161356349,-0.0378710069,0.1422670335,0.1747873276,-0.0234722402,0.0269134603,-0.0520102568,0.0159529783,-0.0575208217,0.111081548,-0.0401956588,0.0439584181,0.0486586094,0.2566415071,0.0402948074,0.0159420855,0.1380158365,-0.245364964,0.0035057687,-0.0321259089,-0.0369201824,0.087378867,-0.0098954001,-0.0210550651,-0.1819919646,-0.0151090492,-0.1328547746,0.0419275463,-0.124483794,0.0248724073,-0.0907145366,0.025738975,-0.040947102,0.0931387469,-0.1477100253,-0.0605818368,-0.0088008242,0.015359723,-0.1286071688,-0.1418409944,-0.0704501718,0.0516537577,-0.0979585648,0.0132998964,-0.0248453021,-0.050700929,-0.2103532851,-0.1220596358,-0.0046943561,-0.0793921351,-0.0757884681,-0.1894795597,0.1775123626,-0.0917989612,-0.0399894118,0.0534038022,-0.0918420553,-0.0678407475,0.0029985409,0.0616136082,0.0437256843,0.0898492411,0.0361344814,-0.1148358211,-0.1514797956,0.0572177209,0.0261454862,0.0731194764,-0.0634793341,0.0396291129,-0.110173285,-0.0076254094,-0.1373632699,0.1504722685,0.0039737993,0.0271217003,-0.1372783333,0.0928297862,0.1756036133,0.0298506338,0.1915768534,0.0934341475,0.1831057221,-0.1210458353,-0.0355800502,-0.0460775234,-0.0670666471,-0.129901737,0.0681723282,0.0783269033,-0.0531232357,-0.0243467633,0.0075458596,-0.1539510787,0.2371013314,-0.0010358002,-0.100902915]],"hackathon_name":"Destination Hack: London","index":1017,"project_description":"Travel to your favourite events - theatre, opera, gig, fest, sportsSimply start typying the name of your favourite band, football team or theatre play and simple autosuggest will provide you list of matching results. You can select up to 12 events to search for. It's even simpler when you are music lover using last.fm. Simply click on the option, type your username and we'll get the list of your favourite bands.We'll search for events you may like and list them showing earliest first. When you'll find something really interesting like last gig of your favourite band reunited after years or the most exciting football match of the season - don't wait any longer and simply click  TakeMeThere!Now, you can plan your journey or just use default settings suggested for your location and event destination. You can also let us find you the cheapest hotels near the event site. Select the one you like, fill in the reservation form and book complete travel. It's just that simple!We'd like to add more services (car transfers, car rentals) available for our clients with just one click to make their travel even more comfortable.Destination Hack: LondonMateusz Szczygielski\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:36 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"TakeMeThere","project_tags":["go","php","bootstrap","jquery","html","json","sabre","seatgeek","last.fm","expedia"],"project_url":"https:\/\/devpost.com\/software\/takemethere","keywords":"like,favourite,list,simply,click,takemethere,search,select,events,even,simple,football,find,event,travel,car,last,band,one,hotels"},{"level_0":1018,"hack_vector":[[0.1540348977,-0.1518209428,-0.0180876106,0.0665354729,-0.0469310097,0.1563042253,0.1743693948,-0.0428827479,-0.003087919,-0.0480993651,0.0018916376,-0.005768056,0.1312136948,-0.0572737157,0.0147818793,0.0641125962,0.2538023591,0.0390221775,0.0306186061,0.1196311563,-0.2315140367,0.0023122665,-0.0255279355,-0.051226005,0.1274343431,-0.0087105986,-0.0498989895,-0.1804127097,0.0035854296,-0.1185450107,0.0356982462,-0.1147059873,0.0482459627,-0.0626865327,0.0010281543,-0.0283076521,0.1240211502,-0.1452945322,-0.0375651121,0.0486755036,0.0547576398,-0.1363451779,-0.1629528999,-0.0571620651,0.002391614,-0.0738929585,0.0296715759,-0.0215397589,-0.048478011,-0.2155671716,-0.0889244303,0.0233109239,-0.0921009704,-0.0869202316,-0.1617743075,0.1689654887,-0.1129420623,0.0019878405,0.0262910295,-0.0199090131,-0.0419612825,0.0148522435,0.0503601767,0.058513321,0.1201468855,0.0021721988,-0.1326244175,-0.1475697458,0.030523479,0.0141746392,0.0741813034,-0.0484565273,0.0068661626,-0.1307082325,-0.0425779335,-0.097286284,0.175900355,0.0165195595,0.0451333709,-0.1509310305,0.1041967273,0.1802416593,0.0043401839,0.1800217181,0.1238096952,0.1889985651,-0.13196899,0.0100575713,-0.0238276962,-0.0925904438,-0.102667205,0.0898847505,0.0559713878,-0.0139077902,0.0222788546,-0.0409954116,-0.1222579554,0.2069974691,0.0480248928,-0.0647029951]],"hackathon_name":"Destination Hack: London","index":1018,"project_description":"You say when, we say where!Sky SkoutYou say when, we say where!Sky Skout is the world's first travel discovery and booking service targeted towards students and young professionals looking for a spontaneous getaway. \"I just want to go somewhere cool and explore, easy and cheap, with my friends!\"Destination Hack: LondonTimur Mamedov\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:51 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Sky Skout","project_tags":["ruby-on-rails","javascript","html5","css3","json","ajax","jquery"],"project_url":"https:\/\/devpost.com\/software\/sky-skout","keywords":"say,sky,skout,looking,cheap,cool,discovery,easy,explore,first,friends,getaway,go,young,professionals,world,service,somewhere,spontaneous,students"},{"level_0":1019,"hack_vector":[[0.1525761485,-0.1355926692,0.0053090947,0.072393246,-0.0354094245,0.1669446081,0.1744086146,-0.0393603705,-0.022209527,-0.021805536,0.0192839373,-0.0004641213,0.1384954304,-0.0707426295,0.0173845757,0.0626284033,0.2603642046,0.0342467576,0.0475318618,0.0990942866,-0.2126699686,0.0182842165,-0.0404725298,-0.0580991842,0.1452260166,-0.0275635533,-0.0635722727,-0.2028966993,0.0131119369,-0.0982878208,0.0434995927,-0.0997093469,0.0568920188,-0.0814932287,-0.0158048812,0.0060969503,0.1335613132,-0.1292704642,-0.02890376,0.0559147969,0.0449423008,-0.1508447081,-0.1734571904,-0.0368266031,-0.0012673452,-0.0391411446,0.0309363082,-0.0265048649,-0.0313403234,-0.2023194432,-0.0779007971,0.0363625437,-0.1106221303,-0.0687989816,-0.1437595785,0.1607747674,-0.1252335012,0.0334029682,0.0311362687,-0.0145418495,-0.0346658416,0.0241554584,0.0625346228,0.0812915191,0.1332675815,-0.015073047,-0.1331541091,-0.1598437279,0.0175356809,0.0022063269,0.078367658,-0.0408920273,0.0110270996,-0.1385146528,-0.0405726321,-0.1032743007,0.1881259233,0.0074286838,0.0626858994,-0.149039194,0.1256444603,0.1702644825,0.0178750288,0.1613295823,0.1333692819,0.183570087,-0.127482757,0.017037401,-0.0115334298,-0.0976536572,-0.1160953268,0.0891671032,0.0373865329,-0.0060143224,0.0484724455,-0.0513536707,-0.1034346446,0.1804800183,0.0649983808,-0.062842831]],"hackathon_name":"Destination Hack: London","index":1019,"project_description":"Life experiences made easy.We make creating life experiences easy.We help travellers focus on creating their adventure, not the admin\nBy seamlessly generating the flights, activities and accommodation that match their budget and preferencesDestination Hack: LondonBackend- deployment - hosting - integration - business ideaMahdi Shariff\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:19 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Maverick.","project_tags":["twilio","sabre","getyourguide"],"project_url":"https:\/\/devpost.com\/software\/mavericks","keywords":"creating,works,generating,accomplishments,activities,admin,adventure,budget,challenges,easy,experiences,flights,focus,help,travellers,inspiration,learned,life,make,match"},{"level_0":1020,"hack_vector":[[0.1371448934,-0.1005184129,-0.0276393555,0.0255654715,-0.0211278871,0.1256034672,0.1950481236,-0.0178798605,-0.0387380645,0.012562545,0.0152051616,-0.0755424574,0.1283401698,-0.0767837539,0.066406846,0.0383877046,0.239787057,0.0219833218,0.0263519417,0.1093585268,-0.2235474437,0.0417799987,-0.0574697256,-0.0522957407,0.1100465432,-0.021235697,-0.0416521914,-0.2224292159,-0.0133646755,-0.0821823552,0.058137089,-0.1335034817,0.0503707193,-0.1227608547,-0.0275332611,0.0002127752,0.104739584,-0.1319065541,-0.0516380928,0.0192994606,0.0107129188,-0.1561595052,-0.1821915358,-0.0238916408,0.0438129455,-0.0624509528,0.025109129,-0.0668672174,-0.0277025495,-0.2046367973,-0.119873032,0.004297785,-0.0958192125,-0.0342309922,-0.1437948197,0.1735858768,-0.1238584369,0.0180170126,0.0180854034,-0.0691748783,-0.0536073186,0.0282526687,0.0753841475,0.0845690295,0.1198996082,-0.0168787669,-0.1168662235,-0.1343716681,0.0426461957,-0.0016676544,0.0873873904,-0.057385277,0.0144814132,-0.131983757,0.018460812,-0.1356569678,0.1827673167,0.0075105112,0.0610571466,-0.1226086542,0.1543663144,0.1582553983,0.0918831304,0.1543906033,0.1037836596,0.1774191558,-0.1034722403,-0.0150132282,0.0100322608,-0.0886045322,-0.1310179532,0.0457825027,0.0744039118,-0.0465998985,0.0192680992,-0.0255164932,-0.1397977769,0.1922296137,0.0236360803,-0.0972115695]],"hackathon_name":"Destination Hack: London","index":1020,"project_description":"Making holiday planning saferMaking holidays saferMaking it easier to find safe places to go on holidayWe list all the top destinations from the sabre api and then match them with locations from GetYourGuide and the images provided. The use sentiment analysis to find out which destinations is the safest places and display the result to the user.\nSentiment Analysis - Extract live twitter feeds -> pass the feeds to HP Sentiment Analysis api. HP Sentiment Analysis returns back whether the tweets are positive or negative.Linking GetYourGuide api with Sabre API.Working in team.How APIs are revolutionising modern travelImplement across all major platformsDestination Hack: Londondeleted deleted\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:51 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Safe Destinations","project_tags":["android","java","javascript","sabre","getyourguide"],"project_url":"https:\/\/devpost.com\/software\/safe-destination","keywords":"sentiment,analysis,api,places,getyourguide,find,feeds,hp,sabre,safe,making,destinations,images,holiday,implement,inspiration,learned,linking,list,holidays"},{"level_0":1021,"hack_vector":[[0.1423448026,-0.1244826838,-0.0241493024,0.0498051494,-0.0437512249,0.1318127215,0.1839926541,-0.0211258158,-0.0277274419,-0.0227252692,0.0101604303,-0.0240718685,0.1360779405,-0.0710677877,0.0493378639,0.0326930955,0.2385964692,0.0134377098,0.0436358601,0.1182579771,-0.2426276058,-0.0003917836,-0.0327950679,-0.0447778441,0.1163182929,-0.01701211,-0.0438852571,-0.1760517061,0.0153252715,-0.1060230583,0.0384608693,-0.1116470844,0.0343763828,-0.0702895448,-0.0064356863,-0.0172386952,0.1161810383,-0.1424857229,-0.0451497063,0.0311660767,0.0486241095,-0.1296965182,-0.167432338,-0.037686076,0.0315537825,-0.0667805225,0.0241876617,-0.0558883026,-0.0157086886,-0.212249428,-0.108650811,0.0128381448,-0.100984782,-0.0540453978,-0.1827916801,0.1816174239,-0.1269821972,0.0063967374,0.0242969226,-0.049101375,-0.0405194946,0.0280367024,0.0670606419,0.0692614466,0.1340007037,-0.0007068075,-0.1180838421,-0.1464992911,0.030129848,0.0110128606,0.0776397735,-0.0361944325,-0.0060911789,-0.1331198066,-0.0155319376,-0.1216260642,0.1779395789,0.0190102179,0.0334961303,-0.1456552148,0.1234166473,0.1738695055,0.0347644873,0.175114274,0.1226393282,0.2012822181,-0.1156028435,-0.0013720503,-0.0229435395,-0.0875663161,-0.1290047914,0.0732205659,0.0849831924,-0.0215983428,0.0218056384,-0.0245732553,-0.1389733851,0.2071965635,0.0352863632,-0.0714444369]],"hackathon_name":"Destination Hack: London","index":1021,"project_description":"an opinionated way to do corporate group bookingA friend of mine, a director at Warsaw University tried to book a travel for his 80 students. It took him few days of boring, manual work.Our scoring algorithm is makeing sure that all the travelers are accomodated in eitehr one hotel, or  two hotels nearby.How to handle a booking form different destinationa nd how to find availability for group using existing API'sIt's quick and easy to do a group booking using our product.Destination Hack: LondonArtur Stary\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:52 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"GroupExpert","project_tags":["angular.js","node.js","php"],"project_url":"https:\/\/devpost.com\/software\/groupexpert","keywords":"using,group,booking,works,director,handle,groupexpert,friend,form,find,existing,eitehr,easy,destinationa,different,hotels,days,challenges,boring,book"},{"level_0":1022,"hack_vector":[[0.1208256185,-0.1129128262,-0.0013323526,0.0702620298,-0.0468520708,0.1561027765,0.1964259446,-0.0350322127,-0.0208823532,-0.022362493,0.0266585425,0.0127123082,0.1332393736,-0.0751429424,0.0272305906,0.053052783,0.2494348735,0.0308908578,0.0453434363,0.1093676612,-0.2137285471,0.0134593323,-0.0415758863,-0.058502689,0.1260252595,-0.0139330532,-0.0595013164,-0.1989593208,0.0192972701,-0.0818772316,0.0445491597,-0.1005196273,0.0411751904,-0.0708557591,-0.0128159998,0.0117656048,0.1338858604,-0.1219503805,-0.0276558343,0.058496058,0.0413742848,-0.1571054757,-0.1716100127,-0.0448585078,0.0107960654,-0.0492900014,0.0292602312,-0.0303186942,-0.0271135941,-0.2093646824,-0.0858968869,0.028058609,-0.1111281291,-0.0538818836,-0.1624268442,0.1608198285,-0.1419629157,0.0275314208,0.0277679786,-0.0347206704,-0.0336714499,0.0265177619,0.0754003599,0.078409858,0.1405481547,-0.0157883335,-0.1111129671,-0.15555197,0.0389008559,-0.0046939496,0.0512938276,-0.0413096696,0.0077454662,-0.1335948408,-0.0401409492,-0.1069942042,0.1834141314,0.0061039976,0.0517895967,-0.1630434543,0.1262483001,0.1729503125,0.0352600925,0.1687789559,0.1283959299,0.2063018084,-0.1274581552,0.0082050143,-0.0094790859,-0.0975561738,-0.1403901875,0.0809781402,0.0594869144,-0.005651019,0.0388750657,-0.0417196117,-0.1167985722,0.181035772,0.0578030683,-0.0575838424]],"hackathon_name":"Destination Hack: London","index":1022,"project_description":"Multimodal travel solutions for offline travel agenciesOur company, Waynaut, has built a multimodal platform. Just an API, with no interface.With WayDesk. we have decided to combine Waynaut and Sabre APIs to build an application for offline travel agents, which will allow them to offer their clients multimodal travel options.Destination Hack: LondonSimone Lini\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:14 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Waydesk","project_tags":["java","restlet","bootstrap","backbone.js","javascript","jquery"],"project_url":"https:\/\/devpost.com\/software\/waydesk","keywords":"waynaut,travel,multimodal,combine,allow,api,apis,application,build,built,clients,decided,company,waydesk,interface,offer,offline,options,platform,sabre"},{"level_0":1023,"hack_vector":[[0.1702463627,-0.164097026,-0.0008294611,0.086597316,-0.0454041399,0.1660464704,0.1747752726,-0.0642344207,-0.0294118077,-0.0046517248,0.0091359746,0.0257925633,0.1346709877,-0.0733450875,0.0170074962,0.0686156228,0.2422940433,0.0294866506,0.0476568639,0.0782032162,-0.2090093493,0.0117694261,-0.0466702506,-0.0587498732,0.1644935161,-0.0229310337,-0.0614180565,-0.1924398839,0.027413236,-0.0743181407,0.0387987047,-0.1073709279,0.0660889968,-0.0668590814,-0.0435541347,0.0045780982,0.1311059892,-0.1212692112,-0.0211747251,0.0805316567,0.0524939857,-0.1478585452,-0.1767827421,-0.0265811924,-0.0338417664,-0.0318639651,0.0372024998,-0.0124254823,-0.019936692,-0.1829089075,-0.0526078828,0.0316645168,-0.1136069447,-0.0525685139,-0.1114276573,0.1484205425,-0.1407689601,0.067512311,-0.010769316,0.0351400711,-0.0245950725,0.0314177983,0.0568602309,0.0847273991,0.1438392997,-0.0418196991,-0.1428974271,-0.156721279,0.015414495,0.001375742,0.0714728683,-0.0303431358,-0.0032919713,-0.1542167366,-0.0648510754,-0.0768978372,0.2010436505,0.0289844479,0.0785710216,-0.1402046829,0.132567063,0.1589489579,0.0150793297,0.1474033147,0.1561836004,0.1757054627,-0.1326465458,0.0600547567,0.011688224,-0.1025643274,-0.086010918,0.1059391201,0.0422065593,0.0090844017,0.0793863982,-0.0898601934,-0.0657906532,0.1604657173,0.089980945,-0.0452800281]],"hackathon_name":"Destination Hack: London","index":1023,"project_description":"Travel is Baytar again, simple . organised . personalisedBaymax and TARSIT AI BabyTime shortage and partner APIfuzing api with AIa lota lot of things including enhancing search and fundingDestination Hack: LondonXuan Wu\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:54 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"baytar","project_tags":["javascript","node.js"],"project_url":"https:\/\/devpost.com\/software\/baytar","keywords":"ai,api,lot,works,including,baby,baymax,baytar,challenges,enhancing,funding,fuzing,inspiration,time,learned,next,partner,proud,ran,search"},{"level_0":1024,"hack_vector":[[0.1204410046,-0.0914104134,-0.0355396494,0.0256864745,-0.0329637639,0.1222682893,0.190398857,-0.015358164,0.0076851556,-0.0435704961,0.0224037878,-0.0620078333,0.1213588938,-0.0538422763,0.0595806912,0.0140689686,0.2266126275,0.0106107276,0.0253130198,0.1392632872,-0.2500155568,0.0093875146,-0.0361429974,-0.0226534866,0.0747399405,-0.0122762555,-0.019474443,-0.1658349931,-0.0190755613,-0.121097073,0.0425346941,-0.1208222508,0.0183169134,-0.0752680078,0.0165094957,-0.0335159004,0.1016899645,-0.1498369724,-0.0694895908,-0.0046337768,0.0327413119,-0.119923681,-0.1435475349,-0.0552074686,0.0684072152,-0.0888699889,0.0154825458,-0.0629048049,-0.0420369506,-0.2142919451,-0.1462444067,0.0003827723,-0.0859125629,-0.0372050926,-0.2081376761,0.1664448231,-0.1042015776,-0.047201097,0.0474014618,-0.116128765,-0.075665839,0.014997323,0.0776957572,0.0387303308,0.1004922912,0.0348626897,-0.1008234918,-0.1302534342,0.0474493206,0.0274293553,0.0567687042,-0.0538080633,0.0253048521,-0.1100953519,0.018586006,-0.1392004788,0.156961903,0.0123486547,0.0046495288,-0.1383698136,0.1100353971,0.1761533767,0.0416309983,0.1822819561,0.0931438655,0.1953773052,-0.105583176,-0.0497157387,-0.0460747294,-0.0740712658,-0.1459629536,0.0588602908,0.0979746729,-0.0480905958,-0.024768671,0.0162280221,-0.1717319936,0.2402887791,-0.0049564987,-0.0833960548]],"hackathon_name":"Destination Hack: London","index":1024,"project_description":"Travel with us if you want to live!British holiday makers killed in a massacre by a gunman in Tunisia, after a bomb exploded at a Kuwaiti mosque and a man was beheaded in France - these event happened two days ago and we felt we need to do something for all tourists to be safe when travelling! And even when you are in a \"safe\" location, you can never be safe.It is a platform from which you make a selection of either a country, city or an event that you want to check out. Using our algorithm and searching through social media feeds come up with a safety recommendation for you. Using this information you can make a much more informed decision to whether you want to go to places such as Tunisia or not. We have also linked AVOID to your smart-watch to track your heart rate and if any sudden changes occur, we send you a notification checking if everything is ok. If you are fine then you simply say yes to the notification. If not, press no and we will automatically call the emergency services and send your geo-location and help will be on its way!I struggled getting tons of APIs to work together from Twilio to Google map to Sabri. Also getting the app working with a team of two with only one developer.Trying to attempt to solve major issues in today's world and making a kick ass app working!The importance of having an amazing team!We want to get access to secure data sources by governments on security alerts to let the public know of any imminent threats on the go.Destination Hack: LondonZakaria Abushima\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:37 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Avoid","project_tags":["android","sabre","twilio","google-maps"],"project_url":"https:\/\/devpost.com\/software\/avoid","keywords":"safe,want,notification,two,event,team,app,tunisia,make,using,avoid,also,getting,location,go,working,send,get,yes,geo"},{"level_0":1025,"hack_vector":[[0.1453592628,-0.098941043,-0.0325744376,0.0227634441,-0.0219043512,0.1316291541,0.1887747049,-0.0193946473,0.0028230872,-0.0396149531,0.0192328412,-0.0678848177,0.1166242585,-0.0607789904,0.0471224636,0.0229335949,0.2250341028,0.0101650292,0.0327146612,0.1314113736,-0.2459537238,0.0122748027,-0.0356016867,-0.026814647,0.0859069377,-0.0228420608,-0.0234709289,-0.1747907996,-0.0198408235,-0.117099002,0.04728508,-0.1196959689,0.0320202,-0.0880697891,0.0122471321,-0.0304542631,0.1049966812,-0.1555839181,-0.0740711987,0.0013650076,0.0303159505,-0.1273678094,-0.1422922611,-0.0530677065,0.068423517,-0.0786567926,0.0132601485,-0.0611077696,-0.044162102,-0.2153219283,-0.1508916914,0.0085211843,-0.0932257622,-0.0420409925,-0.1975156367,0.1596354395,-0.1003961638,-0.0363403745,0.0480793267,-0.1110637784,-0.069935523,0.0134899914,0.0717443526,0.0487537757,0.1071081012,0.0246218871,-0.1191482842,-0.1219223216,0.0389010012,0.0273274221,0.0744949281,-0.0593934096,0.0239089597,-0.1223531067,0.0181503445,-0.1414314955,0.1602035612,0.0060274308,0.0127050914,-0.1370429695,0.1118781045,0.1671480387,0.0370538197,0.1810703874,0.0873575285,0.1903750002,-0.1062023342,-0.0419624709,-0.0436555631,-0.0790352002,-0.1406357735,0.0597322211,0.0877910256,-0.0515280962,-0.0127194887,0.0132484054,-0.1595416814,0.2380871326,0.0028206964,-0.0807263926]],"hackathon_name":"Destination Hack: London","index":1025,"project_description":"Keeping you safe, Taking you furtherWe're at a Sabre Trave Hack, London's GayPride March is going past the window, and there's a realization that not everyone is as safe everywhere they travelYou register your destination, stereotrypes you may be identified with, and your side trip budget.\nYou can then create 'HeadsUp' messages about relevant events, both positive and negative, when you travel.\nWe use Twillio to send the messages to the relevant registrants by location and identity.\nWe also use your side trip budget to notify you of positive events that you could reach within your side trip budget.How do we match up the right alerts with the right people?\nHow can we overcome the apps seemingly inescapable negativity of the app?\nHow do we create an income streamNot wasting time trying to harness the twitter storm\nRealising that this can be used to harness positive data as well as negative\nRealising that positive events can be used to sell travel to positive events.The food at Sabre hack is actually quite healthy\nHarnessing the full potential of API's is not necessarily the work of a weekend\nThat having only one coder on the team places a heavy burden.We're glad you asked; with the right industry partner, and an awful lot of hard work, this is an application that could deliver utility to both consumers and travel industry players.Destination Hack: LondonDesign, buildPaul Cannon\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:55 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"TravelAlert","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/travelalert","keywords":"positive,travel,events,right,budget,trip,side,relevant,sabre,realising,could,hack,harness,industry,work,messages,create,negative,used,use"},{"level_0":1026,"hack_vector":[[0.1223320961,-0.1036871076,-0.0161713436,0.0352002047,-0.0167322364,0.1488523334,0.2031174749,-0.0380075946,-0.0228526723,-0.0117982002,0.0224762429,-0.0606669672,0.1269280612,-0.0638766214,0.0440482087,0.0520833284,0.245090425,0.0116771301,0.0362833478,0.1206487343,-0.2343488634,0.0482477993,-0.0375858694,-0.0362913236,0.0950595364,-0.0207059253,-0.0391454361,-0.1929546446,-0.0047714631,-0.0981003493,0.0660719872,-0.1201667562,0.0408756062,-0.0846222714,-0.0138765341,-0.0172168892,0.116315566,-0.1408771425,-0.03718099,-0.0018171924,0.0220514722,-0.1521856785,-0.1674544215,-0.049610883,0.0562914237,-0.05413533,0.0119780749,-0.0521398671,-0.0164274722,-0.2122913003,-0.1085208058,0.0190298017,-0.0971150324,-0.0239404812,-0.1867427677,0.1550801396,-0.13322483,-0.0213148296,0.0514752008,-0.0882650614,-0.0682762638,0.0175421964,0.0885977969,0.0688861236,0.1069855541,0.0130188223,-0.0974765792,-0.1476390958,0.0571222343,0.0223633498,0.0709110647,-0.0579289459,0.0369020291,-0.1185121611,-0.0063553769,-0.1422221363,0.1584450603,-0.0020448691,0.0476917773,-0.1351400614,0.129621923,0.1604029536,0.0493279137,0.181226626,0.1040401757,0.181509316,-0.1206541434,-0.0346326344,-0.0352036878,-0.0902006924,-0.1462938637,0.0562895089,0.0723707974,-0.0580537543,-0.0073078899,0.0141850356,-0.1528759599,0.1937539726,0.0272240397,-0.0850672573]],"hackathon_name":"Destination Hack: London","index":1026,"project_description":"Complaining System Mobile AppPersonal bad experiences when travelling and the need to have a unified complaining system to improve services for customersCustomer capture the bad travel service using his or her camera integrated in the app\nThe photo is downloaded inside the app with a brief text about the complain\nThe picture will appear directly inside a map\nCustomers and owners of the business can see the picture if they have the app and date of downloading \nThe app is divided into three sections:\n1- hotels\n2- airlines\n3- travel services such as insurance and rent a car\neach section got its own map on the map! \nTravel Businesses can improve their services through looking at the complains and the complain will be deleted when the business promise to resolve the complainDevelopment process, Incubator, a teamDestination Hack: LondonA mobile app and data system to map and complains and connect them right to the owners and management of the travel industry or serviceMel Mansour\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 08:04 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ReView","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/review","keywords":"app,services,travel,complain,map,inside,customers,improve,picture,business,bad,experiences,deleted,downloaded,got,divided,directly,hotels,development,downloading"},{"level_0":1027,"hack_vector":[[0.1394390613,-0.1045862958,-0.0313204527,0.0369882621,-0.0238442402,0.143755734,0.1900708973,-0.0318445228,-0.0093344916,-0.0031529036,0.0228701457,-0.0588099882,0.1373349428,-0.0650116429,0.0635421798,0.000591496,0.2191023827,0.0085316142,0.0324189737,0.1069252566,-0.2443332374,0.0254426245,-0.0369857624,-0.0142235132,0.1093529686,-0.0246379357,-0.0232734941,-0.1864762306,-0.0164860282,-0.1022705361,0.0714643225,-0.1348159015,0.0271892548,-0.0924048126,-0.0185496695,-0.0251694545,0.1083574891,-0.1427466571,-0.0646009296,-0.0058314814,0.0355452076,-0.1264781803,-0.1429776251,-0.0390704274,0.0611680187,-0.0496102646,0.0181105547,-0.0604149997,-0.0349520631,-0.2024054527,-0.1401539296,0.0042141541,-0.1071281806,-0.0166819431,-0.1976603568,0.164145112,-0.120027855,-0.0226111282,0.0367191732,-0.0900055096,-0.0674285144,0.0120677045,0.0808462501,0.0484678745,0.1074105501,0.0160638951,-0.1016359925,-0.1239372939,0.0393242575,0.0224204753,0.0682274997,-0.0471283719,0.0358818695,-0.121696353,0.0214579031,-0.1400167346,0.1794995815,0.0138426777,0.013992345,-0.137684077,0.1310437769,0.1722295582,0.0454751439,0.1789975762,0.1140867472,0.2000728399,-0.0941141918,-0.0312636495,-0.0218611863,-0.0709822103,-0.1397898495,0.0614929013,0.0947234184,-0.0399609916,-0.0005147235,0.0022118175,-0.1516479254,0.2286688536,0.0151744047,-0.082898818]],"hackathon_name":"Destination Hack: London","index":1027,"project_description":"Curated trusted travel recommendations from your friends quickly and simplyDoes it feel like you spend more time researching your travel plans than actually on holiday? YesWhose advice and recommendations do you trust above all others? Friends and FamilyWho knows a place better than anyone else? A localWhen you combine these problems \u2013 the solution is Qurated, a travel app that gives you the best local recommendations for accommodation and activities from a local friend quickly and simply for you and your friendsFrom an industry perspective we improve conversions by building trust early in the funnel.Our primary challenge was connecting the different API\u2019s together into one simple product\nSecondly simplifying a big data issue using curationCreating a simple interface for a complex back-endRunning simultaneous API\u2019s from different sources is possible to architect and can be integrated togetherOther accommodation and activity sources as API\u2019s become available,\nIntegrate Tripcase to make system even easier to use,\nPolish the UI,\nTestingMonetisationHotel commission model - approx. 5-15% \/ 20c-30c leadouts - well placed as high conversion \/ need scale\nActivities model - circa 10% - again friend recommendations lead to strong conversion\nTwilio - potential to charge users per request - price point between 5-10c - cover costs \/ depends on business modelDestination Hack: LondonWrote the front-end (AngularJS) and back-end code (Node.js + MongoDB)Cris Perera\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:07 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Qurated","project_tags":["getyourguide","sabre","twilio","heroku","node.js","angular.js","sendgrid"],"project_url":"https:\/\/devpost.com\/software\/qurated","keywords":"local,friend,recommendations,using,model,advice,simple,api,travel,accommodation,simply,different,quickly,conversion,system,friends,sources,qurated,together,activities"},{"level_0":1028,"hack_vector":[[0.1538271606,-0.1099901423,-0.0093397917,0.0621661842,-0.0243135411,0.1593612432,0.2018282413,-0.0410609506,-0.0160579663,0.0038281253,0.0295158625,-0.0323478431,0.1329662502,-0.0672309324,0.0607739501,0.0211004596,0.2280679792,0.0182635058,0.0514094271,0.1039497182,-0.232652247,0.0325661674,-0.0505203195,-0.0373432823,0.1193697304,-0.0263480637,-0.0387486853,-0.214181006,-0.0018278726,-0.0705908909,0.0682732835,-0.1180783212,0.039588768,-0.1077998355,-0.0323892348,-0.0020962195,0.1136284024,-0.1337468922,-0.0582845919,0.0225616638,0.0288053807,-0.1519814879,-0.1533867866,-0.03831039,0.0360355638,-0.0386538617,0.0134402001,-0.0525823571,-0.0251326598,-0.2013687342,-0.1175907999,0.0121786147,-0.1195936501,-0.0214190539,-0.1637378633,0.1595671922,-0.1290906817,0.0162260085,0.0238672476,-0.0578697324,-0.0498638824,0.017983187,0.0867202207,0.0745268315,0.1229405031,-0.0095159076,-0.1131111234,-0.1315874606,0.0347046629,0.0059073661,0.0615328886,-0.0430941656,0.0264769644,-0.1342379153,-0.0115485284,-0.1298100799,0.195833236,0.007494479,0.0346797742,-0.149711132,0.1366219223,0.1611277312,0.0536703244,0.1605111808,0.1192592457,0.2070800811,-0.0996554643,-0.0060898829,-0.0014400261,-0.0812681764,-0.1435798258,0.0703260899,0.0835212842,-0.0265571829,0.0293792523,-0.0215826705,-0.1147327125,0.1978851557,0.0351376943,-0.0705478564]],"hackathon_name":"Destination Hack: London","index":1028,"project_description":"Simple, Effective, Realtime - Notification EngineEnhance Customer ExperienceUser subscribes for push notifications.  Event like changes in Fare Changes, Flight Schedule, Flight Cancellation, Gate Change etc trigger the notification engine to send an automated alert to the user at his device.Integrating with some of existing APIs.Realtime Notification, Device agnostic, support for multi-platform, supports for most of modern browsers like Chrome and Safari, offline messaging, minimal dev cost for integration, enhances marketing capabilities, easy integration with API.Use of new and existing open source APIs. Google Cloud Platform.Realtime integration with Airlines and Travel Agency system, Build Recommendation System within Notification Engine that will handle Data Analytics and trigger notifications.Destination Hack: LondonMphasis Limited\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:56 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AirAware","project_tags":["java","spring","mysql","html5","google-cloud-messaging","google-app-engine"],"project_url":"https:\/\/devpost.com\/software\/airaware","keywords":"integration,notification,apis,notifications,existing,platform,realtime,like,device,changes,engine,system,trigger,flight,user,easy,cloud,enhance,enhances,dev"},{"level_0":1029,"hack_vector":[[0.1445064098,-0.1067802384,-0.0211519785,0.0379173532,-0.0117443427,0.1208844036,0.1962646246,-0.0250263158,-0.0266871136,0.0023290596,0.0204024892,-0.0733519718,0.1461260766,-0.0755004585,0.0715813935,-0.00647303,0.1992518306,-0.0188394822,0.0449895561,0.1246320382,-0.2491983622,0.0354657806,-0.0419663079,-0.0092307217,0.1146493107,-0.0351766311,-0.0294279382,-0.1818866879,-0.0191336591,-0.0955421776,0.0690121129,-0.1190154701,0.0293980874,-0.091792576,-0.0189081561,-0.025037203,0.1061685607,-0.1495473236,-0.0605683289,-0.0154110519,0.0467368811,-0.1273843199,-0.149271965,-0.0226431731,0.0684669912,-0.0365533642,0.0152281597,-0.0927940756,-0.0178738479,-0.2031695992,-0.1571483612,0.0225843322,-0.1145422682,0.0187766459,-0.212719813,0.1658318788,-0.1284108758,-0.0215823613,0.0328255259,-0.1079494432,-0.0705316812,0.0196755175,0.0803189874,0.0499509573,0.1113466248,0.0230880957,-0.0867765322,-0.1156491563,0.0221648235,0.0178743303,0.0709045753,-0.0445895568,0.0205299929,-0.1224706098,0.0445778482,-0.1195466071,0.1763661355,0.0058685644,-0.0024171639,-0.1285357326,0.1315986961,0.1550259292,0.0606065206,0.1563542634,0.108895734,0.2100992203,-0.0794370696,-0.0478320569,-0.0176446792,-0.0609523281,-0.142299667,0.0527778156,0.1066938713,-0.0362491868,-0.0143453432,0.002297862,-0.1594709456,0.2175718546,0.0047741318,-0.0697375312]],"hackathon_name":"Destination Hack: London","index":1029,"project_description":"Reinventing hotel bookingsWhen seeking to obtain the best value for money in hotel booking, current booking websites are limited. As a traveller, we are usually forced to book a single hotel in a location despite staying more than one night there. As a result, travel can be costlier and less enjoyable for travellers. Our solution reinvents the booking process by enabling tourists look for the best value\/quality combination of multiple hotel properties in the same city.It works in a traditional booking way except you as a traveller are presented not only with single hotel choices.We chose a platform which was not our strongest one so we had to move to another platform after several hours into the project. \nWe were hoping to integrate more APIs, but time constraints didn't allow us to integrate more than two API - one from Sabre Travel called Hotel REST API Hotel Shopping Endpoint and GIATA -  GIATA Hotel Guide Multilingual\nOn the GIATA API we managed to use the description and the pictures, but only in English, not multi-language capabilities yetOur development talent managed to build a prototype which makes use of two APIs - one from Sabre and one from GIATA - GIATA Hotel Guide Multilingual\nWe produced a nice user interface with good graphics and clear logic for the travellerDeveloped our knowledge of APIs\nIdentified areas to improve in our understanding of node.js\nImprove team skill set identification and project management\nRight person to tackle right tasks\nBuild on back end knowledge and experience\nTeam work and communicationExpand Search Criteria\nDeployment to countries worldwide - Net Media Planet states conversions increase by 70% when websites fully localised\nIntegration with various services such as: GIATA Multilingual, TripCase, TripAdvisor, Uber, Airbnb, GetYourGuide, HomeAway, Housetrip and other potential partnersDestination Hack: LondonI helped with brainstorming, HTML and design ideas as well as helped with writing it up on ChallengePost, video demo, etc.I am the only techie in the team working 24 hours on the full stack, back end and front end of the project.I pitched my idea of a hotel splitting website to the group of attendees who were seeking to form a group. I then worked with a number of interested parties to form a group with complementary skills to start to hack the idea into an MVP.I was a key part of the team who developed the website idea into actual requirements and deliverables and defined the MVP.Further work was primarily on creating the pitch deck and other materials relating to the non tech side of the project.Vlad S\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:15 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HotelSplitter","project_tags":["python","django","sublime-text","visual-studio","sabre"],"project_url":"https:\/\/devpost.com\/software\/hotelsplitter-oefvf","keywords":null},{"level_0":1030,"hack_vector":[[0.1237614155,-0.1050871089,-0.0205309577,0.0381928943,-0.023315521,0.1389189959,0.2004932761,-0.0248684883,-0.0206714515,-0.0152677177,0.0296753943,-0.053703472,0.1436947286,-0.0742477551,0.0614951737,0.0213007666,0.2322215885,0.0087119145,0.0384262577,0.1172368079,-0.2346707731,0.0389818251,-0.0389920212,-0.0389980227,0.0955139399,-0.0290078185,-0.0317722708,-0.1941715181,-0.0098877652,-0.0866148621,0.0669145957,-0.1227713376,0.0315398723,-0.0901229307,-0.0217928719,-0.0131593989,0.1204330251,-0.1415350288,-0.0524147712,-0.0008800242,0.0295639448,-0.1430717111,-0.1561316848,-0.0363641307,0.0644941553,-0.0430833623,0.0281069335,-0.0618867613,-0.031222932,-0.2072592527,-0.1355671436,0.0069331704,-0.1065472662,-0.018845275,-0.1869450063,0.1558838934,-0.1209253445,-0.0147430664,0.0445071943,-0.0946619287,-0.066748701,0.0203280561,0.0891088322,0.0648688748,0.113718681,0.0089277336,-0.0868628323,-0.1342666745,0.0424753278,0.0137658352,0.0646962598,-0.0536602922,0.0323975533,-0.1215052083,0.0018726193,-0.1395863295,0.172531426,0.0055982601,0.0239553005,-0.1375344247,0.1397437453,0.1698586643,0.0459489562,0.1754130572,0.1058207005,0.1925784796,-0.1080113202,-0.0329167582,-0.0238840729,-0.0828598365,-0.1592726111,0.0633275509,0.078884542,-0.0398584567,0.0077027124,-0.0051915534,-0.1447190046,0.2109211832,0.0219626948,-0.0748618618]],"hackathon_name":"Destination Hack: London","index":1030,"project_description":"Empower End TravelerAirlines are shifting to more and more paid ancillary services. Creating an itinerary that gives the end traveler freedom to choose and buy these services at their own convenience.Once a booking is finalized, agency sends the final itinerary (post ticketing) to the traveler.  Smart Itinerary is designed to display any paid ancillary service bookable at segment level. Customer click on the service he\/she intends to avail. System confirms the service and accepts the payment through a payment gateway. Once payment is through, an EMD is issued and added to the itinerary with the respective service and emailed back to the customer.Wanted to add more sponsors content unfortunately we had only limited knowledge of integration of REST APIS with .NET.Got a good idea on the different sponsors API and how it can be used to enhance user experienceAdding more purchasable content along with destination information to enrich Smart Itinerary and turning it into an up-selling tool that would help agency sell even after they completed their sale.Destination Hack: LondonMohammed Alam\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 05:56 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Smart Itinerary","project_tags":["sabre","scribe","javascript","html5"],"project_url":"https:\/\/devpost.com\/software\/smart-itinerary","keywords":"itinerary,service,payment,smart,ancillary,services,sponsors,paid,traveler,agency,customer,content,different,destination,creating,convenience,designed,would,display,emailed"},{"level_0":1031,"hack_vector":[[0.1180457324,-0.0930500254,-0.0194022451,0.0293187741,-0.0287302006,0.1218477711,0.1816028953,-0.0148636978,-0.0210848954,-0.031663347,0.0192194041,-0.0725773498,0.127142325,-0.0666069835,0.0570505001,0.030332325,0.2278358489,0.0223378669,0.0384552144,0.130635336,-0.2256981134,0.0277312919,-0.0512634441,-0.0407094285,0.0837784633,-0.0116451038,-0.0432974026,-0.1857666969,-0.0184410866,-0.1102873385,0.0429199897,-0.1223096475,0.0282262582,-0.094330892,0.0045318035,-0.0106247365,0.1134569496,-0.1440166086,-0.0595782585,0.012590115,0.0250997823,-0.1419654489,-0.1719253063,-0.0458575673,0.0464781448,-0.0895943865,0.0234135799,-0.0684563071,-0.0390454866,-0.2202845663,-0.1370423138,0.0175327212,-0.0915530622,-0.0369511098,-0.1815286875,0.1830574423,-0.1159907281,-0.0143764801,0.0382129848,-0.0996062458,-0.0649612024,0.023477396,0.0704429299,0.0757403076,0.1105962247,0.0158761032,-0.1084803417,-0.1348148286,0.0379007049,0.0046998258,0.0755604059,-0.0581938662,0.0163408294,-0.1153041944,0.0270855632,-0.1209865138,0.1734217107,0.0086218109,0.032491155,-0.1422498524,0.1263193935,0.1660552621,0.0707590505,0.1571203619,0.1049145758,0.1894649863,-0.1096964926,-0.0586786829,-0.0159946177,-0.079766646,-0.1412712634,0.0454005413,0.0960049406,-0.0536219105,-0.0063673244,-0.0114389732,-0.1664051712,0.2206517607,0.001704628,-0.092353262]],"hackathon_name":"Destination Hack: London","index":1031,"project_description":"Finding you the best airline seat using the Sabre SeatMap & Seat Guru APIThe inspiration for this idea came from a dreaded 18 hour journey to Sydney where Nik spent \u00a3800 hoping that he would get a seat of his choice at that price, only to later find out that post booking they were no legroom seats available.The user enters their flight search criteria, we then use the Sabre InstaFlightSearch to find the seats available (Note; we ran into issues, so we have cached this for now for one airline\/trip) but we then do a live call to the SeatMap API from Sabre to get the seat information for that flight followed by doing a call to the SeatGuru API to get an overlay of the best possible seats.Curating the data from the InstaFlightSearch and using it as an overlay to see available seats in real time per leg of the journey. Purely because we didn't have enough time and wanted to focus on the combination of the SeatGuru API and SeatMap API for a specific journeyBieng able to combine both the SeatGuru API and SeatMap API and putting the fundamentals in place to use the InstaFlightSearchOne needs to focus on specific airlines, a lot of the airlines we did calls on the SeatMap API didn't return a response so we didn't get the seat information to help us find the best seat for the person requesting the journey.We are going to look at seeing if we can re-visit the InstaFlightSearch, focussing on only airlines we know return a response from the SeatMap API together with focussing on airlines who offer specific seats for purchase (like emergency exit seats)Destination Hack: LondonThe entire developmentIvan Fraixedes\n          posted an update\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 08:30 AM EDTBy the way the code is on Github\nhttps:\/\/github.com\/ifraixedes\/hack-destination-london-2015Log in\n      or\n      sign up for Devpost\n      to join the conversation.NIk Murthy\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:44 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AirSeat - Finding you the best seat","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/airseat","keywords":"api,seats,seat,seatmap,instaflightsearch,journey,airlines,get,specific,find,seatguru,best,available,response,return,information,flight,focus,focussing,inspiration"},{"level_0":1032,"hack_vector":[[0.1214462146,-0.1014210507,-0.0296669584,0.0161356349,-0.0378710069,0.1422670335,0.1747873276,-0.0234722402,0.0269134603,-0.0520102568,0.0159529783,-0.0575208217,0.111081548,-0.0401956588,0.0439584181,0.0486586094,0.2566415071,0.0402948074,0.0159420855,0.1380158365,-0.245364964,0.0035057687,-0.0321259089,-0.0369201824,0.087378867,-0.0098954001,-0.0210550651,-0.1819919646,-0.0151090492,-0.1328547746,0.0419275463,-0.124483794,0.0248724073,-0.0907145366,0.025738975,-0.040947102,0.0931387469,-0.1477100253,-0.0605818368,-0.0088008242,0.015359723,-0.1286071688,-0.1418409944,-0.0704501718,0.0516537577,-0.0979585648,0.0132998964,-0.0248453021,-0.050700929,-0.2103532851,-0.1220596358,-0.0046943561,-0.0793921351,-0.0757884681,-0.1894795597,0.1775123626,-0.0917989612,-0.0399894118,0.0534038022,-0.0918420553,-0.0678407475,0.0029985409,0.0616136082,0.0437256843,0.0898492411,0.0361344814,-0.1148358211,-0.1514797956,0.0572177209,0.0261454862,0.0731194764,-0.0634793341,0.0396291129,-0.110173285,-0.0076254094,-0.1373632699,0.1504722685,0.0039737993,0.0271217003,-0.1372783333,0.0928297862,0.1756036133,0.0298506338,0.1915768534,0.0934341475,0.1831057221,-0.1210458353,-0.0355800502,-0.0460775234,-0.0670666471,-0.129901737,0.0681723282,0.0783269033,-0.0531232357,-0.0243467633,0.0075458596,-0.1539510787,0.2371013314,-0.0010358002,-0.100902915]],"hackathon_name":"Destination Hack: London","index":1032,"project_description":"Travel to your favourite events - theatre, opera, gig, fest, sportsSimply start typying the name of your favourite band, football team or theatre play and simple autosuggest will provide you list of matching results. You can select up to 12 events to search for. It's even simpler when you are music lover using last.fm. Simply click on the option, type your username and we'll get the list of your favourite bands.We'll search for events you may like and list them showing earliest first. When you'll find something really interesting like last gig of your favourite band reunited after years or the most exciting football match of the season - don't wait any longer and simply click  TakeMeThere!Now, you can plan your journey or just use default settings suggested for your location and event destination. You can also let us find you the cheapest hotels near the event site. Select the one you like, fill in the reservation form and book complete travel. It's just that simple!We'd like to add more services (car transfers, car rentals) available for our clients with just one click to make their travel even more comfortable.Destination Hack: LondonMateusz Szczygielski\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:36 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"TakeMeThere","project_tags":["go","php","bootstrap","jquery","html","json","sabre","seatgeek","last.fm","expedia"],"project_url":"https:\/\/devpost.com\/software\/takemethere","keywords":"like,favourite,list,simply,click,takemethere,search,select,events,even,simple,football,find,event,travel,car,last,band,one,hotels"},{"level_0":1033,"hack_vector":[[0.1540348977,-0.1518209428,-0.0180876106,0.0665354729,-0.0469310097,0.1563042253,0.1743693948,-0.0428827479,-0.003087919,-0.0480993651,0.0018916376,-0.005768056,0.1312136948,-0.0572737157,0.0147818793,0.0641125962,0.2538023591,0.0390221775,0.0306186061,0.1196311563,-0.2315140367,0.0023122665,-0.0255279355,-0.051226005,0.1274343431,-0.0087105986,-0.0498989895,-0.1804127097,0.0035854296,-0.1185450107,0.0356982462,-0.1147059873,0.0482459627,-0.0626865327,0.0010281543,-0.0283076521,0.1240211502,-0.1452945322,-0.0375651121,0.0486755036,0.0547576398,-0.1363451779,-0.1629528999,-0.0571620651,0.002391614,-0.0738929585,0.0296715759,-0.0215397589,-0.048478011,-0.2155671716,-0.0889244303,0.0233109239,-0.0921009704,-0.0869202316,-0.1617743075,0.1689654887,-0.1129420623,0.0019878405,0.0262910295,-0.0199090131,-0.0419612825,0.0148522435,0.0503601767,0.058513321,0.1201468855,0.0021721988,-0.1326244175,-0.1475697458,0.030523479,0.0141746392,0.0741813034,-0.0484565273,0.0068661626,-0.1307082325,-0.0425779335,-0.097286284,0.175900355,0.0165195595,0.0451333709,-0.1509310305,0.1041967273,0.1802416593,0.0043401839,0.1800217181,0.1238096952,0.1889985651,-0.13196899,0.0100575713,-0.0238276962,-0.0925904438,-0.102667205,0.0898847505,0.0559713878,-0.0139077902,0.0222788546,-0.0409954116,-0.1222579554,0.2069974691,0.0480248928,-0.0647029951]],"hackathon_name":"Destination Hack: London","index":1033,"project_description":"You say when, we say where!Sky SkoutYou say when, we say where!Sky Skout is the world's first travel discovery and booking service targeted towards students and young professionals looking for a spontaneous getaway. \"I just want to go somewhere cool and explore, easy and cheap, with my friends!\"Destination Hack: LondonTimur Mamedov\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:51 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Sky Skout","project_tags":["ruby-on-rails","javascript","html5","css3","json","ajax","jquery"],"project_url":"https:\/\/devpost.com\/software\/sky-skout","keywords":"say,sky,skout,looking,cheap,cool,discovery,easy,explore,first,friends,getaway,go,young,professionals,world,service,somewhere,spontaneous,students"},{"level_0":1034,"hack_vector":[[0.1525761485,-0.1355926692,0.0053090947,0.072393246,-0.0354094245,0.1669446081,0.1744086146,-0.0393603705,-0.022209527,-0.021805536,0.0192839373,-0.0004641213,0.1384954304,-0.0707426295,0.0173845757,0.0626284033,0.2603642046,0.0342467576,0.0475318618,0.0990942866,-0.2126699686,0.0182842165,-0.0404725298,-0.0580991842,0.1452260166,-0.0275635533,-0.0635722727,-0.2028966993,0.0131119369,-0.0982878208,0.0434995927,-0.0997093469,0.0568920188,-0.0814932287,-0.0158048812,0.0060969503,0.1335613132,-0.1292704642,-0.02890376,0.0559147969,0.0449423008,-0.1508447081,-0.1734571904,-0.0368266031,-0.0012673452,-0.0391411446,0.0309363082,-0.0265048649,-0.0313403234,-0.2023194432,-0.0779007971,0.0363625437,-0.1106221303,-0.0687989816,-0.1437595785,0.1607747674,-0.1252335012,0.0334029682,0.0311362687,-0.0145418495,-0.0346658416,0.0241554584,0.0625346228,0.0812915191,0.1332675815,-0.015073047,-0.1331541091,-0.1598437279,0.0175356809,0.0022063269,0.078367658,-0.0408920273,0.0110270996,-0.1385146528,-0.0405726321,-0.1032743007,0.1881259233,0.0074286838,0.0626858994,-0.149039194,0.1256444603,0.1702644825,0.0178750288,0.1613295823,0.1333692819,0.183570087,-0.127482757,0.017037401,-0.0115334298,-0.0976536572,-0.1160953268,0.0891671032,0.0373865329,-0.0060143224,0.0484724455,-0.0513536707,-0.1034346446,0.1804800183,0.0649983808,-0.062842831]],"hackathon_name":"Destination Hack: London","index":1034,"project_description":"Life experiences made easy.We make creating life experiences easy.We help travellers focus on creating their adventure, not the admin\nBy seamlessly generating the flights, activities and accommodation that match their budget and preferencesDestination Hack: LondonBackend- deployment - hosting - integration - business ideaMahdi Shariff\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:19 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Maverick.","project_tags":["twilio","sabre","getyourguide"],"project_url":"https:\/\/devpost.com\/software\/mavericks","keywords":"creating,works,generating,accomplishments,activities,admin,adventure,budget,challenges,easy,experiences,flights,focus,help,travellers,inspiration,learned,life,make,match"},{"level_0":1035,"hack_vector":[[0.1371448934,-0.1005184129,-0.0276393555,0.0255654715,-0.0211278871,0.1256034672,0.1950481236,-0.0178798605,-0.0387380645,0.012562545,0.0152051616,-0.0755424574,0.1283401698,-0.0767837539,0.066406846,0.0383877046,0.239787057,0.0219833218,0.0263519417,0.1093585268,-0.2235474437,0.0417799987,-0.0574697256,-0.0522957407,0.1100465432,-0.021235697,-0.0416521914,-0.2224292159,-0.0133646755,-0.0821823552,0.058137089,-0.1335034817,0.0503707193,-0.1227608547,-0.0275332611,0.0002127752,0.104739584,-0.1319065541,-0.0516380928,0.0192994606,0.0107129188,-0.1561595052,-0.1821915358,-0.0238916408,0.0438129455,-0.0624509528,0.025109129,-0.0668672174,-0.0277025495,-0.2046367973,-0.119873032,0.004297785,-0.0958192125,-0.0342309922,-0.1437948197,0.1735858768,-0.1238584369,0.0180170126,0.0180854034,-0.0691748783,-0.0536073186,0.0282526687,0.0753841475,0.0845690295,0.1198996082,-0.0168787669,-0.1168662235,-0.1343716681,0.0426461957,-0.0016676544,0.0873873904,-0.057385277,0.0144814132,-0.131983757,0.018460812,-0.1356569678,0.1827673167,0.0075105112,0.0610571466,-0.1226086542,0.1543663144,0.1582553983,0.0918831304,0.1543906033,0.1037836596,0.1774191558,-0.1034722403,-0.0150132282,0.0100322608,-0.0886045322,-0.1310179532,0.0457825027,0.0744039118,-0.0465998985,0.0192680992,-0.0255164932,-0.1397977769,0.1922296137,0.0236360803,-0.0972115695]],"hackathon_name":"Destination Hack: London","index":1035,"project_description":"Making holiday planning saferMaking holidays saferMaking it easier to find safe places to go on holidayWe list all the top destinations from the sabre api and then match them with locations from GetYourGuide and the images provided. The use sentiment analysis to find out which destinations is the safest places and display the result to the user.\nSentiment Analysis - Extract live twitter feeds -> pass the feeds to HP Sentiment Analysis api. HP Sentiment Analysis returns back whether the tweets are positive or negative.Linking GetYourGuide api with Sabre API.Working in team.How APIs are revolutionising modern travelImplement across all major platformsDestination Hack: Londondeleted deleted\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:51 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Safe Destinations","project_tags":["android","java","javascript","sabre","getyourguide"],"project_url":"https:\/\/devpost.com\/software\/safe-destination","keywords":"sentiment,analysis,api,places,getyourguide,find,feeds,hp,sabre,safe,making,destinations,images,holiday,implement,inspiration,learned,linking,list,holidays"},{"level_0":1036,"hack_vector":[[0.1423448026,-0.1244826838,-0.0241493024,0.0498051494,-0.0437512249,0.1318127215,0.1839926541,-0.0211258158,-0.0277274419,-0.0227252692,0.0101604303,-0.0240718685,0.1360779405,-0.0710677877,0.0493378639,0.0326930955,0.2385964692,0.0134377098,0.0436358601,0.1182579771,-0.2426276058,-0.0003917836,-0.0327950679,-0.0447778441,0.1163182929,-0.01701211,-0.0438852571,-0.1760517061,0.0153252715,-0.1060230583,0.0384608693,-0.1116470844,0.0343763828,-0.0702895448,-0.0064356863,-0.0172386952,0.1161810383,-0.1424857229,-0.0451497063,0.0311660767,0.0486241095,-0.1296965182,-0.167432338,-0.037686076,0.0315537825,-0.0667805225,0.0241876617,-0.0558883026,-0.0157086886,-0.212249428,-0.108650811,0.0128381448,-0.100984782,-0.0540453978,-0.1827916801,0.1816174239,-0.1269821972,0.0063967374,0.0242969226,-0.049101375,-0.0405194946,0.0280367024,0.0670606419,0.0692614466,0.1340007037,-0.0007068075,-0.1180838421,-0.1464992911,0.030129848,0.0110128606,0.0776397735,-0.0361944325,-0.0060911789,-0.1331198066,-0.0155319376,-0.1216260642,0.1779395789,0.0190102179,0.0334961303,-0.1456552148,0.1234166473,0.1738695055,0.0347644873,0.175114274,0.1226393282,0.2012822181,-0.1156028435,-0.0013720503,-0.0229435395,-0.0875663161,-0.1290047914,0.0732205659,0.0849831924,-0.0215983428,0.0218056384,-0.0245732553,-0.1389733851,0.2071965635,0.0352863632,-0.0714444369]],"hackathon_name":"Destination Hack: London","index":1036,"project_description":"an opinionated way to do corporate group bookingA friend of mine, a director at Warsaw University tried to book a travel for his 80 students. It took him few days of boring, manual work.Our scoring algorithm is makeing sure that all the travelers are accomodated in eitehr one hotel, or  two hotels nearby.How to handle a booking form different destinationa nd how to find availability for group using existing API'sIt's quick and easy to do a group booking using our product.Destination Hack: LondonArtur Stary\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:52 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"GroupExpert","project_tags":["angular.js","node.js","php"],"project_url":"https:\/\/devpost.com\/software\/groupexpert","keywords":"using,group,booking,works,director,handle,groupexpert,friend,form,find,existing,eitehr,easy,destinationa,different,hotels,days,challenges,boring,book"},{"level_0":1037,"hack_vector":[[0.1208256185,-0.1129128262,-0.0013323526,0.0702620298,-0.0468520708,0.1561027765,0.1964259446,-0.0350322127,-0.0208823532,-0.022362493,0.0266585425,0.0127123082,0.1332393736,-0.0751429424,0.0272305906,0.053052783,0.2494348735,0.0308908578,0.0453434363,0.1093676612,-0.2137285471,0.0134593323,-0.0415758863,-0.058502689,0.1260252595,-0.0139330532,-0.0595013164,-0.1989593208,0.0192972701,-0.0818772316,0.0445491597,-0.1005196273,0.0411751904,-0.0708557591,-0.0128159998,0.0117656048,0.1338858604,-0.1219503805,-0.0276558343,0.058496058,0.0413742848,-0.1571054757,-0.1716100127,-0.0448585078,0.0107960654,-0.0492900014,0.0292602312,-0.0303186942,-0.0271135941,-0.2093646824,-0.0858968869,0.028058609,-0.1111281291,-0.0538818836,-0.1624268442,0.1608198285,-0.1419629157,0.0275314208,0.0277679786,-0.0347206704,-0.0336714499,0.0265177619,0.0754003599,0.078409858,0.1405481547,-0.0157883335,-0.1111129671,-0.15555197,0.0389008559,-0.0046939496,0.0512938276,-0.0413096696,0.0077454662,-0.1335948408,-0.0401409492,-0.1069942042,0.1834141314,0.0061039976,0.0517895967,-0.1630434543,0.1262483001,0.1729503125,0.0352600925,0.1687789559,0.1283959299,0.2063018084,-0.1274581552,0.0082050143,-0.0094790859,-0.0975561738,-0.1403901875,0.0809781402,0.0594869144,-0.005651019,0.0388750657,-0.0417196117,-0.1167985722,0.181035772,0.0578030683,-0.0575838424]],"hackathon_name":"Destination Hack: London","index":1037,"project_description":"Multimodal travel solutions for offline travel agenciesOur company, Waynaut, has built a multimodal platform. Just an API, with no interface.With WayDesk. we have decided to combine Waynaut and Sabre APIs to build an application for offline travel agents, which will allow them to offer their clients multimodal travel options.Destination Hack: LondonSimone Lini\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:14 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Waydesk","project_tags":["java","restlet","bootstrap","backbone.js","javascript","jquery"],"project_url":"https:\/\/devpost.com\/software\/waydesk","keywords":"waynaut,travel,multimodal,combine,allow,api,apis,application,build,built,clients,decided,company,waydesk,interface,offer,offline,options,platform,sabre"},{"level_0":1038,"hack_vector":[[0.1702463627,-0.164097026,-0.0008294611,0.086597316,-0.0454041399,0.1660464704,0.1747752726,-0.0642344207,-0.0294118077,-0.0046517248,0.0091359746,0.0257925633,0.1346709877,-0.0733450875,0.0170074962,0.0686156228,0.2422940433,0.0294866506,0.0476568639,0.0782032162,-0.2090093493,0.0117694261,-0.0466702506,-0.0587498732,0.1644935161,-0.0229310337,-0.0614180565,-0.1924398839,0.027413236,-0.0743181407,0.0387987047,-0.1073709279,0.0660889968,-0.0668590814,-0.0435541347,0.0045780982,0.1311059892,-0.1212692112,-0.0211747251,0.0805316567,0.0524939857,-0.1478585452,-0.1767827421,-0.0265811924,-0.0338417664,-0.0318639651,0.0372024998,-0.0124254823,-0.019936692,-0.1829089075,-0.0526078828,0.0316645168,-0.1136069447,-0.0525685139,-0.1114276573,0.1484205425,-0.1407689601,0.067512311,-0.010769316,0.0351400711,-0.0245950725,0.0314177983,0.0568602309,0.0847273991,0.1438392997,-0.0418196991,-0.1428974271,-0.156721279,0.015414495,0.001375742,0.0714728683,-0.0303431358,-0.0032919713,-0.1542167366,-0.0648510754,-0.0768978372,0.2010436505,0.0289844479,0.0785710216,-0.1402046829,0.132567063,0.1589489579,0.0150793297,0.1474033147,0.1561836004,0.1757054627,-0.1326465458,0.0600547567,0.011688224,-0.1025643274,-0.086010918,0.1059391201,0.0422065593,0.0090844017,0.0793863982,-0.0898601934,-0.0657906532,0.1604657173,0.089980945,-0.0452800281]],"hackathon_name":"Destination Hack: London","index":1038,"project_description":"Travel is Baytar again, simple . organised . personalisedBaymax and TARSIT AI BabyTime shortage and partner APIfuzing api with AIa lota lot of things including enhancing search and fundingDestination Hack: LondonXuan Wu\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:54 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"baytar","project_tags":["javascript","node.js"],"project_url":"https:\/\/devpost.com\/software\/baytar","keywords":"ai,api,lot,works,including,baby,baymax,baytar,challenges,enhancing,funding,fuzing,inspiration,time,learned,next,partner,proud,ran,search"},{"level_0":1039,"hack_vector":[[0.1204410046,-0.0914104134,-0.0355396494,0.0256864745,-0.0329637639,0.1222682893,0.190398857,-0.015358164,0.0076851556,-0.0435704961,0.0224037878,-0.0620078333,0.1213588938,-0.0538422763,0.0595806912,0.0140689686,0.2266126275,0.0106107276,0.0253130198,0.1392632872,-0.2500155568,0.0093875146,-0.0361429974,-0.0226534866,0.0747399405,-0.0122762555,-0.019474443,-0.1658349931,-0.0190755613,-0.121097073,0.0425346941,-0.1208222508,0.0183169134,-0.0752680078,0.0165094957,-0.0335159004,0.1016899645,-0.1498369724,-0.0694895908,-0.0046337768,0.0327413119,-0.119923681,-0.1435475349,-0.0552074686,0.0684072152,-0.0888699889,0.0154825458,-0.0629048049,-0.0420369506,-0.2142919451,-0.1462444067,0.0003827723,-0.0859125629,-0.0372050926,-0.2081376761,0.1664448231,-0.1042015776,-0.047201097,0.0474014618,-0.116128765,-0.075665839,0.014997323,0.0776957572,0.0387303308,0.1004922912,0.0348626897,-0.1008234918,-0.1302534342,0.0474493206,0.0274293553,0.0567687042,-0.0538080633,0.0253048521,-0.1100953519,0.018586006,-0.1392004788,0.156961903,0.0123486547,0.0046495288,-0.1383698136,0.1100353971,0.1761533767,0.0416309983,0.1822819561,0.0931438655,0.1953773052,-0.105583176,-0.0497157387,-0.0460747294,-0.0740712658,-0.1459629536,0.0588602908,0.0979746729,-0.0480905958,-0.024768671,0.0162280221,-0.1717319936,0.2402887791,-0.0049564987,-0.0833960548]],"hackathon_name":"Destination Hack: London","index":1039,"project_description":"Travel with us if you want to live!British holiday makers killed in a massacre by a gunman in Tunisia, after a bomb exploded at a Kuwaiti mosque and a man was beheaded in France - these event happened two days ago and we felt we need to do something for all tourists to be safe when travelling! And even when you are in a \"safe\" location, you can never be safe.It is a platform from which you make a selection of either a country, city or an event that you want to check out. Using our algorithm and searching through social media feeds come up with a safety recommendation for you. Using this information you can make a much more informed decision to whether you want to go to places such as Tunisia or not. We have also linked AVOID to your smart-watch to track your heart rate and if any sudden changes occur, we send you a notification checking if everything is ok. If you are fine then you simply say yes to the notification. If not, press no and we will automatically call the emergency services and send your geo-location and help will be on its way!I struggled getting tons of APIs to work together from Twilio to Google map to Sabri. Also getting the app working with a team of two with only one developer.Trying to attempt to solve major issues in today's world and making a kick ass app working!The importance of having an amazing team!We want to get access to secure data sources by governments on security alerts to let the public know of any imminent threats on the go.Destination Hack: LondonZakaria Abushima\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:37 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Avoid","project_tags":["android","sabre","twilio","google-maps"],"project_url":"https:\/\/devpost.com\/software\/avoid","keywords":"safe,want,notification,two,event,team,app,tunisia,make,using,avoid,also,getting,location,go,working,send,get,yes,geo"},{"level_0":1040,"hack_vector":[[0.1453592628,-0.098941043,-0.0325744376,0.0227634441,-0.0219043512,0.1316291541,0.1887747049,-0.0193946473,0.0028230872,-0.0396149531,0.0192328412,-0.0678848177,0.1166242585,-0.0607789904,0.0471224636,0.0229335949,0.2250341028,0.0101650292,0.0327146612,0.1314113736,-0.2459537238,0.0122748027,-0.0356016867,-0.026814647,0.0859069377,-0.0228420608,-0.0234709289,-0.1747907996,-0.0198408235,-0.117099002,0.04728508,-0.1196959689,0.0320202,-0.0880697891,0.0122471321,-0.0304542631,0.1049966812,-0.1555839181,-0.0740711987,0.0013650076,0.0303159505,-0.1273678094,-0.1422922611,-0.0530677065,0.068423517,-0.0786567926,0.0132601485,-0.0611077696,-0.044162102,-0.2153219283,-0.1508916914,0.0085211843,-0.0932257622,-0.0420409925,-0.1975156367,0.1596354395,-0.1003961638,-0.0363403745,0.0480793267,-0.1110637784,-0.069935523,0.0134899914,0.0717443526,0.0487537757,0.1071081012,0.0246218871,-0.1191482842,-0.1219223216,0.0389010012,0.0273274221,0.0744949281,-0.0593934096,0.0239089597,-0.1223531067,0.0181503445,-0.1414314955,0.1602035612,0.0060274308,0.0127050914,-0.1370429695,0.1118781045,0.1671480387,0.0370538197,0.1810703874,0.0873575285,0.1903750002,-0.1062023342,-0.0419624709,-0.0436555631,-0.0790352002,-0.1406357735,0.0597322211,0.0877910256,-0.0515280962,-0.0127194887,0.0132484054,-0.1595416814,0.2380871326,0.0028206964,-0.0807263926]],"hackathon_name":"Destination Hack: London","index":1040,"project_description":"Keeping you safe, Taking you furtherWe're at a Sabre Trave Hack, London's GayPride March is going past the window, and there's a realization that not everyone is as safe everywhere they travelYou register your destination, stereotrypes you may be identified with, and your side trip budget.\nYou can then create 'HeadsUp' messages about relevant events, both positive and negative, when you travel.\nWe use Twillio to send the messages to the relevant registrants by location and identity.\nWe also use your side trip budget to notify you of positive events that you could reach within your side trip budget.How do we match up the right alerts with the right people?\nHow can we overcome the apps seemingly inescapable negativity of the app?\nHow do we create an income streamNot wasting time trying to harness the twitter storm\nRealising that this can be used to harness positive data as well as negative\nRealising that positive events can be used to sell travel to positive events.The food at Sabre hack is actually quite healthy\nHarnessing the full potential of API's is not necessarily the work of a weekend\nThat having only one coder on the team places a heavy burden.We're glad you asked; with the right industry partner, and an awful lot of hard work, this is an application that could deliver utility to both consumers and travel industry players.Destination Hack: LondonDesign, buildPaul Cannon\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:55 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"TravelAlert","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/travelalert","keywords":"positive,travel,events,right,budget,trip,side,relevant,sabre,realising,could,hack,harness,industry,work,messages,create,negative,used,use"},{"level_0":1041,"hack_vector":[[0.1223320961,-0.1036871076,-0.0161713436,0.0352002047,-0.0167322364,0.1488523334,0.2031174749,-0.0380075946,-0.0228526723,-0.0117982002,0.0224762429,-0.0606669672,0.1269280612,-0.0638766214,0.0440482087,0.0520833284,0.245090425,0.0116771301,0.0362833478,0.1206487343,-0.2343488634,0.0482477993,-0.0375858694,-0.0362913236,0.0950595364,-0.0207059253,-0.0391454361,-0.1929546446,-0.0047714631,-0.0981003493,0.0660719872,-0.1201667562,0.0408756062,-0.0846222714,-0.0138765341,-0.0172168892,0.116315566,-0.1408771425,-0.03718099,-0.0018171924,0.0220514722,-0.1521856785,-0.1674544215,-0.049610883,0.0562914237,-0.05413533,0.0119780749,-0.0521398671,-0.0164274722,-0.2122913003,-0.1085208058,0.0190298017,-0.0971150324,-0.0239404812,-0.1867427677,0.1550801396,-0.13322483,-0.0213148296,0.0514752008,-0.0882650614,-0.0682762638,0.0175421964,0.0885977969,0.0688861236,0.1069855541,0.0130188223,-0.0974765792,-0.1476390958,0.0571222343,0.0223633498,0.0709110647,-0.0579289459,0.0369020291,-0.1185121611,-0.0063553769,-0.1422221363,0.1584450603,-0.0020448691,0.0476917773,-0.1351400614,0.129621923,0.1604029536,0.0493279137,0.181226626,0.1040401757,0.181509316,-0.1206541434,-0.0346326344,-0.0352036878,-0.0902006924,-0.1462938637,0.0562895089,0.0723707974,-0.0580537543,-0.0073078899,0.0141850356,-0.1528759599,0.1937539726,0.0272240397,-0.0850672573]],"hackathon_name":"Destination Hack: London","index":1041,"project_description":"Complaining System Mobile AppPersonal bad experiences when travelling and the need to have a unified complaining system to improve services for customersCustomer capture the bad travel service using his or her camera integrated in the app\nThe photo is downloaded inside the app with a brief text about the complain\nThe picture will appear directly inside a map\nCustomers and owners of the business can see the picture if they have the app and date of downloading \nThe app is divided into three sections:\n1- hotels\n2- airlines\n3- travel services such as insurance and rent a car\neach section got its own map on the map! \nTravel Businesses can improve their services through looking at the complains and the complain will be deleted when the business promise to resolve the complainDevelopment process, Incubator, a teamDestination Hack: LondonA mobile app and data system to map and complains and connect them right to the owners and management of the travel industry or serviceMel Mansour\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 08:04 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ReView","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/review","keywords":"app,services,travel,complain,map,inside,customers,improve,picture,business,bad,experiences,deleted,downloaded,got,divided,directly,hotels,development,downloading"},{"level_0":1042,"hack_vector":[[0.1394390613,-0.1045862958,-0.0313204527,0.0369882621,-0.0238442402,0.143755734,0.1900708973,-0.0318445228,-0.0093344916,-0.0031529036,0.0228701457,-0.0588099882,0.1373349428,-0.0650116429,0.0635421798,0.000591496,0.2191023827,0.0085316142,0.0324189737,0.1069252566,-0.2443332374,0.0254426245,-0.0369857624,-0.0142235132,0.1093529686,-0.0246379357,-0.0232734941,-0.1864762306,-0.0164860282,-0.1022705361,0.0714643225,-0.1348159015,0.0271892548,-0.0924048126,-0.0185496695,-0.0251694545,0.1083574891,-0.1427466571,-0.0646009296,-0.0058314814,0.0355452076,-0.1264781803,-0.1429776251,-0.0390704274,0.0611680187,-0.0496102646,0.0181105547,-0.0604149997,-0.0349520631,-0.2024054527,-0.1401539296,0.0042141541,-0.1071281806,-0.0166819431,-0.1976603568,0.164145112,-0.120027855,-0.0226111282,0.0367191732,-0.0900055096,-0.0674285144,0.0120677045,0.0808462501,0.0484678745,0.1074105501,0.0160638951,-0.1016359925,-0.1239372939,0.0393242575,0.0224204753,0.0682274997,-0.0471283719,0.0358818695,-0.121696353,0.0214579031,-0.1400167346,0.1794995815,0.0138426777,0.013992345,-0.137684077,0.1310437769,0.1722295582,0.0454751439,0.1789975762,0.1140867472,0.2000728399,-0.0941141918,-0.0312636495,-0.0218611863,-0.0709822103,-0.1397898495,0.0614929013,0.0947234184,-0.0399609916,-0.0005147235,0.0022118175,-0.1516479254,0.2286688536,0.0151744047,-0.082898818]],"hackathon_name":"Destination Hack: London","index":1042,"project_description":"Curated trusted travel recommendations from your friends quickly and simplyDoes it feel like you spend more time researching your travel plans than actually on holiday? YesWhose advice and recommendations do you trust above all others? Friends and FamilyWho knows a place better than anyone else? A localWhen you combine these problems \u2013 the solution is Qurated, a travel app that gives you the best local recommendations for accommodation and activities from a local friend quickly and simply for you and your friendsFrom an industry perspective we improve conversions by building trust early in the funnel.Our primary challenge was connecting the different API\u2019s together into one simple product\nSecondly simplifying a big data issue using curationCreating a simple interface for a complex back-endRunning simultaneous API\u2019s from different sources is possible to architect and can be integrated togetherOther accommodation and activity sources as API\u2019s become available,\nIntegrate Tripcase to make system even easier to use,\nPolish the UI,\nTestingMonetisationHotel commission model - approx. 5-15% \/ 20c-30c leadouts - well placed as high conversion \/ need scale\nActivities model - circa 10% - again friend recommendations lead to strong conversion\nTwilio - potential to charge users per request - price point between 5-10c - cover costs \/ depends on business modelDestination Hack: LondonWrote the front-end (AngularJS) and back-end code (Node.js + MongoDB)Cris Perera\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:07 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Qurated","project_tags":["getyourguide","sabre","twilio","heroku","node.js","angular.js","sendgrid"],"project_url":"https:\/\/devpost.com\/software\/qurated","keywords":"local,friend,recommendations,using,model,advice,simple,api,travel,accommodation,simply,different,quickly,conversion,system,friends,sources,qurated,together,activities"},{"level_0":1043,"hack_vector":[[0.1538271606,-0.1099901423,-0.0093397917,0.0621661842,-0.0243135411,0.1593612432,0.2018282413,-0.0410609506,-0.0160579663,0.0038281253,0.0295158625,-0.0323478431,0.1329662502,-0.0672309324,0.0607739501,0.0211004596,0.2280679792,0.0182635058,0.0514094271,0.1039497182,-0.232652247,0.0325661674,-0.0505203195,-0.0373432823,0.1193697304,-0.0263480637,-0.0387486853,-0.214181006,-0.0018278726,-0.0705908909,0.0682732835,-0.1180783212,0.039588768,-0.1077998355,-0.0323892348,-0.0020962195,0.1136284024,-0.1337468922,-0.0582845919,0.0225616638,0.0288053807,-0.1519814879,-0.1533867866,-0.03831039,0.0360355638,-0.0386538617,0.0134402001,-0.0525823571,-0.0251326598,-0.2013687342,-0.1175907999,0.0121786147,-0.1195936501,-0.0214190539,-0.1637378633,0.1595671922,-0.1290906817,0.0162260085,0.0238672476,-0.0578697324,-0.0498638824,0.017983187,0.0867202207,0.0745268315,0.1229405031,-0.0095159076,-0.1131111234,-0.1315874606,0.0347046629,0.0059073661,0.0615328886,-0.0430941656,0.0264769644,-0.1342379153,-0.0115485284,-0.1298100799,0.195833236,0.007494479,0.0346797742,-0.149711132,0.1366219223,0.1611277312,0.0536703244,0.1605111808,0.1192592457,0.2070800811,-0.0996554643,-0.0060898829,-0.0014400261,-0.0812681764,-0.1435798258,0.0703260899,0.0835212842,-0.0265571829,0.0293792523,-0.0215826705,-0.1147327125,0.1978851557,0.0351376943,-0.0705478564]],"hackathon_name":"Destination Hack: London","index":1043,"project_description":"Simple, Effective, Realtime - Notification EngineEnhance Customer ExperienceUser subscribes for push notifications.  Event like changes in Fare Changes, Flight Schedule, Flight Cancellation, Gate Change etc trigger the notification engine to send an automated alert to the user at his device.Integrating with some of existing APIs.Realtime Notification, Device agnostic, support for multi-platform, supports for most of modern browsers like Chrome and Safari, offline messaging, minimal dev cost for integration, enhances marketing capabilities, easy integration with API.Use of new and existing open source APIs. Google Cloud Platform.Realtime integration with Airlines and Travel Agency system, Build Recommendation System within Notification Engine that will handle Data Analytics and trigger notifications.Destination Hack: LondonMphasis Limited\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:56 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"AirAware","project_tags":["java","spring","mysql","html5","google-cloud-messaging","google-app-engine"],"project_url":"https:\/\/devpost.com\/software\/airaware","keywords":"integration,notification,apis,notifications,existing,platform,realtime,like,device,changes,engine,system,trigger,flight,user,easy,cloud,enhance,enhances,dev"},{"level_0":1044,"hack_vector":[[0.1445064098,-0.1067802384,-0.0211519785,0.0379173532,-0.0117443427,0.1208844036,0.1962646246,-0.0250263158,-0.0266871136,0.0023290596,0.0204024892,-0.0733519718,0.1461260766,-0.0755004585,0.0715813935,-0.00647303,0.1992518306,-0.0188394822,0.0449895561,0.1246320382,-0.2491983622,0.0354657806,-0.0419663079,-0.0092307217,0.1146493107,-0.0351766311,-0.0294279382,-0.1818866879,-0.0191336591,-0.0955421776,0.0690121129,-0.1190154701,0.0293980874,-0.091792576,-0.0189081561,-0.025037203,0.1061685607,-0.1495473236,-0.0605683289,-0.0154110519,0.0467368811,-0.1273843199,-0.149271965,-0.0226431731,0.0684669912,-0.0365533642,0.0152281597,-0.0927940756,-0.0178738479,-0.2031695992,-0.1571483612,0.0225843322,-0.1145422682,0.0187766459,-0.212719813,0.1658318788,-0.1284108758,-0.0215823613,0.0328255259,-0.1079494432,-0.0705316812,0.0196755175,0.0803189874,0.0499509573,0.1113466248,0.0230880957,-0.0867765322,-0.1156491563,0.0221648235,0.0178743303,0.0709045753,-0.0445895568,0.0205299929,-0.1224706098,0.0445778482,-0.1195466071,0.1763661355,0.0058685644,-0.0024171639,-0.1285357326,0.1315986961,0.1550259292,0.0606065206,0.1563542634,0.108895734,0.2100992203,-0.0794370696,-0.0478320569,-0.0176446792,-0.0609523281,-0.142299667,0.0527778156,0.1066938713,-0.0362491868,-0.0143453432,0.002297862,-0.1594709456,0.2175718546,0.0047741318,-0.0697375312]],"hackathon_name":"Destination Hack: London","index":1044,"project_description":"Reinventing hotel bookingsWhen seeking to obtain the best value for money in hotel booking, current booking websites are limited. As a traveller, we are usually forced to book a single hotel in a location despite staying more than one night there. As a result, travel can be costlier and less enjoyable for travellers. Our solution reinvents the booking process by enabling tourists look for the best value\/quality combination of multiple hotel properties in the same city.It works in a traditional booking way except you as a traveller are presented not only with single hotel choices.We chose a platform which was not our strongest one so we had to move to another platform after several hours into the project. \nWe were hoping to integrate more APIs, but time constraints didn't allow us to integrate more than two API - one from Sabre Travel called Hotel REST API Hotel Shopping Endpoint and GIATA -  GIATA Hotel Guide Multilingual\nOn the GIATA API we managed to use the description and the pictures, but only in English, not multi-language capabilities yetOur development talent managed to build a prototype which makes use of two APIs - one from Sabre and one from GIATA - GIATA Hotel Guide Multilingual\nWe produced a nice user interface with good graphics and clear logic for the travellerDeveloped our knowledge of APIs\nIdentified areas to improve in our understanding of node.js\nImprove team skill set identification and project management\nRight person to tackle right tasks\nBuild on back end knowledge and experience\nTeam work and communicationExpand Search Criteria\nDeployment to countries worldwide - Net Media Planet states conversions increase by 70% when websites fully localised\nIntegration with various services such as: GIATA Multilingual, TripCase, TripAdvisor, Uber, Airbnb, GetYourGuide, HomeAway, Housetrip and other potential partnersDestination Hack: LondonI helped with brainstorming, HTML and design ideas as well as helped with writing it up on ChallengePost, video demo, etc.I am the only techie in the team working 24 hours on the full stack, back end and front end of the project.I pitched my idea of a hotel splitting website to the group of attendees who were seeking to form a group. I then worked with a number of interested parties to form a group with complementary skills to start to hack the idea into an MVP.I was a key part of the team who developed the website idea into actual requirements and deliverables and defined the MVP.Further work was primarily on creating the pitch deck and other materials relating to the non tech side of the project.Vlad S\n          started this project\n\n          \n            \u2014\n            \n\n                Jun 28, 2015 07:15 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HotelSplitter","project_tags":["python","django","sublime-text","visual-studio","sabre"],"project_url":"https:\/\/devpost.com\/software\/hotelsplitter-oefvf","keywords":null},{"level_0":1045,"hack_vector":[[0.1637519896,-0.137081638,-0.0091850059,0.0707818344,-0.0257099792,0.1493218392,0.1995439976,-0.0426137634,-0.0344041847,-0.0119348336,0.0110994615,-0.0146060986,0.1393070966,-0.0677666888,0.0498501211,0.0161729846,0.2191273123,-0.00070508,0.0506873727,0.1095200479,-0.231827572,0.0202907398,-0.0387729444,-0.0356861576,0.1526706219,-0.0246254336,-0.0337853245,-0.1902032644,-0.0054401485,-0.0804285556,0.0572398864,-0.1121505946,0.0517973937,-0.0734721497,-0.0381785892,-0.007461275,0.1235856116,-0.1351406127,-0.0431723148,0.0413866192,0.0583871752,-0.1394648552,-0.1561573595,-0.0331831202,0.0131335305,-0.0459467433,0.0257702358,-0.0584193505,-0.0167614799,-0.2085519433,-0.0987608135,0.016958816,-0.1214552969,-0.0174013227,-0.1558835655,0.1643147022,-0.1529560238,0.0234781411,0.0069396342,-0.0370545089,-0.0477995723,0.0314219706,0.064312987,0.0552520491,0.1364684254,-0.0127757322,-0.1317991167,-0.1430970877,0.0196846537,0.0093227923,0.0649861246,-0.0372877121,0.0037260333,-0.1426627338,-0.0126400543,-0.1036221832,0.2005945444,0.0145944571,0.0514791012,-0.1434297115,0.128755331,0.1593536586,0.0370691642,0.1570879668,0.1401994675,0.1976768672,-0.1112272814,0.0213796906,-0.0057900217,-0.0867962465,-0.1245725378,0.0873188525,0.0757513791,-0.0137972822,0.0312053245,-0.0444807224,-0.1188970953,0.1985577047,0.0529508516,-0.0508789495]],"hackathon_name":"Great Uni Hackathon 2015","index":1045,"project_description":"See the meshes made using the BodyLabs API through Oculus. (+AR featuring a skeleton, pink bullets and fun )Always wanted to be able to position meshes and models without using markers.SLAM + meshes from the BodyLabs APISolving high-latency issues due to computer vision processing.Writing a little library to import meshes.SLAM, OpenGL.Keep developing the markerless tech and integrate more BodyLabs functionalities as they are launched.Great Uni Hackathon 2015Horia Porav\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 01:58 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"OculusDress and Side-Slash","project_tags":["c++","opengl"],"project_url":"https:\/\/devpost.com\/software\/oculusdress-and-side-slash","keywords":null},{"level_0":1046,"hack_vector":[[0.172617048,-0.1437456161,-0.0180049129,0.0887689367,-0.0161972977,0.1608976424,0.1868527234,-0.04626102,-0.02978733,-0.0051107653,-0.0198914856,-0.0246420093,0.1546695828,-0.0743252933,0.0228186455,0.0002439544,0.2067849189,-0.0019726253,0.0542109497,0.1002191305,-0.2398795635,0.0247132927,-0.0258905739,0.0002780678,0.1877428442,-0.0330510214,-0.0533774868,-0.1723992229,-0.0127098067,-0.0754209012,0.0686612949,-0.1289932728,0.0494751781,-0.0524635352,-0.051846873,-0.0200643241,0.1349826753,-0.1394715011,-0.0313023776,0.0350334682,0.0836728439,-0.1431596726,-0.1515012532,-0.0296033882,0.0141601907,-0.0222800877,0.0227125585,-0.0575209484,-0.0242747404,-0.1928118914,-0.1057309136,0.0327524804,-0.1240027845,0.0121445432,-0.1843471676,0.1516371369,-0.1533973217,0.0083252508,0.0010662945,-0.0274914242,-0.0560588874,0.0223435815,0.0543628223,0.0283814967,0.1353384405,0.0016704104,-0.1091330945,-0.1319084764,0.00828443,0.0238042735,0.075599134,-0.0404122993,0.0144261755,-0.1371205449,0.0003104632,-0.0767413899,0.1965322644,0.0189392231,0.0257747527,-0.1406463087,0.1179771498,0.1583908647,0.0202565659,0.1576283425,0.1400407702,0.2068212479,-0.1001683027,0.0184482504,0.0010940133,-0.0794572979,-0.1061046422,0.0901841447,0.0641566738,0.0008672546,0.0340408348,-0.0400662534,-0.118862018,0.2204961479,0.0590975396,-0.0384276733]],"hackathon_name":"Great Uni Hackathon 2015","index":1046,"project_description":"Monopoly is more into trading than ever!Bloomberg is a great financial tool, so we thought implementing it in a great financial game.The game follows the classic monopoly rules with a Bloomberg twist.Running multiple animations simultaneously. Multiplayer gaming experience was a challenge in the overall development of the game.Using real financial historical stock market data.Team work is the most important asset in a contest\/hackathon.Global Hack Seoul.Great Uni Hackathon 2015Backend development and some front-end work using:Javascript, NodeJS, Three.js, Bloomberg APIVlad Berianu\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:10 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Bloomopoly","project_tags":["javascript","socket.io","node.js","webgl","three.js","express.js","bloomberg","photoshop"],"project_url":"https:\/\/devpost.com\/software\/bloomopoly","keywords":"game,financial,bloomberg,great,works,experience,historical,hackathon,hack,global,gaming,follows,development,work,data,contest,classic,challenges,challenge,bloomopoly"},{"level_0":1047,"hack_vector":[[0.1806351095,-0.1287619919,-0.0355912484,0.0641419142,-0.0144466441,0.1538710892,0.2091559172,-0.0472215973,-0.0238707475,-0.0131066535,-0.0032344249,-0.0472072549,0.1462435871,-0.0670028105,0.0560455471,-0.0135765299,0.2096385807,-0.0138479667,0.0572082475,0.1020266861,-0.2324265242,0.0431868248,-0.0400470831,-0.0036715569,0.1497505903,-0.0320146605,-0.0376158468,-0.1732455641,-0.0326782651,-0.0689590126,0.071775496,-0.1285782456,0.0547142066,-0.0811637342,-0.0394801535,-0.0151857231,0.130867824,-0.133709386,-0.0534048229,0.0044664503,0.0633941963,-0.1455081105,-0.1528611183,-0.0237822849,0.0371674784,-0.037742883,0.0117869312,-0.0800406858,-0.0267170854,-0.2024643868,-0.1336847693,0.0215236247,-0.1184730828,0.0131267188,-0.1871603876,0.1389016956,-0.1479150951,-0.0120546017,0.0316601545,-0.0662924051,-0.0794469267,0.0297509115,0.0748499855,0.0254791398,0.103888616,0.0094077783,-0.1172917336,-0.1236190423,0.0115050729,0.0349794514,0.0837162361,-0.0476491041,0.0232380368,-0.1411950588,0.0121973213,-0.1144025102,0.1970221698,0.0066932007,0.0298133213,-0.1271744072,0.1105195582,0.1399966925,0.0422503799,0.1617527008,0.1171699315,0.1879347414,-0.1016445681,-0.0093431436,0.0028993452,-0.0895771533,-0.1230515987,0.075622879,0.0756151378,-0.0270236246,0.0271663927,-0.0235424582,-0.1282472163,0.2284341156,0.0316520855,-0.0529440679]],"hackathon_name":"Great Uni Hackathon 2015","index":1047,"project_description":"Remarkably intelligent restricted Bolltzman machine playing piano. (tl;dr: it can learn how to play some Bach)ariel is a restricted Boltzmann machine based neural network which can be taught how to play music.ariel uses parsed MIDI tracks as input and returns a fully legal MIDI track that can be loaded to any MIDI player.The implementation of the neural network is strongly based on the dnn library for node.js with a handful of additional hacks and tricks.Great Uni Hackathon 2015I've worked mostly on MIDI parsing.I've worked on the machine learning part of the project. It was the first time I've used RBMs, so it was quite a challenge!Mateusz Piotrowski\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:22 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"ariel","project_tags":["javascript","node.js"],"project_url":"https:\/\/devpost.com\/software\/ariel","keywords":"midi,ariel,network,neural,input,based,library,legal,js,handful,implementation,machine,hacks,fully,dnn,boltzmann,loaded,uses,tricks,music"},{"level_0":1048,"hack_vector":[[0.1461649984,-0.0909069031,-0.0248478502,0.0440942533,-0.0245265104,0.1535192877,0.1810677946,-0.0368239619,0.0039506648,-0.0403368101,0.0130115291,-0.070021145,0.1366558522,-0.0748059303,0.0519057587,0.0181344636,0.2395271957,0.0124277407,0.0414812714,0.1215606183,-0.228772074,0.017226303,-0.04704649,-0.0274949037,0.1198949516,-0.0239223111,-0.0241581146,-0.1837513,-0.0258496124,-0.1004295871,0.0400020592,-0.1206089258,0.0545933917,-0.0877644867,-0.0144726168,-0.0100911334,0.1271536648,-0.1416649967,-0.0560093671,0.0196611639,0.0415005535,-0.1234874129,-0.1603410691,-0.0315419622,0.0465004556,-0.0700631142,0.0288430862,-0.0528935529,-0.0345155708,-0.2165273726,-0.140365243,0.0073301834,-0.1023701131,-0.0305617861,-0.1751810461,0.1681606323,-0.1164310426,-0.016482478,0.0331081599,-0.0834463686,-0.0691095814,0.0080064982,0.080826968,0.0430153646,0.1150919273,0.0116200093,-0.11206536,-0.1499928832,0.0335878804,0.0298204273,0.0753130466,-0.0544467606,0.0115556912,-0.1313285679,0.0170922764,-0.1106520444,0.1928031743,0.0145892799,0.0225970317,-0.135375157,0.1162803769,0.1707811803,0.0498143137,0.1638587415,0.0998227075,0.1712192744,-0.1082424074,-0.0237448905,-0.0209028106,-0.0882578418,-0.1381803602,0.0609040074,0.0791266039,-0.0301662926,0.0076777129,-0.0184162781,-0.139165923,0.2349663526,0.0331770331,-0.0901419148]],"hackathon_name":"Great Uni Hackathon 2015","index":1048,"project_description":"How do you receive your important emails when you don't have the internet?Brainstorming led to thisAn intricate back-end let's you receive condensed versions of your emails through text message. Not only will you stay connected to your important messages on-the-go, you will also be able to access sophisticated text analysis and visualisation on our front-end .Implementing the SendGrid API into our server environment and developing algorithms to condense the emails into still-readable text messages and perform the needed analysis.Not sleeping for 48 hours and almost loosing our most important team-member.Practice makes perfect.Through out bugs and make it available to the public.Great Uni Hackathon 2015Harjyot Singh\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:04 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"EasyEmail","project_tags":["twilio","sendgrid","python","javascript","chart.js","postgresql"],"project_url":"https:\/\/devpost.com\/software\/easyemail-358ym","keywords":"text,important,analysis,end,messages,emails,works,condensed,implementing,hours,go,front,environment,easyemail,developing,connected,condense,intricate,challenges,bugs"},{"level_0":1049,"hack_vector":[[0.1718444079,-0.1170644015,-0.004997394,0.0699881762,-0.0091715893,0.1702525914,0.2042408288,-0.0689420998,-0.0392335653,-0.0073332279,0.0150755486,-0.0505381897,0.1430114508,-0.0757092237,0.0418156683,0.0004048619,0.224256143,-0.0052433093,0.0665398613,0.1152811199,-0.2230686098,0.050522618,-0.0433485806,-0.0128400633,0.1454703361,-0.0229364298,-0.0359532535,-0.1932693571,-0.0258607864,-0.0842663646,0.0737129822,-0.1230074689,0.0565869063,-0.0863935947,-0.0426943749,-0.0182627831,0.1337424964,-0.1294392496,-0.0449007936,0.0106879873,0.0671560392,-0.1370380223,-0.1503792703,-0.0355117135,0.0378863476,-0.0352721997,0.0176489558,-0.062908031,-0.0223802868,-0.2135385871,-0.1184363663,0.0382858217,-0.1242365465,0.0167555362,-0.1771350354,0.1537592113,-0.1510428488,-0.0077644479,0.0224876106,-0.0639602914,-0.0512970686,0.0133453486,0.0812139735,0.0435697995,0.1185939685,0.0025971385,-0.114785403,-0.1296944469,0.009737297,0.0300224293,0.0679406002,-0.0384220816,0.0185707957,-0.1309363991,0.0116743892,-0.0999064893,0.1946022213,0.0070970254,0.0371901393,-0.1395191103,0.1205343604,0.1426791549,0.0430779457,0.1602470428,0.1274576336,0.1925398707,-0.0974450335,-0.0196983367,-0.0132818567,-0.0741977394,-0.123889111,0.0658227578,0.0769490302,-0.0224011708,0.0061651673,-0.0170069654,-0.1265981644,0.2016987056,0.0416114852,-0.0665064231]],"hackathon_name":"Great Uni Hackathon 2015","index":1049,"project_description":"ANOTHER Werewolf app... but different!We all love the Werewolf game don't we? Wouldn't it be better if it had sound effects and awesome photoshops of the MLH team?The app run on one device for the Game Master, and on as many devices as needed for the participants (at least 6-8 recommended).Integrating BrainTree, persuading Gradle to stop whining, keeping devices synced together via GCM.Speedy communication via Google Cloud Messaging and push notifications; fully-functional RoR backend; well-built Android app, the sound effects.MOOOOOOOOOOOOOOOO.Great Uni Hackathon 2015Built the Android app and much of the GCM communication system.Built the backend, including the Braintree Market integrationCreated\/designed the digital cards. Filmed and edited the video.Mark Ormesher\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 03:26 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MLHorrors","project_tags":["android","ruby","ruby-on-rails","braintree"],"project_url":"https:\/\/devpost.com\/software\/mlhorrors","keywords":"effects,app,via,sound,game,devices,works,least,keeping,integrating,inspiration,gradle,google,gcm,functional,fully,device,many,communication,cloud"},{"level_0":1050,"hack_vector":[[0.1603088677,-0.1416349709,-0.0158627424,0.0657152832,-0.0329755247,0.1564571112,0.1754172146,-0.0445985869,-0.0011113121,-0.0372294635,0.0115042673,-0.0101804966,0.1315875947,-0.0602128208,0.033580821,0.0335939042,0.238239646,0.0215053242,0.0501647405,0.1108966246,-0.2398642004,0.0116509628,-0.0315784737,-0.0398335904,0.1296106428,-0.0316407792,-0.0404093154,-0.1921974421,-0.0056232819,-0.0981813595,0.0528106131,-0.1124477759,0.0457421467,-0.0754316747,-0.0127287097,-0.0242643487,0.1183405593,-0.1402441263,-0.048628699,0.0300612561,0.0515658483,-0.1372979432,-0.1591160893,-0.0488574728,0.0139578534,-0.0558742844,0.0189553797,-0.0422256254,-0.0321045034,-0.2129942775,-0.1096052974,0.0297344923,-0.1092770323,-0.0589062683,-0.1753052026,0.1666314304,-0.1183065027,0.004659283,0.0287763868,-0.0360115208,-0.0500919446,0.0212037675,0.0578742139,0.0499686822,0.1241473332,0.0028014996,-0.1290583313,-0.1423184127,0.0258329269,0.0186459906,0.0801462084,-0.0411268137,0.0151339248,-0.1455211937,-0.0293572899,-0.1035157293,0.1892929524,0.0131945945,0.037654195,-0.1468463242,0.1088366061,0.1636865139,0.0146218976,0.175820291,0.1283014864,0.2012271285,-0.1096530631,0.0024459141,-0.0217162129,-0.0803425834,-0.1196448803,0.0884823576,0.067285262,-0.0240445789,0.0195021108,-0.0388991944,-0.1196144074,0.2130483091,0.0400481857,-0.0700399801]],"hackathon_name":"Great Uni Hackathon 2015","index":1050,"project_description":"love letters to strangersSpreading love anywhere anytime to anyone...social media apps.. you register, spread love, make new friend.. lots of them. Have fun!\nAvailable on google play: \nhttps:\/\/play.google.com\/store\/apps\/details?id=com.hack.loveFrustrated, debugging, and problem with APII'm SOLO programmer... and this will be my last HackathonPeople are nice! I meet new people...  who help share... really kind :)Make the room warmerGreat Uni Hackathon 2015An avid gamer, programmer, learner, a happy-go-luck person... with just the right amount of happiness.Agastya Silvina\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 02:23 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Love Letter","project_tags":["java","parse","android"],"project_url":"https:\/\/devpost.com\/software\/guh-manchester","keywords":null},{"level_0":1051,"hack_vector":[[0.1488325298,-0.1126445979,-0.030404985,0.0367895551,-0.022156693,0.1319435537,0.1958521754,-0.0264653638,-0.0093254689,-0.034273345,0.0081629055,-0.0492786393,0.125524655,-0.0575598851,0.0466707163,0.0262308437,0.2337418646,0.0079152109,0.0352740139,0.1365813613,-0.2457975745,0.0149932411,-0.0376281664,-0.0270113628,0.1155347452,-0.0180602483,-0.0313857347,-0.1737874299,-0.0117377825,-0.1135310754,0.0455495007,-0.1196480542,0.0430350602,-0.0776069686,-0.000897244,-0.0241758507,0.1126479432,-0.1431895494,-0.0522034951,0.0123882079,0.0398153476,-0.1340842992,-0.1572732478,-0.054444436,0.0440241359,-0.0780626982,0.0106170569,-0.056759838,-0.0239250101,-0.2121004611,-0.1262122542,0.0016220281,-0.1045921221,-0.0382785052,-0.1809428036,0.1606253982,-0.1292320639,-0.0223555937,0.0424495749,-0.0849838331,-0.0652481616,0.028283203,0.0734021291,0.047309339,0.1080766991,0.0101579521,-0.1267304122,-0.1400692314,0.0408487357,0.0255617779,0.0677182004,-0.0526229478,0.00709141,-0.1170244291,0.0002129634,-0.1334657371,0.1698681414,0.0074050087,0.0319085307,-0.1427075565,0.1078248098,0.1641864926,0.0370329097,0.1818967015,0.1136721149,0.189673245,-0.1145445481,-0.011844446,-0.0291353725,-0.0878878757,-0.1316192448,0.0686331093,0.0931000113,-0.0336982012,0.0013242393,-0.008327066,-0.1579435468,0.2189432681,0.0235405695,-0.0771563277]],"hackathon_name":"Great Uni Hackathon 2015","index":1051,"project_description":"No cash? Relax!Ticket machines require that you predict how long you will be staying in a car park for which can potentially be difficult and may lead to overpaying (bought 4 hours, only used 2) and fines (bought 2 hours, used 4).EPPA makes use of iBeacons to register when you arrive at and leave a parking lot.\nIt then calculates the amount of time you spent at the car-park, compares it to the rates and automatically charges you the correct amount as you leave.The payment is made through use of the Braintree API.\nThe user connects their PayPal account to the system which then makes use of PayPal's one-click payment, allowing them to come and go with ease.Great Uni Hackathon 2015Hamza Ghani\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 01:03 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"EPPA (Electronic Payment Parking Assistant)","project_tags":["braintree","estimote","ios","swift","objective-c","mysql"],"project_url":"https:\/\/devpost.com\/software\/electronic-payment-parking-assistant-eppa","keywords":"use,leave,car,used,makes,park,hours,paypal,payment,bought,amount,braintree,connects,fines,allowing,eppa,ease,difficult,correct,compares"},{"level_0":1052,"hack_vector":[[0.1470223665,-0.1397014558,-0.0180487316,0.0492621511,-0.0355104506,0.1365286112,0.179440856,-0.032651823,-0.0071659819,-0.045011729,0.0063166441,-0.0332273319,0.1313167065,-0.0619583428,0.0470660962,0.0288624708,0.2393411994,0.0082708951,0.0410428122,0.1385549456,-0.2492645532,0.0044126655,-0.0317554921,-0.0321875438,0.1297159493,-0.0232976284,-0.0299203619,-0.1731618941,-0.0014485455,-0.112600781,0.0362482965,-0.1155476868,0.0366713628,-0.067460835,-0.0057428088,-0.0357723683,0.1104712263,-0.1517857164,-0.0508901253,0.0143059734,0.0441402718,-0.1240805835,-0.1484827101,-0.0457796119,0.024742825,-0.0745047107,0.0227919724,-0.0398265868,-0.0291935038,-0.2122112364,-0.1151401624,0.0118643483,-0.1026624143,-0.0420747623,-0.1775054336,0.1727256477,-0.1164848357,-0.0016794216,0.0222653653,-0.0605132729,-0.0565514192,0.027872812,0.0552092306,0.0549827516,0.1109833866,0.0167152751,-0.1241908148,-0.1537293792,0.018574303,0.0196741484,0.0749298483,-0.0455412716,0.0193059556,-0.1331024766,-0.0096527794,-0.1070641503,0.1823095083,0.0109025054,0.0336128473,-0.140486598,0.1110297069,0.1693561822,0.0234283619,0.1769433022,0.1257935911,0.1933907121,-0.1203544289,-0.006642425,-0.0371423103,-0.073776722,-0.1223347187,0.0856872797,0.0909520388,-0.0270470139,0.0180588905,-0.0323162414,-0.1356313974,0.2295862287,0.0337997898,-0.0744528174]],"hackathon_name":"Great Uni Hackathon 2015","index":1052,"project_description":"Login securely (heh) to online web services through the medium of classical Arias.Passwords. Uch, what a chore to remember them all. Who can remember the 7th letter of one of our dozens of passwords, and our old pet from 10 years ago? \nRemember no more! No longer do you need to remember what city you were born in! Just hum the Aria to your favourite classical work to log yourself in! Baroque tuning supported.Using fast-fourier transforms and the magic of Javascript, we can detect the pitches you sing, and if they correspond toMy range isn't quite high enough for O Sole MioA bit of German pronunciationGreat Uni Hackathon 2015SoloistMark Larah\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 12:29 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Aria","project_tags":["javascript","jquery"],"project_url":"https:\/\/devpost.com\/software\/https-github-com-magicmark-aria","keywords":"remember,aria,passwords,years,enough,javascript,inspiration,hum,https,high,github,german,fourier,favourite,fast,dozens,letter,detect,correspond,com"},{"level_0":1053,"hack_vector":[[0.1666297168,-0.0976368189,-0.0455692634,0.0511667579,-0.0178629924,0.1400696188,0.192345202,-0.0248888731,-0.0343057364,0.0147551605,0.0127118649,-0.0866887197,0.1558845043,-0.0837938115,0.0820530653,-0.0118858684,0.1948759854,-0.0061333729,0.0471465923,0.1038964465,-0.2329237908,0.0302780252,-0.0563114211,-0.0063875038,0.1211950704,-0.0304184295,-0.0324213244,-0.1861370057,-0.0311790295,-0.0680853501,0.0805460438,-0.1251929104,0.0337915421,-0.0937700272,-0.0424787402,0.0055362233,0.1137788594,-0.1393674612,-0.062748909,0.0074225855,0.04179148,-0.1216784492,-0.1621224731,-0.0002065903,0.0641556457,-0.0476835668,0.0190247241,-0.0869852453,-0.0182461292,-0.2088557482,-0.157092154,0.0015395448,-0.1076362655,0.0193842351,-0.1916837692,0.1599996984,-0.1294429153,-0.0047288616,0.0170339998,-0.0909135938,-0.069140099,0.0260250494,0.0832136571,0.0594684891,0.1178734228,0.0015956623,-0.0922541171,-0.1079780683,0.0174071435,0.0107629234,0.071952574,-0.0368610695,0.0073290365,-0.1208708286,0.0413391851,-0.1194880605,0.2000399828,0.0081995716,0.0057353228,-0.1281178594,0.1366074085,0.1586729586,0.0729882121,0.1499050558,0.0959344506,0.2020878047,-0.078934826,-0.0261717997,-0.0009587724,-0.0854555666,-0.1338011026,0.0519809164,0.0976230353,-0.0294707119,0.01484395,-0.0027139534,-0.1434915066,0.2296155393,0.0245791934,-0.0772480369]],"hackathon_name":"Great Uni Hackathon 2015","index":1053,"project_description":"A quick and easy way to discover everything you may need about different companies; plugin + websiteWe wanted to try and handle large amounts of data, from different sources, including the Bloomerg API.We gather different data about the given company, for example: social media accounts, financial data and Twitter sentiment from Bloomberg, information from Wikipedia etc. This is done trough various apis using Flask(Python) for the backend.Updating the python version on aws... it killed everything; learning to build chrome extensions, especially POST and GET requests; front end in general ...Finding data which is not that obvious to find and using it. Making that extension work.Well, managing data, a lot about both front and back end of web development. Getting data; making chrome extensions; making pretty graphs;Integrating a way to buy stocks trough the app, uploading the extension to Google.Great Uni Hackathon 2015I made the Chrome extension and I had to deal with JavaScript, HTML and Python, which I was not very familiar with until this hackathon. Also learning how to deal with POST and GET requests was very challenging.Stiliyan Emanuilov\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 02:24 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"TreeChart","project_tags":["bloomberg","flask","python","html5","css3","javascript","vim","amazon-web-services"],"project_url":"https:\/\/devpost.com\/software\/treechart","keywords":"data,making,different,using,chrome,extension,trough,extensions,end,python,front,find,finding,flask,gather,general,example,get,everything,getting"},{"level_0":1054,"hack_vector":[[0.1231374145,-0.109376654,-0.0244867615,0.0143750794,-0.0193690397,0.1228026673,0.1955625713,-0.0161232166,0.0033899201,-0.0612980202,0.0046018651,-0.0660314932,0.1131968871,-0.0461039431,0.0360604674,0.0212532785,0.2412235439,0.0093782069,0.0245447159,0.149386093,-0.2509241402,0.0284702107,-0.0165058859,-0.0216102507,0.0930819511,-0.0207948182,-0.0214206167,-0.1647389531,-0.0255400427,-0.1330797523,0.0452984348,-0.1256555319,0.0280275624,-0.0667985156,0.018770624,-0.0558328293,0.1064880937,-0.1495319158,-0.0547856241,-0.0190788321,0.0382677838,-0.141817227,-0.1382995248,-0.0831427649,0.0681928843,-0.0891115144,0.008169665,-0.0471253097,-0.0438317247,-0.2044460475,-0.1281721145,0.0062642768,-0.0858376101,-0.0335403271,-0.2069345117,0.1605324745,-0.1137090772,-0.0699534565,0.0583063252,-0.1156935766,-0.0878337026,0.0086051375,0.0641329214,0.0119842365,0.0844721198,0.0427408516,-0.1097677574,-0.1385818422,0.0524450615,0.0495510735,0.0718587413,-0.072044313,0.0380339473,-0.102186121,0.0109539712,-0.1433724463,0.1275504529,0.0058794213,0.0224001408,-0.1226291955,0.0924406573,0.161083281,0.0212715883,0.1946383268,0.0939305872,0.1768350452,-0.125604406,-0.0472131595,-0.0556722172,-0.0746192038,-0.1318585575,0.0612481087,0.0752373114,-0.0546621084,-0.0400929637,0.0208759718,-0.1789195389,0.22959584,-0.0014295742,-0.0782208666]],"hackathon_name":"Great Uni Hackathon 2015","index":1054,"project_description":"Go back to the golden age of n64 being the owner of everything!We wanted to create an app that everybody would like to play, and what is more enjoyable than Monopoly? So we took Monopoly as our inspiration. \nAlso, we decided to use some of the most popular games of N64 as our properties because everybody loves old school video games!-Objective: To be the most wealthy player in the game by buying, selling and renting their properties. \n-Participants: 2 to 6 players. \n-Money: Each player will receive a total amount of \u00a31500\n-The bet: To be able to play the game, every player is going to be asked to set a bet of minimum \u00a35 using a Pay Pal account. The player that wins the game, will receive the total amount of money in their Pay Pal account.\nIf a player leaves earlier the game, he\/she will not lose any of their money.\n-The game: The player that creates the game (the host) is going to be always the one that starts the play. The next player to play is going to be the first one that joins the game, the third player is going to be the second one that joins the game and so on. Everybody will start the game on the corner marked \u201cGO\u201d, then you will have to tap the button \u201cRoll die\u201d to know which is going to be your next position. \nYou are allowed to buy \u201cproperties\u201d or \u201csponsors\u201d from your first go.\n-Go: Each time a player lands on or passes over \u201cGO\u201d, the bank will play him\/her \u00a320.\nBaying a property: Whenever you land on an unowned property or sponsor, you will have the   option  to buy it from the Bank in the price showed on the screen. \n-Paying rent: Whenever you land on a property\/sponsor owned by another player, the owner will  collect rent from you in accordance with the price printed on the property\u2019s card.\n-Jail: You land on \u201cJail\u201d whenever you landed on the space marked \u201cGo to Jail\u201d. When you are sent to Jail, you are not able to collect your \u00a320 salary that you usually receive from \u201cGo\u201d.\nYou get out of Jail either by (1) staying there for 3 complete turns and being free in your 4th  turn or by (2) paying \u00a350 to the bank.  If you land in Jail in the ordinary course of the game, you are \u201cjust visiting\u201d so you incur no penalty and you are free to leave in your next turn.\n-Free parking & arrows in the board: When a player lands on this places, he\/she doesn\u2019t receive  any reward of any kind. Is just a free resting place.\n-Bankruptcy: A player is declared bankrupt if he\/she owes more than he\/she can pay.Great Uni Hackathon 2015Alicia Beylan\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 03:57 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Retropolys","project_tags":["android","adobe-illustrator","trello"],"project_url":"https:\/\/devpost.com\/software\/retropolis","keywords":"player,game,go,jail,going,play,property,receive,land,free,properties,money,everybody,pay,next,whenever,bank,one,able,paying"},{"level_0":1055,"hack_vector":[[0.1713710576,-0.146513775,-0.0215791613,0.0745541826,-0.0163509659,0.1558303982,0.19729276,-0.0532067455,-0.037036214,0.0086350935,0.0134822,-0.0266994052,0.1446934193,-0.0623720624,0.0489134789,0.0027718733,0.2094642371,-0.0021478494,0.0390475914,0.112467669,-0.2372136414,0.0304065589,-0.0330318324,-0.0079959314,0.1743402183,-0.0270275045,-0.0343334898,-0.2063083649,-0.0172172971,-0.0677835569,0.089726299,-0.1272247285,0.0383608602,-0.0716895908,-0.0487420931,-0.0207670797,0.1054847687,-0.130562529,-0.0390395299,0.0158615988,0.0614187755,-0.1481046975,-0.158421725,-0.03523954,0.0242451727,-0.0223938394,0.0047654705,-0.0492028184,-0.0235235039,-0.208140105,-0.1034955978,0.0185486283,-0.1142222211,0.001814296,-0.1733473092,0.1645946652,-0.1428920329,0.0145790502,-0.0078138439,-0.0442385674,-0.0536996201,0.0246070195,0.0603074431,0.0403925404,0.1252813488,-0.0014413043,-0.1197673306,-0.1262865216,0.0267388485,0.0151949702,0.0656469911,-0.0305386987,0.0326987058,-0.1277935505,-0.0073909471,-0.0905245394,0.1878739595,0.0019878615,0.0343649238,-0.1299257874,0.1306436509,0.1515701562,0.0401416868,0.1765509099,0.1300058812,0.2198917866,-0.0961779132,-0.0010053796,-0.0090547567,-0.0648309439,-0.1169235632,0.084650889,0.0822000355,-0.0211034883,0.0168118868,-0.0313989036,-0.1175960228,0.2108997107,0.0417741686,-0.0568464436]],"hackathon_name":"Great Uni Hackathon 2015","index":1055,"project_description":"Sail and pack for hackathons around the world gameBring the spirit of hackathons to people around the world.Sail the goods, people and swag with MLP certified Hackaship around the world to Great Uni Hack. Learn about hackathon logistics and be fuel efficient.Lots. Game graphics and physics with Phaser IO. Bloomberg API integration and find the right security tickers. PayPal Braintree API integration.8-bit retro game with a modern Major League Packing (MLP) ship and goods pricing from Bloomberg.Many many things! Creating a game with Phaser framework. Using Node and Express server with Mongo DB. Integrating Bloomberg API in Node. And creating Braintree payment integration for game payment, like in the Arcade!Improve game play. Different missions. More goods to pick up. Time-dependent fuel pricing.Great Uni Hackathon 2015Maximilian Ge\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:52 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hackaship","project_tags":["javascript","html","css","bloomberg","phaser.js","node.js","express.js","mongodb","braintree","jade","photoshop"],"project_url":"https:\/\/devpost.com\/software\/great-uni-hack","keywords":"game,integration,api,bloomberg,goods,pricing,many,hack,mlp,great,node,payment,fuel,people,phaser,world,creating,uni,braintree,around"},{"level_0":1056,"hack_vector":[[0.1460112929,-0.0965729356,-0.0321090408,0.0410813652,-0.0101423534,0.1340462714,0.193015933,-0.0294297505,-0.0219255071,-0.0057461928,0.017722629,-0.08286722,0.1561991423,-0.0836999342,0.0616601259,0.0054407599,0.1904972196,-0.027801618,0.0473728366,0.1240736246,-0.2379816025,0.0353286564,-0.0470501073,0.0047704033,0.1250839829,-0.0426865593,-0.032767307,-0.1648001075,-0.0361481868,-0.0879184604,0.0754770413,-0.1131246388,0.0370509997,-0.0745869577,-0.0175252389,-0.0115290992,0.1225484908,-0.1424454898,-0.0469523147,-0.0184151214,0.0596633479,-0.1235519126,-0.1531893015,-0.0129086198,0.0730351359,-0.0374423154,0.020229198,-0.086974144,-0.0204812381,-0.2140401751,-0.1564320922,0.0234059189,-0.1108179986,0.0311646033,-0.2289201021,0.1485367268,-0.1366391033,-0.0302708,0.0377684012,-0.1106978729,-0.0725395605,0.0209432915,0.0755454227,0.0418809056,0.1117763445,0.0252558365,-0.0792996064,-0.1216189191,0.0221307296,0.0171571411,0.069337748,-0.0461477116,0.0160193052,-0.1196435317,0.0454032756,-0.104811132,0.1810896248,-0.0042803395,-0.0079828342,-0.1333787888,0.112836428,0.1623846143,0.0508916825,0.155931145,0.0986972898,0.2013178021,-0.0859122053,-0.05050423,-0.0179208331,-0.0794456229,-0.1448706388,0.058425542,0.0961565301,-0.0311351623,-0.0112626869,0.0113129662,-0.156686455,0.2338857502,0.0188503545,-0.0642572641]],"hackathon_name":"Great Uni Hackathon 2015","index":1056,"project_description":"Fun virtual betting website for groups of friendsWe wanted to provide a way for friends to bet and wager with each other informally but on a virtual platform.We created a web-application using HTML, CSS, PHP and MySQL which uses Bootstrap's responsive interface to match the screen size of any device. It works by creating an account and making a bet, where you define the parameters for the bet; i.e. real or fake currency and what the betting statement is. The bet information will be stored in the MySQL database and will by importing into a table which the user can see. The aim is for friends to be invited and bet against each other, where the bet creater acts as a referee and decides the winner(s).Our team was of 4 people, 2 front-end and 2 back-end. However, as of Saturday our team only consisted of 2 people - the front-end developers. This means we have all the pages of the site designed, with working popups and features. However, we have the functionality lacking in the website, due to the lack of back-end developers during this process. \nThis is probably the biggest challenge myself and my colleague faced, as we had to take upon a greater role of writing MySQL code, which was foreign to both of us.We were proud to produce something we visualised in our minds, to make the website look the way we want without compromise.I learned that I should know back-end technologies as much as I do front-end, so I do not have to rely on other people.We hope to finish and implement the features we had planned, which include a link to facebook and a real currency (using brain-tree)Great Uni Hackathon 2015It was my first Hackathon and I had a lot of fun using Bootstrap CSS to make the website as nice as I could!I was the second front-end developer, using Bootstrap and CSS. W elaso had to learn a bit of PHP to clean up some back-end work too.Jaz Khalsa\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 05:02 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"CronyBet","project_tags":["bootstrap","javascript","php5","html5","mysql"],"project_url":"https:\/\/devpost.com\/software\/cronybet","keywords":"end,bet,back,front,people,mysql,works,however,developers,proud,features,currency,friends,learned,way,real,team,website,using,html"},{"level_0":1057,"hack_vector":[[0.170393914,-0.1385620534,-0.0151480995,0.0750129297,-0.0298447814,0.1529685855,0.1793312281,-0.0481497459,-0.0160378255,-0.0295294113,0.0054962384,-0.0244634151,0.1499504596,-0.0593594573,0.0427443236,0.0248368215,0.2175429761,0.0069701714,0.0451313183,0.1261105239,-0.2348354459,0.0086955316,-0.0539902486,-0.0124216238,0.1540121138,-0.0330824852,-0.0477153845,-0.1714461148,-0.0167948548,-0.0921650082,0.0521779507,-0.1102521345,0.035909351,-0.0648606271,-0.0313049518,-0.0038192037,0.1309110224,-0.1367613673,-0.0459073707,0.037811894,0.0638748556,-0.1221404001,-0.1457875967,-0.0309453141,0.0107940417,-0.0687240586,0.0329448059,-0.0493716076,-0.0337012447,-0.2115673721,-0.1090980023,0.0268826857,-0.118802309,-0.0105709229,-0.1684080511,0.1707389504,-0.132325694,0.0058454117,0.0064376364,-0.0427640788,-0.060012009,0.0279750675,0.0532364771,0.0612999834,0.1255092025,-0.0022012508,-0.1283294559,-0.1475938857,-0.0034957745,0.0013415837,0.0547319576,-0.0332901999,0.0150457611,-0.1289833784,-0.0073123048,-0.0699578151,0.2183635831,-0.0004847264,0.0253975149,-0.1511520594,0.1068604961,0.1682683378,0.0175720099,0.1398036778,0.1367646605,0.2042063028,-0.109157607,-0.0039144112,-0.0109417029,-0.0752539188,-0.1190004796,0.0978225842,0.0712488368,-0.0071166879,0.0223567951,-0.0440685973,-0.120240964,0.2388028502,0.0494192168,-0.0552062094]],"hackathon_name":"Great Uni Hackathon 2015","index":1057,"project_description":"Retro Rogue-like dungeon crawler\/designerWe all like games and we all missed the thrill of the old roguelike dungeon crawlers so we said we could make it ourselvWe build it in Unity for Multiplatform Support, we had sprites done in illustrator and sounds in FLStudios.We didn't know any of the technologies we used.Learned new stuff.unitywe'll try to develop it and put it on steamGreat Uni Hackathon 2015Bleep-bloopedLovable Misfit.Brought Coffee, gave back massages.Andrei Tomeci\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:46 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Dungeon Master","project_tags":["unity"],"project_url":"https:\/\/devpost.com\/software\/dungeon-master-puju0","keywords":"unity,learned,dungeon,works,games,master,make,like,know,inspiration,illustrator,flstudios,multiplatform,done,develop,crawlers,could,challenges,build,missed"},{"level_0":1058,"hack_vector":[[0.1650664806,-0.1410886049,-0.0115631949,0.0723073035,-0.0313855857,0.1528350413,0.18805556,-0.0405689292,-0.0149167627,-0.0306588225,0.0069031683,-0.0206512213,0.1436787099,-0.0648961589,0.0371868834,0.0163085535,0.2299395204,0.0096941162,0.0497527122,0.115996711,-0.2449590564,0.0179618075,-0.0344029069,-0.0257312376,0.137915343,-0.027899297,-0.0380528122,-0.1780300885,-0.0099327089,-0.0989330485,0.0494088307,-0.1119403914,0.0442322902,-0.0700032264,-0.0208944418,-0.0258003436,0.1264475584,-0.1434256583,-0.0564018637,0.0235287827,0.061807055,-0.132310763,-0.1513851434,-0.0423736945,0.0228138342,-0.0476107858,0.0180749893,-0.0524445064,-0.0245708488,-0.2018046677,-0.1129655018,0.0230326075,-0.1174671873,-0.0292653963,-0.1806828082,0.1559334248,-0.133808434,-0.0042386106,0.0254933611,-0.0501452796,-0.0571267642,0.0254691429,0.0706695169,0.0395771451,0.1189723164,0.0059476667,-0.127445668,-0.1433577687,0.0158704259,0.0280780494,0.0649516433,-0.0401562974,0.0159007739,-0.1372926384,-0.0187240206,-0.1090413257,0.1888185889,0.0118693719,0.0305329598,-0.1421951801,0.1135420799,0.1639830768,0.0228455625,0.1677511185,0.1298691183,0.200864315,-0.1047420651,0.0069831265,-0.0245756451,-0.0805649757,-0.115461722,0.0883178338,0.0705748573,-0.0211588629,0.0216755681,-0.0342771374,-0.1332882196,0.2233485878,0.0463954285,-0.0569552146]],"hackathon_name":"Great Uni Hackathon 2015","index":1058,"project_description":"Do you know more than Mr Duck ?!?!Stock market prices shouldn't be boring.MrDuck shows you the past values of a chosen index and you have to determine if its going to increase or decrease on the next tick. Desktop application uses Java and Swing. The hardware feedback is provided by an Arduino and other salvaged hardware.Hardware setup and concept changed midway because of laser failure.Making a controlled shocked device.Lots of useful hardware experience and the ability to improvise with limited resources.Maybe make it a complete trading trainer...Great Uni Hackathon 2015Ducky Duckston\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:52 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MrDuck","project_tags":["java","c++","arduino","bloomberg","servo"],"project_url":"https:\/\/devpost.com\/software\/mrduck","keywords":"hardware,mrduck,next,works,laser,inspiration,index,increase,improvise,going,feedback,failure,experience,device,determine,desktop,decrease,controlled,concept,complete"},{"level_0":1059,"hack_vector":[[0.1881447136,-0.1279492676,-0.0144820185,0.0571084321,-0.0154920015,0.1524650455,0.20707573,-0.0514136963,-0.0452073477,0.0208182391,0.0120827788,-0.0416271016,0.1455672979,-0.0613474026,0.0602208078,0.0048634005,0.2117435336,-0.0006037671,0.0548309572,0.1139471009,-0.2386986464,0.0217999313,-0.0515166149,-0.0065742475,0.1610420495,-0.0295497347,-0.0352826752,-0.1953179389,-0.0104696415,-0.0817984492,0.0917507261,-0.1222365275,0.0368168503,-0.0834232792,-0.0379354358,-0.0062328125,0.1079483554,-0.130297333,-0.0384468623,0.0126111228,0.059553396,-0.1405682117,-0.1599190384,-0.0297319442,0.0292836167,-0.0447072461,0.0030827736,-0.0674567819,-0.0123368064,-0.2068475336,-0.098897256,0.00898581,-0.1223480701,0.0033971625,-0.1777003258,0.1669670641,-0.1640488356,0.0154362712,0.0018217877,-0.0496111549,-0.042234879,0.0303139109,0.0709556639,0.0540362597,0.1257510185,-0.0116884075,-0.1233780533,-0.1294090748,0.0242623109,0.0120171933,0.0675256699,-0.0259537511,0.0145714786,-0.1247952878,-0.0031407007,-0.1135256961,0.1966824681,0.0078281704,0.0382711738,-0.1328422874,0.1198189482,0.1395827383,0.0458390042,0.1550878584,0.1315100789,0.2149270475,-0.0989427418,0.0031345445,-0.0075728102,-0.0757606626,-0.1118775755,0.0790495947,0.0858297274,-0.0201843474,0.0092713982,-0.0170796309,-0.1149985641,0.1913146824,0.0354298092,-0.0565808676]],"hackathon_name":"Great Uni Hackathon 2015","index":1059,"project_description":"Procrastination at it's bestThe desire for appealing visuals.Using leap motion, take the roll, pitch, yaw and height of a hand, then use these to choose the colours of strings and output them as you manipulate them.New language and new hardware.Overcame the challenges.I learned about node.js, and programming with leap motion.Look into visual representation of more meaningful data, such as data from muse headsets and using leap motion for other things, such as game controllers.Great Uni Hackathon 2015Kerri Knier\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:48 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"NodeShite","project_tags":["leap-motion"],"project_url":"https:\/\/devpost.com\/software\/nodeshite","keywords":"motion,leap,challenges,using,new,learned,data,headsets,look,language,js,inspiration,height,hand,hardware,meaningful,game,desire,controllers,colours"},{"level_0":1060,"hack_vector":[[0.1674737036,-0.1701552272,0.003552831,0.0927986056,-0.0399737991,0.1630412489,0.1546934098,-0.0497526601,-0.0230195224,-0.0175353512,-0.0135081494,0.0357874446,0.1273566335,-0.0834049657,-0.0035936453,0.0772480592,0.2489322573,0.0308269225,0.0555452593,0.0750439242,-0.2043148875,-0.0054135993,-0.0410571694,-0.0575071052,0.1879473031,-0.0307898968,-0.0676044077,-0.185889557,0.0397559777,-0.0772580355,0.026246924,-0.0981410295,0.0815260634,-0.0549086519,-0.0509897433,0.012975893,0.137743175,-0.1233659983,0.0037345989,0.0942367539,0.0561848693,-0.1352138668,-0.1762688607,-0.0298232958,-0.0471247137,-0.0408735648,0.0525784492,-0.0009569883,-0.0163822006,-0.1862873882,-0.0383862294,0.0346062668,-0.1182999015,-0.0666216314,-0.0993923843,0.1506060809,-0.1428314298,0.0720419362,-0.0200040545,0.062082123,-0.0155234179,0.0327802561,0.0387600474,0.0793616623,0.1448054165,-0.0509897135,-0.1381251365,-0.1637807339,0.0028486378,-0.0043101539,0.0779928565,-0.0306823459,-0.0091699893,-0.1550852209,-0.0668400228,-0.0546128266,0.1998381317,0.0327685028,0.0917444825,-0.1412648708,0.1136432812,0.1585708857,-0.0072865798,0.1419184059,0.1520414203,0.1582921147,-0.1296354979,0.0849325508,0.0003306925,-0.105405204,-0.0674532503,0.1159997061,0.0129227303,0.0310700834,0.0886979401,-0.099818565,-0.0490946025,0.1403635591,0.1168192178,-0.0414662361]],"hackathon_name":"Great Uni Hackathon 2015","index":1060,"project_description":"Spotify etc. etc.    ||    trendify.tkall about them graphsbigger tile = more popular track>>>>    trendify.tk    <<<<Great Uni Hackathon 2015Back-end devMatt Dean\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:29 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Trendify","project_tags":["javascript","html5","css3","python","json"],"project_url":"https:\/\/devpost.com\/software\/trendify","keywords":"trendify,track,tk,tile,popular,graphs,bigger"},{"level_0":1061,"hack_vector":[[0.1623272598,-0.1557922363,0.0079564461,0.1017400399,-0.0473598428,0.1608141214,0.1687916517,-0.0554895066,-0.0322835706,-0.0277761724,-0.0142727168,0.054250706,0.1250888705,-0.072425589,-0.0026704131,0.0711678639,0.2491548806,0.0334208496,0.0529627725,0.0884871036,-0.1891680956,-0.0025921692,-0.0378082283,-0.0650501028,0.18708013,-0.0135877011,-0.0676858723,-0.1824597716,0.0342731439,-0.0708167851,0.0199769754,-0.0943292081,0.0824324191,-0.0444629304,-0.039324265,0.016935844,0.1421316415,-0.1045138538,0.0048355623,0.1086034253,0.0649284944,-0.1461467743,-0.1749975085,-0.0370542482,-0.0618661121,-0.0449949838,0.0441363379,-0.0043111132,-0.0145580638,-0.182929948,-0.0184722301,0.0302416049,-0.1118046343,-0.0697917715,-0.0886348709,0.1522107124,-0.1547391415,0.0814088359,-0.0245492142,0.0640055388,-0.0085343793,0.0358184651,0.0389313102,0.0701304227,0.1543236375,-0.0545665696,-0.1487865597,-0.1697867811,0.0118631199,-0.0023057486,0.0655165613,-0.0258642342,-0.0231122058,-0.1499573439,-0.0762708336,-0.0525661148,0.1950847656,0.02703836,0.0970897302,-0.1459753513,0.1029304042,0.1537490636,0.0046891063,0.1385511011,0.1544871628,0.1562617272,-0.1376716048,0.0897121429,0.0140555045,-0.1138002127,-0.076420553,0.1131149158,0.0208167769,0.0366377123,0.086251393,-0.1047339514,-0.0540978089,0.1336618513,0.1129858345,-0.0309773274]],"hackathon_name":"Great Uni Hackathon 2015","index":1061,"project_description":"LYrecks - Using IBM Watson to understand Celeb Relationships through Music Lyrics..Great Uni Hackathon 2015Shlomie Liberow\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:32 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"LyRecks","project_tags":["node.js","import.io","selenium","jade","ibm-watson"],"project_url":"https:\/\/devpost.com\/software\/lyrecks","keywords":"works,ran,proud,next,lyrecks,learned,inspiration,challenges,accomplishments"},{"level_0":1062,"hack_vector":[[0.1556779742,-0.1251425892,-0.0223290958,0.0473510697,-0.0214903895,0.1486193687,0.2000785619,-0.0406644754,-0.0102798985,-0.0380562618,0.0014160984,-0.0369599722,0.1265368909,-0.0669487566,0.0382240638,0.007689287,0.2124234587,-0.0047874483,0.0510043837,0.1148365289,-0.2426727265,0.019018447,-0.0327332206,-0.0215533506,0.1233768985,-0.0263141673,-0.0283023044,-0.1582630277,-0.0218909029,-0.1063686237,0.0431732647,-0.1203799695,0.0459714159,-0.0643894002,-0.0217833165,-0.0343987085,0.1328469068,-0.1492649913,-0.0574529879,0.0162481815,0.0694632679,-0.1265289038,-0.141059652,-0.0517649055,0.0459664986,-0.0653240308,0.022769833,-0.0606071129,-0.0346297584,-0.2081217766,-0.1294190735,0.024752276,-0.1122485325,-0.0079131834,-0.1981166899,0.1521399766,-0.1410815269,-0.0335746184,0.0297027603,-0.0719830692,-0.0688291863,0.0080862921,0.0693375543,0.0226346515,0.1217594296,0.0116184792,-0.1215003282,-0.1331607848,0.0245817956,0.0468554758,0.0676652268,-0.0559650436,0.0094003687,-0.1365676969,0.0067220903,-0.1144735366,0.1759309173,0.0240532774,0.0147564951,-0.1456143409,0.1051233411,0.1611197889,0.0230374262,0.1795852631,0.1189678535,0.196084708,-0.1101423055,-0.0091068326,-0.0259459261,-0.0816867277,-0.1335388422,0.0783973783,0.0846347138,-0.0300157219,-0.0071526859,-0.0142661752,-0.1482110918,0.232161507,0.0288716517,-0.0570478141]],"hackathon_name":"Great Uni Hackathon 2015","index":1062,"project_description":"A sub-40 \u00a3  smartwatch . Yes, i am looking at you, AppleWe are technology students and therefore we always want to have the latest gadgets but at the same time we are poor...It is a fully functional smartwatch powered by a teensy 3.1 that can act as a standalone watch or, if connected to an android phone, it will also mirror the notifications and give you the ability to control your music. It even has a built in speaker and automatic lighting.The chinese clone of the Nokia 3310 screen did not have the adequate libraries or documentation. Also arduino's serial communications is not made for long stringsIt works!!!!code that is ugly but works is twice better than the most beautifully engineered code that does not workGive it a 3D printed case and a suitable battery to be a true smartwatchTeensy 3.1: 18\u00a3\nNokia 3310 screen module: 5\u00a3\nBluetooth hc06 module: 6\u00a3\nAssorted components: 3\u00a3\nFuture battery and 3D printed case 4\u00a3Great Uni Hackathon 2015Daniel Lopez Madrid\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:29 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Clu Watch","project_tags":["arduino"],"project_url":"https:\/\/devpost.com\/software\/pea-watch","keywords":"works,battery,module,code,nokia,case,printed,screen,smartwatch,give,teensy,also,watch,arduino,act,functional,fully,even,engineered,documentation"},{"level_0":1063,"hack_vector":[[0.1538444608,-0.1360747814,-0.0000607377,0.1004953459,-0.0435580276,0.1673893332,0.1881522387,-0.0664658621,-0.0330559202,-0.0150116887,-0.0116469413,0.0331702977,0.1307730973,-0.0784899741,-0.001929329,0.0638414398,0.2561352551,0.0225424301,0.0559763871,0.1026304215,-0.202688098,0.0141169494,-0.041911725,-0.0502981655,0.1843564212,-0.0093679093,-0.077567637,-0.1885795444,0.0302659795,-0.0680550113,0.038147632,-0.1055358872,0.0784960091,-0.0499436408,-0.0429720208,0.0148502486,0.1440167874,-0.1040329412,0.0053955675,0.091613628,0.0649843365,-0.1589267105,-0.1801064312,-0.0416891836,-0.0420527421,-0.0381083898,0.02388875,-0.0181306265,-0.0142114675,-0.1887063831,-0.0407656282,0.0402748585,-0.1108556911,-0.0443886369,-0.11342711,0.1428417712,-0.1640303284,0.0645426363,-0.0271224584,0.0385853909,-0.0144696506,0.0358335897,0.0577047467,0.0671520755,0.150049746,-0.0507029705,-0.1302381456,-0.1668380648,0.0228307489,0.0117095252,0.0629145354,-0.0290531106,-0.0098875845,-0.1438236982,-0.0624046735,-0.0571347997,0.19476147,0.0232554507,0.0761860311,-0.1477823108,0.1104976758,0.1469491124,0.0254332107,0.1466498524,0.1449832916,0.1772184074,-0.1333059072,0.0587393194,0.0108750723,-0.1068313345,-0.0901953131,0.0979349315,0.0381127,0.03249925,0.075154148,-0.0735115632,-0.0677998215,0.1516992748,0.1006061956,-0.0405869894]],"hackathon_name":"Great Uni Hackathon 2015","index":1063,"project_description":"Wireless video streaming in a mobile with OpenVCVideo processing in mobile phone with two camera webs connected with TCP socket.Great Uni Hackathon 2015Marc Garnica\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:29 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"WiEye","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/wieye","keywords":"works,phone,camera,challenges,connected,inspiration,learned,mobile,next,processing,wieye,proud,ran,socket,tcp,two,video,webs,accomplishments"},{"level_0":1064,"hack_vector":[[0.1492053717,-0.0998697877,-0.0267829467,0.050831832,-0.0166458432,0.1310008019,0.2013352364,-0.0372576155,-0.0311503727,0.0020474063,0.0195449945,-0.0612704121,0.1476702541,-0.0766755566,0.0662287995,-0.0118801454,0.2090584785,-0.0120965913,0.0486718602,0.1313491166,-0.2458649129,0.0397095978,-0.0408365615,-0.008668079,0.1234290451,-0.0237868894,-0.03258086,-0.1878887713,-0.0194293428,-0.0842756853,0.0691315681,-0.1312674284,0.0333219394,-0.0859413445,-0.0205696058,-0.0206473153,0.1184381992,-0.1426546723,-0.0613503903,-0.005806278,0.0471056029,-0.1403979808,-0.1519623101,-0.0271610115,0.0570262298,-0.0371154994,0.0054857018,-0.0907972902,-0.020458309,-0.205469951,-0.1427316368,0.0194834284,-0.1085585803,0.0142464321,-0.2004864067,0.1596090943,-0.1324425191,-0.0124539509,0.0202499833,-0.0984353349,-0.0594650209,0.0190315731,0.0846510306,0.0502994694,0.113122426,0.0130451731,-0.0928797126,-0.1179677323,0.0315506384,0.0251794439,0.071445711,-0.0442822538,0.0255371407,-0.1257709414,0.0350975171,-0.1214973927,0.1761604548,-0.0003163808,0.0077719749,-0.128755793,0.1312607378,0.150960207,0.0728287175,0.1614116132,0.1020514444,0.2009789199,-0.0919868276,-0.0476834178,-0.0135422256,-0.0697015896,-0.1437859088,0.0510260575,0.103914395,-0.0387629345,-0.0000409103,0.0023259104,-0.1475768536,0.2138031125,0.0112190489,-0.0689718202]],"hackathon_name":"Great Uni Hackathon 2015","index":1064,"project_description":"Python based party jukeboxTerrible experiences of host-picked playlists at student parties. PyPly aims to democratise music selections at all parties, large and small.Twilio SMS talks to a Flask endpoint, passing received text messages on to a Python server running on LayerShift's Jelastic platform. These control SMS messages manipulate playlists stored in MariaDB, and pass messages onto a client application via a Redis based queue. This client application is what sits on the party hosts laptop - responsible for organising and playing back the top rated tracks via Spotify. Trello-based playlist display and Twilio based song preview mechanisms also interact with the server side component.Last minute changes to communications libraries (a switch from 0MQ to Redis with 6 hours to go!). Initial trouble with LayerShift platform, and the various APIs\/technologies (most notably OAuth troubles, and an extremely basic Spotify desktop API) - many of which were completely new to the team. All this along with the usual sleep deprivation made for an 'interesting' 36 hours!I feel very proud of the feature set we were able to put together in the time period, especially given the difficulties we faced. The breadth, and non-standard use of the APIs we chose presented an impressive challenge - and we are very pleased with our performance.Importance of focussing on core features, before branching out into 'stretch goals'. Coordination of individual work, to prevent overlap.Cleanup of code base prior to hopeful release as open source project. Hopefully has a bright future at student parties for many years to come!Great Uni Hackathon 2015George Vanburgh\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:25 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"PyPly","project_tags":["flask","python","redis","applescript","trello","spotify","twilio","echo-nest","facebook","facebook-graph"],"project_url":"https:\/\/devpost.com\/software\/pyply","keywords":"parties,messages,based,hours,server,proud,playlists,redis,client,spotify,application,student,apis,sms,twilio,layershift,pyply,via,many,platform"},{"level_0":1065,"hack_vector":[[0.1773188412,-0.1552882642,-0.0186363757,0.0801978409,-0.0344633944,0.1467444748,0.185800761,-0.0477568991,-0.0211849101,-0.0111237438,-0.0035894804,0.0005569616,0.1462723762,-0.05963118,0.0327114761,0.0276449528,0.2266150117,0.0187655631,0.0461996645,0.108176358,-0.2367801964,0.0083017768,-0.0438989699,-0.0326196402,0.1701268107,-0.024162665,-0.055767443,-0.1873113811,0.0174891092,-0.0919857174,0.058336895,-0.1081848443,0.0490697473,-0.0741806924,-0.0263407584,-0.001912432,0.1293227226,-0.1400066167,-0.0397141464,0.0508070253,0.0543120429,-0.1393027157,-0.1502227336,-0.0293296948,-0.0092710461,-0.0491150133,0.0291642454,-0.0434425771,-0.0245045759,-0.1911699027,-0.0876483843,0.0237406138,-0.1207586005,-0.0339661203,-0.1350120455,0.1706608087,-0.1348041296,0.0342698544,0.0013818307,-0.0098743876,-0.0443375595,0.0372376591,0.0512248799,0.0713965148,0.1351398975,-0.0148443412,-0.1466852278,-0.1456424594,0.0029744406,0.0055558821,0.0726768672,-0.031304881,0.012476719,-0.1533097625,-0.0321690366,-0.0901407152,0.2100447863,0.0113411676,0.0567361601,-0.1499464959,0.1134117693,0.1572055221,0.022307964,0.1401769668,0.1421976089,0.1945526302,-0.1210105196,0.0292496234,-0.0094585968,-0.0859617591,-0.1026960239,0.1077179462,0.0614729188,0.0033945099,0.0550572053,-0.0529183112,-0.1031529084,0.1960832775,0.0561622716,-0.0481756218]],"hackathon_name":"Great Uni Hackathon 2015","index":1065,"project_description":"We can send e-mails using SendGrid API without mouse(using LeapMotion).We can receive e-mails and display.We use JavaSome random inspiration.Some random things.Some random challanges.Many random...A lot of random thingsMaybe some random improvements..Great Uni Hackathon 2015Erkan Redzheb\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:28 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Random Project","project_tags":["java","leap-motion","sendgrid"],"project_url":"https:\/\/devpost.com\/software\/random-project","keywords":"random,things,inspiration,works,ran,proud,project,next,maybe,many,lot,learned,improvements,challenges,challanges,accomplishments"},{"level_0":1066,"hack_vector":[[0.1474191248,-0.1038409621,-0.0147337634,0.0576299392,-0.0254669338,0.1331203878,0.1972882599,-0.0256381445,-0.0365055911,-0.0287580285,0.0172132291,-0.0527509861,0.1475988328,-0.0732598528,0.0505608208,0.0016764426,0.2090358138,-0.0190721769,0.0569979027,0.1348398179,-0.2421403378,0.0216845516,-0.0403360464,-0.0096857501,0.1257661134,-0.035729263,-0.0388587937,-0.1697995067,-0.0221999176,-0.0959198102,0.054612156,-0.098667793,0.0329357125,-0.0622780584,-0.0112543572,-0.0186422598,0.127903387,-0.1375338137,-0.0554743297,0.0083694924,0.0664822832,-0.1209985688,-0.1468616128,-0.0284968466,0.0512875393,-0.0558507778,0.0186827965,-0.0798193291,-0.0041291015,-0.2133888453,-0.1274585277,0.029180618,-0.1132561564,0.0161629133,-0.2139896899,0.1640730351,-0.1434822679,-0.013865252,0.0339523032,-0.0970763639,-0.0644757003,0.0237796232,0.0697904751,0.0464000851,0.1307066232,0.025536431,-0.0985348523,-0.1406471729,0.016566854,0.0194504205,0.0631046891,-0.0393562019,0.0063819415,-0.1251900494,0.0255970508,-0.107215941,0.1806176603,-0.0027139368,0.0156293102,-0.1353221387,0.1050051823,0.1506813914,0.0418591984,0.1531160325,0.1215259135,0.202199623,-0.0995680839,-0.0421258733,-0.0344507694,-0.0772521198,-0.1457015872,0.0699701384,0.0904005989,-0.034719985,-0.0098730745,-0.0034229206,-0.1590787917,0.2340602726,0.026918998,-0.0570354089]],"hackathon_name":"Great Uni Hackathon 2015","index":1066,"project_description":"Ctrl + Alt + DroneWe were all keen to work on drones and to control its movement with hand gestures. The android app was a way to utilize our skills to meet our objectives.The shaking of the android device fires up the drone. Thereon, the device works as a joystick to control the movement and the elevation of the drone can be changed using the buttons on the application screen.The drone was hard to work with mainly because after an hour and a half of charging it, the battery only lasted for less than 8 minutes. This meant that we could only test it a limited number of times, and had to be certain of our code. We couldnt afford to make careless mistakes.We are proud of how we have managed to control the drone. When we started working on it, the drones movements were unpredictable to say the least.We learned to program without having the luxury to test as you please. In addition to this, we polished our understanding of android development.Maybe more polishing and open source distribution.Great Uni Hackathon 2015Kerri Knier\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:26 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"DroneControl","project_tags":["android-studio"],"project_url":"https:\/\/devpost.com\/software\/burrito","keywords":"drone,android,control,works,test,movement,drones,device,proud,learned,work,buttons,burrito,lasted,keen,joystick,inspiration,hour,hard,hand"},{"level_0":1067,"hack_vector":[[0.1467809528,-0.1117869765,-0.0325384885,0.0288027804,-0.011183707,0.1260142326,0.1923837662,-0.0233760159,-0.0225583445,-0.0175741035,0.0131676244,-0.0845858306,0.1447890699,-0.0798937902,0.0581655614,0.00582312,0.2012534887,-0.0214498807,0.0417292342,0.1272888631,-0.2483982444,0.0307220649,-0.040125642,-0.0100091882,0.1123510078,-0.0369981602,-0.0328638628,-0.1575423628,-0.0191544052,-0.0966737643,0.0577011965,-0.1178898066,0.0305062197,-0.0763631016,-0.0130280368,-0.0350355953,0.1156631634,-0.1578960121,-0.0608717278,-0.0212783255,0.0524683185,-0.1222848445,-0.1524937898,-0.0241098143,0.0781204328,-0.0458209701,0.0143618975,-0.0818254948,-0.0190805122,-0.2023560256,-0.1594423205,0.0213717408,-0.1071648076,0.0152600287,-0.2188047171,0.1639332175,-0.1193273142,-0.0324687734,0.0367763378,-0.115197897,-0.0745864138,0.0206635483,0.0813548788,0.0505734943,0.1070146561,0.0305936243,-0.090432398,-0.1207451522,0.0227083918,0.0353244841,0.0810565352,-0.0447520539,0.0216395892,-0.12392281,0.0344416127,-0.1211708635,0.1670814157,0.0051469221,-0.0100861099,-0.1194621921,0.1201467216,0.1578782648,0.0471103936,0.1613915265,0.0963066667,0.1948910654,-0.0921979621,-0.0580597594,-0.0324020945,-0.0693127513,-0.1418293417,0.0537246354,0.1029273793,-0.0454311706,-0.0040852665,0.0079355408,-0.1600004137,0.2395609617,0.0066800322,-0.0679389909]],"hackathon_name":"Great Uni Hackathon 2015","index":1067,"project_description":"The thrill of unknown; Item bucket auction with a flavour of luck; Unexpected prizes; Big risks, huge earnings;The Inspiration came from our desire of creating an e-commerce platform from which people can buy items, enhance their ability of taking risks and maybe have some fun.The platform is based on an auction system. There are a number of 5 to 10 auctions a day during which Buckets of goods are bought. Out of a bucket you have details(description and photo) of only three of these the rest of them are unknow items or maybe the BIG DEAL! The Big Deal is announced in the morning but no one knows in which of the buckets it is.One of the challenges that we run into was to estamblish the paypal payment system. Another problem was to think about a system that is not too risky and makes people want to bid even if there is a chance of losing money. This is why our current version is not the one that we started with.With out current version even if people lose money they always get something out of their trade.We are proud that we managed to create a easy to use platform with a straight forward design.I learned what is the main process of developing a paypal payment system, how to estamblish a layershift server, how to work on git different branches without affecting the master branch, what bloomberg is and how to play warewolf.We are thinking of going further with the development, build dynamic auction rooms, implement esential features, think about who could provide the goods that are used (external vendors or find finances to buy our own goods).P.S.: Our application is using the LayerShift and Brain-Tree services.Great Uni Hackathon 2015I have worked both on the front-end and the back-end with special focus on JavaScript, jQuery and Ajax.I have developed part of the  back-end of the project in PHP as the login, logout, sessions and other various features related to the back-end.Back-end Developer, Front-end Developer.deleted deleted\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:18 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"TradeIt","project_tags":["javascript","php","braintree","css","html","mysql","google"],"project_url":"https:\/\/devpost.com\/software\/tradeit","keywords":"system,one,goods,platform,people,payment,challenges,current,deal,paypal,inspiration,buckets,money,maybe,learned,layershift,items,estamblish,even,buy"},{"level_0":1068,"hack_vector":[[0.1931676269,-0.1252127737,-0.0391026586,0.0574240088,-0.0327561311,0.1499458551,0.1751229465,-0.0358223915,0.0079793669,-0.0560443811,-0.0086424612,-0.029584635,0.1287503541,-0.0548929535,0.0351604819,0.024329856,0.2106701434,0.0329288691,0.028109381,0.1362627298,-0.241000846,-0.017686801,-0.0418010317,-0.0249177907,0.1228151768,-0.0298908725,-0.0411932282,-0.159464702,-0.0298731178,-0.1196961775,0.0250611324,-0.108404845,0.0469802693,-0.0564863719,0.0009607999,-0.0230511334,0.1274365783,-0.1500694156,-0.0664717779,0.0509124957,0.0719422102,-0.1132393405,-0.1469713748,-0.0396490283,0.0239025261,-0.0869961008,0.0428877622,-0.0486690961,-0.0581266358,-0.2174887508,-0.1332716644,0.0172576681,-0.1092494875,-0.0456365384,-0.1769373715,0.1769921333,-0.1033740044,-0.0058548264,0.0216876622,-0.0467756204,-0.0717548653,0.0084786257,0.0403416902,0.0311409794,0.1215322763,0.0115176728,-0.1409983635,-0.1253203005,0.0078261383,0.0187690631,0.0626571774,-0.0396335647,-0.0068376218,-0.1377153844,0.0054437309,-0.0861930028,0.1893045306,0.0152042136,0.0050604921,-0.1436968595,0.0866764411,0.1812768728,0.0056363512,0.1550846249,0.1209808066,0.1994876266,-0.096072726,0.0025269217,-0.0190655328,-0.0838947073,-0.1164560989,0.09260232,0.0665511563,-0.0197488293,0.0025243596,-0.0405988321,-0.1392387748,0.2570342124,0.0291893296,-0.054303132]],"hackathon_name":"Great Uni Hackathon 2015","index":1068,"project_description":"I was just thinking about you!When I was little, I was told you get hiccups because someone is thinking about you. Turns out - not true. However, we decided to make it possible. No, not hiccups, we let you know when we have been thinking about you.We use Muse headband and three different phone owners to send individual yo's. Yes, it's like magic.Great Uni Hackathon 2015Keit Kollo\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:04 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hiccups","project_tags":["yo","javascript"],"project_url":"https:\/\/devpost.com\/software\/hiccups","keywords":"hiccups,thinking,yo,make,different,get,headband,however,individual,know,let,like,little,magic,muse,yes,owners,phone,possible,send"},{"level_0":1069,"hack_vector":[[0.1656417847,-0.1289745122,-0.0310105905,0.0654404908,-0.0279617384,0.1552559435,0.1950212568,-0.0381335877,-0.0236330628,-0.0234149322,0.0090210019,-0.0416098833,0.138676852,-0.0604386032,0.0499304235,0.0144581366,0.2236476243,-0.0035871963,0.045491837,0.1060501933,-0.2396904528,0.0227267146,-0.0337355621,-0.0181375928,0.1261389852,-0.026046047,-0.0374374017,-0.1714797914,-0.0189224593,-0.0873344317,0.0685042366,-0.1065703183,0.0392303579,-0.0749039203,-0.0382592194,-0.0073228111,0.1274625361,-0.1363804191,-0.0503070168,0.0283879302,0.0510174222,-0.1225548908,-0.1552284658,-0.0309791584,0.0396201573,-0.0655970052,0.0150558455,-0.0591765121,-0.0160603821,-0.2237169147,-0.1148923934,0.0153215742,-0.1070839316,-0.0161528848,-0.1762884706,0.1507136971,-0.1395461708,-0.0080051199,0.0280922335,-0.0579024926,-0.068194069,0.0355050266,0.0747357458,0.0475956686,0.1228510588,-0.0043665804,-0.1246227399,-0.1314466745,0.0221484359,0.0236841757,0.0622361638,-0.0322300158,0.009519984,-0.1305760741,-0.0207062811,-0.1138687283,0.201980114,0.0115376338,0.0373746417,-0.1469141245,0.1177317426,0.161485374,0.0202250592,0.1680844128,0.1244590208,0.1950385869,-0.1079751328,-0.0044334759,-0.0236878973,-0.0992101803,-0.1332549751,0.0807442889,0.0770507157,-0.0260883085,0.0229081381,-0.0095088286,-0.1309338808,0.2252374291,0.0450504124,-0.0616653785]],"hackathon_name":"Great Uni Hackathon 2015","index":1069,"project_description":"\"What else would you do?\"Mostly just figured that it wouldn't be hard to make a guitar hero esq application for androidit plays media from the android device and visualizes the data in a lower quality so that a sound wave can be created and can be trackedaligning the screen for multiple devicesfinishing the projectI learned a lot about Android dev and exactly how to use activities well and a good deal about the pros and cons of pair programmingHuge buttons, and generating \"maps \" for pre generationGreat Uni Hackathon 2015Liam Pringle\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:19 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"LineTracer","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/linetracer","keywords":"android,learned,devices,hero,hard,guitar,good,generation,generating,finishing,figured,exactly,esq,device,inspiration,dev,deal,data,created,cons"},{"level_0":1070,"hack_vector":[[0.1391975582,-0.129065454,-0.0251717083,0.0490379781,-0.0276346225,0.1330215037,0.1991969794,-0.027737353,-0.0195918586,-0.0460510142,0.0089211985,-0.0237057768,0.1285369098,-0.0636823997,0.0356410258,0.0205656961,0.2420747131,0.0064778281,0.043117363,0.1376904845,-0.2449812442,0.0178120807,-0.0216663014,-0.0220537018,0.1386407763,-0.0224122703,-0.0378349051,-0.1802676469,-0.0104768276,-0.1056253612,0.0511976145,-0.1227199063,0.0345651582,-0.056952741,0.0034016073,-0.0317936353,0.1181653142,-0.137223199,-0.0433618091,0.0150600607,0.0584197082,-0.1536620259,-0.1615768224,-0.0599342659,0.0301465522,-0.0633360893,0.0175023805,-0.0451718122,-0.027114192,-0.2085063607,-0.1006734818,0.0181887336,-0.0977177396,-0.0338440053,-0.2066891789,0.1674250811,-0.139437899,-0.0158027597,0.0354120955,-0.0710825846,-0.0608331785,0.0276572481,0.0555755757,0.0306098592,0.1154807582,0.0229194779,-0.1194584146,-0.1472542882,0.0398566909,0.0244066063,0.0715079829,-0.0508907959,0.0238600615,-0.1221104786,-0.0019253225,-0.1146375835,0.1553777158,-0.0031951691,0.041129183,-0.1325140744,0.0993997902,0.1604080051,0.0257647932,0.1887825429,0.1171074137,0.192175135,-0.1322916895,-0.0126784286,-0.0356107689,-0.0817283168,-0.1157568023,0.0841835365,0.0716414899,-0.0263206847,0.0007086254,-0.0132233314,-0.1524142772,0.2104896009,0.0315512158,-0.0580657423]],"hackathon_name":"Great Uni Hackathon 2015","index":1070,"project_description":"Your green, your a square and your in a maze.There wasn't any inspiration, we just wanted to have fun and make a game\nTeam of 3 - Josh Dawes, Arjun Mistry, Hugh WilliamsThe game starts you at an entrance, with the aim to collect keycards to safetly exit the maze at the exit point. The player can collect battery packs which they can use to later buy perks.This was originally going to be a multiplayer game, where each player explores the map, gets their keycard then progresses to the next stage, however, due to having to keep track of movable objects we were unable to complete this task.Random map generation and World Map\/ Fog of War system.Multiplayer ;)Great Uni Hackathon 2015Arjun Mistry\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:21 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Get Out Of Here","project_tags":["java","javascript","php","css3","html5"],"project_url":"https:\/\/devpost.com\/software\/get-out-of-here-cx7lo","keywords":"game,map,collect,player,exit,next,multiplayer,inspiration,generation,josh,hugh,however,keep,going,gets,keycard,get,world,later,fun"},{"level_0":1071,"hack_vector":[[0.1554844975,-0.1096359268,-0.0290975813,0.0494979993,-0.012538407,0.1293325126,0.2070692778,-0.0253268313,-0.0309502296,-0.0116340481,0.0179549195,-0.055040244,0.1493020356,-0.062336497,0.0568490513,-0.0124279419,0.2031295002,-0.0200833641,0.0400970839,0.139808625,-0.2499601245,0.0223676059,-0.0354954302,0.0074181631,0.1410570294,-0.0312934928,-0.0314362608,-0.1728420556,-0.0214466285,-0.0950281098,0.0778392553,-0.115983285,0.0215167049,-0.0642523095,-0.0090689361,-0.0181926768,0.109688282,-0.1362932324,-0.0524020344,-0.0094745029,0.0668248087,-0.1335449517,-0.1444597542,-0.0343158841,0.0571782514,-0.0471582823,0.0038670225,-0.0819708705,-0.0161462072,-0.2079584748,-0.1310956925,0.0161809418,-0.1093784943,0.0209902991,-0.2176890075,0.1644138098,-0.1407591254,-0.0333362967,0.0272979736,-0.1035383493,-0.0702339932,0.0292000901,0.0715636238,0.0328533128,0.1193510145,0.0254831947,-0.1032936499,-0.1282043755,0.026836643,0.0204058439,0.0561450832,-0.0333244838,0.0262538623,-0.1083981469,0.0255555753,-0.1161693037,0.172967568,-0.0085918615,0.0057182009,-0.1273508966,0.1067456901,0.1538093835,0.040306218,0.1626633108,0.1064620093,0.2157485932,-0.0916616023,-0.034855485,-0.0313029476,-0.067590557,-0.1328895837,0.0711381808,0.0886072293,-0.0321136788,-0.0174775012,0.0136948135,-0.1617453396,0.2310405076,0.0104225501,-0.0539097302]],"hackathon_name":"Great Uni Hackathon 2015","index":1071,"project_description":"Have pokemon battles in Virtual Reality!We all love pokemon. So we decided to build a virtual environment where you can challenge your friends to pokemon battles. You can choose from a range of available pokemon and use a variety of different moves with a variety of animations.The environment was developed by us throughout the hackathon. The pokemon were built from 3D models that we rigged and animated ourselves. The gameplay initiates when at least two Oculus rift users join the server. The users pick their pokemon and battle in VR.For all of the team members, this was the first time to ever use Unity. Working with a tool that we did not quite know how to use was demanding. We also faced a challenge communicating information between users on unity. Many of us were also new to game development.Learning Unity and Blender in less than 24 hours and achieving significant progress with both.Game development, Graphics and Design, Animations, P2P architectures.Hopefully we will expand it further to include a wider range of pokemon and moves that will allow the game to be as close as possible to the existing games. We are also looking forward to add voice recognition and motion capture for body movements.Great Uni Hackathon 2015Built Game Engine, rigged most models and worked on user to user communication.Izz Abudaka\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:14 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Pok\u00e9Battle","project_tags":["unity","blender","javascript","oculus"],"project_url":"https:\/\/devpost.com\/software\/pokebattle","keywords":"pokemon,also,users,use,game,unity,battle,animations,range,challenge,environment,us,variety,development,moves,different,expand,ever,existing,works"},{"level_0":1072,"hack_vector":[[0.1596055776,-0.1585364342,0.0134286499,0.1022089422,-0.0527737848,0.1667473465,0.1526384205,-0.0593247525,-0.0274130106,-0.0340142585,-0.0228891261,0.0546786152,0.1197872162,-0.0677850693,-0.0192122012,0.0840509981,0.2524505854,0.0379106142,0.0565100573,0.079858236,-0.1844648421,-0.0115637593,-0.0355996527,-0.0622056834,0.19320485,-0.0176562592,-0.074943915,-0.1738844663,0.0355120227,-0.0756994858,0.0158823766,-0.082972303,0.0853889212,-0.0357386731,-0.0379003137,0.011863282,0.1417426616,-0.1017960757,0.01192345,0.1162704155,0.066473648,-0.1408112943,-0.1761791706,-0.0385683812,-0.0722481385,-0.0471859798,0.0430061035,0.007002627,-0.0084492853,-0.1807394773,-0.0096734324,0.0412427597,-0.1072016507,-0.0775335431,-0.0903308317,0.1465066671,-0.1515884101,0.0848507658,-0.022688983,0.0797076896,-0.0039814766,0.0304614194,0.0271117743,0.0636587292,0.1491355896,-0.0530307479,-0.148580119,-0.1795499772,0.0080167884,0.0024041773,0.0735478625,-0.0286571812,-0.0263865795,-0.1527801156,-0.0849753022,-0.0396705866,0.1932406127,0.0278438162,0.1042589396,-0.1398796439,0.0896881968,0.1434260011,-0.00619889,0.1379163563,0.1631002575,0.1539268792,-0.1433989257,0.0956582054,0.0062675839,-0.1116025373,-0.0584396347,0.1172456592,0.013079891,0.0340849683,0.0868586972,-0.108508803,-0.0453660004,0.1402392536,0.1229251549,-0.0346818082]],"hackathon_name":"Great Uni Hackathon 2015","index":1072,"project_description":"The Ultimate DJ Simulator*with your imagination****Great Uni Hackathon 2015amnre judge\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:04 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HypeMan","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/hypeman-the-ultimate-dj-simulator","keywords":"works,ran,proud,next,learned,inspiration,imagination,hypeman,challenges,accomplishments"},{"level_0":1073,"hack_vector":[[0.1744428873,-0.1438063532,-0.0096909329,0.0950808302,-0.0445149243,0.1678350568,0.1814913452,-0.0482084006,-0.0286672637,-0.0293940809,-0.0156597551,0.0210921243,0.1280810833,-0.0685919896,0.0176951289,0.0427138805,0.232911393,0.0297815073,0.0620044805,0.0952910706,-0.2157647163,0.0030128851,-0.0361516252,-0.0473416708,0.15737845,-0.0211340412,-0.0619916655,-0.1814289391,-0.0010276526,-0.0766185001,0.0399699956,-0.0984279662,0.061947383,-0.0608936325,-0.0366660729,-0.0014306497,0.1437608004,-0.1162074879,-0.0282537844,0.0827916861,0.0784470513,-0.1449325234,-0.1611569822,-0.0428543501,-0.0090883048,-0.0472076237,0.0403009504,-0.029580133,-0.0297508072,-0.2038201988,-0.0617578179,0.0282394681,-0.1142735481,-0.050968308,-0.1428441554,0.1525553018,-0.1456925124,0.0424581505,0.0010724346,0.0250936188,-0.0281543899,0.0224434827,0.0462619141,0.0397908054,0.1471248567,-0.0366084725,-0.1408641189,-0.1533481479,0.0153378649,0.0151030617,0.0648513287,-0.0328999236,-0.0202128086,-0.1534360647,-0.0551626757,-0.0760198534,0.1996778399,0.0252490696,0.0586535931,-0.1539554894,0.0974105,0.1617454141,0.008486391,0.1589399725,0.1491861194,0.1919603497,-0.1137120351,0.0619952492,0.0074626175,-0.1070192158,-0.1012291014,0.1101706699,0.0427866802,0.0135969371,0.0492647961,-0.0664292052,-0.0866687968,0.1944716424,0.0835752562,-0.0377032645]],"hackathon_name":"Great Uni Hackathon 2015","index":1073,"project_description":"It's freaking magicWe wanted to control things without an interface. Now we control a parrot drone with Muse headband. It's freaking magic. It also flips.Great Uni Hackathon 2015Keit Kollo\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 03:53 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Enchanted objects","project_tags":["python","android","java","bluetooth"],"project_url":"https:\/\/devpost.com\/software\/enchanted-objects","keywords":"control,without,wanted,things,parrot,muse,magic,interface,headband,freaking,flips,drone,also"},{"level_0":1074,"hack_vector":[[0.1443418264,-0.106718801,-0.0152965896,0.0502834208,-0.034124665,0.1596656293,0.1833287328,-0.031356331,0.0048689828,-0.0548089035,-0.0085768364,-0.0257224236,0.1134883761,-0.0523299873,0.0138638727,0.0507187359,0.2556445003,0.0399666317,0.0336082168,0.1255120039,-0.232670933,0.0035553037,-0.030871246,-0.0444507264,0.127880916,-0.015790699,-0.0417696722,-0.1792317033,-0.0077178278,-0.1083344147,0.0326379687,-0.1159252152,0.0546068251,-0.0684433952,-0.0076770582,-0.0161269009,0.1314822435,-0.1390608549,-0.0390508212,0.0460299216,0.0419027768,-0.1504676938,-0.156694755,-0.0658794418,0.0251871534,-0.0884665921,0.0200405661,-0.0236124452,-0.0388554148,-0.2179597914,-0.098434113,0.0122480821,-0.0932073593,-0.0602931492,-0.1636394858,0.1621024162,-0.1288001686,-0.0052246787,0.0320408195,-0.0469426438,-0.0609092265,0.011485518,0.0601169392,0.0328803025,0.120222114,-0.0040957583,-0.1269531399,-0.1628603786,0.0479450338,0.0333836973,0.0718280002,-0.0608299039,0.0063900459,-0.1286779344,-0.0337602086,-0.1099912375,0.1764575541,0.0193957705,0.0502079055,-0.1457905024,0.0952914059,0.1656517535,0.0177166332,0.1775823534,0.1202864572,0.1828478575,-0.1320739985,0.0122740129,-0.0236207154,-0.0962258428,-0.1294442415,0.0852181837,0.0586875044,-0.0235868245,0.0127310269,-0.0266376268,-0.122941941,0.2248062342,0.0479959957,-0.0728963614]],"hackathon_name":"Great Uni Hackathon 2015","index":1074,"project_description":"Feed of Meme Highlights of your eventAre you at an event? Would not you like to capture cool moments and create your own memes on the go!? YES!?Then MemeGrid is exactly what you need!!!No need for the registration, the only tool you need is an e-mail client, just attach picture to the e-mail, add text and SEND! It will be live in seconds.Great Uni Hackathon 2015Fizuli Valizada\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 03:49 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MemeGrid","project_tags":["sendgrid","jquery","php5","html","javascript","ajax","css"],"project_url":"https:\/\/devpost.com\/software\/memegrid","keywords":"need,memegrid,mail,attach,capture,client,cool,create,event,exactly,go,like,live,yes,would,memes,moments,picture,registration,seconds"},{"level_0":1075,"hack_vector":[[0.149455294,-0.1065652147,-0.0434188917,0.0517471842,-0.0181439668,0.1457486302,0.2002438456,-0.0361008979,-0.0318337791,-0.0099778082,0.0127470493,-0.0644429401,0.1419285238,-0.0720436275,0.0584984086,-0.0047931219,0.2185968906,-0.0072941016,0.0428862683,0.121118255,-0.2411036938,0.0284922458,-0.0411692224,0.0003318174,0.1291656196,-0.0199488308,-0.0387170948,-0.1805689484,-0.0292335693,-0.0968410298,0.0796063393,-0.1343908012,0.032729011,-0.0797243416,-0.0227064379,-0.0196362473,0.1197324693,-0.1322712004,-0.048019208,0.0025539685,0.0629619583,-0.1271599382,-0.1639976799,-0.0292138029,0.0642281026,-0.048233252,0.0148415919,-0.0696613193,-0.0304537918,-0.2143267393,-0.1243166104,0.0133260973,-0.0957154185,0.0062729381,-0.2072426379,0.1566998959,-0.1371776164,-0.0262277983,0.0253619086,-0.0931969881,-0.0683740154,0.0220872238,0.080313459,0.035849195,0.1196137667,0.0124361496,-0.0997995734,-0.1231990606,0.0366576463,0.0319894366,0.0678265169,-0.0370394513,0.0233268738,-0.1195637956,0.015655335,-0.1157431155,0.1775093228,0.0114377942,0.0190081783,-0.1300034225,0.1141647696,0.1569631845,0.0522726327,0.1726371348,0.1044879854,0.1954434961,-0.0975806341,-0.0409331433,-0.0261755977,-0.0849938244,-0.1347729713,0.0583877899,0.0917045474,-0.032480754,-0.0039586988,0.0113506503,-0.1478020847,0.221821025,0.0213907883,-0.0671369657]],"hackathon_name":"Great Uni Hackathon 2015","index":1075,"project_description":"touchless control, a lot of fun, email services, paypal, challengeWe all love challenges, and this seemed a bit challenging.Starting from a drawing program (paint, GIMP) and create the maze of your choice, then send it as a challenge to a friend through our email services and he will receive a link to the WEB App (the aMaze-ing game). The game itself is controlled by Leap motion. You move trough the maze with hand gestures and have to get from Start to End.Making the Front and Back ends, configuring django, figuring out on how to configure flask as well.We are sending emails automatically, we have a donation page which has a form to send payment, working also with Paypal, We managed to get the Leap to take the right motions and work flawlessly.A lot about web programmingGetting it popular and making it better.Great Uni Hackathon 2015Nikolay Ivanov\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 03:38 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"aMaze","project_tags":["python","django","flask","braintree","html5","css3","javascript"],"project_url":"https:\/\/devpost.com\/software\/amaze","keywords":"maze,get,amaze,web,leap,game,send,challenges,making,works,end,ends,figuring,flask,form,flawlessly,email,friend,front,gestures"},{"level_0":1076,"hack_vector":[[0.1490096897,-0.1471621543,-0.0164508522,0.0655630901,-0.0475817844,0.1436262876,0.1746118963,-0.0224135462,-0.0027415021,-0.0330790766,-0.0093086399,0.0040490748,0.1238109618,-0.0537313186,0.0229923092,0.0533538423,0.2516505718,0.0353333689,0.0449736156,0.1128250584,-0.2370973229,0.0053942953,-0.0282620806,-0.0421651602,0.1522376388,-0.0143713215,-0.0478449501,-0.1842173338,0.0235475432,-0.1049581021,0.0246144962,-0.1219407842,0.0485043563,-0.064905785,-0.0016843,-0.0116838105,0.1216328293,-0.1436062902,-0.0390006788,0.0469432436,0.0343375318,-0.1576395929,-0.1689159274,-0.0607443154,-0.0129126469,-0.0716281757,0.0193504356,-0.0262799431,-0.017308671,-0.1923615485,-0.0781375766,0.009564505,-0.1032664776,-0.0723988712,-0.1611344963,0.1643939912,-0.1295074821,0.0159204975,0.0296000335,-0.0148411412,-0.0529292673,0.0299048927,0.0501436479,0.0619106628,0.1144891977,-0.0031950402,-0.1386776865,-0.1721193045,0.0393201485,0.0160453767,0.0867351219,-0.0585434958,0.0132249156,-0.1321172118,-0.0384205282,-0.1158115342,0.1732764691,0.0189631786,0.0767886564,-0.1407351047,0.1001158282,0.1648579538,0.020658629,0.1776179671,0.1334114224,0.1762204021,-0.14362216,0.0336764231,-0.0195136443,-0.0965788737,-0.0942740738,0.0973341689,0.0565392189,-0.0178020298,0.0461844802,-0.046991989,-0.1189187542,0.1941550225,0.0604272299,-0.0672864392]],"hackathon_name":"Great Uni Hackathon 2015","index":1076,"project_description":"Challenge yourself over the stock prices of your favourite company!Inspired by Flappy BirdPipes at BloomBird generated given stock prices of companies. Thanks to Bloomberg for giving access to the statistical data.Fun and addictive gameBloomBird will be a site where you can follow LIVE stock prices and enjoy your time!!!Great Uni Hackathon 2015Ramin Jafarov\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 03:10 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"BloomBird","project_tags":["bloomberg","php","javascript","html5","css3","jquery"],"project_url":"https:\/\/devpost.com\/software\/bloombird","keywords":null},{"level_0":1077,"hack_vector":[[0.1587696522,-0.1150035039,-0.0357923657,0.0414374322,-0.0238547754,0.1448120773,0.2105535269,-0.0389467031,-0.0139641073,-0.0265875254,0.0047741467,-0.0474406555,0.1320240945,-0.0654569194,0.0551947542,-0.002616338,0.2250279188,-0.0019535327,0.0442343019,0.1223998442,-0.2371625453,0.0310033131,-0.0383023843,-0.0161522944,0.1146429554,-0.0204969104,-0.0254282393,-0.1714458466,-0.0279168915,-0.1008705422,0.0637805387,-0.1278370023,0.0356997736,-0.0860616565,-0.0255280826,-0.0241492707,0.1242331043,-0.1325736642,-0.0575464442,0.0035007093,0.0603879951,-0.1222947389,-0.1410173327,-0.0443009213,0.0667947829,-0.0643843934,0.020776635,-0.0654809773,-0.0451117158,-0.2093517631,-0.1342955679,0.0079194019,-0.105062902,-0.0124099832,-0.1869478822,0.1485459507,-0.1287449002,-0.0367503501,0.0279559996,-0.075795427,-0.0657731891,0.0146225858,0.0805301294,0.0217839442,0.1136341318,0.0005697485,-0.1147134304,-0.1243213788,0.0298967734,0.034755379,0.0623981543,-0.0465950854,0.0150070181,-0.1263739169,0.0027027389,-0.1272206903,0.1836328357,0.0182577539,0.0125852032,-0.1449693143,0.1143282428,0.164234072,0.0318396874,0.183003217,0.1111929417,0.1995744556,-0.0980769396,-0.0159716941,-0.0163270812,-0.0832451358,-0.1395572722,0.0721788183,0.0897374004,-0.0166566614,-0.0058942614,-0.007035919,-0.1438958943,0.2326358408,0.0180520937,-0.06503544]],"hackathon_name":"Great Uni Hackathon 2015","index":1077,"project_description":"Wireless music player controlled with SMS messages. And a pin that when pulled plays music until you pay it to stop.Build something with Linkit ONE development board.  Also try other things like API and services providedWhen it turns on it establishes a GSM connection and uses a LCD display to print out reports. then when the connection is established we can control the color of the LCD or let it play music. There is also a physical pin that when disconnected triggers a music to play. The only way to stop it is by paying trough Braintree.Programming in arduino, Javascript, NodeJs, setting up local host, braintree and twilio. Making a nice box for it.It actually works. Learned so much that I can't believe it.Arduino, setting up stuff, Node,Js, JavascriptIt will annoy as many people as possible :)Great Uni Hackathon 2015Uros Zupan\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 03:12 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Sonic Rick","project_tags":["arduino","twilio","braintree","node.js","javascript","html5"],"project_url":"https:\/\/devpost.com\/software\/sonic-rick","keywords":"works,learned,play,connection,setting,javascript,lcd,braintree,arduino,also,music,let,established,js,like,linkit,inspiration,host,gsm,establishes"},{"level_0":1078,"hack_vector":[[0.133689329,-0.0796644613,-0.036967203,0.0343345664,-0.0207652692,0.1368518919,0.1967739165,-0.0261513609,0.0048382147,-0.0259426422,0.0155091956,-0.0807661712,0.1311508864,-0.054107327,0.0675439835,-0.0110118985,0.2058508396,0.0038855299,0.0348621532,0.1305036545,-0.2458874732,0.026664434,-0.0355028287,-0.0078523243,0.0874292627,-0.0175196137,-0.0179967713,-0.1673110425,-0.0288198777,-0.1051063389,0.064880088,-0.1210520416,0.0211916063,-0.0867720023,-0.003802215,-0.0324479565,0.106802687,-0.1474897712,-0.0750392973,-0.0259704255,0.0420308374,-0.117501758,-0.1252874732,-0.0444314554,0.0812950805,-0.0617039688,0.0048088538,-0.0772649124,-0.0322932377,-0.2068460435,-0.1634051353,0.0093892794,-0.09753263,-0.0039052102,-0.2113001645,0.1589981616,-0.1091710627,-0.0539904386,0.0479401946,-0.1264726371,-0.0803361535,0.0073038484,0.0870974734,0.028441688,0.0973628238,0.0360736027,-0.0863599703,-0.1187858135,0.0385857746,0.0378978513,0.0595039017,-0.0496585406,0.0336391367,-0.1128143668,0.0294356961,-0.137398243,0.1656600088,0.0048237867,-0.0131469676,-0.1373914331,0.1044699401,0.1587154567,0.0524865612,0.1733290851,0.0888869613,0.2029777765,-0.0808641464,-0.057904873,-0.0349464156,-0.0619997159,-0.1546569169,0.0525270067,0.1041064039,-0.0486022346,-0.0268222764,0.0320934728,-0.1675618589,0.2545059323,-0.0142819323,-0.0833785236]],"hackathon_name":"Great Uni Hackathon 2015","index":1078,"project_description":"Your face is your visit card!Managing your contacts is difficult, especially when you meet someone new. Should you ask for a mobile phone? Email address? Or maybe Skype nickname? Whatever way you choose, you will still find yourself linking that person on more social media afterwards. Why not do it in one go with an easy-to-use app?What if you have to meet new people for business all the time? Then, your life turns into endless flow of business cards with no real structure and a simple way to organise it! Our app aims to become your electronic business card library and your business card on the go: search both your home and work contacts easily and have your business card with you wherever you go. Avoid the hassle with paper business cards!A person downloads an app and goes through a simple sign-up process that allows to add personal and work contacts like Facebook, LinkedIn etc. (only Email Address is implemented right now). Afterwards, the person takes a personal picture to be used for face recognition (in future, the Face Recognition library will be also filled up with profile images from added social networks). Ready to go!Recognising someone and adding a their contacts is as easy as taking a picture of that person!Face recognition doesn't really work well - different camera configurations, different lighting or even haircut and glasses screwed up the process. Thus, in the future, we need to add more reliable identification techniques like Fingerprint recognition (when the devices are equipped appropriately) with a fallback to techniques like NFC, Bluetooth or QR Code scanning.Having a centralised server for all the functionality means that we can roll out updates and have total control over the core of our app. However, it also means that the app can't function offline or if the server goes down. Meanwhile, doing Face recognition on the device is difficult due to all the SDKs out there (some of which are limited to the processor chips, e.g., Snapdragon SDK).Using Ionic and Cordova for making an app was a really good choice due to rapid view design process, but the framework sometimes behaves unexpectedly on the actual device. Lack of on-device JavaScript debugging makes development quite a horrifying process.We were advised to have a look at Parse backend-as-a-service and it worked out really great for us. Our backend server is just a single file with less than 250 lines of code!Doing a complex app that interacts with a server, uses camera and Face recognition only by means of HTML5, CSS and JavaScript is exciting and is quite an accomplishment on its own. A couple of years ago we never could imagine using thick technology stack in such a way!We had no prior experience in Ionic or Face recognition, so we learnt a great deal. We applied Ionic framework to bootstrap a simple cross-platform app really quickly. We discovered Parse - great alternative to managing your own database. We figured out the ins and outs of Face recognition with current technologies.Refactoring! And lots of it! App in it's current state is very much a fragile prototype, so we need to improve it's code quality. Changing the app engine from Ionic to something like Xamarin.Forms (more native yet still cross-platform) will improve the performance and may give us a chance to use the some on-device Face recognition techniques.Adding more contact sources will always remain needed (especially right now, when we only have a single email) - integration with all the social networks like Facebook, Twitter, Google+ (for personal contacts) and LinkedIn (for work contacts) is crucial.What if you already have a collection of Business Cards? We could use Artificial Intelligence to smartly recognise your collection of paper Business Cards and automatically create an electronic entry with all the details (Name, Email, Age etc.)Limiting ourselves to Business Cards for people is quite boring! We could use the renowned iBeacon technology to implement Business Cards for Places. Why not add your favourite food place while you're there to keep track of latest updates and deals? :)Great Uni Hackathon 2015Eric Hripko\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 03:12 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Ice Breaker","project_tags":["parse","html","html5","css","css3","javascript","php","android","ionic","apache","ios"],"project_url":"https:\/\/devpost.com\/software\/ice-breaker-p7ifk","keywords":"business,app,recognition,face,contacts,cards,like,email,device,person,use,process,ionic,server,go,work,really,simple,card,could"},{"level_0":1079,"hack_vector":[[0.1490799785,-0.111647509,-0.0135357929,0.0538311116,-0.024144534,0.1612030566,0.199087888,-0.0526030511,-0.0280061886,-0.0058765947,0.0214546882,-0.0455070473,0.1397593766,-0.0720475018,0.044301521,0.0255193785,0.2432500273,0.0133697679,0.0471601747,0.1080388427,-0.2282319665,0.0474217199,-0.0382677279,-0.0340703465,0.126087144,-0.0234342124,-0.0394420996,-0.2031257898,-0.0120904166,-0.0895632878,0.070704475,-0.1312359422,0.0510418415,-0.0845498145,-0.0209983811,-0.0144236423,0.1303337812,-0.1309755594,-0.0394247249,0.0052130227,0.0401462577,-0.1597023159,-0.1694215536,-0.0357283801,0.0278097428,-0.0352586806,0.0131989643,-0.0547061078,-0.0222844016,-0.2055799365,-0.1048910618,0.0246382039,-0.1004166752,-0.0153004695,-0.183958143,0.1488025039,-0.1432819813,0.0047369008,0.0283860452,-0.0603745356,-0.0547061525,0.0181655679,0.0841731727,0.0528283678,0.1124212891,0.0016104279,-0.1027167439,-0.1444086432,0.0410951972,0.0310199205,0.0841593593,-0.0518763438,0.032162793,-0.1316545308,-0.0009081975,-0.1246119887,0.1713618785,0.0067425938,0.048536174,-0.1325379163,0.1289052963,0.1548046023,0.0545626692,0.1786553711,0.1182704046,0.1806747168,-0.1214177683,-0.0275311656,-0.0124389427,-0.0882691965,-0.1329729706,0.0658054799,0.0707836449,-0.0411966145,0.0154756848,-0.0121354479,-0.1235647798,0.1960710883,0.034455236,-0.0785555989]],"hackathon_name":"Great Uni Hackathon 2015","index":1079,"project_description":"Charity driven Social NetworkKarma is an application aimed at funding charity driven projects, and bringing together and sharing resources within the sector.\nThe model of the site is based on building up Karma for your account, thereby increasing your visibility on the site, and increasing your reputation to other members.The site is also aimed at Charity organisations, as a way to broadcast their projects, get funding from communities, and recruiting volunteers. Thus a karma based, reputation building social network would allow individuals to follow high profile individuals and\/or charities, and apply to volunteer positions, both to the benefit of the charity organisations and the individual person.Great Uni Hackathon 2015I worked on the backend, writing a ReSTful API for an android app.\nI wrote the backend in Flask, SQLAlchemy, and Postgres sql server.Hamish Hutchings\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 02:51 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Karma","project_tags":["python","html","java","android","flask"],"project_url":"https:\/\/devpost.com\/software\/ghu-hack","keywords":"karma,site,charity,individuals,reputation,increasing,building,organisations,based,funding,aimed,projects,communities,follow,driven,get,high,would,broadcast,bringing"},{"level_0":1080,"hack_vector":[[0.1522011906,-0.1312895864,-0.0378329419,0.028761128,-0.0088214548,0.1254186928,0.2112837136,-0.023176806,-0.0164995324,-0.0262955166,-0.0028403653,-0.0515770316,0.1240027547,-0.0566082485,0.0365753062,0.0062626479,0.2329067886,-0.0005968322,0.0306870919,0.140541181,-0.2585953474,0.0406107865,-0.0119888987,-0.0148874903,0.1314782202,-0.0206593387,-0.0267120525,-0.1785907447,-0.0132024325,-0.1148228496,0.0637840331,-0.1447878033,0.0388096347,-0.0714457482,-0.0017492382,-0.0585703701,0.1073188782,-0.1506993622,-0.0529645868,-0.016981218,0.0507751592,-0.1596568972,-0.1363805383,-0.0745274723,0.0650050044,-0.0617757998,0.0022588456,-0.0554147661,-0.0407953262,-0.1957530081,-0.1249489635,0.0054183989,-0.0985674709,-0.0174833778,-0.2004071772,0.1555378437,-0.1278863847,-0.0531353205,0.0439565256,-0.0965602621,-0.0775157362,0.0164172985,0.067413643,0.0160410311,0.0923046246,0.0261049513,-0.1201691702,-0.1230809614,0.0462915041,0.0525164232,0.0833675563,-0.0664222911,0.0338348486,-0.1067989022,0.0081375325,-0.1475182325,0.1346918941,0.0081085591,0.0309328679,-0.1190364808,0.1039203629,0.1519901752,0.0247621536,0.1939682961,0.0947546288,0.185140267,-0.1232671887,-0.0206345692,-0.0413417444,-0.0738317594,-0.1191566586,0.0662898123,0.0707764998,-0.0399108082,-0.0145274382,0.0185654368,-0.1595312208,0.2046905607,0.0131704658,-0.0615758598]],"hackathon_name":"Great Uni Hackathon 2015","index":1080,"project_description":"First Person 3D PacmanPlaying Pacman with a first-person view would be quite challenging. Not knowing how many enemies, where they could come from, and where the locations of the food items to collect would increase the difficulty level by a lot.The game was created using Unity. First the stage or map is designed. Food items are then generated on the board along with the enemies (Pacman ghosts and a Slenderman!) which will kill you upon contact. Powerup items periodically spawn on the map which allows Pacman to eat its enemies if met while Pacman is powered up! Enemies will run away from Pacman when she is in this mode! Take advantage of it! Upon collection of all the food items on the map, you are victorious!Automatically generating food items so that it is not generated within non-traversable space (Walls)\nDetection collision between game objects\nHow to correctly texture game objectsThe game works! Enemies kill Pacman upon contact, die if this happens when Pacman is powered up. Pacman wins if all the food items are successfully collected. A simple start and game over screen was also implemented to guide players on how to navigate in the game.Making a simple game in Unity!Possibly a compass\/radar function which helps guide players to where the remaining food items are\nPowerup items which let you detect nearby ghosts or sounds alarms \nMore levelsGreat Uni Hackathon 2015A little bit of everythingProject planner, Unity Engine expert and programmer.Obrien Sim\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 02:55 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Pacman Revisited","project_tags":["unity","c#","photoshop"],"project_url":"https:\/\/devpost.com\/software\/pacman-revisited","keywords":"pacman,items,game,food,enemies,map,upon,ghosts,generated,guide,simple,objects,works,first,players,powered,powerup,kill,contact,would"},{"level_0":1081,"hack_vector":[[0.1511868238,-0.1238162145,-0.0221634097,0.0419996567,-0.0318133496,0.1427281797,0.184509784,-0.0325993486,0.0020435757,-0.0534001403,0.0128194476,-0.0338715054,0.1273531914,-0.0604408085,0.0306421518,0.0386297107,0.2505676746,0.0152409542,0.0469972678,0.1199088842,-0.2420067936,0.0082475031,-0.0435612686,-0.0302905608,0.1084091812,-0.032122843,-0.0364932306,-0.1708275676,-0.0020181453,-0.1188546345,0.0376864038,-0.1063989252,0.0427264534,-0.0724973157,-0.0041394848,-0.020945359,0.1257822514,-0.1473484486,-0.0501052178,0.014334077,0.046069663,-0.1180301458,-0.1673100591,-0.0499697588,0.036812678,-0.0900673047,0.0285713375,-0.0475460738,-0.019173922,-0.2122659981,-0.112019293,0.0243421867,-0.1054460108,-0.0490929559,-0.187634334,0.1734950691,-0.126347661,-0.0252649914,0.0413863845,-0.0626055449,-0.0640584901,0.0178270005,0.071508579,0.0486542732,0.1140363961,0.0124926129,-0.1217746139,-0.1528379619,0.0330479331,0.0289338119,0.0734139308,-0.0436178222,0.0117517132,-0.1320427805,-0.017450856,-0.1130713373,0.1818513274,0.0169738084,0.0376148596,-0.138766408,0.0907460675,0.1630595773,0.0104288682,0.1751102805,0.1233802065,0.1836813241,-0.1202023178,-0.017341055,-0.0426797234,-0.0854168907,-0.1208276749,0.0830337703,0.0701083094,-0.0262358487,-0.0040698554,-0.0272600204,-0.1416349709,0.2178752124,0.0379784778,-0.080283761]],"hackathon_name":"Great Uni Hackathon 2015","index":1081,"project_description":"Easy bookkeeping of expenses between friendsCloqi make it easy for you and your friends to keep track of all your expenses when you e.g. are going on holiday together. Each time someone have an expense it can be added to the app and in the end a list can be send out to those who have to transfer money. The app will of cause make sure that the least amount of transactions are needed.Well... I don't like ExcelGreat Uni Hackathon 2015Rasmus Lunding\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 02:24 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Cloqi","project_tags":["android","sqlite","php","mysql"],"project_url":"https:\/\/devpost.com\/software\/cloqi","keywords":"app,make,works,keep,amount,cause,cloqi,easy,end,excel,expense,expenses,friends,going,holiday,inspiration,least,well,like,list"},{"level_0":1082,"hack_vector":[[0.1662513912,-0.1212845296,-0.026730882,0.0758899972,-0.0262766723,0.1428880095,0.1809559017,-0.0437455066,-0.0291221924,-0.0303913709,0.0081971809,-0.0290250257,0.1455456764,-0.0662168413,0.0446050577,-0.0049864734,0.2091371566,-0.0030195063,0.0582992733,0.1254239976,-0.2393727601,0.0204188116,-0.0297474395,-0.0224196762,0.1299522072,-0.0251001082,-0.0360028185,-0.176367566,-0.0149150677,-0.0839871392,0.0472366288,-0.1090862155,0.0454019196,-0.0648986176,-0.0197105687,-0.0236603227,0.1290178299,-0.1382214576,-0.0634365082,0.0296215322,0.0741014853,-0.1251319498,-0.1554740667,-0.0343191326,0.0234774537,-0.0502084196,0.0193411727,-0.0749785975,-0.0158929285,-0.2125889212,-0.1276371181,0.0217732731,-0.1163149849,-0.0091898395,-0.1846210659,0.1640107781,-0.1273315698,-0.0004737644,0.0258711744,-0.0594133437,-0.0563060008,0.020692708,0.0719899014,0.0467167944,0.1328894794,0.0080719832,-0.1190345883,-0.134836629,0.0141209168,0.0220983494,0.0701022074,-0.0351776667,0.002219646,-0.1362302005,0.0012395708,-0.105963178,0.1999803931,0.0076402603,0.0246253572,-0.1405104846,0.1114742979,0.1558380127,0.0306650791,0.1694416404,0.1268518865,0.2032154649,-0.0991820171,-0.0159769859,-0.0205133166,-0.0773843378,-0.1307756156,0.0768988505,0.0873429403,-0.0286663026,0.0216215551,-0.0305134263,-0.1425569355,0.2333055586,0.0331957974,-0.0642685369]],"hackathon_name":"Great Uni Hackathon 2015","index":1082,"project_description":"Tip here, tip there, tip everywhere....on AndroidAs a part time job i often lost out on stolen tips so relished this opportunity to change lives... TipAdvisor is awesomeBeacons detect the establishment you are in, Braintree then makes it easy to perform payments into the staff tip jar.First Hackathon, Android Studio and GitHub liked to collapse on us, Beacons had limited Android docsGenuine sense of accomplishment with what we have created, It works and It is ready to use!How to use Beacons, Braintree, Android Studio and the different style of coding a Hackathon demandsInteresting features to help us infer peoples opinions through tipping habits, gamification and basically the future is limitless.Great Uni Hackathon 2015Dan Alan\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 01:32 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"TipAdvisor","project_tags":["android","android-studio","braintree","parse","estimote","azure","java",".net","c#"],"project_url":"https:\/\/devpost.com\/software\/tipadvisor","keywords":"beacons,android,works,hackathon,studio,braintree,tipadvisor,use,us,infer,help,easy,habits,github,genuine,gamification,future,first,features,establishment"},{"level_0":1083,"hack_vector":[[0.1761555821,-0.1326017827,0.0150747215,0.1032650471,-0.0222521685,0.1897691041,0.1697853208,-0.0818511471,-0.0437395684,-0.0181837883,-0.0067922338,-0.0148816789,0.1467123181,-0.0897805318,-0.0074403924,0.0687066913,0.2497219443,0.0247800741,0.066230759,0.0775481239,-0.1816906631,0.0409545563,-0.0600573011,-0.0460374318,0.1797129512,-0.0404447503,-0.0793821886,-0.2061363906,-0.0207482427,-0.0515017286,0.0640135631,-0.1010756865,0.0998296291,-0.0576513298,-0.0593712404,0.0238775741,0.1573224217,-0.0917761773,0.0166176762,0.075007394,0.0702983588,-0.1616110951,-0.1969066411,-0.0118898759,-0.0374761671,-0.0232044104,0.0393296406,-0.0268741865,-0.0259908456,-0.1987618804,-0.0425456725,0.0473472178,-0.1091934592,-0.0094290245,-0.1140847653,0.1354406923,-0.1686562002,0.0627203211,-0.0185112413,0.0314172097,-0.031591665,0.0231224652,0.0578409508,0.0557393357,0.1402332932,-0.0388018638,-0.1257701516,-0.1676260829,0.0000569434,0.0208023507,0.0801338032,-0.0424225293,0.0042730016,-0.1494731456,-0.0422749817,-0.0395765789,0.2075589001,0.0086498717,0.0914850608,-0.1274736077,0.112312004,0.1365046501,0.0280935299,0.128823474,0.1315977871,0.1571525335,-0.1207724363,0.036903102,0.0197443329,-0.1214203611,-0.0860605761,0.0922435001,0.0016580578,-0.0002401575,0.058804933,-0.0798420012,-0.0549002178,0.1568583846,0.1105692312,-0.0563691147]],"hackathon_name":"Great Uni Hackathon 2015","index":1083,"project_description":"the concientious citizenGreat Uni Hackathon 2015I worked on the upload module in Flask\/Python, on the DB and on the Web Interface.I worked on mail integration APINikola Milosevic\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 01:16 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"eCitizen","project_tags":["css","html","python","javascript","bootstrap","flask","sqlite","google-maps","sendgrid","braintree"],"project_url":"https:\/\/devpost.com\/software\/greatunihackproject","keywords":"images,broken,community,local,problems,extract,helps,heatmaps,greatunihackproject,geolocation,fix,working,image,easily,data,could,communities,automatically,etc,improve"},{"level_0":1084,"hack_vector":[[0.1470765769,-0.1490238458,-0.0219163261,0.0569594018,-0.0401825272,0.1384232193,0.1802423745,-0.0365331396,-0.0023521765,-0.0580368638,0.0074484255,-0.0214597508,0.1383153498,-0.057195235,0.0409770086,0.0279952064,0.2351246923,0.0168350674,0.0382495932,0.1259096563,-0.239989385,0.004536984,-0.0374441296,-0.0355379246,0.1187948436,-0.0152926026,-0.0357996933,-0.1635465622,-0.0095791286,-0.1224571168,0.0376907364,-0.1166208982,0.0361561403,-0.0627623275,-0.0067444141,-0.0370006636,0.1241117716,-0.1505598128,-0.0545361005,0.0263304058,0.0608250573,-0.1122595444,-0.1514036059,-0.0514125749,0.0230854042,-0.0827472657,0.0326343924,-0.0431517549,-0.0463883393,-0.218076691,-0.1165856645,0.0234540217,-0.0972051024,-0.0592130572,-0.1746746004,0.171151191,-0.1115541682,-0.0181133822,0.0247692578,-0.052761469,-0.0568628795,0.0212901458,0.0604384691,0.0461999029,0.1125774533,0.0135377115,-0.1275827885,-0.1427211165,0.0236181729,0.021494152,0.0616569631,-0.0401627831,0.0083543435,-0.1318448037,-0.0214117412,-0.0980343148,0.1876355112,0.0258386713,0.0269708987,-0.1517609805,0.1037982032,0.1762741208,0.0118096741,0.1692098379,0.1317530572,0.1923554987,-0.115749009,-0.0111777205,-0.0356460102,-0.0837997049,-0.1161203906,0.0874879584,0.0876571015,-0.0186243057,0.0082409177,-0.0411860831,-0.1436560601,0.2317893654,0.028693011,-0.0678152218]],"hackathon_name":"Great Uni Hackathon 2015","index":1084,"project_description":"Quick chat up lines, and a quick get away!Struggling to break the ice?\nWe've all experienced that moment when we spot a pretty girl\/ hot guy and just don't know what to say? With IceBreaker, you are never left speechless - witty pickup lines at the flick of a wrist make sure you always have something to say! And if the conversation goes south, have a quick getaway with a fake phone call!\nFeatures:shake it offit aint easy being cheesygo to Alaska and break some iceGreat Uni Hackathon 2015akis makaras\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 12:55 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"IceBreaker","project_tags":["android-studio","java","xml"],"project_url":"https:\/\/devpost.com\/software\/icebreaker-fzlaa","keywords":"lines,icebreaker,say,pickup,phone,conversation,ice,call,break,getaway,go,know,learned,hot,guy,left,goes,wrist,girl,looking"},{"level_0":1085,"hack_vector":[[0.1656417847,-0.1289745122,-0.0310105905,0.0654404908,-0.0279617384,0.1552559435,0.1950212568,-0.0381335877,-0.0236330628,-0.0234149322,0.0090210019,-0.0416098833,0.138676852,-0.0604386032,0.0499304235,0.0144581366,0.2236476243,-0.0035871963,0.045491837,0.1060501933,-0.2396904528,0.0227267146,-0.0337355621,-0.0181375928,0.1261389852,-0.026046047,-0.0374374017,-0.1714797914,-0.0189224593,-0.0873344317,0.0685042366,-0.1065703183,0.0392303579,-0.0749039203,-0.0382592194,-0.0073228111,0.1274625361,-0.1363804191,-0.0503070168,0.0283879302,0.0510174222,-0.1225548908,-0.1552284658,-0.0309791584,0.0396201573,-0.0655970052,0.0150558455,-0.0591765121,-0.0160603821,-0.2237169147,-0.1148923934,0.0153215742,-0.1070839316,-0.0161528848,-0.1762884706,0.1507136971,-0.1395461708,-0.0080051199,0.0280922335,-0.0579024926,-0.068194069,0.0355050266,0.0747357458,0.0475956686,0.1228510588,-0.0043665804,-0.1246227399,-0.1314466745,0.0221484359,0.0236841757,0.0622361638,-0.0322300158,0.009519984,-0.1305760741,-0.0207062811,-0.1138687283,0.201980114,0.0115376338,0.0373746417,-0.1469141245,0.1177317426,0.161485374,0.0202250592,0.1680844128,0.1244590208,0.1950385869,-0.1079751328,-0.0044334759,-0.0236878973,-0.0992101803,-0.1332549751,0.0807442889,0.0770507157,-0.0260883085,0.0229081381,-0.0095088286,-0.1309338808,0.2252374291,0.0450504124,-0.0616653785]],"hackathon_name":"Great Uni Hackathon 2015","index":1085,"project_description":"\"What else would you do?\"Mostly just figured that it wouldn't be hard to make a guitar hero esq application for androidit plays media from the android device and visualizes the data in a lower quality so that a sound wave can be created and can be trackedaligning the screen for multiple devicesfinishing the projectI learned a lot about Android dev and exactly how to use activities well and a good deal about the pros and cons of pair programmingHuge buttons, and generating \"maps \" for pre generationGreat Uni Hackathon 2015Liam Pringle\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:19 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"LineTracer","project_tags":["java"],"project_url":"https:\/\/devpost.com\/software\/linetracer","keywords":"android,learned,devices,hero,hard,guitar,good,generation,generating,finishing,figured,exactly,esq,device,inspiration,dev,deal,data,created,cons"},{"level_0":1086,"hack_vector":[[0.1391975582,-0.129065454,-0.0251717083,0.0490379781,-0.0276346225,0.1330215037,0.1991969794,-0.027737353,-0.0195918586,-0.0460510142,0.0089211985,-0.0237057768,0.1285369098,-0.0636823997,0.0356410258,0.0205656961,0.2420747131,0.0064778281,0.043117363,0.1376904845,-0.2449812442,0.0178120807,-0.0216663014,-0.0220537018,0.1386407763,-0.0224122703,-0.0378349051,-0.1802676469,-0.0104768276,-0.1056253612,0.0511976145,-0.1227199063,0.0345651582,-0.056952741,0.0034016073,-0.0317936353,0.1181653142,-0.137223199,-0.0433618091,0.0150600607,0.0584197082,-0.1536620259,-0.1615768224,-0.0599342659,0.0301465522,-0.0633360893,0.0175023805,-0.0451718122,-0.027114192,-0.2085063607,-0.1006734818,0.0181887336,-0.0977177396,-0.0338440053,-0.2066891789,0.1674250811,-0.139437899,-0.0158027597,0.0354120955,-0.0710825846,-0.0608331785,0.0276572481,0.0555755757,0.0306098592,0.1154807582,0.0229194779,-0.1194584146,-0.1472542882,0.0398566909,0.0244066063,0.0715079829,-0.0508907959,0.0238600615,-0.1221104786,-0.0019253225,-0.1146375835,0.1553777158,-0.0031951691,0.041129183,-0.1325140744,0.0993997902,0.1604080051,0.0257647932,0.1887825429,0.1171074137,0.192175135,-0.1322916895,-0.0126784286,-0.0356107689,-0.0817283168,-0.1157568023,0.0841835365,0.0716414899,-0.0263206847,0.0007086254,-0.0132233314,-0.1524142772,0.2104896009,0.0315512158,-0.0580657423]],"hackathon_name":"Great Uni Hackathon 2015","index":1086,"project_description":"Your green, your a square and your in a maze.There wasn't any inspiration, we just wanted to have fun and make a game\nTeam of 3 - Josh Dawes, Arjun Mistry, Hugh WilliamsThe game starts you at an entrance, with the aim to collect keycards to safetly exit the maze at the exit point. The player can collect battery packs which they can use to later buy perks.This was originally going to be a multiplayer game, where each player explores the map, gets their keycard then progresses to the next stage, however, due to having to keep track of movable objects we were unable to complete this task.Random map generation and World Map\/ Fog of War system.Multiplayer ;)Great Uni Hackathon 2015Arjun Mistry\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:21 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Get Out Of Here","project_tags":["java","javascript","php","css3","html5"],"project_url":"https:\/\/devpost.com\/software\/get-out-of-here-cx7lo","keywords":"game,map,collect,player,exit,next,multiplayer,inspiration,generation,josh,hugh,however,keep,going,gets,keycard,get,world,later,fun"},{"level_0":1087,"hack_vector":[[0.1554844975,-0.1096359268,-0.0290975813,0.0494979993,-0.012538407,0.1293325126,0.2070692778,-0.0253268313,-0.0309502296,-0.0116340481,0.0179549195,-0.055040244,0.1493020356,-0.062336497,0.0568490513,-0.0124279419,0.2031295002,-0.0200833641,0.0400970839,0.139808625,-0.2499601245,0.0223676059,-0.0354954302,0.0074181631,0.1410570294,-0.0312934928,-0.0314362608,-0.1728420556,-0.0214466285,-0.0950281098,0.0778392553,-0.115983285,0.0215167049,-0.0642523095,-0.0090689361,-0.0181926768,0.109688282,-0.1362932324,-0.0524020344,-0.0094745029,0.0668248087,-0.1335449517,-0.1444597542,-0.0343158841,0.0571782514,-0.0471582823,0.0038670225,-0.0819708705,-0.0161462072,-0.2079584748,-0.1310956925,0.0161809418,-0.1093784943,0.0209902991,-0.2176890075,0.1644138098,-0.1407591254,-0.0333362967,0.0272979736,-0.1035383493,-0.0702339932,0.0292000901,0.0715636238,0.0328533128,0.1193510145,0.0254831947,-0.1032936499,-0.1282043755,0.026836643,0.0204058439,0.0561450832,-0.0333244838,0.0262538623,-0.1083981469,0.0255555753,-0.1161693037,0.172967568,-0.0085918615,0.0057182009,-0.1273508966,0.1067456901,0.1538093835,0.040306218,0.1626633108,0.1064620093,0.2157485932,-0.0916616023,-0.034855485,-0.0313029476,-0.067590557,-0.1328895837,0.0711381808,0.0886072293,-0.0321136788,-0.0174775012,0.0136948135,-0.1617453396,0.2310405076,0.0104225501,-0.0539097302]],"hackathon_name":"Great Uni Hackathon 2015","index":1087,"project_description":"Have pokemon battles in Virtual Reality!We all love pokemon. So we decided to build a virtual environment where you can challenge your friends to pokemon battles. You can choose from a range of available pokemon and use a variety of different moves with a variety of animations.The environment was developed by us throughout the hackathon. The pokemon were built from 3D models that we rigged and animated ourselves. The gameplay initiates when at least two Oculus rift users join the server. The users pick their pokemon and battle in VR.For all of the team members, this was the first time to ever use Unity. Working with a tool that we did not quite know how to use was demanding. We also faced a challenge communicating information between users on unity. Many of us were also new to game development.Learning Unity and Blender in less than 24 hours and achieving significant progress with both.Game development, Graphics and Design, Animations, P2P architectures.Hopefully we will expand it further to include a wider range of pokemon and moves that will allow the game to be as close as possible to the existing games. We are also looking forward to add voice recognition and motion capture for body movements.Great Uni Hackathon 2015Built Game Engine, rigged most models and worked on user to user communication.Izz Abudaka\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:14 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Pok\u00e9Battle","project_tags":["unity","blender","javascript","oculus"],"project_url":"https:\/\/devpost.com\/software\/pokebattle","keywords":"pokemon,also,users,use,game,unity,battle,animations,range,challenge,environment,us,variety,development,moves,different,expand,ever,existing,works"},{"level_0":1088,"hack_vector":[[0.1596055776,-0.1585364342,0.0134286499,0.1022089422,-0.0527737848,0.1667473465,0.1526384205,-0.0593247525,-0.0274130106,-0.0340142585,-0.0228891261,0.0546786152,0.1197872162,-0.0677850693,-0.0192122012,0.0840509981,0.2524505854,0.0379106142,0.0565100573,0.079858236,-0.1844648421,-0.0115637593,-0.0355996527,-0.0622056834,0.19320485,-0.0176562592,-0.074943915,-0.1738844663,0.0355120227,-0.0756994858,0.0158823766,-0.082972303,0.0853889212,-0.0357386731,-0.0379003137,0.011863282,0.1417426616,-0.1017960757,0.01192345,0.1162704155,0.066473648,-0.1408112943,-0.1761791706,-0.0385683812,-0.0722481385,-0.0471859798,0.0430061035,0.007002627,-0.0084492853,-0.1807394773,-0.0096734324,0.0412427597,-0.1072016507,-0.0775335431,-0.0903308317,0.1465066671,-0.1515884101,0.0848507658,-0.022688983,0.0797076896,-0.0039814766,0.0304614194,0.0271117743,0.0636587292,0.1491355896,-0.0530307479,-0.148580119,-0.1795499772,0.0080167884,0.0024041773,0.0735478625,-0.0286571812,-0.0263865795,-0.1527801156,-0.0849753022,-0.0396705866,0.1932406127,0.0278438162,0.1042589396,-0.1398796439,0.0896881968,0.1434260011,-0.00619889,0.1379163563,0.1631002575,0.1539268792,-0.1433989257,0.0956582054,0.0062675839,-0.1116025373,-0.0584396347,0.1172456592,0.013079891,0.0340849683,0.0868586972,-0.108508803,-0.0453660004,0.1402392536,0.1229251549,-0.0346818082]],"hackathon_name":"Great Uni Hackathon 2015","index":1088,"project_description":"The Ultimate DJ Simulator*with your imagination****Great Uni Hackathon 2015amnre judge\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 04:04 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HypeMan","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/hypeman-the-ultimate-dj-simulator","keywords":"works,ran,proud,next,learned,inspiration,imagination,hypeman,challenges,accomplishments"},{"level_0":1089,"hack_vector":[[0.1744428873,-0.1438063532,-0.0096909329,0.0950808302,-0.0445149243,0.1678350568,0.1814913452,-0.0482084006,-0.0286672637,-0.0293940809,-0.0156597551,0.0210921243,0.1280810833,-0.0685919896,0.0176951289,0.0427138805,0.232911393,0.0297815073,0.0620044805,0.0952910706,-0.2157647163,0.0030128851,-0.0361516252,-0.0473416708,0.15737845,-0.0211340412,-0.0619916655,-0.1814289391,-0.0010276526,-0.0766185001,0.0399699956,-0.0984279662,0.061947383,-0.0608936325,-0.0366660729,-0.0014306497,0.1437608004,-0.1162074879,-0.0282537844,0.0827916861,0.0784470513,-0.1449325234,-0.1611569822,-0.0428543501,-0.0090883048,-0.0472076237,0.0403009504,-0.029580133,-0.0297508072,-0.2038201988,-0.0617578179,0.0282394681,-0.1142735481,-0.050968308,-0.1428441554,0.1525553018,-0.1456925124,0.0424581505,0.0010724346,0.0250936188,-0.0281543899,0.0224434827,0.0462619141,0.0397908054,0.1471248567,-0.0366084725,-0.1408641189,-0.1533481479,0.0153378649,0.0151030617,0.0648513287,-0.0328999236,-0.0202128086,-0.1534360647,-0.0551626757,-0.0760198534,0.1996778399,0.0252490696,0.0586535931,-0.1539554894,0.0974105,0.1617454141,0.008486391,0.1589399725,0.1491861194,0.1919603497,-0.1137120351,0.0619952492,0.0074626175,-0.1070192158,-0.1012291014,0.1101706699,0.0427866802,0.0135969371,0.0492647961,-0.0664292052,-0.0866687968,0.1944716424,0.0835752562,-0.0377032645]],"hackathon_name":"Great Uni Hackathon 2015","index":1089,"project_description":"It's freaking magicWe wanted to control things without an interface. Now we control a parrot drone with Muse headband. It's freaking magic. It also flips.Great Uni Hackathon 2015Keit Kollo\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 03:53 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Enchanted objects","project_tags":["python","android","java","bluetooth"],"project_url":"https:\/\/devpost.com\/software\/enchanted-objects","keywords":"control,without,wanted,things,parrot,muse,magic,interface,headband,freaking,flips,drone,also"},{"level_0":1090,"hack_vector":[[0.1443418264,-0.106718801,-0.0152965896,0.0502834208,-0.034124665,0.1596656293,0.1833287328,-0.031356331,0.0048689828,-0.0548089035,-0.0085768364,-0.0257224236,0.1134883761,-0.0523299873,0.0138638727,0.0507187359,0.2556445003,0.0399666317,0.0336082168,0.1255120039,-0.232670933,0.0035553037,-0.030871246,-0.0444507264,0.127880916,-0.015790699,-0.0417696722,-0.1792317033,-0.0077178278,-0.1083344147,0.0326379687,-0.1159252152,0.0546068251,-0.0684433952,-0.0076770582,-0.0161269009,0.1314822435,-0.1390608549,-0.0390508212,0.0460299216,0.0419027768,-0.1504676938,-0.156694755,-0.0658794418,0.0251871534,-0.0884665921,0.0200405661,-0.0236124452,-0.0388554148,-0.2179597914,-0.098434113,0.0122480821,-0.0932073593,-0.0602931492,-0.1636394858,0.1621024162,-0.1288001686,-0.0052246787,0.0320408195,-0.0469426438,-0.0609092265,0.011485518,0.0601169392,0.0328803025,0.120222114,-0.0040957583,-0.1269531399,-0.1628603786,0.0479450338,0.0333836973,0.0718280002,-0.0608299039,0.0063900459,-0.1286779344,-0.0337602086,-0.1099912375,0.1764575541,0.0193957705,0.0502079055,-0.1457905024,0.0952914059,0.1656517535,0.0177166332,0.1775823534,0.1202864572,0.1828478575,-0.1320739985,0.0122740129,-0.0236207154,-0.0962258428,-0.1294442415,0.0852181837,0.0586875044,-0.0235868245,0.0127310269,-0.0266376268,-0.122941941,0.2248062342,0.0479959957,-0.0728963614]],"hackathon_name":"Great Uni Hackathon 2015","index":1090,"project_description":"Feed of Meme Highlights of your eventAre you at an event? Would not you like to capture cool moments and create your own memes on the go!? YES!?Then MemeGrid is exactly what you need!!!No need for the registration, the only tool you need is an e-mail client, just attach picture to the e-mail, add text and SEND! It will be live in seconds.Great Uni Hackathon 2015Fizuli Valizada\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 03:49 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"MemeGrid","project_tags":["sendgrid","jquery","php5","html","javascript","ajax","css"],"project_url":"https:\/\/devpost.com\/software\/memegrid","keywords":"need,memegrid,mail,attach,capture,client,cool,create,event,exactly,go,like,live,yes,would,memes,moments,picture,registration,seconds"},{"level_0":1091,"hack_vector":[[0.149455294,-0.1065652147,-0.0434188917,0.0517471842,-0.0181439668,0.1457486302,0.2002438456,-0.0361008979,-0.0318337791,-0.0099778082,0.0127470493,-0.0644429401,0.1419285238,-0.0720436275,0.0584984086,-0.0047931219,0.2185968906,-0.0072941016,0.0428862683,0.121118255,-0.2411036938,0.0284922458,-0.0411692224,0.0003318174,0.1291656196,-0.0199488308,-0.0387170948,-0.1805689484,-0.0292335693,-0.0968410298,0.0796063393,-0.1343908012,0.032729011,-0.0797243416,-0.0227064379,-0.0196362473,0.1197324693,-0.1322712004,-0.048019208,0.0025539685,0.0629619583,-0.1271599382,-0.1639976799,-0.0292138029,0.0642281026,-0.048233252,0.0148415919,-0.0696613193,-0.0304537918,-0.2143267393,-0.1243166104,0.0133260973,-0.0957154185,0.0062729381,-0.2072426379,0.1566998959,-0.1371776164,-0.0262277983,0.0253619086,-0.0931969881,-0.0683740154,0.0220872238,0.080313459,0.035849195,0.1196137667,0.0124361496,-0.0997995734,-0.1231990606,0.0366576463,0.0319894366,0.0678265169,-0.0370394513,0.0233268738,-0.1195637956,0.015655335,-0.1157431155,0.1775093228,0.0114377942,0.0190081783,-0.1300034225,0.1141647696,0.1569631845,0.0522726327,0.1726371348,0.1044879854,0.1954434961,-0.0975806341,-0.0409331433,-0.0261755977,-0.0849938244,-0.1347729713,0.0583877899,0.0917045474,-0.032480754,-0.0039586988,0.0113506503,-0.1478020847,0.221821025,0.0213907883,-0.0671369657]],"hackathon_name":"Great Uni Hackathon 2015","index":1091,"project_description":"touchless control, a lot of fun, email services, paypal, challengeWe all love challenges, and this seemed a bit challenging.Starting from a drawing program (paint, GIMP) and create the maze of your choice, then send it as a challenge to a friend through our email services and he will receive a link to the WEB App (the aMaze-ing game). The game itself is controlled by Leap motion. You move trough the maze with hand gestures and have to get from Start to End.Making the Front and Back ends, configuring django, figuring out on how to configure flask as well.We are sending emails automatically, we have a donation page which has a form to send payment, working also with Paypal, We managed to get the Leap to take the right motions and work flawlessly.A lot about web programmingGetting it popular and making it better.Great Uni Hackathon 2015Nikolay Ivanov\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 03:38 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"aMaze","project_tags":["python","django","flask","braintree","html5","css3","javascript"],"project_url":"https:\/\/devpost.com\/software\/amaze","keywords":"maze,get,amaze,web,leap,game,send,challenges,making,works,end,ends,figuring,flask,form,flawlessly,email,friend,front,gestures"},{"level_0":1092,"hack_vector":[[0.1490096897,-0.1471621543,-0.0164508522,0.0655630901,-0.0475817844,0.1436262876,0.1746118963,-0.0224135462,-0.0027415021,-0.0330790766,-0.0093086399,0.0040490748,0.1238109618,-0.0537313186,0.0229923092,0.0533538423,0.2516505718,0.0353333689,0.0449736156,0.1128250584,-0.2370973229,0.0053942953,-0.0282620806,-0.0421651602,0.1522376388,-0.0143713215,-0.0478449501,-0.1842173338,0.0235475432,-0.1049581021,0.0246144962,-0.1219407842,0.0485043563,-0.064905785,-0.0016843,-0.0116838105,0.1216328293,-0.1436062902,-0.0390006788,0.0469432436,0.0343375318,-0.1576395929,-0.1689159274,-0.0607443154,-0.0129126469,-0.0716281757,0.0193504356,-0.0262799431,-0.017308671,-0.1923615485,-0.0781375766,0.009564505,-0.1032664776,-0.0723988712,-0.1611344963,0.1643939912,-0.1295074821,0.0159204975,0.0296000335,-0.0148411412,-0.0529292673,0.0299048927,0.0501436479,0.0619106628,0.1144891977,-0.0031950402,-0.1386776865,-0.1721193045,0.0393201485,0.0160453767,0.0867351219,-0.0585434958,0.0132249156,-0.1321172118,-0.0384205282,-0.1158115342,0.1732764691,0.0189631786,0.0767886564,-0.1407351047,0.1001158282,0.1648579538,0.020658629,0.1776179671,0.1334114224,0.1762204021,-0.14362216,0.0336764231,-0.0195136443,-0.0965788737,-0.0942740738,0.0973341689,0.0565392189,-0.0178020298,0.0461844802,-0.046991989,-0.1189187542,0.1941550225,0.0604272299,-0.0672864392]],"hackathon_name":"Great Uni Hackathon 2015","index":1092,"project_description":"Challenge yourself over the stock prices of your favourite company!Inspired by Flappy BirdPipes at BloomBird generated given stock prices of companies. Thanks to Bloomberg for giving access to the statistical data.Fun and addictive gameBloomBird will be a site where you can follow LIVE stock prices and enjoy your time!!!Great Uni Hackathon 2015Ramin Jafarov\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 03:10 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"BloomBird","project_tags":["bloomberg","php","javascript","html5","css3","jquery"],"project_url":"https:\/\/devpost.com\/software\/bloombird","keywords":null},{"level_0":1093,"hack_vector":[[0.1587696522,-0.1150035039,-0.0357923657,0.0414374322,-0.0238547754,0.1448120773,0.2105535269,-0.0389467031,-0.0139641073,-0.0265875254,0.0047741467,-0.0474406555,0.1320240945,-0.0654569194,0.0551947542,-0.002616338,0.2250279188,-0.0019535327,0.0442343019,0.1223998442,-0.2371625453,0.0310033131,-0.0383023843,-0.0161522944,0.1146429554,-0.0204969104,-0.0254282393,-0.1714458466,-0.0279168915,-0.1008705422,0.0637805387,-0.1278370023,0.0356997736,-0.0860616565,-0.0255280826,-0.0241492707,0.1242331043,-0.1325736642,-0.0575464442,0.0035007093,0.0603879951,-0.1222947389,-0.1410173327,-0.0443009213,0.0667947829,-0.0643843934,0.020776635,-0.0654809773,-0.0451117158,-0.2093517631,-0.1342955679,0.0079194019,-0.105062902,-0.0124099832,-0.1869478822,0.1485459507,-0.1287449002,-0.0367503501,0.0279559996,-0.075795427,-0.0657731891,0.0146225858,0.0805301294,0.0217839442,0.1136341318,0.0005697485,-0.1147134304,-0.1243213788,0.0298967734,0.034755379,0.0623981543,-0.0465950854,0.0150070181,-0.1263739169,0.0027027389,-0.1272206903,0.1836328357,0.0182577539,0.0125852032,-0.1449693143,0.1143282428,0.164234072,0.0318396874,0.183003217,0.1111929417,0.1995744556,-0.0980769396,-0.0159716941,-0.0163270812,-0.0832451358,-0.1395572722,0.0721788183,0.0897374004,-0.0166566614,-0.0058942614,-0.007035919,-0.1438958943,0.2326358408,0.0180520937,-0.06503544]],"hackathon_name":"Great Uni Hackathon 2015","index":1093,"project_description":"Wireless music player controlled with SMS messages. And a pin that when pulled plays music until you pay it to stop.Build something with Linkit ONE development board.  Also try other things like API and services providedWhen it turns on it establishes a GSM connection and uses a LCD display to print out reports. then when the connection is established we can control the color of the LCD or let it play music. There is also a physical pin that when disconnected triggers a music to play. The only way to stop it is by paying trough Braintree.Programming in arduino, Javascript, NodeJs, setting up local host, braintree and twilio. Making a nice box for it.It actually works. Learned so much that I can't believe it.Arduino, setting up stuff, Node,Js, JavascriptIt will annoy as many people as possible :)Great Uni Hackathon 2015Uros Zupan\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 03:12 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Sonic Rick","project_tags":["arduino","twilio","braintree","node.js","javascript","html5"],"project_url":"https:\/\/devpost.com\/software\/sonic-rick","keywords":"works,learned,play,connection,setting,javascript,lcd,braintree,arduino,also,music,let,established,js,like,linkit,inspiration,host,gsm,establishes"},{"level_0":1094,"hack_vector":[[0.133689329,-0.0796644613,-0.036967203,0.0343345664,-0.0207652692,0.1368518919,0.1967739165,-0.0261513609,0.0048382147,-0.0259426422,0.0155091956,-0.0807661712,0.1311508864,-0.054107327,0.0675439835,-0.0110118985,0.2058508396,0.0038855299,0.0348621532,0.1305036545,-0.2458874732,0.026664434,-0.0355028287,-0.0078523243,0.0874292627,-0.0175196137,-0.0179967713,-0.1673110425,-0.0288198777,-0.1051063389,0.064880088,-0.1210520416,0.0211916063,-0.0867720023,-0.003802215,-0.0324479565,0.106802687,-0.1474897712,-0.0750392973,-0.0259704255,0.0420308374,-0.117501758,-0.1252874732,-0.0444314554,0.0812950805,-0.0617039688,0.0048088538,-0.0772649124,-0.0322932377,-0.2068460435,-0.1634051353,0.0093892794,-0.09753263,-0.0039052102,-0.2113001645,0.1589981616,-0.1091710627,-0.0539904386,0.0479401946,-0.1264726371,-0.0803361535,0.0073038484,0.0870974734,0.028441688,0.0973628238,0.0360736027,-0.0863599703,-0.1187858135,0.0385857746,0.0378978513,0.0595039017,-0.0496585406,0.0336391367,-0.1128143668,0.0294356961,-0.137398243,0.1656600088,0.0048237867,-0.0131469676,-0.1373914331,0.1044699401,0.1587154567,0.0524865612,0.1733290851,0.0888869613,0.2029777765,-0.0808641464,-0.057904873,-0.0349464156,-0.0619997159,-0.1546569169,0.0525270067,0.1041064039,-0.0486022346,-0.0268222764,0.0320934728,-0.1675618589,0.2545059323,-0.0142819323,-0.0833785236]],"hackathon_name":"Great Uni Hackathon 2015","index":1094,"project_description":"Your face is your visit card!Managing your contacts is difficult, especially when you meet someone new. Should you ask for a mobile phone? Email address? Or maybe Skype nickname? Whatever way you choose, you will still find yourself linking that person on more social media afterwards. Why not do it in one go with an easy-to-use app?What if you have to meet new people for business all the time? Then, your life turns into endless flow of business cards with no real structure and a simple way to organise it! Our app aims to become your electronic business card library and your business card on the go: search both your home and work contacts easily and have your business card with you wherever you go. Avoid the hassle with paper business cards!A person downloads an app and goes through a simple sign-up process that allows to add personal and work contacts like Facebook, LinkedIn etc. (only Email Address is implemented right now). Afterwards, the person takes a personal picture to be used for face recognition (in future, the Face Recognition library will be also filled up with profile images from added social networks). Ready to go!Recognising someone and adding a their contacts is as easy as taking a picture of that person!Face recognition doesn't really work well - different camera configurations, different lighting or even haircut and glasses screwed up the process. Thus, in the future, we need to add more reliable identification techniques like Fingerprint recognition (when the devices are equipped appropriately) with a fallback to techniques like NFC, Bluetooth or QR Code scanning.Having a centralised server for all the functionality means that we can roll out updates and have total control over the core of our app. However, it also means that the app can't function offline or if the server goes down. Meanwhile, doing Face recognition on the device is difficult due to all the SDKs out there (some of which are limited to the processor chips, e.g., Snapdragon SDK).Using Ionic and Cordova for making an app was a really good choice due to rapid view design process, but the framework sometimes behaves unexpectedly on the actual device. Lack of on-device JavaScript debugging makes development quite a horrifying process.We were advised to have a look at Parse backend-as-a-service and it worked out really great for us. Our backend server is just a single file with less than 250 lines of code!Doing a complex app that interacts with a server, uses camera and Face recognition only by means of HTML5, CSS and JavaScript is exciting and is quite an accomplishment on its own. A couple of years ago we never could imagine using thick technology stack in such a way!We had no prior experience in Ionic or Face recognition, so we learnt a great deal. We applied Ionic framework to bootstrap a simple cross-platform app really quickly. We discovered Parse - great alternative to managing your own database. We figured out the ins and outs of Face recognition with current technologies.Refactoring! And lots of it! App in it's current state is very much a fragile prototype, so we need to improve it's code quality. Changing the app engine from Ionic to something like Xamarin.Forms (more native yet still cross-platform) will improve the performance and may give us a chance to use the some on-device Face recognition techniques.Adding more contact sources will always remain needed (especially right now, when we only have a single email) - integration with all the social networks like Facebook, Twitter, Google+ (for personal contacts) and LinkedIn (for work contacts) is crucial.What if you already have a collection of Business Cards? We could use Artificial Intelligence to smartly recognise your collection of paper Business Cards and automatically create an electronic entry with all the details (Name, Email, Age etc.)Limiting ourselves to Business Cards for people is quite boring! We could use the renowned iBeacon technology to implement Business Cards for Places. Why not add your favourite food place while you're there to keep track of latest updates and deals? :)Great Uni Hackathon 2015Eric Hripko\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 03:12 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Ice Breaker","project_tags":["parse","html","html5","css","css3","javascript","php","android","ionic","apache","ios"],"project_url":"https:\/\/devpost.com\/software\/ice-breaker-p7ifk","keywords":"business,app,recognition,face,contacts,cards,like,email,device,person,use,process,ionic,server,go,work,really,simple,card,could"},{"level_0":1095,"hack_vector":[[0.1490799785,-0.111647509,-0.0135357929,0.0538311116,-0.024144534,0.1612030566,0.199087888,-0.0526030511,-0.0280061886,-0.0058765947,0.0214546882,-0.0455070473,0.1397593766,-0.0720475018,0.044301521,0.0255193785,0.2432500273,0.0133697679,0.0471601747,0.1080388427,-0.2282319665,0.0474217199,-0.0382677279,-0.0340703465,0.126087144,-0.0234342124,-0.0394420996,-0.2031257898,-0.0120904166,-0.0895632878,0.070704475,-0.1312359422,0.0510418415,-0.0845498145,-0.0209983811,-0.0144236423,0.1303337812,-0.1309755594,-0.0394247249,0.0052130227,0.0401462577,-0.1597023159,-0.1694215536,-0.0357283801,0.0278097428,-0.0352586806,0.0131989643,-0.0547061078,-0.0222844016,-0.2055799365,-0.1048910618,0.0246382039,-0.1004166752,-0.0153004695,-0.183958143,0.1488025039,-0.1432819813,0.0047369008,0.0283860452,-0.0603745356,-0.0547061525,0.0181655679,0.0841731727,0.0528283678,0.1124212891,0.0016104279,-0.1027167439,-0.1444086432,0.0410951972,0.0310199205,0.0841593593,-0.0518763438,0.032162793,-0.1316545308,-0.0009081975,-0.1246119887,0.1713618785,0.0067425938,0.048536174,-0.1325379163,0.1289052963,0.1548046023,0.0545626692,0.1786553711,0.1182704046,0.1806747168,-0.1214177683,-0.0275311656,-0.0124389427,-0.0882691965,-0.1329729706,0.0658054799,0.0707836449,-0.0411966145,0.0154756848,-0.0121354479,-0.1235647798,0.1960710883,0.034455236,-0.0785555989]],"hackathon_name":"Great Uni Hackathon 2015","index":1095,"project_description":"Charity driven Social NetworkKarma is an application aimed at funding charity driven projects, and bringing together and sharing resources within the sector.\nThe model of the site is based on building up Karma for your account, thereby increasing your visibility on the site, and increasing your reputation to other members.The site is also aimed at Charity organisations, as a way to broadcast their projects, get funding from communities, and recruiting volunteers. Thus a karma based, reputation building social network would allow individuals to follow high profile individuals and\/or charities, and apply to volunteer positions, both to the benefit of the charity organisations and the individual person.Great Uni Hackathon 2015I worked on the backend, writing a ReSTful API for an android app.\nI wrote the backend in Flask, SQLAlchemy, and Postgres sql server.Hamish Hutchings\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 02:51 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Karma","project_tags":["python","html","java","android","flask"],"project_url":"https:\/\/devpost.com\/software\/ghu-hack","keywords":"karma,site,charity,individuals,reputation,increasing,building,organisations,based,funding,aimed,projects,communities,follow,driven,get,high,would,broadcast,bringing"},{"level_0":1096,"hack_vector":[[0.1522011906,-0.1312895864,-0.0378329419,0.028761128,-0.0088214548,0.1254186928,0.2112837136,-0.023176806,-0.0164995324,-0.0262955166,-0.0028403653,-0.0515770316,0.1240027547,-0.0566082485,0.0365753062,0.0062626479,0.2329067886,-0.0005968322,0.0306870919,0.140541181,-0.2585953474,0.0406107865,-0.0119888987,-0.0148874903,0.1314782202,-0.0206593387,-0.0267120525,-0.1785907447,-0.0132024325,-0.1148228496,0.0637840331,-0.1447878033,0.0388096347,-0.0714457482,-0.0017492382,-0.0585703701,0.1073188782,-0.1506993622,-0.0529645868,-0.016981218,0.0507751592,-0.1596568972,-0.1363805383,-0.0745274723,0.0650050044,-0.0617757998,0.0022588456,-0.0554147661,-0.0407953262,-0.1957530081,-0.1249489635,0.0054183989,-0.0985674709,-0.0174833778,-0.2004071772,0.1555378437,-0.1278863847,-0.0531353205,0.0439565256,-0.0965602621,-0.0775157362,0.0164172985,0.067413643,0.0160410311,0.0923046246,0.0261049513,-0.1201691702,-0.1230809614,0.0462915041,0.0525164232,0.0833675563,-0.0664222911,0.0338348486,-0.1067989022,0.0081375325,-0.1475182325,0.1346918941,0.0081085591,0.0309328679,-0.1190364808,0.1039203629,0.1519901752,0.0247621536,0.1939682961,0.0947546288,0.185140267,-0.1232671887,-0.0206345692,-0.0413417444,-0.0738317594,-0.1191566586,0.0662898123,0.0707764998,-0.0399108082,-0.0145274382,0.0185654368,-0.1595312208,0.2046905607,0.0131704658,-0.0615758598]],"hackathon_name":"Great Uni Hackathon 2015","index":1096,"project_description":"First Person 3D PacmanPlaying Pacman with a first-person view would be quite challenging. Not knowing how many enemies, where they could come from, and where the locations of the food items to collect would increase the difficulty level by a lot.The game was created using Unity. First the stage or map is designed. Food items are then generated on the board along with the enemies (Pacman ghosts and a Slenderman!) which will kill you upon contact. Powerup items periodically spawn on the map which allows Pacman to eat its enemies if met while Pacman is powered up! Enemies will run away from Pacman when she is in this mode! Take advantage of it! Upon collection of all the food items on the map, you are victorious!Automatically generating food items so that it is not generated within non-traversable space (Walls)\nDetection collision between game objects\nHow to correctly texture game objectsThe game works! Enemies kill Pacman upon contact, die if this happens when Pacman is powered up. Pacman wins if all the food items are successfully collected. A simple start and game over screen was also implemented to guide players on how to navigate in the game.Making a simple game in Unity!Possibly a compass\/radar function which helps guide players to where the remaining food items are\nPowerup items which let you detect nearby ghosts or sounds alarms \nMore levelsGreat Uni Hackathon 2015A little bit of everythingProject planner, Unity Engine expert and programmer.Obrien Sim\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 02:55 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Pacman Revisited","project_tags":["unity","c#","photoshop"],"project_url":"https:\/\/devpost.com\/software\/pacman-revisited","keywords":"pacman,items,game,food,enemies,map,upon,ghosts,generated,guide,simple,objects,works,first,players,powered,powerup,kill,contact,would"},{"level_0":1097,"hack_vector":[[0.1511868238,-0.1238162145,-0.0221634097,0.0419996567,-0.0318133496,0.1427281797,0.184509784,-0.0325993486,0.0020435757,-0.0534001403,0.0128194476,-0.0338715054,0.1273531914,-0.0604408085,0.0306421518,0.0386297107,0.2505676746,0.0152409542,0.0469972678,0.1199088842,-0.2420067936,0.0082475031,-0.0435612686,-0.0302905608,0.1084091812,-0.032122843,-0.0364932306,-0.1708275676,-0.0020181453,-0.1188546345,0.0376864038,-0.1063989252,0.0427264534,-0.0724973157,-0.0041394848,-0.020945359,0.1257822514,-0.1473484486,-0.0501052178,0.014334077,0.046069663,-0.1180301458,-0.1673100591,-0.0499697588,0.036812678,-0.0900673047,0.0285713375,-0.0475460738,-0.019173922,-0.2122659981,-0.112019293,0.0243421867,-0.1054460108,-0.0490929559,-0.187634334,0.1734950691,-0.126347661,-0.0252649914,0.0413863845,-0.0626055449,-0.0640584901,0.0178270005,0.071508579,0.0486542732,0.1140363961,0.0124926129,-0.1217746139,-0.1528379619,0.0330479331,0.0289338119,0.0734139308,-0.0436178222,0.0117517132,-0.1320427805,-0.017450856,-0.1130713373,0.1818513274,0.0169738084,0.0376148596,-0.138766408,0.0907460675,0.1630595773,0.0104288682,0.1751102805,0.1233802065,0.1836813241,-0.1202023178,-0.017341055,-0.0426797234,-0.0854168907,-0.1208276749,0.0830337703,0.0701083094,-0.0262358487,-0.0040698554,-0.0272600204,-0.1416349709,0.2178752124,0.0379784778,-0.080283761]],"hackathon_name":"Great Uni Hackathon 2015","index":1097,"project_description":"Easy bookkeeping of expenses between friendsCloqi make it easy for you and your friends to keep track of all your expenses when you e.g. are going on holiday together. Each time someone have an expense it can be added to the app and in the end a list can be send out to those who have to transfer money. The app will of cause make sure that the least amount of transactions are needed.Well... I don't like ExcelGreat Uni Hackathon 2015Rasmus Lunding\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 02:24 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Cloqi","project_tags":["android","sqlite","php","mysql"],"project_url":"https:\/\/devpost.com\/software\/cloqi","keywords":"app,make,works,keep,amount,cause,cloqi,easy,end,excel,expense,expenses,friends,going,holiday,inspiration,least,well,like,list"},{"level_0":1098,"hack_vector":[[0.1662513912,-0.1212845296,-0.026730882,0.0758899972,-0.0262766723,0.1428880095,0.1809559017,-0.0437455066,-0.0291221924,-0.0303913709,0.0081971809,-0.0290250257,0.1455456764,-0.0662168413,0.0446050577,-0.0049864734,0.2091371566,-0.0030195063,0.0582992733,0.1254239976,-0.2393727601,0.0204188116,-0.0297474395,-0.0224196762,0.1299522072,-0.0251001082,-0.0360028185,-0.176367566,-0.0149150677,-0.0839871392,0.0472366288,-0.1090862155,0.0454019196,-0.0648986176,-0.0197105687,-0.0236603227,0.1290178299,-0.1382214576,-0.0634365082,0.0296215322,0.0741014853,-0.1251319498,-0.1554740667,-0.0343191326,0.0234774537,-0.0502084196,0.0193411727,-0.0749785975,-0.0158929285,-0.2125889212,-0.1276371181,0.0217732731,-0.1163149849,-0.0091898395,-0.1846210659,0.1640107781,-0.1273315698,-0.0004737644,0.0258711744,-0.0594133437,-0.0563060008,0.020692708,0.0719899014,0.0467167944,0.1328894794,0.0080719832,-0.1190345883,-0.134836629,0.0141209168,0.0220983494,0.0701022074,-0.0351776667,0.002219646,-0.1362302005,0.0012395708,-0.105963178,0.1999803931,0.0076402603,0.0246253572,-0.1405104846,0.1114742979,0.1558380127,0.0306650791,0.1694416404,0.1268518865,0.2032154649,-0.0991820171,-0.0159769859,-0.0205133166,-0.0773843378,-0.1307756156,0.0768988505,0.0873429403,-0.0286663026,0.0216215551,-0.0305134263,-0.1425569355,0.2333055586,0.0331957974,-0.0642685369]],"hackathon_name":"Great Uni Hackathon 2015","index":1098,"project_description":"Tip here, tip there, tip everywhere....on AndroidAs a part time job i often lost out on stolen tips so relished this opportunity to change lives... TipAdvisor is awesomeBeacons detect the establishment you are in, Braintree then makes it easy to perform payments into the staff tip jar.First Hackathon, Android Studio and GitHub liked to collapse on us, Beacons had limited Android docsGenuine sense of accomplishment with what we have created, It works and It is ready to use!How to use Beacons, Braintree, Android Studio and the different style of coding a Hackathon demandsInteresting features to help us infer peoples opinions through tipping habits, gamification and basically the future is limitless.Great Uni Hackathon 2015Dan Alan\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 01:32 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"TipAdvisor","project_tags":["android","android-studio","braintree","parse","estimote","azure","java",".net","c#"],"project_url":"https:\/\/devpost.com\/software\/tipadvisor","keywords":"beacons,android,works,hackathon,studio,braintree,tipadvisor,use,us,infer,help,easy,habits,github,genuine,gamification,future,first,features,establishment"},{"level_0":1099,"hack_vector":[[0.1761555821,-0.1326017827,0.0150747215,0.1032650471,-0.0222521685,0.1897691041,0.1697853208,-0.0818511471,-0.0437395684,-0.0181837883,-0.0067922338,-0.0148816789,0.1467123181,-0.0897805318,-0.0074403924,0.0687066913,0.2497219443,0.0247800741,0.066230759,0.0775481239,-0.1816906631,0.0409545563,-0.0600573011,-0.0460374318,0.1797129512,-0.0404447503,-0.0793821886,-0.2061363906,-0.0207482427,-0.0515017286,0.0640135631,-0.1010756865,0.0998296291,-0.0576513298,-0.0593712404,0.0238775741,0.1573224217,-0.0917761773,0.0166176762,0.075007394,0.0702983588,-0.1616110951,-0.1969066411,-0.0118898759,-0.0374761671,-0.0232044104,0.0393296406,-0.0268741865,-0.0259908456,-0.1987618804,-0.0425456725,0.0473472178,-0.1091934592,-0.0094290245,-0.1140847653,0.1354406923,-0.1686562002,0.0627203211,-0.0185112413,0.0314172097,-0.031591665,0.0231224652,0.0578409508,0.0557393357,0.1402332932,-0.0388018638,-0.1257701516,-0.1676260829,0.0000569434,0.0208023507,0.0801338032,-0.0424225293,0.0042730016,-0.1494731456,-0.0422749817,-0.0395765789,0.2075589001,0.0086498717,0.0914850608,-0.1274736077,0.112312004,0.1365046501,0.0280935299,0.128823474,0.1315977871,0.1571525335,-0.1207724363,0.036903102,0.0197443329,-0.1214203611,-0.0860605761,0.0922435001,0.0016580578,-0.0002401575,0.058804933,-0.0798420012,-0.0549002178,0.1568583846,0.1105692312,-0.0563691147]],"hackathon_name":"Great Uni Hackathon 2015","index":1099,"project_description":"the concientious citizenGreat Uni Hackathon 2015I worked on the upload module in Flask\/Python, on the DB and on the Web Interface.I worked on mail integration APINikola Milosevic\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 01:16 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"eCitizen","project_tags":["css","html","python","javascript","bootstrap","flask","sqlite","google-maps","sendgrid","braintree"],"project_url":"https:\/\/devpost.com\/software\/greatunihackproject","keywords":"images,broken,community,local,problems,extract,helps,heatmaps,greatunihackproject,geolocation,fix,working,image,easily,data,could,communities,automatically,etc,improve"},{"level_0":1100,"hack_vector":[[0.1470765769,-0.1490238458,-0.0219163261,0.0569594018,-0.0401825272,0.1384232193,0.1802423745,-0.0365331396,-0.0023521765,-0.0580368638,0.0074484255,-0.0214597508,0.1383153498,-0.057195235,0.0409770086,0.0279952064,0.2351246923,0.0168350674,0.0382495932,0.1259096563,-0.239989385,0.004536984,-0.0374441296,-0.0355379246,0.1187948436,-0.0152926026,-0.0357996933,-0.1635465622,-0.0095791286,-0.1224571168,0.0376907364,-0.1166208982,0.0361561403,-0.0627623275,-0.0067444141,-0.0370006636,0.1241117716,-0.1505598128,-0.0545361005,0.0263304058,0.0608250573,-0.1122595444,-0.1514036059,-0.0514125749,0.0230854042,-0.0827472657,0.0326343924,-0.0431517549,-0.0463883393,-0.218076691,-0.1165856645,0.0234540217,-0.0972051024,-0.0592130572,-0.1746746004,0.171151191,-0.1115541682,-0.0181133822,0.0247692578,-0.052761469,-0.0568628795,0.0212901458,0.0604384691,0.0461999029,0.1125774533,0.0135377115,-0.1275827885,-0.1427211165,0.0236181729,0.021494152,0.0616569631,-0.0401627831,0.0083543435,-0.1318448037,-0.0214117412,-0.0980343148,0.1876355112,0.0258386713,0.0269708987,-0.1517609805,0.1037982032,0.1762741208,0.0118096741,0.1692098379,0.1317530572,0.1923554987,-0.115749009,-0.0111777205,-0.0356460102,-0.0837997049,-0.1161203906,0.0874879584,0.0876571015,-0.0186243057,0.0082409177,-0.0411860831,-0.1436560601,0.2317893654,0.028693011,-0.0678152218]],"hackathon_name":"Great Uni Hackathon 2015","index":1100,"project_description":"Quick chat up lines, and a quick get away!Struggling to break the ice?\nWe've all experienced that moment when we spot a pretty girl\/ hot guy and just don't know what to say? With IceBreaker, you are never left speechless - witty pickup lines at the flick of a wrist make sure you always have something to say! And if the conversation goes south, have a quick getaway with a fake phone call!\nFeatures:shake it offit aint easy being cheesygo to Alaska and break some iceGreat Uni Hackathon 2015akis makaras\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 19, 2015 12:55 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"IceBreaker","project_tags":["android-studio","java","xml"],"project_url":"https:\/\/devpost.com\/software\/icebreaker-fzlaa","keywords":"lines,icebreaker,say,pickup,phone,conversation,ice,call,break,getaway,go,know,learned,hot,guy,left,goes,wrist,girl,looking"},{"level_0":1101,"hack_vector":[[0.1590270698,-0.1157625988,-0.0435591415,0.0473311618,-0.0149653601,0.1226707995,0.1816368252,-0.022507729,-0.0141717065,-0.0074745277,0.0072092605,-0.0750312582,0.1536093503,-0.060595762,0.0751218125,-0.0141979298,0.1771795452,-0.011822829,0.0439402908,0.1243624985,-0.2482000291,0.0324955843,-0.0355445668,0.0028599948,0.115686886,-0.0368888676,-0.0227963198,-0.1719153821,-0.0365519822,-0.0801177695,0.0755294859,-0.1197971031,0.0255883653,-0.0779381245,-0.0185284875,-0.0192630086,0.1040191874,-0.1522946507,-0.0733004212,-0.0130732087,0.0464228168,-0.1310962439,-0.1439348906,-0.02065254,0.0581555702,-0.0520585515,0.0097612245,-0.0934238508,-0.0261863321,-0.212485671,-0.1693460345,0.0088455509,-0.1087652296,0.0118257049,-0.2160512358,0.1568677127,-0.1206122339,-0.0272889026,0.036909245,-0.1007648557,-0.0839396566,0.0287167504,0.0627457574,0.0407112278,0.0985599682,0.0275815204,-0.0941508189,-0.108455658,0.0171059892,0.011579019,0.0747469068,-0.0510981791,0.022710545,-0.1189475209,0.036924582,-0.1144364551,0.1881065667,-0.0040775347,-0.0027462807,-0.133972168,0.1139853448,0.1580628157,0.050782606,0.1605715901,0.096528925,0.2129443735,-0.0842943639,-0.0376234911,-0.0139270322,-0.0715113804,-0.1361380666,0.0630862564,0.1023591012,-0.0477485098,-0.0049055526,0.0018300493,-0.1597404182,0.2459369004,0.0038043428,-0.0706152469]],"hackathon_name":"MLH Landing","index":1101,"project_description":"Where should you host your next hackathon? Data mining and visualisation for broadening access to cool tech eventsThis was my first hackathon event, and I was immediately struck by how skilled and interested people were in tech. I love how hackathon events have recently exploded in popularity, but I think that promoting access to these events in super techy (but less advantaged) areas of Europe is important.I built a web crawler (Python, scrapy package) to get hackathon locations from the last 1.5 years from the hackerleague website. This didn't actually work out (curse dynamically loaded pages!), so I had to clean and regex some raw text data. Using R, I could visualise where hackathons are held across Europe and how often.Next, I wanted to build up a Europe-wide map of tech interest. I did this by mining tweets that had keywords such as \"hacking\", \"coding\", \"programming\" and \"analytics\" and visualising them on a map of Europe (the Twitter mining was done both using the arcgis\/esi map tool and by building a Twitter bot in Python). This let me see where there exist populations of techy geeks, and allowed me to compare it to the distribution of hackathon events.Finally, using the arcgis tool, I could visualise economic prosperity across regions in Europe and also compare this to provision of hackathons.Too many to list. Most notable among these is the difficulty of web crawling dynamically loaded pages and the lack of documentation for fetching information from json format tweets in python. I had to use workaround solutions for both of these problems (good old data cleaning and regex in both cases).I built my first ever web crawler, and my first ever Twitter bot! I did not actually think that I would have the time to teach myself these things and implement them within a day. Pleased with myself level: Kanye West.I mostly code in R, and typically only use Python for support tasks like restructuring weird data into nicer formats before I can upload it into a relational database. This project completely put me outside of my comfort zone and I've learned a lot.Most importantly, I need to figure out how to properly overlay the information sources so I can make prettier visualisations and analyse them quantitatively. Quantitative information would also allow us to track any effects of holding a hackathon in less catered to and advantaged areas (example sensationalist headline: \"holding a hackathon in a poorer area increases tech-related tweets by 400% for 1 month!\"). The twitter json result processing needs some serious love - this would involve using a proper json decoder rather than simple text mining. Also, the hackathon event data is probably quite incomplete and should be aggregated from multiple sources rather than just hackerleague.MLH LandingNatasha Latysheva\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:18 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Hackathon data meta-analysis","project_tags":["python","esri","twitter","r"],"project_url":"https:\/\/devpost.com\/software\/hackathon-data-meta-analysis","keywords":"hackathon,data,europe,using,twitter,python,web,tech,mining,tweets,information,map,would,json,first,also,events,pages,next,ever"},{"level_0":1102,"hack_vector":[[0.1288086921,-0.1323899925,-0.0115638711,0.0730545893,-0.0525145009,0.1526772678,0.1861291826,-0.0338416062,-0.0202001836,-0.0378814973,0.0087010777,0.0148903877,0.1351466179,-0.0737888813,0.0198261589,0.0740170479,0.2691194415,0.0366325006,0.0430544019,0.1094578132,-0.2143437117,0.0006577751,-0.037584126,-0.0622854568,0.1365503967,-0.0181283057,-0.062287759,-0.1865090579,0.0243301224,-0.0879202709,0.0381923839,-0.0913474709,0.0551723167,-0.05332876,-0.0194258839,0.0154613322,0.1378932148,-0.1169309318,-0.0008152879,0.0691756308,0.0467909612,-0.1440811306,-0.1875074208,-0.0390841514,-0.0065584988,-0.0657603592,0.0429046974,-0.0192139801,-0.0126485601,-0.2167241573,-0.0563396774,0.0202812012,-0.100479573,-0.071913749,-0.1467514932,0.1625580192,-0.1466823518,0.0377639234,0.0212400481,-0.0022585867,-0.0300246384,0.0372827612,0.0619536564,0.0721918717,0.1383436918,-0.0253260434,-0.1121775731,-0.1706167758,0.0356472582,-0.0053079301,0.0581580848,-0.0335262567,-0.0081144441,-0.1300002635,-0.059828382,-0.0941506028,0.1853091866,0.0118929809,0.0755835399,-0.1550732553,0.1101109013,0.1744461656,0.0114339227,0.1725779176,0.1349451691,0.181257382,-0.1383061409,0.039080862,-0.0127939098,-0.1139728799,-0.1138840765,0.0985159501,0.0379291736,0.0068231509,0.0454360358,-0.0548444949,-0.1022758707,0.1614489406,0.0778691694,-0.0570853986]],"hackathon_name":"MLH Landing","index":1102,"project_description":"Crowdsourcing home deliveryAn app to make day to day life a little bit easier.User can submit request for an item and queue payment for their friend to accept and buy their item using geofencing.MLH LandingBrandon Conn\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:07 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Grapple","project_tags":["python","flask","android","java","esri","braintree","paypal"],"project_url":"https:\/\/devpost.com\/software\/grapple","keywords":"item,day,user,app,bit,buy,easier,friend,geofencing,using,life,little,make,payment,queue,request,submit,accept"},{"level_0":1103,"hack_vector":[[0.1430656761,-0.0991028026,-0.023148533,0.0372349098,-0.0289465152,0.135579288,0.1998224854,-0.0278411824,-0.0275967587,-0.0108540552,0.0013954317,-0.0526646264,0.1372302622,-0.0700594559,0.0592035502,0.001527797,0.2088680714,0.0030557858,0.0557468459,0.1116980761,-0.2380586267,0.0320310295,-0.0297911353,-0.0249221418,0.0999863222,-0.0231672749,-0.031836044,-0.1705624759,-0.0097244978,-0.094147101,0.0556153767,-0.1299215406,0.0312797837,-0.0746583343,-0.0227858871,-0.0265030097,0.1296308637,-0.1387664378,-0.0661507323,0.0118219219,0.0491998345,-0.1453883499,-0.1375715435,-0.0430537462,0.0626169741,-0.054805845,0.0213426892,-0.0697847679,-0.0257474389,-0.2023242265,-0.1421888024,0.016355237,-0.1166932583,-0.0043130266,-0.2048317194,0.159457624,-0.1384743303,-0.0128265684,0.033704415,-0.082380183,-0.0657212213,0.0175948814,0.070758976,0.0454520881,0.120828107,0.0059757954,-0.0977804884,-0.1284646094,0.0322784185,0.028512042,0.0760241598,-0.0568457469,0.0112019209,-0.131073609,0.01732371,-0.1341979802,0.1736938804,0.0218281001,0.0135287549,-0.1421013474,0.1218191683,0.1593804657,0.0492435768,0.1722856611,0.1219302863,0.1950915754,-0.1053112373,-0.022609869,-0.0106941853,-0.0894079953,-0.1528223604,0.0616092496,0.0942770615,-0.0369252749,0.0064840564,-0.0028193607,-0.1506770998,0.2313882411,0.0223320685,-0.0676674545]],"hackathon_name":"MLH Landing","index":1103,"project_description":"A drone that can do art? No way!This season's MLH is all about flight. And we felt that MLH Launch wouldn't be complete without a fitting showcase from quadcopters. Nothing is more powerful than such an idea. Except an Apache helicopter. An Apache helicopter has machine guns AND missiles. It is an unbelievably impressive complement of weaponry, an absolute death machine.We pushed our limits, and built something incredibly unique.It all starts from a single text message from the audience. Transmitted through our Twilio servers, our Pebble lights up as a new request comes in! It's a request for more information on one of the Fortune 500 companies! Our pebble app hastily passes along the request to our backend, hammering away at the Bloomberg API, stripping it to it's core. This information is then passed to our friendly quadcopter \"Rekt\", who attempted to plot out the results on a graph. Alas, the tiny machine was simply too weak to carry the weight of the pen, and tumbled into the darkness.MLH Landingjchui\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:23 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Rekt","project_tags":["android","pebble","bloomberg","twilio","php","java","c"],"project_url":"https:\/\/devpost.com\/software\/artist","keywords":"request,machine,pebble,mlh,helicopter,information,apache,app,hammering,flight,fortune,friendly,api,graph,guns,hastily,attempted,along,idea,impressive"},{"level_0":1104,"hack_vector":[[0.1354427338,-0.0857715085,-0.0217921995,0.0317845084,-0.0136309145,0.1297561526,0.2050327063,-0.0234884322,-0.0281742997,-0.0072461152,0.0152452495,-0.0702864379,0.1351861954,-0.0757779256,0.0616801009,0.0119506316,0.2093508989,-0.0070941024,0.047277946,0.1295665205,-0.2345439643,0.0374539793,-0.0489003472,-0.0179296173,0.1078657731,-0.0326964706,-0.0322474353,-0.1801026762,-0.0237786938,-0.0842430666,0.0563209504,-0.1166410074,0.0349603295,-0.0864183903,-0.0254595168,-0.0079299109,0.1206809506,-0.1381534189,-0.0539654717,0.0022981954,0.0385058597,-0.1405122876,-0.1565261036,-0.0352217183,0.0705579743,-0.0615793951,0.0205063466,-0.0835010111,-0.0197649915,-0.2129779905,-0.13796556,0.0133424802,-0.1137508675,0.0109318914,-0.1976754963,0.1638681144,-0.1415618807,-0.0204474144,0.0358614549,-0.1043135598,-0.0706442446,0.0198152084,0.0793930888,0.0532635264,0.1166560799,0.0090587474,-0.0963238701,-0.1299604774,0.0373821743,0.0167311262,0.0682905912,-0.0540878847,0.0136466632,-0.118699275,0.0327789485,-0.1278363466,0.1759071648,-0.0011486497,0.0193988532,-0.1364055723,0.1268255413,0.1573527753,0.0633720234,0.1596813351,0.1048805639,0.1967956722,-0.098331973,-0.0375800282,-0.0146160806,-0.0823466629,-0.1587817818,0.0514125302,0.0918066874,-0.0432544425,-0.0102836806,0.0050676069,-0.1604938656,0.2177201062,0.0191335231,-0.0751681849]],"hackathon_name":"MLH Landing","index":1104,"project_description":"Use your queuing time productivelyWaiting too long for foodScanning QR codesThere were difficulties integrating using remote database server on AWS. There were constant connection refusals, which we suspect are due to the IP range of the wi-fi available at the venue. It worked well through a VPN in the end, but again - not everyone of us could connect to it, which forced us to use a localhost database and synchronise manually.The queuing system was made using polling through AJAX requests, which was difficult to code in general.At the outset we were pessimistic of our abilities to implement this. Integrating the APIs and taking it to the end felt like an achievement.Learned more about the security zones of AWS, in particular that the MySQL port should be open to all traffic.Javascript === vs == operator.It is possible to scan a QR code directly from a website, by having it access the phone's camera. Implementing this would free the users form relying on a QR scanner app.Integrating with the twilio API in the future could allow us to send text messages to alert users of their turn. Currently we rely on them keeping the website open in their phone's browser.The prices for jumping the queue are non-negotiable. It would be an improvement to have bidding on queue spots, as well as giving the merchant and queuers more information about the progress.MLH LandingJudy Duong\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:11 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"deQR","project_tags":["javascript","php5","git","bitbucket","mysql","amazon-web-services","ajax","braintree"],"project_url":"https:\/\/devpost.com\/software\/deqr","keywords":"qr,integrating,us,learned,users,queue,database,could,code,phone,aws,open,end,would,website,using,well,information,form,felt"},{"level_0":1105,"hack_vector":[[0.136666581,-0.1368126869,-0.0022367509,0.0750836655,-0.043431405,0.1531272382,0.197506249,-0.0371661261,-0.0388699919,-0.0208261143,0.0075120614,-0.0035523612,0.143449828,-0.0768641233,0.0230991114,0.066061765,0.2504496574,0.0143073983,0.0456204303,0.1161305159,-0.2194041908,0.0270296894,-0.0358444117,-0.0474516265,0.1567976028,-0.0154554993,-0.0622890405,-0.1826256365,0.0228729546,-0.0776591524,0.0415279046,-0.097303912,0.0604014546,-0.0574055947,-0.0262392573,-0.0028546539,0.1389886439,-0.122984387,-0.0145014636,0.0451520681,0.054360576,-0.156257689,-0.1799069047,-0.0407533124,0.0066878404,-0.0345380045,0.0240903441,-0.0341360159,-0.0002675531,-0.2041125596,-0.0726273209,0.0390404761,-0.1101695597,-0.0283719506,-0.1560792625,0.1591379791,-0.1467260122,0.0320649929,0.0182127524,-0.0262136776,-0.0374043807,0.0328353383,0.0697320178,0.0728118792,0.133941263,-0.0159394182,-0.1074315608,-0.1738217622,0.0353479199,0.0107280854,0.0601105392,-0.0327788591,0.0038565556,-0.1314931661,-0.0454400368,-0.0989769027,0.1786509454,0.0050007375,0.0640314743,-0.1387126297,0.1163325012,0.1636418998,0.0336807631,0.1679359376,0.1391688883,0.1887661964,-0.1299062073,0.0213527679,-0.0158148445,-0.1054073796,-0.1192175671,0.092494525,0.057143461,-0.011256895,0.0505916737,-0.0451847203,-0.1188843325,0.1868844777,0.0683561489,-0.0531812385]],"hackathon_name":"MLH Landing","index":1105,"project_description":"Change the way customers experience retail with BeaconCart with geolocation, mobile payments and accessibilityWe were inspired by the Estimote beacons potential to revolutionise the customer experience of any shops.\nGeolocation and a mobile application developed for to boost user experience are what make BeaconCart the app of the future.MLH LandingGiovanni Alcantara\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:24 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"BeaconCart","project_tags":["swift","xcode","php"],"project_url":"https:\/\/devpost.com\/software\/beaconcart","keywords":"experience,shops,application,beaconcart,beacons,boost,customer,developed,estimote,user,future,geolocation,inspired,make,mobile,potential,revolutionise,app"},{"level_0":1106,"hack_vector":[[0.1496168822,-0.1315894723,0.0156161571,0.0889848173,-0.0537509732,0.1546455175,0.1839250922,-0.0476303361,-0.040266443,-0.0201238133,-0.0075577521,0.0372550823,0.1216922626,-0.0796089843,0.0045878496,0.0818562359,0.2454305887,0.0437670127,0.0544198044,0.0789243206,-0.1751962453,-0.0008357491,-0.0585048571,-0.0700246245,0.1650474221,-0.0079839295,-0.0700785965,-0.1840301007,0.0330629684,-0.0648214743,0.0185485631,-0.0811423585,0.0822145641,-0.0584226027,-0.0446380489,0.0361797735,0.145536378,-0.0964377075,0.0002322407,0.1091660038,0.0503209494,-0.1500954479,-0.1759307683,-0.0280747954,-0.0514198579,-0.060424,0.050678134,-0.0062187007,-0.0147030968,-0.1856268197,-0.0228141081,0.0296545811,-0.1135430187,-0.0609658137,-0.0732249245,0.1518018842,-0.1680323184,0.0884038061,-0.0255637728,0.0568655543,-0.003921947,0.0455927029,0.0484670736,0.079222776,0.1571023762,-0.0683750138,-0.1469162852,-0.1698214561,0.0113936802,-0.0155184977,0.048878599,-0.0262794681,-0.0324681811,-0.1543044746,-0.0717154071,-0.057093095,0.2039682269,0.0275842752,0.1012438312,-0.1558115482,0.115603812,0.150323078,0.0283254404,0.121783331,0.1552491933,0.1575413495,-0.1376671195,0.0923537612,0.0251702126,-0.1269345731,-0.0880634338,0.1117396131,0.023562517,0.035289485,0.0860205591,-0.1065288931,-0.0621929765,0.1391846091,0.1111991256,-0.0371545181]],"hackathon_name":"MLH Landing","index":1106,"project_description":"An API to detect sarcasm.Sarcasm detector using natural language processing!MLH Landingmusalbas\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:35 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Sarcasm Detection as a Service","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/sarcasm-detection-as-a-service","keywords":"using,sarcasm,processing,natural,language,detector"},{"level_0":1107,"hack_vector":[[0.1297041178,-0.0903981403,-0.0369688831,0.036399845,-0.0255173948,0.1409753859,0.1805634648,-0.0293655135,-0.0026422653,-0.0477693826,0.0140920216,-0.0728628039,0.1301877052,-0.0683999509,0.0525782667,0.0216537416,0.2440626621,0.0090771588,0.0249851383,0.1350821108,-0.2363200188,0.0135808941,-0.0466556884,-0.0198169108,0.1057931632,-0.0190836918,-0.0293600224,-0.1762200743,-0.0388301611,-0.1044407412,0.0535898171,-0.1258468181,0.0389872268,-0.0762745813,-0.004546721,-0.0170553271,0.1142758131,-0.1345100403,-0.0472467057,0.0126021877,0.0380136557,-0.1219279617,-0.1688607335,-0.0441984534,0.0535820127,-0.0869457126,0.0216732398,-0.0550956577,-0.045699656,-0.2274669409,-0.1315369457,0.0017634558,-0.0848029926,-0.0366829187,-0.1862993985,0.1671600789,-0.1160587221,-0.0258138161,0.0291138012,-0.0983939394,-0.0699647069,0.0205072835,0.0732651353,0.0351384506,0.1057335958,0.0142971482,-0.1137864441,-0.1422553807,0.0458120629,0.0277912579,0.0644789189,-0.0467461273,0.0217575207,-0.1164880767,0.0161169134,-0.1144320369,0.1797686964,0.0065580425,0.024283126,-0.1318837553,0.1132427976,0.1769601405,0.0455633104,0.1755599678,0.0961345956,0.1785238534,-0.1102630422,-0.0376553237,-0.0315588638,-0.0898007751,-0.1319540292,0.0582512133,0.0867434517,-0.0389576927,-0.0055846381,-0.0030319323,-0.1572907269,0.2394574285,0.0253235567,-0.0906605944]],"hackathon_name":"MLH Landing","index":1107,"project_description":"Motivating you to vote in the UK General Election... by being a pain in the arseIt's a well known fact that not enough people turn out to vote, especially so with younger people. Therefore, we wanted to make a hack to make the process of getting the information you need to vote from start to finish simple, and be a pain in the arse to make you actually do so.Sign up with your name, mobile number and postcode. You'll get a confirmation text, then be shown the election page. On the left, you'll see the candidates for the election, with relevant info and links. On the right, there's a map that shows you directions on how to get to your polling station.Then, on the hour every hour from 7am until 10pm when polls close, you'll get a text reminding you to vote... until you check in at the polling station with your phone using NFC. If you don't vote, you get rickrolled... shame on you.MLH LandingFront End, Python, Javascript (Esri)Introduced to HTML\/JavaScript\/AJAX\/XML\/APIs\/Bootstrapping. Contributed to basic front-end work in HTML and AJAX, learned how to call an API. Learned JavaScript by completing the Codecademy course.Poppie Simmonds\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:05 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"motivote.xyz","project_tags":["amazon-web-services","twilio","esri"],"project_url":"https:\/\/devpost.com\/software\/motivote-xyz","keywords":"get,vote,make,text,hour,polling,election,station,people,left,hack,known,links,inspiration,information,info,map,younger,finish,getting"},{"level_0":1108,"hack_vector":[[0.1350395083,-0.1293304563,-0.0014228622,0.0706105903,-0.0505369902,0.148713991,0.1943482161,-0.0343935005,-0.0276588425,-0.0390595682,0.0062341709,0.0037676208,0.1340707392,-0.0726901293,0.0315254219,0.0624136962,0.2540202737,0.0358013771,0.0437281094,0.1035155281,-0.2048891187,0.0096395686,-0.0467935391,-0.0648936033,0.1352238804,-0.0157923102,-0.0492648035,-0.193001464,0.0020341058,-0.0812961906,0.035669744,-0.097831659,0.0595545694,-0.0734716207,-0.0336489938,0.0120420801,0.1390524209,-0.1186959296,-0.023869466,0.0714446008,0.0444834754,-0.1449381858,-0.1733688265,-0.0414271653,-0.0029423994,-0.0802445561,0.0446691811,-0.0223789867,-0.0268491041,-0.2158195078,-0.0651931018,0.0140391355,-0.1014450788,-0.0630733147,-0.1305198371,0.1633249521,-0.1557911783,0.0346559659,0.0069474173,-0.0100235622,-0.0368545651,0.0355336368,0.0568260103,0.0666822568,0.140585959,-0.0339057595,-0.1271337867,-0.1616123617,0.0300093871,-0.005028801,0.0480745435,-0.0429675467,-0.0127925724,-0.1364362091,-0.0515875369,-0.0886803642,0.1987786591,0.0157600846,0.0762766898,-0.1583366245,0.1155988052,0.1685296595,0.0313424096,0.1563348174,0.1360164136,0.1761139333,-0.1356539279,0.0426182635,-0.0000122128,-0.116830796,-0.1205646098,0.0962250233,0.0466558896,0.00634347,0.0418086536,-0.066796504,-0.1080800891,0.1806369871,0.0766787753,-0.0589334406]],"hackathon_name":"MLH Landing","index":1108,"project_description":"Ever wanted to know what the Mona Lisa sounds like?Sandstorm - DarudeCan convert any image to sound, and any .wav file to an image.It is possible to query twitter for pictures and play these.MLH LandingPatrick Schrempf\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:02 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"SoundStorm","project_tags":["java","twitter"],"project_url":"https:\/\/devpost.com\/software\/soundstorm","keywords":"image,works,wav,twitter,sound,sandstorm,query,possible,play,pictures,inspiration,file,darude,convert"},{"level_0":1109,"hack_vector":[[0.1294623166,-0.0920035467,-0.0345493406,0.0327846408,-0.0244225562,0.1230389997,0.2069611102,-0.019884631,-0.0194189027,-0.0071661905,0.0228336807,-0.0714295208,0.1456555575,-0.0775993392,0.0718866289,0.0063950499,0.2119020522,-0.0049165343,0.0394481644,0.1198485494,-0.2342362106,0.0330855958,-0.0393056981,-0.0203973241,0.1015968621,-0.0284218788,-0.0289449543,-0.17982921,-0.013482539,-0.0775745958,0.065709658,-0.1193602681,0.0188374352,-0.0776433945,-0.0142501807,-0.004450548,0.1106962562,-0.1382880062,-0.058957424,-0.0094259502,0.0295600779,-0.1371392906,-0.1532706767,-0.0229440797,0.0682541654,-0.0489871465,0.0144504663,-0.0798106939,-0.0139080007,-0.1996484101,-0.1489744782,0.0035214247,-0.1056481227,-0.0036353131,-0.2066039443,0.1590604037,-0.1278826743,-0.0203977097,0.0393614508,-0.1105430871,-0.0691866502,0.0306687728,0.0884918571,0.0608290657,0.1100468561,0.0220721588,-0.0842605308,-0.1257550567,0.0395885184,0.0124197584,0.0639842078,-0.0495923422,0.0294786859,-0.1134105027,0.035395354,-0.1405337602,0.1668743491,-0.010353595,0.0073568956,-0.1375900656,0.1365974993,0.1675910056,0.067217797,0.1754377633,0.0908442512,0.2014126778,-0.1007551849,-0.039327722,-0.0221542902,-0.0823435411,-0.1515501142,0.0516630523,0.0983763412,-0.0404807404,0.0032784359,0.0138735129,-0.1703995913,0.2258283049,0.0092095071,-0.0808624104]],"hackathon_name":"MLH Landing","index":1109,"project_description":"Use your website visitors to discretely process big data using JS. Solve big problems using a crowd-sourced cluster.Processing big data involves many machines working together in a cluster. These can be expensive and hard to set up. HitHive allows website owners to use their site's visitors to complete map-reduce tasks and process large datasets while they're browsing your site.Bloggers can make money with our platform without having to host visible advertisements. Academics and data scientists can use our platform to process data at a very low cost and none of the set-up pains.Users no longer have to view ads to support the creation of the content they consume, and instead help scientists solve the world's most difficult problems.Users of our service upload their map and reduce functions along with their dataset.  Once a payment is made, the user is given some generated javascript code to paste into their website. When people visit the website, their device will run this code and process small data chunks in the background using the provided functions.  We use python Flask with MySQL to host a restful api that allows browsers to retrieve and send back this data. Website viewers only get small portions of data at a time, which means they can view site content without any slowdown issues.We intend on expanding HitHive to provide a platform to replace online advertising and affiliate programs with a much more profitable solution for webmasters.MLH LandingNick Tikhonov\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:33 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"HitHive","project_tags":["javascript","python","flask","bootstrap","html","css"],"project_url":"https:\/\/devpost.com\/software\/hithive","keywords":"data,website,use,process,platform,hithive,site,users,small,set,scientists,host,content,code,functions,view,allows,reduce,map,without"},{"level_0":1110,"hack_vector":[[0.1344699413,-0.109685488,-0.0106078032,0.0500163063,-0.0456754901,0.1459380686,0.2146228105,-0.0271452609,-0.0325614996,-0.0202689581,0.0185352974,-0.0255399533,0.1318708211,-0.0793781653,0.0412838086,0.0464082025,0.2475672215,0.0245506223,0.040262904,0.1105198637,-0.2111963332,0.0255840179,-0.0551795699,-0.0526833907,0.1258078963,-0.0196833014,-0.0581279024,-0.1899370551,0.0040468602,-0.0777036771,0.0391174965,-0.1084047034,0.0399732254,-0.0725393742,-0.0196262784,0.0191285647,0.1389583349,-0.122101523,-0.0332193226,0.048003722,0.0349395499,-0.1590199322,-0.1817213893,-0.0370957479,0.024593899,-0.0661622733,0.0327751823,-0.0389618538,-0.0193327069,-0.2047186494,-0.0917627364,0.0212819465,-0.107428357,-0.0274872761,-0.1580992788,0.1619509757,-0.1487447321,0.0216586087,0.0242533851,-0.0542431809,-0.0546307079,0.0333731212,0.0762831643,0.0775895864,0.1292250305,-0.0137177445,-0.1114387363,-0.1556690335,0.0371843055,0.0014337398,0.0564937219,-0.0458157547,0.0090441154,-0.1291849762,-0.013771724,-0.1196104884,0.1766999066,0.0069923764,0.0616951548,-0.142848745,0.1312667131,0.1654804349,0.0545459837,0.1610625833,0.1239268854,0.1877794415,-0.1349298507,-0.0032032605,-0.0058011739,-0.1100641415,-0.1361401826,0.072608605,0.0652763024,-0.0205795784,0.0374010168,-0.0388773121,-0.1322264373,0.1944217682,0.0503626838,-0.0640533194]],"hackathon_name":"MLH Landing","index":1110,"project_description":"The internet of tomorrow is formulated from the data of todayWe have hacked the Braintree API to host a NoSQL database with capability to create unlimited documents, for completely free. We are abusing their custom fields on their customer object to store base58 encoded data. We have an API which allow you to allows any file type to be uploaded and downloaded.MLH LandingBraintree shenanigansManoj Nathwani\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:07 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"NoNoSQL","project_tags":["braintree","flask","python"],"project_url":"https:\/\/devpost.com\/software\/nonosql","keywords":"api,uploaded,database,allow,allows,base,braintree,capability,completely,create,custom,customer,data,documents,unlimited,downloaded,encoded,fields,file,free"},{"level_0":1111,"hack_vector":[[0.147594884,-0.1562673002,0.0192838367,0.0988048986,-0.0592698194,0.155311048,0.1579445451,-0.0508615226,-0.0333027281,-0.032243263,-0.01426725,0.0648388043,0.1217042506,-0.0783489794,-0.0227120686,0.1048446372,0.2612869143,0.0489153378,0.052247338,0.0699307173,-0.1648053825,-0.0090972073,-0.0506511368,-0.0742444023,0.1829143167,-0.0145749412,-0.0858416185,-0.1679550111,0.0490247607,-0.0745943189,0.0038626012,-0.077150315,0.0884934291,-0.0353709012,-0.0388491973,0.0299537946,0.1474562287,-0.0896333829,0.0227436163,0.1197308749,0.0566356145,-0.1384757161,-0.183738932,-0.0301000811,-0.0796559453,-0.0551585853,0.0554326475,0.0137188034,-0.0082717435,-0.167193532,0.0113836369,0.0414157622,-0.1030157208,-0.0824562833,-0.0611887276,0.1400942951,-0.157534644,0.091495879,-0.0233618077,0.0921672285,0.0024942497,0.0456889868,0.0343001075,0.0829617754,0.1468234956,-0.0654457584,-0.1458107084,-0.1831178367,0.0051557049,-0.0081385197,0.0594808348,-0.022055706,-0.0341032259,-0.1453541815,-0.0957457721,-0.035045471,0.1898746938,0.0305318162,0.1185103878,-0.1414966583,0.0964408144,0.1448932737,-0.005481564,0.1153266728,0.1623021215,0.1351122856,-0.1490849853,0.1054980308,0.0136268251,-0.1263096631,-0.0518175215,0.1197447926,-0.0050205351,0.0480341949,0.1021438539,-0.1203395128,-0.0398236327,0.1118214056,0.1351641715,-0.031745851]],"hackathon_name":"MLH Landing","index":1111,"project_description":"Stock tracking applicationMagicBloomberg\/TwilioMLH LandingDaniel Hodgson\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:56 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Stock Watch","project_tags":["bloomberg","bootstrap","flask","python","javascript"],"project_url":"https:\/\/devpost.com\/software\/stock-watch","keywords":"works,twilio,ran,magic,challenges,bloomberg"},{"level_0":1112,"hack_vector":[[0.1582794487,-0.1712073684,0.0209682714,0.0864786282,-0.048094552,0.1543699056,0.1717107296,-0.0576947853,-0.0385083072,-0.0156856161,0.0009186568,0.0360264331,0.1364027709,-0.0701942369,0.0129844574,0.0814464465,0.2544849813,0.0292464029,0.0555807576,0.090147689,-0.2064396143,0.007847283,-0.0529375114,-0.0598372892,0.1745221019,-0.0274167731,-0.0716856271,-0.1827139258,0.0373324938,-0.0817011148,0.0320768543,-0.0907592624,0.0686407387,-0.0530453734,-0.0376528613,-0.003578309,0.1318255663,-0.1147334129,-0.0015755848,0.0779241323,0.0499336794,-0.1479081362,-0.1781636626,-0.0366264917,-0.0465000495,-0.0398108847,0.0388565771,-0.0078994296,-0.0067730676,-0.1757635176,-0.0244546663,0.0375896096,-0.116405271,-0.0533371158,-0.1047809944,0.1560607105,-0.151403904,0.0787293017,-0.0132902563,0.0477229059,-0.0154888108,0.0398842767,0.0443784706,0.0850731656,0.1348342448,-0.0417414531,-0.1442186981,-0.1789259464,0.0078494931,0.0037342506,0.0714480728,-0.0251735691,-0.0080950186,-0.1516580582,-0.0786568597,-0.0656881556,0.1936825663,0.0243128538,0.0941496119,-0.1342954487,0.1135858521,0.1485811025,0.0080529144,0.1298688799,0.1708350182,0.1685008854,-0.1452682614,0.0677011311,-0.0041788742,-0.1024664938,-0.0755156279,0.1149129719,0.0391058512,0.0140329897,0.0793979913,-0.0969993323,-0.0618499294,0.1458313018,0.1051537916,-0.0386089124]],"hackathon_name":"MLH Landing","index":1112,"project_description":"Revisit the cult classic Duck Hunt with plenty of awesome features!Revisit the cult classic Duck Hunt with plenty of awesome features!MLH LandingEtiene Dalcol\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 05:50 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Landing Ducks","project_tags":["lua","python","love","bloomberg"],"project_url":"https:\/\/devpost.com\/software\/luaduckhunt","keywords":null},{"level_0":1113,"hack_vector":[[0.1398339719,-0.1285997182,-0.0168622024,0.0450357273,-0.039703425,0.1401950568,0.1858605295,-0.0362998731,-0.0158474725,-0.0384432636,0.0074113538,-0.0144388648,0.1204515547,-0.0624532439,0.0270108711,0.0614199452,0.2632640302,0.0357965901,0.0249374807,0.1302612722,-0.2306879759,0.009425316,-0.0426370725,-0.0503749028,0.133476764,-0.0088128708,-0.0447638854,-0.1839318126,0.0146061704,-0.1162855774,0.0263312105,-0.1192867383,0.0550347492,-0.0662610754,-0.005317593,-0.0207854062,0.1299813837,-0.1334410459,-0.0320659392,0.0460037664,0.0364693627,-0.1440079957,-0.1712380201,-0.0606097765,0.0061433297,-0.0858942494,0.035588149,-0.0238894522,-0.0329715423,-0.2079828084,-0.0784965828,0.0193533879,-0.0999941528,-0.0599252284,-0.1385649443,0.1772750914,-0.1270870864,0.0156772789,0.0165857468,-0.0310548972,-0.0424952731,0.0240034554,0.0572980233,0.0678671151,0.1212657019,-0.0107510192,-0.1381069273,-0.166285485,0.0383116491,0.014755697,0.0688295513,-0.0442863069,0.0070546614,-0.131344676,-0.0259531569,-0.1076137796,0.1746237427,0.0172347277,0.0698374435,-0.1440752298,0.113758713,0.1762896925,0.0254243799,0.1720110774,0.1352895349,0.168164432,-0.1467110217,0.012920754,-0.0286732223,-0.0949672982,-0.1130927876,0.0871205702,0.0621886924,-0.0237617902,0.0306947157,-0.0456751548,-0.1275640875,0.1940073669,0.0529183,-0.0741253272]],"hackathon_name":"MLH Landing","index":1113,"project_description":"Protects you by warning when you enter a dangerous areaNot all areas are safe. We want to help you avoid dangerous places. Helpful for tourists who are new to the area.The app shows the map around you using ESRI API, and splits it into neighbourhoods. The criminal zones (red) differ in color from safe zones (blue).MLH LandingDainis Gorbunovs\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:46 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"CrimeRadar","project_tags":["android","esri","android-studio","uk-police"],"project_url":"https:\/\/devpost.com\/software\/crimeradar","keywords":"zones,safe,closest,esri,emergency,differ,data,dangerous,criminal,crimeradar,contacts,color,call,helpful,blue,avoid,around,areas,area,app"},{"level_0":1114,"hack_vector":[[0.1478134245,-0.1152941138,-0.0096812695,0.0789231062,-0.0300012399,0.1572851688,0.2031014711,-0.0566461347,-0.0352999307,-0.0045526619,0.0200357307,-0.0176346842,0.1506313533,-0.0814447999,0.0516390577,0.0160985216,0.2296729088,0.0048286039,0.0519363694,0.1070577055,-0.2155657113,0.0358248651,-0.0497125685,-0.0305838622,0.1501615345,-0.0151226167,-0.0430644527,-0.1967822164,-0.0103500318,-0.0618699118,0.0615580939,-0.1194852218,0.0544384085,-0.0790452585,-0.0463155396,0.0035525283,0.1354458779,-0.1213679388,-0.0385952555,0.040979404,0.0496761836,-0.1455319375,-0.1662771851,-0.0223892853,0.0108453622,-0.0391228944,0.0211491659,-0.0555432737,-0.0225704405,-0.2092814595,-0.0985181481,0.0180052351,-0.1165390164,-0.0068383045,-0.1517268717,0.1563287079,-0.1580695361,0.0320250615,0.0003410359,-0.041469153,-0.0409913212,0.0333941206,0.0809970945,0.0631918237,0.1349677593,-0.0199125074,-0.114861995,-0.1402989924,0.0252211541,0.0086431727,0.0535409898,-0.0322385803,0.0098781371,-0.1398845762,-0.0134484638,-0.0929270238,0.2082450092,0.0063791079,0.0466623344,-0.1505666226,0.1374902129,0.1590506583,0.0595139936,0.1506922394,0.1301390529,0.188406691,-0.116035521,0.0026035325,0.007346374,-0.098719798,-0.1377941221,0.0763460472,0.0801936537,-0.0068779998,0.0441138297,-0.043412298,-0.1107987911,0.1905891746,0.0598085225,-0.0580171794]],"hackathon_name":"MLH Landing","index":1114,"project_description":"Brain Tree Payment, ArcGis MapAttempted to connect HTML based displays and animations to a pebble black and white developer model.Couldn't manage to develop an import environment beyond the existing Google directory for use with business templates in Pebble.js connected through a Blackberry Z10 and the Cloud-Pebble.Also ran into issue with long-term planning and the Brain Tree registration \"state\" for US Exclusive Developer\/SME Clients.MLH LandingMatthew Kallechy\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:45 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Pebble Lunar Evaluation","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/pebble-lunar-evaluation","keywords":"pebble,developer,ran,works,evaluation,environment,displays,directory,develop,connected,connect,cloud,clients,challenges,existing,business,brain,blackberry,black,beyond"},{"level_0":1115,"hack_vector":[[0.1469523013,-0.1134872437,-0.0288626924,0.0351910181,-0.0183929484,0.1399689913,0.2073762268,-0.0374576114,-0.0198907498,-0.0315670706,-0.0021636256,-0.0491357334,0.1255443841,-0.0622049943,0.0321172737,0.0104291989,0.2304833978,0.0060419892,0.0371976569,0.1260313541,-0.2466227412,0.0243397932,-0.0276014302,-0.0165931638,0.1238082424,-0.0186279994,-0.0372684151,-0.1699362397,-0.0190768503,-0.1187713146,0.0570629016,-0.1343645453,0.0376572125,-0.0722664148,-0.0050857519,-0.0462063625,0.1185403466,-0.1416790485,-0.0520163961,-0.0050605307,0.0629911274,-0.1428173184,-0.1456276774,-0.0544818565,0.0507199019,-0.0590351149,0.0094474601,-0.0591582656,-0.0371929891,-0.1940109134,-0.1176418737,0.0223420411,-0.0982835591,-0.0116109569,-0.2023577243,0.1626864523,-0.1423690021,-0.0319775976,0.0283791814,-0.0881901979,-0.068551749,0.0173625965,0.0689121112,0.0210331902,0.1159658358,0.0243431181,-0.1199766919,-0.1348313987,0.0356660336,0.0504639968,0.0771719068,-0.0534101427,0.0237581804,-0.1272543371,0.0120981541,-0.1242531911,0.1547232866,0.0126106683,0.0203493573,-0.1306448877,0.1060279757,0.1529269516,0.0410695449,0.1805942357,0.1178043112,0.1961391121,-0.1111743748,-0.0271809939,-0.0268781427,-0.0698778778,-0.1275609881,0.0715920553,0.0839907601,-0.0350337103,-0.0167186763,0.0025278996,-0.1601519287,0.2296838015,0.0128128333,-0.0613947585]],"hackathon_name":"MLH Landing","index":1115,"project_description":"...Shoot dem thangsWe created an awesome network based LeapMotion Shooter. The goal is to gain the highest score possible in a limited time frame using your hand as your weapon.\nThe game consists of 5 round of 20 seconds each - but in the demonstration we will play a shorter game in the presentation.\nThe cards are typical playing cards, with one minor difference the Joker is implemented with Christiano's beautiful face using his awesome sophisticated Face-API.It is a family friendly shooting game that you can play with your children - you don't shoot them, you shoot cards! (Gambling is bad kids!)To sum it all up: Finally there is a well working LeapMotion game providing hours and hours of fun. (Or maybe minutes..)One of our major features is the awesome spinning crosshair - the pinnacle of technical design.The sky is the limit!....Aaaand we probably should mention what the hack is.\nWe use a Leap-Motion to point to a position on a screen, and shoot cards down. The aim is to get points!MLH LandingDan Jones\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:00 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"LeapShooter","project_tags":["php","java","json","amazon-web-services","leap-motion"],"project_url":"https:\/\/devpost.com\/software\/leapmotion","keywords":"cards,game,awesome,shoot,leapmotion,one,using,face,hours,play,fun,gain,gambling,hack,get,goal,frame,hand,highest,implemented"},{"level_0":1116,"hack_vector":[[0.1455590576,-0.1531259269,0.0228855852,0.0966986865,-0.0620781593,0.1550113112,0.1601300985,-0.0477904566,-0.0342136882,-0.0303029902,-0.0123604871,0.0624375083,0.1195722818,-0.0777842999,-0.0204170756,0.109517321,0.2601679564,0.0483657904,0.050962273,0.0724377111,-0.1671602875,-0.0137753747,-0.0518872105,-0.0729818866,0.1815844327,-0.0160229336,-0.0847941488,-0.1668098867,0.0479975902,-0.0736001879,0.0054950807,-0.0678955838,0.0849492028,-0.0341671221,-0.042661678,0.03276195,0.1469099373,-0.0887245312,0.0278777983,0.1237562001,0.0528556071,-0.1365155429,-0.1849613041,-0.0333184972,-0.0738174245,-0.0613416359,0.0548185185,0.0153076351,-0.0039382945,-0.1751626134,0.0143909166,0.0397319682,-0.103866227,-0.080487974,-0.0666210949,0.1450196058,-0.1622177511,0.0935828984,-0.0252483319,0.09181007,0.0044521904,0.0417898521,0.0341902077,0.0847460702,0.1473121047,-0.0662186816,-0.1417249441,-0.1828666329,0.0079711135,-0.011300059,0.0536721386,-0.0218804106,-0.0402141474,-0.1401350051,-0.0967510566,-0.0352729037,0.1882335395,0.0277760979,0.1177126393,-0.1454725266,0.0948974639,0.1470026225,-0.0068311994,0.11662817,0.1611904055,0.1413741112,-0.1499845386,0.1042080075,0.0124790007,-0.1280128658,-0.0564850233,0.1171862781,-0.0038431482,0.0471662097,0.0949526876,-0.1153710783,-0.0379066989,0.1063199192,0.1381682605,-0.0309641827]],"hackathon_name":"MLH Landing","index":1116,"project_description":"Prediction for future carsMLH LandingTeodor Vicovan\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:31 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Fuel Price Prediction","project_tags":["html","jquery","css"],"project_url":"https:\/\/devpost.com\/software\/fuel-price-prediction","keywords":"overall,make,idea,getting,data,cost,cars,car,buy,bloombergs,best,api"},{"level_0":1117,"hack_vector":[[0.1684809774,-0.120075427,-0.0048523424,0.0861318558,-0.0343408249,0.1648869663,0.2010504454,-0.0503114834,-0.0480935648,-0.0060680835,0.0022933106,0.0056423601,0.1340003759,-0.0698298737,0.0156178689,0.0251633376,0.2482044846,0.019169677,0.0620574243,0.1092401668,-0.210805878,0.0166132785,-0.047370296,-0.0219979938,0.1837271154,-0.0140854437,-0.0619545467,-0.1992921382,-0.0027598226,-0.0827669054,0.0616925508,-0.1098895743,0.0608984083,-0.0776320994,-0.0309911463,0.0112849558,0.1353147328,-0.0995615721,-0.022392882,0.059363801,0.0771719739,-0.1553702652,-0.1747503579,-0.0417713411,-0.0147286402,-0.0466120429,0.0130706131,-0.0413043201,-0.0160812475,-0.1900794059,-0.0542469695,0.0289904866,-0.1158319488,-0.0250365343,-0.1483255327,0.1563962698,-0.1809546798,0.0383246727,-0.0055257212,-0.0043871724,-0.0220025945,0.034570463,0.0617405884,0.0438984446,0.1473744959,-0.0314317085,-0.1410370469,-0.1592699885,0.0207219385,0.0154813929,0.0583196431,-0.0254540388,-0.0026922235,-0.1314174533,-0.0310161952,-0.0814810693,0.1998702139,0.0043456485,0.0653812364,-0.1459179521,0.1008267701,0.1365454793,0.0398086421,0.1522437632,0.1455574334,0.1959222853,-0.117929168,0.0359533131,0.0061091576,-0.0900630802,-0.0946875736,0.0979479328,0.0495537519,0.012018133,0.0341467038,-0.0531578287,-0.1007432118,0.18139489,0.0722392872,-0.04243448]],"hackathon_name":"MLH Landing","index":1117,"project_description":"Oculus Rift, Braintree PayPal and Leap Motion shopping.Great Oculus Rift - Leap Motion - PayPal - Store created in Unity. Hand pick your item and add it too the virtual-reality basket. It almost works with Braintree API.MLH LandingJakub Fil\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:33 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Oculus-Leap-PayPal-Store","project_tags":["oculus","leap-motion","c++","unity"],"project_url":"https:\/\/devpost.com\/software\/oculus-leap-paypal-store","keywords":"works,virtual,almost,api,basket,braintree,created,great,hand,item,leap,motion,oculus,paypal,pick,reality,rift,store,unity,add"},{"level_0":1118,"hack_vector":[[0.1345133483,-0.0780483931,-0.0327674933,0.0480318666,-0.0278776959,0.1392248124,0.1970482618,-0.0273328703,-0.0166059062,-0.0163623579,0.0183147565,-0.0657973737,0.1369006783,-0.0660820603,0.0672339574,-0.0111289332,0.2071280181,0.0061283153,0.0449033454,0.1240831539,-0.2394573689,0.0298510399,-0.0396953002,-0.0120366197,0.0998177677,-0.0147255836,-0.0266691074,-0.1772676855,-0.0201376472,-0.0849933177,0.058780171,-0.1219946221,0.024174666,-0.0787251517,-0.0041238405,-0.0154474471,0.1205477193,-0.1408468634,-0.0718685836,-0.0009731137,0.0424754061,-0.1398118585,-0.145615235,-0.0348410271,0.0622676648,-0.0533427894,0.0105165401,-0.0750558823,-0.0238759052,-0.2103776783,-0.1460469067,0.0099770827,-0.1026439443,0.0015024338,-0.2105695158,0.1557724029,-0.1238822117,-0.0222260077,0.0409527197,-0.1066770107,-0.0663326755,0.0163923819,0.086058259,0.0412355401,0.1116350442,0.0216690376,-0.0906642377,-0.127526477,0.0422793403,0.0236475263,0.0598013513,-0.0458463281,0.0276962016,-0.1203696132,0.030163452,-0.1396683455,0.1709786654,0.0053383759,0.0094360635,-0.1388952583,0.1180277988,0.1603820622,0.0636119172,0.1744388491,0.0983939022,0.1998177767,-0.0988801569,-0.0416612774,-0.0261388179,-0.079776004,-0.1472951174,0.0545898117,0.1024016589,-0.0501836166,0.0017289685,0.0155104361,-0.1621331722,0.2410010546,0.0057046572,-0.0767390132]],"hackathon_name":"MLH Landing","index":1118,"project_description":"Keeping you safe, with a little help from CristianoEsri's traffic accident analytics inspired an app that keeps you safer when you're out on the road. Joe Nash's application which took you through better lit streets was another source of our inspiration.Soteira finds your current location data (HTML5 Geolocation) and then sends it to a JavaScript method which finds a 5 mile radius around you. It then pulls the number of crime incidents in your proximity from police.data API, and displays this to you in the form of a plottable.js graph and a few colourful, useful graphics.Depending on the number of crimes in your area, Soteira will send you and or your emergency contact (e.g. a parent) a Cristiano warning through MMS by Twilio.At first we wanted to make this an Android app which would continually pull your location and send out an MMS if you entered a \"bad\" location, but we have had limited experience with Android development and so decided to switch to a Web App.Esri was a great inspiration for our project, but we were unable to pull in relevant data for our project in this timeframe.We were able to use Twilio successfully for the first time, and several of our group members learned PHP. We're proud to have an App that can legitimately help people with real data, to possibly reassure worried parents and prevent some crime.Also very happy to have implemented Cristiano's Face APIPHP, Twilio, data.police API, bit of Android Development, Webapp Development, teamwork, sources of APIWe look to expand the app to use Esri's traffic accident information. We also want to go further into analytics about types of crime to provide more feedback to the user, and potentially prevent and reduce crime as whole. Porting Soteira into an Android\/iOS app is another possible goal.MLH LandingWorked on Twilio PHP API for  automated MMS, created the spritesJamie Webb\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:32 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Soteira","project_tags":["javascript","twilio","php","html","css","jquery"],"project_url":"https:\/\/devpost.com\/software\/soteira","keywords":"app,data,crime,soteira,android,api,inspiration,esri,development,twilio,location,use,mms,prevent,project,proud,police,pull,php,accident"},{"level_0":1119,"hack_vector":[[0.1421535164,-0.1110160798,-0.0344242044,0.0458068028,-0.0239356048,0.1380149573,0.1959041059,-0.0297294855,-0.0052964725,-0.0272630844,0.0042211544,-0.0501468703,0.1329917014,-0.0601809248,0.0478947572,0.0200714208,0.2251788974,0.0117875282,0.0408777185,0.1311354935,-0.2499799579,0.0257042442,-0.0326829925,-0.0191861615,0.1055214852,-0.0207565781,-0.0349528939,-0.1735968441,-0.0187957082,-0.107244581,0.0526063107,-0.1279643327,0.0368947983,-0.0766611844,-0.0072524073,-0.0305731371,0.1157092899,-0.1446011811,-0.0589720719,0.0010363887,0.0454062298,-0.1391091198,-0.14680098,-0.0521214604,0.0547265001,-0.0669615716,0.0101402085,-0.0613709763,-0.0372535177,-0.208896324,-0.130399704,0.0067931423,-0.1014288068,-0.0241227392,-0.19696486,0.1557066292,-0.1276345104,-0.0331635326,0.0419819094,-0.0819054842,-0.0720592439,0.0173591562,0.0718383491,0.0364302993,0.1030644476,0.0211990345,-0.1064754203,-0.1336749643,0.040613398,0.0295785442,0.0684592128,-0.0612244792,0.0223523229,-0.1204111651,0.0043536541,-0.129317224,0.1703204662,0.0065851607,0.0158266835,-0.1440021694,0.1096696034,0.1654857099,0.0395473167,0.180891633,0.104543522,0.2007852197,-0.1049136817,-0.0207161158,-0.023028288,-0.0808860809,-0.1384643316,0.0674970746,0.086742267,-0.0391563438,-0.0054781451,-0.0004013986,-0.1577973813,0.230292052,0.0199729521,-0.0727739334]],"hackathon_name":"MLH Landing","index":1119,"project_description":"Quickest device to device file transfer you've ever seenI was frustrated by the complexity of transferring a file between two computers. USB is a fiddle, Dropbox takes time to upload then download, Bittorrent-sync has a habit of not finding the other computer (and needs a long link to copy in the first place) and network shares require arduous setting up. I wanted something simpler, where you drag and drop, select a destination and press send. I succeeded in creating this kind of program.The program automatically finds similar programs on the LAN, or if for whatever reason this doesn't happen quick enough you input the ipaddress in a better format of 2 or 3 short words. Inputting 'big dog eats' is quicker and easier to remember than inputting 192.168.10.72.It's blazing fast and fixes a problem I have in my daily life.\nIt's called what it is because you can send something quicker than you can same the name. Send fiiile.Java Swing looks horrible. #booyahPolish. Will change to JavaFX maybe.\nSupport for multiple connected network interfaces.\nAdd ease of use functions, like remembering last few devices, or confirmation free transfer for even fewer clicks. \nAdding windows context menu options.MLH LandingDid all of itJonathan Burton\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:32 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Send Fiiile","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/send-fiiile","keywords":"send,quicker,something,fiiile,network,program,inputting,big,finding,easier,eats,enough,even,fast,adding,fewer,fiddle,add,file,finds"},{"level_0":1120,"hack_vector":[[0.1474547386,-0.152221173,0.0141334347,0.0923685804,-0.0587686598,0.163134262,0.1674773097,-0.0490462705,-0.0284833871,-0.0338643789,-0.0139671667,0.0524890088,0.1212847978,-0.0777151585,-0.0212042648,0.1070581526,0.2765371203,0.0541429333,0.0471066423,0.0750250369,-0.173256427,-0.0033617022,-0.0469324738,-0.0768754929,0.1750719696,-0.0115117393,-0.0860235766,-0.1751213223,0.044379957,-0.0836425647,0.0097065801,-0.0843968466,0.0872076079,-0.0411527418,-0.0330387205,0.0246597342,0.1456519216,-0.0936843604,0.0243485142,0.1100259274,0.051812686,-0.143887803,-0.1880194992,-0.0338184908,-0.0682551116,-0.0603809617,0.0498786457,0.0141062764,-0.014356561,-0.174314335,0.0069404803,0.0415802747,-0.0937564448,-0.0890512988,-0.0700579137,0.1379140615,-0.1544488221,0.0797878802,-0.0136611573,0.0827229097,-0.0026284799,0.0438396111,0.0387306847,0.0784749985,0.1432529837,-0.0591809154,-0.1409110725,-0.1837508082,0.0140999099,-0.0015672091,0.066028595,-0.0271312147,-0.0297792424,-0.1432812065,-0.0939998701,-0.0458247438,0.1813242733,0.0320314467,0.1171370372,-0.1418979019,0.0977266729,0.14993532,-0.0027934813,0.1257916689,0.1561047882,0.1366503537,-0.1530356258,0.0956381932,0.0093712304,-0.126007542,-0.0583429895,0.1153960153,-0.0055492604,0.041253332,0.0912237391,-0.10511861,-0.0472267009,0.1188772544,0.1234561726,-0.0387420468]],"hackathon_name":"MLH Landing","index":1120,"project_description":"Location based ask me anythingsomethingMLH LandingCharlie Dowler\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:03 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Ask Me Anywhere","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/ask-me-anything","keywords":"works,something,ran,proud,next,learned,inspiration,challenges,ask,anything,accomplishments"},{"level_0":1121,"hack_vector":[[0.173965022,-0.1419551224,-0.0146111026,0.0657202154,-0.0427475683,0.1362576634,0.1941111833,-0.026298929,-0.038240198,-0.0028324472,0.0007778153,-0.0097255092,0.1470295191,-0.071582213,0.0469367728,0.0300782435,0.2242868841,0.0084433407,0.0479149558,0.1094917804,-0.2394984066,0.0010080225,-0.0416494757,-0.0383156687,0.148038879,-0.0298216715,-0.0476105139,-0.1773225367,0.0165806971,-0.085079357,0.0349144675,-0.1046055183,0.0437133983,-0.0637682155,-0.0341932811,-0.0051869978,0.1197326332,-0.1426469535,-0.0491407365,0.0512081236,0.0526317582,-0.132143259,-0.1587659717,-0.0266077276,0.0089858081,-0.0593044348,0.0298637245,-0.0571655594,-0.0058569312,-0.1941609085,-0.0964984968,0.0111958869,-0.1237466484,-0.0265539251,-0.1536034346,0.1735201627,-0.1452682167,0.0289167222,0.0044949264,-0.0213996079,-0.0444481522,0.0322630703,0.058104571,0.0700063854,0.1379666477,-0.0168749727,-0.1334258616,-0.1460620165,0.0138946678,0.0062554544,0.0701674595,-0.0346315131,-0.0119306929,-0.1447201222,-0.0160642248,-0.1114735529,0.1956241578,0.0187860653,0.0454788059,-0.1364928782,0.1297625154,0.1644240618,0.0305594318,0.1468408853,0.1405207664,0.1993707865,-0.1172150299,0.0355264619,-0.0050503896,-0.0964511111,-0.1115644053,0.0926681161,0.0662964657,-0.0062116333,0.0431561731,-0.0536596142,-0.1267767549,0.2029116601,0.0626709759,-0.0507904924]],"hackathon_name":"MLH Landing","index":1121,"project_description":"To be amused or bemusedEEG technology itself.Muse records electrical activity along wearers scalp. Our program \"tries\" to sonify different wavelengths of received frequencies.The muse reference was not complete. EEG data is very difficult to interpret.Learning bits and bobs about brainwavesCool stuff about brain wavesWe are interested in trying something similar with different-more accurate EEG scanner.MLH LandingMatthew Clark\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:20 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Not Amused","project_tags":["muse","processing"],"project_url":"https:\/\/devpost.com\/software\/amused","keywords":"eeg,muse,different,works,interpret,inspiration,frequencies,electrical,difficult,data,cool,complete,challenges,brainwaves,brain,bobs,bits,amused,along,activity"},{"level_0":1122,"hack_vector":[[0.1593250781,-0.1480233371,0.0031971876,0.0953840092,-0.0488130003,0.1714225411,0.1704764813,-0.0620934702,-0.0377318226,-0.0266052336,-0.0100517124,0.0292858575,0.1297277659,-0.0758726522,0.0026590105,0.0711245239,0.2547642887,0.0389384329,0.0558176562,0.0764587745,-0.182964772,0.0094558802,-0.049413044,-0.059860684,0.1768959314,-0.0164808556,-0.0781747401,-0.1763345152,0.0229914468,-0.0723260343,0.0289200246,-0.101078473,0.0812727883,-0.0454973616,-0.0434097387,0.0136100771,0.154425174,-0.0978712663,0.0063629951,0.0960598886,0.0707714036,-0.1502794474,-0.185968101,-0.0290339235,-0.051609505,-0.0463514179,0.0507442281,-0.0079127112,-0.0247137416,-0.1861309409,-0.0243965946,0.043065507,-0.1037501097,-0.0489394069,-0.0994461328,0.1424949616,-0.1567641497,0.0714550167,-0.0092140706,0.057886444,-0.0191312134,0.031543795,0.0436936542,0.0647301599,0.1420074701,-0.048849687,-0.1393548846,-0.1777112037,0.0082877241,0.0084393732,0.0730911419,-0.0313867591,-0.0151338922,-0.1539906114,-0.0660328791,-0.0527181216,0.2001311183,0.0293270536,0.101822421,-0.1373153776,0.1060606986,0.1510213912,0.0089037279,0.1370238811,0.1622990966,0.1510406882,-0.1472527683,0.0723110661,0.0136123244,-0.1195343211,-0.0701800808,0.1111055836,0.018152358,0.0212436728,0.0884081051,-0.1009579226,-0.0601263456,0.1569431275,0.1064699963,-0.0416968204]],"hackathon_name":"MLH Landing","index":1122,"project_description":"A Taylor Swift lorem ipsumbaelor.iorequests lyrics based on something from the taylor swift apieverythingstuffwhy am i doing thismake it workMLH LandingShad Jahangir\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:13 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Swiftsum","project_tags":[],"project_url":"https:\/\/devpost.com\/software\/swiftsum","keywords":"works,work,api,baelor,based,challenges,everything,inspiration,io,learned,lyrics,make,next,proud,ran,requests,something,stuff,swift,swiftsum"},{"level_0":1123,"hack_vector":[[0.1760303527,-0.1473643929,-0.0122606587,0.0739455,-0.0407307334,0.1578554809,0.1820851266,-0.051052589,-0.0338167027,-0.0315339975,0.0049407817,-0.0149427066,0.1497400701,-0.0834705606,0.0355906039,0.0386297777,0.2367437035,0.0054727588,0.0540230833,0.1050617769,-0.2137895525,0.0031136593,-0.0565096177,-0.0308004469,0.1625405699,-0.028028449,-0.0551095419,-0.1680565774,-0.0086580124,-0.0851133615,0.0459536128,-0.1000231281,0.052000016,-0.0643703789,-0.0406703651,0.000627343,0.1360426247,-0.1275708377,-0.0345549583,0.0436666906,0.0675230399,-0.1087173894,-0.170140624,-0.0127812596,0.0017982194,-0.0619968958,0.0361137129,-0.0426165126,-0.0185476951,-0.2138963789,-0.0875641182,0.0342616513,-0.1153919026,-0.0313140303,-0.1459711045,0.1669016033,-0.1471646428,0.0308624227,-0.0073672258,-0.0163025782,-0.0369914249,0.0430709496,0.0564057194,0.0646047294,0.1363925338,-0.0182483997,-0.1355416477,-0.1520094872,-0.0035350665,0.0049578687,0.0673298016,-0.0162149537,-0.0050349548,-0.1477667987,-0.0274091568,-0.069332771,0.2130060345,0.0142620644,0.0460263751,-0.1440169662,0.1143276468,0.1608623117,0.0237265006,0.1438303739,0.1445557922,0.1906359196,-0.1116353348,0.0182737801,-0.0095190089,-0.0941481069,-0.1056131423,0.0977640375,0.07137575,0.0052759228,0.0461348072,-0.064312607,-0.1002537534,0.213500306,0.0713987127,-0.0559347495]],"hackathon_name":"MLH Landing","index":1123,"project_description":"Just a bunch of little hacks that happened along the MLHLandingWe just tried to make some stuff work that we didn't know how.yesRFL apis are shitit worksa bit of arduino and other stuffweddingMLH LandingDid the HTML Canvas \/ JavaScript stuff.Uros Zupan\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:12 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Us3","project_tags":["arduino"],"project_url":"https:\/\/devpost.com\/software\/us2","keywords":"stuff,works,yes,make,apis,arduino,bit,challenges,inspiration,know,learned,proud,next,ran,rfl,shit,tried,us,wedding,work"},{"level_0":1124,"hack_vector":[[0.149893254,-0.13318941,-0.0112193935,0.0540091805,-0.0305957086,0.1515541226,0.1792844832,-0.0433008038,-0.0249859802,-0.0386302397,-0.0009196998,-0.0309507679,0.1443725079,-0.0805469304,0.031787876,0.046150934,0.2443350852,0.0108982082,0.0497358367,0.1202214584,-0.2135214955,0.0187806766,-0.0499393381,-0.0307267196,0.1613156199,-0.0230371635,-0.0452053472,-0.1711883694,-0.0114857676,-0.0951165706,0.0390074812,-0.1149540991,0.0597726442,-0.0642785057,-0.0340397097,-0.0059822723,0.1383831501,-0.1239759773,-0.0290262792,0.0328949057,0.0567350723,-0.126565665,-0.1722232699,-0.0326591134,0.0121520702,-0.0685635582,0.0351924151,-0.0338097699,-0.0259929858,-0.2123769224,-0.0989487022,0.0301378593,-0.1119025648,-0.0341526642,-0.1553936303,0.1583230048,-0.1461914182,0.0114017464,0.0075706327,-0.0309223551,-0.0413407572,0.0363908447,0.0554227456,0.0549460948,0.1273464561,-0.0115223043,-0.1292739958,-0.1693061888,0.0138494875,0.0136627266,0.0705037415,-0.0390030667,0.0012006712,-0.1307436824,-0.01765237,-0.0746159926,0.1965416223,0.0071643293,0.0517991558,-0.1502793729,0.1091672406,0.1693969816,0.0298812874,0.1659880579,0.1302375644,0.1765662134,-0.1241500601,0.0176333655,-0.0154966675,-0.0993061438,-0.1125260815,0.0866610259,0.069301039,-0.0053177099,0.0367346033,-0.0585554652,-0.1308207512,0.2204184532,0.0640432611,-0.0752013177]],"hackathon_name":"MLH Landing","index":1124,"project_description":"Potato to go!Farmers have excess process that the supermarket won't take, so someone better hadFarmers put up what they've got, you buy it and pick it upBreaking all the CSS by removing two linesFixing the CSS by replacing the two linesDon't remove that line of CSS or it breaksI dunno, the pub?MLH LandingI made the HTML and CSS loveliness.William Mathewson\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 05:59 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"potago","project_tags":["esri","ruby-on-rails","ruby","javascript","braintree"],"project_url":"https:\/\/devpost.com\/software\/potago","keywords":"css,learned,lines,farmers,js,two,breaks,buy,challenges,breaking,bower,excess,bloody,fixing,genuinely,got,hate,inspiration,better,integrating"},{"level_0":1125,"hack_vector":[[0.1402041316,-0.1091369912,-0.0091202501,0.0759185478,-0.0539222583,0.1609770656,0.1907262802,-0.044962842,-0.0235074684,-0.042718973,0.0033406445,0.0228601303,0.1369071603,-0.0717450231,0.0158736464,0.065771997,0.2575320899,0.0338303484,0.0470887497,0.1044826657,-0.1938633472,-0.0060454123,-0.0525180995,-0.0565994531,0.147549808,-0.0090330904,-0.0539397113,-0.1764954925,0.0105455499,-0.0802169442,0.0250223111,-0.0948407054,0.0688862354,-0.0560355484,-0.015077618,0.0198703725,0.1498702615,-0.1050155386,-0.020265108,0.0846219435,0.0590675883,-0.1406903863,-0.1730744839,-0.0304523502,-0.0171647631,-0.0717357621,0.0444475934,-0.0185759459,-0.0291854162,-0.2068901062,-0.0531304404,0.0096457889,-0.1017715409,-0.0673880503,-0.122909151,0.1525715292,-0.1527491212,0.0471217856,0.0066989474,0.0094465055,-0.0218649227,0.0337297618,0.0551111437,0.0574757494,0.1486597955,-0.0390835516,-0.1387492865,-0.1757451892,0.0339047983,-0.000685457,0.0490125269,-0.0352513827,-0.022035962,-0.1448080987,-0.06412597,-0.0860314518,0.2047553658,0.0173562132,0.0784025565,-0.1534391344,0.1017162055,0.1665377617,0.0199314263,0.1492179334,0.1398242265,0.1675011814,-0.1398888826,0.0617832057,0.0028636225,-0.1268224716,-0.1126379892,0.1048203558,0.0427542441,0.0166561473,0.0632127151,-0.0717611015,-0.0956592709,0.1926292628,0.0899739563,-0.046678517]],"hackathon_name":"MLH Landing","index":1125,"project_description":"An online PA to manage your calls when you can'tWe wanted to create something that was useful and used Twilio's APIsMLH LandingLaura Brewis\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:01 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"callmanageme","project_tags":["python","django","bootstrap","twilio","html","css","javascript"],"project_url":"https:\/\/devpost.com\/software\/callmanageme","keywords":"wanted,useful,used,twilio,something,create,apis"},{"level_0":1126,"hack_vector":[[0.1645812988,-0.1456929743,-0.0113801509,0.0718260333,-0.0522841625,0.1625922918,0.1831956208,-0.0473717488,-0.0096888337,-0.0392810479,-0.0184794981,0.0035691524,0.1254866868,-0.0702379048,0.0188284703,0.0697850734,0.2500676215,0.0412223265,0.0419694558,0.1067076996,-0.2174948454,-0.0055759833,-0.0411397777,-0.0646118224,0.148898989,-0.0164493658,-0.0501585007,-0.183193177,0.0056000259,-0.0874814913,0.0215955824,-0.101481095,0.0668743178,-0.0690444559,-0.036258772,-0.0141290994,0.1331531852,-0.1299337,-0.0301067792,0.0777289197,0.0607027188,-0.1322878897,-0.1622989923,-0.0444018543,-0.0019581621,-0.0690811351,0.0445953049,-0.0195969902,-0.0376394764,-0.2084963173,-0.0739086047,0.0236186255,-0.1049110815,-0.0726247802,-0.1191571951,0.1677404791,-0.127021119,0.0390833281,-0.0042063938,0.0175108165,-0.0312416553,0.0161066055,0.0434567481,0.051947888,0.1408047229,-0.0328225903,-0.1372156739,-0.1585624665,0.0221942253,0.0118429624,0.067628324,-0.0409937538,-0.021861814,-0.1520054042,-0.0583789386,-0.0745078474,0.1967021972,0.0308226999,0.0577135161,-0.1491645873,0.1085848361,0.1690806001,0.0118559683,0.1563305557,0.141314432,0.1861139089,-0.1174270883,0.0639961883,0.0032603105,-0.0987831205,-0.0969324559,0.102630794,0.0466106609,0.0101928981,0.0472465046,-0.0713378116,-0.0912552997,0.2008656859,0.0739063472,-0.0572286397]],"hackathon_name":"MLH Landing","index":1126,"project_description":"It's Chinese Whispers with Twilio, and optionally Urban Dictionary. What more do you need to know?It's literally just Chinese Whispers with Twilio.There are three modes:MLH LandingMark Ormesher\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 05:51 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Twilio Chinese Whispers","project_tags":["twilio","bootstrap","jquery","php","html","css","javascript","json","digitalocean","kimono"],"project_url":"https:\/\/devpost.com\/software\/twilio-chinese-whispers","keywords":"autopilot,dictionary,modes,chinese,file,interactive,linux,literally,words,word,standard,suggesting,three,twilio,urban,whispers,players"},{"level_0":1127,"hack_vector":[[0.1397690624,-0.0990851745,-0.022693146,0.0494742244,-0.0347807482,0.1396606117,0.2019315511,-0.0237596482,-0.0229477771,-0.0140306754,0.0188635141,-0.0447402485,0.1469522715,-0.0688187554,0.0645266548,0.0157526024,0.2307883054,0.0043609864,0.0427275971,0.1229702011,-0.2403315902,0.0205617789,-0.0348876342,-0.0317939781,0.1176190227,-0.0248659812,-0.0317182541,-0.1860212684,-0.0030995659,-0.0936351269,0.0587643869,-0.1106066331,0.0335780941,-0.0793243945,-0.0115182353,-0.0081845168,0.124012135,-0.1348297447,-0.0517882369,0.0095420573,0.0459521674,-0.1377594173,-0.1542265415,-0.0301189031,0.0494862124,-0.0502197668,0.0178912748,-0.0656761527,-0.009027157,-0.2098851651,-0.1220317706,0.0115527194,-0.1072375253,-0.0181889329,-0.1966176629,0.1662669182,-0.1349581033,-0.0063162129,0.0377633944,-0.0789628327,-0.0562696308,0.0220766813,0.0812388435,0.0528472438,0.1254042536,0.0074833413,-0.0950418338,-0.143607378,0.0387856103,0.0167653486,0.0656690225,-0.0410710759,0.0100666434,-0.1258427203,0.0027654984,-0.1319158077,0.1768752635,0.0070498274,0.0205473956,-0.1404476613,0.1178284734,0.1662017107,0.0495560206,0.1714599431,0.1123097315,0.1983825415,-0.1059533283,-0.0136913694,-0.0180920828,-0.0888017341,-0.1465345025,0.0672264397,0.0880026817,-0.0259052385,0.0075756689,-0.000163922,-0.1451951563,0.2160312086,0.0267408825,-0.071468398]],"hackathon_name":"MLH Landing","index":1127,"project_description":"A unique, innovative approach to two-step authentication.Login systems nowadays are too tedious for our daily lives and hence we created an easier way to access websites. And what better way to do that than our own gestures.Wave interprets patterns of movement through your mobile device to generate a unique key, allowing you to log into your desired websites. Wave works with all of the most popular sites (Facebook, Google, Twitter etc. ), and gives incredibly consistent and accurate results.Wave was tested extensively over the course of the weekend, and was designed to be extremely intuitive for new users to operate. Our backend team has also worked really hard to create a fast interface for user authentication.MLH Landingjchui\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 05:54 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Wave","project_tags":["node.js","socket.io","html5","css3","jquery","java","android"],"project_url":"https:\/\/devpost.com\/software\/wave-dtn7j","keywords":"wave,websites,way,works,fast,easier,etc,extensively,extremely,facebook,gestures,generate,desired,gives,google,hard,device,daily,designed,incredibly"},{"level_0":1128,"hack_vector":[[0.1402041316,-0.1091369912,-0.0091202501,0.0759185478,-0.0539222583,0.1609770656,0.1907262802,-0.044962842,-0.0235074684,-0.042718973,0.0033406445,0.0228601303,0.1369071603,-0.0717450231,0.0158736464,0.065771997,0.2575320899,0.0338303484,0.0470887497,0.1044826657,-0.1938633472,-0.0060454123,-0.0525180995,-0.0565994531,0.147549808,-0.0090330904,-0.0539397113,-0.1764954925,0.0105455499,-0.0802169442,0.0250223111,-0.0948407054,0.0688862354,-0.0560355484,-0.015077618,0.0198703725,0.1498702615,-0.1050155386,-0.020265108,0.0846219435,0.0590675883,-0.1406903863,-0.1730744839,-0.0304523502,-0.0171647631,-0.0717357621,0.0444475934,-0.0185759459,-0.0291854162,-0.2068901062,-0.0531304404,0.0096457889,-0.1017715409,-0.0673880503,-0.122909151,0.1525715292,-0.1527491212,0.0471217856,0.0066989474,0.0094465055,-0.0218649227,0.0337297618,0.0551111437,0.0574757494,0.1486597955,-0.0390835516,-0.1387492865,-0.1757451892,0.0339047983,-0.000685457,0.0490125269,-0.0352513827,-0.022035962,-0.1448080987,-0.06412597,-0.0860314518,0.2047553658,0.0173562132,0.0784025565,-0.1534391344,0.1017162055,0.1665377617,0.0199314263,0.1492179334,0.1398242265,0.1675011814,-0.1398888826,0.0617832057,0.0028636225,-0.1268224716,-0.1126379892,0.1048203558,0.0427542441,0.0166561473,0.0632127151,-0.0717611015,-0.0956592709,0.1926292628,0.0899739563,-0.046678517]],"hackathon_name":"MLH Landing","index":1128,"project_description":"An online PA to manage your calls when you can'tWe wanted to create something that was useful and used Twilio's APIsMLH LandingLaura Brewis\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 06:01 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"callmanageme","project_tags":["python","django","bootstrap","twilio","html","css","javascript"],"project_url":"https:\/\/devpost.com\/software\/callmanageme","keywords":"wanted,useful,used,twilio,something,create,apis"},{"level_0":1129,"hack_vector":[[0.1645812988,-0.1456929743,-0.0113801509,0.0718260333,-0.0522841625,0.1625922918,0.1831956208,-0.0473717488,-0.0096888337,-0.0392810479,-0.0184794981,0.0035691524,0.1254866868,-0.0702379048,0.0188284703,0.0697850734,0.2500676215,0.0412223265,0.0419694558,0.1067076996,-0.2174948454,-0.0055759833,-0.0411397777,-0.0646118224,0.148898989,-0.0164493658,-0.0501585007,-0.183193177,0.0056000259,-0.0874814913,0.0215955824,-0.101481095,0.0668743178,-0.0690444559,-0.036258772,-0.0141290994,0.1331531852,-0.1299337,-0.0301067792,0.0777289197,0.0607027188,-0.1322878897,-0.1622989923,-0.0444018543,-0.0019581621,-0.0690811351,0.0445953049,-0.0195969902,-0.0376394764,-0.2084963173,-0.0739086047,0.0236186255,-0.1049110815,-0.0726247802,-0.1191571951,0.1677404791,-0.127021119,0.0390833281,-0.0042063938,0.0175108165,-0.0312416553,0.0161066055,0.0434567481,0.051947888,0.1408047229,-0.0328225903,-0.1372156739,-0.1585624665,0.0221942253,0.0118429624,0.067628324,-0.0409937538,-0.021861814,-0.1520054042,-0.0583789386,-0.0745078474,0.1967021972,0.0308226999,0.0577135161,-0.1491645873,0.1085848361,0.1690806001,0.0118559683,0.1563305557,0.141314432,0.1861139089,-0.1174270883,0.0639961883,0.0032603105,-0.0987831205,-0.0969324559,0.102630794,0.0466106609,0.0101928981,0.0472465046,-0.0713378116,-0.0912552997,0.2008656859,0.0739063472,-0.0572286397]],"hackathon_name":"MLH Landing","index":1129,"project_description":"It's Chinese Whispers with Twilio, and optionally Urban Dictionary. What more do you need to know?It's literally just Chinese Whispers with Twilio.There are three modes:MLH LandingMark Ormesher\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 05:51 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Twilio Chinese Whispers","project_tags":["twilio","bootstrap","jquery","php","html","css","javascript","json","digitalocean","kimono"],"project_url":"https:\/\/devpost.com\/software\/twilio-chinese-whispers","keywords":"autopilot,dictionary,modes,chinese,file,interactive,linux,literally,words,word,standard,suggesting,three,twilio,urban,whispers,players"},{"level_0":1130,"hack_vector":[[0.1397690624,-0.0990851745,-0.022693146,0.0494742244,-0.0347807482,0.1396606117,0.2019315511,-0.0237596482,-0.0229477771,-0.0140306754,0.0188635141,-0.0447402485,0.1469522715,-0.0688187554,0.0645266548,0.0157526024,0.2307883054,0.0043609864,0.0427275971,0.1229702011,-0.2403315902,0.0205617789,-0.0348876342,-0.0317939781,0.1176190227,-0.0248659812,-0.0317182541,-0.1860212684,-0.0030995659,-0.0936351269,0.0587643869,-0.1106066331,0.0335780941,-0.0793243945,-0.0115182353,-0.0081845168,0.124012135,-0.1348297447,-0.0517882369,0.0095420573,0.0459521674,-0.1377594173,-0.1542265415,-0.0301189031,0.0494862124,-0.0502197668,0.0178912748,-0.0656761527,-0.009027157,-0.2098851651,-0.1220317706,0.0115527194,-0.1072375253,-0.0181889329,-0.1966176629,0.1662669182,-0.1349581033,-0.0063162129,0.0377633944,-0.0789628327,-0.0562696308,0.0220766813,0.0812388435,0.0528472438,0.1254042536,0.0074833413,-0.0950418338,-0.143607378,0.0387856103,0.0167653486,0.0656690225,-0.0410710759,0.0100666434,-0.1258427203,0.0027654984,-0.1319158077,0.1768752635,0.0070498274,0.0205473956,-0.1404476613,0.1178284734,0.1662017107,0.0495560206,0.1714599431,0.1123097315,0.1983825415,-0.1059533283,-0.0136913694,-0.0180920828,-0.0888017341,-0.1465345025,0.0672264397,0.0880026817,-0.0259052385,0.0075756689,-0.000163922,-0.1451951563,0.2160312086,0.0267408825,-0.071468398]],"hackathon_name":"MLH Landing","index":1130,"project_description":"A unique, innovative approach to two-step authentication.Login systems nowadays are too tedious for our daily lives and hence we created an easier way to access websites. And what better way to do that than our own gestures.Wave interprets patterns of movement through your mobile device to generate a unique key, allowing you to log into your desired websites. Wave works with all of the most popular sites (Facebook, Google, Twitter etc. ), and gives incredibly consistent and accurate results.Wave was tested extensively over the course of the weekend, and was designed to be extremely intuitive for new users to operate. Our backend team has also worked really hard to create a fast interface for user authentication.MLH Landingjchui\n          started this project\n\n          \n            \u2014\n            \n\n                Apr 12, 2015 05:54 AM EDTLeave feedback in the comments!Log in\n      or\n      sign up for Devpost\n      to join the conversation.","project_name":"Wave","project_tags":["node.js","socket.io","html5","css3","jquery","java","android"],"project_url":"https:\/\/devpost.com\/software\/wave-dtn7j","keywords":"wave,websites,way,works,fast,easier,etc,extensively,extremely,facebook,gestures,generate,desired,gives,google,hard,device,daily,designed,incredibly"}]